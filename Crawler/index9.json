[{"method_name": "getType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getType() {        return type;    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiveGiftMsgRequest.java", "stars": "1", "class": {"name": "GiveGiftMsgRequest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setType", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(int type) {        this.type = type;    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiveGiftMsgRequest.java", "stars": "1", "class": {"name": "GiveGiftMsgRequest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getIsNewApp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getIsNewApp() {        return isNewApp;    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiveGiftMsgRequest.java", "stars": "1", "class": {"name": "GiveGiftMsgRequest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setIsNewApp", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIsNewApp(int isNewApp) {        this.isNewApp = isNewApp;    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiveGiftMsgRequest.java", "stars": "1", "class": {"name": "GiveGiftMsgRequest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPlatform", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Platform", "snippet": "    public Platform getPlatform() {        return platform;    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiveGiftMsgRequest.java", "stars": "1", "class": {"name": "GiveGiftMsgRequest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setPlatform", "params": ["Platform"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPlatform(Platform platform) {        this.platform = platform;    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiveGiftMsgRequest.java", "stars": "1", "class": {"name": "GiveGiftMsgRequest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        return \"GiveGiftRequest{\" +                \"userId=\" + userId +                \", giftId='\" + giftId + '\\'' +                \", count=\" + count +                \", type=\" + type +                \", isNewApp=\" + isNewApp +                \", platform='\" + platform + '\\'' +                '}';    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiveGiftMsgRequest.java", "stars": "1", "class": {"name": "GiveGiftMsgRequest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildClient", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ElasticMeta", "snippet": "    public static ElasticMeta buildClient(String[] endPoints, String username, String password){        HttpHost[] httpHosts = new HttpHost[endPoints.length];        for(int i = 0; i < endPoints.length; i++){            httpHosts[i] = HttpHost.create(endPoints[i]);        }        RestClientBuilder restClientBuilder = RestClient.builder(httpHosts);        CredentialsProvider credentialsProvider = null;        if(StringUtils.isNotBlank(username) && StringUtils.isNotBlank(password)){            credentialsProvider = new BasicCredentialsProvider();            credentialsProvider.setCredentials(AuthScope.ANY,                    new UsernamePasswordCredentials(username, password));        }        //Set only one thread        CredentialsProvider finalCredentialsProvider = credentialsProvider;        restClientBuilder.setHttpClientConfigCallback(httpClientBuilder -> {                    if(null != finalCredentialsProvider){                        httpClientBuilder                                .setDefaultCredentialsProvider(finalCredentialsProvider);                    }                    return httpClientBuilder.setDefaultIOReactorConfig(IOReactorConfig.custom().setIoThreadCount(1).build());                });        return new ElasticMeta(restClientBuilder.build());    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/ElasticSearch.java", "stars": "23", "class": {"name": "ElasticSearch", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getAllIndices", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "        public List<String> getAllIndices() throws IOException {            List<String> indices = new ArrayList<>();            Request request = new Request(\"GET\", \"_cat/indices\");            request.addParameter(\"format\", \"JSON\");            Response response = restClient.performRequest(request);            List<Map<String, Object>> list = Json.fromJson(response.getEntity().getContent(), Map.class);            list.forEach( v ->{                String index = String.valueOf(v.getOrDefault(DEFAULT_INDEX_NAME, \"\"));                if(StringUtils.isNotBlank(index) && !index.startsWith(\".\")){                    indices.add(index);                }            });            return indices;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/ElasticSearch.java", "stars": "23", "class": {"name": "ElasticMeta", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getTypes", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "        public List<String> getTypes(String index) throws IOException{            List<String> types = new ArrayList<>();            Request request = new Request(\"GET\", index +\"/_mappings\");            Response response = restClient.performRequest(request);            Map<String, Map<String, Object>> result =                    Json.fromJson(response.getEntity().getContent(), Map.class);            Map<String, Object> indexMap = result.get(index);            Object props = indexMap.get(DEFAULT_MAPPING_NAME);            if(props instanceof Map){                Set keySet = ((Map)props).keySet();                for(Object v : keySet){                    types.add(String.valueOf(v));                }            }            return types;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/ElasticSearch.java", "stars": "23", "class": {"name": "ElasticMeta", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getProps", "params": ["String", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Map<Object,Object>", "snippet": "        public Map<Object, Object> getProps(String index, String type) throws IOException{            Request request = new Request(\"GET\", index + \"/_mappings/\" + type);            Response response = restClient.performRequest(request);            Map<String, Map<String, Object>> result =                    Json.fromJson(response.getEntity().getContent(), Map.class);            Map mappings = (Map)result.get(index).get(\"mappings\");            Map propsMap = mappings;            if(mappings.containsKey(type)){                Object typeMap = mappings.get(type);                if(typeMap instanceof Map){                    propsMap = (Map)typeMap;                }            }            Object props = propsMap.get(FIELD_PROPS);            if(props instanceof Map){                return (Map)props;            }            return null;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/ElasticSearch.java", "stars": "23", "class": {"name": "ElasticMeta", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "ping", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void ping() throws IOException{            Response response = restClient.performRequest(new Request(\"GET\", \"/\"));            int code = response.getStatusLine().getStatusCode();            int successCode = 200;            if(code != successCode){                throw new RuntimeException(\"Ping to ElasticSearch ERROR, response code: \" + code);            }        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/ElasticSearch.java", "stars": "23", "class": {"name": "ElasticMeta", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "close", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void close() throws IOException{            this.restClient.close();        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/ElasticSearch.java", "stars": "23", "class": {"name": "ElasticMeta", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "put", "params": ["String", "File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void put(String key, File file) {\t\tlong currentTime = System.currentTimeMillis();\t\tfile.setLastModified(currentTime);\t\tloadingDates.put(file, currentTime);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/disc/impl/LimitedAgeDiscCache.java", "stars": "74", "class": {"name": "LimitedAgeDiscCache", "extends": "BaseDiscCache", "implements": null, "modifiers": ["public"]}}, {"method_name": "get", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "File", "snippet": "\tpublic File get(String key) {\t\tFile file = super.get(key);\t\tif (file.exists()) {\t\t\tboolean cached;\t\t\tLong loadingDate = loadingDates.get(file);\t\t\tif (loadingDate == null) {\t\t\t\tcached = false;\t\t\t\tloadingDate = file.lastModified();\t\t\t} else {\t\t\t\tcached = true;\t\t\t}\t\t\tif (System.currentTimeMillis() - loadingDate > maxFileAge) {\t\t\t\tfile.delete();\t\t\t\tloadingDates.remove(file);\t\t\t} else if (!cached) {\t\t\t\tloadingDates.put(file, loadingDate);\t\t\t}\t\t}\t\treturn file;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/disc/impl/LimitedAgeDiscCache.java", "stars": "74", "class": {"name": "LimitedAgeDiscCache", "extends": "BaseDiscCache", "implements": null, "modifiers": ["public"]}}, {"method_name": "doPush", "params": ["ByteBlock"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doPush(ByteBlock byteBlock) {        try{            if(byteBlock.getByteSize() > blockSize){                throw DataXException.asDataXException(FrameworkErrorCode.RUNTIME_ERROR, \"the size of byte block is too big\");            }            long startTime = System.nanoTime();            this.queue.put(byteBlock);            waitWriterTime.addAndGet(System.nanoTime() - startTime);        }catch(InterruptedException e){            Thread.currentThread().interrupt();        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/memory/MemoryStreamChannel.java", "stars": "23", "class": {"name": "MemoryStreamChannel", "extends": "StreamChannel", "implements": null, "modifiers": ["public"]}}, {"method_name": "doPull", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "ByteBlock", "snippet": "    protected ByteBlock doPull() {        try{            long startTime = System.nanoTime();            ByteBlock block = this.queue.take();            waitReaderTime.addAndGet(System.nanoTime() - startTime);            return block;        }catch(InterruptedException e){            Thread.currentThread().interrupt();            throw new IllegalStateException(e);        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/memory/MemoryStreamChannel.java", "stars": "23", "class": {"name": "MemoryStreamChannel", "extends": "StreamChannel", "implements": null, "modifiers": ["public"]}}, {"method_name": "size", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int size() {        return this.queue.size();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/memory/MemoryStreamChannel.java", "stars": "23", "class": {"name": "MemoryStreamChannel", "extends": "StreamChannel", "implements": null, "modifiers": ["public"]}}, {"method_name": "isEmpty", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEmpty() {        return this.queue.isEmpty();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/memory/MemoryStreamChannel.java", "stars": "23", "class": {"name": "MemoryStreamChannel", "extends": "StreamChannel", "implements": null, "modifiers": ["public"]}}, {"method_name": "clear", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {        this.queue.clear();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/memory/MemoryStreamChannel.java", "stars": "23", "class": {"name": "MemoryStreamChannel", "extends": "StreamChannel", "implements": null, "modifiers": ["public"]}}, {"method_name": "close", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() {        super.close();        //push the byte block size 0        try {            this.queue.put(ByteBlock.TERMINATE);        } catch (InterruptedException e) {            Thread.currentThread().interrupt();        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/memory/MemoryStreamChannel.java", "stars": "23", "class": {"name": "MemoryStreamChannel", "extends": "StreamChannel", "implements": null, "modifiers": ["public"]}}, {"method_name": "test", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "    void test() throws IOException {        Parser p = Parser.builder().build();        Document document = p.parse(\"# Heading\\n\" +                \"Paragraph with\\n\" +                \"multiple lines and [link](example.com)\");        MarkdownAnnotatedTextBuilder builder = new MarkdownAnnotatedTextBuilder();        builder.visit(document);        AnnotatedText text = builder.getAnnotatedText();        Assertions.assertEquals(\"Heading\\nParagraph with multiple lines and link\", text.getPlainText());    }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/test/java/org/bsplines/languagetool_languageserver/markdown/MarkdownAnnotatedTextBuilderTest.java", "stars": "3", "class": {"name": "MarkdownAnnotatedTextBuilderTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "jetTemplateConfig", "params": ["Site"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void jetTemplateConfig(Site site) {        this.getJetTemplateHelper().getEngine().getGlobalContext().set(Site.class, \"site\", site);    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/model/CompleteEnvironment.java", "stars": "2", "class": {"name": "CompleteEnvironment", "extends": "Environment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {        super.onCreate();        TVButterApplication.getAppContext()                .getComponent()                .inject(this);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/RecommendationService.java", "stars": "4", "class": {"name": "RecommendationService", "extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"method_name": "onHandleIntent", "params": ["Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onHandleIntent(Intent intent) {        if (!VersionUtils.isAndroidTV()) {            return;        }        try {            Thread.sleep(10000);        } catch (InterruptedException e) {            e.printStackTrace();        }        MediaProvider.Filters movieFilter = new MediaProvider.Filters();        movieFilter.setOrder(MediaProvider.Filters.Order.DESC);        movieFilter.setSort(MediaProvider.Filters.Sort.POPULARITY);        /*        Disabled, since no shows provider        MediaProvider.Filters showsFilter = new MediaProvider.Filters();        showsFilter.order = MediaProvider.Filters.Order.DESC;        showsFilter.sort = MediaProvider.Filters.Sort.DATE;        */        final AtomicBoolean mMoviesCallFinished = new AtomicBoolean(false);        final AtomicBoolean mShowsCallFinished = new AtomicBoolean(false);        Timber.d(\"Fetching movies\");        //fetch movies        if (providerManager.hasProvider(ProviderManager.PROVIDER_TYPE_MOVIE)) {            Timber.d(\"Fetching movies\");            //noinspection ConstantConditions            providerManager.getMediaProvider(ProviderManager.PROVIDER_TYPE_MOVIE)                    .getList(movieFilter, new MediaProvider.Callback() {                        @Override                        public void onSuccess(MediaProvider.Filters filters, ArrayList<Media> items) {                            Timber.d(String.format(\"loaded %s movies\", items.size()));                            mMovies.addAll(items);                            mMoviesCallFinished.set(true);                        }                        @Override                        public void onFailure(Exception e) {                            Timber.d(\"Failed to fetch movies\");                            mMoviesCallFinished.set(true);                        }                    });        }        /*        Disabled, since no shows provider        Timber.d(\"Fetching shows\");        //fetch shows        mShowProvider.getList(showsFilter, new MediaProvider.Callback() {            @Override            public void onSuccess(MediaProvider.Filters filters, ArrayList<Media> items, boolean changed) {                Timber.d(String.format(\"loaded %s shows\", items.size()));                mShows.addAll(items);                mShowsCallFinished.set(true);            }            @Override            public void onFailure(Exception e) {                Timber.d(\"Failed to fetch shows\");                mShowsCallFinished.set(true);            }        });        */        mShowsCallFinished.set(true);        //wait for callbacks to finish        while (!mShowsCallFinished.get() || !mMoviesCallFinished.get()) {            Timber.d(\"Waiting on callbacks\");            try {                Thread.sleep(200);            } catch (InterruptedException e) {                e.printStackTrace();            }        }        Timber.d(\"mShowsCallFinished: \" + mShowsCallFinished.get());        Timber.d(\"mMoviesCallFinished: \" + mMoviesCallFinished.get());        //process items        Timber.d(\"Updating recommendation cards\");        if (mMovies.size() == 0 && mShows.size() == 0)            return;        RecommendationBuilder builder = new RecommendationBuilder()                .setContext(getApplicationContext())                .setSmallIcon(R.drawable.header_logo);        buildMovieRecommendations(builder);        buildShowRecommendations(builder);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/RecommendationService.java", "stars": "4", "class": {"name": "RecommendationService", "extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"method_name": "buildMovieRecommendations", "params": ["RecommendationBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void buildMovieRecommendations(@NonNull RecommendationBuilder builder) {        Timber.d(\"building movie recommendations\");        try {            int count = 0;            for (Media media : mMovies) {                Movie movie = (Movie) media;                Timber.d(\"Recommendation - \" + movie.title);                PRIORITY--;                TOTAL_COUNT--;                builder.setBackgroundContentUri(RecommendationContentProvider.CONTENT_URI + URLEncoder.encode(movie.headerImage, \"UTF-8\"))                        .setId(TOTAL_COUNT)                        .setPriority(PRIORITY)                        .setTitle(movie.title)                        .setDescription(movie.synopsis)                        .setImage(movie.image)                        .setIntent(buildPendingIntent(movie))                        .build();                if (++count >= MAX_MOVIE_RECOMMENDATIONS) {                    break;                }            }        } catch (IOException e) {            Timber.e(\"Unable to update recommendation\", e);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/RecommendationService.java", "stars": "4", "class": {"name": "RecommendationService", "extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"method_name": "buildShowRecommendations", "params": ["RecommendationBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void buildShowRecommendations(@NonNull RecommendationBuilder builder) {        Timber.d(\"building show recommendations\");        try {            int count = 0;            for (Media media : mShows) {                Show show = (Show) media;                Timber.d(\"Recommendation - \" + show.title);                Episode latestEpisode = findLatestEpisode(show);                PRIORITY--;                TOTAL_COUNT--;                builder.setBackgroundContentUri(RecommendationContentProvider.CONTENT_URI + URLEncoder.encode(show.headerImage, \"UTF-8\"))                        .setId(TOTAL_COUNT)                        .setPriority(PRIORITY)                        .setTitle(show.title)                        .setDescription(latestEpisode == null ? \"\" : getString(R.string.episode_number_format, latestEpisode.episode))                        .setImage(show.image)                        .setIntent(buildPendingIntent(show))                        .build();                if (++count >= MAX_SHOW_RECOMMENDATIONS) {                    break;                }            }        } catch (IOException e) {            Timber.e(\"Unable to update recommendation\", e);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/RecommendationService.java", "stars": "4", "class": {"name": "RecommendationService", "extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"method_name": "findLatestEpisode", "params": ["Show"], "throws": null, "modifiers": ["private"], "return_type": "Episode", "snippet": "    private Episode findLatestEpisode(Show show) {        if (show.episodes == null || show.episodes.size() == 0) return null;        return show.episodes.get(show.episodes.size());    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/RecommendationService.java", "stars": "4", "class": {"name": "RecommendationService", "extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"method_name": "buildPendingIntent", "params": ["Media"], "throws": null, "modifiers": ["private"], "return_type": "PendingIntent", "snippet": "    private PendingIntent buildPendingIntent(Media media) {        Intent detailIntent = TVMediaDetailActivity.buildIntent(this, media);        TaskStackBuilder stackBuilder = TaskStackBuilder.create(this);        stackBuilder.addParentStack(TVMediaDetailActivity.class);        stackBuilder.addNextIntent(detailIntent);        // Ensure a unique PendingIntents, otherwise all recommendations end up with the same        // PendingIntent        detailIntent.setAction(media.videoId);        PendingIntent intent = stackBuilder.getPendingIntent(0, PendingIntent.FLAG_UPDATE_CURRENT);        return intent;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/RecommendationService.java", "stars": "4", "class": {"name": "RecommendationService", "extends": "IntentService", "implements": null, "modifiers": ["public"]}}, {"method_name": "getMapper", "params": ["Class<T>", "SqlSession"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "  public <T> T getMapper(Class<T> type, SqlSession sqlSession) {    final MapperProxyFactory<T> mapperProxyFactory = (MapperProxyFactory<T>) knownMappers.get(type);    if (mapperProxyFactory == null) {      throw new BindingException(\"Type \" + type + \" is not known to the MapperRegistry.\");    }    try {      return mapperProxyFactory.newInstance(sqlSession);    } catch (Exception e) {      throw new BindingException(\"Error getting mapper instance. Cause: \" + e, e);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/binding/MapperRegistry.java", "stars": "15", "class": {"name": "MapperRegistry", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "hasMapper", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public <T> boolean hasMapper(Class<T> type) {    return knownMappers.containsKey(type);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/binding/MapperRegistry.java", "stars": "15", "class": {"name": "MapperRegistry", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addMapper", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <T> void addMapper(Class<T> type) {    if (type.isInterface()) {      if (hasMapper(type)) {        throw new BindingException(\"Type \" + type + \" is already known to the MapperRegistry.\");      }      boolean loadCompleted = false;      try {        knownMappers.put(type, new MapperProxyFactory<>(type));        // It's important that the type is added before the parser is run        // otherwise the binding may automatically be attempted by the        // mapper parser. If the type is already known, it won't try.        MapperAnnotationBuilder parser = new MapperAnnotationBuilder(config, type);        parser.parse();        loadCompleted = true;      } finally {        if (!loadCompleted) {          knownMappers.remove(type);        }      }    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/binding/MapperRegistry.java", "stars": "15", "class": {"name": "MapperRegistry", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMappers", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<Class>", "snippet": "  public Collection<Class<?>> getMappers() {    return Collections.unmodifiableCollection(knownMappers.keySet());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/binding/MapperRegistry.java", "stars": "15", "class": {"name": "MapperRegistry", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addMappers", "params": ["String", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addMappers(String packageName, Class<?> superType) {    ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<>();    resolverUtil.find(new ResolverUtil.IsA(superType), packageName);    Set<Class<? extends Class<?>>> mapperSet = resolverUtil.getClasses();    for (Class<?> mapperClass : mapperSet) {      addMapper(mapperClass);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/binding/MapperRegistry.java", "stars": "15", "class": {"name": "MapperRegistry", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addMappers", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addMappers(String packageName) {    addMappers(packageName, Object.class);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/binding/MapperRegistry.java", "stars": "15", "class": {"name": "MapperRegistry", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getAccountUuid", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAccountUuid() {    return accountUuid;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_association/AccountAddress.java", "stars": "15", "class": {"name": "AccountAddress", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setAccountUuid", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAccountUuid(String accountUuid) {    this.accountUuid = accountUuid;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_association/AccountAddress.java", "stars": "15", "class": {"name": "AccountAddress", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getZipCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getZipCode() {    return zipCode;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_association/AccountAddress.java", "stars": "15", "class": {"name": "AccountAddress", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setZipCode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setZipCode(String zipCode) {    this.zipCode = zipCode;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_association/AccountAddress.java", "stars": "15", "class": {"name": "AccountAddress", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getAddress() {    return address;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_association/AccountAddress.java", "stars": "15", "class": {"name": "AccountAddress", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setAddress", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAddress(String address) {    this.address = address;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_association/AccountAddress.java", "stars": "15", "class": {"name": "AccountAddress", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "connectToRoom", "params": ["RoomConnectionParameters"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void connectToRoom(RoomConnectionParameters connectionParameters) {    this.connectionParameters = connectionParameters;    handler.post(new Runnable() {      @Override      public void run() {        connectToRoomInternal();      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "disconnectFromRoom", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void disconnectFromRoom() {    handler.post(new Runnable() {      @Override      public void run() {        disconnectFromRoomInternal();        handler.getLooper().quit();      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "connectToRoomInternal", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void connectToRoomInternal() {    String connectionUrl = getConnectionUrl(connectionParameters);    Log.d(TAG, \"Connect to room: \" + connectionUrl);    roomState = ConnectionState.NEW;    wsClient = new WebSocketChannelClient(handler, this);    RoomParametersFetcherEvents callbacks = new RoomParametersFetcherEvents() {      @Override      public void onSignalingParametersReady(final SignalingParameters params) {        WebSocketRTCClient.this.handler.post(new Runnable() {          @Override          public void run() {            WebSocketRTCClient.this.signalingParametersReady(params);          }        });      }      @Override      public void onSignalingParametersError(String description) {        WebSocketRTCClient.this.reportError(description);      }    };    new RoomParametersFetcher(connectionUrl, null, callbacks).makeRequest();  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "disconnectFromRoomInternal", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void disconnectFromRoomInternal() {    Log.d(TAG, \"Disconnect. Room state: \" + roomState);    if (roomState == ConnectionState.CONNECTED) {      Log.d(TAG, \"Closing room.\");      sendPostMessage(MessageType.LEAVE, leaveUrl, null);    }    roomState = ConnectionState.CLOSED;    if (wsClient != null) {      wsClient.disconnect(true);    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "getConnectionUrl", "params": ["RoomConnectionParameters"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getConnectionUrl(RoomConnectionParameters connectionParameters) {    return connectionParameters.roomUrl + \"/\" + ROOM_JOIN + \"/\" + connectionParameters.roomId        + getQueryString(connectionParameters);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "getMessageUrl", "params": ["RoomConnectionParameters", "SignalingParameters"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getMessageUrl(      RoomConnectionParameters connectionParameters, SignalingParameters signalingParameters) {    return connectionParameters.roomUrl + \"/\" + ROOM_MESSAGE + \"/\" + connectionParameters.roomId        + \"/\" + signalingParameters.clientId + getQueryString(connectionParameters);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "getLeaveUrl", "params": ["RoomConnectionParameters", "SignalingParameters"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getLeaveUrl(      RoomConnectionParameters connectionParameters, SignalingParameters signalingParameters) {    return connectionParameters.roomUrl + \"/\" + ROOM_LEAVE + \"/\" + connectionParameters.roomId + \"/\"        + signalingParameters.clientId + getQueryString(connectionParameters);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "getQueryString", "params": ["RoomConnectionParameters"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getQueryString(RoomConnectionParameters connectionParameters) {    if (connectionParameters.urlParameters != null) {      return \"?\" + connectionParameters.urlParameters;    } else {      return \"\";    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "signalingParametersReady", "params": ["SignalingParameters"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void signalingParametersReady(final SignalingParameters signalingParameters) {    Log.d(TAG, \"Room connection completed.\");    if (connectionParameters.loopback        && (!signalingParameters.initiator || signalingParameters.offerSdp != null)) {      reportError(\"Loopback room is busy.\");      return;    }    if (!connectionParameters.loopback && !signalingParameters.initiator        && signalingParameters.offerSdp == null) {      Log.w(TAG, \"No offer SDP in room response.\");    }    initiator = signalingParameters.initiator;    messageUrl = getMessageUrl(connectionParameters, signalingParameters);    leaveUrl = getLeaveUrl(connectionParameters, signalingParameters);    Log.d(TAG, \"Message URL: \" + messageUrl);    Log.d(TAG, \"Leave URL: \" + leaveUrl);    roomState = ConnectionState.CONNECTED;    // Fire connection and signaling parameters events.    events.onConnectedToRoom(signalingParameters);    // Connect and register WebSocket client.    wsClient.connect(signalingParameters.wssUrl, signalingParameters.wssPostUrl);    wsClient.register(connectionParameters.roomId, signalingParameters.clientId);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "sendOfferSdp", "params": ["SessionDescription"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void sendOfferSdp(final SessionDescription sdp) {    handler.post(new Runnable() {      @Override      public void run() {        if (roomState != ConnectionState.CONNECTED) {          reportError(\"Sending offer SDP in non connected state.\");          return;        }        JSONObject json = new JSONObject();        jsonPut(json, \"sdp\", sdp.description);        jsonPut(json, \"type\", \"offer\");        sendPostMessage(MessageType.MESSAGE, messageUrl, json.toString());        if (connectionParameters.loopback) {          // In loopback mode rename this offer to answer and route it back.          SessionDescription sdpAnswer = new SessionDescription(              SessionDescription.Type.fromCanonicalForm(\"answer\"), sdp.description);          events.onRemoteDescription(sdpAnswer);        }      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "sendAnswerSdp", "params": ["SessionDescription"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void sendAnswerSdp(final SessionDescription sdp) {    handler.post(new Runnable() {      @Override      public void run() {        if (connectionParameters.loopback) {          Log.e(TAG, \"Sending answer in loopback mode.\");          return;        }        JSONObject json = new JSONObject();        jsonPut(json, \"sdp\", sdp.description);        jsonPut(json, \"type\", \"answer\");        wsClient.send(json.toString());      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "sendLocalIceCandidate", "params": ["IceCandidate"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void sendLocalIceCandidate(final IceCandidate candidate) {    handler.post(new Runnable() {      @Override      public void run() {        JSONObject json = new JSONObject();        jsonPut(json, \"type\", \"candidate\");        jsonPut(json, \"label\", candidate.sdpMLineIndex);        jsonPut(json, \"id\", candidate.sdpMid);        jsonPut(json, \"candidate\", candidate.sdp);        if (initiator) {          // Call initiator sends ice candidates to GAE server.          if (roomState != ConnectionState.CONNECTED) {            reportError(\"Sending ICE candidate in non connected state.\");            return;          }          sendPostMessage(MessageType.MESSAGE, messageUrl, json.toString());          if (connectionParameters.loopback) {            events.onRemoteIceCandidate(candidate);          }        } else {          // Call receiver sends ice candidates to websocket server.          wsClient.send(json.toString());        }      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "sendLocalIceCandidateRemovals", "params": ["IceCandidate"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void sendLocalIceCandidateRemovals(final IceCandidate[] candidates) {    handler.post(new Runnable() {      @Override      public void run() {        JSONObject json = new JSONObject();        jsonPut(json, \"type\", \"remove-candidates\");        JSONArray jsonArray = new JSONArray();        for (final IceCandidate candidate : candidates) {          jsonArray.put(toJsonCandidate(candidate));        }        jsonPut(json, \"candidates\", jsonArray);        if (initiator) {          // Call initiator sends ice candidates to GAE server.          if (roomState != ConnectionState.CONNECTED) {            reportError(\"Sending ICE candidate removals in non connected state.\");            return;          }          sendPostMessage(MessageType.MESSAGE, messageUrl, json.toString());          if (connectionParameters.loopback) {            events.onRemoteIceCandidatesRemoved(candidates);          }        } else {          // Call receiver sends ice candidates to websocket server.          wsClient.send(json.toString());        }      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "onWebSocketMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onWebSocketMessage(final String msg) {    if (wsClient.getState() != WebSocketConnectionState.REGISTERED) {      Log.e(TAG, \"Got WebSocket message in non registered state.\");      return;    }    try {      JSONObject json = new JSONObject(msg);      String msgText = json.getString(\"msg\");      String errorText = json.optString(\"error\");      if (msgText.length() > 0) {        json = new JSONObject(msgText);        String type = json.optString(\"type\");        if (type.equals(\"candidate\")) {          events.onRemoteIceCandidate(toJavaCandidate(json));        } else if (type.equals(\"remove-candidates\")) {          JSONArray candidateArray = json.getJSONArray(\"candidates\");          IceCandidate[] candidates = new IceCandidate[candidateArray.length()];          for (int i = 0; i < candidateArray.length(); ++i) {            candidates[i] = toJavaCandidate(candidateArray.getJSONObject(i));          }          events.onRemoteIceCandidatesRemoved(candidates);        } else if (type.equals(\"answer\")) {          if (initiator) {            SessionDescription sdp = new SessionDescription(                SessionDescription.Type.fromCanonicalForm(type), json.getString(\"sdp\"));            events.onRemoteDescription(sdp);          } else {            reportError(\"Received answer for call initiator: \" + msg);          }        } else if (type.equals(\"offer\")) {          if (!initiator) {            SessionDescription sdp = new SessionDescription(                SessionDescription.Type.fromCanonicalForm(type), json.getString(\"sdp\"));            events.onRemoteDescription(sdp);          } else {            reportError(\"Received offer for call receiver: \" + msg);          }        } else if (type.equals(\"bye\")) {          events.onChannelClose();        } else {          reportError(\"Unexpected WebSocket message: \" + msg);        }      } else {        if (errorText != null && errorText.length() > 0) {          reportError(\"WebSocket error message: \" + errorText);        } else {          reportError(\"Unexpected WebSocket message: \" + msg);        }      }    } catch (JSONException e) {      reportError(\"WebSocket message JSON parsing error: \" + e.toString());    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "onWebSocketClose", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onWebSocketClose() {    events.onChannelClose();  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "onWebSocketError", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onWebSocketError(String description) {    reportError(\"WebSocket error: \" + description);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "reportError", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void reportError(final String errorMessage) {    Log.e(TAG, errorMessage);    handler.post(new Runnable() {      @Override      public void run() {        if (roomState != ConnectionState.ERROR) {          roomState = ConnectionState.ERROR;          events.onChannelError(errorMessage);        }      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "jsonPut", "params": ["JSONObject", "String", "Object"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "  private static void jsonPut(JSONObject json, String key, Object value) {    try {      json.put(key, value);    } catch (JSONException e) {      throw new RuntimeException(e);    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "sendPostMessage", "params": ["MessageType", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sendPostMessage(      final MessageType messageType, final String url, @Nullable final String message) {    String logInfo = url;    if (message != null) {      logInfo += \". Message: \" + message;    }    Log.d(TAG, \"C->GAE: \" + logInfo);    AsyncHttpURLConnection httpConnection =        new AsyncHttpURLConnection(\"POST\", url, message, new AsyncHttpEvents() {          @Override          public void onHttpError(String errorMessage) {            reportError(\"GAE POST error: \" + errorMessage);          }          @Override          public void onHttpComplete(String response) {            if (messageType == MessageType.MESSAGE) {              try {                JSONObject roomJson = new JSONObject(response);                String result = roomJson.getString(\"result\");                if (!result.equals(\"SUCCESS\")) {                  reportError(\"GAE POST error: \" + result);                }              } catch (JSONException e) {                reportError(\"GAE POST JSON error: \" + e.toString());              }            }          }        });    httpConnection.send();  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "toJsonCandidate", "params": ["IceCandidate"], "throws": null, "modifiers": ["private"], "return_type": "JSONObject", "snippet": "  private JSONObject toJsonCandidate(final IceCandidate candidate) {    JSONObject json = new JSONObject();    jsonPut(json, \"label\", candidate.sdpMLineIndex);    jsonPut(json, \"id\", candidate.sdpMid);    jsonPut(json, \"candidate\", candidate.sdp);    return json;  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "toJavaCandidate", "params": ["JSONObject"], "throws": ["JSONException"], "modifiers": [], "return_type": "IceCandidate", "snippet": "  IceCandidate toJavaCandidate(JSONObject json) throws JSONException {    return new IceCandidate(        json.getString(\"id\"), json.getInt(\"label\"), json.getString(\"candidate\"));  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/WebSocketRTCClient.java", "stars": "2", "class": {"name": "WebSocketRTCClient", "extends": null, "implements": ["AppRTCClient", "WebSocketChannelEvents"], "modifiers": ["public"]}}, {"method_name": "getUpdateFont", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getUpdateFont() {        return updateFont;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "setUpdateFont", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateFont(boolean updateFont) {        this.updateFont = updateFont;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "getBorderGap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBorderGap() {        return borderGap;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "setBorderGap", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBorderGap(int borderGap) {        this.borderGap = borderGap;        Border inner = new EmptyBorder(0, borderGap, 0, borderGap);        setBorder(new CompoundBorder(OUTER, inner));        lastDigits = 0;        setPreferredWidth();    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "getCurrentLineForeground", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "    public Color getCurrentLineForeground() {        return currentLineForeground == null ? getForeground() : currentLineForeground;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "setCurrentLineForeground", "params": ["Color"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentLineForeground(Color currentLineForeground) {        this.currentLineForeground = currentLineForeground;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "getDigitAlignment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getDigitAlignment() {        return digitAlignment;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "setDigitAlignment", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDigitAlignment(float digitAlignment) {        this.digitAlignment                = digitAlignment > 1.0f ? 1.0f : digitAlignment < 0.0f ? -1.0f : digitAlignment;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "getMinimumDisplayDigits", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMinimumDisplayDigits() {        return minimumDisplayDigits;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "setMinimumDisplayDigits", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMinimumDisplayDigits(int minimumDisplayDigits) {        this.minimumDisplayDigits = minimumDisplayDigits;        setPreferredWidth();    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "setPreferredWidth", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setPreferredWidth() {        Element root = component.getDocument().getDefaultRootElement();        int lines = root.getElementCount();        int digits = Math.max(String.valueOf(lines).length(), minimumDisplayDigits);        if (lastDigits != digits) {            lastDigits = digits;            FontMetrics fontMetrics = getFontMetrics(getFont());            int width = fontMetrics.charWidth('0') * digits;            Insets insets = getInsets();            int preferredWidth = insets.left + insets.right + width;            Dimension d = getPreferredSize();            d.setSize(preferredWidth, HEIGHT);            setPreferredSize(d);            setSize(d);        }    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "paintComponent", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics g) {        super.paintComponent(g);        FontMetrics fontMetrics = component.getFontMetrics(component.getFont());        Insets insets = getInsets();        int availableWidth = getSize().width - insets.left - insets.right;        Rectangle clip = g.getClipBounds();        int rowStartOffset = component.viewToModel(new Point(0, clip.y));        int endOffset = component.viewToModel(new Point(0, clip.y + clip.height));        while (rowStartOffset <= endOffset) {            try {                if (isCurrentLine(rowStartOffset)) {                    g.setColor(getCurrentLineForeground());                } else {                    g.setColor(getForeground());                }                String lineNumber = getTextLineNumber(rowStartOffset);                int stringWidth = fontMetrics.stringWidth(lineNumber);                int x = getOffsetX(availableWidth, stringWidth) + insets.left;                int y = getOffsetY(rowStartOffset, fontMetrics);                g.drawString(lineNumber, x, y);                rowStartOffset = Utilities.getRowEnd(component, rowStartOffset) + 1;            } catch (Exception e) {                break;            }        }    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "isCurrentLine", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isCurrentLine(int rowStartOffset) {        int caretPosition = component.getCaretPosition();        Element root = component.getDocument().getDefaultRootElement();        if (root.getElementIndex(rowStartOffset) == root.getElementIndex(caretPosition)) {            return true;        } else {            return false;        }    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "getTextLineNumber", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getTextLineNumber(int rowStartOffset) {        Element root = component.getDocument().getDefaultRootElement();        int index = root.getElementIndex(rowStartOffset);        Element line = root.getElement(index);        if (line.getStartOffset() == rowStartOffset) {            return String.valueOf(index + 1);        } else {            return \"\";        }    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "getOffsetX", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getOffsetX(int availableWidth, int stringWidth) {        return (int) ((availableWidth - stringWidth) * digitAlignment);    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "getOffsetY", "params": ["int", "FontMetrics"], "throws": ["BadLocationException"], "modifiers": ["private"], "return_type": "int", "snippet": "    private int getOffsetY(int rowStartOffset, FontMetrics fontMetrics)            throws BadLocationException {        //  Get the bounding rectangle of the row        Rectangle r = component.modelToView(rowStartOffset);        int lineHeight = fontMetrics.getHeight();        int y = r.y + r.height;        int descent = 0;        //  The text needs to be positioned above the bottom of the bounding        //  rectangle based on the descent of the font(s) contained on the row.        if (r.height == lineHeight) // default font is being used        {            descent = fontMetrics.getDescent();        } else // We need to check all the attributes for font changes        {            if (fonts == null) {                fonts = new HashMap<String, FontMetrics>();            }            Element root = component.getDocument().getDefaultRootElement();            int index = root.getElementIndex(rowStartOffset);            Element line = root.getElement(index);            for (int i = 0; i < line.getElementCount(); i++) {                Element child = line.getElement(i);                AttributeSet as = child.getAttributes();                String fontFamily = (String) as.getAttribute(StyleConstants.FontFamily);                Integer fontSize = (Integer) as.getAttribute(StyleConstants.FontSize);                String key = fontFamily + fontSize;                FontMetrics fm = fonts.get(key);                if (fm == null) {                    Font font = new Font(fontFamily, Font.PLAIN, fontSize);                    fm = component.getFontMetrics(font);                    fonts.put(key, fm);                }                descent = Math.max(descent, fm.getDescent());            }        }        return y - descent;    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "caretUpdate", "params": ["CaretEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void caretUpdate(CaretEvent e) {        //  Get the line the caret is positioned on        int caretPosition = component.getCaretPosition();        Element root = component.getDocument().getDefaultRootElement();        int currentLine = root.getElementIndex(caretPosition);        //  Need to repaint so the correct line number can be highlighted        if (lastLine != currentLine) {            repaint();            lastLine = currentLine;        }    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "changedUpdate", "params": ["DocumentEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changedUpdate(DocumentEvent e) {        documentChanged();    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "insertUpdate", "params": ["DocumentEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void insertUpdate(DocumentEvent e) {        documentChanged();    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "removeUpdate", "params": ["DocumentEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeUpdate(DocumentEvent e) {        documentChanged();    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "documentChanged", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void documentChanged() {        //  View of the component has not been updated at the time        //  the DocumentEvent is fired        SwingUtilities.invokeLater(new Runnable() {            @Override            public void run() {                try {                    int endPos = component.getDocument().getLength();                    Rectangle rect = component.modelToView(endPos);                    if (rect != null && rect.y != lastHeight) {                        setPreferredWidth();                        repaint();                        lastHeight = rect.y;                    }                } catch (BadLocationException ex) {                    /* nothing to do */ }            }        });    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "propertyChange", "params": ["PropertyChangeEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void propertyChange(PropertyChangeEvent evt) {        if (evt.getNewValue() instanceof Font) {            if (updateFont) {                Font newFont = (Font) evt.getNewValue();                setFont(newFont);                lastDigits = 0;                setPreferredWidth();            } else {                repaint();            }        }    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/NumeroLinea.java", "stars": "2", "class": {"name": "NumeroLinea", "extends": "JPanel", "implements": ["CaretListener", "DocumentListener", "PropertyChangeListener"], "modifiers": ["public"]}}, {"method_name": "configure", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void configure() {    install(new ExecJettyServerModule());    bind(ExecutorLoader.class).to(JdbcExecutorLoader.class);    bind(ExecutorQueueLoader.class).to(JdbcExecutorQueueLoader.class);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecServerModule.java", "stars": "18", "class": {"name": "AzkabanExecServerModule", "extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"method_name": "createAzkabanEventReporter", "params": ["Props"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanEventReporter", "snippet": "  public AzkabanEventReporter createAzkabanEventReporter(final Props props) {    final boolean eventReporterEnabled =        props.getBoolean(AZKABAN_EVENT_REPORTING_ENABLED, false);    if (!eventReporterEnabled) {      logger.info(\"Event reporter is not enabled\");      return null;    }    final Class<?> eventReporterClass =        props.getClass(AZKABAN_EVENT_REPORTING_CLASS_PARAM, null);    if (eventReporterClass != null && eventReporterClass.getConstructors().length > 0) {      this.logger.info(\"Loading event reporter class \" + eventReporterClass.getName());      try {        final Constructor<?> eventReporterClassConstructor =            eventReporterClass.getConstructor(Props.class);        return (AzkabanEventReporter) eventReporterClassConstructor.newInstance(props);      } catch (final InvocationTargetException e) {        this.logger.error(e.getTargetException().getMessage());        if (e.getTargetException() instanceof IllegalArgumentException) {          throw new IllegalArgumentException(e);        } else {          throw new RuntimeException(e);        }      } catch (final Exception e) {        this.logger.error(\"Could not instantiate EventReporter \" + eventReporterClass.getName());        throw new RuntimeException(e);      }    }    return null;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecServerModule.java", "stars": "18", "class": {"name": "AzkabanExecServerModule", "extends": "AbstractModule", "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void init() {\t    //\t    setBackgroundColor(getContext().getResources().getColor(android.R.color.transparent));\t    if (isInEditMode() && adapter == null) {\t        useEditModeAdapter();\t    }\t    \t\tsetOnTouchListener(this);\t\tsetOnLongClickListener(this);\t\tcreateDeleteZone();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "useEditModeAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void useEditModeAdapter() {\t    adapter = new PagedDragDropGridAdapter() {                        @Override            public View view(int page, int index) {                return null;            }                        @Override            public void swapItems(int pageIndex, int itemIndexA, int itemIndexB) {            }                        @Override            public int rowCount() {                return AUTOMATIC;            }                        @Override            public void printLayout() {                }                        @Override            public int pageCount() {                return AUTOMATIC;            }                        @Override            public void moveItemToPreviousPage(int pageIndex, int itemIndex) {            }                        @Override            public void moveItemToNextPage(int pageIndex, int itemIndex) {            }                        @Override            public int itemCountInPage(int page) {                return 0;            }                        @Override            public void deleteItem(int pageIndex, int itemIndex) {            }                        @Override            public int columnCount() {                return 0;            }            @Override            public int deleteDropZoneLocation() {                return PagedDragDropGridAdapter.BOTTOM;            }            @Override            public boolean showRemoveDropZone() {                return true;            }            @Override            public int getPageWidth(int page) {                return 0;            }            @Override            public Object getItemAt(int page, int index) {                return null;            }            @Override            public boolean disableZoomAnimationsOnChangePage() {                return false;            }        };           }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "setAdapter", "params": ["PagedDragDropGridAdapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdapter(PagedDragDropGridAdapter adapter) {\t\tthis.adapter = adapter;\t\taddChildViews();\t\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "setOnClickListener", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOnClickListener(OnClickListener l) {\t    onClickListener = l;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "addChildViews", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void addChildViews() {\t\tfor (int page = 0; page < adapter.pageCount(); page++) {\t\t\tfor (int item = 0; item < adapter.itemCountInPage(page); item++) {                View v = adapter.view(page, item);                v.setTag(adapter.getItemAt(page,item));                addView(v);\t\t\t}\t\t}\t\tdeleteZone.bringToFront();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "reloadViews", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reloadViews() {        for (int page = 0; page < adapter.pageCount(); page++) {            for (int item = 0; item < adapter.itemCountInPage(page); item++) {                if(indexOfItem(page, item) == -1) {                    View v = adapter.view(page, item);                    v.setTag(adapter.getItemAt(page,item));                    addView(v);                }            }        }        deleteZone.bringToFront();    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "indexOfItem", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int indexOfItem(int page, int index) {        Object item = adapter.getItemAt(page, index);        for(int i = 0; i<this.getChildCount(); i++) {            View v = this.getChildAt(i);            if(item.equals(v.getTag()))                return i;        }        return -1;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "removeItem", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeItem(int page, int index) {        Object item = adapter.getItemAt(page, index);        for(int i = 0; i<this.getChildCount(); i++) {            View v = (View)this.getChildAt(i);            if(item.equals(v.getTag())) {                this.removeView(v);                return;            }        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "animateMoveAllItems", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void animateMoveAllItems() {\t\tAnimation rotateAnimation = createFastRotateAnimation();\t\tfor (int i=0; i < getItemViewCount(); i++) {\t\t\tView child = getChildAt(i);\t\t\tchild.startAnimation(rotateAnimation);\t\t }\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "cancelAnimations", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void cancelAnimations() {\t\t for (int i=0; i < getItemViewCount()-2; i++) {\t\t\t View child = getChildAt(i);\t\t\t child.clearAnimation();\t\t }\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "onInterceptTouchEvent", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onInterceptTouchEvent(MotionEvent event) {\t    return onTouch(null, event);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "onTouch", "params": ["View", "MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouch(View v, MotionEvent event) {\t\tint action = event.getAction();\t\tswitch (action & MotionEvent.ACTION_MASK) {\t\tcase MotionEvent.ACTION_DOWN:\t\t\ttouchDown(event);\t\t\tbreak;\t\tcase MotionEvent.ACTION_MOVE:\t\t\ttouchMove(event);\t\t\tbreak;\t\tcase MotionEvent.ACTION_UP:\t\t\ttouchUp(event);\t\t\tbreak;\t\t}\t\tif (aViewIsDragged())\t\t\treturn true;\t\treturn false;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "touchUp", "params": ["MotionEvent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void touchUp(MotionEvent event) {\t    if(!aViewIsDragged()) {\t        if(onClickListener != null) {                View clickedView = getChildAt(getTargetAtCoor((int) event.getX(), (int) event.getY()));                if(clickedView != null)                    onClickListener.onClick(clickedView);            }\t    } else {\t        cancelAnimations();\t            \t\tmanageChildrenReordering();    \t\thideDeleteView();    \t\tcancelEdgeTimer();    \t\tmovingView = false;    \t\tdragged = -1;    \t\tlastTarget = -1;    \t\tcontainer.enableScroll();    \t\t\t    }\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "manageChildrenReordering", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void manageChildrenReordering() {\t\tboolean draggedDeleted = touchUpInDeleteZoneDrop(lastTouchX, lastTouchY);\t\tif (draggedDeleted) {\t\t\tanimateDeleteDragged();\t\t\treorderChildrenWhenDraggedIsDeleted();\t\t} else {\t\t\treorderChildren();\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "animateDeleteDragged", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void animateDeleteDragged() {\t\tScaleAnimation scale = new ScaleAnimation(1.4f, 0f, 1.4f, 0f, biggestChildWidth / 2 , biggestChildHeight / 2);\t\tscale.setDuration(200);\t\tscale.setFillAfter(true);\t\tscale.setFillEnabled(true);\t\tgetDraggedView().clearAnimation();\t\tgetDraggedView().startAnimation(scale);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "reorderChildrenWhenDraggedIsDeleted", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void reorderChildrenWhenDraggedIsDeleted() {\t\tInteger newDraggedPosition = newPositions.get(dragged,dragged);\t\tList<View> children = cleanUnorderedChildren();\t\taddReorderedChildrenToParent(children);\t\ttellAdapterDraggedIsDeleted(newDraggedPosition);\t\tremoveViewAt(newDraggedPosition);\t\trequestLayout();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "tellAdapterDraggedIsDeleted", "params": ["Integer"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void tellAdapterDraggedIsDeleted(Integer newDraggedPosition) {\t\tItemPosition position = itemInformationAtPosition(newDraggedPosition);\t\tadapter.deleteItem(position.pageIndex,position.itemIndex);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "touchDown", "params": ["MotionEvent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void touchDown(MotionEvent event) {\t\tinitialX = (int)event.getRawX();\t\tinitialY = (int)event.getRawY();\t\tlastTouchX = (int)event.getRawX() + (currentPage() * gridPageWidth);\t\tlastTouchY = (int)event.getRawY();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "touchMove", "params": ["MotionEvent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void touchMove(MotionEvent event) {\t\tif (movingView && aViewIsDragged()) {\t\t\tlastTouchX = (int) event.getX();\t\t\tlastTouchY = (int) event.getY();\t\t\tensureThereIsNoArtifact();\t\t\t\t\t\tmoveDraggedView(lastTouchX, lastTouchY);\t\t\tmanageSwapPosition(lastTouchX, lastTouchY);\t\t\tmanageEdgeCoordinates(lastTouchX);\t\t\tmanageDeleteZoneHover(lastTouchX, lastTouchY);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "ensureThereIsNoArtifact", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void ensureThereIsNoArtifact() {        invalidate();    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "manageDeleteZoneHover", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void manageDeleteZoneHover(int x, int y) {\t\tRect zone = new Rect();\t\tdeleteZone.getHitRect(zone);\t\tif (zone.intersect(x, y, x+1, y+1)) {\t\t\tdeleteZone.highlight();\t\t} else {\t\t\tdeleteZone.smother();\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "touchUpInDeleteZoneDrop", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean touchUpInDeleteZoneDrop(int x, int y) {\t\tRect zone = new Rect();\t\tdeleteZone.getHitRect(zone);\t\tif (zone.intersect(x, y, x+1, y+1)) {\t\t\tdeleteZone.smother();\t\t\treturn true;\t\t}\t\treturn false;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "moveDraggedView", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void moveDraggedView(int x, int y) {\t\tView childAt = getDraggedView();\t\t\t\t\t\tint width = childAt.getMeasuredWidth();\t\tint height = childAt.getMeasuredHeight();\t\tint l = x - (1 * width / 2);\t\tint t = y - (1 * height / 2);\t\tchildAt.layout(l, t, l + width, t + height);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "manageSwapPosition", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void manageSwapPosition(int x, int y) {\t\tint target = getTargetAtCoor(x, y);\t\tif (childHasMoved(target) && target != lastTarget) {\t\t\tanimateGap(target);\t\t\tlastTarget = target;\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "manageEdgeCoordinates", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void manageEdgeCoordinates(int x) {\t\tfinal boolean onRightEdge = onRightEdgeOfScreen(x);\t\tfinal boolean onLeftEdge = onLeftEdgeOfScreen(x);\t\tif (canScrollToEitherSide(onRightEdge,onLeftEdge)) {\t\t\tif (!wasOnEdgeJustNow) {\t\t\t\tstartEdgeDelayTimer(onRightEdge, onLeftEdge);\t\t\t\twasOnEdgeJustNow = true;\t\t\t}\t\t} else {\t\t\tif (wasOnEdgeJustNow) {\t\t\t\tstopAnimateOnTheEdge();\t\t\t}\t\t\twasOnEdgeJustNow = false;\t\t\tcancelEdgeTimer();\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "stopAnimateOnTheEdge", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void stopAnimateOnTheEdge() {\t\t\tView draggedView = getDraggedView();\t\t\tdraggedView.clearAnimation();\t\t\tanimateDragged();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "cancelEdgeTimer", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void cancelEdgeTimer() {\t\tif (edgeScrollTimer != null) {\t\t\tedgeScrollTimer.cancel();\t\t\tedgeScrollTimer = null;\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "startEdgeDelayTimer", "params": ["boolean", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void startEdgeDelayTimer(final boolean onRightEdge, final boolean onLeftEdge) {\t\tif (canScrollToEitherSide(onRightEdge, onLeftEdge)) {\t\t\tanimateOnTheEdge();\t\t\tif (edgeScrollTimer == null) {\t\t\t\tedgeScrollTimer = new Timer();\t\t\t\tscheduleScroll(onRightEdge, onLeftEdge);\t\t\t}\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "scheduleScroll", "params": ["boolean", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void scheduleScroll(final boolean onRightEdge, final boolean onLeftEdge) {\t\tedgeScrollTimer.schedule(new TimerTask() {\t\t    @Override\t\t    public void run() {\t\t    \tif (wasOnEdgeJustNow) {\t\t    \t\twasOnEdgeJustNow = false;\t\t    \t\tedgeTimerHandler.post(new Runnable() {\t\t\t\t\t\t@Override\t\t\t\t\t\tpublic void run() {\t\t\t\t\t\t\thideDeleteView();\t\t\t\t\t\t\tscroll(onRightEdge, onLeftEdge);\t\t\t\t\t\t\tcancelAnimations();\t\t\t\t\t\t\tanimateMoveAllItems();\t\t\t\t\t\t\tanimateDragged();\t\t\t\t\t\t\tpopDeleteView();\t\t\t\t\t\t}\t\t\t\t\t});\t\t    \t}\t\t    }\t\t}, 1000);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "canScrollToEitherSide", "params": ["boolean", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean canScrollToEitherSide(final boolean onRightEdge, final boolean onLeftEdge) {\t\treturn (onLeftEdge && container.canScrollToPreviousPage()) || (onRightEdge && container.canScrollToNextPage());\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "scroll", "params": ["boolean", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void scroll(boolean onRightEdge, boolean onLeftEdge) {\t\tcancelEdgeTimer();\t\tif (onLeftEdge && container.canScrollToPreviousPage()) {\t\t\tscrollToPreviousPage();\t\t} else if (onRightEdge && container.canScrollToNextPage()) {\t\t\tscrollToNextPage();\t\t}\t\twasOnEdgeJustNow = false;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "scrollToNextPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void scrollToNextPage() {\t\ttellAdapterToMoveItemToNextPage(dragged);\t\tmoveDraggedToNextPage();\t\tcontainer.scrollRight();\t\tint currentPage = currentPage();\t\tint lastItem = adapter.itemCountInPage(currentPage)-1;\t\tdragged = positionOfItem(currentPage, lastItem);//\t\trequestLayout();\t\t\t\tstopAnimateOnTheEdge();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "scrollToPreviousPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void scrollToPreviousPage() {\t\ttellAdapterToMoveItemToPreviousPage(dragged);\t\tmoveDraggedToPreviousPage();\t\tcontainer.scrollLeft();\t\tint currentPage = currentPage();\t\tint lastItem = adapter.itemCountInPage(currentPage)-1;\t\tdragged = positionOfItem(currentPage, lastItem);//\t\trequestLayout();\t\t\t\t\t\tstopAnimateOnTheEdge();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "moveDraggedToPreviousPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void moveDraggedToPreviousPage() {\t\tList<View> children = cleanUnorderedChildren();\t\tList<View> reorderedViews = reeorderView(children);\t\tint draggedEndPosition = newPositions.get(dragged, dragged);\t\tView draggedView = reorderedViews.get(draggedEndPosition);\t\treorderedViews.remove(draggedEndPosition);\t\tint indexFirstElementInCurrentPage = findTheIndexOfFirstElementInCurrentPage();\t\tint indexOfDraggedOnNewPage = indexFirstElementInCurrentPage-1;\t\t\t\treorderAndAddViews(reorderedViews, draggedView, indexOfDraggedOnNewPage);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "findTheIndexOfFirstElementInCurrentPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int findTheIndexOfFirstElementInCurrentPage() {        int currentPage = currentPage();\t\tint indexFirstElementInCurrentPage = 0;\t\tfor (int i=0;i<currentPage;i++) {\t\t\tindexFirstElementInCurrentPage += adapter.itemCountInPage(i);\t\t}        return indexFirstElementInCurrentPage;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "removeItemChildren", "params": ["List<View>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void removeItemChildren(List<View> children) {\t\tfor (View child : children) {\t\t\tremoveView(child);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "moveDraggedToNextPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void moveDraggedToNextPage() {\t\tList<View> children = cleanUnorderedChildren();\t\tList<View> reorderedViews = reeorderView(children);\t\tint draggedEndPosition = newPositions.get(dragged, dragged);\t\tView draggedView = reorderedViews.get(draggedEndPosition);\t\treorderedViews.remove(draggedEndPosition);\t\tint indexLastElementInNextPage = findTheIndexLastElementInNextPage();\t\tint indexOfDraggedOnNewPage = indexLastElementInNextPage-1;\t\treorderAndAddViews(reorderedViews, draggedView, indexOfDraggedOnNewPage);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "findTheIndexLastElementInNextPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int findTheIndexLastElementInNextPage() {        int currentPage = currentPage();\t\tint indexLastElementInNextPage = 0;\t\tfor (int i=0;i<=currentPage+1;i++) {\t\t\tindexLastElementInNextPage += adapter.itemCountInPage(i);\t\t}        return indexLastElementInNextPage;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "reorderAndAddViews", "params": ["List<View>", "View", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void reorderAndAddViews(List<View> reorderedViews, View draggedView, int indexOfDraggedOnNewPage) {\t\treorderedViews.add(indexOfDraggedOnNewPage,draggedView);\t\tnewPositions.clear();\t\tfor (View view : reorderedViews) {\t\t\tif (view != null) {\t\t\t\taddView(view);\t\t\t}\t\t}\t\tdeleteZone.bringToFront();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "onLeftEdgeOfScreen", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean onLeftEdgeOfScreen(int x) {\t\tint currentPage = container.currentPage();\t\tint leftEdgeXCoor = currentPage*gridPageWidth;\t\tint distanceFromEdge = x - leftEdgeXCoor;\t\treturn (x > 0 && distanceFromEdge <= EGDE_DETECTION_MARGIN);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "onRightEdgeOfScreen", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean onRightEdgeOfScreen(int x) {\t\tint currentPage = container.currentPage();\t\tint rightEdgeXCoor = (currentPage*gridPageWidth) + gridPageWidth;\t\tint distanceFromEdge = rightEdgeXCoor - x;\t\treturn (x > (rightEdgeXCoor - EGDE_DETECTION_MARGIN)) && (distanceFromEdge < EGDE_DETECTION_MARGIN);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "animateOnTheEdge", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void animateOnTheEdge() {        if(!adapter.disableZoomAnimationsOnChangePage()) {            View v = getDraggedView();            ScaleAnimation scale = new ScaleAnimation(.667f, 1.5f, .667f, 1.5f, v.getMeasuredWidth() * 3 / 4, v.getMeasuredHeight() * 3 / 4);            scale.setDuration(200);            scale.setRepeatMode(Animation.REVERSE);            scale.setRepeatCount(Animation.INFINITE);            v.clearAnimation();            v.startAnimation(scale);        }\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "animateGap", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void animateGap(int targetLocationInGrid) {\t\tint viewAtPosition = currentViewAtPosition(targetLocationInGrid);\t\tif (viewAtPosition == dragged) {\t\t\treturn;\t\t}\t\tView targetView = getChildView(viewAtPosition);\t\t//\t      Log.e(\"animateGap target\", ((TextView)targetView.findViewWithTag(\"text\")).getText().toString());\t\tPoint oldXY = getCoorForIndex(viewAtPosition);\t\tPoint newXY = getCoorForIndex(newPositions.get(dragged, dragged));\t\tPoint oldOffset = computeTranslationStartDeltaRelativeToRealViewPosition(targetLocationInGrid, viewAtPosition, oldXY);\t\tPoint newOffset = computeTranslationEndDeltaRelativeToRealViewPosition(oldXY, newXY);\t\tanimateMoveToNewPosition(targetView, oldOffset, newOffset);\t\tsaveNewPositions(targetLocationInGrid, viewAtPosition);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "computeTranslationEndDeltaRelativeToRealViewPosition", "params": ["Point", "Point"], "throws": null, "modifiers": ["private"], "return_type": "Point", "snippet": "\tprivate Point computeTranslationEndDeltaRelativeToRealViewPosition(Point oldXY, Point newXY) {\t\treturn new Point(newXY.x - oldXY.x, newXY.y - oldXY.y);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "computeTranslationStartDeltaRelativeToRealViewPosition", "params": ["int", "int", "Point"], "throws": null, "modifiers": ["private"], "return_type": "Point", "snippet": "\tprivate Point computeTranslationStartDeltaRelativeToRealViewPosition(int targetLocation, int viewAtPosition, Point oldXY) {\t\tPoint oldOffset;\t\tif (viewWasAlreadyMoved(targetLocation, viewAtPosition)) {\t\t\tPoint targetLocationPoint = getCoorForIndex(targetLocation);\t\t\toldOffset = computeTranslationEndDeltaRelativeToRealViewPosition(oldXY, targetLocationPoint);\t\t} else {\t\t\toldOffset = new Point(0,0);\t\t}\t\treturn oldOffset;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "saveNewPositions", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void saveNewPositions(int targetLocation, int viewAtPosition) {\t\tnewPositions.put(viewAtPosition, newPositions.get(dragged, dragged));\t\tnewPositions.put(dragged, targetLocation);\t\ttellAdapterToSwapDraggedWithTarget(newPositions.get(dragged, dragged), newPositions.get(viewAtPosition, viewAtPosition));\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "viewWasAlreadyMoved", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean viewWasAlreadyMoved(int targetLocation, int viewAtPosition) {\t\treturn viewAtPosition != targetLocation;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "animateMoveToNewPosition", "params": ["View", "Point", "Point"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void animateMoveToNewPosition(View targetView, Point oldOffset, Point newOffset) {\t\tAnimationSet set = new AnimationSet(true);\t\tAnimation rotate = createFastRotateAnimation();\t\tAnimation translate = createTranslateAnimation(oldOffset, newOffset);\t\tset.addAnimation(rotate);\t\tset.addAnimation(translate);\t\ttargetView.clearAnimation();\t\ttargetView.startAnimation(set);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "createTranslateAnimation", "params": ["Point", "Point"], "throws": null, "modifiers": ["private"], "return_type": "TranslateAnimation", "snippet": "\tprivate TranslateAnimation createTranslateAnimation(Point oldOffset, Point newOffset) {\t\tTranslateAnimation translate = new TranslateAnimation(Animation.ABSOLUTE, oldOffset.x,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Animation.ABSOLUTE, newOffset.x,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Animation.ABSOLUTE, oldOffset.y,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  Animation.ABSOLUTE, newOffset.y);\t\ttranslate.setDuration(ANIMATION_DURATION);\t\ttranslate.setFillEnabled(true);\t\ttranslate.setFillAfter(true);\t\ttranslate.setInterpolator(new AccelerateDecelerateInterpolator());\t\treturn translate;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "createFastRotateAnimation", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Animation", "snippet": "\tprivate Animation createFastRotateAnimation() {\t\tAnimation rotate = new RotateAnimation(-2.0f,\t\t\t\t\t\t\t\t\t\t  2.0f,\t\t\t\t\t\t\t\t\t\t  Animation.RELATIVE_TO_SELF,\t\t\t\t\t\t\t\t\t\t  0.5f,\t\t\t\t\t\t\t\t\t\t  Animation.RELATIVE_TO_SELF,\t\t\t\t\t\t\t\t\t\t  0.5f);\t \trotate.setRepeatMode(Animation.REVERSE);        rotate.setRepeatCount(Animation.INFINITE);        rotate.setDuration(60);        rotate.setInterpolator(new AccelerateDecelerateInterpolator());\t\treturn rotate;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "currentViewAtPosition", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int currentViewAtPosition(int targetLocation) {\t\tint viewAtPosition = targetLocation;\t\tfor (int i = 0; i < newPositions.size(); i++) {\t\t\tint value = newPositions.valueAt(i);\t\t\tif (value == targetLocation) {\t\t\t\tviewAtPosition = newPositions.keyAt(i);\t\t\t\tbreak;\t\t\t}\t\t}\t\treturn viewAtPosition;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getCoorForIndex", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "Point", "snippet": "\tprivate Point getCoorForIndex(int index) {\t\tItemPosition page = itemInformationAtPosition(index);\t\tint row = page.itemIndex / computedColumnCount;\t\tint col = page.itemIndex - (row * computedColumnCount);\t\tint x = (currentPage() * gridPageWidth) + (columnWidthSize * col);\t\tint y = rowHeightSize * row;\t\treturn new Point(x, y);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getTargetAtCoor", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int getTargetAtCoor(int x, int y) {\t\tint page = currentPage();\t\tint col = getColumnOfCoordinate(x, page);\t\tint row = getRowOfCoordinate(y);\t\tint positionInPage = col + (row * computedColumnCount);\t\treturn positionOfItem(page, positionInPage);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getColumnOfCoordinate", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int getColumnOfCoordinate(int x, int page) {\t\tint col = 0;\t\tint pageLeftBorder = (page) * gridPageWidth;\t\tfor (int i = 1; i <= computedColumnCount; i++) {\t\t\tint colRightBorder = (i * columnWidthSize) + pageLeftBorder;\t\t\tif (x < colRightBorder) {\t\t\t\tbreak;\t\t\t}\t\t\tcol++;\t\t}\t\treturn col;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getRowOfCoordinate", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int getRowOfCoordinate(int y) {\t\tint row = 0;\t\tfor (int i = 1; i <= computedRowCount; i++) {\t\t\tif (y < i * rowHeightSize) {\t\t\t\tbreak;\t\t\t}\t\t\trow++;\t\t}\t\treturn row;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "currentPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int currentPage() {\t\treturn container.currentPage();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "reorderChildren", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void reorderChildren() {\t\tList<View> children = cleanUnorderedChildren();\t\taddReorderedChildrenToParent(children);//\t\trequestLayout();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "cleanUnorderedChildren", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "\tprivate List<View> cleanUnorderedChildren() {\t\tList<View> children = saveChildren();\t\tremoveItemChildren(children);\t\treturn children;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "addReorderedChildrenToParent", "params": ["List<View>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void addReorderedChildrenToParent(List<View> children) {\t\tList<View> reorderedViews = reeorderView(children);\t\tnewPositions.clear();\t\tfor (View view : reorderedViews) {\t\t\tif (view != null)\t\t\t\taddView(view);\t\t}\t\tdeleteZone.bringToFront();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "saveChildren", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "\tprivate List<View> saveChildren() {\t\tList<View> children = new ArrayList<View>();\t\tfor (int i = 0; i < getItemViewCount(); i++) {\t\t    View child;\t\t    if (i == dragged) {\t\t        child = getDraggedView();\t\t    } else {\t\t        child = getChildView(i);\t\t    }\t\t\t\t\t\tchild.clearAnimation();\t\t\tchildren.add(child);\t\t}\t\treturn children;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "reeorderView", "params": ["List<View>"], "throws": null, "modifiers": ["private"], "return_type": "List<View>", "snippet": "\tprivate List<View> reeorderView(List<View> children) {\t\tView[] views = new View[children.size()];\t\tfor (int i = 0; i < children.size(); i++) {\t\t\tint position = newPositions.get(i, -1);\t\t\tif (childHasMoved(position)) {\t\t\t\tviews[position] = children.get(i);\t\t\t} else {\t\t\t\tviews[i] = children.get(i);\t\t\t}\t\t}\t\treturn new ArrayList<View>(Arrays.asList(views));\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "childHasMoved", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean childHasMoved(int position) {\t\treturn position != -1;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "onMeasure", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\t\tint widthMode = MeasureSpec.getMode(widthMeasureSpec);\t\tint heightMode = MeasureSpec.getMode(heightMeasureSpec);\t\tint widthSize = MeasureSpec.getSize(widthMeasureSpec);\t\tint heightSize = MeasureSpec.getSize(heightMeasureSpec);\t\tWindowManager wm = (WindowManager) getContext().getSystemService(Context.WINDOW_SERVICE);\t\tDisplay display = wm.getDefaultDisplay();\t\twidthSize = acknowledgeWidthSize(widthMode, widthSize, display);\t\theightSize = acknowledgeHeightSize(heightMode, heightSize, display);\t\tadaptChildrenMeasuresToViewSize(widthSize, heightSize);\t\tsearchBiggestChildMeasures();\t\tcomputeGridMatrixSize(widthSize, heightSize);\t\tcomputeColumnsAndRowsSizes(widthSize, heightSize);\t\tmeasureChild(deleteZone, MeasureSpec.makeMeasureSpec(gridPageWidth, MeasureSpec.EXACTLY), MeasureSpec.makeMeasureSpec((int)getPixelFromDip(40), MeasureSpec.EXACTLY));\t\tsetMeasuredDimension(widthSize * adapter.pageCount(), heightSize);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getPixelFromDip", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "\tprivate float getPixelFromDip(int size) {\t\tResources r = getResources();\t\tfloat px = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, size, r.getDisplayMetrics());\t\treturn px;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "computeColumnsAndRowsSizes", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void computeColumnsAndRowsSizes(int widthSize, int heightSize) {\t\tcolumnWidthSize = widthSize / computedColumnCount;\t\trowHeightSize = heightSize / computedRowCount;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "computeGridMatrixSize", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void computeGridMatrixSize(int widthSize, int heightSize) {\t\tif (adapter.columnCount() != -1 && adapter.rowCount() != -1) {\t\t\tcomputedColumnCount = adapter.columnCount();\t\t\tcomputedRowCount = adapter.rowCount();\t\t} else {\t\t\tif (biggestChildWidth > 0 && biggestChildHeight > 0) {\t\t\t\tcomputedColumnCount = widthSize / biggestChildWidth;\t\t\t\tcomputedRowCount = heightSize / biggestChildHeight;\t\t\t}\t\t}\t\tif (computedColumnCount == 0) {\t\t\tcomputedColumnCount = 1;\t\t}\t\tif (computedRowCount == 0) {\t\t\tcomputedRowCount = 1;\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "searchBiggestChildMeasures", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void searchBiggestChildMeasures() {\t\tbiggestChildWidth = 0;\t\tbiggestChildHeight = 0;\t\tfor (int index = 0; index < getItemViewCount(); index++) {\t\t\tView child = getChildAt(index);\t\t\tif (biggestChildHeight < child.getMeasuredHeight()) {\t\t\t\tbiggestChildHeight = child.getMeasuredHeight();\t\t\t}\t\t\tif (biggestChildWidth < child.getMeasuredWidth()) {\t\t\t\tbiggestChildWidth = child.getMeasuredWidth();\t\t\t}\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getItemViewCount", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int getItemViewCount() {\t\t// -1 to remove the DeleteZone from the loop\t\treturn getChildCount()-1;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "adaptChildrenMeasuresToViewSize", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void adaptChildrenMeasuresToViewSize(int widthSize, int heightSize) {\t\tif (adapter.columnCount() != PagedDragDropGridAdapter.AUTOMATIC && adapter.rowCount() != PagedDragDropGridAdapter.AUTOMATIC) {\t\t\tint desiredGridItemWidth = widthSize / adapter.columnCount();\t\t\tint desiredGridItemHeight = heightSize / adapter.rowCount();\t\t\tmeasureChildren(MeasureSpec.makeMeasureSpec(desiredGridItemWidth, MeasureSpec.AT_MOST), MeasureSpec.makeMeasureSpec(desiredGridItemHeight, MeasureSpec.AT_MOST));\t\t} else {\t\t\tmeasureChildren(MeasureSpec.UNSPECIFIED, MeasureSpec.UNSPECIFIED);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "acknowledgeHeightSize", "params": ["int", "int", "Display"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int acknowledgeHeightSize(int heightMode, int heightSize, Display display) {\t\tif (heightMode == MeasureSpec.UNSPECIFIED) {\t\t\theightSize = display.getHeight();\t\t}\t\tgridPageHeight = heightSize;\t\treturn heightSize;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "acknowledgeWidthSize", "params": ["int", "int", "Display"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int acknowledgeWidthSize(int widthMode, int widthSize, Display display) {\t\tif (widthMode == MeasureSpec.UNSPECIFIED) {\t\t\twidthSize = display.getWidth();\t\t}        if(adapter.getPageWidth(currentPage()) != 0) {            widthSize = adapter.getPageWidth(currentPage());        }\t\tgridPageWidth = widthSize;\t\treturn widthSize;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "onLayout", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onLayout(boolean changed, int l, int t, int r, int b) {        //If we don't have pages don't do layout        if(adapter.pageCount() == 0)            return;\t\tint pageWidth  = (l + r) / adapter.pageCount();\t\tfor (int page = 0; page < adapter.pageCount(); page++) {\t\t\tlayoutPage(pageWidth, page);\t\t}\t\t\t\tif (weWereMovingDraggedBetweenPages()) {\t\t    bringDraggedToFront();\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "weWereMovingDraggedBetweenPages", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean weWereMovingDraggedBetweenPages() {        return dragged != -1;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "layoutPage", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void layoutPage(int pageWidth, int page) {\t\tint col = 0;\t\tint row = 0;\t\tfor (int childIndex = 0; childIndex < adapter.itemCountInPage(page); childIndex++) {\t\t\tlayoutAChild(pageWidth, page, col, row, childIndex);\t\t\tcol++;\t\t\tif (col == computedColumnCount) {\t\t\t\tcol = 0;\t\t\t\trow++;\t\t\t}\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "layoutAChild", "params": ["int", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void layoutAChild(int pageWidth, int page, int col, int row, int childIndex) {\t\tint position = positionOfItem(page, childIndex);\t\tView child = getChildAt(position);\t\tint left = 0;\t\tint top = 0;\t\tif (position == dragged && lastTouchOnEdge()) {\t\t\tleft = computePageEdgeXCoor(child);\t\t\ttop = lastTouchY - (child.getMeasuredHeight() / 2);\t\t} else {\t\t\tleft = (page * pageWidth) + (col * columnWidthSize) + ((columnWidthSize - child.getMeasuredWidth()) / 2);\t\t\ttop = (row * rowHeightSize) + ((rowHeightSize - child.getMeasuredHeight()) / 2);\t\t}\t\tchild.layout(left, top, left + child.getMeasuredWidth(), top + child.getMeasuredHeight());\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "lastTouchOnEdge", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean lastTouchOnEdge() {\t\treturn onRightEdgeOfScreen(lastTouchX) || onLeftEdgeOfScreen(lastTouchX);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "computePageEdgeXCoor", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int computePageEdgeXCoor(View child) {\t\tint left;\t\tleft = lastTouchX - (child.getMeasuredWidth() / 2);\t\tif (onRightEdgeOfScreen(lastTouchX)) {\t\t\tleft = left - gridPageWidth;\t\t} else if (onLeftEdgeOfScreen(lastTouchX)) {\t\t\tleft = left + gridPageWidth;\t\t}\t\treturn left;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "onLongClick", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onLongClick(View v) {\t    \t    if(positionForView(v) != -1) {    \t\tcontainer.disableScroll();        \t\tmovingView = true;    \t\tdragged = positionForView(v);    \t\t    \t\tbringDraggedToFront();        \t\tanimateMoveAllItems();        \t\tanimateDragged();    \t\tpopDeleteView();    \t\treturn true;\t    }\t    \t    return false;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "bringDraggedToFront", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void bringDraggedToFront() {\t    View draggedView = getChildAt(dragged);\t    draggedView.bringToFront();\t    \t    deleteZone.bringToFront();\t    \t        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getDraggedView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "View", "snippet": "    private View getDraggedView() {        return getChildAt(getChildCount()-2);//        return getChildAt(dragged);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "animateDragged", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void animateDragged() {\t\tScaleAnimation scale = new ScaleAnimation(1f, 1.4f, 1f, 1.4f, biggestChildWidth / 2 , biggestChildHeight / 2);\t\tscale.setDuration(200);\t\tscale.setFillAfter(true);\t\tscale.setFillEnabled(true);\t\tif (aViewIsDragged()) {\t\t\tView draggedView = getDraggedView();//\t\t\tLog.e(\"animateDragged\", ((TextView)draggedView.findViewWithTag(\"text\")).getText().toString());\t\t\t            draggedView.clearAnimation();\t\t\tdraggedView.startAnimation(scale);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "aViewIsDragged", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean aViewIsDragged() {\t\treturn weWereMovingDraggedBetweenPages();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "popDeleteView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void popDeleteView() {\t    \t    if (adapter.showRemoveDropZone()) {    \t\tshowDeleteView();\t    }\t\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "showDeleteView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showDeleteView() {        deleteZone.setVisibility(View.VISIBLE);           int l = currentPage() * deleteZone.getMeasuredWidth();                int t = computeDropZoneVerticalLocation();        int b = computeDropZoneVerticalBottom();                deleteZone.layout(l,  t, l + gridPageWidth, b);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "computeDropZoneVerticalBottom", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int computeDropZoneVerticalBottom() {        int deleteDropZoneLocation = adapter.deleteDropZoneLocation();        if (deleteDropZoneLocation == PagedDragDropGridAdapter.TOP) {            return deleteZone.getMeasuredHeight();        } else {            return gridPageHeight - deleteZone.getMeasuredHeight() + gridPageHeight;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "computeDropZoneVerticalLocation", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int computeDropZoneVerticalLocation() {                int deleteDropZOneLocation = adapter.deleteDropZoneLocation();        if (deleteDropZOneLocation == PagedDragDropGridAdapter.TOP) {            return 0;        } else {            return gridPageHeight - deleteZone.getMeasuredHeight();        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "createDeleteZone", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void createDeleteZone() {\t\tdeleteZone = new DeleteDropZoneView(getContext());\t\taddView(deleteZone);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "hideDeleteView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void hideDeleteView() {\t    deleteZone.setVisibility(View.INVISIBLE);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "positionForView", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int positionForView(View v) {\t\tfor (int index = 0; index < getItemViewCount(); index++) {\t\t\tView child = getChildView(index);\t\t\t\tif (isPointInsideView(initialX, initialY, child)) {\t\t\t\t\treturn index;\t\t\t\t}\t\t}\t\treturn -1;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "getChildView", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "View", "snippet": "    private View getChildView(int index) {        if (weWereMovingDraggedBetweenPages()) {            if (index >= dragged) {                return getChildAt(index -1);            }        }         return getChildAt(index);            }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "isPointInsideView", "params": ["float", "float", "View"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean isPointInsideView(float x, float y, View view) {\t\tint location[] = new int[2];\t\tview.getLocationOnScreen(location);\t\tint viewX = location[0];\t\tint viewY = location[1];\t\tif (pointIsInsideViewBounds(x, y, view, viewX, viewY)) {\t\t\treturn true;\t\t} else {\t\t\treturn false;\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "pointIsInsideViewBounds", "params": ["float", "float", "View", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean pointIsInsideViewBounds(float x, float y, View view, int viewX, int viewY) {\t\treturn (x > viewX && x < (viewX + view.getWidth())) && (y > viewY && y < (viewY + view.getHeight()));\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "setContainer", "params": ["PagedDragDropGrid"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setContainer(PagedDragDropGrid container) {\t\tthis.container = container;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "positionOfItem", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "\tprivate int positionOfItem(int pageIndex, int childIndex) {\t\tint currentGlobalIndex = 0;\t\tfor (int currentPageIndex = 0; currentPageIndex < adapter.pageCount(); currentPageIndex++) {\t\t\tint itemCount = adapter.itemCountInPage(currentPageIndex);\t\t\tfor (int currentItemIndex = 0; currentItemIndex < itemCount; currentItemIndex++) {\t\t\t\tif (pageIndex == currentPageIndex && childIndex == currentItemIndex) {\t\t\t\t\treturn currentGlobalIndex;\t\t\t\t}\t\t\t\tcurrentGlobalIndex++;\t\t\t}\t\t}\t\treturn -1;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "itemInformationAtPosition", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "ItemPosition", "snippet": "\tprivate ItemPosition itemInformationAtPosition(int position) {\t\tint currentGlobalIndex = 0;\t\tfor (int currentPageIndex = 0; currentPageIndex < adapter.pageCount(); currentPageIndex++) {\t\t\tint itemCount = adapter.itemCountInPage(currentPageIndex);\t\t\tfor (int currentItemIndex = 0; currentItemIndex < itemCount; currentItemIndex++) {\t\t\t\tif (currentGlobalIndex == position) {\t\t\t\t\treturn new ItemPosition(currentPageIndex, currentItemIndex);\t\t\t\t}\t\t\t\tcurrentGlobalIndex++;\t\t\t}\t\t}\t\treturn null;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "tellAdapterToSwapDraggedWithTarget", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void tellAdapterToSwapDraggedWithTarget(int dragged, int target) {\t\tItemPosition draggedItemPositionInPage = itemInformationAtPosition(dragged);\t\tItemPosition targetItemPositionInPage = itemInformationAtPosition(target);\t\tif (draggedItemPositionInPage != null && targetItemPositionInPage != null) {\t\t\tadapter.swapItems(draggedItemPositionInPage.pageIndex,draggedItemPositionInPage.itemIndex, targetItemPositionInPage.itemIndex);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "tellAdapterToMoveItemToPreviousPage", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void tellAdapterToMoveItemToPreviousPage(int itemIndex) {\t\tItemPosition itemPosition = itemInformationAtPosition(itemIndex);\t\tadapter.moveItemToPreviousPage(itemPosition.pageIndex,itemPosition.itemIndex);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "tellAdapterToMoveItemToNextPage", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void tellAdapterToMoveItemToNextPage(int itemIndex) {\t\tItemPosition itemPosition = itemInformationAtPosition(itemIndex);\t\tadapter.moveItemToNextPage(itemPosition.pageIndex,itemPosition.itemIndex);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/pageddragdropgrid/src/ca/laplanete/mobile/pageddragdropgrid/DragDropGrid.java", "stars": "74", "class": {"name": "DragDropGrid", "extends": "ViewGroup", "implements": ["OnTouchListener", "OnLongClickListener"], "modifiers": ["public"]}}, {"method_name": "afterCompletion", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "Exception"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void afterCompletion(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, Exception arg3)\t\t\tthrows Exception {\t\t// TODO Auto-generated method stub\t\t\t}", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/intercepter/LoginIntercepter.java", "stars": "10", "class": {"name": "LoginIntercepter", "extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"method_name": "postHandle", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "ModelAndView"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void postHandle(HttpServletRequest arg0, HttpServletResponse arg1, Object arg2, ModelAndView arg3)\t\t\tthrows Exception {\t\t// TODO Auto-generated method stub\t\t\t}", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/intercepter/LoginIntercepter.java", "stars": "10", "class": {"name": "LoginIntercepter", "extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"method_name": "preHandle", "params": ["HttpServletRequest", "HttpServletResponse", "Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean preHandle(HttpServletRequest req, HttpServletResponse resp, Object arg2) throws Exception {\t\t//\u83b7\u5f97url\u5730\u5740\t\tStringBuffer url = req.getRequestURL();\t\tif(url.toString().contains(\"readArticleById.do\")){\t\t\treturn true;\t\t}\t\tif(url.indexOf(\"login.do\")>= 0||url.indexOf(\"register.do\")>= 0||url.indexOf(\"isExistUserName.do\")>= 0||url.indexOf(\"isExistEmail.do\")>= 0||url.indexOf(\"isExistPhone.do\")>= 0||url.indexOf(\"activeUser.do\")>= 0||url.indexOf(\"updateEmail.do\")>= 0){\t\t\treturn true;\t\t}\t\tHttpSession session = req.getSession();\t\tUser user = (User) session.getAttribute(\"onlineUser\");\t\tif(user != null){\t\t\treturn true;\t\t}\t\treq.getRequestDispatcher(\"login.jsp\").forward(req, resp);\t\treturn false;\t}", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/intercepter/LoginIntercepter.java", "stars": "10", "class": {"name": "LoginIntercepter", "extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"method_name": "initValues", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initValues(GLSurfaceView mGlSurfaceView) {        mWidth = mGlSurfaceView.getWidth();        mHeight = mGlSurfaceView.getHeight();        mRandom = new Random(new Date().getTime());    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/GrainEffect.java", "stars": "2", "class": {"name": "GrainEffect", "extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"method_name": "getShader", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {        initValues(mGlSurfaceView);        float seed[] = {mRandom.nextFloat(), mRandom.nextFloat()};        String scaleString = \"scale = \" + strength + \";\\n\";        String seedString[] = new String[2];        seedString[0] = \"seed[0] = \" + seed[0] + \";\\n\";        seedString[1] = \"seed[1] = \" + seed[1] + \";\\n\";        String stepX = \"stepX = \" + 0.5f / mWidth + \";\\n\";        String stepY = \"stepY = \" + 0.5f / mHeight + \";\\n\";        // locString[1] = \"loc[1] = loc[1]+\" + seedString[1] + \";\\n\";        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"                + \"precision mediump float;\\n\"                + \" vec2 seed;\\n\"                + \"varying vec2 vTextureCoord;\\n\"                + \"uniform samplerExternalOES tex_sampler_0;\\n\"                + \"uniform samplerExternalOES tex_sampler_1;\\n\"                + \"float scale;\\n\"                + \" float stepX;\\n\"                + \" float stepY;\\n\"                + \"float rand(vec2 loc) {\\n\"                + \"  float theta1 = dot(loc, vec2(0.9898, 0.233));\\n\"                + \"  float theta2 = dot(loc, vec2(12.0, 78.0));\\n\"                + \"  float value = cos(theta1) * sin(theta2) + sin(theta1) * cos(theta2);\\n\"                +                // keep value of part1 in range: (2^-14 to 2^14).                \"  float temp = mod(197.0 * value, 1.0) + value;\\n\"                + \"  float part1 = mod(220.0 * temp, 1.0) + temp;\\n\"                + \"  float part2 = value * 0.5453;\\n\"                + \"  float part3 = cos(theta1 + theta2) * 0.43758;\\n\"                + \"  float sum = (part1 + part2 + part3);\\n\"                + \"  return fract(sum)*scale;\\n\"                + \"}\\n\"                + \"void main() {\\n\"                // Parameters that were created above                + seedString[0]                + seedString[1]                + scaleString                + stepX                + stepY                + \"  float noise = texture2D(tex_sampler_1, vTextureCoord + vec2(-stepX, -stepY)).r * 0.224;\\n\"                + \"  noise += texture2D(tex_sampler_1, vTextureCoord + vec2(-stepX, stepY)).r * 0.224;\\n\"                + \"  noise += texture2D(tex_sampler_1, vTextureCoord + vec2(stepX, -stepY)).r * 0.224;\\n\"                + \"  noise += texture2D(tex_sampler_1, vTextureCoord + vec2(stepX, stepY)).r * 0.224;\\n\"                + \"  noise += 0.4448;\\n\"                + \"  noise *= scale;\\n\"                + \"  vec4 color = texture2D(tex_sampler_0, vTextureCoord);\\n\"                + \"  float energy = 0.33333 * color.r + 0.33333 * color.g + 0.33333 * color.b;\\n\"                + \"  float mask = (1.0 - sqrt(energy));\\n\"                + \"  float weight = 1.0 - 1.333 * mask * noise;\\n\"                + \"  gl_FragColor = vec4(color.rgb * weight, color.a);\\n\"                + \"  gl_FragColor = gl_FragColor+vec4(rand(vTextureCoord + seed), rand(vTextureCoord + seed),rand(vTextureCoord + seed),1);\\n\"                + \"}\\n\";        return shader;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/GrainEffect.java", "stars": "2", "class": {"name": "GrainEffect", "extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"method_name": "buildGetUsersQuery", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersQuery(Map<String, Object> parameter) {    // MyBatis wraps a single List parameter in a Map with the key=\"list\",    // so need to pull it out    @SuppressWarnings(\"unchecked\")    List<Integer> ids = (List<Integer>) parameter.get(\"list\");    StringBuilder sb = new StringBuilder();    sb.append(\"select * from users where id in (\");    for (int i = 0; i < ids.size(); i++) {      if (i > 0) {        sb.append(\",\");      }      sb.append(\"#{list[\");      sb.append(i);      sb.append(\"]}\");    }    sb.append(\") order by id\");    return sb.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUserQuery", "params": ["Number"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUserQuery(Number parameter) {    // parameter is not a single List or Array,    // so it is passed as is from the mapper    return \"select * from users where id = #{value}\";  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetAllUsersQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetAllUsersQuery() {    return \"select * from users order by id\";  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByCriteriaQuery", "params": ["User"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByCriteriaQuery(final User criteria) {    return new SQL(){{      SELECT(\"*\");      FROM(\"users\");      if (criteria.getId() != null) {        WHERE(\"id = #{id}\");      }      if (criteria.getName() != null) {        WHERE(\"name like #{name} || '%'\");      }    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByCriteriaMapQuery", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByCriteriaMapQuery(final Map<String, Object> criteria) {    return new SQL(){{      SELECT(\"*\");      FROM(\"users\");      if (criteria.get(\"id\") != null) {        WHERE(\"id = #{id}\");      }      if (criteria.get(\"name\") != null) {        WHERE(\"name like #{name} || '%'\");      }    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByCriteriaMapWithParamQuery", "params": ["Integer", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByCriteriaMapWithParamQuery(@Param(\"id\") Integer id, @Param(\"name\") String name) {    return new SQL() {{      SELECT(\"*\");      FROM(\"users\");      if (id != null) {        WHERE(\"id = #{id}\");      }      if (name != null) {        WHERE(\"name like #{name} || '%'\");      }    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByNameQuery", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByNameQuery(final String name, final String orderByColumn) {    return new SQL(){{      SELECT(\"*\");      FROM(\"users\");      if (name != null) {        WHERE(\"name like #{param1} || '%'\");      }      ORDER_BY(orderByColumn);    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByNameUsingMap", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByNameUsingMap(Map<String, Object> params) {    final String name = String.class.cast(params.get(\"param1\"));    final String orderByColumn = String.class.cast(params.get(\"param2\"));    return new SQL(){{      SELECT(\"*\");      FROM(\"users\");      if (name != null) {        WHERE(\"name like #{param1} || '%'\");      }      ORDER_BY(orderByColumn);    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByNameWithParamNameAndOrderByQuery", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByNameWithParamNameAndOrderByQuery(@Param(\"orderByColumn\") final String orderByColumn, @Param(\"name\") final String name) {    return new SQL(){{      SELECT(\"*\");      FROM(\"users\");      if (name != null) {        WHERE(\"name like #{name} || '%'\");      }      ORDER_BY(orderByColumn);    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByNameWithParamNameQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByNameWithParamNameQuery(@Param(\"name\") final String name) {    return new SQL(){{      SELECT(\"*\");      FROM(\"users\");      if (name != null) {        WHERE(\"name like #{name} || '%'\");      }      ORDER_BY(\"id DESC\");    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetUsersByNameWithParamNameQueryUsingMap", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetUsersByNameWithParamNameQueryUsingMap(Map<String, Object> params) {    final String name = String.class.cast(params.get(\"name\"));    final String orderByColumn = String.class.cast(params.get(\"orderByColumn\"));    return new SQL(){{      SELECT(\"*\");      FROM(\"users\");      if (name != null) {        WHERE(\"name like #{param1} || '%'\");      }      ORDER_BY(orderByColumn);    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildInsert", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildInsert() {    return \"insert into users (id, name) values (#{id}, #{name})\";  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildUpdate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildUpdate() {    return \"update users set name = #{name} where id = #{id}\";  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildDelete", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildDelete() {    return \"delete from users where id = #{id}\";  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildSelectByIdProviderContextOnly", "params": ["ProviderContext"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildSelectByIdProviderContextOnly(ProviderContext context) {    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();    return new SQL(){{      SELECT(\"*\");      FROM(tableName);      WHERE(\"id = #{id}\");      if (!containsLogicalDelete){        WHERE(\"logical_delete = ${Constants.LOGICAL_DELETE_OFF}\");      }    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildSelectByNameOneParamAndProviderContext", "params": ["ProviderContext", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildSelectByNameOneParamAndProviderContext(ProviderContext context, final String name) {    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();    return new SQL(){{      SELECT(\"*\");      FROM(tableName);      if (name != null) {        WHERE(\"name like #{name} || '%'\");      }      if (!containsLogicalDelete){        WHERE(\"logical_delete = ${LOGICAL_DELETE_OFF:0}\");      }    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam", "params": ["Integer", "ProviderContext", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildSelectByIdAndNameMultipleParamAndProviderContextWithAtParam(@Param(\"id\") final Integer id, ProviderContext context, @Param(\"name\") final String name) {    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();    return new SQL(){{      SELECT(\"*\");      FROM(tableName);      if (id != null) {        WHERE(\"id = #{id}\");      }      if (name != null) {        WHERE(\"name like #{name} || '%'\");      }      if (!containsLogicalDelete){        WHERE(\"logical_delete = false\");      }    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildSelectByIdAndNameMultipleParamAndProviderContext", "params": ["Integer", "String", "ProviderContext"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildSelectByIdAndNameMultipleParamAndProviderContext(final Integer id, final String name, ProviderContext context) {    final boolean containsLogicalDelete = context.getMapperMethod().getAnnotation(BaseMapper.ContainsLogicalDelete.class) != null;    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();    return new SQL(){{      SELECT(\"*\");      FROM(tableName);      if (id != null) {        WHERE(\"id = #{param1}\");      }      if (name != null) {        WHERE(\"name like #{param2} || '%'\");      }      if (!containsLogicalDelete){        WHERE(\"logical_delete = false\");      }    }}.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getEntityClass", "params": ["ProviderContext"], "throws": null, "modifiers": ["private"], "return_type": "Class<?>", "snippet": "  private Class<?> getEntityClass(ProviderContext providerContext) {    Method mapperMethod = providerContext.getMapperMethod();    Class<?> declaringClass = mapperMethod.getDeclaringClass();    Class<?> mapperClass = providerContext.getMapperType();    Type[] types = mapperClass.getGenericInterfaces();    for (Type type : types) {      if (type instanceof ParameterizedType) {        ParameterizedType t = (ParameterizedType) type;        if (t.getRawType() == declaringClass || mapperClass.isAssignableFrom((Class<?>) t.getRawType())) {          Class<?> returnType = (Class<?>) t.getActualTypeArguments()[0];          return returnType;        }      }    }    throw new RuntimeException(\"The interface [\" + mapperClass.getCanonicalName() + \"] must specify a generic type.\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getColumnMap", "params": ["ProviderContext"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "  private Map<String, String> getColumnMap(ProviderContext context) {    Class<?> entityClass = getEntityClass(context);    Field[] fields = entityClass.getDeclaredFields();    Map<String, String> columnMap = new LinkedHashMap<String, String>();    for (Field field : fields) {      BaseMapper.Column column = field.getAnnotation(BaseMapper.Column.class);      if (column != null) {        String columnName = column.value();        if (columnName == null || columnName.length() == 0) {          columnName = field.getName();        }        columnMap.put(columnName, field.getName());      }    }    if (columnMap.size() == 0) {      throw new RuntimeException(\"There is no field in the class [\" + entityClass.getCanonicalName()          + \"] that specifies the @BaseMapper.Column annotation.\");    }    return columnMap;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildInsertSelective", "params": ["ProviderContext"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildInsertSelective(ProviderContext context) {    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();    Map<String, String> columnMap = getColumnMap(context);    StringBuilder sqlBuffer = new StringBuilder();    sqlBuffer.append(\"<script>\");    sqlBuffer.append(\"insert into \");    sqlBuffer.append(tableName);    sqlBuffer.append(\"<trim prefix=\\\"(\\\" suffix=\\\")\\\" suffixOverrides=\\\",\\\">\");    for (Map.Entry<String, String> entry : columnMap.entrySet()) {      sqlBuffer.append(\"<if test=\\\"\").append(entry.getValue()).append(\" != null\\\">\");      sqlBuffer.append(entry.getKey()).append(\",\");      sqlBuffer.append(\"</if>\");    }    sqlBuffer.append(\"</trim>\");    sqlBuffer.append(\"<trim prefix=\\\"VALUES (\\\" suffix=\\\")\\\" suffixOverrides=\\\",\\\">\");    for (String field : columnMap.values()) {      sqlBuffer.append(\"<if test=\\\"\").append(field).append(\" != null\\\">\");      sqlBuffer.append(\"#{\").append(field).append(\"} ,\");      sqlBuffer.append(\"</if>\");    }    sqlBuffer.append(\"</trim>\");    sqlBuffer.append(\"</script>\");    return sqlBuffer.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildUpdateSelective", "params": ["ProviderContext"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildUpdateSelective(ProviderContext context) {    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();    Map<String, String> columnMap = getColumnMap(context);    StringBuilder sqlBuffer = new StringBuilder();    sqlBuffer.append(\"<script>\");    sqlBuffer.append(\"update \");    sqlBuffer.append(tableName);    sqlBuffer.append(\"<set>\");    for (Map.Entry<String, String> entry : columnMap.entrySet()) {      sqlBuffer.append(\"<if test=\\\"\").append(entry.getValue()).append(\" != null\\\">\");      sqlBuffer.append(entry.getKey()).append(\" = #{\").append(entry.getValue()).append(\"} ,\");      sqlBuffer.append(\"</if>\");    }    sqlBuffer.append(\"</set>\");    // For simplicity, there is no @Id annotation here, using default id directly    sqlBuffer.append(\"where id = #{id}\");    sqlBuffer.append(\"</script>\");    return sqlBuffer.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildGetByEntityQuery", "params": ["ProviderContext"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String buildGetByEntityQuery(ProviderContext context) {    final String tableName = context.getMapperType().getAnnotation(BaseMapper.Meta.class).tableName();    Map<String, String> columnMap = getColumnMap(context);    StringBuilder sqlBuffer = new StringBuilder();    sqlBuffer.append(\"<script>\");    sqlBuffer.append(\"select * from \");    sqlBuffer.append(tableName);    sqlBuffer.append(\"<where>\");    for (Map.Entry<String, String> entry : columnMap.entrySet()) {      sqlBuffer.append(\"<if test=\\\"\").append(entry.getValue()).append(\" != null\\\">\");      sqlBuffer.append(\"and \").append(entry.getKey()).append(\" = #{\").append(entry.getValue()).append(\"}\");      sqlBuffer.append(\"</if>\");    }    sqlBuffer.append(\"</where>\");    sqlBuffer.append(\"</script>\");    return sqlBuffer.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/OurSqlBuilder.java", "stars": "15", "class": {"name": "OurSqlBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "dpToPixel", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float dpToPixel(float dp) {        DisplayMetrics metrics = Resources.getSystem().getDisplayMetrics();        return dp * metrics.density;    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/util/ScreenUtil.java", "stars": "2", "class": {"name": "ScreenUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "authorsLegalityCheck", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void authorsLegalityCheck(String[] authors) {        Objects.requireNonNull(authors, INPUT_ARGUMENT_NULL_MESSAGE);        for (String author : authors) {            Objects.requireNonNull(author, INPUT_ARGUMENT_NULL_MESSAGE);            if (author.isBlank()) {                throw new IllegalArgumentException(BLANK_STRING);            }        }    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LegalityCheck.java", "stars": "6", "class": {"name": "LegalityCheck", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "ratingLegalityCheck", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void ratingLegalityCheck(float rating) {        if (rating > MAX_RATING || rating < MIN_RATING) {            throw new IllegalArgumentException(ILLEGAL_PAGE_RATING_MESSAGE);        }    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LegalityCheck.java", "stars": "6", "class": {"name": "LegalityCheck", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pagesLegalityCheck", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void pagesLegalityCheck(int pages) {        if (pages < 0) {            throw new IllegalArgumentException(ILLEGAL_PAGE_RATING_MESSAGE);        }    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LegalityCheck.java", "stars": "6", "class": {"name": "LegalityCheck", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "titleLegalityCheck", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void titleLegalityCheck(String title) {        Objects.requireNonNull(title, INPUT_ARGUMENT_NULL_MESSAGE);        if (title.isBlank()) {            throw new IllegalArgumentException(BLANK_STRING);        }    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LegalityCheck.java", "stars": "6", "class": {"name": "LegalityCheck", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "ISBNLegalityCheck", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void ISBNLegalityCheck(String ISBN) {        Objects.requireNonNull(ISBN, INPUT_ARGUMENT_NULL_MESSAGE);        if (ISBN.isBlank()) {            throw new IllegalArgumentException(BLANK_STRING);        }    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LegalityCheck.java", "stars": "6", "class": {"name": "LegalityCheck", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(Context context) {        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);        mPaint.setStyle(Paint.Style.STROKE);        mOutRectColor = Color.RED;        mInnerRectColor = Color.GREEN;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onDraw", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {        mPaint.setColor(mOutRectColor);        canvas.drawRect(mOutRect, mPaint);        mPaint.setColor(mInnerRectColor);        canvas.drawRect(mInnerRect, mPaint);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPageScrolled", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {        if (mPositionDataList == null || mPositionDataList.isEmpty()) {            return;        }        // \u8ba1\u7b97\u951a\u70b9\u4f4d\u7f6e        PositionData current = FragmentContainerHelper.getImitativePositionData(mPositionDataList, position);        PositionData next = FragmentContainerHelper.getImitativePositionData(mPositionDataList, position + 1);        mOutRect.left = current.mLeft + (next.mLeft - current.mLeft) * positionOffset;        mOutRect.top = current.mTop + (next.mTop - current.mTop) * positionOffset;        mOutRect.right = current.mRight + (next.mRight - current.mRight) * positionOffset;        mOutRect.bottom = current.mBottom + (next.mBottom - current.mBottom) * positionOffset;        mInnerRect.left = current.mContentLeft + (next.mContentLeft - current.mContentLeft) * positionOffset;        mInnerRect.top = current.mContentTop + (next.mContentTop - current.mContentTop) * positionOffset;        mInnerRect.right = current.mContentRight + (next.mContentRight - current.mContentRight) * positionOffset;        mInnerRect.bottom = current.mContentBottom + (next.mContentBottom - current.mContentBottom) * positionOffset;        invalidate();    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPageSelected", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageSelected(int position) {    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPageScrollStateChanged", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrollStateChanged(int state) {    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPositionDataProvide", "params": ["List<PositionData>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPositionDataProvide(List<PositionData> dataList) {        mPositionDataList = dataList;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getOutRectColor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOutRectColor() {        return mOutRectColor;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setOutRectColor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOutRectColor(int outRectColor) {        mOutRectColor = outRectColor;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getInnerRectColor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInnerRectColor() {        return mInnerRectColor;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setInnerRectColor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInnerRectColor(int innerRectColor) {        mInnerRectColor = innerRectColor;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TestPagerIndicator.java", "stars": "1", "class": {"name": "TestPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "call", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void call(){        System.out.println(\"\u8bf7\u6c42\u8005\u6267\u884c\u547d\u4ee4command...\");        command.execute();    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/command/Boss.java", "stars": "2", "class": {"name": "Boss", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void setUp() throws SQLException {    conn = ConnectionLogger.newInstance(connection, log, 1);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/logging/jdbc/ConnectionLoggerTest.java", "stars": "15", "class": {"name": "ConnectionLoggerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldPrintPrepareStatement", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void shouldPrintPrepareStatement() throws SQLException {    when(log.isDebugEnabled()).thenReturn(true);    conn.prepareStatement(\"select 1\");    verify(log).debug(contains(\"Preparing: select 1\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/logging/jdbc/ConnectionLoggerTest.java", "stars": "15", "class": {"name": "ConnectionLoggerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldPrintPrepareCall", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void shouldPrintPrepareCall() throws SQLException {    when(log.isDebugEnabled()).thenReturn(true);    conn.prepareCall(\"{ call test() }\");    verify(log).debug(contains(\"Preparing: { call test() }\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/logging/jdbc/ConnectionLoggerTest.java", "stars": "15", "class": {"name": "ConnectionLoggerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldNotPrintCreateStatement", "params": [], "throws": ["SQLException"], "modifiers": [], "return_type": "void", "snippet": "  void shouldNotPrintCreateStatement() throws SQLException {    conn.createStatement();    conn.close();    verify(log, times(0)).debug(anyString());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/logging/jdbc/ConnectionLoggerTest.java", "stars": "15", "class": {"name": "ConnectionLoggerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldRegisterAndResolveTypeAlias", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRegisterAndResolveTypeAlias() {    TypeAliasRegistry typeAliasRegistry = new TypeAliasRegistry();    typeAliasRegistry.registerAlias(\"rich\", \"org.apache.ibatis.domain.misc.RichType\");    assertEquals(\"org.apache.ibatis.domain.misc.RichType\", typeAliasRegistry.resolveAlias(\"rich\").getName());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/TypeAliasRegistryTest.java", "stars": "15", "class": {"name": "TypeAliasRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldFetchArrayType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFetchArrayType() {    TypeAliasRegistry typeAliasRegistry = new TypeAliasRegistry();    assertEquals(Byte[].class, typeAliasRegistry.resolveAlias(\"byte[]\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/TypeAliasRegistryTest.java", "stars": "15", "class": {"name": "TypeAliasRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldBeAbleToRegisterSameAliasWithSameTypeAgain", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldBeAbleToRegisterSameAliasWithSameTypeAgain() {    TypeAliasRegistry typeAliasRegistry = new TypeAliasRegistry();    typeAliasRegistry.registerAlias(\"String\", String.class);    typeAliasRegistry.registerAlias(\"string\", String.class);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/TypeAliasRegistryTest.java", "stars": "15", "class": {"name": "TypeAliasRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldNotBeAbleToRegisterSameAliasWithDifferentType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldNotBeAbleToRegisterSameAliasWithDifferentType() {    TypeAliasRegistry typeAliasRegistry = new TypeAliasRegistry();    assertThrows(TypeException.class, () -> typeAliasRegistry.registerAlias(\"string\", BigDecimal.class));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/TypeAliasRegistryTest.java", "stars": "15", "class": {"name": "TypeAliasRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldBeAbleToRegisterAliasWithNullType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldBeAbleToRegisterAliasWithNullType() {    TypeAliasRegistry typeAliasRegistry = new TypeAliasRegistry();    typeAliasRegistry.registerAlias(\"foo\", (Class<?>) null);    assertNull(typeAliasRegistry.resolveAlias(\"foo\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/TypeAliasRegistryTest.java", "stars": "15", "class": {"name": "TypeAliasRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldBeAbleToRegisterNewTypeIfRegisteredTypeIsNull", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldBeAbleToRegisterNewTypeIfRegisteredTypeIsNull() {    TypeAliasRegistry typeAliasRegistry = new TypeAliasRegistry();    typeAliasRegistry.registerAlias(\"foo\", (Class<?>) null);    typeAliasRegistry.registerAlias(\"foo\", String.class);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/TypeAliasRegistryTest.java", "stars": "15", "class": {"name": "TypeAliasRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testCrossReferenceXmlConfig", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void testCrossReferenceXmlConfig() throws Exception {        try (Reader configReader = Resources                .getResourceAsReader(\"org/apache/ibatis/submitted/xml_external_ref/NonFullyQualifiedNamespaceConfig.xml\")) {            SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configReader);            Configuration configuration = sqlSessionFactory.getConfiguration();            MappedStatement selectPerson = configuration.getMappedStatement(\"person namespace.select\");            assertEquals(                    \"org/apache/ibatis/submitted/xml_external_ref/NonFullyQualifiedNamespacePersonMapper.xml\",                    selectPerson.getResource());            initDb(sqlSessionFactory);            try (SqlSession sqlSession = sqlSessionFactory.openSession()) {                Person person = sqlSession.selectOne(\"person namespace.select\", 1);                assertEquals((Integer) 1, person.getId());                assertEquals(2, person.getPets().size());                assertEquals((Integer) 2, person.getPets().get(1).getId());                Pet pet = sqlSession.selectOne(\"person namespace.selectPet\", 1);                assertEquals(Integer.valueOf(1), pet.getId());                Pet pet2 = sqlSession.selectOne(\"pet namespace.select\", 3);                assertEquals((Integer) 3, pet2.getId());                assertEquals((Integer) 2, pet2.getOwner().getId());            }        }    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/NonFullyQualifiedNamespaceTest.java", "stars": "15", "class": {"name": "NonFullyQualifiedNamespaceTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "initDb", "params": ["SqlSessionFactory"], "throws": ["IOException", "SQLException"], "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void initDb(SqlSessionFactory sqlSessionFactory) throws IOException, SQLException {        BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),                \"org/apache/ibatis/submitted/xml_external_ref/CreateDB.sql\");    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/NonFullyQualifiedNamespaceTest.java", "stars": "15", "class": {"name": "NonFullyQualifiedNamespaceTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {        return data.size();    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter2.java", "stars": "1", "class": {"name": "MyAdapter2", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {        return position;    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter2.java", "stars": "1", "class": {"name": "MyAdapter2", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItemId", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {        return position;    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter2.java", "stars": "1", "class": {"name": "MyAdapter2", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getView", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent) {        View vi=convertView;        if(convertView==null)            vi = inflater.inflate(R.layout.list_row_2, null);        TextView title = (TextView)vi.findViewById(R.id.number); // title        TextView artist = (TextView)vi.findViewById(R.id.cash); // artist name        HashMap<String, String> wallet = new HashMap<String, String>();        wallet = data.get(position);        // Setting all values in listview        title.setText(wallet.get(WalletsFragment.KEY_NUMBER));        artist.setText(wallet.get(WalletsFragment.KEY_CASH));        return vi;    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/MyAdapter2.java", "stars": "1", "class": {"name": "MyAdapter2", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "start", "params": ["BaseActivity", "OnPhotoSelectListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void start(BaseActivity activity, OnPhotoSelectListener listener) {        start(activity, 1, listener);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "start", "params": ["BaseActivity", "int", "OnPhotoSelectListener"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void start(BaseActivity activity, int maxSelect, OnPhotoSelectListener listener) {        if (maxSelect < 1) {            // \u6700\u5c11\u8981\u9009\u62e9\u4e00\u4e2a\u56fe\u7247            throw new IllegalArgumentException(\"are you ok?\");        }        Intent intent = new Intent(activity, PhotoActivity.class);        intent.putExtra(IntentKey.AMOUNT, maxSelect);        activity.startActivityForResult(intent, (resultCode, data) -> {            if (listener == null || data == null) {                return;            }            if (resultCode == RESULT_OK) {                listener.onSelected(data.getStringArrayListExtra(IntentKey.PICTURE));            } else {                listener.onCancel();            }        });    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "getLayoutId", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {        return R.layout.activity_photo;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "initView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initView() {        mAdapter = new PhotoAdapter(this, mSelectPhoto);        mAdapter.setOnChildClickListener(R.id.fl_photo_check, this);        mAdapter.setOnItemClickListener(this);        mAdapter.setOnItemLongClickListener(this);        mRecyclerView.setAdapter(mAdapter);        // \u7981\u7528\u52a8\u753b\u6548\u679c        mRecyclerView.setItemAnimator(null);        // \u6dfb\u52a0\u5206\u5272\u7ebf        mRecyclerView.addItemDecoration(new GridSpaceDecoration((int) TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 3, getResources().getDisplayMetrics())));        setOnClickListener(R.id.fab_photo_floating);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "initData", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData() {        // \u83b7\u53d6\u6700\u5927\u7684\u9009\u62e9\u6570        mMaxSelect = getInt(IntentKey.AMOUNT, mMaxSelect);        // \u663e\u793a\u52a0\u8f7d\u8fdb\u5ea6\u6761        showLoading();        // \u52a0\u8f7d\u56fe\u7247\u5217\u8868        new Thread(PhotoActivity.this).start();    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "getHintLayout", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HintLayout", "snippet": "    public HintLayout getHintLayout() {        return mHintLayout;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "onRightClick", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRightClick(View v) {        if (mAllPhoto.isEmpty()) {            return;        }        ArrayList<AlbumDialog.AlbumBean> data = new ArrayList<>(mAllAlbum.size() + 1);        data.add(new AlbumDialog.AlbumBean(mAllPhoto.get(0), getString(R.string.photo_all), mAllPhoto.size(), mAdapter.getData() == mAllPhoto));        Set<String> keys = mAllAlbum.keySet();        for (String key : keys) {            List<String> temp = mAllAlbum.get(key);            if (temp != null && !temp.isEmpty()) {                data.add(new AlbumDialog.AlbumBean(temp.get(0), key, temp.size(), mAdapter.getData() == temp));            }        }        new AlbumDialog.Builder(this)                .setData(data)                .setListener((dialog, position, bean) -> {                    setRightTitle(bean.getName());                    // \u6eda\u52a8\u56de\u7b2c\u4e00\u4e2a\u4f4d\u7f6e                    mRecyclerView.scrollToPosition(0);                    if (position == 0) {                        mAdapter.setData(mAllPhoto);                    } else {                        mAdapter.setData(mAllAlbum.get(bean.getName()));                    }                    // \u6267\u884c\u5217\u8868\u52a8\u753b                    mRecyclerView.setLayoutAnimation(AnimationUtils.loadLayoutAnimation(getActivity(), R.anim.layout_from_right));                    mRecyclerView.scheduleLayoutAnimation();                })                .show();    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "onRestart", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onRestart() {        super.onRestart();        // \u904d\u5386\u5224\u65ad\u9009\u62e9\u4e86\u7684\u56fe\u7247\u662f\u5426\u88ab\u5220\u9664\u4e86        for (String path : mSelectPhoto) {            File file = new File(path);            if (!file.isFile()) {                mSelectPhoto.remove(path);                mAllPhoto.remove(path);                File parentFile = file.getParentFile();                if (parentFile != null) {                    List<String> data = mAllAlbum.get(parentFile.getName());                    if (data != null) {                        data.remove(path);                    }                    mAdapter.notifyDataSetChanged();                    if (mSelectPhoto.isEmpty()) {                        mFloatingView.setImageResource(R.drawable.ic_photo_camera);                    } else {                        mFloatingView.setImageResource(R.drawable.ic_photo_succeed);                    }                }            }        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "onClick", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {        if (v.getId() == R.id.fab_photo_floating) {            if (mSelectPhoto.isEmpty()) {                // \u70b9\u51fb\u62cd\u7167                CameraActivity.start(this, file -> {                    // \u5f53\u524d\u9009\u4e2d\u56fe\u7247\u7684\u6570\u91cf\u5fc5\u987b\u5c0f\u4e8e\u6700\u5927\u9009\u4e2d\u6570                    if (mSelectPhoto.size() < mMaxSelect) {                        mSelectPhoto.add(file.getPath());                    }                    // \u8fd9\u91cc\u9700\u8981\u5ef6\u8fdf\u5237\u65b0\uff0c\u5426\u5219\u53ef\u80fd\u4f1a\u627e\u4e0d\u5230\u62cd\u7167\u7684\u56fe\u7247                    postDelayed(() -> {                        // \u91cd\u65b0\u52a0\u8f7d\u56fe\u7247\u5217\u8868                        new Thread(PhotoActivity.this).start();                    }, 1000);                });            } else {                // \u5b8c\u6210\u9009\u62e9                setResult(RESULT_OK, new Intent().putStringArrayListExtra(IntentKey.PICTURE, mSelectPhoto));                finish();            }        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "onItemClick", "params": ["RecyclerView", "View", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onItemClick(RecyclerView recyclerView, View itemView, int position) {        if (mSelectPhoto.contains(mAdapter.getItem(position))) {            ImageActivity.start(getActivity(), mSelectPhoto, mSelectPhoto.indexOf(mAdapter.getItem(position)));        } else {            ImageActivity.start(getActivity(), mAdapter.getItem(position));        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "onItemLongClick", "params": ["RecyclerView", "View", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onItemLongClick(RecyclerView recyclerView, View itemView, int position) {        if (mSelectPhoto.size() < mMaxSelect) {            // \u957f\u6309\u7684\u65f6\u5019\u6a21\u62df\u9009\u4e2d            return itemView.findViewById(R.id.fl_photo_check).performClick();        } else {            return false;        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "onChildClick", "params": ["RecyclerView", "View", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onChildClick(RecyclerView recyclerView, View childView, int position) {        if (childView.getId() == R.id.fl_photo_check) {            if (mSelectPhoto.contains(mAdapter.getItem(position))) {                mSelectPhoto.remove(mAdapter.getItem(position));                if (mSelectPhoto.isEmpty()) {                    mFloatingView.hide();                    postDelayed(() -> {                        mFloatingView.setImageResource(R.drawable.ic_photo_camera);                        mFloatingView.show();                    }, 200);                }            } else {                if (mMaxSelect == 1 && mSelectPhoto.size() == 1) {                    List<String> data = mAdapter.getData();                    if (data != null) {                        int index = data.indexOf(mSelectPhoto.get(0));                        if (index != -1) {                            mSelectPhoto.remove(0);                            mAdapter.notifyItemChanged(index);                        }                    }                    mSelectPhoto.add(mAdapter.getItem(position));                } else if (mSelectPhoto.size() < mMaxSelect) {                    mSelectPhoto.add(mAdapter.getItem(position));                    if (mSelectPhoto.size() == 1) {                        mFloatingView.hide();                        postDelayed(() -> {                            mFloatingView.setImageResource(R.drawable.ic_photo_succeed);                            mFloatingView.show();                        }, 200);                    }                } else {                    toast(String.format(getString(R.string.photo_max_hint), mMaxSelect));                }            }            mAdapter.notifyItemChanged(position);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {        mAllAlbum.clear();        mAllPhoto.clear();        final Uri contentUri = MediaStore.Files.getContentUri(\"external\");        final String sortOrder = MediaStore.Files.FileColumns.DATE_MODIFIED + \" DESC\";        final String selection =                \"(\" + MediaStore.Files.FileColumns.MEDIA_TYPE + \"=?\"                        + \" OR \"                        + MediaStore.Files.FileColumns.MEDIA_TYPE + \"=?)\"                        + \" AND \"                        + MediaStore.MediaColumns.SIZE + \">0\";        final String[] selectionAllArgs = {String.valueOf(MediaStore.Files.FileColumns.MEDIA_TYPE_IMAGE)};        ContentResolver contentResolver = getContentResolver();        String[] projections;        projections = new String[]{MediaStore.Files.FileColumns._ID, MediaStore.MediaColumns.DATA,                MediaStore.MediaColumns.DISPLAY_NAME, MediaStore.MediaColumns.DATE_MODIFIED,                MediaStore.MediaColumns.MIME_TYPE, MediaStore.MediaColumns.WIDTH, MediaStore                .MediaColumns.HEIGHT, MediaStore.MediaColumns.SIZE};        Cursor cursor = contentResolver.query(contentUri, projections, selection, selectionAllArgs, sortOrder);        if (cursor != null && cursor.moveToFirst()) {            int pathIndex = cursor.getColumnIndex(MediaStore.MediaColumns.DATA);            int mimeTypeIndex = cursor.getColumnIndex(MediaStore.MediaColumns.MIME_TYPE);            int sizeIndex = cursor.getColumnIndex(MediaStore.MediaColumns.SIZE);            int widthIndex = cursor.getColumnIndex(MediaStore.MediaColumns.WIDTH);            int heightIndex = cursor.getColumnIndex(MediaStore.MediaColumns.HEIGHT);            do {                long size = cursor.getLong(sizeIndex);                if (size < 1) {                    continue;                }                String type = cursor.getString(mimeTypeIndex);                String path = cursor.getString(pathIndex);                if (TextUtils.isEmpty(path) || TextUtils.isEmpty(type)) {                    continue;                }                int width = cursor.getInt(widthIndex);                int height = cursor.getInt(heightIndex);                if (width < 1 || height < 1) {                    continue;                }                File file = new File(path);                if (!file.exists() || !file.isFile()) {                    continue;                }                File parentFile = file.getParentFile();                if (parentFile != null) {                    // \u83b7\u53d6\u76ee\u5f55\u540d\u4f5c\u4e3a\u4e13\u8f91\u540d\u79f0                    String albumName = parentFile.getName();                    List<String> files = mAllAlbum.get(albumName);                    if (files == null) {                        files = new ArrayList<>();                        mAllAlbum.put(albumName, files);                    }                    files.add(path);                    mAllPhoto.add(path);                }            } while (cursor.moveToNext());            cursor.close();        }        postDelayed(() -> {            // \u6eda\u52a8\u56de\u7b2c\u4e00\u4e2a\u4f4d\u7f6e            mRecyclerView.scrollToPosition(0);            // \u8bbe\u7f6e\u65b0\u7684\u5217\u8868\u6570\u636e            mAdapter.setData(mAllPhoto);            if (mSelectPhoto.isEmpty()) {                mFloatingView.setImageResource(R.drawable.ic_photo_camera);            } else {                mFloatingView.setImageResource(R.drawable.ic_photo_succeed);            }            // \u6267\u884c\u5217\u8868\u52a8\u753b            mRecyclerView.setLayoutAnimation(AnimationUtils.loadLayoutAnimation(getActivity(), R.anim.layout_fall_down));            mRecyclerView.scheduleLayoutAnimation();            // \u8bbe\u7f6e\u53f3\u6807\u63d0            setRightTitle(R.string.photo_all);            if (mAllPhoto.isEmpty()) {                // \u663e\u793a\u7a7a\u5e03\u5c40                showEmpty();            } else {                // \u663e\u793a\u52a0\u8f7d\u5b8c\u6210                showComplete();            }        }, 500);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/PhotoActivity.java", "stars": "1", "class": {"name": "PhotoActivity", "extends": "MyActivity", "implements": ["StatusAction", "BaseAdapter", "BaseAdapter", "BaseAdapter", "Runnable"], "modifiers": ["public", "final"]}}, {"method_name": "get", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "OperandStackRecoder", "snippet": "    public static OperandStackRecoder get() {        return threadMap.get();    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStackRecoder.java", "stars": "3", "class": {"name": "OperandStackRecoder", "extends": "OperandStack", "implements": null, "modifiers": ["public"]}}, {"method_name": "set", "params": ["OperandStackRecoder"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void set(OperandStackRecoder recorder) {        if (recorder == null) {            throw new IllegalArgumentException();        }        threadMap.set(recorder);    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStackRecoder.java", "stars": "3", "class": {"name": "OperandStackRecoder", "extends": "OperandStack", "implements": null, "modifiers": ["public"]}}, {"method_name": "clear", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void clear() {        threadMap.remove();    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStackRecoder.java", "stars": "3", "class": {"name": "OperandStackRecoder", "extends": "OperandStack", "implements": null, "modifiers": ["public"]}}, {"method_name": "suspend", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void suspend() {        isCapturing = !isRestoring;        isRestoring = false;    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/OperandStackRecoder.java", "stars": "3", "class": {"name": "OperandStackRecoder", "extends": "OperandStack", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDeviceId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDeviceId() {\t\treturn deviceId;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDeviceId", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDeviceId(String deviceId) {\t\tthis.deviceId = deviceId;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getName() {\t\treturn name;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setName(String name) {\t\tthis.name = name;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getFilePath", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getFilePath() {\t\treturn filePath;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setFilePath", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFilePath(String filePath) {\t\tthis.filePath = filePath;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAddress() {\t\treturn address;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setAddress", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAddress(String address) {\t\tthis.address = address;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getStartTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getStartTime() {\t\treturn startTime;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setStartTime", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStartTime(String startTime) {\t\tthis.startTime = startTime;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSecrecy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getSecrecy() {\t\treturn secrecy;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSecrecy", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSecrecy(int secrecy) {\t\tthis.secrecy = secrecy;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getType() {\t\treturn type;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setType", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setType(String type) {\t\tthis.type = type;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getRecorderId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getRecorderId() {\t\treturn recorderId;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setRecordId", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setRecordId(String recorderId) {\t\tthis.recorderId = recorderId;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getEndTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getEndTime() {\t\treturn endTime;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setEndTime", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setEndTime(String endTime) {\t\tthis.endTime = endTime;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/bean/RecordItem.java", "stars": "29", "class": {"name": "RecordItem", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onAttachedToWindow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {        super.onAttachedToWindow();        spinner = (Spinner) findViewById(R.id.interpolatorSpinner);        animateBt = (Button) findViewById(R.id.animateBt);        imageView = (ImageView) findViewById(R.id.imageView);        animateBt.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {                imageView.animate()                        .translationX(ScreenUtil.dpToPixel(150))                        .setDuration(600)                        .setInterpolator(interpolators[spinner.getSelectedItemPosition()])                        .withEndAction(new Runnable() {                            @Override                            public void run() {                                imageView.postDelayed(new Runnable() {                                    @Override                                    public void run() {                                        imageView.setTranslationX(0);                                    }                                }, 500);                            }                        });            }        });    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson5/Practice07Interpolator.java", "stars": "2", "class": {"name": "Practice07Interpolator", "extends": "LinearLayout", "implements": null, "modifiers": ["public"]}}, {"method_name": "aInfosDemandeurUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "InfosDemandeurUI", "snippet": "    public static InfosDemandeurUI aInfosDemandeurUI() {        return InfosDemandeurUI.builder()                .nbMasquesAdulteReutilisableDejaDistribues(2)                .nbMasquesAdulteUsageUniqueDejaDistribues(3)                .nbMasquesEnfantReutilisableDejaDistribues(10)                .nbMasquesEnfantUsageUniqueDejaDistribues(8)                .identite(aIdentiteDemandeurUI())                .build();    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/fixtures/InfosDemandeurUIFixture.java", "stars": "5", "class": {"name": "InfosDemandeurUIFixture", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "doUpdate", "params": ["MappedStatement", "Object"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int doUpdate(MappedStatement ms, Object parameter) throws SQLException {    Configuration configuration = ms.getConfiguration();    StatementHandler handler = configuration.newStatementHandler(this, ms, parameter, RowBounds.DEFAULT, null, null);    Statement stmt = prepareStatement(handler, ms.getStatementLog());    return handler.update(stmt);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "doQuery", "params": ["MappedStatement", "Object", "RowBounds", "ResultHandler", "BoundSql"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> doQuery(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql) throws SQLException {    Configuration configuration = ms.getConfiguration();    StatementHandler handler = configuration.newStatementHandler(wrapper, ms, parameter, rowBounds, resultHandler, boundSql);    Statement stmt = prepareStatement(handler, ms.getStatementLog());    return handler.query(stmt, resultHandler);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "doQueryCursor", "params": ["MappedStatement", "Object", "RowBounds", "BoundSql"], "throws": ["SQLException"], "modifiers": ["protected"], "return_type": "Cursor<E>", "snippet": "  protected <E> Cursor<E> doQueryCursor(MappedStatement ms, Object parameter, RowBounds rowBounds, BoundSql boundSql) throws SQLException {    Configuration configuration = ms.getConfiguration();    StatementHandler handler = configuration.newStatementHandler(wrapper, ms, parameter, rowBounds, null, boundSql);    Statement stmt = prepareStatement(handler, ms.getStatementLog());    return handler.queryCursor(stmt);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "doFlushStatements", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "List<BatchResult>", "snippet": "  public List<BatchResult> doFlushStatements(boolean isRollback) {    for (Statement stmt : statementMap.values()) {      closeStatement(stmt);    }    statementMap.clear();    return Collections.emptyList();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "prepareStatement", "params": ["StatementHandler", "Log"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "Statement", "snippet": "  private Statement prepareStatement(StatementHandler handler, Log statementLog) throws SQLException {    Statement stmt;    BoundSql boundSql = handler.getBoundSql();    String sql = boundSql.getSql();    if (hasStatementFor(sql)) {      stmt = getStatement(sql);      applyTransactionTimeout(stmt);    } else {      Connection connection = getConnection(statementLog);      stmt = handler.prepare(connection, transaction.getTimeout());      putStatement(sql, stmt);    }    handler.parameterize(stmt);    return stmt;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "hasStatementFor", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean hasStatementFor(String sql) {    try {      return statementMap.keySet().contains(sql) && !statementMap.get(sql).getConnection().isClosed();    } catch (SQLException e) {      return false;    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "getStatement", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Statement", "snippet": "  private Statement getStatement(String s) {    return statementMap.get(s);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "putStatement", "params": ["String", "Statement"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void putStatement(String sql, Statement stmt) {    statementMap.put(sql, stmt);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/ReuseExecutor.java", "stars": "15", "class": {"name": "ReuseExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldCompareStringsReturnTrue", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldCompareStringsReturnTrue() {    boolean value = evaluator.evaluateBoolean(\"username == 'cbegin'\", new Author(1, \"cbegin\", \"******\", \"cbegin@apache.org\", \"N/A\", Section.NEWS));    assertTrue(value);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldCompareStringsReturnFalse", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldCompareStringsReturnFalse() {    boolean value = evaluator.evaluateBoolean(\"username == 'norm'\", new Author(1, \"cbegin\", \"******\", \"cbegin@apache.org\", \"N/A\", Section.NEWS));    assertFalse(value);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldReturnTrueIfNotNull", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldReturnTrueIfNotNull() {    boolean value = evaluator.evaluateBoolean(\"username\", new Author(1, \"cbegin\", \"******\", \"cbegin@apache.org\", \"N/A\", Section.NEWS));    assertTrue(value);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldReturnFalseIfNull", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldReturnFalseIfNull() {    boolean value = evaluator.evaluateBoolean(\"password\", new Author(1, \"cbegin\", null, \"cbegin@apache.org\", \"N/A\", Section.NEWS));    assertFalse(value);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldReturnTrueIfNotZero", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldReturnTrueIfNotZero() {    boolean value = evaluator.evaluateBoolean(\"id\", new Author(1, \"cbegin\", null, \"cbegin@apache.org\", \"N/A\", Section.NEWS));    assertTrue(value);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldReturnFalseIfZero", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldReturnFalseIfZero() {    boolean value = evaluator.evaluateBoolean(\"id\", new Author(0, \"cbegin\", null, \"cbegin@apache.org\", \"N/A\", Section.NEWS));    assertFalse(value);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldReturnFalseIfZeroWithScale", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldReturnFalseIfZeroWithScale() {    class Bean {      @SuppressWarnings(\"unused\")      public double d = 0.0d;    }    assertFalse(evaluator.evaluateBoolean(\"d\", new Bean()));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldIterateOverIterable", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldIterateOverIterable() {    final HashMap<String, String[]> parameterObject = new HashMap<String, String[]>() {{      put(\"array\", new String[]{\"1\", \"2\", \"3\"});    }};    final Iterable<?> iterable = evaluator.evaluateIterable(\"array\", parameterObject);    int i = 0;    for (Object o : iterable) {      assertEquals(String.valueOf(++i), o);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/xml/dynamic/ExpressionEvaluatorTest.java", "stars": "15", "class": {"name": "ExpressionEvaluatorTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "handle", "params": ["WxMpXmlMessage", "Map<String,Object>", "WxMpService", "WxSessionManager"], "throws": null, "modifiers": ["public"], "return_type": "WxMpXmlOutMessage", "snippet": "  public WxMpXmlOutMessage handle(WxMpXmlMessage wxMessage,                                  Map<String, Object> context, WxMpService wxMpService,                                  WxSessionManager sessionManager) {    //TODO \u5bf9\u4f1a\u8bdd\u505a\u5904\u7406    return null;  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/handler/KfSessionHandler.java", "stars": "2", "class": {"name": "KfSessionHandler", "extends": "AbstractHandler", "implements": null, "modifiers": ["public"]}}, {"method_name": "onClick", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onClick (android.view.View p0)\t{\t\tn_onClick (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableViewHolder.java", "stars": "2", "class": {"name": "SelectableViewHolder", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"method_name": "n_onClick", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onClick (android.view.View p0);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableViewHolder.java", "stars": "2", "class": {"name": "SelectableViewHolder", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableViewHolder.java", "stars": "2", "class": {"name": "SelectableViewHolder", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableViewHolder.java", "stars": "2", "class": {"name": "SelectableViewHolder", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"method_name": "onScale", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onScale (android.view.ScaleGestureDetector p0)\t{\t\treturn n_onScale (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onScale", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onScale (android.view.ScaleGestureDetector p0);\tpublic boolean onScaleBegin (android.view.ScaleGestureDetector p0)\t{\t\treturn n_onScaleBegin (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "onScaleBegin", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onScaleBegin (android.view.ScaleGestureDetector p0)\t{\t\treturn n_onScaleBegin (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onScaleBegin", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onScaleBegin (android.view.ScaleGestureDetector p0);\tpublic void onScaleEnd (android.view.ScaleGestureDetector p0)\t{\t\tn_onScaleEnd (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "onScaleEnd", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onScaleEnd (android.view.ScaleGestureDetector p0)\t{\t\tn_onScaleEnd (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onScaleEnd", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onScaleEnd (android.view.ScaleGestureDetector p0);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/InnerScaleListener.java", "stars": "2", "class": {"name": "InnerScaleListener", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "gerarListaPlataformaContaJogos", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void gerarListaPlataformaContaJogos(){        String line = \"\";                Map<String, Info> map = new TreeMap<>();        File arq = new File(\"game-reviews.csv\");        SimpleReader file = new SimpleReader(arq.getAbsolutePath());        line = file.readLine();        line = file.readLine();        while (line != null) {            String[] col = line.split(\";\");                                    String platform = col[1];                                                if (!map.containsKey(platform)) {                Info i = new Info();                i.totaisTitulos = 1;                                map.put(platform, i);            } else {                Info i = map.get(platform);                i.totaisTitulos++;            }            line = file.readLine();        }        Set<Map.Entry<String, Info>> set = map.entrySet();                        set.forEach((result) -> {            System.out.println(\"Plataforma \" + result.getKey() + \" | Total de Titulos \" + result.getValue().totaisTitulos);        });    }", "url": "https://raw.githubusercontent.com/gustavost645/tarefa_reviews/master/src/main/java/br/univates/GeradorLista/ReviewPlataforma.java", "stars": "2", "class": {"name": "ReviewPlataforma", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreateView", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public", "final"], "return_type": "View", "snippet": "\tpublic final View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\t\tView layout = super.onCreateView(inflater, container, savedInstanceState);\t\tListView lv = (ListView) layout.findViewById(android.R.id.list);\t\tViewGroup parent = (ViewGroup) lv.getParent();\t\t// Remove ListView and add PullToRefreshListView in its place\t\tint lvIndex = parent.indexOfChild(lv);\t\tparent.removeViewAt(lvIndex);\t\tmPullToRefreshListView = onCreatePullToRefreshListView(inflater, savedInstanceState);\t\tparent.addView(mPullToRefreshListView, lvIndex, lv.getLayoutParams());\t\treturn layout;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshListFragment/src/com/handmark/pulltorefresh/extras/listfragment/PullToRefreshBaseListFragment.java", "stars": "74", "class": {"name": "PullToRefreshBaseListFragment", "extends": "ListFragment", "implements": null, "modifiers": ["abstract"]}}, {"method_name": "getPullToRefreshListView", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "T", "snippet": "\tpublic final T getPullToRefreshListView() {\t\treturn mPullToRefreshListView;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshListFragment/src/com/handmark/pulltorefresh/extras/listfragment/PullToRefreshBaseListFragment.java", "stars": "74", "class": {"name": "PullToRefreshBaseListFragment", "extends": "ListFragment", "implements": null, "modifiers": ["abstract"]}}, {"method_name": "onCreatePullToRefreshListView", "params": ["LayoutInflater", "Bundle"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "T", "snippet": "\tprotected abstract T onCreatePullToRefreshListView(LayoutInflater inflater, Bundle savedInstanceState);}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/extras/PullToRefreshListFragment/src/com/handmark/pulltorefresh/extras/listfragment/PullToRefreshBaseListFragment.java", "stars": "74", "class": {"name": "PullToRefreshBaseListFragment", "extends": "ListFragment", "implements": null, "modifiers": ["abstract"]}}, {"method_name": "initialize", "params": ["Context", "StarDriverResult"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialize(Context context, StarDriverResult result) {        try {            Thread.sleep(12);            throw new NullPointerException();        } catch (Exception e) {            result.success = false;            result.errorMessage = e.toString();        }    }", "url": "https://raw.githubusercontent.com/succlz123/StarDriver-APT/master/app/src/main/java/org/succlz123/stardriver/app/task/AppInitCrashTracking.java", "stars": "4", "class": {"name": "AppInitCrashTracking", "extends": "IStarDriver", "implements": null, "modifiers": ["public"]}}, {"method_name": "buildCache", "params": ["String", "RemovalListener<String,V>"], "throws": null, "modifiers": ["public"], "return_type": "Cache<String,V>", "snippet": "    public <V> Cache<String, V> buildCache(String cacheId, RemovalListener<String, V> removalListener) {        Cache<String, V> vCache = CacheBuilder.newBuilder()                .maximumSize(conf.getConnCacheSize())                .expireAfterWrite(conf.getConnCacheTime(), TimeUnit.SECONDS)                .removalListener(removalListener)                .build();        cacheStore.putIfAbsent(cacheId, vCache);        return vCache;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/cache/ConnCacheManager.java", "stars": "23", "class": {"name": "ConnCacheManager", "extends": null, "implements": ["CacheManager"], "modifiers": ["public"]}}, {"method_name": "buildCache", "params": ["String", "CacheLoader<String,V>", "RemovalListener<String,V>"], "throws": null, "modifiers": ["public"], "return_type": "LoadingCache<String,V>", "snippet": "    public <V> LoadingCache<String, V> buildCache(String cacheId, CacheLoader<String, V> loader,                                                  RemovalListener<String, V> removalListener) {        LoadingCache<String, V> vCache = CacheBuilder.newBuilder()                .maximumSize(conf.getConnCacheSize())                .expireAfterWrite(conf.getConnCacheTime(), TimeUnit.SECONDS)                .removalListener(removalListener)                .build(loader);        cacheStore.putIfAbsent(cacheId, vCache);        return vCache;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/conns/cache/ConnCacheManager.java", "stars": "23", "class": {"name": "ConnCacheManager", "extends": null, "implements": ["CacheManager"], "modifiers": ["public"]}}, {"method_name": "initialize", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initialize() {        this.setSize(350, 457);        this.setTitle(\"\u9006\u30a2\u30bb\u30f3\u30d6\u30eb\");        this.setContentPane(getJContentPane());    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJContentPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getJContentPane() {        if (jContentPane == null) {            jContentPane = new JPanel();            jContentPane.setLayout(new BoxLayout(getJContentPane(), BoxLayout.Y_AXIS));            jContentPane.setSize(new Dimension(265, 272));            jContentPane.add(getSP_main(), null);            jContentPane.add(getP_option(), null);        }        return jContentPane;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSP_main", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JScrollPane", "snippet": "    private JScrollPane getSP_main() {        if (SP_main == null) {            SP_main = new JScrollPane();            SP_main.setViewportView(getTA_main());        }        return SP_main;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getTA_main", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTextArea", "snippet": "    private JTextArea getTA_main() {        if (TA_main == null) {            TA_main = new JTextArea();            TA_main.setFont(new Font(\"Monospaced\",  Font.PLAIN, 12));            TA_main.setEditable(false);        }        return TA_main;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getP_option", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getP_option() {        if (P_option == null) {            L_address = new JLabel();            L_address.setText(\"\u30a2\u30c9\u30ec\u30b9\");            P_option = new JPanel();            P_option.setLayout(new BoxLayout(getP_option(), BoxLayout.X_AXIS));            P_option.add(L_address, null);            P_option.add(getTF_start(), null);            P_option.add(getTF_end(), null);            P_option.add(getBT_execute(), null);        }        return P_option;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getTF_start", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTextField", "snippet": "    private JTextField getTF_start() {        if (TF_start == null) {            TF_start = new JTextField();            TF_start.setMaximumSize(new Dimension(Short.MAX_VALUE, 30));        }        return TF_start;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getTF_end", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTextField", "snippet": "    private JTextField getTF_end() {        if (TF_end == null) {            TF_end = new JTextField();            TF_end.setMaximumSize(new Dimension(Short.MAX_VALUE, 30));        }        return TF_end;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBT_execute", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getBT_execute() {        if (BT_execute == null) {            BT_execute = new JButton();            BT_execute.setText(\"\u5b9f\u884c\");            BT_execute.addActionListener(new java.awt.event.ActionListener() {                public void actionPerformed(java.awt.event.ActionEvent e) {                    int start = Integer.parseInt(TF_start.getText(), 16);                    int end = Integer.parseInt(TF_end.getText(), 16);                    Disassembler da = new Disassembler(computer.getHardware().getMemory(), start, end);                    da.execute();                    TA_main.setText(da.print());                    TA_main.setCaretPosition(0);                }            });        }        return BT_execute;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/DisassembleDialog.java", "stars": "4", "class": {"name": "DisassembleDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getMediaPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMediaPlayer", "snippet": "    public IMediaPlayer getMediaPlayer() {        return mediaPlayer;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "initVideoPlayer", "params": ["Context", "Message", "List<VideoOptionModel>", "ICacheManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initVideoPlayer(Context context, Message msg, List<VideoOptionModel> optionModelList, ICacheManager cacheManager) {        this.context = context.getApplicationContext();        mediaPlayer = new IjkExo2MediaPlayer(context);        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);        if (dummySurface == null) {            dummySurface = DummySurface.newInstanceV17(context, false);        }        //\u4f7f\u7528\u81ea\u5df1\u7684cache\u6a21\u5f0f        GSYModel gsyModel = (GSYModel) msg.obj;        try {            mediaPlayer.setLooping(gsyModel.isLooping());            mediaPlayer.setPreview(gsyModel.getMapHeadData() != null && gsyModel.getMapHeadData().size() > 0);            if (gsyModel.isCache() && cacheManager != null) {                //\u901a\u8fc7\u7ba1\u7406\u5668\u5904\u7406                cacheManager.doCacheLogic(context, mediaPlayer, gsyModel.getUrl(), gsyModel.getMapHeadData(), gsyModel.getCachePath());            } else {                //\u901a\u8fc7\u81ea\u5df1\u7684\u5185\u90e8\u7f13\u5b58\u673a\u5236                mediaPlayer.setCache(gsyModel.isCache());                mediaPlayer.setCacheDir(gsyModel.getCachePath());                mediaPlayer.setOverrideExtension(gsyModel.getOverrideExtension());                mediaPlayer.setDataSource(context, Uri.parse(gsyModel.getUrl()), gsyModel.getMapHeadData());            }            if (gsyModel.getSpeed() != 1 && gsyModel.getSpeed() > 0) {                mediaPlayer.setSpeed(gsyModel.getSpeed(), 1);            }        } catch (Exception e) {            e.printStackTrace();        }        initSuccess(gsyModel);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "showDisplay", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDisplay(final Message msg) {        if (mediaPlayer == null) {            return;        }        if (msg.obj == null) {            mediaPlayer.setSurface(dummySurface);        } else {            Surface holder = (Surface) msg.obj;            surface = holder;            mediaPlayer.setSurface(holder);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSpeed", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeed(final float speed, final boolean soundTouch) {        if (mediaPlayer != null) {            try {                mediaPlayer.setSpeed(speed, 1);            } catch (Exception e) {                e.printStackTrace();            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setNeedMute", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedMute(final boolean needMute) {        if (mediaPlayer != null) {            if (needMute) {                mediaPlayer.setVolume(0, 0);            } else {                mediaPlayer.setVolume(1, 1);            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "releaseSurface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseSurface() {        if (surface != null) {            //surface.release();            surface = null;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "release", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {        if (mediaPlayer != null) {            mediaPlayer.setSurface(null);            mediaPlayer.release();        }        if (dummySurface != null) {            dummySurface.release();            dummySurface = null;        }        lastTotalRxBytes = 0;        lastTimeStamp = 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBufferedPercentage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBufferedPercentage() {        if (mediaPlayer != null) {            return mediaPlayer.getBufferedPercentage();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getNetSpeed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getNetSpeed() {        if (mediaPlayer != null) {            return getNetSpeed(context);        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSpeedPlaying", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeedPlaying(float speed, boolean soundTouch) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "start", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {        if (mediaPlayer != null) {            mediaPlayer.start();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "stop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {        if (mediaPlayer != null) {            mediaPlayer.stop();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "pause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {        if (mediaPlayer != null) {            mediaPlayer.pause();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoWidth", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoWidth() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoWidth();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoHeight", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoHeight() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoHeight();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "isPlaying", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlaying() {        if (mediaPlayer != null) {            return mediaPlayer.isPlaying();        }        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "seekTo", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekTo(long time) {        if (mediaPlayer != null) {            mediaPlayer.seekTo(time);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCurrentPosition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentPosition() {        if (mediaPlayer != null) {            return mediaPlayer.getCurrentPosition();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDuration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {        if (mediaPlayer != null) {            return mediaPlayer.getDuration();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoSarNum", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarNum() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoSarNum();        }        return 1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoSarDen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarDen() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoSarDen();        }        return 1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "isSurfaceSupportLockCanvas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSurfaceSupportLockCanvas() {        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSeekParameter", "params": ["SeekParameters"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSeekParameter(@Nullable SeekParameters seekParameters) {        if (mediaPlayer != null) {            mediaPlayer.setSeekParameter(seekParameters);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getNetSpeed", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long getNetSpeed(Context context) {        if (context == null) {            return 0;        }        long nowTotalRxBytes = TrafficStats.getUidRxBytes(context.getApplicationInfo().uid) == TrafficStats.UNSUPPORTED ? 0 : (TrafficStats.getTotalRxBytes() / 1024);//\u8f6c\u4e3aKB        long nowTimeStamp = System.currentTimeMillis();        long calculationTime = (nowTimeStamp - lastTimeStamp);        if (calculationTime == 0) {            return calculationTime;        }        //\u6beb\u79d2\u8f6c\u6362        long speed = ((nowTotalRxBytes - lastTotalRxBytes) * 1000 / calculationTime);        lastTimeStamp = nowTimeStamp;        lastTotalRxBytes = nowTotalRxBytes;        return speed;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/exo2/Exo2PlayerManager.java", "stars": "2", "class": {"name": "Exo2PlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "withOptions", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void withOptions() {    Configuration configuration = new Configuration();    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);    builder.parse();    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithOptions\");    assertThat(mappedStatement.getFetchSize()).isEqualTo(200);    assertThat(mappedStatement.getTimeout()).isEqualTo(10);    assertThat(mappedStatement.getStatementType()).isEqualTo(StatementType.STATEMENT);    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);    assertThat(mappedStatement.isFlushCacheRequired()).isTrue();    assertThat(mappedStatement.isUseCache()).isFalse();    assertThat(mappedStatement.getResultSets()).containsExactly(\"resultSets\");    mappedStatement = configuration.getMappedStatement(\"insertWithOptions\");    assertThat(mappedStatement.getKeyGenerator()).isInstanceOf(Jdbc3KeyGenerator.class);    assertThat(mappedStatement.getKeyColumns()).containsExactly(\"key_column\");    assertThat(mappedStatement.getKeyProperties()).containsExactly(\"keyProperty\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/AnnotationMapperBuilderTest.java", "stars": "15", "class": {"name": "AnnotationMapperBuilderTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "withOptionsAndWithoutOptionsAttributesWhenSpecifyDefaultValue", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void withOptionsAndWithoutOptionsAttributesWhenSpecifyDefaultValue() {    Configuration configuration = new Configuration();    configuration.setDefaultResultSetType(ResultSetType.SCROLL_INSENSITIVE);    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);    builder.parse();    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithOptionsAndWithoutOptionsAttributes\");    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/AnnotationMapperBuilderTest.java", "stars": "15", "class": {"name": "AnnotationMapperBuilderTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "withOptionsAndWithoutOptionsAttributesWhenNotSpecifyDefaultValue", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void withOptionsAndWithoutOptionsAttributesWhenNotSpecifyDefaultValue() {    Configuration configuration = new Configuration();    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);    builder.parse();    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithOptionsAndWithoutOptionsAttributes\");    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.DEFAULT);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/AnnotationMapperBuilderTest.java", "stars": "15", "class": {"name": "AnnotationMapperBuilderTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "withoutOptionsWhenSpecifyDefaultValue", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void withoutOptionsWhenSpecifyDefaultValue() {    Configuration configuration = new Configuration();    configuration.setDefaultResultSetType(ResultSetType.SCROLL_INSENSITIVE);    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);    builder.parse();    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithoutOptions\");    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.SCROLL_INSENSITIVE);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/AnnotationMapperBuilderTest.java", "stars": "15", "class": {"name": "AnnotationMapperBuilderTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "withoutOptionsWhenNotSpecifyDefaultValue", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void withoutOptionsWhenNotSpecifyDefaultValue() {    Configuration configuration = new Configuration();    MapperAnnotationBuilder builder = new MapperAnnotationBuilder(configuration, Mapper.class);    builder.parse();    MappedStatement mappedStatement = configuration.getMappedStatement(\"selectWithoutOptions\");    assertThat(mappedStatement.getResultSetType()).isEqualTo(ResultSetType.DEFAULT);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/AnnotationMapperBuilderTest.java", "stars": "15", "class": {"name": "AnnotationMapperBuilderTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "onLayout", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\t{\t\tn_onLayout (p0, p1, p2, p3, p4);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_Container.java", "stars": "2", "class": {"name": "ListViewRenderer_Container", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onLayout", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\tpublic void onMeasure (int p0, int p1)\t{\t\tn_onMeasure (p0, p1);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_Container.java", "stars": "2", "class": {"name": "ListViewRenderer_Container", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "onMeasure", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onMeasure (int p0, int p1)\t{\t\tn_onMeasure (p0, p1);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_Container.java", "stars": "2", "class": {"name": "ListViewRenderer_Container", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onMeasure", "params": ["int", "int"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onMeasure (int p0, int p1);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_Container.java", "stars": "2", "class": {"name": "ListViewRenderer_Container", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_Container.java", "stars": "2", "class": {"name": "ListViewRenderer_Container", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_Container.java", "stars": "2", "class": {"name": "ListViewRenderer_Container", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "show", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void show();    public abstract void hide();    public abstract int getX();    public abstract int getY();    public abstract void updateX(int x);    public abstract void updateX(@Screen.screenType int screenType,float ratio);    public abstract void updateY(int y);    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "hide", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void hide();    public abstract int getX();    public abstract int getY();    public abstract void updateX(int x);    public abstract void updateX(@Screen.screenType int screenType,float ratio);    public abstract void updateY(int y);    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getX", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int getX();    public abstract int getY();    public abstract void updateX(int x);    public abstract void updateX(@Screen.screenType int screenType,float ratio);    public abstract void updateY(int y);    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getY", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int getY();    public abstract void updateX(int x);    public abstract void updateX(@Screen.screenType int screenType,float ratio);    public abstract void updateY(int y);    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "updateX", "params": ["int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void updateX(int x);    public abstract void updateX(@Screen.screenType int screenType,float ratio);    public abstract void updateY(int y);    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "updateX", "params": ["int", "float"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void updateX(@Screen.screenType int screenType,float ratio);    public abstract void updateY(int y);    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "updateY", "params": ["int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void updateY(int y);    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "updateY", "params": ["int", "float"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void updateY(@Screen.screenType int screenType,float ratio);    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getView", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "View", "snippet": "    public abstract View getView();    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "dismiss", "params": [], "throws": null, "modifiers": ["abstract"], "return_type": "void", "snippet": "    abstract void dismiss();}", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindow.java", "stars": "2", "class": {"name": "IFloatWindow", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "adicionar", "params": ["Long", "ComentarioInput"], "throws": null, "modifiers": ["public"], "return_type": "ComentarioModel", "snippet": "\tpublic ComentarioModel adicionar(@PathVariable Long ordemServicoId,\t\t\t@Valid @RequestBody ComentarioInput comentarioInput) {\t\tComentario comentario = gestaoOrdemServicoService.adicionarComentario(ordemServicoId,\t\t\t\tcomentarioInput.getDescricao());\t\treturn toModel(comentario);\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/controller/ComentarioController.java", "stars": "2", "class": {"name": "ComentarioController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "listar", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "List<ComentarioModel>", "snippet": "\tpublic List<ComentarioModel> listar(@PathVariable Long ordemServicoId) {\t\tOrdemServico ordemServico = ordemServicoRepository.findById(ordemServicoId)\t\t\t\t.orElseThrow(() -> new EntidadeNaoEncontradaException(\"Ordem servico n\u00e3o encontrada\"));\t\treturn toCollectionModel(ordemServico.getComentarios());\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/controller/ComentarioController.java", "stars": "2", "class": {"name": "ComentarioController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toModel", "params": ["Comentario"], "throws": null, "modifiers": ["private"], "return_type": "ComentarioModel", "snippet": "\tprivate ComentarioModel toModel(Comentario comentario) {\t\treturn modelMapper.map(comentario, ComentarioModel.class);\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/controller/ComentarioController.java", "stars": "2", "class": {"name": "ComentarioController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toCollectionModel", "params": ["List<Comentario>"], "throws": null, "modifiers": ["private"], "return_type": "List<ComentarioModel>", "snippet": "\tprivate List<ComentarioModel> toCollectionModel(List<Comentario> comentarios) {\t\treturn comentarios.stream().map(comentario -> toModel(comentario)).collect(Collectors.toList());\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/controller/ComentarioController.java", "stars": "2", "class": {"name": "ComentarioController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "run", "params": [], "throws": ["HiveViaAzkabanException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void run() throws HiveViaAzkabanException {    if (p == null) {      throw new HiveViaAzkabanException(\"Properties is null.  Can't continue\");    }    if (!p.containsKey(AZK_HIVE_ACTION)) {      throw new HiveViaAzkabanException(\"Must specify a \" + AZK_HIVE_ACTION          + \" key and value.\");    }    HiveQueryExecutor hqe = HiveUtils.getHiveQueryExecutor();    HiveAction action = null;    String hive_action = p.getProperty(AZK_HIVE_ACTION);    // TODO: Factory time    if (hive_action.equals(EXECUTE_QUERY)) {      action = new ExecuteHiveQuery(p, hqe);    } else if (hive_action.equals(DropAllPartitionsAddLatest.DROP_AND_ADD)) {      action = new DropAllPartitionsAddLatest(p, hqe);    } else if (hive_action        .equals(UpdateTableLocationToLatest.UPDATE_TABLE_LOCATION_TO_LATEST)) {      action = new UpdateTableLocationToLatest(p, hqe);    } else {      throw new HiveViaAzkabanException(\"Unknown value (\" + hive_action          + \") for value \" + AZK_HIVE_ACTION);    }    action.execute();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/HiveViaAzkaban.java", "stars": "18", "class": {"name": "HiveViaAzkaban", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMarcaAutomovil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMarcaAutomovil() {        return marca;    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/O/AbsAutomovil_O.java", "stars": "1", "class": {"name": "AbsAutomovil_O", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "precioMedioAutomovil", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int precioMedioAutomovil();}", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/O/AbsAutomovil_O.java", "stars": "1", "class": {"name": "AbsAutomovil_O", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        Singleton instance1 = Singleton.getInstance();        Singleton instance2 = Singleton.getInstance();        System.out.println(instance1 == instance2);        System.out.println(\"instance1 \u7684 hashCode \u503c\u4e3a\uff1a\" + instance1.hashCode());        System.out.println(\"instance2 \u7684 hashCode \u503c\u4e3a\uff1a\" + instance2.hashCode());    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/singleton/type1/SingletonTest01.java", "stars": "2", "class": {"name": "SingletonTest01", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getInstance", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Singleton", "snippet": "    public static Singleton getInstance(){        return instance;    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/singleton/type1/SingletonTest01.java", "stars": "2", "class": {"name": "Singleton", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "onPacket", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {        if (event.getType().equals(PacketEvent.Type.OUTGOING)) {            if (event.getPacket() instanceof CPacketUseEntity) {                final CPacketUseEntity packet = (CPacketUseEntity) event.getPacket();                if (packet.getAction() == CPacketUseEntity.Action.ATTACK) {                    Entity entity = packet.getEntityFromWorld(mc.world);                    switch (mode.toLowerCase()) {                        case \"lightning\":                            if (death && !entity.isDead)                                return;                            final EntityLightningBolt lightning = new EntityLightningBolt(mc.world, entity.posX, entity.posY, entity.posZ, true);                            mc.world.spawnEntity(lightning);                            if (sounds) {                                final ResourceLocation thunderLocal = new ResourceLocation(\"minecraft\", \"entity.lightning.thunder\");                                final SoundEvent thunderSound = new SoundEvent(thunderLocal);                                final ResourceLocation lightningImpactLocal = new ResourceLocation(\"minecraft\", \"entity.lightning.impact\");                                final SoundEvent lightningImpactSound = new SoundEvent(lightningImpactLocal);                                mc.world.playSound(mc.player, new BlockPos(entity.posX, entity.posY, entity.posZ), thunderSound, SoundCategory.WEATHER, 1.0f, 1.0f);                                mc.world.playSound(mc.player, new BlockPos(entity.posX, entity.posY, entity.posZ), lightningImpactSound, SoundCategory.WEATHER, 1.0f, 1.0f);                            }                            break;                    }                }            }        }    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/visual/HitEffects.java", "stars": "12", "class": {"name": "HitEffects", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "onUpdate", "params": ["Context", "AppWidgetManager", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onUpdate(Context context, AppWidgetManager appWidgetManager, int[] appWidgetIds) {\t\tUILApplication.initImageLoader(context);\t\tfinal int widgetCount = appWidgetIds.length;\t\tfor (int i = 0; i < widgetCount; i++) {\t\t\tint appWidgetId = appWidgetIds[i];\t\t\tupdateAppWidget(context, appWidgetManager, appWidgetId);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/sample/src/com/imageloader/example/universalimageloader/widget/UILWidgetProvider.java", "stars": "74", "class": {"name": "UILWidgetProvider", "extends": "AppWidgetProvider", "implements": null, "modifiers": ["public"]}}, {"method_name": "updateAppWidget", "params": ["Context", "AppWidgetManager", "int"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "\tstatic void updateAppWidget(Context context, final AppWidgetManager appWidgetManager, final int appWidgetId) {\t\tfinal RemoteViews views = new RemoteViews(context.getPackageName(), R.layout.widget);\t\tImageSize minImageSize = new ImageSize(70, 70); // 70 - approximate size of ImageView in widget\t\tImageLoader.getInstance().loadImage(IMAGES[0], minImageSize, optionsWithFakeDisplayer, new SimpleImageLoadingListener() {\t\t\t@Override\t\t\tpublic void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {\t\t\t\tviews.setImageViewBitmap(R.id.image_left, loadedImage);\t\t\t\tappWidgetManager.updateAppWidget(appWidgetId, views);\t\t\t}\t\t});\t\tImageLoader.getInstance().loadImage(IMAGES[1], minImageSize, optionsWithFakeDisplayer, new SimpleImageLoadingListener() {\t\t\t@Override\t\t\tpublic void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {\t\t\t\tviews.setImageViewBitmap(R.id.image_right, loadedImage);\t\t\t\tappWidgetManager.updateAppWidget(appWidgetId, views);\t\t\t}\t\t});\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/sample/src/com/imageloader/example/universalimageloader/widget/UILWidgetProvider.java", "stars": "74", "class": {"name": "UILWidgetProvider", "extends": "AppWidgetProvider", "implements": null, "modifiers": ["public"]}}, {"method_name": "getParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SecurityTicketParser", "snippet": "    public SecurityTicketParser getParser() {        return (SecurityTicketParser) this.parser;    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/incoming/security/SecurityTicketEvent.java", "stars": "2", "class": {"name": "SecurityTicketEvent", "extends": "MessageEvent", "implements": null, "modifiers": ["public"]}}, {"method_name": "checkString", "params": ["String", "Predicate<String>", "Predicate<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean checkString(String s, Predicate<String> pre1, Predicate<String> pre2){        //return pre1.test(s) || pre2.test(s);        return  pre1.or(pre2).test(s);//\u7b49\u4ef7\u4e8ereturn pre1.test(s) || pre2.test(s);    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo06/Predicate/Demo03Predicate_or.java", "stars": "2", "class": {"name": "Demo03Predicate_or", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        //\u5b9a\u4e49\u4e00\u4e2a\u5b57\u7b26\u4e32        String s = \"bc\";        //\u8c03\u7528checkString\u65b9\u6cd5,\u53c2\u6570\u4f20\u9012\u5b57\u7b26\u4e32\u548c\u4e24\u4e2aLambda\u8868\u8fbe\u5f0f        boolean b = checkString(s,(String str)->{            //\u5224\u65ad\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u662f\u5426\u5927\u4e8e5            return str.length()>5;        },(String str)->{            //\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u5305\u542ba            return str.contains(\"a\");        });        System.out.println(b);    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/23.%E3%80%90%E5%87%BD%E6%95%B0%E5%BC%8F%E6%8E%A5%E5%8F%A3%E3%80%91-%E7%AC%94%E8%AE%B0/code/12_FunctionalInterface/src/com/itheima/demo06/Predicate/Demo03Predicate_or.java", "stars": "2", "class": {"name": "Demo03Predicate_or", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSipIp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSipIp() {\t\treturn sipIp;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSipIp", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSipIp(String sipIp) {\t\tthis.sipIp = sipIp;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSipPort", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getSipPort() {\t\treturn sipPort;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSipPort", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSipPort(Integer sipPort) {\t\tthis.sipPort = sipPort;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSipDomain", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSipDomain() {\t\treturn sipDomain;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSipDomain", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSipDomain(String sipDomain) {\t\tthis.sipDomain = sipDomain;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSipPassword", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSipPassword() {\t\treturn sipPassword;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSipPassword", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSipPassword(String sipPassword) {\t\tthis.sipPassword = sipPassword;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMediaIp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getMediaIp() {\t\treturn mediaIp;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setMediaIp", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMediaIp(String mediaIp) {\t\tthis.mediaIp = mediaIp;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMediaPort", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getMediaPort() {\t\treturn mediaPort;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setMediaPort", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMediaPort(Integer mediaPort) {\t\tthis.mediaPort = mediaPort;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSpeed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "\tpublic Integer getSpeed() {\t\treturn speed;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSpeed", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSpeed(Integer speed) {\t\tthis.speed = speed;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/SipConfig.java", "stars": "29", "class": {"name": "SipConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldRemoveFirstItemInBeyondFiveEntries", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRemoveFirstItemInBeyondFiveEntries() {    FifoCache cache = new FifoCache(new PerpetualCache(\"default\"));    cache.setSize(5);    for (int i = 0; i < 5; i++) {      cache.putObject(i, i);    }    assertEquals(0, cache.getObject(0));    cache.putObject(5, 5);    assertNull(cache.getObject(0));    assertEquals(5, cache.getSize());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/FifoCacheTest.java", "stars": "15", "class": {"name": "FifoCacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldRemoveItemOnDemand", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRemoveItemOnDemand() {    FifoCache cache = new FifoCache(new PerpetualCache(\"default\"));    cache.putObject(0, 0);    assertNotNull(cache.getObject(0));    cache.removeObject(0);    assertNull(cache.getObject(0));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/FifoCacheTest.java", "stars": "15", "class": {"name": "FifoCacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldFlushAllItemsOnDemand", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFlushAllItemsOnDemand() {    FifoCache cache = new FifoCache(new PerpetualCache(\"default\"));    for (int i = 0; i < 5; i++) {      cache.putObject(i, i);    }    assertNotNull(cache.getObject(0));    assertNotNull(cache.getObject(4));    cache.clear();    assertNull(cache.getObject(0));    assertNull(cache.getObject(4));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/FifoCacheTest.java", "stars": "15", "class": {"name": "FifoCacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "cancel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cancel ()\t{\t\tn_cancel ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_cancel", "params": [], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_cancel ();\tpublic void onAttachedToWindow ()\t{\t\tn_onAttachedToWindow ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "onAttachedToWindow", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAttachedToWindow ()\t{\t\tn_onAttachedToWindow ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_onAttachedToWindow", "params": [], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onAttachedToWindow ();\tpublic void onCreate (android.os.Bundle p0)\t{\t\tn_onCreate (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate (android.os.Bundle p0)\t{\t\tn_onCreate (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_onCreate", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onCreate (android.os.Bundle p0);\tpublic void onClick (android.view.View p0)\t{\t\tn_onClick (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "onClick", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onClick (android.view.View p0)\t{\t\tn_onClick (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_onClick", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onClick (android.view.View p0);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ActionSheetRenderer.java", "stars": "2", "class": {"name": "ActionSheetRenderer", "extends": "android", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "onApplicationStartedEvent", "params": ["ApplicationStartedEvent"], "throws": ["TemplateModelException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void onApplicationStartedEvent(ApplicationStartedEvent applicationStartedEvent) throws TemplateModelException {        log.debug(\"Received application started event\");        loadThemeConfig();        loadOptionsConfig();        loadUserConfig();    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/listener/FreemarkerConfigAwareListener.java", "stars": "1", "class": {"name": "FreemarkerConfigAwareListener", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadUserConfig", "params": [], "throws": ["TemplateModelException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadUserConfig() throws TemplateModelException {        configuration.setSharedVariable(\"user\", userService.getCurrentUser().orElse(null));        log.debug(\"Loaded user\");    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/listener/FreemarkerConfigAwareListener.java", "stars": "1", "class": {"name": "FreemarkerConfigAwareListener", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadOptionsConfig", "params": [], "throws": ["TemplateModelException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadOptionsConfig() throws TemplateModelException {        configuration.setSharedVariable(\"options\", optionService.listOptions());        configuration.setSharedVariable(\"context\", optionService.getBlogBaseUrl());        configuration.setSharedVariable(\"version\", BeyondConst.BEYOND_VERSION);        log.debug(\"Loaded options\");    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/listener/FreemarkerConfigAwareListener.java", "stars": "1", "class": {"name": "FreemarkerConfigAwareListener", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadThemeConfig", "params": [], "throws": ["TemplateModelException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadThemeConfig() throws TemplateModelException {        ThemeProperty activatedTheme = themeService.getActivatedTheme();        //configuration.setSharedVariable(\"theme\", activatedTheme);        configuration.setSharedVariable(\"static\", optionService.getBlogBaseUrl() + \"/\" + BeyondConst.DEFAULT_THEME_ID);        //configuration.setSharedVariable(\"settings\", themeSettingService.listAsMapBy(themeService.getActivatedThemeId()));        log.debug(\"Loaded theme and settings\");    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/listener/FreemarkerConfigAwareListener.java", "stars": "1", "class": {"name": "FreemarkerConfigAwareListener", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "    public Configuration getConfiguration() {        return configuration;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/AbstractContainer.java", "stars": "23", "class": {"name": "AbstractContainer", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getContainerCommunicator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractContainerCommunicator", "snippet": "    public AbstractContainerCommunicator getContainerCommunicator() {        return containerCommunicator;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/AbstractContainer.java", "stars": "23", "class": {"name": "AbstractContainer", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "setContainerCommunicator", "params": ["AbstractContainerCommunicator"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContainerCommunicator(AbstractContainerCommunicator containerCommunicator) {        this.containerCommunicator = containerCommunicator;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/AbstractContainer.java", "stars": "23", "class": {"name": "AbstractContainer", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "start", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void start();    public void shutdown(){    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/AbstractContainer.java", "stars": "23", "class": {"name": "AbstractContainer", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shutdown", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown(){    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/AbstractContainer.java", "stars": "23", "class": {"name": "AbstractContainer", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "setup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {        ClientForwardController clientForwardController = new ClientForwardController();        this.restMockMvc = MockMvcBuilders.standaloneSetup(clientForwardController, new TestController()).build();    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "ClientForwardControllerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getBackendEndpoint", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getBackendEndpoint() throws Exception {        restMockMvc            .perform(get(\"/test\"))            .andExpect(status().isOk())            .andExpect(content().contentTypeCompatibleWith(MediaType.TEXT_PLAIN_VALUE))            .andExpect(content().string(\"test\"));    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "ClientForwardControllerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getClientEndpoint", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getClientEndpoint() throws Exception {        ResultActions perform = restMockMvc.perform(get(\"/non-existant-mapping\"));        perform.andExpect(status().isOk()).andExpect(forwardedUrl(\"/\"));    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "ClientForwardControllerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getNestedClientEndpoint", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getNestedClientEndpoint() throws Exception {        restMockMvc.perform(get(\"/admin/user-management\")).andExpect(status().isOk()).andExpect(forwardedUrl(\"/\"));    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "ClientForwardControllerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getWebsocketInfoEndpoint", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getWebsocketInfoEndpoint() throws Exception {        restMockMvc.perform(get(\"/websocket/info\")).andExpect(status().isNotFound());    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "ClientForwardControllerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getWebsocketEndpoint", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getWebsocketEndpoint() throws Exception {        restMockMvc.perform(get(\"/websocket/tracker/308/sessionId/websocket\")).andExpect(status().isNotFound());    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "ClientForwardControllerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getWebsocketFallbackEndpoint", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getWebsocketFallbackEndpoint() throws Exception {        restMockMvc.perform(get(\"/websocket/tracker/308/sessionId/xhr_streaming\")).andExpect(status().isNotFound());    }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "ClientForwardControllerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "test", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String test() {            return \"test\";        }", "url": "https://raw.githubusercontent.com/Vondser/mmwms-antd/master/src/test/java/com/meimos/myapp/web/rest/ClientForwardControllerTest.java", "stars": "2", "class": {"name": "TestController", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "receive", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void receive() {        System.out.println(\"\u5177\u4f53\u540c\u4e8b\u7c7b\u6536\u5230\u6d88\u606f\u3002\");    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/mediator/ColleagueImpl.java", "stars": "2", "class": {"name": "ColleagueImpl", "extends": "Colleague", "implements": null, "modifiers": []}}, {"method_name": "send", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void send() {        System.out.println(\"\u5177\u4f53\u540c\u4e8b\u7c7b\u53d1\u51fa\u6d88\u606f\u3002\");        mediator.relay(this); //\u8bf7\u4e2d\u4ecb\u8005\u8f6c\u53d1    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/mediator/ColleagueImpl.java", "stars": "2", "class": {"name": "ColleagueImpl", "extends": "Colleague", "implements": null, "modifiers": []}}, {"method_name": "add", "params": ["AbstractFile"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(AbstractFile file) {        fileList.add(file);    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/Folder.java", "stars": "2", "class": {"name": "Folder", "extends": "AbstractFile", "implements": null, "modifiers": ["public"]}}, {"method_name": "remove", "params": ["AbstractFile"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void remove(AbstractFile file) {        fileList.remove(file);    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/Folder.java", "stars": "2", "class": {"name": "Folder", "extends": "AbstractFile", "implements": null, "modifiers": ["public"]}}, {"method_name": "getChild", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "AbstractFile", "snippet": "    public AbstractFile getChild(int i) {        return fileList.get(i);    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/Folder.java", "stars": "2", "class": {"name": "Folder", "extends": "AbstractFile", "implements": null, "modifiers": ["public"]}}, {"method_name": "killVirus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void killVirus() {        System.out.println(\"--\u5bf9\u6587\u4ef6\u5939\" + name + \"\u8fdb\u884c\u6740\u6bd2\");        //\u9012\u5f52\u8c03\u7528\u6210\u5458\u6784\u4ef6\u7684killVirus()\u65b9\u6cd5        for(Object obj : fileList) {            ((AbstractFile)obj).killVirus();        }    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/Folder.java", "stars": "2", "class": {"name": "Folder", "extends": "AbstractFile", "implements": null, "modifiers": ["public"]}}, {"method_name": "getOptionSyntax", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOptionSyntax() {        return \"[site|theme|page] <name>\";    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "displayOptionUsage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayOptionUsage() {        println(\"  site  <name>   \u521b\u5efa\u4e00\u4e2a\u65b0\u7f51\u7ad9\");        println(\"  theme <name>   \u521b\u5efa\u4e00\u4e2a\u4e3b\u9898\");        println(\"  page  <name>   \u521b\u5efa\u4e00\u4e2a\u9875\u9762\");        println(\"  <name>  \u7f51\u7ad9\u3001\u4e3b\u9898\u3001\u9875\u9762\u540d\u79f0\");    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "getName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {        return \"new\";    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {        return \"New something\";    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "execute", "params": ["Deque<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(Deque<String> options) {        ensureMaxArgumentCount(options, 2);        ensureMinArgumentCount(options, 2);        String command = options.remove();        switch (command) {            case \"site\":                site(options.remove());                break;            case \"theme\":                theme(options.remove());                break;            case \"page\":                page(options.remove());                break;            default:                printlnError(\"Unknown new option {}\", command);        }    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "site", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void site(String siteName) {        var env = new Environment();        Bored.env(env);        String sitePath = PathUtil.convertCorrectPath(env.getRoot() + \"/\" + siteName);        if (FileUtil.exist(sitePath)) {            printlnError(\"'{}' \u5df2\u5b58\u5728\uff0c\u8bf7\u5220\u9664\uff0c\u6216\u66f4\u6362\u7f51\u7ad9\u540d \", siteName);            return;        }        create(\"template/site-template.zip\", new File(sitePath));        println(\"Created site {}.\", siteName);    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "theme", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void theme(String themeName) {        var env = new CompleteEnvironment();        Bored.env(env);        String themePath = PathUtil.convertCorrectPath(env.getRoot() + \"/themes/\" + themeName);        if (FileUtil.exist(themePath)) {            printlnError(\"'{}' \u5df2\u5b58\u5728\uff0c\u8bf7\u5220\u9664\uff0c\u6216\u66f4\u6362\u4e3b\u9898\u540d \", themeName);            return;        }        create(\"template/theme-template.zip\", new File(themePath));        println(\"Created theme {}.\", themeName);    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "create", "params": ["String", "File"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void create(String fileName, File file) {        @Cleanup InputStream inputStream = NewCommand.class.getClassLoader().getResourceAsStream(fileName);        ZipUtil.unzip(inputStream, file, CharsetUtil.CHARSET_UTF_8);    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "page", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void page(String name) {        var env = new CompleteEnvironment();        Bored.env(env);        if (name.contains(\".md\") == Boolean.FALSE) {            name = name + \".md\";        }        String filePath = String.format(\"%s/%s\", env.getPagePath(), name);        var page = new File(filePath);        if (FileUtil.exist(page)) {            printlnError(\"Page {} existed!\", name);            return;        }        FileUtil.touch(page);        try {            String frontMatterPath = env.getFrontMatterPath();            List<String> archetypeContents = new FileReader(frontMatterPath).readLines();            StringBuilder templateContent = new StringBuilder(env.getSiteConfig().getFrontMatterSeparator());            templateContent.append(env.getLineSeparator());            archetypeContents.forEach(line -> {                /*\u5ffd\u7565\u6ce8\u91ca\u884c*/                if (!line.startsWith(\"#\") && !line.isBlank()) {                    templateContent.append(line);                    templateContent.append(env.getLineSeparator());                }            });            templateContent.append(env.getSiteConfig().getFrontMatterSeparator());            var frontMatter = new FrontMatter();            frontMatter.setTitle(StrUtil.removeSuffix(page.getName(), \".md\"));            frontMatter.setDate(DateUtil.now());            String content = env.getJetTemplateHelper().parseSource(templateContent.toString(), frontMatter.toMap());            @Cleanup FileWriter writer = new FileWriter(filePath);            writer.write(content);            //log.info(\"Create file: {}\", filePath);        } catch (IOException e) {            printlnError(\"\", e);        }    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/NewCommand.java", "stars": "2", "class": {"name": "NewCommand", "extends": "Command", "implements": null, "modifiers": ["public"]}}, {"method_name": "isValid", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isValid() {    return true;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/DefaultVFS.java", "stars": "15", "class": {"name": "DefaultVFS", "extends": "VFS", "implements": null, "modifiers": ["public"]}}, {"method_name": "list", "params": ["URL", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> list(URL url, String path) throws IOException {    InputStream is = null;    try {      List<String> resources = new ArrayList<>();      // First, try to find the URL of a JAR file containing the requested resource. If a JAR      // file is found, then we'll list child resources by reading the JAR.      URL jarUrl = findJarForResource(url);      if (jarUrl != null) {        is = jarUrl.openStream();        if (log.isDebugEnabled()) {          log.debug(\"Listing \" + url);        }        resources = listResources(new JarInputStream(is), path);      }      else {        List<String> children = new ArrayList<>();        try {          if (isJar(url)) {            // Some versions of JBoss VFS might give a JAR stream even if the resource            // referenced by the URL isn't actually a JAR            is = url.openStream();            try (JarInputStream jarInput = new JarInputStream(is)) {              if (log.isDebugEnabled()) {                log.debug(\"Listing \" + url);              }              for (JarEntry entry; (entry = jarInput.getNextJarEntry()) != null; ) {                if (log.isDebugEnabled()) {                  log.debug(\"Jar entry: \" + entry.getName());                }                children.add(entry.getName());              }            }          }          else {            /*             * Some servlet containers allow reading from directory resources like a             * text file, listing the child resources one per line. However, there is no             * way to differentiate between directory and file resources just by reading             * them. To work around that, as each line is read, try to look it up via             * the class loader as a child of the current resource. If any line fails             * then we assume the current resource is not a directory.             */            is = url.openStream();            List<String> lines = new ArrayList<>();            try (BufferedReader reader = new BufferedReader(new InputStreamReader(is))) {              for (String line; (line = reader.readLine()) != null;) {                if (log.isDebugEnabled()) {                  log.debug(\"Reader entry: \" + line);                }                lines.add(line);                if (getResources(path + \"/\" + line).isEmpty()) {                  lines.clear();                  break;                }              }            }            if (!lines.isEmpty()) {              if (log.isDebugEnabled()) {                log.debug(\"Listing \" + url);              }              children.addAll(lines);            }          }        } catch (FileNotFoundException e) {          /*           * For file URLs the openStream() call might fail, depending on the servlet           * container, because directories can't be opened for reading. If that happens,           * then list the directory directly instead.           */          if (\"file\".equals(url.getProtocol())) {            File file = new File(url.getFile());            if (log.isDebugEnabled()) {                log.debug(\"Listing directory \" + file.getAbsolutePath());            }            if (file.isDirectory()) {              if (log.isDebugEnabled()) {                  log.debug(\"Listing \" + url);              }              children = Arrays.asList(file.list());            }          }          else {            // No idea where the exception came from so rethrow it            throw e;          }        }        // The URL prefix to use when recursively listing child resources        String prefix = url.toExternalForm();        if (!prefix.endsWith(\"/\")) {          prefix = prefix + \"/\";        }        // Iterate over immediate children, adding files and recursing into directories        for (String child : children) {          String resourcePath = path + \"/\" + child;          resources.add(resourcePath);          URL childUrl = new URL(prefix + child);          resources.addAll(list(childUrl, resourcePath));        }      }      return resources;    } finally {      if (is != null) {        try {          is.close();        } catch (Exception e) {          // Ignore        }      }    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/DefaultVFS.java", "stars": "15", "class": {"name": "DefaultVFS", "extends": "VFS", "implements": null, "modifiers": ["public"]}}, {"method_name": "listResources", "params": ["JarInputStream", "String"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "List<String>", "snippet": "  protected List<String> listResources(JarInputStream jar, String path) throws IOException {    // Include the leading and trailing slash when matching names    if (!path.startsWith(\"/\")) {      path = \"/\" + path;    }    if (!path.endsWith(\"/\")) {      path = path + \"/\";    }    // Iterate over the entries and collect those that begin with the requested path    List<String> resources = new ArrayList<>();    for (JarEntry entry; (entry = jar.getNextJarEntry()) != null;) {      if (!entry.isDirectory()) {        // Add leading slash if it's missing        StringBuilder name = new StringBuilder(entry.getName());        if (name.charAt(0) != '/') {          name.insert(0, '/');        }        // Check file name        if (name.indexOf(path) == 0) {          if (log.isDebugEnabled()) {            log.debug(\"Found resource: \" + name);          }          // Trim leading slash          resources.add(name.substring(1));        }      }    }    return resources;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/DefaultVFS.java", "stars": "15", "class": {"name": "DefaultVFS", "extends": "VFS", "implements": null, "modifiers": ["public"]}}, {"method_name": "findJarForResource", "params": ["URL"], "throws": ["MalformedURLException"], "modifiers": ["protected"], "return_type": "URL", "snippet": "  protected URL findJarForResource(URL url) throws MalformedURLException {    if (log.isDebugEnabled()) {      log.debug(\"Find JAR URL: \" + url);    }    // If the file part of the URL is itself a URL, then that URL probably points to the JAR    boolean continueLoop = true;    while (continueLoop) {      try {        url = new URL(url.getFile());        if (log.isDebugEnabled()) {          log.debug(\"Inner URL: \" + url);        }      } catch (MalformedURLException e) {        // This will happen at some point and serves as a break in the loop        continueLoop = false;      }    }    // Look for the .jar extension and chop off everything after that    StringBuilder jarUrl = new StringBuilder(url.toExternalForm());    int index = jarUrl.lastIndexOf(\".jar\");    if (index >= 0) {      jarUrl.setLength(index + 4);      if (log.isDebugEnabled()) {        log.debug(\"Extracted JAR URL: \" + jarUrl);      }    }    else {      if (log.isDebugEnabled()) {        log.debug(\"Not a JAR: \" + jarUrl);      }      return null;    }    // Try to open and test it    try {      URL testUrl = new URL(jarUrl.toString());      if (isJar(testUrl)) {        return testUrl;      }      else {        // WebLogic fix: check if the URL's file exists in the filesystem.        if (log.isDebugEnabled()) {          log.debug(\"Not a JAR: \" + jarUrl);        }        jarUrl.replace(0, jarUrl.length(), testUrl.getFile());        File file = new File(jarUrl.toString());        // File name might be URL-encoded        if (!file.exists()) {          try {            file = new File(URLEncoder.encode(jarUrl.toString(), \"UTF-8\"));          } catch (UnsupportedEncodingException e) {            throw new RuntimeException(\"Unsupported encoding?  UTF-8?  That's unpossible.\");          }        }        if (file.exists()) {          if (log.isDebugEnabled()) {            log.debug(\"Trying real file: \" + file.getAbsolutePath());          }          testUrl = file.toURI().toURL();          if (isJar(testUrl)) {            return testUrl;          }        }      }    } catch (MalformedURLException e) {      log.warn(\"Invalid JAR URL: \" + jarUrl);    }    if (log.isDebugEnabled()) {      log.debug(\"Not a JAR: \" + jarUrl);    }    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/DefaultVFS.java", "stars": "15", "class": {"name": "DefaultVFS", "extends": "VFS", "implements": null, "modifiers": ["public"]}}, {"method_name": "getPackagePath", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String getPackagePath(String packageName) {    return packageName == null ? null : packageName.replace('.', '/');  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/DefaultVFS.java", "stars": "15", "class": {"name": "DefaultVFS", "extends": "VFS", "implements": null, "modifiers": ["public"]}}, {"method_name": "isJar", "params": ["URL"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "  protected boolean isJar(URL url) {    return isJar(url, new byte[JAR_MAGIC.length]);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/DefaultVFS.java", "stars": "15", "class": {"name": "DefaultVFS", "extends": "VFS", "implements": null, "modifiers": ["public"]}}, {"method_name": "isJar", "params": ["URL", "byte"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "  protected boolean isJar(URL url, byte[] buffer) {    InputStream is = null;    try {      is = url.openStream();      is.read(buffer, 0, JAR_MAGIC.length);      if (Arrays.equals(buffer, JAR_MAGIC)) {        if (log.isDebugEnabled()) {          log.debug(\"Found JAR: \" + url);        }        return true;      }    } catch (Exception e) {      // Failure to read the stream means this is not a JAR    } finally {      if (is != null) {        try {          is.close();        } catch (Exception e) {          // Ignore        }      }    }    return false;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/DefaultVFS.java", "stars": "15", "class": {"name": "DefaultVFS", "extends": "VFS", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {    // create an SqlSessionFactory    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/hashmaptypehandler/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    // populate in-memory database    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/hashmaptypehandler/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/hashmaptypehandler/HashMapTypeHandlerTest.java", "stars": "15", "class": {"name": "HashMapTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldNotApplyTypeHandlerToParamMap", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldNotApplyTypeHandlerToParamMap() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      User user = mapper.getUser(1, \"User1\");      Assertions.assertEquals(\"User1\", user.getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/hashmaptypehandler/HashMapTypeHandlerTest.java", "stars": "15", "class": {"name": "HashMapTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldNotApplyTypeHandlerToParamMapXml", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldNotApplyTypeHandlerToParamMapXml() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      User user = mapper.getUserXml(1, \"User1\");      Assertions.assertEquals(\"User1\", user.getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/hashmaptypehandler/HashMapTypeHandlerTest.java", "stars": "15", "class": {"name": "HashMapTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldApplyHashMapTypeHandler", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyHashMapTypeHandler() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      HashMap<String, String> map = new HashMap<>();      map.put(\"name\", \"User1\");      User user = mapper.getUserWithTypeHandler(map);      Assertions.assertNotNull(user);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/hashmaptypehandler/HashMapTypeHandlerTest.java", "stars": "15", "class": {"name": "HashMapTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldApplyHashMapTypeHandlerXml", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyHashMapTypeHandlerXml() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      HashMap<String, String> map = new HashMap<>();      map.put(\"name\", \"User1\");      User user = mapper.getUserWithTypeHandlerXml(map);      Assertions.assertNotNull(user);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/hashmaptypehandler/HashMapTypeHandlerTest.java", "stars": "15", "class": {"name": "HashMapTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        return \"PageBean{\" +                \"totalCount=\" + totalCount +                \", totalPage=\" + totalPage +                \", user=\" + user +                \", list=\" + list +                \", currentPage=\" + currentPage +                \", rows=\" + rows +                '}';    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getTotalCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTotalCount() {        return totalCount;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setTotalCount", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTotalCount(int totalCount) {        this.totalCount = totalCount;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getTotalPage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTotalPage() {        return totalPage;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setTotalPage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTotalPage(int totalPage) {        this.totalPage = totalPage;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "    public User getUser() {        return user;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setUser", "params": ["User"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUser(User user) {        this.user = user;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<User>", "snippet": "    public List<User> getList() {        return list;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setList", "params": ["List<User>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setList(List<User> list) {        this.list = list;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getCurrentPage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCurrentPage() {        return currentPage;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setCurrentPage", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentPage(int currentPage) {        this.currentPage = currentPage;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getRows", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRows() {        return rows;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setRows", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRows(int rows) {        this.rows = rows;    }", "url": "https://raw.githubusercontent.com/984964551/JavassmDemo/master/src/main/java/wac/domain/PageBean.java", "stars": "2", "class": {"name": "PageBean", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setProperties", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProperties(Properties properties) {      this.properties = properties;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/SupportClasses.java", "stars": "15", "class": {"name": "CustomObjectFactory", "extends": "DefaultObjectFactory", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getProperties", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Properties", "snippet": "    public Properties getProperties() {      return properties;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/SupportClasses.java", "stars": "15", "class": {"name": "CustomObjectFactory", "extends": "DefaultObjectFactory", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {      return name;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/SupportClasses.java", "stars": "15", "class": {"name": "CustomCache", "extends": "PerpetualCache", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "setName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {      this.name = name;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/SupportClasses.java", "stars": "15", "class": {"name": "CustomCache", "extends": "PerpetualCache", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "unwrap", "params": ["Cache"], "throws": null, "modifiers": ["static"], "return_type": "SupportClasses", "snippet": "    static SupportClasses.CustomCache unwrap(Cache cache) {      Field field;      try {        field = cache.getClass().getDeclaredField(\"delegate\");      } catch (NoSuchFieldException e) {        throw new IllegalStateException(e);      }      try {        field.setAccessible(true);        return (SupportClasses.CustomCache) field.get(cache);      } catch (IllegalAccessException e) {        throw new IllegalStateException(e);      } finally {        field.setAccessible(false);      }    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/global_variables_defaults/SupportClasses.java", "stars": "15", "class": {"name": "Utils", "extends": null, "implements": null, "modifiers": ["static"]}}, {"method_name": "removeBlockAsPlayer", "params": ["EntityPlayer", "ItemStack", "World", "BlockPos", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removeBlockAsPlayer(EntityPlayer player, ItemStack stack, World world, BlockPos pos, boolean willDamage) {        if (!world.isBlockLoaded(pos))            return;        IBlockState state = world.getBlockState(pos);        Block block = state.getBlock();        if (!world.isRemote &&                !block.isAir(state, world, pos) &&                state.getPlayerRelativeBlockHardness(player, world, pos) > 0 &&                block.canHarvestBlock(world, pos, player)) {            int exp = ForgeHooks.onBlockBreakEvent(world,                    ((EntityPlayerMP) player).interactionManager.getGameType(), (EntityPlayerMP) player, pos);            if (exp == -1)                return;            if (!player.capabilities.isCreativeMode) {                TileEntity tile = world.getTileEntity(pos);                if (block.removedByPlayer(state, world, pos, player, true)) {                    block.onBlockDestroyedByPlayer(world, pos, state);                    block.harvestBlock(world, player, pos, state, tile, stack);                    block.dropXpOnBlockBreak(world, pos, exp);                }                if (willDamage)                    stack.damageItem(1, player);            }        }    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Helper/BlockHelper.java", "stars": "2", "class": {"name": "BlockHelper", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "adapt", "params": ["ResultSet"], "throws": null, "modifiers": ["public"], "return_type": "VipPlayer", "snippet": "    public VipPlayer adapt(ResultSet resultSet) {        try {            Map<String, Vip> vips = new ConcurrentHashMap<>();            String uuid = null;            while (resultSet.next()) {                Vip vip = ADAPTER.adapt(resultSet, ResultSet.class, Vip.class);                if (vip == null) continue;                vips.put(vip.getType().getIdentifier(), vip);                uuid = resultSet.getString(\"uuid\");            }            if (vips.isEmpty() || uuid == null) return null;            VipPlayer vipPlayer = new VipPlayer(UUID.fromString(uuid));            vipPlayer.addVips(vips);            return vipPlayer;        } catch (Exception exception) {            return null;        }    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/adapter/ResultSetToVipPlayerAdapter.java", "stars": "2", "class": {"name": "ResultSetToVipPlayerAdapter", "extends": null, "implements": ["ObjectAdapter"], "modifiers": ["public"]}}, {"method_name": "affectsBlock", "params": ["BlockRenderView", "BlockState", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean affectsBlock(BlockRenderView view, BlockState state, BlockPos pos) {\t\treturn worldConditions.test(view, pos);\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "affectsDirection", "params": ["Direction"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean affectsDirection(Direction side) {\t\treturn faceMatcher.test(side);\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "affectsSprite", "params": ["QuadView", "SpriteFinder"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean affectsSprite(QuadView quad, SpriteFinder finder) {\t\treturn tileMatcher == null ? true : tileMatcher.test(finder.find(quad, 0));\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getAll", "params": ["BlockRenderView", "Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockState", "snippet": "\tprotected BlockState[][] getAll(BlockRenderView view, Direction to, BlockPos pos) {\t\tBlockState[][] result = new BlockState[3][3];\t\tBlockPos left = getLeftPos(to, pos);\t\tBlockPos right = getRightPos(to, pos);\t\tresult[0][0] = getUp(view, to, left);\t\tresult[0][1] = view.getBlockState(left);\t\tresult[0][2] = getDown(view, to, left);\t\tresult[1][0] = getUp(view, to, pos);\t\tresult[1][1] = null;\t\tresult[1][2] = getDown(view, to, pos);\t\tresult[2][0] = getUp(view, to, right);\t\tresult[2][1] = view.getBlockState(right);\t\tresult[2][2] = getDown(view, to, right);\t\treturn result;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getUp", "params": ["BlockRenderView", "Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockState", "snippet": "\tprotected BlockState getUp(BlockRenderView view, Direction to, BlockPos pos) {\t\treturn view.getBlockState(getUpPos(to, pos));\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getUpPos", "params": ["Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockPos", "snippet": "\tprotected BlockPos getUpPos(Direction to, BlockPos pos) {\t\tswitch(to) {\t\tcase UP:\t\t\t//return pos.north();\t\tcase DOWN:\t\t\treturn pos.south();\t\tcase NORTH:\t\tcase SOUTH:\t\tcase EAST:\t\tcase WEST:\t\t\treturn pos.up();\t\tdefault:\t\t\tthrow new IllegalArgumentException(\"real enum breaking moment right here\");\t\t}\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getLeft", "params": ["BlockRenderView", "Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockState", "snippet": "\tprotected BlockState getLeft(BlockRenderView view, Direction to, BlockPos pos) {\t\treturn view.getBlockState(getLeftPos(to, pos));\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getLeftPos", "params": ["Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockPos", "snippet": "\tprotected BlockPos getLeftPos(Direction to, BlockPos pos) {\t\tswitch(to) {\t\tcase UP:\t\tcase DOWN:\t\t\treturn pos.west();\t\tcase NORTH:\t\tcase SOUTH:\t\tcase EAST:\t\tcase WEST:\t\t\treturn pos.offset(to.rotateYClockwise());\t\tdefault:\t\t\tthrow new IllegalArgumentException(\"real enum breaking moment right here\");\t\t}\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getRight", "params": ["BlockRenderView", "Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockState", "snippet": "\tprotected BlockState getRight(BlockRenderView view, Direction to, BlockPos pos) {\t\treturn view.getBlockState(getRightPos(to, pos));\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getRightPos", "params": ["Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockPos", "snippet": "\tprotected BlockPos getRightPos(Direction to, BlockPos pos) {\t\tswitch(to) {\t\tcase UP:\t\tcase DOWN:\t\t\treturn pos.east();\t\tcase NORTH:\t\tcase SOUTH:\t\tcase EAST:\t\tcase WEST:\t\t\treturn pos.offset(to.rotateYCounterclockwise());\t\tdefault:\t\t\tthrow new IllegalArgumentException(\"real enum breaking moment right here\");\t\t}\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getDown", "params": ["BlockRenderView", "Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockState", "snippet": "\tprotected BlockState getDown(BlockRenderView view, Direction to, BlockPos pos) {\t\treturn view.getBlockState(getDownPos(to, pos));\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "getDownPos", "params": ["Direction", "BlockPos"], "throws": null, "modifiers": ["protected"], "return_type": "BlockPos", "snippet": "\tprotected BlockPos getDownPos(Direction to, BlockPos pos) {\t\tswitch(to) {\t\tcase UP:\t\t\t//return pos.south();\t\tcase DOWN:\t\t\treturn pos.north();\t\tcase NORTH:\t\tcase SOUTH:\t\tcase EAST:\t\tcase WEST:\t\t\treturn pos.down();\t\tdefault:\t\t\tthrow new IllegalArgumentException(\"real enum breaking moment right here\");\t\t}\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/BaseSpriteProvider.java", "stars": "3", "class": {"name": "BaseSpriteProvider", "extends": null, "implements": ["SpriteProvider"], "modifiers": ["public", "abstract"]}}, {"method_name": "initElements", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\t\telements.blocks.add(() -> new CustomBlock());\t\telements.items\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/CharredNetherBrickStairsBlock.java", "stars": "2", "class": {"name": "CharredNetherBrickStairsBlock", "extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDrops", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\t\t\tif (!dropsOriginal.isEmpty())\t\t\t\treturn dropsOriginal;\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/CharredNetherBrickStairsBlock.java", "stars": "2", "class": {"name": "CustomBlock", "extends": "StairsBlock", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "initHintConf", "params": ["DataBaseType", "Configuration"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void initHintConf(DataBaseType type, Configuration configuration) {        dataBaseType = type;        username = configuration.getString(Key.USERNAME);        password = configuration.getString(Key.PASSWORD);        String hint = configuration.getString(Key.HINT);        if (StringUtils.isNotBlank(hint)) {            String[] tablePatternAndHint = hint.split(\"#\");            if (tablePatternAndHint.length == 1) {                tablePattern = Pattern.compile(\".*\");                hintExpression = tablePatternAndHint[0];            } else {                tablePattern = Pattern.compile(tablePatternAndHint[0]);                hintExpression = tablePatternAndHint[1];            }        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/reader/util/HintUtil.java", "stars": "23", "class": {"name": "HintUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildQueryColumn", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String buildQueryColumn(String jdbcUrl, String table, String column) {        try {            if (tablePattern != null && DataBaseType.Oracle.equals(dataBaseType)) {                Matcher m = tablePattern.matcher(table);                if (m.find()) {                    String[] tableStr = table.split(\"\\\\.\");                    String tableWithoutSchema = tableStr[tableStr.length - 1];                    String finalHint = hintExpression.replaceAll(Constant.TABLE_NAME_PLACEHOLDER, tableWithoutSchema);                    //\u4e3b\u5e93\u4e0d\u5e76\u53d1\u8bfb\u53d6                    if (finalHint.indexOf(\"parallel\") > 0 && DBUtil.isOracleMaster(jdbcUrl, username, password)) {                        LOG.info(\"master:{} will not use hint:{}\", jdbcUrl, finalHint);                    } else {                        LOG.info(\"table:{} use hint:{}.\", table, finalHint);                        return finalHint + column;                    }                }            }        } catch (Exception e) {            LOG.warn(\"match hint exception, will not use hint\", e);        }        return column;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/reader/util/HintUtil.java", "stars": "23", "class": {"name": "HintUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(Context context) {        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);        mPaint.setStyle(Paint.Style.FILL);        mLineHeight = UIUtil.dip2px(context, 3);        mTriangleWidth = UIUtil.dip2px(context, 14);        mTriangleHeight = UIUtil.dip2px(context, 8);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onDraw", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {        mPaint.setColor(mLineColor);        if (mReverse) {            canvas.drawRect(0, getHeight() - mYOffset - mTriangleHeight, getWidth(), getHeight() - mYOffset - mTriangleHeight + mLineHeight, mPaint);        } else {            canvas.drawRect(0, getHeight() - mLineHeight - mYOffset, getWidth(), getHeight() - mYOffset, mPaint);        }        mPath.reset();        if (mReverse) {            mPath.moveTo(mAnchorX - mTriangleWidth / 2, getHeight() - mYOffset - mTriangleHeight);            mPath.lineTo(mAnchorX, getHeight() - mYOffset);            mPath.lineTo(mAnchorX + mTriangleWidth / 2, getHeight() - mYOffset - mTriangleHeight);        } else {            mPath.moveTo(mAnchorX - mTriangleWidth / 2, getHeight() - mYOffset);            mPath.lineTo(mAnchorX, getHeight() - mTriangleHeight - mYOffset);            mPath.lineTo(mAnchorX + mTriangleWidth / 2, getHeight() - mYOffset);        }        mPath.close();        canvas.drawPath(mPath, mPaint);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPageScrolled", "params": ["int", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {        if (mPositionDataList == null || mPositionDataList.isEmpty()) {            return;        }        // \u8ba1\u7b97\u951a\u70b9\u4f4d\u7f6e        PositionData current = FragmentContainerHelper.getImitativePositionData(mPositionDataList, position);        PositionData next = FragmentContainerHelper.getImitativePositionData(mPositionDataList, position + 1);        float leftX = current.mLeft + (current.mRight - current.mLeft) / 2;        float rightX = next.mLeft + (next.mRight - next.mLeft) / 2;        mAnchorX = leftX + (rightX - leftX) * mStartInterpolator.getInterpolation(positionOffset);        invalidate();    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPageSelected", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageSelected(int position) {    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPageScrollStateChanged", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPageScrollStateChanged(int state) {    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "onPositionDataProvide", "params": ["List<PositionData>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPositionDataProvide(List<PositionData> dataList) {        mPositionDataList = dataList;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getLineHeight", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLineHeight() {        return mLineHeight;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setLineHeight", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLineHeight(int lineHeight) {        mLineHeight = lineHeight;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getLineColor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLineColor() {        return mLineColor;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setLineColor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLineColor(int lineColor) {        mLineColor = lineColor;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getTriangleHeight", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTriangleHeight() {        return mTriangleHeight;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setTriangleHeight", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTriangleHeight(int triangleHeight) {        mTriangleHeight = triangleHeight;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getTriangleWidth", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTriangleWidth() {        return mTriangleWidth;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setTriangleWidth", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTriangleWidth(int triangleWidth) {        mTriangleWidth = triangleWidth;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getStartInterpolator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Interpolator", "snippet": "    public Interpolator getStartInterpolator() {        return mStartInterpolator;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setStartInterpolator", "params": ["Interpolator"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStartInterpolator(Interpolator startInterpolator) {        mStartInterpolator = startInterpolator;        if (mStartInterpolator == null) {            mStartInterpolator = new LinearInterpolator();        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "isReverse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isReverse() {        return mReverse;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setReverse", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReverse(boolean reverse) {        mReverse = reverse;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "getYOffset", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getYOffset() {        return mYOffset;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "setYOffset", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setYOffset(float yOffset) {        mYOffset = yOffset;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/indicators/TriangularPagerIndicator.java", "stars": "1", "class": {"name": "TriangularPagerIndicator", "extends": "View", "implements": ["IPagerIndicator"], "modifiers": ["public"]}}, {"method_name": "adjustSpeed", "params": ["Communication", "Configuration"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean adjustSpeed(Communication communication, Configuration configuration) {        boolean result = false;        long channelNum = communication.getLongCounter(CommunicationTool.CHANNEL_RUNNING);        if(channelNum <= 0){            return false;        }        long globalLimitedByteSpeed = configuration.getLong(CoreConstant.DATAX_JOB_SETTING_SPEED_BYTE, 0);        if(globalLimitedByteSpeed > 0){            Long channelLimitedByteSpeed = configuration                    .getLong(CoreConstant.DATAX_CORE_TRANSPORT_CHANNEL_SPEED_BYTE);            if(channelLimitedByteSpeed * channelNum != globalLimitedByteSpeed){                long adjustedLimitedByteSpeed = globalLimitedByteSpeed / channelNum;                if(adjustedLimitedByteSpeed != channelLimitedByteSpeed){                    configuration.set(CoreConstant.DATAX_CORE_TRANSPORT_CHANNEL_SPEED_BYTE,                            adjustedLimitedByteSpeed);                    result = true;                }            }        }        long globalLimitedRecordSpeed = configuration.getLong(                CoreConstant.DATAX_JOB_SETTING_SPEED_RECORD, 0);        if(globalLimitedRecordSpeed > 0){            Long channelLimitedRecordSpeed = configuration.getLong(                    CoreConstant.DATAX_CORE_TRANSPORT_CHANNEL_SPEED_RECORD);            if(channelLimitedRecordSpeed * channelNum != globalLimitedRecordSpeed){                long adjustedLimitedRecordSpeed = globalLimitedRecordSpeed / channelNum;                if(adjustedLimitedRecordSpeed != channelLimitedRecordSpeed){                    configuration.set(CoreConstant.DATAX_CORE_TRANSPORT_CHANNEL_SPEED_RECORD,                            adjustedLimitedRecordSpeed);                    result = true;                }            }        }        return result;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/scheduler/speed/DefaultVariableTaskGroupSpeedStrategy.java", "stars": "23", "class": {"name": "DefaultVariableTaskGroupSpeedStrategy", "extends": null, "implements": ["VariableTaskGroupSpeedStrategy"], "modifiers": ["public"]}}, {"method_name": "getShader", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {        float shift = 1.0f / 255.0f;        float weights[] = {2f / 8f, 5f / 8f, 1f / 8f};        float exponents[] = new float[3];        String weightsString[] = new String[3];        String exponentsString[] = new String[3];        exponentsString[0] = \"\";        exponentsString[1] = \"\";        exponentsString[2] = \"\";        String scaleString = \"\";        if (scale > 0.0f) {            exponents[0] = (0.9f * scale) + 1.0f;            exponents[1] = (2.1f * scale) + 1.0f;            exponents[2] = (2.7f * scale) + 1.0f;            exponentsString[0] = \"exponents[0] = \" + exponents[0] + \";\\n\";            exponentsString[1] = \"exponents[1] = \" + exponents[1] + \";\\n\";            exponentsString[2] = \"exponents[2] = \" + exponents[2] + \";\\n\";        } else            scaleString = \"scale = \" + (1.0f + scale) + \";\\n\";        weightsString[0] = \"weights[0] = \" + weights[0] + \";\\n\";        weightsString[1] = \"weights[1] = \" + weights[1] + \";\\n\";        weightsString[2] = \"weights[2] = \" + weights[2] + \";\\n\";        String shiftString = \"shift = \" + shift + \";\\n\";        String shader = \"#extension GL_OES_EGL_image_external : require\\n\"                + \"precision mediump float;\\n\"                + \"uniform samplerExternalOES sTexture;\\n\" + \" float scale;\\n\"                + \" float shift;\\n\" + \" vec3 weights;\\n\" + \" vec3 exponents;\\n\"                + \"varying vec2 vTextureCoord;\\n\" + \"void main() {\\n\"                // Parameters that were created above                + weightsString[0]                + weightsString[1]                + weightsString[2]                + shiftString                + scaleString                + \"  vec4 oldcolor = texture2D(sTexture, vTextureCoord);\\n\"                + \"  float kv = dot(oldcolor.rgb, weights) + shift;\\n\"                + \"  vec3 new_color = scale * oldcolor.rgb + (1.0 - scale) * kv;\\n\"                + \"  gl_FragColor= vec4(new_color, oldcolor.a);\\n\"                // Parameters that were created above                + weightsString[0]                + weightsString[1]                + weightsString[2]                + exponentsString[0]                + exponentsString[1]                + exponentsString[2]                + \"  vec4 color = texture2D(sTexture, vTextureCoord);\\n\"                + \"  float de = dot(color.rgb, weights);\\n\"                + \"  float inv_de = 1.0 / de;\\n\"                + \"  vec3 verynew_color = de * pow(color.rgb * inv_de, exponents);\\n\"                + \"  float max_color = max(max(max(verynew_color.r, verynew_color.g), verynew_color.b), 1.0);\\n\"                + \"  gl_FragColor = gl_FragColor+vec4(verynew_color / max_color, color.a);\\n\"                + \"}\\n\";        return shader;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/render/effect/SaturationEffect.java", "stars": "2", "class": {"name": "SaturationEffect", "extends": null, "implements": ["ShaderInterface"], "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        //\u4e0d\u5199\u6cdb\u578b\u9ed8\u8ba4\u4e3aObject\u7c7b\u578b        GenericClass gc = new GenericClass();        gc.setName(\"\u53ea\u80fd\u662f\u5b57\u7b26\u4e32\");        Object obj = gc.getName();        //\u521b\u5efaGenericClass\u5bf9\u8c61,\u6cdb\u578b\u4f7f\u7528Integer\u7c7b\u578b        GenericClass<Integer> gc2 = new GenericClass<>();        gc2.setName(1);        Integer name = gc2.getName();        System.out.println(name);        //\u521b\u5efaGenericClass\u5bf9\u8c61,\u6cdb\u578b\u4f7f\u7528String\u7c7b\u578b        GenericClass<String> gc3 = new GenericClass<>();        gc3.setName(\"\u5c0f\u660e\");        String name1 = gc3.getName();        System.out.println(name1);    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo03/Generic/Demo02GenericClass.java", "stars": "2", "class": {"name": "Demo02GenericClass", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onInterceptTouchEvent", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onInterceptTouchEvent (android.view.MotionEvent p0)\t{\t\treturn n_onInterceptTouchEvent (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onInterceptTouchEvent", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onInterceptTouchEvent (android.view.MotionEvent p0);\tpublic void onNestedScrollAccepted (android.view.View p0, android.view.View p1, int p2)\t{\t\tn_onNestedScrollAccepted (p0, p1, p2);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "onNestedScrollAccepted", "params": ["android", "android", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onNestedScrollAccepted (android.view.View p0, android.view.View p1, int p2)\t{\t\tn_onNestedScrollAccepted (p0, p1, p2);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onNestedScrollAccepted", "params": ["android", "android", "int"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onNestedScrollAccepted (android.view.View p0, android.view.View p1, int p2);\tpublic void onStopNestedScroll (android.view.View p0)\t{\t\tn_onStopNestedScroll (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "onStopNestedScroll", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onStopNestedScroll (android.view.View p0)\t{\t\tn_onStopNestedScroll (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onStopNestedScroll", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onStopNestedScroll (android.view.View p0);\tpublic void onNestedScroll (android.view.View p0, int p1, int p2, int p3, int p4)\t{\t\tn_onNestedScroll (p0, p1, p2, p3, p4);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "onNestedScroll", "params": ["android", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onNestedScroll (android.view.View p0, int p1, int p2, int p3, int p4)\t{\t\tn_onNestedScroll (p0, p1, p2, p3, p4);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onNestedScroll", "params": ["android", "int", "int", "int", "int"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onNestedScroll (android.view.View p0, int p1, int p2, int p3, int p4);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling.java", "stars": "2", "class": {"name": "ListViewRenderer_SwipeRefreshLayoutWithFixedNestedScrolling", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "setCacheManager", "params": ["Class<ICacheManager>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setCacheManager(Class<? extends ICacheManager>  cacheManager) {        sICacheManager = cacheManager;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/cache/CacheFactory.java", "stars": "2", "class": {"name": "CacheFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCacheManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ICacheManager", "snippet": "    public static ICacheManager getCacheManager() {        if (sICacheManager == null) {            sICacheManager = ProxyCacheManager.class;        }        try {            return sICacheManager.newInstance();        } catch (InstantiationException e) {            e.printStackTrace();        } catch (IllegalAccessException e) {            e.printStackTrace();        }        return null;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/cache/CacheFactory.java", "stars": "2", "class": {"name": "CacheFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "clone", "params": [], "throws": ["CloneNotSupportedException"], "modifiers": ["protected"], "return_type": "Object", "snippet": "    protected Object clone() throws CloneNotSupportedException {        return super.clone();    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/prototype/abstractprototype/A.java", "stars": "2", "class": {"name": "A", "extends": null, "implements": ["Cloneable"], "modifiers": ["public", "abstract"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        try {            UIManager.setLookAndFeel(                    UIManager.getCrossPlatformLookAndFeelClassName()            );        } catch (Exception e) {            e.printStackTrace();        }        JFileChooser dialog = new JFileChooser();        dialog.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);        dialog.setDialogTitle(\"\u0412\u0438\u0431\u0435\u0440\u0456\u0442\u044c \u043f\u043e\u0442\u0440\u0456\u0431\u043d\u0456 \u0444\u0430\u0439\u043b\u0438 \u0442\u0430 \u043f\u0430\u043f\u043a\u0438\");        dialog.setApproveButtonText(\"\u0412\u0456\u0434\u043a\u0440\u0438\u0442\u0438\");        dialog.setMultiSelectionEnabled(true);        dialog.setFileFilter(new FileFilter() {            @Override            public boolean accept(File f) {                return f.isDirectory() || f.toString().endsWith(\".txt\");            }            @Override            public String getDescription() {                return \"\u0444\u0430\u0439\u043b\u0438 \u0442\u0438\u043f\u0443 .txt\";            }        });        dialog.showOpenDialog(null);        File[] files = dialog.getSelectedFiles();        if (files == null)            return;        for (File file : files) {            System.out.println(file.getName());            System.out.println(file.getAbsolutePath());        }    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab6/src/test/java/JFileChooserTest.java", "stars": "2", "class": {"name": "JFileChooserTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "finalize", "params": [], "throws": ["Throwable"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void finalize() throws Throwable {        super.finalize();        workbook.close();    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/Excel/excelWrite.java", "stars": "2", "class": {"name": "excelWrite", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readyHead", "params": ["Sheet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readyHead(Sheet sheet) {        Row row = sheet.createRow(0);        Cell cell = row.createCell(0);        cell.setCellValue(\"\u6e38\u620fID\");        Cell cell1 = row.createCell(1);        cell1.setCellValue(\"\u5269\u5200\");        for (int i = 2; i < 8; i += 2) {            CellRangeAddress region = new CellRangeAddress(0, 0, i, i + 1);            sheet.addMergedRegion(region);        }    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/Excel/excelWrite.java", "stars": "2", "class": {"name": "excelWrite", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "reflashFile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reflashFile() {        OutputStream outputStream = null;        try {            outputStream = new FileOutputStream(file);            workbook.write(outputStream);        } catch (IOException e) {            e.printStackTrace();        } finally {            try {                if (outputStream != null) {                    outputStream.close();                }                if (workbook != null) {                    workbook.close();                }            } catch (IOException e) {                e.printStackTrace();            }        }    }", "url": "https://raw.githubusercontent.com/sciuridae564/PcrTool/tick/src/main/java/cn/sciuridae/Excel/excelWrite.java", "stars": "2", "class": {"name": "excelWrite", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getJobName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobName() {    return jobName;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzJobDescription.java", "stars": "18", "class": {"name": "QuartzJobDescription", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getJobClass", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<AbstractQuartzJob>", "snippet": "  public Class<? extends AbstractQuartzJob> getJobClass() {    return this.jobClass;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzJobDescription.java", "stars": "18", "class": {"name": "QuartzJobDescription", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getContextMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Serializable>", "snippet": "  public Map<String, ? extends Serializable> getContextMap() {    return this.contextMap;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzJobDescription.java", "stars": "18", "class": {"name": "QuartzJobDescription", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {    return \"QuartzJobDescription{\" +        \"jobClass=\" + this.jobClass +        \", groupName='\" + this.groupName + '\\'' +        \", contextMap=\" + this.contextMap +        '}';  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzJobDescription.java", "stars": "18", "class": {"name": "QuartzJobDescription", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getGroupName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getGroupName() {    return this.groupName;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzJobDescription.java", "stars": "18", "class": {"name": "QuartzJobDescription", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "collectDirtyRecord", "params": ["Record", "Throwable", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collectDirtyRecord(Record dirtyRecord, Throwable t,                                   String errorMessage) {        super.collectDirtyRecord(dirtyRecord, t, errorMessage);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/plugin/task/HttpPluginCollector.java", "stars": "23", "class": {"name": "HttpPluginCollector", "extends": "AbstractTaskPluginCollector", "implements": null, "modifiers": ["public"]}}, {"method_name": "generate", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generate(String imageUri) {\t\treturn String.valueOf(imageUri.hashCode());\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/disc/naming/HashCodeFileNameGenerator.java", "stars": "74", "class": {"name": "HashCodeFileNameGenerator", "extends": null, "implements": ["FileNameGenerator"], "modifiers": ["public"]}}, {"method_name": "initDate", "params": ["ExecutableFlow"], "throws": ["RuntimeException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void initDate(ExecutableFlow executableFlow) throws RuntimeException{    LocalDate runDate = null;    DateTimeFormatter dateTimeFormatter0 = DateTimeFormat.forPattern(\"yyyyMMdd\");    DateTimeFormatter dateTimeFormatter1 = DateTimeFormat.forPattern(\"yyyy-MM-dd\");    //\u5386\u53f2\u91cd\u8dd1    if(2 == executableFlow.getFlowType()){      runDate = new LocalDate(Long.valueOf(executableFlow.getRepeatOption().get(\"startTimeLong\"))).minusDays(1);    } else {      if (null != executableFlow.getExecutionOptions().getFlowParameters().get(RUN_DATE)) {        runDate = LocalDate.parse(executableFlow.getExecutionOptions().getFlowParameters().get(RUN_DATE), dateTimeFormatter0);      } else if(this.propMap.get(RUN_DATE) != null) {        String tmp = this.propMap.get(RUN_DATE).replaceAll(\"[\\\"'./-]\",\"\");        runDate = LocalDate.parse(tmp, dateTimeFormatter0);      } else {        runDate = new LocalDate(executableFlow.getSubmitTime()).minusDays(1);      }    }    //\u7528\u4e8e\u524d\u7aef\u663e\u793a    executableFlow.setRunDate(runDate.toString(\"yyyyMMdd\"));    defaultDate.put(RUN_DATE, runDate);    defaultDate.put(RUN_DATE_STD, runDate);    defaultDate.put(RUN_TODAY, runDate.plusDays(1));    defaultDate.put(RUN_TODAY_STD, runDate.plusDays(1));    defaultDate.put(RUN_MONTH_BEGIN, runDate.dayOfMonth().withMinimumValue());    defaultDate.put(RUN_MONTH_BEGIN_STD, runDate.dayOfMonth().withMinimumValue());    defaultDate.put(RUN_MONTH_END, runDate.dayOfMonth().withMaximumValue());    defaultDate.put(RUN_MONTH_END_STD, runDate.dayOfMonth().withMaximumValue());    if(2 != executableFlow.getFlowType()){      LocalDate newRunDateStd = hasNewDate(executableFlow, RUN_DATE_STD, dateTimeFormatter1);      if(newRunDateStd != null){        defaultDate.put(RUN_DATE_STD, newRunDateStd);      }      LocalDate newRunToday = hasNewDate(executableFlow, RUN_TODAY, dateTimeFormatter0);      if(newRunToday != null){        defaultDate.put(RUN_TODAY, newRunToday);      }      LocalDate newRunTodayStd = hasNewDate(executableFlow, RUN_TODAY_STD, dateTimeFormatter1);      if(newRunTodayStd != null){        defaultDate.put(RUN_TODAY_STD, newRunTodayStd);      }      LocalDate newRunMonthBegin = hasNewDate(executableFlow, RUN_MONTH_BEGIN, dateTimeFormatter0);      if(newRunMonthBegin != null){        defaultDate.put(RUN_MONTH_BEGIN, newRunMonthBegin);      }      LocalDate newRunMonthBeginStd = hasNewDate(executableFlow, RUN_MONTH_BEGIN_STD, dateTimeFormatter1);      if(newRunMonthBeginStd != null){        defaultDate.put(RUN_MONTH_BEGIN_STD, newRunMonthBeginStd);      }      LocalDate newRunMonthEnd = hasNewDate(executableFlow, RUN_MONTH_END, dateTimeFormatter0);      if(newRunMonthEnd != null){        defaultDate.put(RUN_MONTH_END, newRunMonthEnd);      }      LocalDate newRunMonthEndStd = hasNewDate(executableFlow, RUN_MONTH_END_STD, dateTimeFormatter1);      if(newRunMonthEndStd != null){        defaultDate.put(RUN_MONTH_END_STD, newRunMonthEndStd);      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "hasNewDate", "params": ["ExecutableFlow", "String", "DateTimeFormatter"], "throws": null, "modifiers": ["private"], "return_type": "LocalDate", "snippet": "  private LocalDate hasNewDate(ExecutableFlow executableFlow, String dateType, DateTimeFormatter dateTimeFormatter){    LocalDate newDate = null;    if (null != executableFlow.getExecutionOptions().getFlowParameters().get(dateType)) {      newDate = LocalDate.parse(executableFlow.getExecutionOptions().getFlowParameters().get(dateType), dateTimeFormatter);    } else if(this.propMap.get(dateType) != null) {      newDate = LocalDate.parse(this.propMap.get(dateType), dateTimeFormatter);    }    return newDate;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "FileWrite", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void FileWrite(String filePath, String fileStr){    FileWriter fw = null;    try {      fw = new FileWriter(filePath);      //\u5199\u5165\u5230\u6587\u4ef6      fw.write(fileStr);    } catch (Exception e) {      utilLogger.error(\"\u5199\u5165\u811a\u672c\u6587\u4ef6\u5f02\u5e38\uff01\", e);      e.printStackTrace();    }finally {      if(fw != null){        try {          fw.close();        } catch (IOException e) {          e.printStackTrace();        }      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadAllPropertiesFile", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "List<String>", "snippet": "  private List<String> loadAllPropertiesFile(String workingDir){    List<String> propPathList = new ArrayList<>();    findPropPath(workingDir, propPathList);    return propPathList;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findPropPath", "params": ["String", "List<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void findPropPath(String dirPath, List<String> filePathList){    File f = new File(dirPath);    if (!f.exists()) {      System.out.println(dirPath + \" not exists\");    }    File fa[] = f.listFiles();    for (int i = 0; i < fa.length; i++) {      File fs = fa[i];      if (fs.isDirectory()) {        findPropPath(fs.getPath(), filePathList);      } else {        if(fs.getName().endsWith(\".properties\")){          filePathList.add(fs.getPath().toString());        }      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadAllScriptFile", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "List<String>", "snippet": "  private List<String> loadAllScriptFile(String workingDir){    List<String> scriptPathList = new ArrayList<>();    findScriptFilePath(workingDir, scriptPathList);    return scriptPathList;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findScriptFilePath", "params": ["String", "List<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void findScriptFilePath(String dirPath, List<String> filePathList){    File f = new File(dirPath);    if (!f.exists()) {      //System.out.println(dirPath + \" not exists\");      utilLogger.error(\"\u6587\u4ef6\u5730\u5740: \" + dirPath + \"\u4e0d\u5b58\u5728\uff01\");    }    File fa[] = f.listFiles();    for (int i = 0; i < fa.length; i++) {      File fs = fa[i];      if (fs.isDirectory()) {        findScriptFilePath(fs.getPath(), filePathList);      } else {        if(fs.getName().endsWith(\".py\") || fs.getName().endsWith(\".sh\")            || fs.getName().endsWith(\".sql\") || fs.getName().endsWith(\".hql\")            || fs.getName().endsWith(\".job\") || fs.getName().endsWith(\".flow\")){          filePathList.add(fs.getPath().toString());        }      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readProperties", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "  private Map<String, String> readProperties(String propPath){    Map<String, String> propMap = new HashMap<>();    Properties prop = new Properties();    InputStream input = null;    try {      input = new FileInputStream(propPath);      // load a properties file      prop.load(input);      if(!prop.isEmpty()){        for (Map.Entry<Object, Object> entry : prop.entrySet()) {          String key = String.valueOf(entry.getKey());          String value = String.valueOf(entry.getValue());          propMap.put(key, value);        }      }    } catch (Exception ex) {      utilLogger.error(\"\u8bfb\u53d6properties\u914d\u7f6e\u6587\u4ef6\u5f02\u5e38\uff01\", ex);      ex.printStackTrace();    } finally {      if (input != null) {        try {          input.close();        } catch (IOException e) {          e.printStackTrace();        }      }    }    return propMap;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readFile", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String readFile(String filePath)  {    StringBuilder sb = new StringBuilder();    BufferedReader br = null;    try {      File file = new File(filePath);      br = new BufferedReader(new FileReader(file));      char[] data = new char[1024];      int rn = 0;      String line = \"\";//      while ((rn = br.read(data)) > 0){//        String st = String.valueOf(data, 0, rn);//        sb.append(st);//      }      while ((line = br.readLine()) != null){        sb.append(line).append(\"\\n\");      }      String fileStr = sb.toString();      return fileStr;    } catch (Exception e) {      utilLogger.error(\"\u8bfb\u53d6\u811a\u672c\u6587\u4ef6\u5f02\u5e38\uff01\", e);      e.printStackTrace();    } finally {      if(br != null){        try {          br.close();        } catch (IOException e) {          e.printStackTrace();        }      }    }    return sb.toString();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "paramDecompose", "params": ["String", "ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "  private Map<String, String> paramDecompose(String fileStr, ExecutableFlow ef){    Map<String, String> paramReplaceMap = new HashMap<>();    Pattern pattern = Pattern.compile(\"\\\\$\\\\{([^\\\\}]+)\\\\}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "scriptTimeHandle", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String scriptTimeHandle(String param) {    //\u65f6\u95f4\u5b57\u7b26\u4e32    String timeStr = \"\";    param = param.replaceAll(\"\\\\s*\", \"\");    if (RUN_DATE.equals(param)) {      timeStr = defaultDate.get(RUN_DATE).toString(\"yyyyMMdd\");    } else if (RUN_DATE_STD.equals(param)) {      timeStr = defaultDate.get(RUN_DATE_STD).toString(\"yyyy-MM-dd\");    } else if (param.contains(RUN_DATE) && !param.contains(RUN_DATE_STD)) {      String mathStr = StringUtils.substringAfter(param, RUN_DATE);      String[] sAry = {};      if (MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_DATE).minusDays(Integer.valueOf(sAry[1])).toString(\"yyyyMMdd\");      } else if (PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_DATE).plusDays(Integer.valueOf(sAry[1])).toString(\"yyyyMMdd\");      }    } else if (param.contains(RUN_DATE) && param.contains(RUN_DATE_STD)) {      String mathStr = StringUtils.substringAfter(param, RUN_DATE_STD);      String[] sAry = {};      if (MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_DATE_STD).minusDays(Integer.valueOf(sAry[1])).toString();      } else if (PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_DATE_STD).plusDays(Integer.valueOf(sAry[1])).toString();      }    }    if (RUN_MONTH_BEGIN.equals(param)) {      timeStr = defaultDate.get(RUN_MONTH_BEGIN).toString(\"yyyyMMdd\");    } else if (RUN_MONTH_BEGIN_STD.equals(param)) {      timeStr = defaultDate.get(RUN_MONTH_BEGIN_STD).toString(\"yyyy-MM-dd\");    } else if (param.contains(RUN_MONTH_BEGIN) && !param.contains(RUN_MONTH_BEGIN_STD)) {      String mathStr = StringUtils.substringAfter(param, RUN_MONTH_BEGIN);      String[] sAry = {};      if (MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_MONTH_BEGIN).minusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMinimumValue().toString(\"yyyyMMdd\");      } else if (PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_MONTH_BEGIN).plusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMinimumValue().toString(\"yyyyMMdd\");      }    } else if (param.contains(RUN_MONTH_BEGIN) && param.contains(RUN_MONTH_BEGIN_STD)) {      String mathStr = StringUtils.substringAfter(param, RUN_MONTH_BEGIN_STD);      String[] sAry = {};      if (MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_MONTH_BEGIN_STD).minusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMinimumValue().toString(\"yyyy-MM-dd\");      } else if (PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_MONTH_BEGIN_STD).plusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMinimumValue().toString(\"yyyy-MM-dd\");      }    }    if(RUN_MONTH_END.equals(param)){      timeStr = defaultDate.get(RUN_MONTH_END).toString(\"yyyyMMdd\");    }else if(RUN_MONTH_END_STD.equals(param)){      timeStr = defaultDate.get(RUN_MONTH_END_STD).toString(\"yyyy-MM-dd\");    }else if(param.contains(RUN_MONTH_END) && !param.contains(RUN_MONTH_END_STD)){      String mathStr = StringUtils.substringAfter(param, RUN_MONTH_END);      String[] sAry = {};      if(MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_MONTH_END).minusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMaximumValue().toString(\"yyyyMMdd\");      } else if(PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_MONTH_END).plusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMaximumValue().toString(\"yyyyMMdd\");      }    }else if(param.contains(RUN_MONTH_END) && param.contains(RUN_MONTH_END_STD)){      String mathStr = StringUtils.substringAfter(param, RUN_MONTH_END_STD);      String[] sAry = {};      if(MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_MONTH_END_STD).minusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMaximumValue().toString(\"yyyy-MM-dd\");      } else if(PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_MONTH_END_STD).plusMonths(Integer.valueOf(sAry[1])).dayOfMonth()            .withMaximumValue().toString(\"yyyy-MM-dd\");      }    }    if (RUN_TODAY.equals(param)) {      timeStr = defaultDate.get(RUN_TODAY).toString(\"yyyyMMdd\");    } else if (RUN_TODAY_STD.equals(param)) {      timeStr = defaultDate.get(RUN_TODAY_STD).toString(\"yyyy-MM-dd\");    } else if (param.contains(RUN_TODAY) && !param.contains(RUN_TODAY_STD)) {      String mathStr = StringUtils.substringAfter(param, RUN_TODAY);      String[] sAry = {};      if (MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_TODAY).minusDays(Integer.valueOf(sAry[1])).toString(\"yyyyMMdd\");      } else if (PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_TODAY).plusDays(Integer.valueOf(sAry[1])).toString(\"yyyyMMdd\");      }    } else if (param.contains(RUN_TODAY) && param.contains(RUN_TODAY_STD)) {      String mathStr = StringUtils.substringAfter(param, RUN_TODAY_STD);      String[] sAry = {};      if (MINUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"-\");        timeStr = defaultDate.get(RUN_TODAY_STD).minusDays(Integer.valueOf(sAry[1])).toString(\"yyyy-MM-dd\");      } else if (PLUS.equals(paramVerify(mathStr, param))) {        sAry = mathStr.split(\"\\\\+\");        timeStr = defaultDate.get(RUN_TODAY_STD).plusDays(Integer.valueOf(sAry[1])).toString(\"yyyy-MM-dd\");      }    }    return timeStr;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "filterUserParam", "params": ["Map<String,String>", "ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void filterUserParam(Map<String, String> systemParam, ExecutableFlow ef){    Map<String, String> handleMap = new HashMap<>();    handleMap.putAll(systemParam);    for(String userKey : getPropMap().keySet()){      for(String systemKey : handleMap.keySet()){        if(systemKey.contains(userKey) && !userKey.contains(\"_std\")            && !systemKey.contains(userKey + \"_std\")){          systemParam.remove(systemKey);        }        if(systemKey.contains(userKey) && userKey.contains(\"_std\")){          systemParam.remove(systemKey);        }      }    }    for(String userKey : ef.getExecutionOptions().getFlowParameters().keySet()){      if(null != handleMap.get(\"${\" + userKey + \"}\")){        systemParam.remove(\"${\" + userKey + \"}\");      }    }    // TODO \u8fc7\u6ee4\u7528\u6237\u53d8\u91cf    for(String userKey : ef.getUserProps().keySet()){      if(null != handleMap.get(\"${\" + userKey + \"}\")){        systemParam.remove(\"${\" + userKey + \"}\");      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "run", "params": ["String", "ExecutableFlow"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void run(String workingDir, ExecutableFlow ef){    //\u7528\u6237propertie\u6587\u4ef6\u8def\u5f84\u96c6\u5408    List<String> propPathList = loadAllPropertiesFile(workingDir);    //\u83b7\u53d6\u7528\u6237\u6240\u6709\u914d\u7f6e\u6587\u4ef6\u53c2\u6570    for(String filePath : propPathList){      //\u9879\u76ee\u6587\u4ef6\u4e2d\u7684properties\u4e2d\u7684\u914d\u7f6e\u53c2\u6570      getPropMap().putAll(readProperties(filePath));    }    try{      if(ef.getOtherOption().get(\"run_date\") == null){        if(this.getPropMap().get(\"run_date\") != null && !this.getPropMap().get(\"run_date\").isEmpty()){          ef.getOtherOption().put(\"run_date\", this.getPropMap().get(\"run_date\"));        }      }    } catch(RuntimeException e){      utilLogger.error(\"set rundate failed {}\", e);    }    //\u6240\u6709\u811a\u672c\u7684\u6587\u4ef6\u5730\u5740    List<String> scriptPathList = loadAllScriptFile(workingDir);    //\u521d\u59cb\u5316\u9ed8\u8ba4run_date\u65e5\u671f\u548c\u5176\u4ed6\u76f8\u5173\u65e5\u671f    boolean initDateIsSuccess = true;    try {      initDate(ef);    } catch (RuntimeException re){      initDateIsSuccess = false;      utilLogger.error(\"parse run_date failed.\", re);    }    //\u5faa\u73af\u811a\u672c\u6587\u4ef6\u5730\u5740    for(String filePath : scriptPathList){      //\u8bfb\u53d6\u5355\u4e2a\u811a\u672c\u6587\u4ef6\u7684\u5185\u5bb9      String fileStr = readFile(filePath);      if(initDateIsSuccess) {        //\u83b7\u53d6\u5355\u4e2a\u811a\u672c\u4e2d\u9700\u8981\u66ff\u6362\u7684\u53c2\u6570        Map<String, String> scriptMap = paramDecompose(fileStr, ef);        if (scriptMap != null && scriptMap.size() != 0) {          //\u5faa\u73af\u66ff\u6362\u811a\u672c\u4e2d\u5bf9\u5e94\u7684\u53c2\u6570\u5185\u5bb9          for (String timeStr : scriptMap.keySet()) {            fileStr = StringUtils.replace(fileStr, timeStr, scriptMap.get(timeStr));          }        }      }      //\u5c06\u66ff\u6362\u540e\u7684\u5185\u5bb9\u91cd\u65b0\u5199\u5165\u5230\u811a\u672c\u6587\u4ef6\u4e2d,\u91cd\u5199\u540e\u6587\u4ef6\u53d8\u6210unix\u683c\u5f0f      FileWrite(filePath, fileStr);    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPropMap", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "  public Map<String, String> getPropMap() {    return propMap;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setPropMap", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setPropMap(Map<String, String> propMap) {    this.propMap = propMap;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addPropMap", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addPropMap(String key, String value) {    this.propMap.put(key, value);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "paramVerify", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String paramVerify(String param, String fullParam){    String symbol = \"\";    String reg = \"[0-9]\";    String[] mathStr = {};    int minusSite = param.indexOf(\"-\");    int plusSite = param.indexOf(\"+\");    String[] sAry = null;    if((plusSite > minusSite && minusSite != -1) || plusSite == -1){      sAry = param.split(\"-\");      symbol = MINUS;    } else if ((minusSite > plusSite && plusSite != -1) || minusSite == -1){      sAry = param.split(\"\\\\+\");      symbol = PLUS;    }    if(fullParam.contains(RUN_DATE) && !fullParam.contains(RUN_DATE_STD)){      mathStr = StringUtils.split(fullParam, RUN_DATE);    } else if (fullParam.contains(RUN_DATE) && fullParam.contains(RUN_DATE_STD)) {      mathStr = StringUtils.split(param, RUN_DATE_STD);    } else if (fullParam.contains(RUN_MONTH_BEGIN) && !fullParam.contains(RUN_MONTH_BEGIN_STD)){      mathStr = StringUtils.split(param, RUN_MONTH_BEGIN);    } else if (fullParam.contains(RUN_MONTH_BEGIN) && fullParam.contains(RUN_MONTH_BEGIN_STD)){      mathStr = StringUtils.split(param, RUN_MONTH_BEGIN_STD);    } else if(fullParam.contains(RUN_MONTH_END) && !fullParam.contains(RUN_MONTH_END_STD)){      mathStr = StringUtils.split(param, RUN_MONTH_END);    } else if(fullParam.contains(RUN_MONTH_END) && fullParam.contains(RUN_MONTH_END_STD)){      mathStr = StringUtils.split(fullParam, RUN_MONTH_END_STD);    }else if(fullParam.contains(RUN_TODAY) && !fullParam.contains(RUN_TODAY_STD)){      mathStr = StringUtils.split(fullParam, RUN_TODAY);    } else if (fullParam.contains(RUN_TODAY) && fullParam.contains(RUN_TODAY_STD)) {      mathStr = StringUtils.split(param, RUN_TODAY_STD);    }    if(mathStr.length > 0){      Pattern pattern = Pattern.compile(reg);      if(!pattern.matcher(mathStr[0]).find()){        utilLogger.error(\"\u811a\u672c\u66ff\u6362\u53c2\u6570\u9002\u914d\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5\u811a\u672c\uff01\");        utilLogger.error(\"The script parameter ${\" + fullParam + \"} exception!Please check the script!\");        symbol = \"FALSE\";      }    }    if(sAry.length > 1 && sAry.length == 2){      String start = sAry[0];      if(StringUtils.isNotEmpty(start)){        utilLogger.error(\"\u811a\u672c\u66ff\u6362\u53c2\u6570\u9002\u914d\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5\u811a\u672c\uff01\");        utilLogger.error(\"The script parameter ${\" + fullParam + \"} exception!Please check the script!\");        symbol = \"FALSE\";      }      String str = sAry[1];      Pattern pattern = Pattern.compile(\"[0-9]*\");      if(!pattern.matcher(str).matches()){        utilLogger.error(\"\u811a\u672c\u66ff\u6362\u53c2\u6570\u9002\u914d\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5\u811a\u672c\uff01\");        utilLogger.error(\"The script parameter ${\" + fullParam + \"} exception!Please check the script!\");        symbol = \"FALSE\";      }    }else if(sAry.length > 2){//\u591a\u4e2a\u8fd0\u7b97\u7b26\u53f7\u5c31\u62a5\u5f02\u5e38      utilLogger.error(\"\u811a\u672c\u66ff\u6362\u53c2\u6570\u9002\u914d\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5\u811a\u672c\uff01\");      utilLogger.error(\"The script parameter ${\" + fullParam + \"} exception!Please check the script!\");      symbol = \"FALSE\";    }else if(sAry.length <= 1){//\u591a\u4e2a\u8fd0\u7b97\u7b26\u53f7\u5c31\u62a5\u5f02\u5e38      utilLogger.error(\"\u811a\u672c\u66ff\u6362\u53c2\u6570\u9002\u914d\u5f02\u5e38\uff01\u8bf7\u68c0\u67e5\u811a\u672c\uff01\");      utilLogger.error(\"The script parameter ${\" + fullParam + \"} exception!Please check the script!\");      symbol = \"FALSE\";    }    return symbol;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "flowParamTimesHandle", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "  private long flowParamTimesHandle(ExecutableFlow ef){    long flowParamSetTime = 0;    org.joda.time.format.DateTimeFormatter formatter;    if(null != ef.getExecutionOptions().getFlowParameters().get(\"run_date\")){      formatter = DateTimeFormat.forPattern(\"yyyyMMdd\");      LocalDate localDate = LocalDate.parse(ef.getExecutionOptions().getFlowParameters().get(\"run_date\")          , formatter);      flowParamSetTime = localDate.toDate().getTime();    } else {    }    return flowParamSetTime;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "dateFormatCheck", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean dateFormatCheck(String date){    Pattern p = Pattern.compile(TIME_TEMPLATE);    Matcher m = p.matcher(date);    if(m.matches()) {      return true;    } else {      utilLogger.error(date + \"\uff0c\u4e0d\u662f\u5408\u6cd5\u7684\u65e5\u671f\u683c\u5f0f\uff01\");      return false;    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/jobExecutor/utils/SystemBuiltInParamJodeTimeUtils.java", "stars": "18", "class": {"name": "SystemBuiltInParamJodeTimeUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "convertMapsToSections", "params": ["Map<?,?>", "ConfigurationSection"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void convertMapsToSections(Map<?, ?> input, ConfigurationSection section) {        for (Map.Entry<?, ?> entry : input.entrySet()) {            // always lower case the keys            String key = entry.getKey().toString().toLowerCase();            Object value = entry.getValue();            if (value instanceof Map) {                ConfigurationSection subSection = section.getConfigurationSection(key);                if (subSection == null) subSection = section.createSection(key);                convertMapsToSections((Map<?, ?>) value, subSection);            } else if (value instanceof ConfigurationSection) {                ConfigurationSection subSection = section.getConfigurationSection(key);                if (subSection == null) subSection = section.createSection(key);                convertMapsToSections(((ConfigurationSection) value).getValues(true), subSection);            } else {                section.set(key, value);            }        }    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/DataMap.java", "stars": "3", "class": {"name": "DataMap", "extends": "MemoryConfiguration", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "merge", "params": ["ConfigurationSection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void merge(ConfigurationSection section) {        // we want to merge so that this current map gets overriden        convertMapsToSections(section.getValues(true), this);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/DataMap.java", "stars": "3", "class": {"name": "DataMap", "extends": "MemoryConfiguration", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getSafeConfigSection", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ConfigurationSection", "snippet": "    public ConfigurationSection getSafeConfigSection(String path) {        ConfigurationSection configurationSection = getConfigurationSection(path);        if (configurationSection == null) {            configurationSection = createSection(path);        }        return configurationSection;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/DataMap.java", "stars": "3", "class": {"name": "DataMap", "extends": "MemoryConfiguration", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "get", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object get(String path, Object def) {        if (!isSet(path)) {            set(path, def);            return def;        } else {            return super.get(path, def);        }    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/DataMap.java", "stars": "3", "class": {"name": "DataMap", "extends": "MemoryConfiguration", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "isSet", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSet(String path) {        Configuration root = getRoot();        if (root == null) {            return false;        }        if (root.options().copyDefaults()) {            return contains(path);        }        return super.get(path, null) != null;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/config/DataMap.java", "stars": "3", "class": {"name": "DataMap", "extends": "MemoryConfiguration", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "hasHalLinks", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid hasHalLinks() {\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/customers/1\", String.class);\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\t\tassertThat(entity.getBody()).startsWith(\"{\\\"id\\\":1,\\\"firstName\\\":\\\"Oliver\\\",\\\"lastName\\\":\\\"Gierke\\\"\");\t\tassertThat(entity.getBody()).contains(\"_links\\\":{\\\"self\\\":{\\\"href\\\"\");\t}\t@Test\tvoid producesJsonWhenXmlIsPreferred() {\t\tHttpHeaders headers = new HttpHeaders();\t\theaders.set(HttpHeaders.ACCEPT, \"application/xml;q=0.9,application/json;q=0.8\");\t\tHttpEntity<?> request = new HttpEntity<>(headers);\t\tResponseEntity<String> response = this.restTemplate.exchange(\"/customers/1\", HttpMethod.GET, request,\t\t\t\tString.class);\t\tassertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);\t\tassertThat(response.getHeaders().getContentType()).isEqualTo(MediaType.parseMediaType(\"application/json\"));\t}}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-hateoas/src/test/java/smoketest/hateoas/SampleHateoasApplicationTests.java", "stars": "47572", "class": {"name": "SampleHateoasApplicationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "producesJsonWhenXmlIsPreferred", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid producesJsonWhenXmlIsPreferred() {\t\tHttpHeaders headers = new HttpHeaders();\t\theaders.set(HttpHeaders.ACCEPT, \"application/xml;q=0.9,application/json;q=0.8\");\t\tHttpEntity<?> request = new HttpEntity<>(headers);\t\tResponseEntity<String> response = this.restTemplate.exchange(\"/customers/1\", HttpMethod.GET, request,\t\t\t\tString.class);\t\tassertThat(response.getStatusCode()).isEqualTo(HttpStatus.OK);\t\tassertThat(response.getHeaders().getContentType()).isEqualTo(MediaType.parseMediaType(\"application/json\"));\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-hateoas/src/test/java/smoketest/hateoas/SampleHateoasApplicationTests.java", "stars": "47572", "class": {"name": "SampleHateoasApplicationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "doGet", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<String,Object>", "snippet": "    public static Map<String,Object> doGet(String url){        Map<String,Object> map = new HashMap<>();        CloseableHttpClient httpClient =  HttpClients.createDefault();        RequestConfig requestConfig =  RequestConfig.custom().setConnectTimeout(20000) //\u8fde\u63a5\u8d85\u65f6                .setConnectionRequestTimeout(20000)//\u8bf7\u6c42\u8d85\u65f6                .setSocketTimeout(30000)                .setRedirectsEnabled(true)  //\u5141\u8bb8\u81ea\u52a8\u91cd\u5b9a\u5411                .build();        HttpGet httpGet = new HttpGet(url);        httpGet.setConfig(requestConfig);        HttpResponse httpResponse = null;        try{           httpResponse = httpClient.execute(httpGet);           if(httpResponse.getStatusLine().getStatusCode() == 200){              String jsonResult = EntityUtils.toString(httpResponse.getEntity());//               logger.info(\"=====GET \u8bf7\u6c42\u4fe1\u606f=====\"+jsonResult);               map = gson.fromJson(jsonResult,map.getClass());           }else {               logger.error(\"=====GET \u8bf7\u6c42\u4fe1\u606f\u5931\u8d25=====\"+httpResponse.getStatusLine().getStatusCode());           }        }catch (Exception e){            e.printStackTrace();        }finally {            try {                httpClient.close();            }catch (Exception e){                e.printStackTrace();            }        }        return map;    }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/HttpUtils.java", "stars": "2", "class": {"name": "HttpUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "doGetString", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String doGetString(String url){        String jsonResult = null;        CloseableHttpClient httpClient =  HttpClients.createDefault();        RequestConfig requestConfig =  RequestConfig.custom().setConnectTimeout(8000) //\u8fde\u63a5\u8d85\u65f6                .setConnectionRequestTimeout(8000)//\u8bf7\u6c42\u8d85\u65f6                .setSocketTimeout(12000)                .setRedirectsEnabled(true)  //\u5141\u8bb8\u81ea\u52a8\u91cd\u5b9a\u5411                .build();        HttpGet httpGet = new HttpGet(url);        httpGet.setConfig(requestConfig);        try{            HttpResponse httpResponse = httpClient.execute(httpGet);            if(httpResponse.getStatusLine().getStatusCode() == 200){                jsonResult = EntityUtils.toString( httpResponse.getEntity());            }        }catch (Exception e){            e.printStackTrace();        }finally {            try {                httpClient.close();            }catch (Exception e){                e.printStackTrace();            }        }        return jsonResult;    }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/HttpUtils.java", "stars": "2", "class": {"name": "HttpUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "doPost", "params": ["String", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String doPost(String url, String data,int timeout){        CloseableHttpClient httpClient =  HttpClients.createDefault();        //\u8d85\u65f6\u8bbe\u7f6e        RequestConfig requestConfig =  RequestConfig.custom().setConnectTimeout(timeout) //\u8fde\u63a5\u8d85\u65f6                .setConnectionRequestTimeout(timeout)//\u8bf7\u6c42\u8d85\u65f6                .setSocketTimeout(timeout)                .setRedirectsEnabled(true)  //\u5141\u8bb8\u81ea\u52a8\u91cd\u5b9a\u5411                .build();        HttpPost httpPost  = new HttpPost(url);        httpPost.setConfig(requestConfig);        httpPost.addHeader(\"Content-Type\",\"text/html; chartset=UTF-8\");        if(data != null && data instanceof  String){ //\u4f7f\u7528\u5b57\u7b26\u4e32\u4f20\u53c2            StringEntity stringEntity = new StringEntity(data,\"UTF-8\");            httpPost.setEntity(stringEntity);        }        try{            CloseableHttpResponse httpResponse = httpClient.execute(httpPost);            HttpEntity httpEntity = httpResponse.getEntity();            if(httpResponse.getStatusLine().getStatusCode() == 200){                String result = EntityUtils.toString(httpEntity);                return result;            }        }catch (Exception e){            e.printStackTrace();        }finally {            try{                httpClient.close();            }catch (Exception e){                e.printStackTrace();            }        }        return null;    }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/HttpUtils.java", "stars": "2", "class": {"name": "HttpUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "finalizeFlow", "params": ["ExecutableFlow", "String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void finalizeFlow(final ExecutableFlow flow, final String reason,      @Nullable final Throwable originalError) {    final int execId = flow.getExecutionId();    boolean alertUser = true;    this.updaterStage.set(\"finalizing flow \" + execId);    logger.info(\"finalizing flow \" + execId);    // First we check if the execution in the datastore is complete    ExecutableFlow dsFlow = null;    try {      if (ExecutionControllerUtils.isFinished(flow)) {        dsFlow = flow;      } else {        this.updaterStage.set(\"finalizing flow \" + execId + \" loading from db\");        logger.info(\"finalizing flow \" + execId + \" loading from db\");        dsFlow = this.executorLoader.fetchExecutableFlow(execId);        // If it's marked finished, we're good. If not, we fail everything and        // then mark it finished.        if (!ExecutionControllerUtils.isFinished(dsFlow)) {          this.updaterStage.set(\"finalizing flow \" + execId + \" failing the flow\");          logger.info(\"finalizing flow \" + execId + \" failing the flow\");          ExecutionControllerUtils.failEverything(dsFlow);          this.executorLoader.updateExecutableFlow(dsFlow);        }      }      this.updaterStage.set(\"finalizing flow \" + execId + \" deleting active reference\");      logger.info(\"finalizing flow \" + execId + \" deleting active reference\");      // Delete the executing reference.      if (flow.getEndTime() == -1) {        flow.setEndTime(System.currentTimeMillis());        this.executorLoader.updateExecutableFlow(dsFlow);      }      this.executorLoader.removeActiveExecutableReference(execId);      this.updaterStage.set(\"finalizing flow \" + execId + \" cleaning from memory\");      logger.info(\"finalizing flow \" + execId + \" cleaning from memory\");      this.runningExecutions.get().remove(execId);    } catch (final ExecutorManagerException e) {      alertUser = false; // failed due to azkaban internal error, not to alert user      logger.error(e);    }    if(dsFlow == null){      logger.error(\"can not found ExecutableFlow by execId:\" + execId);      return;    }    // TODO append to the flow log that we marked this flow as failed + the extraReasons    this.updaterStage.set(\"finalizing flow \" + execId + \" alerting and emailing\");    if (alertUser) {      logger.info(\"finalizing flow \" + execId + \" alerting and emailing\");      ExecutionControllerUtils.alertUserOnFlowFinished(dsFlow, this.alerterHolder,          ExecutionControllerUtils.getFinalizeFlowReasons(reason,              originalError));    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionFinalizer.java", "stars": "18", "class": {"name": "ExecutionFinalizer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {        creatorLeasingDTO = new CreatorLeasingDTO();        gardenField = new GardenField();        gardenField.setPricePerM2(1.0);        gardenField.setSizeInM2(1.0);        gardenField.setId(1L);        when(gardenFieldRepository.getOne(1L)).thenReturn(gardenField);        when(gardenFieldRepository.findById(1L)).thenReturn(Optional.of(gardenField));        creatorLeasingDTO.setGardenFieldId(gardenField.getId());        creatorLeasingDTO.setGardenFieldName(\"gardenfield name\");    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCreateCheckoutSessionPaymentNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateCheckoutSessionPaymentNull() {        assertThrows(IllegalArgumentException.class, () ->            stripeService.createCheckoutSession(null));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCreateCheckoutSession", "params": [], "throws": ["StripeException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateCheckoutSession() throws StripeException {        creatorLeasingDTO.setFrom(Instant.now().plus(100, ChronoUnit.DAYS));        creatorLeasingDTO.setTo(creatorLeasingDTO.getFrom().plus(100, ChronoUnit.DAYS));        creatorLeasingDTO.setGardenFieldName(\"gardenfield name\");        User user = new User();        user.setId(2L);        when(securityHelperService.getLoggedInUser()).thenReturn(user);        when(stripeClient.createCheckoutSession(anyMap())).thenReturn(new Session());        stripeService.createCheckoutSession(creatorLeasingDTO);        verify(stripeClient).createCheckoutSession(any());    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCancelPayment", "params": [], "throws": ["StripeException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCancelPayment() throws StripeException {        String sessionId = \"testCheckouId\";        stripeService.cancelPayment(sessionId);        verify(stripeClient).cancelPaymentIntent(sessionId);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCancelPaymentWithException", "params": [], "throws": ["StripeException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCancelPaymentWithException() throws StripeException {        String sessionId = \"testCheckouId\";        doThrow(InvalidRequestException.class).when(stripeClient).cancelPaymentIntent(anyString());        assertThrows(StripeServiceException.class, () -> stripeService.cancelPayment(sessionId));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testFinalizePayment", "params": [], "throws": ["StripeException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testFinalizePayment() throws StripeException {        String testAccId = \"testAccountId\";        String sessionId = \"checkoutSessionId\";        Leasing leasing = new Leasing();        leasing.setFrom(Instant.now().plus(100, ChronoUnit.DAYS));        leasing.setTo(leasing.getFrom().plus(100, ChronoUnit.DAYS));        leasing.setPaymentSessionId(sessionId);        leasing.setGardenField(gardenField);        stripeService.finalizePayment(new FinalizePaymentAtPaymentProviderDTO(testAccId, leasing));        verify(stripeClient).capturePaymentIntent(sessionId);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCreateAccount", "params": [], "throws": ["StripeException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateAccount() throws StripeException {        String bankAccountIBAN = \"4000000400000008\";        when(stripeClient.createAccount(anyMap())).thenReturn(new Account());        stripeService.createAccount(new CreatePaymentProviderAccountDTO(\"email@mail.com\", bankAccountIBAN));        verify(stripeClient).createAccount(any());    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testGetAccountLinkUrl", "params": [], "throws": ["StripeException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetAccountLinkUrl() throws StripeException {        when(stripeClient.getAccountLink(anyMap())).thenReturn(\"testUrl\");        String accountId = \"testAccId\";        String res;        res = stripeService.getAccountLinkUrl(new GetStripeAccountLinkUrlDTO(accountId, \"\"));        assertThat(res).isNotNull();        assertThat(res).isNotEmpty();    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/StripeServiceTest.java", "stars": "2", "class": {"name": "StripeServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findDead", "params": ["int", "Date"], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> findDead(int timeout, Date nowTime) {        return null;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/dao/XxlJobRegistryDao.java", "stars": "1", "class": {"name": "XxlJobRegistryDao", "extends": "BaseMongoServiceImpl", "implements": null, "modifiers": ["public"]}}, {"method_name": "removeDead", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int removeDead(List<Integer> ids) {        Query query = new Query();        query.addCriteria(where(\"id\").in(ids));        DeleteResult deleteResult = super.remove(query);        return (int) deleteResult.getDeletedCount();    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/dao/XxlJobRegistryDao.java", "stars": "1", "class": {"name": "XxlJobRegistryDao", "extends": "BaseMongoServiceImpl", "implements": null, "modifiers": ["public"]}}, {"method_name": "findAll", "params": ["int", "Date"], "throws": null, "modifiers": ["public"], "return_type": "List<XxlJobRegistry>", "snippet": "    public List<XxlJobRegistry> findAll(int timeout, Date nowTime) {        return null;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/dao/XxlJobRegistryDao.java", "stars": "1", "class": {"name": "XxlJobRegistryDao", "extends": "BaseMongoServiceImpl", "implements": null, "modifiers": ["public"]}}, {"method_name": "registryUpdate", "params": ["String", "String", "String", "Date"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int registryUpdate(String registryGroup, String registryKey, String registryValue, Date updateTime) {        Query query = new Query();        query.addCriteria(where(\"registryGroup\").is(registryGroup));        query.addCriteria(where(\"registryKey\").is(registryKey));        query.addCriteria(where(\"registryValue\").is(registryValue));        Update update = new Update();        update.set(\"updateTime\", updateTime);        UpdateResult updateResult = super.update(query, update);        return (int) updateResult.getModifiedCount();    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/dao/XxlJobRegistryDao.java", "stars": "1", "class": {"name": "XxlJobRegistryDao", "extends": "BaseMongoServiceImpl", "implements": null, "modifiers": ["public"]}}, {"method_name": "registrySave", "params": ["String", "String", "String", "Date"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int registrySave(String registryGroup, String registryKey, String registryValue, Date updateTime) {        XxlJobRegistry xxlJobRegistry = new XxlJobRegistry();        xxlJobRegistry.setRegistryGroup(registryGroup);        xxlJobRegistry.setRegistryKey(registryKey);        xxlJobRegistry.setRegistryValue(registryValue);        xxlJobRegistry.setUpdateTime(updateTime);        super.save(xxlJobRegistry);        return 1;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/dao/XxlJobRegistryDao.java", "stars": "1", "class": {"name": "XxlJobRegistryDao", "extends": "BaseMongoServiceImpl", "implements": null, "modifiers": ["public"]}}, {"method_name": "registryDelete", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int registryDelete(String registryGroup, String registryKey, String registryValue) {        Query query = new Query();        query.addCriteria(where(\"registryGroup\").is(registryGroup));        query.addCriteria(where(\"registryKey\").is(registryKey));        query.addCriteria(where(\"registryValue\").is(registryValue));        DeleteResult deleteResult = super.remove(query);        return (int) deleteResult.getDeletedCount();    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/dao/XxlJobRegistryDao.java", "stars": "1", "class": {"name": "XxlJobRegistryDao", "extends": "BaseMongoServiceImpl", "implements": null, "modifiers": ["public"]}}, {"method_name": "read", "params": ["byte", "long", "int"], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read(byte[] buffer, long offset, int length) throws ProxyCacheException {        ProxyCacheUtils.assertBuffer(buffer, offset, length);        while (!cache.isCompleted() && cache.available() < (offset + length) && !stopped) {            readSourceAsync();            waitForSourceData();            checkReadSourceErrorsCount();        }        int read = cache.read(buffer, offset, length);        if (cache.isCompleted() && percentsAvailable != 100) {            percentsAvailable = 100;            onCachePercentsAvailableChanged(100);        }        return read;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "checkReadSourceErrorsCount", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkReadSourceErrorsCount() throws ProxyCacheException {        int errorsCount = readSourceErrorsCount.get();        if (errorsCount >= MAX_READ_SOURCE_ATTEMPTS) {            readSourceErrorsCount.set(0);            throw new ProxyCacheException(\"Error reading source \" + errorsCount + \" times\");        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shutdown", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {        synchronized (stopLock) {            try {                stopped = true;                if (sourceReaderThread != null) {                    sourceReaderThread.interrupt();                }                cache.close();            } catch (ProxyCacheException e) {                onError(e);            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "readSourceAsync", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["synchronized", "private"], "return_type": "void", "snippet": "    private synchronized void readSourceAsync() throws ProxyCacheException {        boolean readingInProgress = sourceReaderThread != null && sourceReaderThread.getState() != Thread.State.TERMINATED;        if (!stopped && !cache.isCompleted() && !readingInProgress) {            sourceReaderThread = new Thread(new SourceReaderRunnable(), \"Source reader for \" + source);            sourceReaderThread.start();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "waitForSourceData", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void waitForSourceData() throws ProxyCacheException {        synchronized (wc) {            try {                wc.wait(1000);            } catch (InterruptedException e) {                throw new ProxyCacheException(\"Waiting source data is interrupted!\", e);            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "notifyNewCacheDataAvailable", "params": ["long", "long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void notifyNewCacheDataAvailable(long cacheAvailable, long sourceAvailable) {        onCacheAvailable(cacheAvailable, sourceAvailable);        synchronized (wc) {            wc.notifyAll();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "onCacheAvailable", "params": ["long", "long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCacheAvailable(long cacheAvailable, long sourceLength) {        boolean zeroLengthSource = sourceLength == 0;        int percents = zeroLengthSource ? 100 : (int) ((float) cacheAvailable / sourceLength * 100);        boolean percentsChanged = percents != percentsAvailable;        boolean sourceLengthKnown = sourceLength >= 0;        if (sourceLengthKnown && percentsChanged) {            onCachePercentsAvailableChanged(percents);        }        percentsAvailable = percents;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "onCachePercentsAvailableChanged", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCachePercentsAvailableChanged(int percentsAvailable) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "readSource", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void readSource() {        long sourceAvailable = -1;        long offset = 0;        try {            offset = cache.available();            source.open(offset);            sourceAvailable = source.length();            byte[] buffer = new byte[ProxyCacheUtils.DEFAULT_BUFFER_SIZE];            int readBytes;            while ((readBytes = source.read(buffer)) != -1) {                synchronized (stopLock) {                    if (isStopped()) {                        return;                    }                    cache.append(buffer, readBytes);                }                offset += readBytes;                notifyNewCacheDataAvailable(offset, sourceAvailable);            }            tryComplete();            onSourceRead();        } catch (Throwable e) {            readSourceErrorsCount.incrementAndGet();            onError(e);        } finally {            closeSource();            notifyNewCacheDataAvailable(offset, sourceAvailable);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "onSourceRead", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onSourceRead() {        // guaranteed notify listeners after source read and cache completed        percentsAvailable = 100;        onCachePercentsAvailableChanged(percentsAvailable);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "tryComplete", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void tryComplete() throws ProxyCacheException {        synchronized (stopLock) {            if (!isStopped() && cache.available() == source.length()) {                cache.complete();            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "isStopped", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isStopped() {        return Thread.currentThread().isInterrupted() || stopped;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "closeSource", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void closeSource() {        try {            source.close();        } catch (ProxyCacheException e) {            onError(new ProxyCacheException(\"Error closing source \" + source, e));        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "onError", "params": ["Throwable"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "    protected final void onError(final Throwable e) {        boolean interruption = e instanceof InterruptedProxyCacheException;        if (interruption) {            HttpProxyCacheDebuger.printfLog(\"ProxyCache is interrupted\");        } else {            HttpProxyCacheDebuger.printfError(\"ProxyCache error\", e.getMessage());        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "ProxyCache", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {            readSource();        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ProxyCache.java", "stars": "2", "class": {"name": "SourceReaderRunnable", "extends": null, "implements": ["Runnable"], "modifiers": ["private"]}}, {"method_name": "getUsername", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {        return username;    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/UserCond.java", "stars": "2", "class": {"name": "UserCond", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setUsername", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsername(String username) {        this.username = username;    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/UserCond.java", "stars": "2", "class": {"name": "UserCond", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPassword", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPassword() {        return this.password;    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/UserCond.java", "stars": "2", "class": {"name": "UserCond", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setPassword", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPassword(String password) {        this.password = password;    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/dto/cond/UserCond.java", "stars": "2", "class": {"name": "UserCond", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "find", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "VipType", "snippet": "    public VipType find(String key) {        return vipTypes.get(key);    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/cache/VipTypeCache.java", "stars": "2", "class": {"name": "VipTypeCache", "extends": null, "implements": ["DAO"], "modifiers": ["public"]}}, {"method_name": "insert", "params": ["String", "VipType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void insert(String key, VipType vipType) {        vipTypes.put(key, vipType);    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/cache/VipTypeCache.java", "stars": "2", "class": {"name": "VipTypeCache", "extends": null, "implements": ["DAO"], "modifiers": ["public"]}}, {"method_name": "delete", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(String key) {        vipTypes.remove(key);    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/cache/VipTypeCache.java", "stars": "2", "class": {"name": "VipTypeCache", "extends": null, "implements": ["DAO"], "modifiers": ["public"]}}, {"method_name": "getSql", "params": ["RequestContext"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSql(RequestContext context) {        // \u6267\u884c\u8868\u8fbe\u5f0f        Object value = context.evaluate(test);        // \u5224\u65ad\u8868\u8fbe\u5f0f\u8fd4\u56de\u7ed3\u679c\u662f\u5426\u662ftrue\uff0c\u5982\u679c\u4e0d\u662f\u5219\u8fc7\u6ee4\u5b50\u8282\u70b9        if(Objects.equals(value,true)){            return executeChildren(context);        }        return \"\";    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/scripts/IfSqlNode.java", "stars": "13", "class": {"name": "IfSqlNode", "extends": "SqlNode", "implements": null, "modifiers": ["public"]}}, {"method_name": "newInstance", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "WalletsFragment", "snippet": "    public static WalletsFragment newInstance() {        return new WalletsFragment();    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/WalletsFragment.java", "stars": "1", "class": {"name": "WalletsFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreateView", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {        View v = inflater.inflate(R.layout.fragment_wallets, container, false);        mydb = new DBHelper(getActivity());        ArrayList array_list = mydb.getAllWallets();        ArrayList<HashMap<String, String>> walletsList = new ArrayList<HashMap<String, String>>();        for (int i=0;i<array_list.size();i+=2)        {            HashMap<String, String> map = new HashMap <String, String>();            map.put(KEY_NUMBER, array_list.get(i).toString());            map.put(KEY_CASH, array_list.get(i+1).toString());            walletsList.add(map);        }        list=(ListView)v.findViewById(R.id.listView2);        // Getting adapter by passing xml data ArrayList        adapter=new MyAdapter2(getActivity(), walletsList);        list.setAdapter(adapter);        return v;    }", "url": "https://raw.githubusercontent.com/zhackerx/upi_payment/master/app/src/main/java/com/millionq/upi_payment/WalletsFragment.java", "stars": "1", "class": {"name": "WalletsFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "getGList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<GBoardVO>", "snippet": "\tpublic ArrayList<GBoardVO> getGList(){\t\tArrayList<GBoardVO> list = new ArrayList<GBoardVO>();\t\t// \ud560\uc77c\t\t// 1. \ucee4\ub125\uc158 \uac00\uc838\uc624\uace0\t\tcon = db.getCon();\t\t// 2. \uc9c8\uc758\uba85\ub839 \uac00\uc838\uc624\uace0\t\tString sql = gSQL.getSQL(gSQL.SEL_LIST);\t\t// 3. stmt \uac00\uc838\uc624\uace0\t\tstmt = db.getSTMT(con);\t\ttry {\t\t\t// 4. \uc9c8\uc758\uba85\ub839 stmt\uc5d0 \uc2e4\uc5b4\uc11c \ubcf4\ub0b4\uace0 \uacb0\uacfc \ubc1b\uace0\t\t\trs = stmt.executeQuery(sql);\t\t\t// 5. \ud558\ub098\uc529 \uaebc\ub0b4\uc11c VO\uc5d0 \ub2f4\uace0\t\t\twhile(rs.next()) {\t\t\t\t// vo \ub9cc\ub4e4\uace0\t\t\t\tGBoardVO vo = new GBoardVO();\t\t\t\tvo.setGno(rs.getInt(\"gno\"));\t\t\t\tvo.setGmno(rs.getInt(\"gmno\"));\t\t\t\tvo.setId(rs.getString(\"id\"));\t\t\t\tvo.setBody(rs.getString(\"body\"));\t\t\t\tvo.setAvatar(rs.getString(\"avatar\"));\t\t\t\tvo.setgDate(rs.getDate(\"gdate\"));\t\t\t\tvo.setgTime(rs.getTime(\"gdate\"));\t\t\t\tvo.setsDate();\t\t\t\t// 6. list\uc5d0 VO\ub2f4\uace0\t\t\t\tlist.add(vo);\t\t\t}\t\t\t\t\t} catch(Exception e) {\t\t\te.printStackTrace();\t\t} finally {\t\t\tdb.close(rs);\t\t\tdb.close(stmt);\t\t\tdb.close(con);\t\t}\t\t// 7. list \ub0b4\ubcf4\ub0b4\uace0\t\treturn list;\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/dao/GBoardDAO.java", "stars": "2", "class": {"name": "GBoardDAO", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCnt", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getCnt(String id) {\t\tint cnt = 0 ;\t\t// \ud560\uc77c\t\t// 1. \ucee4\ub125\uc158 \uac00\uc838\uc624\uace0\t\tcon = db.getCon();\t\t// 2. \uc9c8\uc758\uba85\ub839 \uac00\uc838\uc624\uace0\t\tString sql = gSQL.getSQL(gSQL.SEL_ID_CNT);\t\t// 3. pstmt \uac00\uc838\uc624\uace0\t\tpstmt = db.getPSTMT(con, sql);\t\ttry {\t\t\t// 4. \uc9c8\uc758\uba85\ub839 \uc644\uc131\ud574\ubd05\uc2dc\ub2e4.\t\t\tpstmt.setString(1, id);\t\t\t// 5. \ubcf4\ub0bc\uae4c\uc694???\t\t\trs = pstmt.executeQuery();\t\t\t// 6. \uaebc\ub0bc\uae4c\uc694???\t\t\trs.next();\t\t\tcnt = rs.getInt(\"cnt\");\t\t} catch(Exception e) {\t\t\te.printStackTrace();\t\t} finally {\t\t\tdb.close(rs);\t\t\tdb.close(pstmt);\t\t\tdb.close(con);\t\t}\t\t// 7. \ub0b4\ubcf4\ub0bc\uae4c\uc694???\t\treturn cnt;\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/dao/GBoardDAO.java", "stars": "2", "class": {"name": "GBoardDAO", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getAvt", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAvt(String id) {\t\tString avt = \"\";\t\t// \ud560\uc77c\t\t// 1. \ucee4\ub125\uc158 \uac00\uc838\uc624\uace0\t\tcon = db.getCon();\t\t// 2. \uc9c8\uc758\uba85\ub839\uac00\uc838\uc624\uace0\t\tString sql = gSQL.getSQL(gSQL.SEL_AVT);\t\t// 3. pstmt \uac00\uc838\uc624\uace0\t\tpstmt = db.getPSTMT(con, sql);\t\ttry{\t\t\t// 4. \uc9c8\uc758\uba85\ub839 \uc644\uc131\ud558\uace0\t\t\tpstmt.setString(1, id);\t\t\t// 5. \ubcf4\ub0b4\uace0 \uacb0\uacfc\ubc1b\uace0\t\t\trs = pstmt.executeQuery();\t\t\t// 6. \ub370\uc774\ud130\uaebc\ub0b4\uace0\t\t\trs.next();\t\t\tavt = rs.getString(\"avatar\");\t\t} catch(Exception e) {\t\t\te.printStackTrace();\t\t} finally {\t\t\tdb.close(rs);\t\t\tdb.close(pstmt);\t\t\tdb.close(con);\t\t}\t\t// 7. \ub0b4\ubcf4\ub0b4\uace0\t\treturn avt;\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/dao/GBoardDAO.java", "stars": "2", "class": {"name": "GBoardDAO", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addData", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int addData(String id, String body) {\t\tint cnt = 0 ;\t\t// 1.\t\tcon = db.getCon();\t\t// 2.\t\tString sql = gSQL.getSQL(gSQL.ADD_DATA);\t\t// 3. \t\tpstmt = db.getPSTMT(con, sql);\t\ttry {\t\t\t// 4.\t\t\tpstmt.setString(1, id);\t\t\tpstmt.setString(2, body);\t\t\t// 5. \t\t\tcnt = pstmt.executeUpdate();\t\t} catch(Exception e) {\t\t\te.printStackTrace();\t\t} finally {\t\t\tdb.close(pstmt);\t\t\tdb.close(con);\t\t}\t\t// 6.\t\treturn cnt;\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/dao/GBoardDAO.java", "stars": "2", "class": {"name": "GBoardDAO", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView() {        if (mWeakView == null)            return null;        return mWeakView.get();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "setVideoSize", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVideoSize(int videoWidth, int videoHeight) {        mVideoWidth = videoWidth;        mVideoHeight = videoHeight;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "setVideoSampleAspectRatio", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVideoSampleAspectRatio(int videoSarNum, int videoSarDen) {        mVideoSarNum = videoSarNum;        mVideoSarDen = videoSarDen;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "setVideoRotation", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVideoRotation(int videoRotationDegree) {        mVideoRotationDegree = videoRotationDegree;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "doMeasure", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doMeasure(int widthMeasureSpec, int heightMeasureSpec) {        mCurrentAspectRatio = GSYVideoType.getShowType();        if (mVideoHeight == 0 || mVideoWidth == 0) {            mMeasuredWidth = 1;            mMeasuredHeight = 1;            return;        }        if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270) {            int tempSpec = widthMeasureSpec;            widthMeasureSpec = heightMeasureSpec;            heightMeasureSpec = tempSpec;        }        int realWidth = mVideoWidth;        if(mVideoSarNum != 0 && mVideoSarDen != 0) {            double pixelWidthHeightRatio = mVideoSarNum / (mVideoSarDen / 1.0);            realWidth = (int) (pixelWidthHeightRatio * mVideoWidth);        }        int width = View.getDefaultSize(realWidth, widthMeasureSpec);        int height = View.getDefaultSize(mVideoHeight, heightMeasureSpec);        if (mCurrentAspectRatio == GSYVideoType.SCREEN_MATCH_FULL) {            width = widthMeasureSpec;            height = heightMeasureSpec;        } else if (realWidth > 0 && mVideoHeight > 0) {            int widthSpecMode = View.MeasureSpec.getMode(widthMeasureSpec);            int widthSpecSize = View.MeasureSpec.getSize(widthMeasureSpec);            int heightSpecMode = View.MeasureSpec.getMode(heightMeasureSpec);            int heightSpecSize = View.MeasureSpec.getSize(heightMeasureSpec);            if (widthSpecMode == View.MeasureSpec.AT_MOST && heightSpecMode == View.MeasureSpec.AT_MOST) {                float specAspectRatio = (float) widthSpecSize / (float) heightSpecSize;                float displayAspectRatio;                switch (mCurrentAspectRatio) {                    case GSYVideoType.SCREEN_TYPE_16_9:                        displayAspectRatio = 16.0f / 9.0f;                        if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270)                            displayAspectRatio = 1.0f / displayAspectRatio;                        break;                    case GSYVideoType.SCREEN_TYPE_18_9:                        displayAspectRatio = 18.0f / 9.0f;                        if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270)                            displayAspectRatio = 1.0f / displayAspectRatio;                        break;                    case GSYVideoType.SCREEN_TYPE_4_3:                        displayAspectRatio = 4.0f / 3.0f;                        if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270)                            displayAspectRatio = 1.0f / displayAspectRatio;                        break;                    case GSYVideoType.SCREEN_TYPE_CUSTOM:                        displayAspectRatio = GSYVideoType.getScreenScaleRatio();                        if (mVideoRotationDegree == 90 || mVideoRotationDegree == 270)                            displayAspectRatio = 1.0f / displayAspectRatio;                        break;                    case GSYVideoType.SCREEN_TYPE_DEFAULT:                    case GSYVideoType.SCREEN_TYPE_FULL:                        //case GSYVideoType.AR_ASPECT_WRAP_CONTENT:                    default:                        displayAspectRatio = (float) realWidth / (float) mVideoHeight;                        if (mVideoSarNum > 0 && mVideoSarDen > 0)                            displayAspectRatio = displayAspectRatio * mVideoSarNum / mVideoSarDen;                        break;                }                boolean shouldBeWider = displayAspectRatio > specAspectRatio;                switch (mCurrentAspectRatio) {                    case GSYVideoType.SCREEN_TYPE_DEFAULT:                    case GSYVideoType.SCREEN_TYPE_16_9:                    case GSYVideoType.SCREEN_TYPE_4_3:                    case GSYVideoType.SCREEN_TYPE_18_9:                    case GSYVideoType.SCREEN_TYPE_CUSTOM:                        if (shouldBeWider) {                            // too wide, fix width                            width = widthSpecSize;                            height = (int) (width / displayAspectRatio);                        } else {                            // too high, fix height                            height = heightSpecSize;                            width = (int) (height * displayAspectRatio);                        }                        break;                    case GSYVideoType.SCREEN_TYPE_FULL:                        if (shouldBeWider) {                            // not high enough, fix height                            height = heightSpecSize;                            width = (int) (height * displayAspectRatio);                        } else {                            // not wide enough, fix width                            width = widthSpecSize;                            height = (int) (width / displayAspectRatio);                        }                        break;                    //case GSYVideoType.AR_ASPECT_WRAP_CONTENT:                    default:                        if (shouldBeWider) {                            // too wide, fix width                            width = Math.min(realWidth, widthSpecSize);                            height = (int) (width / displayAspectRatio);                        } else {                            // too high, fix height                            height = Math.min(mVideoHeight, heightSpecSize);                            width = (int) (height * displayAspectRatio);                        }                        break;                }            } else if (widthSpecMode == View.MeasureSpec.EXACTLY && heightSpecMode == View.MeasureSpec.EXACTLY) {                // the size is fixed                width = widthSpecSize;                height = heightSpecSize;                // for compatibility, we adjust size based on aspect ratio                if (realWidth * height < width * mVideoHeight) {                    //Log.i(\"@@@\", \"image too wide, correcting\");                    width = height * realWidth / mVideoHeight;                } else if (realWidth * height > width * mVideoHeight) {                    //Log.i(\"@@@\", \"image too tall, correcting\");                    height = width * mVideoHeight / realWidth;                }            } else if (widthSpecMode == View.MeasureSpec.EXACTLY) {                // only the width is fixed, adjust the height to match aspect ratio if possible                width = widthSpecSize;                height = width * mVideoHeight / realWidth;                if (heightSpecMode == View.MeasureSpec.AT_MOST && height > heightSpecSize) {                    // couldn't match aspect ratio within the constraints                    height = heightSpecSize;                }            } else if (heightSpecMode == View.MeasureSpec.EXACTLY) {                // only the height is fixed, adjust the width to match aspect ratio if possible                height = heightSpecSize;                width = height * realWidth / mVideoHeight;                if (widthSpecMode == View.MeasureSpec.AT_MOST && width > widthSpecSize) {                    // couldn't match aspect ratio within the constraints                    width = widthSpecSize;                }            } else {                // neither the width nor the height are fixed, try to use actual video size                width = realWidth;                height = mVideoHeight;                if (heightSpecMode == View.MeasureSpec.AT_MOST && height > heightSpecSize) {                    // too tall, decrease both width and height                    height = heightSpecSize;                    width = height * realWidth / mVideoHeight;                }                if (widthSpecMode == View.MeasureSpec.AT_MOST && width > widthSpecSize) {                    // too wide, decrease both width and height                    width = widthSpecSize;                    height = width * mVideoHeight / realWidth;                }            }        } else {            // no size yet, just adopt the given spec sizes        }        mMeasuredWidth = width;        mMeasuredHeight = height;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "prepareMeasure", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void prepareMeasure(int widthMeasureSpec, int heightMeasureSpec, int rotate) {        if (mParamsListener != null) {            try {                int videoWidth = mParamsListener.getCurrentVideoWidth();                int videoHeight = mParamsListener.getCurrentVideoHeight();                Debuger.printfLog(\"videoWidth: \" + videoWidth + \" videoHeight: \" + videoHeight);                int videoSarNum = mParamsListener.getVideoSarNum();                int videoSarDen = mParamsListener.getVideoSarDen();                if (videoWidth > 0 && videoHeight > 0) {                    setVideoSampleAspectRatio(videoSarNum, videoSarDen);                    setVideoSize(videoWidth, videoHeight);                }                setVideoRotation(rotate);                doMeasure(widthMeasureSpec, heightMeasureSpec);            } catch (Exception e) {                e.printStackTrace();            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getMeasuredWidth", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMeasuredWidth() {        return mMeasuredWidth;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getMeasuredHeight", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMeasuredHeight() {        return mMeasuredHeight;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "setAspectRatio", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAspectRatio(int aspectRatio) {        mCurrentAspectRatio = aspectRatio;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/MeasureHelper.java", "stars": "2", "class": {"name": "MeasureHelper", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "onGameInit", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onGameInit() {        gameManager.setViewGlobalData(\"tooltips\", globalData);        sendFrameData();    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "onAfterGameTurn", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAfterGameTurn() {        sendFrameData();    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "onAfterOnEnd", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAfterOnEnd() {    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "sendFrameData", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendFrameData() {        if (!newRegistration.isEmpty()) {            Object[] data = { newRegistration };            gameManager.setViewData(\"tooltips\", data);        }        newRegistration.clear();    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "stringEquals", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean stringEquals(String a, String b) {        if (a == b) {            return true;        } else if (a != null && a.equals(b)) {            return true;        } else {            return false;        }    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "setTooltipText", "params": ["Entity<?>", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTooltipText(Entity<?> entity, String text) {        int id = entity.getId();        if (!stringEquals(text, registered.get(id))) {            newRegistration.put(id, text);            registered.put(id, text);        }    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "getTooltipText", "params": ["Entity<?>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTooltipText(Entity<?> entity) {        return registered.get(entity.getId());    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "removeTooltipText", "params": ["Entity<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeTooltipText(Entity<?> entity) {        newRegistration.put(entity.getId(), null);        registered.remove(entity.getId());    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "init", "params": ["TooltipGlobalData"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(TooltipGlobalData data) {        this.globalData = data;    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/tooltip/TooltipModule.java", "stars": "15", "class": {"name": "TooltipModule", "extends": null, "implements": ["Module"], "modifiers": ["public"]}}, {"method_name": "localeResolver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LocaleResolver", "snippet": "    public LocaleResolver localeResolver() {        SessionLocaleResolver localeResolver = new SessionLocaleResolver();        localeResolver.setDefaultLocale(Locale.US);        return localeResolver;    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/util/src/main/java/com/integration/util/configuration/LanguageConfiguration.java", "stars": "2", "class": {"name": "LanguageConfiguration", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "process", "params": ["RequestEvent", "SipLayer", "ServerTransaction"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void process(RequestEvent evt, SipLayer layer, ServerTransaction transaction) {\t\t// TODO Auto-generated method stub\t\t\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/request/impl/ByeRequestProcessor.java", "stars": "29", "class": {"name": "ByeRequestProcessor", "extends": null, "implements": ["ISIPRequestProcessor"], "modifiers": ["public"]}}, {"method_name": "updateDisplayingTextView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void updateDisplayingTextView()\t{\t\ttextViewDisplaying = (TextView) findViewById(R.id.displaying);\t\tString text = getString(R.string.display);\t\ttext = String.format(text, getListAdapter().getCount(), datasource.getSize());\t\ttextViewDisplaying.setText(text);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Paginated%20ListView%20Demo/src/com/danielme/blog/android/paginatedlistview/activities/AbstractListViewActivity.java", "stars": "74", "class": {"name": "AbstractListViewActivity", "extends": "ListActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "onListItemClick", "params": ["ListView", "View", "int", "long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onListItemClick(ListView l, View v, int position, long id)\t{\t\tToast.makeText(this, getListAdapter().getItem(position) + \" \" + getString(R.string.selected), Toast.LENGTH_SHORT).show();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Paginated%20ListView%20Demo/src/com/danielme/blog/android/paginatedlistview/activities/AbstractListViewActivity.java", "stars": "74", "class": {"name": "AbstractListViewActivity", "extends": "ListActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "load", "params": ["int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean load(int firstVisibleItem, int visibleItemCount, int totalItemCount)\t{\t\tboolean lastItem = firstVisibleItem + visibleItemCount == totalItemCount && getListView().getChildAt(visibleItemCount -1) != null && getListView().getChildAt(visibleItemCount-1).getBottom() <= getListView().getHeight();\t\tboolean moreRows = getListAdapter().getCount() < datasource.getSize();\t\treturn moreRows && lastItem && !loading;\t\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Paginated%20ListView%20Demo/src/com/danielme/blog/android/paginatedlistview/activities/AbstractListViewActivity.java", "stars": "74", "class": {"name": "AbstractListViewActivity", "extends": "ListActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "doInBackground", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "\t\tprotected String doInBackground(String... arg0)\t\t{\t\t\t// para que de tiempo a ver el footer ;)\t\t\ttry\t\t\t{\t\t\t\tThread.sleep(1500);\t\t\t}\t\t\tcatch (InterruptedException e)\t\t\t{\t\t\t\tLog.e(\"AbstractListActivity\", e.getMessage());\t\t\t}\t\t\tnewData = datasource.getData(getListAdapter().getCount(), PAGESIZE);\t\t\treturn null;\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Paginated%20ListView%20Demo/src/com/danielme/blog/android/paginatedlistview/activities/AbstractListViewActivity.java", "stars": "74", "class": {"name": "LoadNextPage", "extends": "AsyncTask", "implements": null, "modifiers": ["protected"]}}, {"method_name": "onPostExecute", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\t\tprotected void onPostExecute(String result)\t\t{\t\t\tCustomArrayAdapter customArrayAdapter = ((CustomArrayAdapter) getListAdapter());\t\t\tfor (String value : newData)\t\t\t{\t\t\t\tcustomArrayAdapter.add(value);\t\t\t}\t\t\tcustomArrayAdapter.notifyDataSetChanged();\t\t\tgetListView().removeFooterView(footerView);\t\t\tupdateDisplayingTextView();\t\t\tloading = false;\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Paginated%20ListView%20Demo/src/com/danielme/blog/android/paginatedlistview/activities/AbstractListViewActivity.java", "stars": "74", "class": {"name": "LoadNextPage", "extends": "AsyncTask", "implements": null, "modifiers": ["protected"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_image_detect);        imgbtn = findViewById(R.id.image);        displayname = findViewById(R.id.displayobjname);        displayconfidence = findViewById(R.id.displayobjpercentage);        displaytextfromimage = findViewById(R.id.displaytextfromimage);        imgbtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                Intent i  = new Intent();                i.setType(\"image/*\");                i.setAction(Intent.ACTION_GET_CONTENT);                startActivityForResult(Intent.createChooser(i,\"Select Images\"),requestcode);            }        });    }", "url": "https://raw.githubusercontent.com/Sarthak-Sethi/Machine-learning-android-app/master/app/src/main/java/com/example/imagelabellingml/ImageDetect.java", "stars": "1", "class": {"name": "ImageDetect", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onActivityResult", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {        super.onActivityResult(requestCode, resultCode, data);        if(requestCode==requestcode){            imgbtn.setImageURI(data.getData());            FirebaseVisionImage image;            try {                image = FirebaseVisionImage.fromFilePath(getApplicationContext(), data.getData());                FirebaseVisionImageLabeler labeler = FirebaseVision.getInstance().getOnDeviceImageLabeler();                FirebaseVisionTextRecognizer textRecognizer = FirebaseVision.getInstance().getOnDeviceTextRecognizer();                labeler.processImage(image).addOnSuccessListener(new OnSuccessListener<List<FirebaseVisionImageLabel>>() {                    @Override                    public void onSuccess(List<FirebaseVisionImageLabel> labels) {                        for (FirebaseVisionImageLabel label: labels) {                            String text = label.getText();                            String entityId = label.getEntityId();                            float confidence = label.getConfidence();                            //percentage                            displayname.setText(text);                            displayconfidence.setText(confidence+\"%\");                        }                    }                })                        .addOnFailureListener(new OnFailureListener() {                            @Override                            public void onFailure(@NonNull Exception e) {                                Toast.makeText(getApplicationContext(),\"Task Failed\",Toast.LENGTH_LONG).show();                            }                        });                textRecognizer.processImage(image)                        .addOnSuccessListener(new OnSuccessListener<FirebaseVisionText>() {                            @Override                            public void onSuccess(FirebaseVisionText result) {                                displaytextfromimage.setText(result.getText());                            }                        })                        .addOnFailureListener(                                new OnFailureListener() {                                    @Override                                    public void onFailure(@NonNull Exception e) {                                        Toast.makeText(getApplicationContext(),\"Task Failed\",Toast.LENGTH_LONG).show();                                    }                                });            } catch (IOException e) {                e.printStackTrace();            }        }    }", "url": "https://raw.githubusercontent.com/Sarthak-Sethi/Machine-learning-android-app/master/app/src/main/java/com/example/imagelabellingml/ImageDetect.java", "stars": "1", "class": {"name": "ImageDetect", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onUpdate", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {        if (Mercury.INSTANCE.getModuleManager().find(Scaffold.class).isEnabled() && !Scaffold.sprint) {            mc.player.setSprinting(false);            return;        }        if (Mercury.INSTANCE.getModuleManager().find(Scaffold.class).isEnabled() && mc.gameSettings.keyBindSneak.isKeyDown() && Scaffold.down) {            mc.player.setSprinting(false);            return;        }        if (mc.player.getFoodStats().getFoodLevel() > 6 && omni ? (mc.player.moveForward != 0 || mc.player.moveStrafing != 0) : mc.player.moveForward > 0)            mc.player.setSprinting(true);    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Sprint.java", "stars": "12", "class": {"name": "Sprint", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "onJump", "params": ["JumpEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onJump(JumpEvent event) {        if (omni) {            double[] dir = MotionUtil.forward(0.017453292F);            event.getLocation().setX(dir[0] * 0.2f);            event.getLocation().setZ(dir[1] * 0.2f);        }    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/Sprint.java", "stars": "12", "class": {"name": "Sprint", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "transformToDominant", "params": ["int", "boolean", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean transformToDominant(int r, boolean[] visited, int[] rows) {        int matrixLength = matrix.length;        if (r == matrix.length) {            double[][] newMatrix = new double[matrixLength][matrixLength + 1];            for (int i = 0; i < rows.length; i++) {                if (matrixLength + 1 >= 0)                    System.arraycopy(matrix[rows[i]], 0, newMatrix[i], 0, matrixLength + 1);            }            matrix = newMatrix;            return true;        }        for (int y = 0; y < matrixLength; y++) {            if (visited[y])                continue;            double sum = 0;            for (int x = 0; x < matrixLength - 1; x++)                if (x != r)                    sum += Math.abs(matrix[y][x]);            if (Math.abs(matrix[y][r]) > sum) { // diagonally dominant?                visited[y] = true;                rows[r] = y;                if (transformToDominant(r + 1, visited, rows))                    return true;                visited[y] = false;            }        }        return false;    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/GaussSeidel.java", "stars": "2", "class": {"name": "GaussSeidel", "extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"method_name": "makeDominant", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean makeDominant() {        boolean[] visited = new boolean[matrix.length];        int[] rows = new int[matrix.length];        Arrays.fill(visited, false);        return transformToDominant(0, visited, rows);    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/GaussSeidel.java", "stars": "2", "class": {"name": "GaussSeidel", "extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"method_name": "solve", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Answer", "snippet": "    public Answer solve() {        int iterations = 0;        int n = matrix.length;        double[] X = new double[n];        double[] P = new double[n];        Arrays.fill(X, 0);        final Answer answer;        final List<Answer.Iteration> iterationNodes = new ArrayList<>();        while (true) {            for (int i = 0; i < n; i++) {                double sum = matrix[i][n]; // b_n                for (int j = 0; j < n; j++)                    if (j != i)                        sum -= matrix[i][j] * X[j];                // Update x_i to use in the next row calculation                X[i] = 1 / matrix[i][i] * sum;            }            var iterationValues = new double[n];            System.arraycopy(X, 0, iterationValues, 0, n);            iterationNodes.add(new Answer.Iteration(iterations, iterationValues));            iterations++;            if (iterations == 1)                continue;            boolean stop = true;            for (int i = 0; i < n; i++)                if (Math.abs(X[i] - P[i]) > epsilon) {                    stop = false;                    break;                }            if (stop || (iterations == maxIterations)) {                answer = new Answer(iterationNodes, !stop);                break;            }            P = X.clone();        }        return answer;    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/GaussSeidel.java", "stars": "2", "class": {"name": "GaussSeidel", "extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"method_name": "getMatrix", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double[][] getMatrix() {        return matrix;    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/GaussSeidel.java", "stars": "2", "class": {"name": "GaussSeidel", "extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"method_name": "getName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {        return \"\u041c\u0435\u0442\u043e\u0434 \u0417\u0435\u0439\u0434\u0435\u043b\u044f\";    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab2/master/src/main/java/com/demkom58/nmlab2/calculations/GaussSeidel.java", "stars": "2", "class": {"name": "GaussSeidel", "extends": null, "implements": ["EquationSystemSolver"], "modifiers": ["public"]}}, {"method_name": "getPlayerPreparedSuccessListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IPlayerInitSuccessListener", "snippet": "    public IPlayerInitSuccessListener getPlayerPreparedSuccessListener() {        return mPlayerInitSuccessListener;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/BasePlayerManager.java", "stars": "2", "class": {"name": "BasePlayerManager", "extends": null, "implements": ["IPlayerManager"], "modifiers": ["public", "abstract"]}}, {"method_name": "setPlayerInitSuccessListener", "params": ["IPlayerInitSuccessListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPlayerInitSuccessListener(IPlayerInitSuccessListener listener) {        this.mPlayerInitSuccessListener = listener;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/BasePlayerManager.java", "stars": "2", "class": {"name": "BasePlayerManager", "extends": null, "implements": ["IPlayerManager"], "modifiers": ["public", "abstract"]}}, {"method_name": "initSuccess", "params": ["GSYModel"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initSuccess(GSYModel gsyModel) {        if (mPlayerInitSuccessListener != null) {            mPlayerInitSuccessListener.onPlayerInitSuccess(getMediaPlayer(), gsyModel);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/BasePlayerManager.java", "stars": "2", "class": {"name": "BasePlayerManager", "extends": null, "implements": ["IPlayerManager"], "modifiers": ["public", "abstract"]}}, {"method_name": "initElements", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\t\telements.blocks.add(() -> new BlockCustomFlower());\t\telements.items.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.DECORATIONS)).setRegistryName(block.getRegistryName()));\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/YellowAmaranthBlock.java", "stars": "2", "class": {"name": "YellowAmaranthBlock", "extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"method_name": "clientLoad", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/YellowAmaranthBlock.java", "stars": "2", "class": {"name": "YellowAmaranthBlock", "extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\t\tFeature<BlockClusterFeatureConfig> feature = new Feature<BlockClusterFeatureConfig>(BlockClusterFeatureConfig::func_227300_a_) {\t\t\t@Override\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random random, BlockPos pos, BlockClusterFeatureConfig config) {\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\t\t\t\tboolean dimensionCriteria = false;\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\t\t\t\t\tdimensionCriteria = true;\t\t\t\tif (!dimensionCriteria)\t\t\t\t\treturn false;\t\t\t\tint generated = 0;\t\t\t\tfor (int j = 0; j < 1; ++j) {\t\t\t\t\tBlockPos blockpos = pos.add(random.nextInt(4) - random.nextInt(4), 0, random.nextInt(4) - random.nextInt(4));\t\t\t\t\tif (world.isAirBlock(blockpos)) {\t\t\t\t\t\tBlockPos blockpos1 = blockpos.down();\t\t\t\t\t\tint k = 1 + random.nextInt(random.nextInt(3) + 1);\t\t\t\t\t\tk = Math.min(3, k);\t\t\t\t\t\tfor (int l = 0; l < k; ++l) {\t\t\t\t\t\t\tif (block.getDefaultState().isValidPosition(world, blockpos)) {\t\t\t\t\t\t\t\tworld.setBlockState(blockpos.up(l), block.getDefaultState(), 2);\t\t\t\t\t\t\t\tgenerated++;\t\t\t\t\t\t\t}\t\t\t\t\t\t}\t\t\t\t\t}\t\t\t\t}\t\t\t\treturn generated > 0;\t\t\t}\t\t};\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\t\t\tboolean biomeCriteria = false;\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"jungle\")))\t\t\t\tbiomeCriteria = true;\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"jungle_hills\")))\t\t\t\tbiomeCriteria = true;\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"jungle_edge\")))\t\t\t\tbiomeCriteria = true;\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"modified_jungle\")))\t\t\t\tbiomeCriteria = true;\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"modified_jungle_edge\")))\t\t\t\tbiomeCriteria = true;\t\t\tif (!biomeCriteria)\t\t\t\tcontinue;\t\t\tbiome.addFeature(GenerationStage.Decoration.VEGETAL_DECORATION,\t\t\t\t\tfeature.withConfiguration(\t\t\t\t\t\t\t(new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(block.getDefaultState()), new SimpleBlockPlacer()))\t\t\t\t\t\t\t\t\t.tries(64).build())\t\t\t\t\t\t\t.withPlacement(Placement.COUNT_HEIGHTMAP_DOUBLE.configure(new FrequencyConfig(1))));\t\t}\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/YellowAmaranthBlock.java", "stars": "2", "class": {"name": "YellowAmaranthBlock", "extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"method_name": "getPickBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\t\t\treturn new ItemStack(YellowAmaranthBlock.block, (int) (1));\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/YellowAmaranthBlock.java", "stars": "2", "class": {"name": "BlockCustomFlower", "extends": "SugarCaneBlock", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getDrops", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\t\t\tif (!dropsOriginal.isEmpty())\t\t\t\treturn dropsOriginal;\t\t\treturn Collections.singletonList(new ItemStack(YellowAmaranthBlock.block, (int) (1)));\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/YellowAmaranthBlock.java", "stars": "2", "class": {"name": "BlockCustomFlower", "extends": "SugarCaneBlock", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getPlantType", "params": ["IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "PlantType", "snippet": "\t\tpublic PlantType getPlantType(IBlockReader world, BlockPos pos) {\t\t\treturn PlantType.Plains;\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/YellowAmaranthBlock.java", "stars": "2", "class": {"name": "BlockCustomFlower", "extends": "SugarCaneBlock", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "tick", "params": ["BlockState", "ServerWorld", "BlockPos", "Random"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void tick(BlockState state, ServerWorld world, BlockPos pos, Random random) {\t\t\tif (!state.isValidPosition(world, pos)) {\t\t\t\tworld.destroyBlock(pos, true);\t\t\t} else if (world.isAirBlock(pos.up())) {\t\t\t\tint i = 1;\t\t\t\tfor (; world.getBlockState(pos.down(i)).getBlock() == this; ++i);\t\t\t\tif (i < 3) {\t\t\t\t\tint j = state.get(AGE);\t\t\t\t\tif (j == 15) {\t\t\t\t\t\tworld.setBlockState(pos.up(), getDefaultState());\t\t\t\t\t\tworld.setBlockState(pos, state.with(AGE, 0), 4);\t\t\t\t\t} else {\t\t\t\t\t\tworld.setBlockState(pos, state.with(AGE, j + 1), 4);\t\t\t\t\t}\t\t\t\t}\t\t\t}\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/YellowAmaranthBlock.java", "stars": "2", "class": {"name": "BlockCustomFlower", "extends": "SugarCaneBlock", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "formatDate", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatDate(final long timeMS) {    if (timeMS == -1) {      return \"-\";    }    return DateTimeFormat.forPattern(DATE_TIME_STRING).print(timeMS);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "currentTimestamp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long currentTimestamp() {    return System.currentTimeMillis();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatDuration", "params": ["long", "long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatDuration(final long startTime, final long endTime) {    if (startTime == -1) {      return \"-\";    }    final long durationMS;    if (endTime == -1) {      durationMS = System.currentTimeMillis() - startTime;    } else {      durationMS = endTime - startTime;    }    long seconds = durationMS / 1000;    if (seconds < 60) {      return seconds + \" sec\";    }    long minutes = seconds / 60;    seconds %= 60;    if (minutes < 60) {      return minutes + \"m \" + seconds + \"s\";    }    long hours = minutes / 60;    minutes %= 60;    if (hours < 24) {      return hours + \"h \" + minutes + \"m \" + seconds + \"s\";    }    final long days = hours / 24;    hours %= 24;    return days + \"d \" + hours + \"h \" + minutes + \"m\";  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatStatus", "params": ["Status"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatStatus(final Status status) {    switch (status) {      case SUCCEEDED:        return \"Success\";      case FAILED:        return \"Failed\";      case RUNNING:        return \"Running\";      case DISABLED:        return \"Disabled\";      case KILLED:        return \"Killed\";      case FAILED_FINISHING:        return \"Running w/Failure\";      case PREPARING:        return \"Preparing\";      case READY:        return \"Ready\";      case PAUSED:        return \"Paused\";      case SKIPPED:        return \"Skipped\";      case KILLING:        return \"Killing\";      default:    }    return \"Unknown\";  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatDateTime", "params": ["DateTime"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatDateTime(final DateTime dt) {    return DateTimeFormat.forPattern(DATE_TIME_STRING).print(dt);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatDateTime", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatDateTime(final long timestamp) {    return formatDateTime(new DateTime(timestamp));  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatPeriod", "params": ["ReadablePeriod"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatPeriod(final ReadablePeriod period) {    String periodStr = \"null\";    if (period == null) {      return periodStr;    }    if (period.get(DurationFieldType.years()) > 0) {      final int years = period.get(DurationFieldType.years());      periodStr = years + \" year(s)\";    } else if (period.get(DurationFieldType.months()) > 0) {      final int months = period.get(DurationFieldType.months());      periodStr = months + \" month(s)\";    } else if (period.get(DurationFieldType.weeks()) > 0) {      final int weeks = period.get(DurationFieldType.weeks());      periodStr = weeks + \" week(s)\";    } else if (period.get(DurationFieldType.days()) > 0) {      final int days = period.get(DurationFieldType.days());      periodStr = days + \" day(s)\";    } else if (period.get(DurationFieldType.hours()) > 0) {      final int hours = period.get(DurationFieldType.hours());      periodStr = hours + \" hour(s)\";    } else if (period.get(DurationFieldType.minutes()) > 0) {      final int minutes = period.get(DurationFieldType.minutes());      periodStr = minutes + \" minute(s)\";    } else if (period.get(DurationFieldType.seconds()) > 0) {      final int seconds = period.get(DurationFieldType.seconds());      periodStr = seconds + \" second(s)\";    }    return periodStr;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "extractNumericalId", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String extractNumericalId(final String execId) {    final int index = execId.indexOf('.');    final int index2 = execId.indexOf('.', index + 1);    return execId.substring(0, index2);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "displayBytes", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String displayBytes(final long sizeBytes) {    final NumberFormat nf = NumberFormat.getInstance();    nf.setMaximumFractionDigits(2);    if (sizeBytes >= ONE_TB) {      return nf.format(sizeBytes / (double) ONE_TB) + \" tb\";    } else if (sizeBytes >= ONE_GB) {      return nf.format(sizeBytes / (double) ONE_GB) + \" gb\";    } else if (sizeBytes >= ONE_MB) {      return nf.format(sizeBytes / (double) ONE_MB) + \" mb\";    } else if (sizeBytes >= ONE_KB) {      return nf.format(sizeBytes / (double) ONE_KB) + \" kb\";    } else {      return sizeBytes + \" B\";    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getRealClientIpAddr", "params": ["Map<String,String>", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getRealClientIpAddr(final Map<String, String> httpHeaders,      final String remoteAddr) {    // If some upstream device added an X-Forwarded-For header    // use it for the client ip    // This will support scenarios where load balancers or gateways    // front the Azkaban web server and a changing Ip address invalidates    // the session    String clientIp = httpHeaders.getOrDefault(X_FORWARDED_FOR_HEADER, null);    if (clientIp == null) {      clientIp = remoteAddr;    } else {      // header can contain comma separated list of upstream servers - get the first one      final String[] ips = clientIp.split(\",\");      clientIp = ips[0];    }    // Strip off port and only get IP address    final String[] parts = clientIp.split(\":\");    clientIp = parts[0];    return clientIp;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isFinished", "params": ["Status"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean isFinished(final Status status) {    return Status.isStatusFinished(status);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatRunDate", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatRunDate(final long timeMS) {    if (timeMS == -1) {      return \"-\";    }    if((timeMS+\"\").length()==8){      return timeMS+\"\";    }    return DateTimeFormat.forPattern(RUN_DATE_FORMATE).print(timeMS);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isNotNull", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "  public Boolean isNotNull(final Object object){    if(null == object){      return false;    }else {      return true;    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatHistoryDateTime", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String formatHistoryDateTime(final long timestamp) {    if(-1 == timestamp){      return \"-\";    } else {      return formatDateTime(new DateTime(timestamp));    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatDurationTime", "params": ["long", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "  public static long formatDurationTime(final long startTime, final long endTime) {    final long durationMS;    if (endTime == -1) {      durationMS = DateTime.now().getMillis() - startTime;    } else {      durationMS = endTime - startTime;    }    return durationMS;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getNextCronRuntime", "params": ["long", "DateTimeZone", "CronExpression"], "throws": null, "modifiers": ["public", "static"], "return_type": "DateTime", "snippet": "  public static DateTime getNextCronRuntime(final long scheduleTime, final DateTimeZone timezone,      final CronExpression ce) {    Date date = new DateTime(scheduleTime).withZone(timezone).toDate();    if (ce != null) {      date = ce.getNextValidTimeAfter(date);    }    return new DateTime(date);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/WebUtils.java", "stars": "18", "class": {"name": "WebUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\tQuickSort qs = new QuickSort();\t\tint arr[] = {1,76,4,2,22};\t\tqs.sort(arr, 0, 4);\t\t\t\tfor(int  i = 0;i< arr.length;i++) {\t\t\tSystem.out.println(arr[i]);\t\t}\t}", "url": "https://raw.githubusercontent.com/likith22/DataStructures/master/TestQuickSort.java", "stars": "2", "class": {"name": "TestQuickSort", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        List<Emp> list = new JdbcDemo8().findAll2();        System.out.println(list);        System.out.println(list.size());    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JdbcDemo8.java", "stars": "2", "class": {"name": "JdbcDemo8", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findAll", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Emp>", "snippet": "    public List<Emp> findAll(){        ResultSet rs = null;        Connection conn = null;        Statement stmt = null;        ArrayList<Emp> list = null;        try {            //1\u3001\u6ce8\u518c\u9a71\u52a8            Class.forName(\"com.mysql.cj.jdbc.Driver\");            //2\u3001\u83b7\u53d6\u8fde\u63a5            conn = DriverManager.getConnection(\"jdbc:mysql:///db1\", \"root\", \"\");            //3\u3001\u5b9a\u4e49sql            String sql = \"select * from emp\";            //4\u3001\u83b7\u53d6\u6267\u884csql\u7684\u5bf9\u8c61            stmt = conn.createStatement();            //5\u3001\u6267\u884csql            rs = stmt.executeQuery(sql);            Emp emp = null;            list = new ArrayList<>();            //6\u3001\u904d\u5386\u7ed3\u679c\u96c6\uff0c\u5c01\u88c5\u5bf9\u8c61\uff0c\u88c5\u8f7d\u96c6\u5408            while (rs.next()){                //\u83b7\u53d6\u6570\u636e                int id = rs.getInt(\"id\");                String admin_login = rs.getString(\"admin_login\");                int last_login_time = rs.getInt(\"last_login_time\");                int status = rs.getInt(\"status\");                Date deleted_at = rs.getDate(\"deleted_at\");                String last_login_ip = rs.getString(\"last_login_ip\");                //\u521b\u5efaemp\u5bf9\u8c61                emp = new Emp();                emp.setId(id);                emp.setAdmin_login(admin_login);                emp.setLast_login_time(last_login_time);                emp.setStatus(status);                emp.setDeleted_at(deleted_at);                emp.setLast_login_ip(last_login_ip);                //\u88c5\u8f7d\u96c6\u5408                list.add(emp);            }        } catch (ClassNotFoundException e) {            e.printStackTrace();        } catch (SQLException throwables) {            throwables.printStackTrace();        } finally {            if(rs != null){                try {                    rs.close();                } catch (SQLException throwables) {                    throwables.printStackTrace();                }            }            if(stmt != null){                try {                    stmt.close();                } catch (SQLException throwables) {                    throwables.printStackTrace();                }            }            if(conn != null){                try {                    conn.close();                } catch (SQLException throwables) {                    throwables.printStackTrace();                }            }        }        return list;    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JdbcDemo8.java", "stars": "2", "class": {"name": "JdbcDemo8", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findAll2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Emp>", "snippet": "    public List<Emp> findAll2(){        ResultSet rs = null;        Connection conn = null;        Statement stmt = null;        ArrayList<Emp> list = null;        try {//            //1\u3001\u6ce8\u518c\u9a71\u52a8//            Class.forName(\"com.mysql.cj.jdbc.Driver\");//            //2\u3001\u83b7\u53d6\u8fde\u63a5//            conn = DriverManager.getConnection(\"jdbc:mysql:///db1\", \"root\", \"\");            conn = JDBCUtils.getConnection();            //3\u3001\u5b9a\u4e49sql            String sql = \"select * from emp\";            //4\u3001\u83b7\u53d6\u6267\u884csql\u7684\u5bf9\u8c61            stmt = conn.createStatement();            //5\u3001\u6267\u884csql            rs = stmt.executeQuery(sql);            Emp emp = null;            list = new ArrayList<>();            //6\u3001\u904d\u5386\u7ed3\u679c\u96c6\uff0c\u5c01\u88c5\u5bf9\u8c61\uff0c\u88c5\u8f7d\u96c6\u5408            while (rs.next()){                //\u83b7\u53d6\u6570\u636e                int id = rs.getInt(\"id\");                String admin_login = rs.getString(\"admin_login\");                int last_login_time = rs.getInt(\"last_login_time\");                int status = rs.getInt(\"status\");                Date deleted_at = rs.getDate(\"deleted_at\");                String last_login_ip = rs.getString(\"last_login_ip\");                //\u521b\u5efaemp\u5bf9\u8c61                emp = new Emp();                emp.setId(id);                emp.setAdmin_login(admin_login);                emp.setLast_login_time(last_login_time);                emp.setStatus(status);                emp.setDeleted_at(deleted_at);                emp.setLast_login_ip(last_login_ip);                //\u88c5\u8f7d\u96c6\u5408                list.add(emp);            }        } catch (SQLException throwables) {            throwables.printStackTrace();        } finally {//            if(rs != null){//                try {//                    rs.close();//                } catch (SQLException throwables) {//                    throwables.printStackTrace();//                }//            }////            if(stmt != null){//                try {//                    stmt.close();//                } catch (SQLException throwables) {//                    throwables.printStackTrace();//                }//            }////            if(conn != null){//                try {//                    conn.close();//                } catch (SQLException throwables) {//                    throwables.printStackTrace();//                }//            }            JDBCUtils.close(rs, stmt, conn);        }        return list;    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JdbcDemo8.java", "stars": "2", "class": {"name": "JdbcDemo8", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "aceita", "params": ["TipoPagamento"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean aceita(TipoPagamento tipoPagamento) {\t\treturn this.tiposPagamento.contains(tipoPagamento);\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/Restaurante.java", "stars": "9", "class": {"name": "Restaurante", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "evaluate", "params": ["Record", "Map<String,Object>", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Record", "snippet": "    public Record evaluate(Record record, Map<String, Object> tContext, Object... paras) {        return this.realTransformer.evaluate(record, paras);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/ComplexTransformerProxy.java", "stars": "23", "class": {"name": "ComplexTransformerProxy", "extends": "ComplexTransformer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getRealTransformer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Transformer", "snippet": "    public Transformer getRealTransformer() {        return realTransformer;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/transformer/ComplexTransformerProxy.java", "stars": "23", "class": {"name": "ComplexTransformerProxy", "extends": "ComplexTransformer", "implements": null, "modifiers": ["public"]}}, {"method_name": "setup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {        customAuditEventRepository = new CustomAuditEventRepository(persistenceAuditEventRepository, auditEventConverter);        persistenceAuditEventRepository.deleteAll();        Instant oneHourAgo = Instant.now().minusSeconds(3600);        testUserEvent = new PersistentAuditEvent();        testUserEvent.setPrincipal(\"test-user\");        testUserEvent.setAuditEventType(\"test-type\");        testUserEvent.setAuditEventDate(oneHourAgo);        Map<String, String> data = new HashMap<>();        data.put(\"test-key\", \"test-value\");        testUserEvent.setData(data);        testOldUserEvent = new PersistentAuditEvent();        testOldUserEvent.setPrincipal(\"test-user\");        testOldUserEvent.setAuditEventType(\"test-type\");        testOldUserEvent.setAuditEventDate(oneHourAgo.minusSeconds(10000));        testOtherUserEvent = new PersistentAuditEvent();        testOtherUserEvent.setPrincipal(\"other-test-user\");        testOtherUserEvent.setAuditEventType(\"test-type\");        testOtherUserEvent.setAuditEventDate(oneHourAgo);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/repository/CustomAuditEventRepositoryIT.java", "stars": "2", "class": {"name": "CustomAuditEventRepositoryIT", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addAuditEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAuditEvent() {        Map<String, Object> data = new HashMap<>();        data.put(\"test-key\", \"test-value\");        AuditEvent event = new AuditEvent(\"test-user\", \"test-type\", data);        customAuditEventRepository.add(event);        List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();        assertThat(persistentAuditEvents).hasSize(1);        PersistentAuditEvent persistentAuditEvent = persistentAuditEvents.get(0);        assertThat(persistentAuditEvent.getPrincipal()).isEqualTo(event.getPrincipal());        assertThat(persistentAuditEvent.getAuditEventType()).isEqualTo(event.getType());        assertThat(persistentAuditEvent.getData()).containsKey(\"test-key\");        assertThat(persistentAuditEvent.getData().get(\"test-key\")).isEqualTo(\"test-value\");        assertThat(persistentAuditEvent.getAuditEventDate().truncatedTo(ChronoUnit.MILLIS))            .isEqualTo(event.getTimestamp().truncatedTo(ChronoUnit.MILLIS));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/repository/CustomAuditEventRepositoryIT.java", "stars": "2", "class": {"name": "CustomAuditEventRepositoryIT", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addAuditEventTruncateLargeData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAuditEventTruncateLargeData() {        Map<String, Object> data = new HashMap<>();        StringBuilder largeData = new StringBuilder();        for (int i = 0; i < EVENT_DATA_COLUMN_MAX_LENGTH + 10; i++) {            largeData.append(\"a\");        }        data.put(\"test-key\", largeData);        AuditEvent event = new AuditEvent(\"test-user\", \"test-type\", data);        customAuditEventRepository.add(event);        List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();        assertThat(persistentAuditEvents).hasSize(1);        PersistentAuditEvent persistentAuditEvent = persistentAuditEvents.get(0);        assertThat(persistentAuditEvent.getPrincipal()).isEqualTo(event.getPrincipal());        assertThat(persistentAuditEvent.getAuditEventType()).isEqualTo(event.getType());        assertThat(persistentAuditEvent.getData()).containsKey(\"test-key\");        String actualData = persistentAuditEvent.getData().get(\"test-key\");        assertThat(actualData.length()).isEqualTo(EVENT_DATA_COLUMN_MAX_LENGTH);        assertThat(actualData).isSubstringOf(largeData);        assertThat(persistentAuditEvent.getAuditEventDate().truncatedTo(ChronoUnit.MILLIS))            .isEqualTo(event.getTimestamp().truncatedTo(ChronoUnit.MILLIS));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/repository/CustomAuditEventRepositoryIT.java", "stars": "2", "class": {"name": "CustomAuditEventRepositoryIT", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testAddEventWithWebAuthenticationDetails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAddEventWithWebAuthenticationDetails() {        HttpSession session = new MockHttpSession(null, \"test-session-id\");        MockHttpServletRequest request = new MockHttpServletRequest();        request.setSession(session);        request.setRemoteAddr(\"1.2.3.4\");        WebAuthenticationDetails details = new WebAuthenticationDetails(request);        Map<String, Object> data = new HashMap<>();        data.put(\"test-key\", details);        AuditEvent event = new AuditEvent(\"test-user\", \"test-type\", data);        customAuditEventRepository.add(event);        List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();        assertThat(persistentAuditEvents).hasSize(1);        PersistentAuditEvent persistentAuditEvent = persistentAuditEvents.get(0);        assertThat(persistentAuditEvent.getData().get(\"remoteAddress\")).isEqualTo(\"1.2.3.4\");        assertThat(persistentAuditEvent.getData().get(\"sessionId\")).isEqualTo(\"test-session-id\");    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/repository/CustomAuditEventRepositoryIT.java", "stars": "2", "class": {"name": "CustomAuditEventRepositoryIT", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testAddEventWithNullData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testAddEventWithNullData() {        Map<String, Object> data = new HashMap<>();        data.put(\"test-key\", null);        AuditEvent event = new AuditEvent(\"test-user\", \"test-type\", data);        customAuditEventRepository.add(event);        List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();        assertThat(persistentAuditEvents).hasSize(1);        PersistentAuditEvent persistentAuditEvent = persistentAuditEvents.get(0);        assertThat(persistentAuditEvent.getData().get(\"test-key\")).isEqualTo(\"null\");    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/repository/CustomAuditEventRepositoryIT.java", "stars": "2", "class": {"name": "CustomAuditEventRepositoryIT", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addAuditEventWithAnonymousUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAuditEventWithAnonymousUser() {        Map<String, Object> data = new HashMap<>();        data.put(\"test-key\", \"test-value\");        AuditEvent event = new AuditEvent(Constants.ANONYMOUS_USER, \"test-type\", data);        customAuditEventRepository.add(event);        List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();        assertThat(persistentAuditEvents).hasSize(0);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/repository/CustomAuditEventRepositoryIT.java", "stars": "2", "class": {"name": "CustomAuditEventRepositoryIT", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addAuditEventWithAuthorizationFailureType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAuditEventWithAuthorizationFailureType() {        Map<String, Object> data = new HashMap<>();        data.put(\"test-key\", \"test-value\");        AuditEvent event = new AuditEvent(\"test-user\", \"AUTHORIZATION_FAILURE\", data);        customAuditEventRepository.add(event);        List<PersistentAuditEvent> persistentAuditEvents = persistenceAuditEventRepository.findAll();        assertThat(persistentAuditEvents).hasSize(0);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/repository/CustomAuditEventRepositoryIT.java", "stars": "2", "class": {"name": "CustomAuditEventRepositoryIT", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "enqueue", "params": ["Subscription", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void enqueue(Subscription subscription, Object event) {        PendingPost pendingPost = PendingPost.obtainPendingPost(subscription, event);        synchronized (this) {            queue.enqueue(pendingPost);            if (!executorRunning) {                executorRunning = true;                eventBus.getExecutorService().execute(this);            }        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/BackgroundPoster.java", "stars": "7", "class": {"name": "BackgroundPoster", "extends": null, "implements": ["Runnable", "Poster"], "modifiers": ["final"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {        try {            try {                while (true) {                    PendingPost pendingPost = queue.poll(1000);                    if (pendingPost == null) {                        synchronized (this) {                            // Check again, this time in synchronized                            pendingPost = queue.poll();                            if (pendingPost == null) {                                executorRunning = false;                                return;                            }                        }                    }                    eventBus.invokeSubscriber(pendingPost);                }            } catch (InterruptedException e) {                eventBus.getLogger().log(Level.WARNING, Thread.currentThread().getName() + \" was interruppted\", e);            }        } finally {            executorRunning = false;        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/BackgroundPoster.java", "stars": "7", "class": {"name": "BackgroundPoster", "extends": null, "implements": ["Runnable", "Poster"], "modifiers": ["final"]}}, {"method_name": "onPacket", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {        if (event.getType().equals(PacketEvent.Type.INCOMING)) {            if (event.getPacket() instanceof SPacketEntityStatus) {                SPacketEntityStatus packet = (SPacketEntityStatus) event.getPacket();                //ChatUtil.print(packet.getOpCode() + \"\");                if (packet.getOpCode() == 35) {                    int popCounter;                    int newPopCounter;                    entity = packet.getEntity(mc.world);                    if (entity != mc.player && mc.player.getDistance(entity) <= range) {                        if (!popList.containsKey(entity.getName())) {                            ChatUtil.print(ChatFormatting.RED + entity.getName() + ChatFormatting.WHITE + \" has popped 1 totem!\");                            popList.put(entity.getName(), 1);                        } else {                            popCounter = this.popList.get(entity.getName());                            newPopCounter = ++popCounter;                            popList.put(entity.getName(), newPopCounter);                            ChatUtil.print(ChatFormatting.RED + entity.getName() + ChatFormatting.WHITE + \" has popped \" + newPopCounter + \" totems!\");                        }                    }                }            }        }    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/TotemDetector.java", "stars": "12", "class": {"name": "TotemDetector", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "onUpdate", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {        if (Objects.isNull(mc.world) || Objects.isNull(mc.player) || Objects.isNull(mc.world.playerEntities))            return;        mc.world.playerEntities.forEach(e -> {            if (Objects.isNull(entity))                return;            if (e.getName().equals(this.entity.getName()) && (entity.isDead)) {                popList.remove(this.entity.getName());            }        });    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/TotemDetector.java", "stars": "12", "class": {"name": "TotemDetector", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        SpringApplication.run(DemoApplication.class, args);    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/main/java/com/example/demo/DemoApplication.java", "stars": "2", "class": {"name": "DemoApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "localeResolver", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LocaleResolver", "snippet": "    public LocaleResolver localeResolver(){        CookieLocaleResolver resolver = new CookieLocaleResolver();        resolver.setDefaultLocale(new Locale(\"en\")); // your default locale        return resolver;    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/main/java/com/example/demo/DemoApplication.java", "stars": "2", "class": {"name": "DemoApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "deallocate", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void deallocate() {\t\tfor (int i=0; i<nIntervals; i++) bwtIntervals[i]=null;\t\tbwtIntervals=null;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "clone", "params": ["Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void clone(Substring other) {\t\tother.nIntervals=nIntervals;\t\tfor (int i=0; i<nIntervals; i++) {\t\t\tother.bwtIntervals[i][0]=bwtIntervals[i][0];\t\t\tother.bwtIntervals[i][1]=bwtIntervals[i][1];\t\t}\t\tother.address=-1;  // Cloning the address of this string is potentially wrong in multithreading\t\tother.log2address=-1;\t\tother.previousAddress=-1;\t\tother.length=length;\t\tother.log2length=log2length;\t\tother.bitsToEncodeLength=bitsToEncodeLength;\t\tother.firstCharacter=firstCharacter;\t\tother.hasBeenExtended=hasBeenExtended;\t\tother.hasBeenStolen=hasBeenStolen;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "equals", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean equals(Object other) {\t\tint i;\t\tSubstring otherSubstring = (Substring)other;\t\tif (nIntervals!=otherSubstring.nIntervals) return false;\t\tfor (i=0; i<nIntervals; i++) {\t\t\tif (bwtIntervals[i][0]!=otherSubstring.bwtIntervals[i][0] || bwtIntervals[i][1]!=otherSubstring.bwtIntervals[i][1]) return false;\t\t}\t\t// We don't compare $address$ and $previousAddress$, since they are not portable.\t\tif (length!=otherSubstring.length) return false;\t\tif (firstCharacter!=otherSubstring.firstCharacter) return false;\t\t// We don't compare $hasBeenExtended$ and $hasBeenStolen$, since they are\t\t// temporary flags.\t\treturn true;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getInstance", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getInstance() {\t\treturn new Substring(alphabetLength,log2alphabetLength,bitsToEncodeAlphabetLength,bwtLength,log2BWTLength,bitsToEncodeBWTLength);\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getEpsilon", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getEpsilon(long[] C) {\t\tSubstring out = getInstance();\t\tout.nIntervals=1;\t\tout.bwtIntervals[0][0]=0;\t\tout.bwtIntervals[0][1]=bwtLength-1;\t\tout.address=-1;\t\tout.log2address=-1;\t\tout.previousAddress=-1;\t\tout.length=0;\t\tout.log2length=-1;\t\tout.bitsToEncodeLength=1;\t\tout.firstCharacter=-1;\t\tout.hasBeenExtended=false;\t\tout.hasBeenStolen=false;\t\treturn out;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSequence", "params": ["RigidStream", "IntArray"], "throws": null, "modifiers": ["public", "final"], "return_type": "boolean", "snippet": "\tpublic final boolean getSequence(RigidStream characterStack, IntArray sequence) {\t\tboolean out = false;\t\tsequence.clear();\t\tif (length==0) return false;\t\tif (firstCharacter==-1) out=true;\t\telse sequence.push(firstCharacter);\t\tfor (long i=length-2; i>=0; i--) sequence.push(characterStack.getElementAt(i));\t\treturn out;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\t\tString out = \"[\"+(hasBeenExtended?\"*\":\"\")+(hasBeenStolen?\"o\":\"\")+\"] address=\"+address+\t\t\t\t     \" previousAddress=\"+previousAddress+\t\t\t\t     \" length=\"+length+\t\t\t\t     \" firstCharacter=\"+firstCharacter+\t\t\t\t     \" nIntervals=\"+nIntervals+\t\t\t\t     \" intervals: \";\t\tfor (int i=0; i<nIntervals; i++) out+=\"[\"+bwtIntervals[i][0]+\"..\"+bwtIntervals[i][1]+\"] \";\t\treturn out;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "initAfterExtending", "params": ["Substring", "int", "RigidStream", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void initAfterExtending(Substring suffix, int firstCharacter, RigidStream characterStack, int[] buffer) {\t\taddress=-1;\t\tlog2address=-1;\t\tpreviousAddress=-1;\t\tlength=suffix.length+1;\t\tlog2length=length==0?-1:Utils.log2(length);\t\tbitsToEncodeLength=length==0?1:Utils.bitsToEncode(length);\t\tthis.firstCharacter=firstCharacter;\t\thasBeenExtended=false;\t\thasBeenStolen=false;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "initAfterReading", "params": ["Stream", "RigidStream", "SimpleStream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void initAfterReading(Stream stack, RigidStream characterStack, SimpleStream pointerStack, Substring[] cache) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "fillBuffer", "params": ["int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void fillBuffer(int[] buffer, boolean flag) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "emptyBuffer", "params": ["int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void emptyBuffer(int[] buffer, boolean flag) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldBeExtendedLeft", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean shouldBeExtendedLeft() {\t\treturn firstCharacter>-1;  // Not extending to the left substrings that start by $#$\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "visited", "params": ["Stream", "RigidStream", "SimpleStream", "Substring", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void visited(Stream stack, RigidStream characterStack, SimpleStream pointerStack, Substring[] cache, Substring[] leftExtensions) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "frequency", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "long", "snippet": "\tprotected long frequency() {\t\t// We assume that the rest of the code is correct and that $bwtIntervals[0][0]$\t\t// and $bwtIntervals[0][1]$ are valid.\t\treturn bwtIntervals[0][1]>=bwtIntervals[0][0]?bwtIntervals[0][1]-bwtIntervals[0][0]+1:0;\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "push", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void push(Stream stack, Substring[] cache) {\t\tpushHead(stack,cache);\t\tpushHeadPrime(stack,cache);\t\tif (hasBeenExtended) pushAppendix(stack,cache);\t\telse {\t\t\tpushTail(stack,cache);\t\t\tpushTailPrime(stack,cache);\t\t}\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pushAppendix", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void pushAppendix(Stream stack, Substring[] cache) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pushHead", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void pushHead(Stream stack, Substring[] cache) {\t\taddress=stack.nBits();\t\tlog2address=address==0?MAX_BITS_PER_POINTER:Utils.log2(address);\t\tstack.push(previousAddress,log2address);\t\tstack.push(hasBeenExtended?1:0,1);\t\tstack.push(hasBeenStolen?1:0,1);\t\tstack.push(length,log2BWTLength);if (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|+|i|\"+(log2address+1+1+log2BWTLength));\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pushHeadPrime", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void pushHeadPrime(Stream stack, Substring[] cache) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pushTail", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void pushTail(Stream stack, Substring[] cache) {\t\tstack.push(firstCharacter,log2alphabetLength);\t\tstack.push(nIntervals,BITS_TO_ENCODE_MAX_INTERVALS);\t\tfor (int i=0; i<nIntervals; i++) {\t\t\tstack.push(bwtIntervals[i][0],bitsToEncodeBWTLength);\t\t\tstack.push(bwtIntervals[i][1],bitsToEncodeBWTLength);\t\t}if (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|+|i|\"+(log2alphabetLength+BITS_TO_ENCODE_MAX_INTERVALS+nIntervals*2*bitsToEncodeBWTLength));\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pushTailPrime", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void pushTailPrime(Stream stack, Substring[] cache) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "read", "params": ["Stream", "Substring", "boolean", "boolean", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected /*final*/ void read(Stream stack, Substring[] cache, boolean fastHead, boolean fastTail, boolean fastAppendix) {\t\treadHead(stack,cache);\t\treadHeadPrime(stack,cache,fastHead);\t\tfirstCharacter=-1;\t\tnIntervals=0;\t\tif (hasBeenExtended) {\t\t\treadAppendix(stack,cache,fastAppendix);\t\t}\t\telse {\t\t\treadTail(stack,cache,fastTail);\t\t\treadTailPrime(stack,cache,fastTail);\t\t}\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readHead", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void readHead(Stream stack, Substring[] cache) {\t\taddress=stack.getPosition();\t\tlog2address=address==0?MAX_BITS_PER_POINTER:Utils.log2(address);\t\tpreviousAddress=stack.read(log2address);\t\thasBeenExtended=stack.read(1)==1?true:false;\t\thasBeenStolen=stack.read(1)==1?true:false;\t\tlength=stack.read(log2BWTLength);\t\tlog2length=length==0?-1:Utils.log2(length);\t\tbitsToEncodeLength=length==0?1:Utils.bitsToEncode(length);\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readHeadPrime", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void readHeadPrime(Stream stack, Substring[] cache, boolean fast) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readTail", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void readTail(Stream stack, Substring[] cache, boolean fast) {\t\tfirstCharacter=(int)stack.read(log2alphabetLength);\t\tnIntervals=(int)stack.read(BITS_TO_ENCODE_MAX_INTERVALS);\t\tif (fast && hasBeenStolen) stack.setPosition( stack.getPosition()+\t\t\t                   \t\t\t\t\t\t  nIntervals*bitsToEncodeBWTLength*2 );\t\telse {\t\t\tfor (int i=0; i<nIntervals; i++) {\t\t\t\tbwtIntervals[i][0]=stack.read(bitsToEncodeBWTLength);\t\t\t\tbwtIntervals[i][1]=stack.read(bitsToEncodeBWTLength);\t\t\t}\t\t}\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readTailPrime", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void readTailPrime(Stream stack, Substring[] cache, boolean fast) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readAppendix", "params": ["Stream", "Substring", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void readAppendix(Stream stack, Substring[] cache, boolean fast) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pop", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void pop(Stream stack, Substring[] cache) {\t\tif (hasBeenExtended) popAppendix(stack,cache);\t\telse popTails(stack,cache);\t\tpopHeadPrime(stack,cache);\t\tpopHead(stack,cache);\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "popAppendix", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void popAppendix(Stream stack, Substring[] cache) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "popHeadPrime", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void popHeadPrime(Stream stack, Substring[] cache) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "popHead", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["private", "final"], "return_type": "void", "snippet": "\tprivate final void popHead(Stream stack, Substring[] cache) {\t\tstack.pop( log2BWTLength+\t\t           1+\t\t           1+\t\t           log2address );if (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|-|i|\"+(log2BWTLength+1+1+log2address));\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "popTails", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void popTails(Stream stack, Substring[] cache) {\t\tpopTailPrime(stack,cache);\t\tstack.pop( nIntervals*bitsToEncodeBWTLength*2+\t\t\t\t   BITS_TO_ENCODE_MAX_INTERVALS+\t\t           log2alphabetLength );if (Constants.TRACK_STACK) System.out.println(System.currentTimeMillis()+\"|-|i|\"+( nIntervals*bitsToEncodeBWTLength*2+\t\t\t\t\t\t\t\t\t\t\t\t\t    BITS_TO_ENCODE_MAX_INTERVALS+\t\t\t\t\t\t\t\t\t\t\t\t\t    log2alphabetLength ));\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "popTailPrime", "params": ["Stream", "Substring"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void popTailPrime(Stream stack, Substring[] cache) { }", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "markAsExtended", "params": ["Stream"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void markAsExtended(Stream stack) {\t\tlong backupPointer = stack.getPosition();\t\tstack.setBit(address+log2address);\t\tstack.setPosition(backupPointer);\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "markAsStolen", "params": ["Stream"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void markAsStolen(Stream stack) {\t\tlong backupPointer = stack.getPosition();\t\tstack.setBit(address+log2address+1);\t\tstack.setPosition(backupPointer);\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/Substring.java", "stars": "2", "class": {"name": "Substring", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "initialize", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initialize() {        this.setSize(384, 244);        this.setTitle(\"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u306e\u5fa9\u5143\");        this.setContentPane(getJContentPane());    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJContentPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getJContentPane() {        if (jContentPane == null) {            jContentPane = new JPanel();            jContentPane.setLayout(new BoxLayout(getJContentPane(), BoxLayout.Y_AXIS));            jContentPane.add(getP_main(), null);            jContentPane.add(getP_buttons(), null);        }        return jContentPane;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getP_main", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getP_main() {        if (P_main == null) {            P_main = new JPanel();            P_main.setLayout(new BoxLayout(getP_main(), BoxLayout.Y_AXIS));            P_main.add(getP_snapshots(), null);        }        return P_main;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getP_buttons", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getP_buttons() {        if (P_buttons == null) {            P_buttons = new JPanel();            P_buttons.setLayout(new BoxLayout(getP_buttons(), BoxLayout.X_AXIS));            P_buttons.add(Box.createHorizontalGlue());            P_buttons.add(getBT_revert(), null);            P_buttons.add(getBT_cancel(), null);        }        return P_buttons;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBT_revert", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getBT_revert() {        if (BT_revert == null) {            BT_revert = new JButton();            BT_revert.setText(\"\u5fa9\u5143\");            BT_revert.addActionListener(new java.awt.event.ActionListener() {                public void actionPerformed(java.awt.event.ActionEvent e) {                    File f = (File)snapshots.get(selectedIndex).get(\"file\");                    try {                        computer.pause();                        computer.getApplication().loadState(f.getAbsolutePath());                    }                    catch (FileNotFoundException ex) {                        JOptionPane.showMessageDialog(                            null,                            ex.getMessage(),                            \"ERROR\",                            JOptionPane.ERROR_MESSAGE);                            return ;                    }                    catch (IOException ex) {                        JOptionPane.showMessageDialog(                            null,                            ex.getMessage(),                            \"ERROR\",                            JOptionPane.ERROR_MESSAGE);                        return ;                    }                    computer.resume();                    RevertSnapshotDialog.this.dispose();                }            });        }        return BT_revert;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBT_cancel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getBT_cancel() {        if (BT_cancel == null) {            BT_cancel = new JButton();            BT_cancel.setText(\"\u30ad\u30e3\u30f3\u30bb\u30eb\");            BT_cancel.addActionListener(new java.awt.event.ActionListener() {                public void actionPerformed(java.awt.event.ActionEvent e) {                    RevertSnapshotDialog.this.dispose();                }            });        }        return BT_cancel;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getP_snapshots", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getP_snapshots() {        if (P_snapshots == null) {            P_snapshots = new JPanel();            P_snapshots.setLayout(new BoxLayout(getP_snapshots(), BoxLayout.Y_AXIS));            P_snapshots.add(getSP_snapshots(), null);            P_snapshots.add(getSP_comment(), null);        }        return P_snapshots;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSP_snapshots", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JScrollPane", "snippet": "    private JScrollPane getSP_snapshots() {        if (SP_snapshots == null) {            SP_snapshots = new JScrollPane();            SP_snapshots.setViewportView(getTBL_snapshots());        }        return SP_snapshots;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getTBL_snapshots", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTable", "snippet": "    private JTable getTBL_snapshots() {        if (TBL_snapshots == null) {            String[] column_names = {\"\u30b9\u30ca\u30c3\u30d7\u30b7\u30e7\u30c3\u30c8\u540d\", \"\u4f5c\u6210\u65e5\"};            tableModel = new SnapshotsTableModel(column_names, 0);            TBL_snapshots = new JTable(tableModel);            TBL_snapshots.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);            TBL_snapshots.getSelectionModel().addListSelectionListener(new ListSelectionListener() {                public void valueChanged(ListSelectionEvent e) {                    if (e.getValueIsAdjusting()) {                        return ;                    }                    selectedIndex = TBL_snapshots.getSelectedRow();                    TA_comment.setText((String)snapshots.get(selectedIndex).get(\"comment\"));                    TA_comment.setCaretPosition(0);                }            });        }        snapshots = computer.getApplication().getSnapshotProperties();        if (snapshots != null) {            for (Hashtable<String, Object> d : snapshots) {                tableModel.addRow(new Object[] {d.get(\"name\"), DateFormat.getDateTimeInstance().format((Date)d.get(\"createdDate\"))});            }        }        return TBL_snapshots;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getTA_comment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTextArea", "snippet": "    private JTextArea getTA_comment() {        if (TA_comment == null) {            TA_comment = new JTextArea();            // TA_comment.setRows(10);            TA_comment.setEditable(false);        }        return TA_comment;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSP_comment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JScrollPane", "snippet": "    private JScrollPane getSP_comment() {        if (SP_comment == null) {            SP_comment = new JScrollPane();            SP_comment.setPreferredSize(new Dimension(120, 180));            SP_comment.setViewportView(getTA_comment());        }        return SP_comment;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "RevertSnapshotDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getColumnClass", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Class<Object>", "snippet": "        public Class<? extends Object> getColumnClass(int column) {            switch (column) {            case 0:                return JRadioButton.class;            case 1:                return String.class;            case 2:                return String.class;            default:                return Object.class;            }        }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "SnapshotsTableModel", "extends": "DefaultTableModel", "implements": null, "modifiers": []}}, {"method_name": "isCellEditable", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isCellEditable(int row, int column) {            return false;        }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/RevertSnapshotDialog.java", "stars": "4", "class": {"name": "SnapshotsTableModel", "extends": "DefaultTableModel", "implements": null, "modifiers": []}}, {"method_name": "getColor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getColor() {        return color;    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/flyweight/Color.java", "stars": "2", "class": {"name": "Color", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setColor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(String color) {        this.color = color;    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/flyweight/Color.java", "stars": "2", "class": {"name": "Color", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void run() {    while (!this.shutdown) {      try {        this.lastThreadCheckTime = System.currentTimeMillis();        this.updater.updateExecutions();        // TODO not sure why it would be important to check the status immediately in case of _new_        // executions. This can only optimize finalizing executions that finish super-quickly after        // being started.        waitForNewExecutions();      } catch (final Exception e) {        logger.error(\"Unexpected exception in updating executions\", e);      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdaterThread.java", "stars": "18", "class": {"name": "RunningExecutionsUpdaterThread", "extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"method_name": "waitForNewExecutions", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void waitForNewExecutions() {    synchronized (this.runningExecutions) {      try {        final int waitTimeMillis =            this.runningExecutions.get().size() > 0 ? this.waitTimeMs : this.waitTimeIdleMs;        if(this.runningExecutions.get().size() == 0){          this.updater.getAlerterHolder().getFlowAlerterFlag().clear();        }        if (waitTimeMillis > 0) {          this.runningExecutions.wait(waitTimeMillis);        }      } catch (final InterruptedException e) {        logger.error(\"InterruptedException in wait for new executions\", e);      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdaterThread.java", "stars": "18", "class": {"name": "RunningExecutionsUpdaterThread", "extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"method_name": "shutdown", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {    this.shutdown = true;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdaterThread.java", "stars": "18", "class": {"name": "RunningExecutionsUpdaterThread", "extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"method_name": "getLastThreadCheckTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastThreadCheckTime() {    return this.lastThreadCheckTime;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/RunningExecutionsUpdaterThread.java", "stars": "18", "class": {"name": "RunningExecutionsUpdaterThread", "extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {        super.init(context);        initView();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "initView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initView() {        mSwitchSize = (TextView) findViewById(R.id.switchSize);        //\u5207\u6362\u89c6\u9891\u6e05\u6670\u5ea6        mSwitchSize.setOnClickListener(new OnClickListener() {            @Override            public void onClick(View v) {                if (mHadPlay && !isChanging) {                    showSwitchDialog();                }            }        });    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": ["List<SwitchVideoModel>", "boolean", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<SwitchVideoModel> url, boolean cacheWithPlay, String title) {        mUrlList = url;        return setUp(url.get(mSourcePosition).getUrl(), cacheWithPlay, title);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": ["List<SwitchVideoModel>", "boolean", "File", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean setUp(List<SwitchVideoModel> url, boolean cacheWithPlay, File cachePath, String title) {        mUrlList = url;        return setUp(url.get(mSourcePosition).getUrl(), cacheWithPlay, cachePath, title);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getLayoutId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {        return R.layout.sample_video_pick;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "startWindowFullscreen", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {        SmartPickVideo sampleVideo = (SmartPickVideo) super.startWindowFullscreen(context, actionBar, statusBar);        sampleVideo.mSourcePosition = mSourcePosition;        sampleVideo.mListItemRect = mListItemRect;        sampleVideo.mListItemSize = mListItemSize;        sampleVideo.mType = mType;        sampleVideo.mUrlList = mUrlList;        sampleVideo.mTypeText = mTypeText;        sampleVideo.mSwitchSize.setText(mTypeText);        return sampleVideo;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveNormalVideoShow", "params": ["View", "ViewGroup", "GSYVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void resolveNormalVideoShow(View oldF, ViewGroup vp, GSYVideoPlayer gsyVideoPlayer) {        super.resolveNormalVideoShow(oldF, vp, gsyVideoPlayer);        if (gsyVideoPlayer != null) {            SmartPickVideo sampleVideo = (SmartPickVideo) gsyVideoPlayer;            mSourcePosition = sampleVideo.mSourcePosition;            mType = sampleVideo.mType;            mTypeText = sampleVideo.mTypeText;            mSwitchSize.setText(mTypeText);            setUp(mUrlList, mCache, mCachePath, mTitle);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "onAutoCompletion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAutoCompletion() {        super.onAutoCompletion();        releaseTmpManager();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCompletion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCompletion() {        super.onCompletion();        releaseTmpManager();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "showSwitchDialog", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showSwitchDialog() {        if (!mHadPlay) {            return;        }        SwitchVideoTypeDialog switchVideoTypeDialog = new SwitchVideoTypeDialog(getContext());        switchVideoTypeDialog.initList(mUrlList, new SwitchVideoTypeDialog.OnListItemClickListener() {            @Override            public void onItemClick(int position) {                resolveStartChange(position);            }        });        switchVideoTypeDialog.show();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveChangeUrl", "params": ["boolean", "File", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveChangeUrl(boolean cacheWithPlay, File cachePath, String url) {        if (mTmpManager != null) {            mCache = cacheWithPlay;            mCachePath = cachePath;            mOriginUrl = url;            this.mUrl = url;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveStartChange", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveStartChange(int position) {        final String name = mUrlList.get(position).getName();        if (mSourcePosition != position) {            if ((mCurrentState == GSYVideoPlayer.CURRENT_STATE_PLAYING                    || mCurrentState == GSYVideoPlayer.CURRENT_STATE_PAUSE)) {                showLoading();                final String url = mUrlList.get(position).getUrl();                cancelProgressTimer();                hideAllWidget();                if (mTitle != null && mTitleTextView != null) {                    mTitleTextView.setText(mTitle);                }                mPreSourcePosition = mSourcePosition;                isChanging = true;                mTypeText = name;                mSwitchSize.setText(name);                mSourcePosition = position;                //\u521b\u5efa\u4e34\u65f6\u7ba1\u7406\u5668\u6267\u884c\u52a0\u8f7d\u64ad\u653e                mTmpManager = GSYVideoManager.tmpInstance(gsyMediaPlayerListener);                mTmpManager.initContext(getContext().getApplicationContext());                resolveChangeUrl(mCache, mCachePath, url);                mTmpManager.prepare(mUrl, mMapHeadData, mLooping, mSpeed, mCache, mCachePath, null);                changeUiToPlayingBufferingShow();            }        } else {            Toast.makeText(getContext(), \"\u5df2\u7ecf\u662f \" + name, Toast.LENGTH_LONG).show();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveChangedResult", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveChangedResult() {        isChanging = false;        mTmpManager = null;        final String name = mUrlList.get(mSourcePosition).getName();        final String url = mUrlList.get(mSourcePosition).getUrl();        mTypeText = name;        mSwitchSize.setText(name);        resolveChangeUrl(mCache, mCachePath, url);        hideLoading();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "releaseTmpManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void releaseTmpManager() {        if (mTmpManager != null) {            mTmpManager.releaseMediaPlayer();            mTmpManager = null;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "showLoading", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showLoading() {        hideLoading();        mLoadingDialog = new LoadingDialog(mContext);        mLoadingDialog.show();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "hideLoading", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void hideLoading() {        if (mLoadingDialog != null) {            mLoadingDialog.dismiss();            mLoadingDialog = null;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "onSurfaceDestroyed", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onSurfaceDestroyed(Surface surface) {        //\u6e05\u7a7a\u91ca\u653e        setDisplay(null);        //\u540c\u4e00\u6d88\u606f\u961f\u5217\u4e2d\u53bbrelease        //todo \u9700\u8981\u5904\u7406\u4e3a\u4ec0\u4e48\u5168\u5c4f\u65f6\u5168\u5c4f\u7684surface\u4f1a\u88ab\u91ca\u653e\u4e86        //releaseSurface(surface);        return true;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/SmartPickVideo.java", "stars": "2", "class": {"name": "SmartPickVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_detail_ad_player);        ButterKnife.bind(this);        //\u666e\u901a\u6a21\u5f0f        initVideo();        ArrayList<GSYSampleADVideoPlayer.GSYADVideoModel> urls = new ArrayList<>();        //\u5e7f\u544a1        urls.add(new GSYSampleADVideoPlayer.GSYADVideoModel(\"http://7xjmzj.com1.z0.glb.clouddn.com/20171026175005_JObCxCE2.mp4\",                \"\", GSYSampleADVideoPlayer.GSYADVideoModel.TYPE_AD));        //\u6b63\u5f0f\u5185\u5bb91        urls.add(new GSYSampleADVideoPlayer.GSYADVideoModel(\"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\",                \"\u6b63\u65871\u6807\u9898\", GSYSampleADVideoPlayer.GSYADVideoModel.TYPE_NORMAL));        //\u5e7f\u544a2        urls.add(new GSYSampleADVideoPlayer.GSYADVideoModel(\"http://7xjmzj.com1.z0.glb.clouddn.com/20171026175005_JObCxCE2.mp4\",                \"\", GSYSampleADVideoPlayer.GSYADVideoModel.TYPE_AD, true));        //\u6b63\u5f0f\u5185\u5bb92        urls.add(new GSYSampleADVideoPlayer.GSYADVideoModel(\"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f30.mp4\",                \"\u6b63\u65872\u6807\u9898\", GSYSampleADVideoPlayer.GSYADVideoModel.TYPE_NORMAL));        detailPlayer.setAdUp(urls, true, 0);        //\u589e\u52a0\u5c01\u9762        ImageView imageView = new ImageView(this);        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);        imageView.setImageResource(R.mipmap.xxx1);        detailPlayer.setThumbImageView(imageView);        resolveNormalVideoUI();        detailPlayer.setIsTouchWiget(true);        //\u5173\u95ed\u81ea\u52a8\u65cb\u8f6c        detailPlayer.setRotateViewAuto(false);        detailPlayer.setLockLand(false);        detailPlayer.setShowFullAnimation(false);        detailPlayer.setNeedLockFull(true);        detailPlayer.setVideoAllCallBack(this);        detailPlayer.setLockClickListener(new LockClickListener() {            @Override            public void onClick(View view, boolean lock) {                if (orientationUtils != null) {                    //\u914d\u5408\u4e0b\u65b9\u7684onConfigurationChanged                    orientationUtils.setEnable(!lock);                }            }        });    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailADPlayer.java", "stars": "2", "class": {"name": "DetailADPlayer", "extends": "GSYBaseActivityDetail", "implements": null, "modifiers": ["public"]}}, {"method_name": "getGSYVideoPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ListGSYVideoPlayer", "snippet": "    public ListGSYVideoPlayer getGSYVideoPlayer() {        return detailPlayer;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailADPlayer.java", "stars": "2", "class": {"name": "DetailADPlayer", "extends": "GSYBaseActivityDetail", "implements": null, "modifiers": ["public"]}}, {"method_name": "getGSYVideoOptionBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GSYVideoOptionBuilder", "snippet": "    public GSYVideoOptionBuilder getGSYVideoOptionBuilder() {        //\u4e0d\u9700\u8981builder\u7684        return null;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailADPlayer.java", "stars": "2", "class": {"name": "DetailADPlayer", "extends": "GSYBaseActivityDetail", "implements": null, "modifiers": ["public"]}}, {"method_name": "clickForFullScreen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clickForFullScreen() {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailADPlayer.java", "stars": "2", "class": {"name": "DetailADPlayer", "extends": "GSYBaseActivityDetail", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDetailOrientationRotateAuto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getDetailOrientationRotateAuto() {        return true;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailADPlayer.java", "stars": "2", "class": {"name": "DetailADPlayer", "extends": "GSYBaseActivityDetail", "implements": null, "modifiers": ["public"]}}, {"method_name": "onEnterFullscreen", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnterFullscreen(String url, Object... objects) {        super.onEnterFullscreen(url, objects);        //\u9690\u85cf\u8c03\u5168\u5c4f\u5bf9\u8c61\u7684\u8fd4\u56de\u6309\u952e        GSYVideoPlayer gsyVideoPlayer = (GSYVideoPlayer) objects[1];        gsyVideoPlayer.getBackButton().setVisibility(View.GONE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailADPlayer.java", "stars": "2", "class": {"name": "DetailADPlayer", "extends": "GSYBaseActivityDetail", "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveNormalVideoUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveNormalVideoUI() {        //\u589e\u52a0title        detailPlayer.getTitleTextView().setVisibility(View.VISIBLE);        detailPlayer.getBackButton().setVisibility(View.VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/DetailADPlayer.java", "stars": "2", "class": {"name": "DetailADPlayer", "extends": "GSYBaseActivityDetail", "implements": null, "modifiers": ["public"]}}, {"method_name": "executeProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\t\tif (dependencies.get(\"x\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency x for procedure SyringaPlayer!\");\t\t\treturn;\t\t}\t\tif (dependencies.get(\"y\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency y for procedure SyringaPlayer!\");\t\t\treturn;\t\t}\t\tif (dependencies.get(\"z\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency z for procedure SyringaPlayer!\");\t\t\treturn;\t\t}\t\tif (dependencies.get(\"world\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency world for procedure SyringaPlayer!\");\t\t\treturn;\t\t}\t\tint x = (int) dependencies.get(\"x\");\t\tint y = (int) dependencies.get(\"y\");\t\tint z = (int) dependencies.get(\"z\");\t\tWorld world = (World) dependencies.get(\"world\");\t\tif (!world.isRemote) {\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(SyringaBlock.block, (int) (1)));\t\t\tentityToSpawn.setPickupDelay(10);\t\t\tworld.addEntity(entityToSpawn);\t\t}\t\tif (!world.isRemote) {\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\t\t\tentityToSpawn.setPickupDelay(10);\t\t\tworld.addEntity(entityToSpawn);\t\t}\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/SyringaPlayerProcedure.java", "stars": "2", "class": {"name": "SyringaPlayerProcedure", "extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"method_name": "getParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ClientPongParser", "snippet": "    public ClientPongParser getParser() {        return (ClientPongParser) this.parser;    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/incoming/client/ClientPongEvent.java", "stars": "2", "class": {"name": "ClientPongEvent", "extends": "MessageEvent", "implements": null, "modifiers": ["public"]}}, {"method_name": "getApi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getApi() {        return \"user/info\";    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/UserInfoApi.java", "stars": "1", "class": {"name": "UserInfoApi", "extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"method_name": "init", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/server/netty/connections/NettyConnection.java", "stars": "2", "class": {"name": "NettyConnection", "extends": "Connection", "implements": null, "modifiers": ["public"]}}, {"method_name": "dispose", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispose() {        if(this.isDisposed()) return;        super.dispose();        if(this.channel != null) {            if(this.channel.isOpen()) this.channel.close();            this.channel = null;        }    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/server/netty/connections/NettyConnection.java", "stars": "2", "class": {"name": "NettyConnection", "extends": "Connection", "implements": null, "modifiers": ["public"]}}, {"method_name": "write", "params": ["ByteBuf"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void write(ByteBuf buffer) {        if(this.isDisposed() || (buffer == null)) return;        this.channel.writeAndFlush(buffer);    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/server/netty/connections/NettyConnection.java", "stars": "2", "class": {"name": "NettyConnection", "extends": "Connection", "implements": null, "modifiers": ["public"]}}, {"method_name": "getIpAddress", "params": ["Channel"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getIpAddress(Channel channel) {        String data = channel.remoteAddress().toString().replace(\"/\", \"\");        String[] ipData = data.split(\":\");        InetAddressValidator validator = InetAddressValidator.getInstance();        if(validator.isValidInet4Address(ipData[0])) {            return ipData[0];        } else {            String ip = data.replace(\":\" + ipData[ipData.length - 1], \"\");            if(validator.isValidInet6Address(ip)) {                return ip;            }        }        return null;    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/server/netty/connections/NettyConnection.java", "stars": "2", "class": {"name": "NettyConnection", "extends": "Connection", "implements": null, "modifiers": ["public"]}}, {"method_name": "parse", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Configuration", "snippet": "    public static Configuration parse(final String jobPath) {        Configuration configuration = ConfigParser.parseJobConfig(jobPath);        mergeConfiguration(configuration);        return configuration;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "mergeConfiguration", "params": ["Configuration"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void mergeConfiguration(Configuration configuration) {        //Inject System properties into 'core.json'        try {            String coreConfig = IOUtils.toString(new FileInputStream(CoreConstant.DATAX_CONF_PATH));            Map<String, Object> systemPropsMap = new HashMap<String, Object>((Map) System.getProperties());            coreConfig = PatternInjectUtils.inject(coreConfig, systemPropsMap);            configuration.merge(Configuration.from(coreConfig), false);        } catch (FileNotFoundException e) {            throw DataXException.asDataXException(CommonErrorCode.CONFIG_ERROR, \"Cannot find configuration file: \" +                    new File(CoreConstant.DATAX_CONF_PATH).getAbsolutePath());        } catch (IOException e) {            throw DataXException.asDataXException(CommonErrorCode.CONFIG_ERROR, e);        }        Set<String> pluginList = new HashSet<String>();        // todo config\u4f18\u5316\uff0c\u53ea\u6355\u83b7\u9700\u8981\u7684plugin        String readerPluginName = configuration.getString(                CoreConstant.DATAX_JOB_CONTENT_READER_NAME);        pluginList.add(readerPluginName);        try{            //Support multiple writers            List<Object> writerList = configuration.getList(CoreConstant.DATAX_JOB_CONTENT_WRITER);            if(null != writerList){                for(int i = 0; i < writerList.size(); i++){                    pluginList.add(configuration.getString(                            String.format(CoreConstant.DATAX_JOB_CONTENT_WRITER_ARRAY_NAME, i)));                }            }        }catch(Exception e){            pluginList.add(configuration.getString(CoreConstant.DATAX_JOB_CONTENT_WRITER_NAME));        }        String preHandlerName = configuration.getString(                CoreConstant.DATAX_JOB_PREHANDLER_PLUGINNAME);        String postHandlerName = configuration.getString(                CoreConstant.DATAX_JOB_POSTHANDLER_PLUGINNAME);        if (StringUtils.isNotEmpty(preHandlerName)) {            pluginList.add(preHandlerName);        }        if (StringUtils.isNotEmpty(postHandlerName)) {            pluginList.add(postHandlerName);        }        try {            configuration.merge(parsePluginConfig(new ArrayList<String>(pluginList)), false);        } catch (Exception e) {            //\u541e\u6389\u5f02\u5e38\uff0c\u4fdd\u6301log\u5e72\u51c0\u3002\u8fd9\u91ccmessage\u8db3\u591f\u3002            LOG.warn(String.format(\"\u63d2\u4ef6[%s]\u52a0\u8f7d\u5931\u8d25\uff0c1s\u540e\u91cd\u8bd5... Exception:%s \", StringUtils.join(pluginList, \",\"), e.getMessage()));            try {                Thread.sleep(1000);            } catch (InterruptedException e1) {                //            }            configuration.merge(parsePluginConfig(new ArrayList<String>(pluginList)), false);        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "parseByString", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Configuration", "snippet": "    public static Configuration parseByString(String jobContent) {        Configuration configuration = Configuration.from(jobContent);        configuration = SecretUtil.decryptSecretKey(configuration);        mergeConfiguration(configuration);        return configuration;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "parseCoreConfig", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "Configuration", "snippet": "    private static Configuration parseCoreConfig(final String path) {        return Configuration.from(new File(path));    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "parseJobConfig", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Configuration", "snippet": "    public static Configuration parseJobConfig(final String path) {        String jobContent = getJobContent(path);        Configuration config = Configuration.from(jobContent);        return SecretUtil.decryptSecretKey(config);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getJobContent", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "    private static String getJobContent(String jobResource) {        String jobContent;        boolean isJobResourceFromHttp = jobResource.trim().toLowerCase().startsWith(\"http\");        if (isJobResourceFromHttp) {            //\u8bbe\u7f6ehttpclient\u7684 HTTP_TIMEOUT_INMILLIONSECONDS            Configuration coreConfig = ConfigParser.parseCoreConfig(CoreConstant.DATAX_CONF_PATH);            int httpTimeOutInMillionSeconds = coreConfig.getInt(                    CoreConstant.DATAX_CORE_DATAXSERVER_TIMEOUT, 5000);            HttpClientUtil.setHttpTimeoutInMillionSeconds(httpTimeOutInMillionSeconds);            HttpClientUtil httpClientUtil = new HttpClientUtil();            try {                URL url = new URL(jobResource);                HttpGet httpGet = HttpClientUtil.getGetRequest();                httpGet.setURI(url.toURI());                jobContent = httpClientUtil.executeAndGetWithRetry(httpGet, String.class, 1, 1000L);            } catch (Exception e) {                throw DataXException.asDataXException(FrameworkErrorCode.CONFIG_ERROR, \"\u83b7\u53d6\u4f5c\u4e1a\u914d\u7f6e\u4fe1\u606f\u5931\u8d25:\" + jobResource, e);            }        } else {            // jobResource \u662f\u672c\u5730\u6587\u4ef6\u7edd\u5bf9\u8def\u5f84            try {                jobContent = FileUtils.readFileToString(new File(jobResource));            } catch (IOException e) {                throw DataXException.asDataXException(FrameworkErrorCode.CONFIG_ERROR, \"\u83b7\u53d6\u4f5c\u4e1a\u914d\u7f6e\u4fe1\u606f\u5931\u8d25:\" + jobResource, e);            }        }        if (jobContent == null) {            throw DataXException.asDataXException(FrameworkErrorCode.CONFIG_ERROR, \"\u83b7\u53d6\u4f5c\u4e1a\u914d\u7f6e\u4fe1\u606f\u5931\u8d25:\" + jobResource);        }        return jobContent;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "parsePluginConfig", "params": ["List<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "Configuration", "snippet": "    public static Configuration parsePluginConfig(List<String> wantPluginNames) {        Configuration configuration = Configuration.newDefault();        Set<String> replicaCheckPluginSet = new HashSet<String>();        int complete = 0;        for (final String each : ConfigParser                .getDirAsList(CoreConstant.DATAX_PLUGIN_READER_HOME)) {            Configuration eachReaderConfig = ConfigParser.parseOnePluginConfig(each, \"reader\", replicaCheckPluginSet, wantPluginNames);            if (eachReaderConfig != null) {                configuration.merge(eachReaderConfig, true);                complete += 1;            }        }        for (final String each : ConfigParser                .getDirAsList(CoreConstant.DATAX_PLUGIN_WRITER_HOME)) {            Configuration eachWriterConfig = ConfigParser.parseOnePluginConfig(each, \"writer\", replicaCheckPluginSet, wantPluginNames);            if (eachWriterConfig != null) {                configuration.merge(eachWriterConfig, true);                complete += 1;            }        }        if (wantPluginNames != null && wantPluginNames.size() > 0 && wantPluginNames.size() != complete) {            throw DataXException.asDataXException(FrameworkErrorCode.PLUGIN_INIT_ERROR, \"\u63d2\u4ef6\u52a0\u8f7d\u5931\u8d25\uff0c\u672a\u5b8c\u6210\u6307\u5b9a\u63d2\u4ef6\u52a0\u8f7d:\" + wantPluginNames);        }        return configuration;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "parseOnePluginConfig", "params": ["String", "String", "Set<String>", "List<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "Configuration", "snippet": "    public static Configuration parseOnePluginConfig(final String path,                                                     final String type,                                                     Set<String> pluginSet, List<String> wantPluginNames) {        String filePath = path + File.separator + \"plugin.json\";        Configuration configuration = Configuration.from(new File(filePath));        String pluginPath = configuration.getString(\"path\");        String pluginName = configuration.getString(\"name\");        if (!pluginSet.contains(pluginName)) {            pluginSet.add(pluginName);        } else {            throw DataXException.asDataXException(FrameworkErrorCode.PLUGIN_INIT_ERROR, \"\u63d2\u4ef6\u52a0\u8f7d\u5931\u8d25,\u5b58\u5728\u91cd\u590d\u63d2\u4ef6:\" + filePath);        }        //\u4e0d\u662f\u60f3\u8981\u7684\u63d2\u4ef6\uff0c\u8fd4\u56denull        if (wantPluginNames != null && wantPluginNames.size() > 0 && !wantPluginNames.contains(pluginName)) {            return null;        }        boolean isDefaultPath = StringUtils.isBlank(pluginPath);        if (isDefaultPath) {            configuration.set(\"path\", path);        }        Configuration result = Configuration.newDefault();        result.set(                String.format(\"plugin.%s.%s\", type, pluginName),                configuration.getInternal());        return result;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getDirAsList", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "List<String>", "snippet": "    private static List<String> getDirAsList(String path) {        List<String> result = new ArrayList<String>();        String[] paths = new File(path).list();        if (null == paths) {            return result;        }        for (final String each : paths) {            result.add(path + File.separator + each);        }        return result;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ConfigParser.java", "stars": "23", "class": {"name": "ConfigParser", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getSqlMode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlMode", "snippet": "    public SqlMode getSqlMode() {        return sqlMode;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSqlMode", "params": ["SqlMode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSqlMode(SqlMode sqlMode) {        this.sqlMode = sqlMode;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSqlNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlNode", "snippet": "    public SqlNode getSqlNode() {        return sqlNode;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSqlNode", "params": ["SqlNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSqlNode(SqlNode sqlNode) {        this.sqlNode = sqlNode;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "getReturnType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "    public Class<?> getReturnType() {        return returnType;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "setReturnType", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setReturnType(Class<?> returnType) {        this.returnType = returnType;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "isPagination", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPagination() {        return pagination;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "setPagination", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPagination(boolean pagination) {        this.pagination = pagination;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDataSourceName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDataSourceName() {        return dataSourceName;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "setDataSourceName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDataSourceName(String dataSourceName) {        this.dataSourceName = dataSourceName;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSelectKey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Node", "snippet": "    public Node getSelectKey() {        return selectKey;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSelectKey", "params": ["Node"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSelectKey(Node selectKey) {        this.selectKey = selectKey;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSelectKeySqlNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlNode", "snippet": "    public SqlNode getSelectKeySqlNode() {        return selectKeySqlNode;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSelectKeySqlNode", "params": ["SqlNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSelectKeySqlNode(SqlNode selectKeySqlNode) {        this.selectKeySqlNode = selectKeySqlNode;    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/SqlStatement.java", "stars": "13", "class": {"name": "SqlStatement", "extends": "Statement", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        //\u63d0\u9ad8\u53d8\u91cffw\u7684\u4f5c\u7528\u57df,\u8ba9finally\u53ef\u4ee5\u4f7f\u7528        //\u53d8\u91cf\u5728\u5b9a\u4e49\u7684\u65f6\u5019,\u53ef\u4ee5\u6ca1\u6709\u503c,\u4f46\u662f\u4f7f\u7528\u7684\u65f6\u5019\u5fc5\u987b\u6709\u503c        //fw = new FileWriter(\"09_IOAndProperties\\\\g.txt\",true); \u6267\u884c\u5931\u8d25,fw\u6ca1\u6709\u503c,fw.close\u4f1a\u62a5\u9519        FileWriter fw = null;        try{            //\u53ef\u80fd\u4f1a\u4ea7\u51fa\u5f02\u5e38\u7684\u4ee3\u7801            fw = new FileWriter(\"w:\\\\09_IOAndProperties\\\\g.txt\",true);            for (int i = 0; i <10 ; i++) {                fw.write(\"HelloWorld\"+i+\"\\r\\n\");            }        }catch(IOException e){            //\u5f02\u5e38\u7684\u5904\u7406\u903b\u8f91            System.out.println(e);        }finally {            //\u4e00\u5b9a\u4f1a\u6307\u5b9a\u7684\u4ee3\u7801            //\u521b\u5efa\u5bf9\u8c61\u5931\u8d25\u4e86,fw\u7684\u9ed8\u8ba4\u503c\u5c31\u662fnull,null\u662f\u4e0d\u80fd\u8c03\u7528\u65b9\u6cd5\u7684,\u4f1a\u629b\u51faNullPointerException,\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u5224\u65ad,\u4e0d\u662fnull\u5728\u628a\u8d44\u6e90\u91ca\u653e            if(fw!=null){                try {                    //fw.close\u65b9\u6cd5\u58f0\u660e\u629b\u51fa\u4e86IOException\u5f02\u5e38\u5bf9\u8c61,\u6240\u4ee5\u6211\u4eec\u5c31\u7684\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\u5bf9\u8c61,\u8981\u4e48throws,\u8981\u4e48try catch                    fw.close();                } catch (IOException e) {                    e.printStackTrace();                }            }        }    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/20.%E3%80%90%E5%AD%97%E8%8A%82%E6%B5%81%E3%80%81%E5%AD%97%E7%AC%A6%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/09_IOAndProperties/src/com/itheima/demo06/trycatch/Demo01TryCatch.java", "stars": "2", "class": {"name": "Demo01TryCatch", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkType", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\t\tthis.getLeft().checkType();\t\tthis.getRight().checkType();\t\tgetLeft().getType().assertType(this, TypeCode.BOOLEAN);\t\tgetLeft().getType().assertType(this, getRight().getType());\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprAND.java", "stars": "3", "class": {"name": "ExprAND", "extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"method_name": "generateCode", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\t\tString result = \"(\" + getLeft().generateCode() \t\t\t\t+ \" && \" + getRight().generateCode() + \")\";\t\treturn result;\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprAND.java", "stars": "3", "class": {"name": "ExprAND", "extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"method_name": "constEval", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\t\tObject o1 = getLeft().constEval(environment);\t\tObject o2 = getRight().constEval(environment);\t\tif ((o1 instanceof Boolean) && (o2 instanceof Boolean)) \t\t\treturn new Boolean((Boolean)o1 && (Boolean)o2);\t\telse\t\t\tthrow new TypeException(\"Impossible de calculer la constante, erreur de type\", line, column);\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprAND.java", "stars": "3", "class": {"name": "ExprAND", "extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\t\treturn \"(\" + this.getLeft() + \" && \" + this.getRight() + \")\";\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprAND.java", "stars": "3", "class": {"name": "ExprAND", "extends": "ExprBinary", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        BasicDiscount basicDiscount;        basicDiscount = new VIPDiscount();        VIPDiscountDecorate vipDiscountDecorate;        vipDiscountDecorate = new VIPDiscountDecorate(basicDiscount);        vipDiscountDecorate.discount();        vipDiscountDecorate.expandBusiness();    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/decorate/business/DiscountDecorateTest.java", "stars": "2", "class": {"name": "DiscountDecorateTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "value", "params": ["int", "double"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float value(int n, double phase) {        double x = 2 * Math.PI * phase;        double temp = 0;        for (int k = 1; k <= n; k++) {            temp += Math.sin((2 * k - 1) * x) / (2 * k - 1);        }        return (float)(4 * temp / Math.PI);    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/Beep.java", "stars": "4", "class": {"name": "Beep", "extends": "AbstractSoundProcessor", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeFrequency", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changeFrequency(double frequency) {        int n = (int) Math.floor((samplingRate / (2 * frequency) + 1) / 2);        if (n >= MAX_RANK) {            n = MAX_RANK;        }        synchronized(this) {            Beep.this.frequency = frequency;            t = table2[n];            delta = TABLE_LENGTH * frequency / samplingRate;        }    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/Beep.java", "stars": "4", "class": {"name": "Beep", "extends": "AbstractSoundProcessor", "implements": null, "modifiers": ["public"]}}, {"method_name": "tick", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "float", "snippet": "    public synchronized float tick() {        while ((int)time >= TABLE_LENGTH) {            time -= TABLE_LENGTH;        }        int index = (int)time;        time += delta;        return t[index];    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/Beep.java", "stars": "4", "class": {"name": "Beep", "extends": "AbstractSoundProcessor", "implements": null, "modifiers": ["public"]}}, {"method_name": "saveState", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveState(StateSet ss) {        ss.set(\"AbstractSoundProcessor.frequency\", frequency);        ss.set(\"AbstractSoundProcessor.beep.time\", time);        ss.set(\"AbstractSoundProcessor.beep.delta\", delta);        ss.set(\"AbstractSoundProcessor.beep.current_table\", t);    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/Beep.java", "stars": "4", "class": {"name": "Beep", "extends": "AbstractSoundProcessor", "implements": null, "modifiers": ["public"]}}, {"method_name": "loadState", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadState(StateSet ss) {        frequency = (Double)ss.get(\"AbstractSoundProcessor.frequency\");        time = (Double)ss.get(\"AbstractSoundProcessor.beep.time\");        delta = (Double)ss.get(\"AbstractSoundProcessor.beep.delta\");        t = (float[])ss.get(\"AbstractSoundProcessor.beep.current_table\");    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/Beep.java", "stars": "4", "class": {"name": "Beep", "extends": "AbstractSoundProcessor", "implements": null, "modifiers": ["public"]}}, {"method_name": "findAllWithTags", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ArticleTagsVO>", "snippet": "    public List<ArticleTagsVO> findAllWithTags() {        List<ArticleTagsVO> articleTagsVOS = articleMapper.selectAllWithTags();        return articleTagsVOS;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "fndAllWithTagsByPage", "params": ["PageParam"], "throws": null, "modifiers": ["public"], "return_type": "PageResult", "snippet": "    public PageResult fndAllWithTagsByPage(PageParam pageParam) {        // \u975e\u6309\u6587\u7ae0\u5206\u9875        // return PageUtil.pageInfo2PageResult(getPageInfo(pageParam))        //\u5148\u67e5 pageSize \u7bc7\u6587\u7ae0        PageInfo<Article> info = getPageInfo(pageParam);        List<ArticleTagsVO> vos = new ArrayList<>();        List<Article> articles = info.getList();        for (Article article : articles) {            Long id = article.getId();            //\u518d\u627e\u6bcf\u4e2a\u6587\u7ae0\u7684\u6807\u7b7e            List<Tag> tags = tagMapper.selectByArticleId(id);            ArticleTagsVO vo = new ArticleTagsVO(article);            vo.setTags(tags);            vos.add(vo);        }        // \u91cd\u65b0\u6784\u9020\u5206\u9875\u6570\u636e        PageInfo<ArticleTagsVO> pageInfo = new PageInfo<>(vos);        pageInfo.setPageNum(info.getPageNum());        pageInfo.setPageSize(info.getPageSize());        pageInfo.setTotal(info.getTotal());        pageInfo.setPages(info.getPages());        return PageUtil.pageInfo2PageResult(pageInfo);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "findArticleWithTagsByTitle", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ArticleTagsVO", "snippet": "    public ArticleTagsVO findArticleWithTagsByTitle(String title) {        Article article = articleMapper.selectArticleByTitle(title);        if (article == null) {            return null;        }        List<Tag> tags = tagMapper.selectByArticleId(article.getId());        ArticleTagsVO vo = new ArticleTagsVO(article);        vo.setTags(tags);        return vo;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "listYearArchives", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ArticleYearVO>", "snippet": "    public List<ArticleYearVO> listYearArchives() {        // \u67e5\u5168\u90e8        List<Article> articles = articleMapper.selectArticleYear();        Map<Integer, List<Article>> yearArticleMap = new HashMap<>(8);        articles.forEach(article -> {            Calendar calendar = Calendar.getInstance();            calendar.setTimeInMillis(article.getCreateTime());            yearArticleMap.computeIfAbsent(calendar.get(Calendar.YEAR), year -> new LinkedList<>())                    .add(article);        });        List<ArticleYearVO> archives = new LinkedList<>();        yearArticleMap.forEach((year, articleList) -> {            // Build archive            ArticleYearVO archive = new ArticleYearVO();            archive.setYear(year);            archive.setArticles(articleList);            // Add archive            archives.add(archive);        });        // Sort this list        archives.sort(new ArticleYearVO.ArchiveComparator());        return archives;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "findArticleById", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Article", "snippet": "    public Article findArticleById(Long id) {        Assert.notNull(id, \"Id must be not null\");        return articleMapper.selectByPrimaryKey(id);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "getTags", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "List<Tag>", "snippet": "    public List<Tag> getTags(Long id) {        Assert.notNull(id, \"Id must be not null\");        return tagMapper.selectByArticleId(id);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "createOrUpdateArticle", "params": ["ArticleTagsVO"], "throws": null, "modifiers": ["public"], "return_type": "ArticleTagsVO", "snippet": "    public ArticleTagsVO createOrUpdateArticle(ArticleTagsVO articleTagsVO) {        List<Tag> tags = articleTagsVO.getTags();        Article article = articleTagsVO.toArticle();        Long id = article.getId();        // \u5982\u679c id \u662f\u7a7a\u5c31\u662f\u65b0\u589e        if (ObjectUtils.isEmpty(id)) {            // \u63d2\u5165\u6587\u7ae0 \u4fdd\u5b58\u4e3b\u952e            id = articleMapper.insert(article);            articleTagsVO.setId(id);        } else {            // \u66f4\u65b0            articleMapper.updateByPrimaryKey(article);        }        tags.forEach(tag -> {            // \u63d2\u5165\u6807\u7b7e \u4fdd\u5b58\u4e3b\u952e            Long tagId;            Tag tagInDB = tagsService.findTagIfExist(tag.getName());            if (tagInDB == null) {                tagId = tagMapper.insert(tag);            } else {                tagId = tagInDB.getId();            }            tag.setId(tagId);        });        // lambda \u5fc5\u987b\u5f97\u662f final        final Long _id = id;        // \u63d2\u5165\u4e2d\u95f4\u8868        tags.forEach(tag -> {            articleMapper.insertArticleTagIfNotExistElseUpdate(_id, tag.getId());        });        return articleTagsVO;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "deleteArticle", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteArticle(Long id) {        articleMapper.deleteByPrimaryKey(id);        // \u5220\u9664\u4e2d\u95f4\u8868        articleMapper.deleteArticleTagByArticleId(id);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "getCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getCount() {        return articleMapper.selectCount();    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "getPageInfo", "params": ["PageParam"], "throws": null, "modifiers": ["private"], "return_type": "PageInfo<Article>", "snippet": "    private PageInfo<Article> getPageInfo(PageParam pageParam) {        int pageNum = pageParam.getPageNum();        int pageSize = pageParam.getPageSize();        PageHelper.startPage(pageNum, pageSize);        List<Article> all = articleMapper.selectAll();        all.forEach(a -> {            a.setContent(\"\");            a.setContentMd(\"\");        });        return new PageInfo<>(all);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "getPageInfo2", "params": ["PageParam"], "throws": null, "modifiers": ["private"], "return_type": "PageInfo<ArticleTagsVO>", "snippet": "    private PageInfo<ArticleTagsVO> getPageInfo2(PageParam pageParam) {        int pageNum = pageParam.getPageNum();        int pageSize = pageParam.getPageSize();        PageHelper.startPage(pageNum, pageSize);        List<ArticleTagsVO> all = articleMapper.selectAllWithTags();        return new PageInfo<>(all);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/ArticleServiceImpl.java", "stars": "1", "class": {"name": "ArticleServiceImpl", "extends": null, "implements": ["ArticleService"], "modifiers": ["public"]}}, {"method_name": "setResult", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setResult(String code, String message){\t\tthis.code = code;\t\tthis.message = message;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setResult", "params": ["String", "String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setResult(String code, String message, Object vo){\t\tthis.code = code;\t\tthis.message = message;\t\tthis.vo = vo;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setResult", "params": ["String", "String", "Object", "Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setResult(String code, String message, Object vo,Long total){\t\tthis.code = code;\t\tthis.message = message;\t\tthis.vo = vo;\t\tthis.total = total;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getCode() {\t\treturn code;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setCode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCode(String code) {\t\tthis.code = code;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getMessage() {\t\treturn message;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMessage(String message) {\t\tthis.message = message;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getVo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object getVo() {\t\treturn vo;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setVo", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setVo(Object vo) {\t\tthis.vo = vo;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getTotal", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getTotal() {\t\treturn total;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setTotal", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTotal(Long total) {\t\tthis.total = total;\t}", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/utils/ResponseResult.java", "stars": "2", "class": {"name": "ResponseResult", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldGetAndSetField", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetField() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richField\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richField\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetNestedField", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetNestedField() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richType.richField\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richType.richField\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetProperty", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetProperty() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richProperty\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richProperty\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetNestedProperty", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetNestedProperty() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richType.richProperty\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richType.richProperty\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetMapPair", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetMapPair() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richMap.key\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richMap.key\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetMapPairUsingArraySyntax", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetMapPairUsingArraySyntax() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richMap[key]\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richMap[key]\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetNestedMapPair", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetNestedMapPair() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richType.richMap.key\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richType.richMap.key\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetNestedMapPairUsingArraySyntax", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetNestedMapPairUsingArraySyntax() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richType.richMap[key]\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richType.richMap[key]\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetListItem", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetListItem() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richList[0]\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richList[0]\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldSetAndGetSelfListItem", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldSetAndGetSelfListItem() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richList[0]\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richList[0]\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAndSetNestedListItem", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAndSetNestedListItem() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    meta.setValue(\"richType.richList[0]\", \"foo\");    assertEquals(\"foo\", meta.getValue(\"richType.richList[0]\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetReadablePropertyNames", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetReadablePropertyNames() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    String[] readables = meta.getGetterNames();    assertEquals(5, readables.length);    for (String readable : readables) {      assertTrue(meta.hasGetter(readable));      assertTrue(meta.hasGetter(\"richType.\" + readable));    }    assertTrue(meta.hasGetter(\"richType\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetWriteablePropertyNames", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetWriteablePropertyNames() {    RichType rich = new RichType();    MetaObject meta = SystemMetaObject.forObject(rich);    String[] writeables = meta.getSetterNames();    assertEquals(5, writeables.length);    for (String writeable : writeables) {      assertTrue(meta.hasSetter(writeable));      assertTrue(meta.hasSetter(\"richType.\" + writeable));    }    assertTrue(meta.hasSetter(\"richType\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldSetPropertyOfNullNestedProperty", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldSetPropertyOfNullNestedProperty() {    MetaObject richWithNull = SystemMetaObject.forObject(new RichType());    richWithNull.setValue(\"richType.richProperty\", \"foo\");    assertEquals(\"foo\", richWithNull.getValue(\"richType.richProperty\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldSetPropertyOfNullNestedPropertyWithNull", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldSetPropertyOfNullNestedPropertyWithNull() {    MetaObject richWithNull = SystemMetaObject.forObject(new RichType());    richWithNull.setValue(\"richType.richProperty\", null);    assertNull(richWithNull.getValue(\"richType.richProperty\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetPropertyOfNullNestedProperty", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetPropertyOfNullNestedProperty() {    MetaObject richWithNull = SystemMetaObject.forObject(new RichType());    assertNull(richWithNull.getValue(\"richType.richProperty\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldVerifyHasReadablePropertiesReturnedByGetReadablePropertyNames", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldVerifyHasReadablePropertiesReturnedByGetReadablePropertyNames() {    MetaObject object = SystemMetaObject.forObject(new Author());    for (String readable : object.getGetterNames()) {      assertTrue(object.hasGetter(readable));    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldVerifyHasWriteablePropertiesReturnedByGetWriteablePropertyNames", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldVerifyHasWriteablePropertiesReturnedByGetWriteablePropertyNames() {    MetaObject object = SystemMetaObject.forObject(new Author());    for (String writeable : object.getSetterNames()) {      assertTrue(object.hasSetter(writeable));    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldSetAndGetProperties", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldSetAndGetProperties() {    MetaObject object = SystemMetaObject.forObject(new Author());    object.setValue(\"email\", \"test\");    assertEquals(\"test\", object.getValue(\"email\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldVerifyPropertyTypes", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldVerifyPropertyTypes() {    MetaObject object = SystemMetaObject.forObject(new Author());    assertEquals(6, object.getSetterNames().length);    assertEquals(int.class, object.getGetterType(\"id\"));    assertEquals(String.class, object.getGetterType(\"username\"));    assertEquals(String.class, object.getGetterType(\"password\"));    assertEquals(String.class, object.getGetterType(\"email\"));    assertEquals(String.class, object.getGetterType(\"bio\"));    assertEquals(Section.class, object.getGetterType(\"favouriteSection\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldDemonstrateDeeplyNestedMapProperties", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateDeeplyNestedMapProperties() {    HashMap<String, String> map = new HashMap<>();    MetaObject metaMap = SystemMetaObject.forObject(map);    assertTrue(metaMap.hasSetter(\"id\"));    assertTrue(metaMap.hasSetter(\"name.first\"));    assertTrue(metaMap.hasSetter(\"address.street\"));    assertFalse(metaMap.hasGetter(\"id\"));    assertFalse(metaMap.hasGetter(\"name.first\"));    assertFalse(metaMap.hasGetter(\"address.street\"));    metaMap.setValue(\"id\", \"100\");    metaMap.setValue(\"name.first\", \"Clinton\");    metaMap.setValue(\"name.last\", \"Begin\");    metaMap.setValue(\"address.street\", \"1 Some Street\");    metaMap.setValue(\"address.city\", \"This City\");    metaMap.setValue(\"address.province\", \"A Province\");    metaMap.setValue(\"address.postal_code\", \"1A3 4B6\");    assertTrue(metaMap.hasGetter(\"id\"));    assertTrue(metaMap.hasGetter(\"name.first\"));    assertTrue(metaMap.hasGetter(\"address.street\"));    assertEquals(3, metaMap.getGetterNames().length);    assertEquals(3, metaMap.getSetterNames().length);    @SuppressWarnings(\"unchecked\")    Map<String,String> name = (Map<String,String>) metaMap.getValue(\"name\");    @SuppressWarnings(\"unchecked\")    Map<String,String> address = (Map<String,String>) metaMap.getValue(\"address\");    assertEquals(\"Clinton\", name.get(\"first\"));    assertEquals(\"1 Some Street\", address.get(\"street\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldDemonstrateNullValueInMap", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateNullValueInMap() {    HashMap<String, String> map = new HashMap<>();    MetaObject metaMap = SystemMetaObject.forObject(map);    assertFalse(metaMap.hasGetter(\"phone.home\"));    metaMap.setValue(\"phone\", null);    assertTrue(metaMap.hasGetter(\"phone\"));    // hasGetter returns true if the parent exists and is null.    assertTrue(metaMap.hasGetter(\"phone.home\"));    assertTrue(metaMap.hasGetter(\"phone.home.ext\"));    assertNull(metaMap.getValue(\"phone\"));    assertNull(metaMap.getValue(\"phone.home\"));    assertNull(metaMap.getValue(\"phone.home.ext\"));    metaMap.setValue(\"phone.office\", \"789\");    assertFalse(metaMap.hasGetter(\"phone.home\"));    assertFalse(metaMap.hasGetter(\"phone.home.ext\"));    assertEquals(\"789\", metaMap.getValue(\"phone.office\"));    assertNotNull(metaMap.getValue(\"phone\"));    assertNull(metaMap.getValue(\"phone.home\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldNotUseObjectWrapperFactoryByDefault", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldNotUseObjectWrapperFactoryByDefault() {    MetaObject meta = SystemMetaObject.forObject(new Author());    assertTrue(!meta.getObjectWrapper().getClass().equals(CustomBeanWrapper.class));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldUseObjectWrapperFactoryWhenSet", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldUseObjectWrapperFactoryWhenSet() {    MetaObject meta = MetaObject.forObject(new Author(), SystemMetaObject.DEFAULT_OBJECT_FACTORY, new CustomBeanWrapperFactory(), new DefaultReflectorFactory());    assertEquals(CustomBeanWrapper.class, meta.getObjectWrapper().getClass());    // Make sure the old default factory is in place and still works    meta = SystemMetaObject.forObject(new Author());    assertNotEquals(CustomBeanWrapper.class, meta.getObjectWrapper().getClass());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldMethodHasGetterReturnTrueWhenListElementSet", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldMethodHasGetterReturnTrueWhenListElementSet() {    List<Object> param1 = new ArrayList<>();    param1.add(\"firstParam\");    param1.add(222);    param1.add(new Date());    Map<String, Object> parametersEmulation = new HashMap<>();    parametersEmulation.put(\"param1\", param1);    parametersEmulation.put(\"filterParams\", param1);    MetaObject meta = SystemMetaObject.forObject(parametersEmulation);    assertEquals(param1.get(0), meta.getValue(\"filterParams[0]\"));    assertEquals(param1.get(1), meta.getValue(\"filterParams[1]\"));    assertEquals(param1.get(2), meta.getValue(\"filterParams[2]\"));    assertTrue(meta.hasGetter(\"filterParams[0]\"));    assertTrue(meta.hasGetter(\"filterParams[1]\"));    assertTrue(meta.hasGetter(\"filterParams[2]\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/reflection/MetaObjectTest.java", "stars": "15", "class": {"name": "MetaObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "parseFile", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "TimedTextObject", "snippet": "    public TimedTextObject parseFile(String fileName, String[] inputString) {        TimedTextObject tto = new TimedTextObject();        Caption caption = new Caption();        int captionNumber = 1;        boolean allGood;        //the file name is saved        tto.fileName = fileName;        int lineCounter = 0;        int stringIndex = 0;        String line;        try {            line = getLine(inputString, stringIndex++);            while (line != null && stringIndex < inputString.length) {                line = line.trim();                lineCounter++;                //if its a blank line, ignore it, otherwise...                if (!line.isEmpty()) {                    allGood = false;                    //the first thing should be an increasing number                    try {                        int num = Integer.parseInt(line);                        if (num != captionNumber)                            throw new Exception();                        else {                            captionNumber++;                            allGood = true;                        }                    } catch (Exception e) {                        tto.warnings += captionNumber + \" expected at line \" + lineCounter;                        tto.warnings += \"\\n skipping to next line\\n\\n\";                    }                    if (allGood) {                        //we go to next line, here the begin and end time should be found                        try {                            lineCounter++;                            line = getLine(inputString, stringIndex++).trim();                            String start = line.substring(0, 12);                            String end = line.substring(line.length() - 12, line.length());                            Time time = new Time(\"hh:mm:ss,ms\", start);                            caption.start = time;                            time = new Time(\"hh:mm:ss,ms\", end);                            caption.end = time;                        } catch (Exception e) {                            tto.warnings += \"incorrect time format at line \" + lineCounter;                            allGood = false;                        }                    }                    if (allGood) {                        //we go to next line where the caption text starts                        lineCounter++;                        line = getLine(inputString, stringIndex++).trim();                        StringBuilder text = new StringBuilder();                        while (!line.isEmpty() && stringIndex < inputString.length) {                            text.append(line).append(\"<br />\");                            line = getLine(inputString, stringIndex++).trim();                            lineCounter++;                        }                        caption.content = text.toString();                        int key = caption.start.mseconds;                        //in case the key is already there, we increase it by a millisecond, since no duplicates are allowed                        while (tto.captions.containsKey(key)) key++;                        if (key != caption.start.mseconds)                            tto.warnings += \"caption with same start time found...\\n\\n\";                        //we add the caption.                        tto.captions.put(key, caption);                    }                    //we go to next blank                    while (!line.isEmpty() && stringIndex < inputString.length) {                        line = getLine(inputString, stringIndex++).trim();                        lineCounter++;                    }                    caption = new Caption();                }                if (stringIndex < inputString.length) {                    line = getLine(inputString, stringIndex++);                }            }        } catch (NullPointerException e) {            tto.warnings += \"unexpected end of file, maybe last caption is not complete.\\n\\n\";        }        tto.built = true;        return tto;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/FormatSRT.java", "stars": "4", "class": {"name": "FormatSRT", "extends": "TimedTextFileFormat", "implements": null, "modifiers": ["public"]}}, {"method_name": "toFile", "params": ["TimedTextObject"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String[] toFile(TimedTextObject tto) {        //first we check if the TimedTextObject had been built, otherwise...        if (!tto.built)            return null;        //we will write the lines in an ArrayList,        int index = 0;        //the minimum size of the file is 4*number of captions, so we'll take some extra space.        ArrayList<String> file = new ArrayList<>(5 * tto.captions.size());        //we iterate over our captions collection, they are ordered since they come from a TreeMap        Collection<Caption> c = tto.captions.values();        Iterator<Caption> itr = c.iterator();        int captionNumber = 1;        while (itr.hasNext()) {            //new caption            Caption current = itr.next();            //number is written            file.add(index++, \"\" + captionNumber++);            //we check for offset value:            if (tto.offset != 0) {                current.start.mseconds += tto.offset;                current.end.mseconds += tto.offset;            }            //time is written            file.add(index++, current.start.getTime(\"hh:mm:ss,ms\") + \" --> \" + current.end.getTime(\"hh:mm:ss,ms\"));            //offset is undone            if (tto.offset != 0) {                current.start.mseconds -= tto.offset;                current.end.mseconds -= tto.offset;            }            //text is added            String[] lines = cleanTextForSRT(current);            int i = 0;            while (i < lines.length)                file.add(index++, \"\" + lines[i++]);            //we add the next blank line            file.add(index++, \"\");        }        return file.toArray(new String[file.size()]);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/FormatSRT.java", "stars": "4", "class": {"name": "FormatSRT", "extends": "TimedTextFileFormat", "implements": null, "modifiers": ["public"]}}, {"method_name": "cleanTextForSRT", "params": ["Caption"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String[] cleanTextForSRT(Caption current) {        String[] lines;        String text = current.content;        //add line breaks        lines = text.split(\"<br />\");        //clean XML        for (int i = 0; i < lines.length; i++) {            //this will destroy all remaining XML tags            lines[i] = lines[i].replaceAll(\"<.*?>\", \"\");        }        return lines;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/FormatSRT.java", "stars": "4", "class": {"name": "FormatSRT", "extends": "TimedTextFileFormat", "implements": null, "modifiers": ["public"]}}, {"method_name": "addHeaders", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "    public Map<String, String> addHeaders(String url) {        Debuger.printfLog(\"****** proxy addHeaders ****** \" + mMapHeadData.size());        return mMapHeadData;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/cache/ProxyCacheUserAgentHeadersInjector.java", "stars": "2", "class": {"name": "ProxyCacheUserAgentHeadersInjector", "extends": null, "implements": ["HeaderInjector"], "modifiers": ["public"]}}, {"method_name": "getView", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent) {        ViewHolder holder = null;         LayoutInflater mInflater = (LayoutInflater)context.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);        if (convertView == null) {            convertView = mInflater.inflate(R.layout.list_item, null);            holder = new ViewHolder();            holder.txtDesc = (TextView) convertView.findViewById(R.id.desc);            holder.txtTitle = (TextView) convertView.findViewById(R.id.title);            holder.imageView = (ImageView) convertView.findViewById(R.id.icon);            convertView.setTag(holder);        }        else {            holder = (ViewHolder) convertView.getTag();        }         RowItem rowItem = (RowItem) getItem(position);         holder.txtDesc.setText(rowItem.getDesc());        holder.txtTitle.setText(rowItem.getTitle());        holder.imageView.setImageResource(rowItem.getImageId());         return convertView;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/CustomBaseAdapter.java", "stars": "74", "class": {"name": "CustomBaseAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {        return rowItems.size();    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/CustomBaseAdapter.java", "stars": "74", "class": {"name": "CustomBaseAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {        return rowItems.get(position);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/CustomBaseAdapter.java", "stars": "74", "class": {"name": "CustomBaseAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItemId", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {        return rowItems.indexOf(getItem(position));    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/customlistviewBaseAdapter/src/com/example/customlistviewbaseadapter/CustomBaseAdapter.java", "stars": "74", "class": {"name": "CustomBaseAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "precioMedioAutomovil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int precioMedioAutomovil() {        return 8500000;    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/L/Audi_L.java", "stars": "1", "class": {"name": "Audi_L", "extends": "AbsAutomovil_L", "implements": null, "modifiers": ["public"]}}, {"method_name": "numAsientos", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int numAsientos() {        return 4;    }", "url": "https://raw.githubusercontent.com/EduarAlexis/SOLID/master/src/main/java/Solid/L/Audi_L.java", "stars": "1", "class": {"name": "Audi_L", "extends": "AbsAutomovil_L", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        //\u57fa\u672c\u7c7b\u578b->\u5b57\u7b26\u4e32(String)        int i1 = 100;        String s1 = i1+\"\";        System.out.println(s1+200);//100200        String s2 = Integer.toString(100);        System.out.println(s2+200);//100200        String s3 = String.valueOf(100);        System.out.println(s3+200);//100200        //\u5b57\u7b26\u4e32(String)->\u57fa\u672c\u7c7b\u578b        int i = Integer.parseInt(s1);        System.out.println(i-10);        int a = Integer.parseInt(\"a\");//NumberFormatException        System.out.println(a);    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo07Integer/Demo03Integer.java", "stars": "2", "class": {"name": "Demo03Integer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isDirWritable", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean isDirWritable(final File dir) {    File testFile = null;    try {      testFile = new File(dir, \"_tmp\");      /*       * Create and delete a dummy file in order to check file permissions. Maybe       * there is a safer way for this check.       */      testFile.createNewFile();    } catch (final IOException e) {      return false;    } finally {      if (testFile != null) {        testFile.delete();      }    }    return true;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "deleteDirectorySilently", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void deleteDirectorySilently(final File dir) {    if (dir != null) {      try {        FileUtils.deleteDirectory(dir);      } catch (final IOException e) {        log.error(\"error when deleting dir {}\", dir, e);      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "dumpNumberToFile", "params": ["Path", "long"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void dumpNumberToFile(final Path filePath, final long num) throws IOException {    try (final BufferedWriter writer = Files        .newBufferedWriter(filePath, StandardCharsets.UTF_8)) {      writer.write(String.valueOf(num));    } catch (final IOException e) {      log.error(\"Failed to write the number {} to the file {}\", num, filePath, e);      throw e;    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readNumberFromFile", "params": ["Path"], "throws": ["IOException", "NumberFormatException"], "modifiers": ["public", "static"], "return_type": "long", "snippet": "  public static long readNumberFromFile(final Path filePath)      throws IOException, NumberFormatException {    final List<String> allLines = Files.readAllLines(filePath);    if (!allLines.isEmpty()) {      return Long.parseLong(allLines.get(0));    } else {      throw new NumberFormatException(\"unable to parse empty file \" + filePath.toString());    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSourcePathFromClass", "params": ["Class<?>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String getSourcePathFromClass(final Class<?> containedClass) {    File file =        new File(containedClass.getProtectionDomain().getCodeSource()            .getLocation().getPath());    if (!file.isDirectory() && file.getName().endsWith(\".class\")) {      final String name = containedClass.getName();      final StringTokenizer tokenizer = new StringTokenizer(name, \".\");      while (tokenizer.hasMoreTokens()) {        tokenizer.nextElement();        file = file.getParentFile();      }      return file.getPath();    } else {      return containedClass.getProtectionDomain().getCodeSource().getLocation()          .getPath();    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "copy", "params": ["File", "File"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void copy(final File sourceDir, final File destDir)          throws IOException {    if (!sourceDir.exists()) {      throw new IOException(\"Source directory \" + sourceDir.getPath()              + \" doesn't exist\");    } else if (!destDir.exists()) {      throw new IOException(\"Destination directory \" + destDir.getPath()              + \" doesn't exist\");    } else if (sourceDir.isFile() && destDir.isFile()) {      throw new IOException(\"Source or Destination is not a directory.\");    }    final Set<String> paths = new HashSet<>();    createDirsFindFiles(sourceDir, sourceDir, destDir, paths);    final StringBuffer buffer = new StringBuffer();    for (String path : paths) {      final File sourceLink = new File(sourceDir, path);      path = \".\" + path;      buffer.append(\"cp -r \").append(sourceLink.getAbsolutePath()).append(\"/*\")              .append(\" \").append(path).append(\";\");    }    runShellCommand(buffer.toString(), destDir);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "runShellCommand", "params": ["String", "File"], "throws": ["IOException"], "modifiers": ["private", "static"], "return_type": "void", "snippet": "  private static void runShellCommand(final String command, final File workingDir)          throws IOException {    final ProcessBuilder builder = new ProcessBuilder().command(\"sh\", \"-c\", command);    builder.directory(workingDir);    // XXX what about stopping threads ??    final Process process = builder.start();    try {      final NullLogger errorLogger = new NullLogger(process.getErrorStream());      final NullLogger inputLogger = new NullLogger(process.getInputStream());      errorLogger.start();      inputLogger.start();      try {        if (process.waitFor() < 0) {          // Assume that the error will be in standard out. Otherwise it'll be          // in standard in.          String errorMessage = errorLogger.getLastMessages();          if (errorMessage.isEmpty()) {            errorMessage = inputLogger.getLastMessages();          }          throw new IOException(errorMessage);        }      } catch (final InterruptedException e) {        log.error(\"InterruptedException in execute runShellCommand, caused by:\" + e);      }    } finally {      IOUtils.closeQuietly(process.getInputStream());      IOUtils.closeQuietly(process.getOutputStream());      IOUtils.closeQuietly(process.getErrorStream());    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createDeepHardlink", "params": ["File", "File"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "  public static int createDeepHardlink(final File sourceDir, final File destDir)      throws IOException {    if (!sourceDir.exists()) {      throw new IOException(\"Source directory \" + sourceDir.getPath()          + \" doesn't exist\");    } else if (!destDir.exists()) {      throw new IOException(\"Destination directory \" + destDir.getPath()          + \" doesn't exist\");    } else if (sourceDir.isFile() && destDir.isFile()) {      throw new IOException(\"Source or Destination is not a directory.\");    }    final Set<String> paths = new HashSet<>();    createDirsFindFiles(sourceDir, sourceDir, destDir, paths);    int linkCount = 0;    for (String path : paths) {      final File sourceLink = new File(sourceDir, path);      path = destDir + path;      final File[] targetFiles = sourceLink.listFiles();      for (final File targetFile : targetFiles) {        if (targetFile.isFile()) {          final File linkFile = new File(path, targetFile.getName());          // NOTE!! If modifying this, you must run this ignored test manually to validate:          // FileIOUtilsTest#testHardlinkCopyOfBigDir          Files.createLink(linkFile.toPath(), Paths.get(targetFile.getAbsolutePath()));          linkCount++;        }      }    }    return linkCount;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createDirsFindFiles", "params": ["File", "File", "File", "Set<String>"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "  private static void createDirsFindFiles(final File baseDir, final File sourceDir,      final File destDir, final Set<String> paths) {    final File[] srcList = sourceDir.listFiles();    final String path = getRelativePath(baseDir, sourceDir);    paths.add(path);    for (final File file : srcList) {      if (file.isDirectory()) {        final File newDestDir = new File(destDir, file.getName());        newDestDir.mkdirs();        createDirsFindFiles(baseDir, file, newDestDir, paths);      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getRelativePath", "params": ["File", "File"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "  private static String getRelativePath(final File basePath, final File sourceDir) {    return sourceDir.getPath().substring(basePath.getPath().length());  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readUtf8File", "params": ["File", "int", "int", "OutputStream"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "Pair<Integer,Integer>", "snippet": "  public static Pair<Integer, Integer> readUtf8File(final File file, final int offset,      final int length, final OutputStream stream) throws IOException {    final byte[] buffer = new byte[length];    final FileInputStream fileStream = new FileInputStream(file);    final long skipped = fileStream.skip(offset);    if (skipped < offset) {      fileStream.close();      return new Pair<>(0, 0);    }    BufferedInputStream inputStream = null;    try {      inputStream = new BufferedInputStream(fileStream);      inputStream.read(buffer);    } finally {      IOUtils.closeQuietly(inputStream);      IOUtils.closeQuietly(fileStream);    }    final Pair<Integer, Integer> utf8Range = getUtf8Range(buffer, 0, length);    stream.write(buffer, utf8Range.getFirst(), utf8Range.getSecond());    return new Pair<>(offset + utf8Range.getFirst(), utf8Range.getSecond());  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readUtf8File", "params": ["File", "int", "int"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "LogData", "snippet": "  public static LogData readUtf8File(final File file, final int fileOffset, final int length)      throws IOException {    final byte[] buffer = new byte[length];    final FileInputStream fileStream = new FileInputStream(file);    log.info(\"file length is {}, available size is {}\", file.length(), fileStream.available());    final long skipped = fileStream.skip(fileOffset);    if (skipped < fileOffset) {      fileStream.close();      return new LogData(fileOffset, 0, \"\");    }    BufferedInputStream inputStream = null;    int read = 0;    try {      inputStream = new BufferedInputStream(fileStream);      read = inputStream.read(buffer);    } finally {      IOUtils.closeQuietly(inputStream);      IOUtils.closeQuietly(fileStream);    }    if (read <= 0) {      return new LogData(fileOffset, 0, \"\");    }    final Pair<Integer, Integer> utf8Range = getUtf8Range(buffer, 0, read);    final String outputString =        new String(buffer, utf8Range.getFirst(), utf8Range.getSecond(), StandardCharsets.UTF_8);    return new LogData(fileOffset + utf8Range.getFirst(),        utf8Range.getSecond(), outputString);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readUtf8MetaDataFile", "params": ["File", "int", "int"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "JobMetaData", "snippet": "  public static JobMetaData readUtf8MetaDataFile(final File file, final int fileOffset,      final int length) throws IOException {    final byte[] buffer = new byte[length];    final FileInputStream fileStream = new FileInputStream(file);    final long skipped = fileStream.skip(fileOffset);    if (skipped < fileOffset) {      fileStream.close();      return new JobMetaData(fileOffset, 0, \"\");    }    BufferedInputStream inputStream = null;    int read = 0;    try {      inputStream = new BufferedInputStream(fileStream);      read = inputStream.read(buffer);    } finally {      IOUtils.closeQuietly(inputStream);      IOUtils.closeQuietly(fileStream);    }    if (read <= 0) {      return new JobMetaData(fileOffset, 0, \"\");    }    final Pair<Integer, Integer> utf8Range = getUtf8Range(buffer, 0, read);    final String outputString =        new String(buffer, utf8Range.getFirst(), utf8Range.getSecond(), StandardCharsets.UTF_8);    return new JobMetaData(fileOffset + utf8Range.getFirst(),        utf8Range.getSecond(), outputString);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getUtf8Range", "params": ["byte", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Pair<Integer,Integer>", "snippet": "  public static Pair<Integer, Integer> getUtf8Range(final byte[] buffer, final int offset,      final int length) {    final int start = getUtf8ByteStart(buffer, offset);    final int end = getUtf8ByteEnd(buffer, offset + length - 1);    return new Pair<>(start, end - start + 1);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getUtf8ByteStart", "params": ["byte", "int"], "throws": null, "modifiers": ["private", "static"], "return_type": "int", "snippet": "  private static int getUtf8ByteStart(final byte[] buffer, final int offset) {    // If it's a proper utf-8, we should find it within the next 6 bytes.    for (int i = offset; i < offset + 6 && i < buffer.length; i++) {      final byte b = buffer[i];      // check the mask 0x80 is 0, which is a proper ascii      if ((0x80 & b) == 0) {        return i;      } else if ((0xC0 & b) == 0xC0) {        return i;      }    }    // Don't know what it is, will just set it as 0    return offset;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getUtf8ByteEnd", "params": ["byte", "int"], "throws": null, "modifiers": ["private", "static"], "return_type": "int", "snippet": "  private static int getUtf8ByteEnd(final byte[] buffer, final int offset) {    // If it's a proper utf-8, we should find it within the previous 12 bytes.    for (int i = offset; i > offset - 11 && i >= 0; i--) {      final byte b = buffer[i];      // check the mask 0x80 is 0, which is a proper ascii. Just return      if ((0x80 & b) == 0) {        return i;      }      if ((b & 0xE0) == 0xC0) { // two byte utf8 char. bits 110x xxxx        if (offset - i >= 1) {          // There is 1 following byte we're good.          return i + 1;        }      } else if ((b & 0xF0) == 0xE0) { // three byte utf8 char. bits 1110 xxxx        if (offset - i >= 2) {          // There is 1 following byte we're good.          return i + 2;        }      } else if ((b & 0xF8) == 0xF0) { // four byte utf8 char. bits 1111 0xxx        if (offset - i >= 3) {          // There is 1 following byte we're good.          return i + 3;        }      } else if ((b & 0xFC) >= 0xF8) { // five byte utf8 char. bits 1111 10xx        if (offset - i == 4) {          // There is 1 following byte we're good.          return i + 4;        }      } else if ((b & 0xFE) == 0xFC) { // six byte utf8 char. bits 1111 110x        if (offset - i >= 5) {          // There is 1 following byte we're good.          return i + 5;        }      }    }    // Don't know what it is, will just set it as 0    return offset;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "deleteDir", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean deleteDir(File dir){    if(dir.isDirectory()){      String[] children = dir.list();      for(String path : children){        boolean success = deleteDir(new File(dir, path));        if (!success){          return false;        }      }    }    return dir.delete();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "genShellFile", "params": ["List<String>", "String", "String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String genShellFile(List<String> cmds, String workDir, String fileName) throws IOException{    String name = String.format(\"%s/%s.sh\", workDir, fileName);    File f = new File(name);    if (!f.exists()) {      StringBuilder sb = new StringBuilder();      sb.append(\"#!/bin/sh\\n\");      sb.append(\"\\n\\n\");      sb.append(\"set -o nounset\\n\");      sb.append(\"set -o errexit\\n\");      sb.append(\"BASEDIR=$(cd `dirname $0`; pwd)\\n\");      sb.append(\"cd $BASEDIR\\n\");      for(String cmd: cmds) {        sb.append(String.format(\"echo 'exec cmd: %s'\\n\", cmd));        sb.append(cmd);      }      FileUtils.writeStringToFile(f, sb.toString(), Charset.forName(\"UTF-8\"));    }    return f.getName();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "genKillScript", "params": ["String", "String", "String", "int"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String genKillScript(String cmd, String workDir, String fileName, int pid) throws IOException{    String name = String.format(\"%s/%s.sh\", workDir, fileName);    File f = new File(name);    if (!f.exists()) {      StringBuilder sb = new StringBuilder();      sb.append(\"#!/bin/sh\\n\");      sb.append(\"\\n\");      sb.append(String.format(\"p=`ps -ef | grep %d | grep -v grep | awk '{print($2)}'`\\n\", pid));      sb.append(\"echo \\\"kill pid:\\\"$p\\n\");      sb.append(cmd + \" $p\");      FileUtils.writeStringToFile(f, sb.toString(), Charset.forName(\"UTF-8\"));    }    return f.getAbsolutePath();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findFile", "params": ["File", "String", "List<File>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void findFile(File baseDir, String targetFileName, List<File> resultFiles){    if(baseDir.isDirectory()){      File tmpFiles[] = baseDir.listFiles(new FileFilter() {        @Override        public boolean accept(File pathname) {          if(pathname.isDirectory()){            return true;          }          if(pathname.isFile() && pathname.getName().equals(targetFileName)){            resultFiles.add(pathname);          }          return false;        }      });      if(resultFiles.size() != 0){        return;      }      for(File f: tmpFiles){        findFile(f, targetFileName, resultFiles);      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "FileIOUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "accept", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean accept(final File pathname) {      if (!pathname.isFile() || pathname.isHidden()) {        return false;      }      final String name = pathname.getName();      final int length = name.length();      if (this.suffix.length() > length || this.prefix.length() > length) {        return false;      }      return name.startsWith(this.prefix) && name.endsWith(this.suffix);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "PrefixSuffixFileFilter", "extends": null, "implements": ["FileFilter"], "modifiers": ["public", "static"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {      try {        while (!Thread.currentThread().isInterrupted()) {          final String line = this.inputReader.readLine();          if (line == null) {            return;          }          this.buffer.append(line);        }      } catch (final IOException e) {        log.error(\"IOException in execute thread action, caused by:\" + e);      }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "NullLogger", "extends": "Thread", "implements": null, "modifiers": ["private", "static"]}}, {"method_name": "getLastMessages", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLastMessages() {      final StringBuffer messageBuffer = new StringBuffer();      for (final String message : this.buffer) {        messageBuffer.append(message);        messageBuffer.append(\"\\n\");      }      return messageBuffer.toString();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "NullLogger", "extends": "Thread", "implements": null, "modifiers": ["private", "static"]}}, {"method_name": "createLogDataFromObject", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "LogData", "snippet": "    public static LogData createLogDataFromObject(final Map<String, Object> map) {      final int offset = (Integer) map.get(\"offset\");      final int length = (Integer) map.get(\"length\");      final String data = (String) map.get(\"data\");      return new LogData(offset, length, data);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "LogData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getOffset", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOffset() {      return this.offset;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "LogData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getLength", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLength() {      return this.length;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "LogData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getData() {      return this.data;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "LogData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "toObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> toObject() {      final HashMap<String, Object> map = new HashMap<>();      map.put(\"offset\", this.offset);      map.put(\"length\", this.length);      map.put(\"data\", this.data);      return map;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "LogData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {      return \"[offset=\" + this.offset + \",length=\" + this.length + \",data=\" + this.data + \"]\";    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "LogData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "createJobMetaDataFromObject", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public", "static"], "return_type": "JobMetaData", "snippet": "    public static JobMetaData createJobMetaDataFromObject(        final Map<String, Object> map) {      final int offset = (Integer) map.get(\"offset\");      final int length = (Integer) map.get(\"length\");      final String data = (String) map.get(\"data\");      return new JobMetaData(offset, length, data);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "JobMetaData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getOffset", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOffset() {      return this.offset;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "JobMetaData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getLength", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLength() {      return this.length;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "JobMetaData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getData() {      return this.data;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "JobMetaData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "toObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> toObject() {      final HashMap<String, Object> map = new HashMap<>();      map.put(\"offset\", this.offset);      map.put(\"length\", this.length);      map.put(\"data\", this.data);      return map;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "JobMetaData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {      return \"[offset=\" + this.offset + \",length=\" + this.length + \",data=\" + this.data + \"]\";    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/FileIOUtils.java", "stars": "18", "class": {"name": "JobMetaData", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "show", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void show() {        if (once) {            mFloatView.init();            once = false;            isShow = true;        } else {            if (isShow) return;            getView().setVisibility(View.VISIBLE);            isShow = true;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "hide", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hide() {        if (once || !isShow) return;        getView().setVisibility(View.INVISIBLE);        isShow = false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "dismiss", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void dismiss() {        mFloatView.dismiss();        isShow = false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "updateX", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateX(int x) {        checkMoveType();        mB.xOffset = x;        mFloatView.updateX(x);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "updateY", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateY(int y) {        checkMoveType();        mB.yOffset = y;        mFloatView.updateY(y);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "updateX", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateX(int screenType, float ratio) {        checkMoveType();        mB.xOffset = (int) ((screenType == Screen.width ?                Util.getScreenWidth(mB.mApplicationContext) :                Util.getScreenHeight(mB.mApplicationContext)) * ratio);        mFloatView.updateX(mB.xOffset);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "updateY", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateY(int screenType, float ratio) {        checkMoveType();        mB.yOffset = (int) ((screenType == Screen.width ?                Util.getScreenWidth(mB.mApplicationContext) :                Util.getScreenHeight(mB.mApplicationContext)) * ratio);        mFloatView.updateY(mB.yOffset);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "getX", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getX() {        return mFloatView.getX();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "getY", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getY() {        return mFloatView.getY();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "getView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView() {        return mB.mView;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "postHide", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void postHide() {        if (once || !isShow) return;        getView().post(new Runnable() {            @Override            public void run() {                getView().setVisibility(View.INVISIBLE);            }        });        isShow = false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "checkMoveType", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkMoveType() {        if (mB.mMoveType == MoveType.fixed) {            throw new IllegalArgumentException(\"FloatWindow of this tag is not allowed to move!\");        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "initTouchEvent", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initTouchEvent() {        switch (mB.mMoveType) {            case MoveType.free:                break;            default:                getView().setOnTouchListener(new View.OnTouchListener() {                    float lastX, lastY, changeX, changeY;                    int newX, newY;                    @Override                    public boolean onTouch(View v, MotionEvent event) {                        switch (event.getAction()) {                            case MotionEvent.ACTION_DOWN:                                lastX = event.getRawX();                                lastY = event.getRawY();                                cancelAnimator();                                break;                            case MotionEvent.ACTION_MOVE:                                changeX = event.getRawX() - lastX;                                changeY = event.getRawY() - lastY;                                newX = (int) (mFloatView.getX() + changeX);                                newY = (int) (mFloatView.getY() + changeY);                                mFloatView.updateXY(newX, newY);                                lastX = event.getRawX();                                lastY = event.getRawY();                                break;                            case MotionEvent.ACTION_UP:                                switch (mB.mMoveType) {                                    case MoveType.slide:                                        int startX = mFloatView.getX();                                        int endX = (startX * 2 + v.getWidth() >                                                Util.getScreenWidth(mB.mApplicationContext)) ?                                                Util.getScreenWidth(mB.mApplicationContext) - v.getWidth() : 0;                                        mAnimator = ObjectAnimator.ofInt(startX, endX);                                        mAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {                                            @Override                                            public void onAnimationUpdate(ValueAnimator animation) {                                                int x = (int) animation.getAnimatedValue();                                                mFloatView.updateX(x);                                            }                                        });                                        startAnimator();                                        break;                                    case MoveType.back:                                        PropertyValuesHolder pvhX = PropertyValuesHolder.ofInt(\"x\", mFloatView.getX(), mB.xOffset);                                        PropertyValuesHolder pvhY = PropertyValuesHolder.ofInt(\"y\", mFloatView.getY(), mB.yOffset);                                        mAnimator = ObjectAnimator.ofPropertyValuesHolder(pvhX, pvhY);                                        mAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {                                            @Override                                            public void onAnimationUpdate(ValueAnimator animation) {                                                int x = (int) animation.getAnimatedValue(\"x\");                                                int y = (int) animation.getAnimatedValue(\"y\");                                                mFloatView.updateXY(x, y);                                            }                                        });                                        startAnimator();                                        break;                                }                                break;                        }                        return false;                    }                });        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "startAnimator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startAnimator() {        if (mB.mInterpolator == null) {            if (mDecelerateInterpolator == null) {                mDecelerateInterpolator = new DecelerateInterpolator();            }            mB.mInterpolator = mDecelerateInterpolator;        }        mAnimator.setInterpolator(mB.mInterpolator);        mAnimator.addListener(new AnimatorListenerAdapter() {            @Override            public void onAnimationEnd(Animator animation) {                mAnimator.removeAllUpdateListeners();                mAnimator.removeAllListeners();                mAnimator = null;            }        });        mAnimator.setDuration(mB.mDuration).start();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "cancelAnimator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cancelAnimator() {        if (mAnimator != null && mAnimator.isRunning()) {            mAnimator.cancel();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/IFloatWindowImpl.java", "stars": "2", "class": {"name": "IFloatWindowImpl", "extends": "IFloatWindow", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setUp() throws Exception {    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/parametrizedlist/Config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/parametrizedlist/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java", "stars": "15", "class": {"name": "ParametrizedListTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testShouldDetectUsersAsParameterInsideAList", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testShouldDetectUsersAsParameterInsideAList() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      List<User<String>> list = mapper.getAListOfUsers();      Assertions.assertEquals(User.class, list.get(0).getClass());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java", "stars": "15", "class": {"name": "ParametrizedListTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testShouldDetectUsersAsParameterInsideAMap", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testShouldDetectUsersAsParameterInsideAMap() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      Map<Integer, User<String>> map = mapper.getAMapOfUsers();      Assertions.assertEquals(User.class, map.get(1).getClass());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java", "stars": "15", "class": {"name": "ParametrizedListTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testShouldGetAUserAsAMap", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testShouldGetAUserAsAMap() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      Map<String, Object> map = mapper.getUserAsAMap();      Assertions.assertEquals(1, map.get(\"ID\"));    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java", "stars": "15", "class": {"name": "ParametrizedListTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testShouldGetAListOfMaps", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testShouldGetAListOfMaps() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      List<Map<String, Object>> map = mapper.getAListOfMaps();      Assertions.assertEquals(1, map.get(0).get(\"ID\"));    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/parametrizedlist/ParametrizedListTest.java", "stars": "15", "class": {"name": "ParametrizedListTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "executeProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\t\tif (dependencies.get(\"entity\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency entity for procedure RightClickedSyringa!\");\t\t\treturn;\t\t}\t\tif (dependencies.get(\"x\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency x for procedure RightClickedSyringa!\");\t\t\treturn;\t\t}\t\tif (dependencies.get(\"y\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency y for procedure RightClickedSyringa!\");\t\t\treturn;\t\t}\t\tif (dependencies.get(\"z\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency z for procedure RightClickedSyringa!\");\t\t\treturn;\t\t}\t\tif (dependencies.get(\"world\") == null) {\t\t\tSystem.err.println(\"Failed to load dependency world for procedure RightClickedSyringa!\");\t\t\treturn;\t\t}\t\tEntity entity = (Entity) dependencies.get(\"entity\");\t\tint x = (int) dependencies.get(\"x\");\t\tint y = (int) dependencies.get(\"y\");\t\tint z = (int) dependencies.get(\"z\");\t\tWorld world = (World) dependencies.get(\"world\");\t\tif ((((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\t\t\t\t.getItem() == new ItemStack(Blocks.AIR, (int) (1)).getItem())) {\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.FLOWER_POT.getDefaultState(), 3);\t\t\tif (entity instanceof LivingEntity) {\t\t\t\tItemStack _setstack = new ItemStack(SyringaBlock.block, (int) (1));\t\t\t\t_setstack.setCount((int) 1);\t\t\t\t((LivingEntity) entity).setHeldItem(Hand.MAIN_HAND, _setstack);\t\t\t\tif (entity instanceof ServerPlayerEntity)\t\t\t\t\t((ServerPlayerEntity) entity).inventory.markDirty();\t\t\t}\t\t}\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/RightClickedSyringaProcedure.java", "stars": "2", "class": {"name": "RightClickedSyringaProcedure", "extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"method_name": "onAttachedToWindow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {        super.onAttachedToWindow();        animator.start();    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice14FlipboardView.java", "stars": "2", "class": {"name": "Practice14FlipboardView", "extends": "View", "implements": null, "modifiers": ["public"]}}, {"method_name": "onDetachedFromWindow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {        super.onDetachedFromWindow();        animator.end();    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice14FlipboardView.java", "stars": "2", "class": {"name": "Practice14FlipboardView", "extends": "View", "implements": null, "modifiers": ["public"]}}, {"method_name": "setDegree", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDegree(int degree) {        this.degree = degree;        invalidate();    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice14FlipboardView.java", "stars": "2", "class": {"name": "Practice14FlipboardView", "extends": "View", "implements": null, "modifiers": ["public"]}}, {"method_name": "onDraw", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {        super.onDraw(canvas);        int bitmapWidth = bitmap.getWidth();        int bitmapHeight = bitmap.getHeight();        int centerX = getWidth() / 2;        int centerY = getHeight() / 2;        int x = centerX - bitmapWidth / 2;        int y = centerY - bitmapHeight / 2;        // \u7b2c\u4e00\u904d\u7ed8\u5236\uff1a\u4e0a\u534a\u90e8\u5206        canvas.save();        canvas.clipRect(0, 0, getWidth(), centerY);        canvas.drawBitmap(bitmap, x, y, paint);        canvas.restore();        // \u7b2c\u4e8c\u904d\u7ed8\u5236\uff1a\u4e0b\u534a\u90e8\u5206        canvas.save();        if (degree < 90) {            canvas.clipRect(0, centerY, getWidth(), getHeight());        } else {            canvas.clipRect(0, 0, getWidth(), centerY);        }        camera.save();        camera.rotateX(degree);        canvas.translate(centerX, centerY);        camera.applyToCanvas(canvas);        canvas.translate(-centerX, -centerY);        camera.restore();        canvas.drawBitmap(bitmap, x, y, paint);        canvas.restore();    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice14FlipboardView.java", "stars": "2", "class": {"name": "Practice14FlipboardView", "extends": "View", "implements": null, "modifiers": ["public"]}}, {"method_name": "startPrepare", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void startPrepare() {        GSYMediaPlayerListener listener = getGSYVideoManager().listener();        super.startPrepare();        if (listener != null) {            listener.onAutoCompletion();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/ListADVideoPlayer.java", "stars": "2", "class": {"name": "ListADVideoPlayer", "extends": "GSYADVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "onAutoCompletion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAutoCompletion() {        super.onAutoCompletion();        if (!isCurrentMediaListener() && mVideoAllCallBack != null) {            Debuger.printfLog(\"onAutoComplete\");            mVideoAllCallBack.onAutoComplete(mOriginUrl, mTitle, this);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/ListADVideoPlayer.java", "stars": "2", "class": {"name": "ListADVideoPlayer", "extends": "GSYADVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCompletion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCompletion() {        super.onCompletion();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/ListADVideoPlayer.java", "stars": "2", "class": {"name": "ListADVideoPlayer", "extends": "GSYADVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBoundSql", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "BoundSql", "snippet": "  public BoundSql getBoundSql(Object parameterObject) {    DynamicContext context = new DynamicContext(configuration, parameterObject);    rootSqlNode.apply(context);    SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);    Class<?> parameterType = parameterObject == null ? Object.class : parameterObject.getClass();    SqlSource sqlSource = sqlSourceParser.parse(context.getSql(), parameterType, context.getBindings());    BoundSql boundSql = sqlSource.getBoundSql(parameterObject);    context.getBindings().forEach(boundSql::setAdditionalParameter);    return boundSql;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/DynamicSqlSource.java", "stars": "15", "class": {"name": "DynamicSqlSource", "extends": null, "implements": ["SqlSource"], "modifiers": ["public"]}}, {"method_name": "getSql", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSql(){    DynamicContext context = new DynamicContext(configuration, null);    rootSqlNode.apply(context);    SqlSourceBuilder sqlSourceParser = new SqlSourceBuilder(configuration);    Class<?> parameterType = Object.class;    SqlSource sqlSource = sqlSourceParser.parse(context.getSql(), parameterType, context.getBindings());    BoundSql boundSql = sqlSource.getBoundSql(null);    context.getBindings().forEach(boundSql::setAdditionalParameter);    return boundSql.getSql();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/DynamicSqlSource.java", "stars": "15", "class": {"name": "DynamicSqlSource", "extends": null, "implements": ["SqlSource"], "modifiers": ["public"]}}, {"method_name": "getRootSqlNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SqlNode", "snippet": "  public SqlNode getRootSqlNode() {    return rootSqlNode;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/DynamicSqlSource.java", "stars": "15", "class": {"name": "DynamicSqlSource", "extends": null, "implements": ["SqlSource"], "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {        return id;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {        this.id = id;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getUsername", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {        return username;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setUsername", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsername(String username) {        this.username = username;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOperation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperation() {        return operation;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setOperation", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOperation(String operation) {        this.operation = operation;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getTime() {        return time;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setTime", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTime(Long time) {        this.time = time;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMethod", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMethod() {        return method;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setMethod", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMethod(String method) {        this.method = method;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getParams", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getParams() {        return params;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setParams", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParams(String params) {        this.params = params;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getIp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIp() {        return ip;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setIp", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIp(String ip) {        this.ip = ip;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCreateTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getCreateTime() {        return createTime;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setCreateTime", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Long createTime) {        this.createTime = createTime;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLocation() {        return location;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setLocation", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLocation(String location) {        this.location = location;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/po/SystemLog.java", "stars": "1", "class": {"name": "SystemLog", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        Mediator mediator = new MediatorImpl();        Colleague colleague1 = new ColleagueImpl();        mediator.register(colleague1);        colleague1.send();    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/mediator/MediatorTest.java", "stars": "2", "class": {"name": "MediatorTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addOnChangedListener", "params": ["OnChangedListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addOnChangedListener(OnChangedListener listener) {        mListeners.add(listener);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "removeOnChangedListener", "params": ["OnChangedListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeOnChangedListener(OnChangedListener listener) {        mListeners.remove(listener);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "start", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {        if (!mTracking) {            mSensorManager.registerListener(mSensorListener,                    mSensorManager.getDefaultSensor(Sensor.TYPE_ROTATION_VECTOR),                    SensorManager.SENSOR_DELAY_UI);            // The rotation vector sensor doesn't give us accuracy updates, so we observe the            // magnetic field sensor solely for those.            mSensorManager.registerListener(mSensorListener,                    mSensorManager.getDefaultSensor(Sensor.TYPE_MAGNETIC_FIELD),                    SensorManager.SENSOR_DELAY_UI);            Location lastLocation = mLocationManager                    .getLastKnownLocation(LocationManager.PASSIVE_PROVIDER);            if (lastLocation != null) {                long locationAge = lastLocation.getTime() - System.currentTimeMillis();                if (locationAge < MAX_LOCATION_AGE_MILLIS) {                    mLocation = lastLocation;                    updateGeomagneticField();                }            }            if (mLocationProvider != null) {                mLocationManager.requestLocationUpdates(mLocationProvider,                        MILLIS_BETWEEN_LOCATIONS, METERS_BETWEEN_LOCATIONS, mLocationListener,                        Looper.getMainLooper());            }            mTracking = true;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "stop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {        if (mTracking) {            mSensorManager.unregisterListener(mSensorListener);            mLocationManager.removeUpdates(mLocationListener);            mTracking = false;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "hasInterference", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasInterference() {        return mHasInterference;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "hasLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasLocation() {        return mLocation != null;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getHeading", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getHeading() {        return mHeading;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPitch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getPitch() {        return mPitch;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getLocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Location", "snippet": "    public Location getLocation() {        return mLocation;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "notifyOrientationChanged", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void notifyOrientationChanged() {        for (OnChangedListener listener : mListeners) {            listener.onOrientationChanged(this);        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "notifyLocationChanged", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void notifyLocationChanged() {        for (OnChangedListener listener : mListeners) {            listener.onLocationChanged(this);        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "notifyAccuracyChanged", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void notifyAccuracyChanged() {        for (OnChangedListener listener : mListeners) {            listener.onAccuracyChanged(this);        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "updateGeomagneticField", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateGeomagneticField() {        mGeomagneticField = new GeomagneticField((float) mLocation.getLatitude(),                (float) mLocation.getLongitude(), (float) mLocation.getAltitude(),                mLocation.getTime());    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "computeTrueNorth", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float computeTrueNorth(float heading) {        if (mGeomagneticField != null) {            return heading + mGeomagneticField.getDeclination();        } else {            return heading;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Compass/src/com/google/android/glass/sample/compass/OrientationManager.java", "stars": "74", "class": {"name": "OrientationManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/group_chat.java", "stars": "2", "class": {"name": "group_chat", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreateView", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        View rootView = inflater.inflate(R.layout.fragment_group_chat, container, false);        mdatabase = FirebaseDatabase.getInstance();        mdatabasereferences = mdatabase.getReference().child(\"messages\");        mfirebaseauth = FirebaseAuth.getInstance();        // Initialize references to views        mMessageListView = (ListView) rootView.findViewById(R.id.messageListView);        mMessageEditText = (EditText) rootView.findViewById(R.id.messageEditText);        mSendButton = (Button) rootView.findViewById(R.id.sendButton);        // Initialize message ListView and its adapter        List<FriendlyMessage> friendlyMessages = new ArrayList<>();        mMessageAdapter = new MessageAdapter(getContext(), R.layout.group_chat_child, friendlyMessages);        mMessageListView.setAdapter(mMessageAdapter);        attachReadListener();        mMessageEditText.addTextChangedListener(new TextWatcher() {            @Override            public void beforeTextChanged(CharSequence charSequence, int i, int i1, int i2) {            }            @Override            public void onTextChanged(CharSequence charSequence, int i, int i1, int i2) {                if (charSequence.toString().trim().length() > 0) {                    mSendButton.setEnabled(true);                } else {                    mSendButton.setEnabled(false);                }            }            @Override            public void afterTextChanged(Editable editable) {            }        });        mMessageEditText.setFilters(new InputFilter[]{new InputFilter.LengthFilter(DEFAULT_MSG_LENGTH_LIMIT)});        mSendButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                SharedPreferences sf = getActivity().getSharedPreferences(\"Login data\", Context.MODE_PRIVATE);                String s = sf.getString(\"user\",\"unable to fetch\");                mUsername = s;                FriendlyMessage friendlyMessage = new FriendlyMessage(mMessageEditText.getText().toString(),mUsername,null);                mdatabasereferences.push().setValue(friendlyMessage);                // Clear input box                mMessageEditText.setText(\"\");            }        });        return rootView;    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/group_chat.java", "stars": "2", "class": {"name": "group_chat", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onPause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {        super.onPause();        Log.e(TAG, \"onPause: deatching listerner!!\");        detachReadListener();        mMessageAdapter.clear();    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/group_chat.java", "stars": "2", "class": {"name": "group_chat", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onResume", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume(){        super.onResume();        Log.e(TAG, \"onPause: attaching listener!!\");        attachReadListener();    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/group_chat.java", "stars": "2", "class": {"name": "group_chat", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "attachReadListener", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void attachReadListener(){        Log.e(TAG, \"onPause: attached listerner!!\");        if(childEventListener == null) {            Log.e(TAG, \"onPause: andar wala  listerner!!\");            childEventListener = new ChildEventListener() {                @Override                public void onChildAdded(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {                    Log.e(TAG, \" maine to daal diya listerner!!\");                    FriendlyMessage friendlyMessage = dataSnapshot.getValue(FriendlyMessage.class);                    mMessageAdapter.add(friendlyMessage);                }                @Override                public void onChildChanged(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {                }                @Override                public void onChildRemoved(@NonNull DataSnapshot dataSnapshot) {                }                @Override                public void onChildMoved(@NonNull DataSnapshot dataSnapshot, @Nullable String s) {                }                @Override                public void onCancelled(@NonNull DatabaseError databaseError) {                }            };            mdatabasereferences.addChildEventListener(childEventListener);        }    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/group_chat.java", "stars": "2", "class": {"name": "group_chat", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "detachReadListener", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void detachReadListener(){        if(childEventListener != null){            mdatabasereferences.removeEventListener(childEventListener);            childEventListener = null;        }    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/group_chat.java", "stars": "2", "class": {"name": "group_chat", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "processStatusUpdate", "params": ["DependencyInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void processStatusUpdate(final DependencyInstance depInst) {    //this is blocking call, might offload it to another thread if necessary.    this.flowTriggerInstanceLoader.updateDependencyExecutionStatus(depInst);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstanceProcessor.java", "stars": "18", "class": {"name": "DependencyInstanceProcessor", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "contextLoads", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {    }", "url": "https://raw.githubusercontent.com/mqxu/spring-boot-review/master/spring-boot-jpa/src/test/java/com/soft1851/springboot/jpa/SpringBootJpaApplicationTests.java", "stars": "3", "class": {"name": "SpringBootJpaApplicationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {    return \"DependencyInstanceRuntimePropsImpl{\" +        \"props=\" + this.props +        '}';  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstanceRuntimePropsImpl.java", "stars": "18", "class": {"name": "DependencyInstanceRuntimePropsImpl", "extends": null, "implements": ["DependencyInstanceRuntimeProps"], "modifiers": ["public"]}}, {"method_name": "get", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String get(final String key) {    return this.props.get(key);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstanceRuntimePropsImpl.java", "stars": "18", "class": {"name": "DependencyInstanceRuntimePropsImpl", "extends": null, "implements": ["DependencyInstanceRuntimeProps"], "modifiers": ["public"]}}, {"method_name": "onPacket", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {        if (event.getType().equals(PacketEvent.Type.INCOMING)) {            if (event.getPacket() instanceof SPacketChat) {                if (event.getPacket() instanceof SPacketChat && ((SPacketChat) event.getPacket()).getChatComponent().getUnformattedText().contains(\"whispers:\"))                    mc.player.sendChatMessage(\"/r \" + message);            }        }    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/misc/AutoReply.java", "stars": "12", "class": {"name": "AutoReply", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long  getId() {        return id;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long  id) {        this.id = id;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getFirstName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFirstName() {        return firstName;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setFirstName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFirstName(String firstName) {        this.firstName = firstName;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getLastName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLastName() {        return lastName;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setLastName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastName(String lastName) {        this.lastName = lastName;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {        return address;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setAddress", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {        this.address = address;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCity() {        return city;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setCity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCity(String city) {        this.city = city;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getZipcode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getZipcode() {        return zipcode;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setZipcode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setZipcode(String zipcode) {        this.zipcode = zipcode;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getInsurancePlan", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getInsurancePlan() {        return insurancePlan;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setInsurancePlan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInsurancePlan(String insurancePlan) {        this.insurancePlan = insurancePlan;    }", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/entity/Patient.java", "stars": "2", "class": {"name": "Patient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "compareTo", "params": ["CTMConfig"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int compareTo(CTMConfig other) {\t\tif(getResourcePackPriority() != other.getResourcePackPriority()) {\t\t\treturn getResourcePackPriority() - other.getResourcePackPriority();\t\t}\t\t\t\tif(getWeight() != other.getWeight()) {\t\t\treturn getWeight() - other.getWeight();\t\t}\t\t\t\tif(!getFileName().equals(other.getFileName())) {\t\t\treturn getFileName().compareTo(other.getFileName());\t\t}\t\t\t\treturn 0;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getTileProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TileProvider", "snippet": "\tpublic TileProvider getTileProvider() {\t\treturn tileProvider;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getTileMatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Predicate<Identifier>", "snippet": "\tpublic Predicate<Identifier> getTileMatcher() {\t\treturn tileMatcher;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getFaceMatcher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Predicate<Direction>", "snippet": "\tpublic Predicate<Direction> getFaceMatcher() {\t\treturn faceMatcher;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getWorldConditions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BiPredicate<BlockRenderView,BlockPos>", "snippet": "\tpublic BiPredicate<BlockRenderView, BlockPos> getWorldConditions() {\t\treturn worldConditions;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "createSpriteProvider", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "SpriteProvider", "snippet": "\tpublic SpriteProvider createSpriteProvider(Sprite[] sprites) {\t\treturn spriteProviderFactory.create(sprites, getSelf());\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "affectsModel", "params": ["ModelIdentifier", "Supplier<Collection>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean affectsModel(ModelIdentifier id, Supplier<Collection<SpriteIdentifier>> textureDeps) {\t\treturn (blockMatcher.test(id) || blockMatcher.test(CBTUtil.stripVariants(id))) && (tileMatcher == null || CBTUtil.mapAnyMatch(textureDeps.get(), SpriteIdentifier::getTextureId, tileMatcher));\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getResourcePackPriority", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getResourcePackPriority() {\t\treturn packPriority;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getWeight", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getWeight() {\t\treturn weight;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getFileName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getFileName() {\t\treturn fileName;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "getSelf", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "Self", "snippet": "\tprotected abstract Self getSelf(); //java pls}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/BaseCTMConfig.java", "stars": "3", "class": {"name": "BaseCTMConfig", "extends": null, "implements": ["CTMConfig"], "modifiers": ["public", "abstract"]}}, {"method_name": "diameterOfBinaryTree", "params": ["TreeNode"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int diameterOfBinaryTree(TreeNode root) {        depthFirst(root);        return maximum - 1;    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/DiameterOfBinaryTree.java", "stars": "1", "class": {"name": "DiameterOfBinaryTree", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "depthFirst", "params": ["TreeNode"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int depthFirst(TreeNode node) {        if (node == null) {            return 0;        }        int left = depthFirst(node.left);        int right = depthFirst(node.right);        maximum = Math.max(maximum, left + right + 1);        return Math.max(left, right) + 1;    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/DiameterOfBinaryTree.java", "stars": "1", "class": {"name": "DiameterOfBinaryTree", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_signup);        // hooks        regName = findViewById(R.id.name);        regUsername = findViewById(R.id.username);        regEmail = findViewById(R.id.email);        regPhoneNo = findViewById(R.id.phoneNo);        regPassword = findViewById(R.id.password);        regBtn = findViewById(R.id.reg_btn);        regToLoginBtn = findViewById(R.id.reg_login_btn);        regToLoginBtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                startActivity(new Intent(Signup.this,login.class));            }        });        regBtn.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View view) {                   if (!validateName() | !validateUsername() | !validateEmail() | !validatePhoneNo() | !validatePassword())                       return;                rootNode = FirebaseDatabase.getInstance();                reference = rootNode.getReference(\"users\");                //get all values                String name = regName.getEditText().getText().toString();                String username = regUsername.getEditText().getText().toString();                String phoneNo =  regPhoneNo.getEditText().getText().toString();                String email = regEmail.getEditText().getText().toString();                String password =  regPassword.getEditText().getText().toString();                Intent intent = new Intent(getApplicationContext(),verify_phone_no.class);                intent.putExtra(\"phoneNo\",phoneNo);                startActivity(intent);                UserHelperClass  helperClass = new UserHelperClass(name,username,phoneNo,email,password);                reference.child(username).setValue(helperClass);            }        });    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/Signup.java", "stars": "3", "class": {"name": "Signup", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "validateName", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private Boolean validateName(){        String val = regName.getEditText().getText().toString();        if(val.isEmpty()) {            regName.setError(\"Field cannot be empty\");            return false;        }            else{                regName.setError(null);                regName.setErrorEnabled(false);                return true;            }    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/Signup.java", "stars": "3", "class": {"name": "Signup", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "validateUsername", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private Boolean validateUsername(){        String val = regUsername.getEditText().getText().toString();        String noWhiteSpace = \"\\\\A\\\\w{4,20}\\\\z\";        if(val.isEmpty()) {            regUsername.setError(\"Field cannot be empty\");            return false;        }        else if(val.length()>=15){            regUsername.setError(\"Username too long\");            return false;        }        else if(! val.matches(noWhiteSpace)){            regUsername.setError(\" White Spaces  are not allowed\");            return false;        }        else{            regUsername.setError(null);            return true;        }    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/Signup.java", "stars": "3", "class": {"name": "Signup", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "validateEmail", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private Boolean validateEmail(){        String val = regEmail.getEditText().getText().toString();        String emailPattern = \"[a-zA-z0-9._-]+@[a-z]+\\\\.+[a-z]+\";        if(val.isEmpty()) {            regEmail.setError(\"Field cannot be empty\");            return false;        }        else if(!val.matches(emailPattern)){            regEmail.setError(\"Invalid Email address\");            return false;        }        else{            regEmail.setError(null);            return true;        }    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/Signup.java", "stars": "3", "class": {"name": "Signup", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "validatePhoneNo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private Boolean validatePhoneNo(){        String val = regPhoneNo.getEditText().getText().toString();        if(val.isEmpty()) {            regPhoneNo.setError(\"Field cannot be empty\");            return false;        }        else{            regPhoneNo.setError(null);            return true;        }    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/Signup.java", "stars": "3", "class": {"name": "Signup", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "validatePassword", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private Boolean validatePassword(){        String val = regPassword.getEditText().getText().toString();        String passwordVal = \"^\"+                \"(?=.*[a-zA-Z])\"+                \"(?=.[@#$%^&+=])\"+                \"(?=\\\\s+$)\"+                \".{4,}\"+                \"$\";        if(val.isEmpty()) {            regPassword.setError(\"Field cannot be empty\");            return false;        }        else{            regPassword.setError(null);            return true;        }    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/Signup.java", "stars": "3", "class": {"name": "Signup", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "setApplicationContext", "params": ["ApplicationContext"], "throws": ["BeansException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setApplicationContext(ApplicationContext applicationContext)            throws BeansException {    \tSpringBeanFactory.applicationContext = applicationContext;    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/utils/SpringBeanFactory.java", "stars": "29", "class": {"name": "SpringBeanFactory", "extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "getApplicationContext", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ApplicationContext", "snippet": "    public static ApplicationContext getApplicationContext() {        return applicationContext;    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/utils/SpringBeanFactory.java", "stars": "29", "class": {"name": "SpringBeanFactory", "extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "getBean", "params": ["String"], "throws": ["BeansException"], "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object getBean(String beanId) throws BeansException {        return applicationContext.getBean(beanId);    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/utils/SpringBeanFactory.java", "stars": "29", "class": {"name": "SpringBeanFactory", "extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "getActiveProfile", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getActiveProfile() {        return applicationContext.getEnvironment().getActiveProfiles()[0];    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/utils/SpringBeanFactory.java", "stars": "29", "class": {"name": "SpringBeanFactory", "extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run() {\t\tImageView imageView = imageViewRef.get();\t\tif (imageView == null) {\t\t\tif (loggingEnabled) L.d(LOG_TASK_CANCELLED_IMAGEVIEW_LOST, memoryCacheKey);\t\t\tlistener.onLoadingCancelled(imageUri, imageView);\t\t} else if (isViewWasReused(imageView)) {\t\t\tif (loggingEnabled) L.d(LOG_TASK_CANCELLED_IMAGEVIEW_REUSED, memoryCacheKey);\t\t\tlistener.onLoadingCancelled(imageUri, imageView);\t\t} else {\t\t\tif (loggingEnabled) L.d(LOG_DISPLAY_IMAGE_IN_IMAGEVIEW, loadedFrom, memoryCacheKey);\t\t\tBitmap displayedBitmap = displayer.display(bitmap, imageView, loadedFrom);\t\t\tlistener.onLoadingComplete(imageUri, imageView, displayedBitmap);\t\t\tengine.cancelDisplayTaskFor(imageView);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DisplayBitmapTask.java", "stars": "74", "class": {"name": "DisplayBitmapTask", "extends": null, "implements": ["Runnable"], "modifiers": ["final"]}}, {"method_name": "isViewWasReused", "params": ["ImageView"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean isViewWasReused(ImageView imageView) {\t\tString currentCacheKey = engine.getLoadingUriForView(imageView);\t\treturn !memoryCacheKey.equals(currentCacheKey);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DisplayBitmapTask.java", "stars": "74", "class": {"name": "DisplayBitmapTask", "extends": null, "implements": ["Runnable"], "modifiers": ["final"]}}, {"method_name": "setLoggingEnabled", "params": ["boolean"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid setLoggingEnabled(boolean loggingEnabled) {\t\tthis.loggingEnabled = loggingEnabled;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DisplayBitmapTask.java", "stars": "74", "class": {"name": "DisplayBitmapTask", "extends": null, "implements": ["Runnable"], "modifiers": ["final"]}}, {"method_name": "hashCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {        return HashCodeBuilder.reflectionHashCode(this, false);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/base/BaseObject.java", "stars": "23", "class": {"name": "BaseObject", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "equals", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object object) {        return EqualsBuilder.reflectionEquals(this, object, false);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/base/BaseObject.java", "stars": "23", "class": {"name": "BaseObject", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        return ToStringBuilder.reflectionToString(this,                ToStringStyle.MULTI_LINE_STYLE);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/base/BaseObject.java", "stars": "23", "class": {"name": "BaseObject", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDao", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "IBaseDao<DataSourceModel>", "snippet": "    protected IBaseDao<DataSourceModel> getDao() {        return modelDao;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "add", "params": ["DataSourceModel"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean add(DataSourceModel modelAssembly) {        return super.add(modelAssembly);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "exist", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean exist(Integer id){        return modelDao.selectOne(id) != null;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "update", "params": ["DataSourceModel"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean update(DataSourceModel modelAssembly) {        return super.update(modelAssembly);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "getCount", "params": ["PageQuery"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCount(PageQuery pageQuery) {        return super.getCount(pageQuery);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "get", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "DataSourceModel", "snippet": "    public DataSourceModel get(Object id) {        return super.get(id);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "findPage", "params": ["PageQuery"], "throws": null, "modifiers": ["public"], "return_type": "PageList<DataSourceModel>", "snippet": "    public PageList<DataSourceModel> findPage(PageQuery pageQuery) {        return super.findPage(pageQuery);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "selectAllList", "params": ["PageQuery"], "throws": null, "modifiers": ["public"], "return_type": "List<DataSourceModel>", "snippet": "    public List<DataSourceModel> selectAllList(PageQuery pageQuery) {        return super.selectAllList(pageQuery);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "queryFilter", "params": ["DataSourceModel"], "throws": null, "modifiers": ["protected"], "return_type": "DataSourceModel", "snippet": "    protected DataSourceModel queryFilter(DataSourceModel templateStrucure) {        return super.queryFilter(templateStrucure);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceModelServiceImpl.java", "stars": "23", "class": {"name": "DataSourceModelServiceImpl", "extends": "AbstractGenericService", "implements": ["DataSourceModelService"], "modifiers": ["public"]}}, {"method_name": "contextLoads", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\t}", "url": "https://raw.githubusercontent.com/aadeeshjain/User-Registration-Login-SpringBoot/master/UserRegistration1/src/test/java/io/aadeesh/UserRegistration1ApplicationTests.java", "stars": "1", "class": {"name": "UserRegistration1ApplicationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "saveItemType", "params": ["Context", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveItemType(Context context, int selectedLayout) {        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);        SharedPreferences.Editor editor = preferences.edit();        editor.putInt(CURRENT_LAYOUT_ID, selectedLayout);        editor.apply();    }", "url": "https://raw.githubusercontent.com/Aman817/Sandwich_Club/master/app/src/main/java/com/aman/sandwichclub/utils/SharedPrefsUtils.java", "stars": "2", "class": {"name": "SharedPrefsUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getItemType", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getItemType(Context context) {        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(context);        return preferences.getInt(CURRENT_LAYOUT_ID, LIST_LAYOUT_ID);    }", "url": "https://raw.githubusercontent.com/Aman817/Sandwich_Club/master/app/src/main/java/com/aman/sandwichclub/utils/SharedPrefsUtils.java", "stars": "2", "class": {"name": "SharedPrefsUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "index", "params": ["Model"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String index(Model model) {        // \u6267\u884c\u5668\u5217\u8868        List<XxlJobGroup> groupList = xxlJobGroupDao.findAll();        model.addAttribute(\"groupList\", groupList);        return \"user/user.index\";    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/UserController.java", "stars": "1", "class": {"name": "UserController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pageList", "params": ["int", "int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> pageList(@RequestParam(required = false, defaultValue = \"0\") int start,                                        @RequestParam(required = false, defaultValue = \"10\") int length,                                        String username, int role) {        // page list        List<XxlJobUser> list = xxlJobUserDao.pageList(start, length, username, role);        int list_count = xxlJobUserDao.pageListCount(start, length, username, role);        // package result        Map<String, Object> maps = new HashMap<String, Object>();        maps.put(\"recordsTotal\", list_count);\t\t// \u603b\u8bb0\u5f55\u6570        maps.put(\"recordsFiltered\", list_count);\t// \u8fc7\u6ee4\u540e\u7684\u603b\u8bb0\u5f55\u6570        maps.put(\"data\", list);  \t\t\t\t\t// \u5206\u9875\u5217\u8868        return maps;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/UserController.java", "stars": "1", "class": {"name": "UserController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "add", "params": ["XxlJobUser"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> add(XxlJobUser xxlJobUser) {        // valid username        if (!StringUtils.hasText(xxlJobUser.getUsername())) {            return new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"system_please_input\")+I18nUtil.getString(\"user_username\") );        }        xxlJobUser.setUsername(xxlJobUser.getUsername().trim());        if (!(xxlJobUser.getUsername().length()>=4 && xxlJobUser.getUsername().length()<=20)) {            return new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"system_lengh_limit\")+\"[4-20]\" );        }        // valid password        if (!StringUtils.hasText(xxlJobUser.getPassword())) {            return new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"system_please_input\")+I18nUtil.getString(\"user_password\") );        }        xxlJobUser.setPassword(xxlJobUser.getPassword().trim());        if (!(xxlJobUser.getPassword().length()>=4 && xxlJobUser.getPassword().length()<=20)) {            return new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"system_lengh_limit\")+\"[4-20]\" );        }        // md5 password        xxlJobUser.setPassword(DigestUtils.md5DigestAsHex(xxlJobUser.getPassword().getBytes()));        // check repeat        XxlJobUser existUser = xxlJobUserDao.loadByUserName(xxlJobUser.getUsername());        if (existUser != null) {            return new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"user_username_repeat\") );        }        // write        xxlJobUserDao.save(xxlJobUser);        return ReturnT.SUCCESS;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/UserController.java", "stars": "1", "class": {"name": "UserController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "update", "params": ["HttpServletRequest", "XxlJobUser"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> update(HttpServletRequest request, XxlJobUser xxlJobUser) {        // avoid opt login seft        XxlJobUser loginUser = (XxlJobUser) request.getAttribute(LoginService.LOGIN_IDENTITY_KEY);        if (loginUser.getUsername().equals(xxlJobUser.getUsername())) {            return new ReturnT<String>(ReturnT.FAIL.getCode(), I18nUtil.getString(\"user_update_loginuser_limit\"));        }        // valid password        if (StringUtils.hasText(xxlJobUser.getPassword())) {            xxlJobUser.setPassword(xxlJobUser.getPassword().trim());            if (!(xxlJobUser.getPassword().length()>=4 && xxlJobUser.getPassword().length()<=20)) {                return new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"system_lengh_limit\")+\"[4-20]\" );            }            // md5 password            xxlJobUser.setPassword(DigestUtils.md5DigestAsHex(xxlJobUser.getPassword().getBytes()));        } else {            xxlJobUser.setPassword(null);        }        // write        xxlJobUserDao.update(xxlJobUser);        return ReturnT.SUCCESS;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/UserController.java", "stars": "1", "class": {"name": "UserController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "remove", "params": ["HttpServletRequest", "int"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> remove(HttpServletRequest request, int id) {        // avoid opt login seft        XxlJobUser loginUser = (XxlJobUser) request.getAttribute(LoginService.LOGIN_IDENTITY_KEY);        if (loginUser.getId() == id) {            return new ReturnT<String>(ReturnT.FAIL.getCode(), I18nUtil.getString(\"user_update_loginuser_limit\"));        }        xxlJobUserDao.delete(id);        return ReturnT.SUCCESS;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/UserController.java", "stars": "1", "class": {"name": "UserController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "updatePwd", "params": ["HttpServletRequest", "String"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> updatePwd(HttpServletRequest request, String password){        // valid password        if (password==null || password.trim().length()==0){            return new ReturnT<String>(ReturnT.FAIL.getCode(), \"\u5bc6\u7801\u4e0d\u53ef\u4e3a\u7a7a\");        }        password = password.trim();        if (!(password.length()>=4 && password.length()<=20)) {            return new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"system_lengh_limit\")+\"[4-20]\" );        }        // md5 password        String md5Password = DigestUtils.md5DigestAsHex(password.getBytes());        // update pwd        XxlJobUser loginUser = (XxlJobUser) request.getAttribute(LoginService.LOGIN_IDENTITY_KEY);        // do write        XxlJobUser existUser = xxlJobUserDao.loadByUserName(loginUser.getUsername());        existUser.setPassword(md5Password);        xxlJobUserDao.update(existUser);        return ReturnT.SUCCESS;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/UserController.java", "stars": "1", "class": {"name": "UserController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onDraw", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {        super.onDraw(canvas);        canvas.drawRect(50, top, getWidth() - 50, bottom, paint1);        // \u4f7f\u7528 Paint.getFontMetrics() \u8ba1\u7b97\u51fa\u6587\u5b57\u7684\u663e\u793a\u533a\u57df        // \u7136\u540e\u8ba1\u7b97\u51fa\u6587\u5b57\u7684\u7ed8\u5236\u4f4d\u7f6e\uff0c\u4ece\u800c\u8ba9\u6587\u5b57\u4e0a\u4e0b\u5c45\u4e2d        // \u8fd9\u79cd\u5c45\u4e2d\u7b97\u6cd5\u7684\u4f18\u70b9\u662f\uff0c\u53ef\u4ee5\u8ba9\u4e0d\u540c\u7684\u6587\u5b57\u7684 baseline \u5bf9\u9f50        int middle = (top + bottom) / 2;        canvas.drawText(texts[0], 100, middle + yOffset, paint2);        canvas.drawText(texts[1], 200, middle + yOffset, paint2);        canvas.drawText(texts[2], 300, middle + yOffset, paint2);        canvas.drawText(texts[3], 400, middle + yOffset, paint2);        canvas.drawText(texts[4], 500, middle + yOffset, paint2);        canvas.drawText(texts[5], 600, middle + yOffset, paint2);    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson3/Practice14GetFontMetricsView.java", "stars": "2", "class": {"name": "Practice14GetFontMetricsView", "extends": "View", "implements": null, "modifiers": ["public"]}}, {"method_name": "constructorWithInputStreamValidationVariablesEntityResolver", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithInputStreamValidationVariablesEntityResolver() throws Exception {    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {      XPathParser parser = new XPathParser(inputStream, false, null, null);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithInputStreamValidationVariables", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithInputStreamValidationVariables() throws IOException {    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {      XPathParser parser = new XPathParser(inputStream, false, null);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithInputStreamValidation", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithInputStreamValidation() throws IOException {    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {      XPathParser parser = new XPathParser(inputStream, false);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithInputStream", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithInputStream() throws IOException {    try (InputStream inputStream = Resources.getResourceAsStream(resource)) {      XPathParser parser = new XPathParser(inputStream);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithReaderValidationVariablesEntityResolver", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithReaderValidationVariablesEntityResolver() throws Exception {    try (Reader reader = Resources.getResourceAsReader(resource)) {      XPathParser parser = new XPathParser(reader, false, null, null);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithReaderValidationVariables", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithReaderValidationVariables() throws IOException {    try (Reader reader = Resources.getResourceAsReader(resource)) {      XPathParser parser = new XPathParser(reader, false, null);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithReaderValidation", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithReaderValidation() throws IOException {    try (Reader reader = Resources.getResourceAsReader(resource)) {      XPathParser parser = new XPathParser(reader, false);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithReader", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithReader() throws IOException {    try (Reader reader = Resources.getResourceAsReader(resource)) {      XPathParser parser = new XPathParser(reader);      testEvalMethod(parser);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithStringValidationVariablesEntityResolver", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithStringValidationVariablesEntityResolver() throws Exception {    XPathParser parser = new XPathParser(getXmlString(resource), false, null, null);    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithStringValidationVariables", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithStringValidationVariables() throws IOException {    XPathParser parser = new XPathParser(getXmlString(resource), false, null);    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithStringValidation", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithStringValidation() throws IOException {    XPathParser parser = new XPathParser(getXmlString(resource), false);    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithString", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void constructorWithString() throws IOException {    XPathParser parser = new XPathParser(getXmlString(resource));    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithDocumentValidationVariablesEntityResolver", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void constructorWithDocumentValidationVariablesEntityResolver() {    XPathParser parser = new XPathParser(getDocument(resource), false, null, null);    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithDocumentValidationVariables", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void constructorWithDocumentValidationVariables() {    XPathParser parser = new XPathParser(getDocument(resource), false, null);    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithDocumentValidation", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void constructorWithDocumentValidation() {    XPathParser parser = new XPathParser(getDocument(resource), false);    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "constructorWithDocument", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void constructorWithDocument() {    XPathParser parser = new XPathParser(getDocument(resource));    testEvalMethod(parser);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getDocument", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Document", "snippet": "  private Document getDocument(String resource) {    try {      InputSource inputSource = new InputSource(Resources.getResourceAsReader(resource));      DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();      factory.setNamespaceAware(false);      factory.setIgnoringComments(true);      factory.setIgnoringElementContentWhitespace(false);      factory.setCoalescing(false);      factory.setExpandEntityReferences(true);      DocumentBuilder builder = factory.newDocumentBuilder();      return builder.parse(inputSource);// already closed resource in builder.parse method    } catch (Exception e) {      throw new BuilderException(\"Error creating document instance.  Cause: \" + e, e);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getXmlString", "params": ["String"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String getXmlString(String resource) throws IOException {    try (BufferedReader bufferedReader = new BufferedReader(Resources.getResourceAsReader(resource))) {      StringBuilder sb = new StringBuilder();      String temp;      while ((temp = bufferedReader.readLine()) != null) {        sb.append(temp);      }      return sb.toString();    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testEvalMethod", "params": ["XPathParser"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void testEvalMethod(XPathParser parser) {    assertEquals((Long) 1970L, parser.evalLong(\"/employee/birth_date/year\"));    assertEquals((short) 6, (short) parser.evalShort(\"/employee/birth_date/month\"));    assertEquals((Integer) 15, parser.evalInteger(\"/employee/birth_date/day\"));    assertEquals((Float) 5.8f, parser.evalFloat(\"/employee/height\"));    assertEquals((Double) 5.8d, parser.evalDouble(\"/employee/height\"));    assertEquals(\"${id_var}\", parser.evalString(\"/employee/@id\"));    assertEquals(Boolean.TRUE, parser.evalBoolean(\"/employee/active\"));    assertEquals(\"<id>${id_var}</id>\", parser.evalNode(\"/employee/@id\").toString().trim());    assertEquals(7, parser.evalNodes(\"/employee/*\").size());    XNode node = parser.evalNode(\"/employee/height\");    assertEquals(\"employee/height\", node.getPath());    assertEquals(\"employee[${id_var}]_height\", node.getValueBasedIdentifier());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "formatXNodeToString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void formatXNodeToString() {    XPathParser parser = new XPathParser(\"<users><user><id>100</id><name>Tom</name><age>30</age><cars><car>BMW</car><car>Audi</car><car>Benz</car></cars></user></users>\");    String usersNodeToString = parser.evalNode(\"/users\").toString();    String userNodeToString = parser.evalNode(\"/users/user\").toString();    String carsNodeToString = parser.evalNode(\"/users/user/cars\").toString();    String usersNodeToStringExpect =      \"<users>\\n\" +      \"    <user>\\n\" +      \"        <id>100</id>\\n\" +      \"        <name>Tom</name>\\n\" +      \"        <age>30</age>\\n\" +      \"        <cars>\\n\" +      \"            <car>BMW</car>\\n\" +      \"            <car>Audi</car>\\n\" +      \"            <car>Benz</car>\\n\" +      \"        </cars>\\n\" +      \"    </user>\\n\" +      \"</users>\\n\";    String userNodeToStringExpect =      \"<user>\\n\" +      \"    <id>100</id>\\n\" +      \"    <name>Tom</name>\\n\" +      \"    <age>30</age>\\n\" +      \"    <cars>\\n\" +      \"        <car>BMW</car>\\n\" +      \"        <car>Audi</car>\\n\" +      \"        <car>Benz</car>\\n\" +      \"    </cars>\\n\" +      \"</user>\\n\";  String carsNodeToStringExpect =      \"<cars>\\n\" +      \"    <car>BMW</car>\\n\" +      \"    <car>Audi</car>\\n\" +      \"    <car>Benz</car>\\n\" +      \"</cars>\\n\";    assertEquals(usersNodeToStringExpect, usersNodeToString);    assertEquals(userNodeToStringExpect, userNodeToString);    assertEquals(carsNodeToStringExpect, carsNodeToString);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/parsing/XPathParserTest.java", "stars": "15", "class": {"name": "XPathParserTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "method", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void method() {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/aop/CheckNetAspect.java", "stars": "1", "class": {"name": "CheckNetAspect", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "aroundJoinPoint", "params": ["ProceedingJoinPoint", "CheckNet"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void aroundJoinPoint(ProceedingJoinPoint joinPoint, CheckNet checkNet) throws Throwable {        Application application = ActivityStackManager.getInstance().getApplication();        if (application != null) {            ConnectivityManager manager = ContextCompat.getSystemService(application, ConnectivityManager.class);            if (manager != null) {                NetworkInfo info = manager.getActiveNetworkInfo();                // \u5224\u65ad\u7f51\u7edc\u662f\u5426\u8fde\u63a5                if (info == null || !info.isConnected()) {                    ToastUtils.show(R.string.common_network);                    return;                }            }        }        //\u6267\u884c\u539f\u65b9\u6cd5        joinPoint.proceed();    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/aop/CheckNetAspect.java", "stars": "1", "class": {"name": "CheckNetAspect", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "keyTyped", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyTyped(KeyEvent e) {    }", "url": "https://raw.githubusercontent.com/4156/MindustryModMaker/master/src/Listener/CodeLIstener.java", "stars": "2", "class": {"name": "CodeLIstener", "extends": null, "implements": ["KeyListener"], "modifiers": ["public"]}}, {"method_name": "keyPressed", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyPressed(KeyEvent e) {        GUI.vector1.clear();        GUI.jlt1.setListData(GUI.vector1);        if(e.getKeyCode() == KeyEvent.VK_N) {            GUI.vector1.add(\"\\\"name\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_O) {            GUI.vector1.add(\"\\\"outputItem\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_A) {            GUI.vector1.add(\"\\\"amount\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_I) {            GUI.vector1.add(\"\\\"items\\\"\");            GUI.vector1.add(\"\\\"idleSound\\\"\");            GUI.vector1.add(\"\\\"idleSoundVolumes\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_U) {            GUI.vector1.add(\"\\\"updateEffect\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_P) {            GUI.vector1.add(\"\\\"power\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_T) {            GUI.vector1.add(\"\\\"type\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_D) {            GUI.vector1.add(\"\\\"description\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_L) {            GUI.vector1.add(\"\\\"liquid\\\"\");            GUI.vector1.add(\"\\\"lead\\\"\");            GUI.vector1.add(\"\\\"liquidCapacity\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_R) {            GUI.vector1.add(\"\\\"requirements\\\"\");            GUI.vector1.add(\"\\\"research\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_S) {            GUI.vector1.add(\"\\\"size\\\"\");            GUI.vector1.add(\"\\\"silicon\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_H) {            GUI.vector1.add(\"\\\"hasItems\\\"\");            GUI.vector1.add(\"\\\"hasLiquids\\\"\");            GUI.vector1.add(\"\\\"hasPower\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }        if(e.getKeyCode() == KeyEvent.VK_C) {            GUI.vector1.add(\"\\\"craftTime\\\"\");            GUI.vector1.add(\"\\\"consumes\\\"\");            GUI.vector1.add(\"\\\"category\\\"\");            GUI.vector1.add(\"\\\"crafting\\\"\");            GUI.jlt1.setListData(GUI.vector1);        }    }", "url": "https://raw.githubusercontent.com/4156/MindustryModMaker/master/src/Listener/CodeLIstener.java", "stars": "2", "class": {"name": "CodeLIstener", "extends": null, "implements": ["KeyListener"], "modifiers": ["public"]}}, {"method_name": "keyReleased", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyReleased(KeyEvent e) {    }", "url": "https://raw.githubusercontent.com/4156/MindustryModMaker/master/src/Listener/CodeLIstener.java", "stars": "2", "class": {"name": "CodeLIstener", "extends": null, "implements": ["KeyListener"], "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {    return id;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithGetXxxWithInterface.java", "stars": "15", "class": {"name": "UserWithGetXxxWithInterface", "extends": null, "implements": ["Owned"], "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {    this.id = id;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithGetXxxWithInterface.java", "stars": "15", "class": {"name": "UserWithGetXxxWithInterface", "extends": null, "implements": ["Owned"], "modifiers": ["public"]}}, {"method_name": "getName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {    return name;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithGetXxxWithInterface.java", "stars": "15", "class": {"name": "UserWithGetXxxWithInterface", "extends": null, "implements": ["Owned"], "modifiers": ["public"]}}, {"method_name": "setName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setName(String name) {    this.name = name;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithGetXxxWithInterface.java", "stars": "15", "class": {"name": "UserWithGetXxxWithInterface", "extends": null, "implements": ["Owned"], "modifiers": ["public"]}}, {"method_name": "getOwner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Group", "snippet": "  public Group getOwner() {    return owner;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithGetXxxWithInterface.java", "stars": "15", "class": {"name": "UserWithGetXxxWithInterface", "extends": null, "implements": ["Owned"], "modifiers": ["public"]}}, {"method_name": "setOwner", "params": ["Group"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setOwner(Group owner) {    this.owner = owner;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithGetXxxWithInterface.java", "stars": "15", "class": {"name": "UserWithGetXxxWithInterface", "extends": null, "implements": ["Owned"], "modifiers": ["public"]}}, {"method_name": "getXxx", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getXxx() {    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/UserWithGetXxxWithInterface.java", "stars": "15", "class": {"name": "UserWithGetXxxWithInterface", "extends": null, "implements": ["Owned"], "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {    Configuration configuration = new Configuration();    Environment environment = new Environment(\"development\", new JdbcTransactionFactory(),      PgContainer.getUnpooledDataSource());    configuration.setEnvironment(environment);    configuration.setUseGeneratedKeys(true);    configuration.addMapper(Mapper.class);    Properties properties = new Properties();    properties.setProperty(\"schema\", \"mbtest.\");    configuration.setVariables(properties);    sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),      \"org/apache/ibatis/submitted/sql/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sql/PostgresSQLTest.java", "stars": "15", "class": {"name": "PostgresSQLTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testFetchFirst", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testFetchFirst() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      {        List<User> users = mapper.findAll(0, 2);        assertEquals(2, users.size());        assertEquals(\"Jimmy\", users.get(0).getName());        assertEquals(\"Iwao\", users.get(1).getName());      }      {        List<User> users = mapper.findAll(1, 2);        assertEquals(2, users.size());        assertEquals(\"Iwao\", users.get(0).getName());        assertEquals(\"Kazuki\", users.get(1).getName());      }      {        List<User> users = mapper.findAll(2, 2);        assertEquals(1, users.size());        assertEquals(\"Kazuki\", users.get(0).getName());      }    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sql/PostgresSQLTest.java", "stars": "15", "class": {"name": "PostgresSQLTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "get", "params": ["PropertyTokenizer"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object get(PropertyTokenizer prop) {    // Not Implemented    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "set", "params": ["PropertyTokenizer", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void set(PropertyTokenizer prop, Object value) {    // Not Implemented  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "findProperty", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String findProperty(String name, boolean useCamelCaseMapping) {    // Not Implemented    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "getGetterNames", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getGetterNames() {    // Not Implemented    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "getSetterNames", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getSetterNames() {    // Not Implemented    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "getSetterType", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getSetterType(String name) {    // Not Implemented    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "getGetterType", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getGetterType(String name) {    // Not Implemented    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "hasSetter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasSetter(String name) {    // Not Implemented    return false;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "hasGetter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasGetter(String name) {    // Not Implemented    return false;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "instantiatePropertyValue", "params": ["String", "PropertyTokenizer", "ObjectFactory"], "throws": null, "modifiers": ["public"], "return_type": "MetaObject", "snippet": "  public MetaObject instantiatePropertyValue(String name, PropertyTokenizer prop, ObjectFactory objectFactory) {    // Not Implemented    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "isCollection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCollection() {    return true;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "add", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void add(Object element) {    ((CustomCollection<Object>) collection).add(element);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "addAll", "params": ["List<E>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <E> void addAll(List<E> element) {    ((CustomCollection<Object>) collection).addAll(element);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/custom_collection_handling/CustomObjectWrapper.java", "stars": "15", "class": {"name": "CustomObjectWrapper", "extends": null, "implements": ["org"], "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {    return delegate.getId();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "getSize", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSize() {    return delegate.getSize();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "putObject", "params": ["Object", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void putObject(Object key, Object object) {    if (object == null || object instanceof Serializable) {      delegate.putObject(key, serialize((Serializable) object));    } else {      throw new CacheException(\"SharedCache failed to make a copy of a non-serializable object: \" + object);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "getObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getObject(Object key) {    Object object = delegate.getObject(key);    return object == null ? null : deserialize((byte[]) object);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "removeObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object removeObject(Object key) {    return delegate.removeObject(key);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "clear", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void clear() {    delegate.clear();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "hashCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {    return delegate.hashCode();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "equals", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object obj) {    return delegate.equals(obj);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "serialize", "params": ["Serializable"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "  private byte[] serialize(Serializable value) {    try (ByteArrayOutputStream bos = new ByteArrayOutputStream();         ObjectOutputStream oos = new ObjectOutputStream(bos)) {      oos.writeObject(value);      oos.flush();      return bos.toByteArray();    } catch (Exception e) {      throw new CacheException(\"Error serializing object.  Cause: \" + e, e);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "deserialize", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "Serializable", "snippet": "  private Serializable deserialize(byte[] value) {    Serializable result;    try (ByteArrayInputStream bis = new ByteArrayInputStream(value);         ObjectInputStream ois = new CustomObjectInputStream(bis)) {      result = (Serializable) ois.readObject();    } catch (Exception e) {      throw new CacheException(\"Error deserializing object.  Cause: \" + e, e);    }    return result;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "SerializedCache", "extends": null, "implements": ["Cache"], "modifiers": ["public"]}}, {"method_name": "resolveClass", "params": ["ObjectStreamClass"], "throws": ["ClassNotFoundException"], "modifiers": ["protected"], "return_type": "Class<?>", "snippet": "    protected Class<?> resolveClass(ObjectStreamClass desc) throws ClassNotFoundException {      return Resources.classForName(desc.getName());    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/cache/decorators/SerializedCache.java", "stars": "15", "class": {"name": "CustomObjectInputStream", "extends": "ObjectInputStream", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "start", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean start() {    Log.d(TAG, \"start\");    if (!isExternalStorageWritable()) {      Log.e(TAG, \"Writing to external media is not possible\");      return false;    }    synchronized (lock) {      isRunning = true;    }    return true;  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/RecordedAudioToFileController.java", "stars": "2", "class": {"name": "RecordedAudioToFileController", "extends": null, "implements": ["SamplesReadyCallback"], "modifiers": ["public"]}}, {"method_name": "stop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stop() {    Log.d(TAG, \"stop\");    synchronized (lock) {      isRunning = false;      if (rawAudioFileOutputStream != null) {        try {          rawAudioFileOutputStream.close();        } catch (IOException e) {          Log.e(TAG, \"Failed to close file with saved input audio: \" + e);        }        rawAudioFileOutputStream = null;      }      fileSizeInBytes = 0;    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/RecordedAudioToFileController.java", "stars": "2", "class": {"name": "RecordedAudioToFileController", "extends": null, "implements": ["SamplesReadyCallback"], "modifiers": ["public"]}}, {"method_name": "isExternalStorageWritable", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isExternalStorageWritable() {    String state = Environment.getExternalStorageState();    if (Environment.MEDIA_MOUNTED.equals(state)) {      return true;    }    return false;  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/RecordedAudioToFileController.java", "stars": "2", "class": {"name": "RecordedAudioToFileController", "extends": null, "implements": ["SamplesReadyCallback"], "modifiers": ["public"]}}, {"method_name": "openRawAudioOutputFile", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void openRawAudioOutputFile(int sampleRate, int channelCount) {    final String fileName = Environment.getExternalStorageDirectory().getPath() + File.separator        + \"recorded_audio_16bits_\" + String.valueOf(sampleRate) + \"Hz\"        + ((channelCount == 1) ? \"_mono\" : \"_stereo\") + \".pcm\";    final File outputFile = new File(fileName);    try {      rawAudioFileOutputStream = new FileOutputStream(outputFile);    } catch (FileNotFoundException e) {      Log.e(TAG, \"Failed to open audio output file: \" + e.getMessage());    }    Log.d(TAG, \"Opened file for recording: \" + fileName);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/RecordedAudioToFileController.java", "stars": "2", "class": {"name": "RecordedAudioToFileController", "extends": null, "implements": ["SamplesReadyCallback"], "modifiers": ["public"]}}, {"method_name": "onWebRtcAudioRecordSamplesReady", "params": ["JavaAudioDeviceModule"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onWebRtcAudioRecordSamplesReady(JavaAudioDeviceModule.AudioSamples samples) {    // The native audio layer on Android should use 16-bit PCM format.    if (samples.getAudioFormat() != AudioFormat.ENCODING_PCM_16BIT) {      Log.e(TAG, \"Invalid audio format\");      return;    }    synchronized (lock) {      // Abort early if stop() has been called.      if (!isRunning) {        return;      }      // Open a new file for the first callback only since it allows us to add audio parameters to      // the file name.      if (rawAudioFileOutputStream == null) {        openRawAudioOutputFile(samples.getSampleRate(), samples.getChannelCount());        fileSizeInBytes = 0;      }    }    // Append the recorded 16-bit audio samples to the open output file.    executor.execute(() -> {      if (rawAudioFileOutputStream != null) {        try {          // Set a limit on max file size. 58348800 bytes corresponds to          // approximately 10 minutes of recording in mono at 48kHz.          if (fileSizeInBytes < MAX_FILE_SIZE_IN_BYTES) {            // Writes samples.getData().length bytes to output stream.            rawAudioFileOutputStream.write(samples.getData());            fileSizeInBytes += samples.getData().length;          }        } catch (IOException e) {          Log.e(TAG, \"Failed to write audio to file: \" + e.getMessage());        }      }    });  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/RecordedAudioToFileController.java", "stars": "2", "class": {"name": "RecordedAudioToFileController", "extends": null, "implements": ["SamplesReadyCallback"], "modifiers": ["public"]}}, {"method_name": "isHappy", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isHappy(int n) {        HashSet<Integer> h=new HashSet<>();        int flag=0;        while(!h.contains(n))        {            h.add(n);            int res=0;            while(n>0)            {                int temp=n%10;                res+=Math.pow(temp,2);                n=n/10;            }            if(res == 1)            {                return true;            }            n=res;        }        return false;    }", "url": "https://raw.githubusercontent.com/aayush-grover/30-Days-LeetCode-Challenge/master/Happy%20Number.java", "stars": "2", "class": {"name": "Solution", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "addSchemaInfo", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addSchemaInfo(String key, Object v){        if(v instanceof String || v.getClass().isPrimitive() || isWrapClass(v.getClass())){            this.schemaInfo.put(key, new SchemaInfoContext(v, SchemaInfoContext.StoreType.SOURCE_OBJECT));        }else{            this.schemaInfo.put(key, new SchemaInfoContext(GsonUtil.toJson(v), SchemaInfoContext.StoreType.JSON));        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "MetaSchema", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSchemaInfo", "params": ["String", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T>T getSchemaInfo(String key, Class<?> clazz){        SchemaInfoContext schemaInfoContext = this.schemaInfo.get(key);        if(schemaInfoContext != null){            if(schemaInfoContext.storeType == SchemaInfoContext.StoreType.JSON){                return GsonUtil.fromJson(String.valueOf(schemaInfoContext.v), clazz);            }            if(schemaInfoContext.v.getClass().equals(clazz)){                return (T) schemaInfoContext.v;            }        }        return null;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "MetaSchema", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSchemaInfoList", "params": ["String", "Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "List<T>", "snippet": "    public <T>List<T> getSchemaInfoList(String key, Class<T> elementClazz){        SchemaInfoContext schemaInfoContext = this.schemaInfo.get(key);        if(schemaInfoContext != null){            return GsonUtil.fromJson(String.valueOf(schemaInfoContext.v), List.class, elementClazz);        }        return null;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "MetaSchema", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSchemaInfoMap", "params": ["String", "Class<K>", "Class<V>"], "throws": null, "modifiers": ["public"], "return_type": "Map<K,V>", "snippet": "    public <K,V>Map<K,V> getSchemaInfoMap(String key, Class<K> kClass, Class<V> vClass){        SchemaInfoContext schemaInfoContext = this.schemaInfo.get(key);        if(schemaInfoContext != null){            return GsonUtil.fromJson(String.valueOf(schemaInfoContext.v), Map.class, kClass, vClass);        }        return null;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "MetaSchema", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getFieldSchemas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<FieldSchema>", "snippet": "    public List<FieldSchema> getFieldSchemas() {        return fieldSchemas;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "MetaSchema", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setFieldSchemas", "params": ["List<FieldSchema>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFieldSchemas(List<FieldSchema> fieldSchemas) {        this.fieldSchemas = fieldSchemas;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "MetaSchema", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isWrapClass", "params": ["Class"], "throws": null, "modifiers": ["private", "static"], "return_type": "boolean", "snippet": "    private static boolean isWrapClass(Class clz){        try{            return ((Class)clz.getField(\"TYPE\").get(null)).isPrimitive();        }catch(Exception e){            return false;        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "MetaSchema", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getName() {            return name;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "setName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setName(String name) {            this.name = name;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getType() {            return type;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "setType", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setType(String type) {            this.type = type;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getComment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getComment() {            return comment;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "setComment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setComment(String comment) {            this.comment = comment;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "        public Map<String, Object> getProps() {            return props;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "setProps", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setProps(Map<String, Object> props) {            this.props = props;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/job/meta/MetaSchema.java", "stars": "23", "class": {"name": "FieldSchema", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "postProcessBeforeInitialization", "params": ["Object", "String"], "throws": ["BeansException"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {        processBean(beanName, bean, bean.getClass());        return bean;    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/processor/EtcdConfigListenerMethodProcessor.java", "stars": "4", "class": {"name": "EtcdConfigListenerMethodProcessor", "extends": null, "implements": ["BeanPostProcessor", "ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "processBean", "params": ["String", "Object", "Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void processBean(String beanName, Object bean, Class<?> beanClass) {        ReflectionUtils.doWithMethods(beanClass, new ReflectionUtils.MethodCallback() {            @Override            public void doWith(Method method)                    throws IllegalArgumentException {                EtcdConfigListener annotation = AnnotationUtils.getAnnotation(method, annotationType);                if (annotation != null) {                    checkCandidateMethod(method, annotation);                    processListenerMethod(bean, method, annotation);                }            }        }, new ReflectionUtils.MethodFilter() {            @Override            public boolean matches(Method method) {                return isListenerMethod(method);            }        });    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/processor/EtcdConfigListenerMethodProcessor.java", "stars": "4", "class": {"name": "EtcdConfigListenerMethodProcessor", "extends": null, "implements": ["BeanPostProcessor", "ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "checkCandidateMethod", "params": ["Method", "EtcdConfigListener"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkCandidateMethod(Method method, EtcdConfigListener annotation) {        Class<?>[] parameterTypes = method.getParameterTypes();        //\u9a8c\u8bc1\u53c2\u6570\u4e2a\u6570        if (parameterTypes.length != 1) {            throw new EtcdConfigException(\"@EtcdConfigListener method \" + method + \" parameters count must be one\");        }        Class<?> targetType = parameterTypes[0];        //\u53c2\u6570\u7c7b\u578b\u5fc5\u987b\u662fString\u6216Properties        if (!targetType.equals(String.class) && !targetType.equals(Properties.class)) {            throw new EtcdConfigException(\"@EtcdConfigListener method \" + method + \" parameter type must be String or Properties\");        }        String dataId = annotation.dataId();        if (StringUtils.isEmpty(dataId)) {            throw new EtcdConfigException(\"@EtcdConfigListener method \" + method + \" dataId is null\");        }    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/processor/EtcdConfigListenerMethodProcessor.java", "stars": "4", "class": {"name": "EtcdConfigListenerMethodProcessor", "extends": null, "implements": ["BeanPostProcessor", "ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "isListenerMethod", "params": ["Method"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isListenerMethod(Method method) {        int modifiers = method.getModifiers();        Class<?> returnType = method.getReturnType();        return isPublic(modifiers) && !isStatic(modifiers) && !isNative(modifiers)                && !isAbstract(modifiers) && void.class.equals(returnType);    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/processor/EtcdConfigListenerMethodProcessor.java", "stars": "4", "class": {"name": "EtcdConfigListenerMethodProcessor", "extends": null, "implements": ["BeanPostProcessor", "ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "processListenerMethod", "params": ["Object", "Method", "EtcdConfigListener"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void processListenerMethod(Object bean, Method method, EtcdConfigListener listener) {        String dataId = listener.dataId();        //\u6ce8\u518c\u7528\u6237\u81ea\u5b9a\u4e49\u76d1\u542c        etcdConfigService.addListener(dataId, new AbstractNotifyUserListener(dataId, listener.timeout()) {            @Override            protected void onReceived(String configInfo) {                Object parameterValue = configInfo;                Class<?>[] parameterTypes = method.getParameterTypes();                Class<?> targetType = parameterTypes[0];                if (targetType.equals(Properties.class)) {                    String type = ConfigTypeUtil.getTypeWithDataId(listener.type(), dataId);                    parameterValue = ConfigParseUtil.toProperties(configInfo, type);                }                ReflectionUtils.invokeMethod(method, bean, parameterValue);                LOG.info(\"notify user dataId={},beanName={},method={}\", dataId, bean.getClass().getSimpleName(), method.getName());            }        });        LOG.info(\"add notifyUserListener success dataId={},beanName={},method={}\", dataId, bean.getClass().getSimpleName(), method.getName());    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/processor/EtcdConfigListenerMethodProcessor.java", "stars": "4", "class": {"name": "EtcdConfigListenerMethodProcessor", "extends": null, "implements": ["BeanPostProcessor", "ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "setApplicationContext", "params": ["ApplicationContext"], "throws": ["BeansException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {        this.etcdConfigService = applicationContext.getBean(EtcdConfigServiceImpl.BEAN_NAME, EtcdConfigServiceImpl.class);    }", "url": "https://raw.githubusercontent.com/zzl520/etcd-config-spring-boot-starter/master/src/main/java/com/zzl/etcd/config/processor/EtcdConfigListenerMethodProcessor.java", "stars": "4", "class": {"name": "EtcdConfigListenerMethodProcessor", "extends": null, "implements": ["BeanPostProcessor", "ApplicationContextAware"], "modifiers": ["public"]}}, {"method_name": "initElements", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\t\telements.items.add(() -> new ItemCustom());\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/item/CharredNetherBrickitemItem.java", "stars": "2", "class": {"name": "CharredNetherBrickitemItem", "extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItemEnchantability", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int getItemEnchantability() {\t\t\treturn 0;\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/item/CharredNetherBrickitemItem.java", "stars": "2", "class": {"name": "ItemCustom", "extends": "Item", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getUseDuration", "params": ["ItemStack"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int getUseDuration(ItemStack itemstack) {\t\t\treturn 0;\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/item/CharredNetherBrickitemItem.java", "stars": "2", "class": {"name": "ItemCustom", "extends": "Item", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getDestroySpeed", "params": ["ItemStack", "BlockState"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "\t\tpublic float getDestroySpeed(ItemStack par1ItemStack, BlockState par2Block) {\t\t\treturn 1F;\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/item/CharredNetherBrickitemItem.java", "stars": "2", "class": {"name": "ItemCustom", "extends": "Item", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "initContainer", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "MySQLContainer<?>", "snippet": "  private static MySQLContainer<?> initContainer() {    @SuppressWarnings(\"resource\")    MySQLContainer<?> container = new MySQLContainer<>().withDatabaseName(DB_NAME).withUsername(USERNAME)        .withPassword(PASSWORD);    container.start();    return container;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/testcontainers/MysqlContainer.java", "stars": "15", "class": {"name": "MysqlContainer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getUnpooledDataSource", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DataSource", "snippet": "  public static DataSource getUnpooledDataSource() {    return new UnpooledDataSource(MysqlContainer.DRIVER, INSTANCE.getJdbcUrl(), MysqlContainer.USERNAME,        MysqlContainer.PASSWORD);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/testcontainers/MysqlContainer.java", "stars": "15", "class": {"name": "MysqlContainer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createFromConfigString", "params": ["String", "String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ConnectableDevice", "snippet": "    public static ConnectableDevice createFromConfigString(String ipAddress, String friendlyName, String modelName, String modelNumber) {        return new ConnectableDevice(ipAddress, friendlyName, modelName, modelNumber);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "createWithId", "params": ["String", "String", "String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ConnectableDevice", "snippet": "    public static ConnectableDevice createWithId(String id, String ipAddress, String friendlyName, String modelName, String modelNumber) {        ConnectableDevice mDevice = new ConnectableDevice(ipAddress, friendlyName, modelName, modelNumber);        mDevice.setId(id);        return mDevice;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ServiceDescription", "snippet": "    public ServiceDescription getServiceDescription() {        return serviceDescription;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setServiceDescription", "params": ["ServiceDescription"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceDescription(ServiceDescription serviceDescription) {        this.serviceDescription = serviceDescription;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setPairingType", "params": ["PairingType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPairingType(PairingType pairingType) {        Collection<DeviceService> services = getServices();        for (DeviceService service : services) {            service.setPairingType(pairingType);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "addService", "params": ["DeviceService"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addService(DeviceService service) {        final List<String> added = getMismatchCapabilities(service.getCapabilities(), getCapabilities());        service.setListener(this);        Util.runOnUI(new Runnable() {            @Override            public void run() {                for (ConnectableDeviceListener listener : listeners)                    listener.onCapabilityUpdated(ConnectableDevice.this, added, new ArrayList<String>());            }        });        services.put(service.getServiceName(), service);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "removeService", "params": ["DeviceService"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeService(DeviceService service) {        removeServiceWithId(service.getServiceName());    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "removeServiceWithId", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeServiceWithId(String serviceId) {        DeviceService service = services.get(serviceId);        if (service == null)            return;        service.disconnect();        services.remove(serviceId);        final List<String> removed = getMismatchCapabilities(service.getCapabilities(), getCapabilities());        Util.runOnUI(new Runnable() {            @Override            public void run() {                for (ConnectableDeviceListener listener : listeners)                    listener.onCapabilityUpdated(ConnectableDevice.this, new ArrayList<String>(), removed);            }        });    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getMismatchCapabilities", "params": ["List<String>", "List<String>"], "throws": null, "modifiers": ["synchronized", "private"], "return_type": "List<String>", "snippet": "    private synchronized List<String> getMismatchCapabilities(List<String> capabilities, List<String> allCapabilities) {         List<String> list = new ArrayList<String>();        for (String cap: capabilities) {            if (!allCapabilities.contains(cap)) {                list.add(cap);            }        }        return list;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getServices", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<DeviceService>", "snippet": "    public Collection<DeviceService> getServices() {        return services.values();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getServiceByName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "DeviceService", "snippet": "    public DeviceService getServiceByName(String serviceName) {        for (DeviceService service : getServices()) {            if (service.getServiceName().equals(serviceName)) {                return service;            }        }        return null;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "removeServiceByName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeServiceByName(String serviceName) {        removeService(getServiceByName(serviceName));    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getServiceWithUUID", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "DeviceService", "snippet": "    public DeviceService getServiceWithUUID(String serviceUUID) {        for (DeviceService service : getServices()) {            if (service.getServiceDescription().getUUID().equals(serviceUUID)) {                return service;            }        }        return null;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "addListener", "params": ["ConnectableDeviceListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addListener(ConnectableDeviceListener listener) {        if (!listeners.contains(listener)) {            listeners.add(listener);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setListener", "params": ["ConnectableDeviceListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setListener(ConnectableDeviceListener listener) {        listeners = new CopyOnWriteArrayList<ConnectableDeviceListener>();        if (listener != null)            listeners.add(listener);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "removeListener", "params": ["ConnectableDeviceListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeListener(ConnectableDeviceListener listener) {        listeners.remove(listener);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getListeners", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ConnectableDeviceListener>", "snippet": "    public List<ConnectableDeviceListener> getListeners() {        return listeners;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "connect", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void connect() {        for (DeviceService service : services.values()) {            if (!service.isConnected()) {                service.connect();            }        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "disconnect", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnect() {        for (DeviceService service: services.values()) {            service.disconnect();        }        Util.runOnUI(new Runnable() {            @Override            public void run() {                for (ConnectableDeviceListener listener : listeners)                    listener.onDeviceDisconnected(ConnectableDevice.this);            }        });    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "isConnected", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {        int connectedCount = 0;        Iterator<DeviceService> iterator = services.values().iterator();        while (iterator.hasNext()) {            DeviceService service = iterator.next();            if (!service.isConnectable()) {                connectedCount++;            } else {                if (service.isConnected())                    connectedCount++;            }        }        return connectedCount >= services.size();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "isConnectable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnectable() {        for (DeviceService service: services.values()) {            if (service.isConnectable())                return true;        }        return false;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "sendPairingKey", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendPairingKey(String pairingKey) {        for (DeviceService service: services.values()) {            service.sendPairingKey(pairingKey);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "cancelPairing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancelPairing() {        for (DeviceService service: services.values()) {            service.cancelPairing();        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getCapabilities", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "List<String>", "snippet": "    public synchronized List<String> getCapabilities() {        List<String> caps = new ArrayList<String>();        for (DeviceService service: services.values()) {            for (String capability: service.getCapabilities()) {                if (!caps.contains(capability)) {                    caps.add(capability);                }            }        }        return caps;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "hasCapability", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasCapability(String capability) {        boolean hasCap = false;        for (DeviceService service: services.values()) {            if (service.hasCapability(capability)) {                hasCap = true;                break;            }        }        return hasCap;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "hasAnyCapability", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasAnyCapability(String... capabilities) {        for (DeviceService service : services.values()) {            if (service.hasAnyCapability(capabilities))                return true;        }        return false;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "hasCapabilities", "params": ["List<String>"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "boolean", "snippet": "    public synchronized boolean hasCapabilities(List<String> capabilities) {        String[] arr = new String[capabilities.size()];        capabilities.toArray(arr);        return hasCapabilities(arr);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "hasCapabilities", "params": ["String"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "boolean", "snippet": "    public synchronized boolean hasCapabilities(String... capabilites) {        boolean hasCaps = true;        for (String capability : capabilites) {            if (!hasCapability(capability)) {                hasCaps = false;                break;            }        }        return hasCaps;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getLauncher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Launcher", "snippet": "    public Launcher getLauncher() {        return getCapability(Launcher.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getMediaPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaPlayer", "snippet": "    public MediaPlayer getMediaPlayer() {        return getCapability(MediaPlayer.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getMediaControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MediaControl", "snippet": "    public MediaControl getMediaControl() {        return getCapability(MediaControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getPlaylistControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PlaylistControl", "snippet": "    public PlaylistControl getPlaylistControl() {        return getCapability(PlaylistControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getVolumeControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "VolumeControl", "snippet": "    public VolumeControl getVolumeControl() {        return getCapability(VolumeControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getWebAppLauncher", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WebAppLauncher", "snippet": "    public WebAppLauncher getWebAppLauncher() {        return getCapability(WebAppLauncher.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getTVControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TVControl", "snippet": "    public TVControl getTVControl() {        return getCapability(TVControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getToastControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ToastControl", "snippet": "    public ToastControl getToastControl() {        return getCapability(ToastControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getTextInputControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TextInputControl", "snippet": "    public TextInputControl getTextInputControl() {        return getCapability(TextInputControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getMouseControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MouseControl", "snippet": "    public MouseControl getMouseControl() {        return getCapability(MouseControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getExternalInputControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExternalInputControl", "snippet": "    public ExternalInputControl getExternalInputControl() {        return getCapability(ExternalInputControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getPowerControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "PowerControl", "snippet": "    public PowerControl getPowerControl() {        return getCapability(PowerControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getKeyControl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "KeyControl", "snippet": "    public KeyControl getKeyControl() {        return getCapability(KeyControl.class);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getCapability", "params": ["Class<T>"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T extends CapabilityMethods> T getCapability(Class<T> controllerClass) {        T foundController = null;        CapabilityPriorityLevel foundControllerPriority = CapabilityPriorityLevel.NOT_SUPPORTED;        for (DeviceService service: services.values()) {            if (service.getAPI(controllerClass) == null)                continue;            T controller = service.getAPI(controllerClass);            CapabilityPriorityLevel controllerPriority = service.getPriorityLevel(controllerClass);            if (foundController == null) {                foundController = controller;                 if (controllerPriority == null || controllerPriority == CapabilityPriorityLevel.NOT_SUPPORTED) {                    Log.w(Util.T, \"We found a mathcing capability class, but no priority level for the class. Please check \\\"getPriorityLevel()\\\" in your class\");                }                foundControllerPriority = controllerPriority;            }            else if (controllerPriority != null && foundControllerPriority != null) {                if (controllerPriority.getValue() > foundControllerPriority.getValue()) {                    foundController = controller;                    foundControllerPriority = controllerPriority;                }            }        }        return foundController;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setIpAddress", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIpAddress(String ipAddress) {        this.ipAddress = ipAddress;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getIpAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIpAddress() {        return ipAddress;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setFriendlyName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFriendlyName(String friendlyName) {        this.friendlyName = friendlyName;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getFriendlyName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFriendlyName() {        return friendlyName;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setLastKnownIPAddress", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastKnownIPAddress(String lastKnownIPAddress) {        this.lastKnownIPAddress = lastKnownIPAddress;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getLastKnownIPAddress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLastKnownIPAddress() {        return lastKnownIPAddress;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setLastSeenOnWifi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastSeenOnWifi(String lastSeenOnWifi) {        this.lastSeenOnWifi = lastSeenOnWifi;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getLastSeenOnWifi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLastSeenOnWifi() {        return lastSeenOnWifi;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setLastConnected", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastConnected(long lastConnected) {        this.lastConnected = lastConnected;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getLastConnected", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLastConnected() {        return lastConnected;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setLastDetection", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastDetection(long lastDetection) {        this.lastDetection = lastDetection;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getLastDetection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLastDetection() {        return lastDetection;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setModelName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelName(String modelName) {        this.modelName = modelName;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getModelName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModelName() {        return modelName;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setModelNumber", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelNumber(String modelNumber) {        this.modelNumber = modelNumber;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getModelNumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModelNumber() {        return modelNumber;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "setId", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(String id) {        this.id = id;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getId() {        if (this.id == null)            this.id = java.util.UUID.randomUUID().toString();        return this.id;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getConnectedServiceNames", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getConnectedServiceNames() {        int serviceCount = getServices().size();        if (serviceCount <= 0)            return null;        String[] serviceNames = new String[serviceCount];        int serviceIndex = 0;        for (DeviceService service : getServices()) {            serviceNames[serviceIndex] = service.getServiceName();            serviceIndex++;        }        // credit: http://stackoverflow.com/a/6623121/2715        StringBuilder sb = new StringBuilder();        for (String serviceName : serviceNames) {             if (sb.length() > 0)                sb.append(\", \");            sb.append(serviceName);        }        return sb.toString();        ////    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "update", "params": ["ServiceDescription"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void update(ServiceDescription description) {        setIpAddress(description.getIpAddress());        setFriendlyName(description.getFriendlyName());        setModelName(description.getModelName());        setModelNumber(description.getModelNumber());        setLastConnected(description.getLastDetection());    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "toJSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject toJSONObject() {        JSONObject deviceObject = new JSONObject();        try {            deviceObject.put(KEY_ID, getId());            deviceObject.put(KEY_LAST_IP, getIpAddress());            deviceObject.put(KEY_FRIENDLY, getFriendlyName());            deviceObject.put(KEY_MODEL_NAME, getModelName());            deviceObject.put(KEY_MODEL_NUMBER, getModelNumber());            deviceObject.put(KEY_LAST_SEEN, getLastSeenOnWifi());            deviceObject.put(KEY_LAST_CONNECTED, getLastConnected());            deviceObject.put(KEY_LAST_DETECTED, getLastDetection());            JSONObject jsonServices = new JSONObject();            for (DeviceService service: services.values()) {                JSONObject serviceObject = service.toJSONObject();                jsonServices.put(service.getServiceConfig().getServiceUUID(), serviceObject);            }            deviceObject.put(KEY_SERVICES, jsonServices);        } catch (JSONException e) {            e.printStackTrace();        }        return deviceObject;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        return toJSONObject().toString();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onCapabilitiesUpdated", "params": ["DeviceService", "List<String>", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCapabilitiesUpdated(DeviceService service, List<String> added, List<String> removed) {        DiscoveryManager.getInstance().onCapabilityUpdated(this, added, removed);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onConnectionFailure", "params": ["DeviceService", "Error"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConnectionFailure(DeviceService service, Error error) {        // disconnect device if all services are not connected        onDisconnect(service, error);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onConnectionRequired", "params": ["DeviceService"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    @Override public void onConnectionRequired(DeviceService service) {    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onConnectionSuccess", "params": ["DeviceService"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConnectionSuccess(DeviceService service) {        //  TODO: iOS is passing to a function for when each service is ready on a device.  This is not implemented on Android.        if (isConnected()) {            ConnectableDeviceStore deviceStore = DiscoveryManager.getInstance().getConnectableDeviceStore();            if (deviceStore != null) {                deviceStore.addDevice(this);            }            Util.runOnUI(new Runnable() {                @Override                public void run() {                    for (ConnectableDeviceListener listener : listeners)                        listener.onDeviceReady(ConnectableDevice.this);                }            });            setLastConnected(Util.getTime());        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onDisconnect", "params": ["DeviceService", "Error"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDisconnect(DeviceService service, Error error) {        if (getConnectedServiceCount() == 0 || services.size() == 0) {            for (ConnectableDeviceListener listener : listeners) {                listener.onDeviceDisconnected(this);            }        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onPairingFailed", "params": ["DeviceService", "Error"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPairingFailed(DeviceService service, Error error) {        for (ConnectableDeviceListener listener : listeners)            listener.onConnectionFailed(this, new ServiceCommandError(0, \"Failed to pair with service \" + service.getServiceName(), null));    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onPairingRequired", "params": ["DeviceService", "PairingType", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPairingRequired(DeviceService service, PairingType pairingType, Object pairingData) {        for (ConnectableDeviceListener listener : listeners)            listener.onPairingRequired(this, service, pairingType);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "onPairingSuccess", "params": ["DeviceService"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    @Override public void onPairingSuccess(DeviceService service) {    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "getConnectedServiceCount", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getConnectedServiceCount() {        int count = 0;        for (DeviceService service : services.values()) {            if (service.isConnectable()) {                if (service.isConnected())                    count++;            } else {                count++;            }        }        return count;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/device/ConnectableDevice.java", "stars": "4", "class": {"name": "ConnectableDevice", "extends": null, "implements": ["DeviceServiceListener"], "modifiers": ["public"]}}, {"method_name": "addView", "params": ["Context", "ViewGroup", "int", "IGSYSurfaceListener", "MeasureHelper", "GSYVideoGLView", "float", "GSYVideoGLViewBaseRender", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addView(Context context, ViewGroup textureViewContainer, int rotate, IGSYSurfaceListener gsySurfaceListener, MeasureHelper.MeasureFormVideoParamsListener videoParamsListener, GSYVideoGLView.ShaderInterface effect, float[] transform, GSYVideoGLViewBaseRender customRender, int mode) {        mShowView = CustomTextureSurface.addSurfaceView(context, textureViewContainer, rotate, gsySurfaceListener, videoParamsListener);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/CustomRenderView.java", "stars": "2", "class": {"name": "CustomRenderView", "extends": "GSYRenderView", "implements": null, "modifiers": ["public"]}}, {"method_name": "servicesAndRepositoriesShouldNotDependOnWebLayer", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void servicesAndRepositoriesShouldNotDependOnWebLayer() {        JavaClasses importedClasses = new ClassFileImporter()            .withImportOption(ImportOption.Predefined.DO_NOT_INCLUDE_TESTS)            .importPackages(\"com.airgnb\");        noClasses()            .that()            .resideInAnyPackage(\"..service..\")            .or()            .resideInAnyPackage(\"..repository..\")            .should().dependOnClassesThat()            .resideInAnyPackage(\"..com.airgnb.web..\")            .because(\"Services and repositories should not depend on web layer\")            .check(importedClasses);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/ArchTest.java", "stars": "2", "class": {"name": "ArchTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getMediaPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMediaPlayer", "snippet": "    public IMediaPlayer getMediaPlayer() {        return mediaPlayer;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "initVideoPlayer", "params": ["Context", "Message", "List<VideoOptionModel>", "ICacheManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initVideoPlayer(Context context, Message msg, List<VideoOptionModel> optionModelList, ICacheManager cacheManager) {        mediaPlayer = new GSYExo2MediaPlayer(context);        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);        if (dummySurface == null) {            dummySurface = DummySurface.newInstanceV17(context, false);        }        try {            mediaPlayer.setLooping(((GSYExoModel) msg.obj).isLooping());            Debuger.printfError(\"###### \" + ((GSYExoModel) msg.obj).getOverrideExtension());            mediaPlayer.setOverrideExtension(((GSYExoModel) msg.obj).getOverrideExtension());            mediaPlayer.setDataSource(((GSYExoModel) msg.obj).getUrls(), ((GSYExoModel) msg.obj).getMapHeadData(), ((GSYExoModel) msg.obj).isCache());            //\u5f88\u9057\u61be\uff0cEXO2\u7684setSpeed\u53ea\u80fd\u5728\u64ad\u653e\u524d\u751f\u6548            if (((GSYExoModel) msg.obj).getSpeed() != 1 && ((GSYExoModel) msg.obj).getSpeed() > 0) {                mediaPlayer.setSpeed(((GSYExoModel) msg.obj).getSpeed(), 1);            }        } catch (Exception e) {            e.printStackTrace();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "showDisplay", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDisplay(Message msg) {        if (mediaPlayer == null) {            return;        }        if (msg.obj == null) {            mediaPlayer.setSurface(dummySurface);        } else {            Surface holder = (Surface) msg.obj;            surface = holder;            mediaPlayer.setSurface(holder);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSpeed", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeed(float speed, boolean soundTouch) {        //\u5f88\u9057\u61be\uff0cEXO2\u7684setSpeed\u53ea\u80fd\u5728\u64ad\u653e\u524d\u751f\u6548        //Debuger.printfError(\"\u5f88\u9057\u61be\uff0c\u76ee\u524dEXO2\u7684setSpeed\u53ea\u80fd\u5728\u64ad\u653e\u524d\u8bbe\u7f6e\u751f\u6548\");        if (mediaPlayer != null) {            try {                mediaPlayer.setSpeed(speed, 1);            } catch (Exception e) {                e.printStackTrace();            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setNeedMute", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedMute(boolean needMute) {        if(mediaPlayer != null) {            if (needMute) {                mediaPlayer.setVolume(0, 0);            } else {                mediaPlayer.setVolume(1, 1);            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "releaseSurface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseSurface() {        if (surface != null) {            //surface.release();            surface = null;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "release", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {        if(mediaPlayer != null) {            mediaPlayer.setSurface(null);            mediaPlayer.release();        }        if (dummySurface != null) {            dummySurface.release();            dummySurface = null;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBufferedPercentage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBufferedPercentage() {        return -1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "previous", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void previous() {        if (mediaPlayer == null) {            return;        }        mediaPlayer.previous();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "next", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void next() {        if (mediaPlayer == null) {            return;        }        mediaPlayer.next();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getNetSpeed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getNetSpeed() {        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSpeedPlaying", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeedPlaying(float speed, boolean soundTouch) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "start", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {        if (mediaPlayer != null) {            mediaPlayer.start();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "stop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {        if (mediaPlayer != null) {            mediaPlayer.stop();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "pause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {        if (mediaPlayer != null) {            mediaPlayer.pause();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoWidth", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoWidth() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoWidth();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoHeight", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoHeight() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoHeight();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "isPlaying", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlaying() {        if (mediaPlayer != null) {            return mediaPlayer.isPlaying();        }        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "seekTo", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekTo(long time) {        if (mediaPlayer != null) {            mediaPlayer.seekTo(time);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCurrentPosition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentPosition() {        if (mediaPlayer != null) {            return mediaPlayer.getCurrentPosition();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDuration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {        if (mediaPlayer != null) {            return mediaPlayer.getDuration();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoSarNum", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarNum() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoSarNum();        }        return 1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoSarDen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarDen() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoSarDen();        }        return 1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "isSurfaceSupportLockCanvas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSurfaceSupportLockCanvas() {        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/exo/GSYExoPlayerManager.java", "stars": "2", "class": {"name": "GSYExoPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "execute", "params": [], "throws": ["HiveViaAzkabanException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void execute() throws HiveViaAzkabanException {    ArrayList<HQL> hql = new ArrayList<HQL>();    hql.add(new UseDatabaseHQL(database));    Configuration conf = new Configuration();    try {      FileSystem fs = FileSystem.get(conf);      for (int i = 0; i < tables.length; i++) {        LOG.info(\"Determining HQL commands for table \" + tables[i]);        hql.add(latestURI(fs, tablesLocations[i], tables[i]));      }      fs.close();    } catch (IOException e) {      throw new HiveViaAzkabanException(          \"Exception fetching the directories from HDFS\", e);    }    StringBuffer query = new StringBuffer();    for (HQL q : hql) {      query.append(q.toHQL()).append(\"\\n\");    }    System.out.println(\"Query to execute:\\n\" + query.toString());    try {      hqe.executeQuery(query.toString());    } catch (HiveQueryExecutionException e) {      throw new HiveViaAzkabanException(\"Problem executing query [\"          + query.toString() + \"] on Hive\", e);    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/hive/actions/UpdateTableLocationToLatest.java", "stars": "18", "class": {"name": "UpdateTableLocationToLatest", "extends": null, "implements": ["HiveAction"], "modifiers": ["public"]}}, {"method_name": "latestURI", "params": ["FileSystem", "String", "String"], "throws": ["HiveViaAzkabanException", "IOException"], "modifiers": ["private"], "return_type": "HQL", "snippet": "  private HQL latestURI(FileSystem fs, String basePath, String table)      throws HiveViaAzkabanException, IOException {    ArrayList<String> directories = null;    // Alter Table Set Location requires full URI...    // https://issues.apache.org/jira/browse/HIVE-3860    directories = Utils.fetchDirectories(fs, basePath, true);    if (directories.size() == 0) {      throw new HiveViaAzkabanException(          \"No directories to set as new location in \" + basePath);    }    Collections.sort(directories);    String toAdd = directories.remove(directories.size() - 1);    return new AlterTableLocationQL(table, toAdd);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/hive/actions/UpdateTableLocationToLatest.java", "stars": "18", "class": {"name": "UpdateTableLocationToLatest", "extends": null, "implements": ["HiveAction"], "modifiers": ["public"]}}, {"method_name": "downloadSubtitle", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void downloadSubtitle() {        if (listenerReference == null)            throw new IllegalArgumentException(\"listener must not null. Call setSubtitleDownloaderListener() to sets one\");        if (contextReference.get() == null) return;        subsProvider.download(media, subtitleLanguage, new Callback() {            @Override            public void onFailure(Call call, IOException e) {                onSubtitleDownloadFailed();            }            @Override            public void onResponse(Call call, Response response) throws IOException {                onSubtitleDownloadSuccess();            }        });    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleDownloader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "parseSubtitle", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void parseSubtitle(@NonNull File subtitleFile) {        if (listenerReference == null)            throw new IllegalArgumentException(\"listener must not null. Call setSubtitleDownloaderListener() to sets one\");        if (listenerReference.get() == null) return;        ISubtitleDownloaderListener listener = listenerReference.get();        SubtitleParseTask task = new SubtitleParseTask(subtitleLanguage, listener);        task.execute(subtitleFile);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleDownloader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSubtitleDownloaderListener", "params": ["ISubtitleDownloaderListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSubtitleDownloaderListener(ISubtitleDownloaderListener listener) {        if (listener == null) throw new IllegalArgumentException(\"listener must not null\");        listenerReference = new WeakReference<>(listener);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleDownloader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDownloadedSubtitleFile", "params": ["Context", "Media", "String"], "throws": ["FileNotFoundException"], "modifiers": ["public", "static"], "return_type": "File", "snippet": "    public static File getDownloadedSubtitleFile(            @NonNull Context context,            @NonNull Media media,            @NonNull String language) throws FileNotFoundException {        if (language.equals(SubsProvider.SUBTITLE_LANGUAGE_NONE))            throw new IllegalArgumentException(\"language must be specified\");        File subtitleFile = new File(                SubsProvider.getStorageLocation(context),                media.videoId + \"-\" + language + \".srt\");        if (subtitleFile.exists()) return subtitleFile;        throw new FileNotFoundException(\"Subtitle file does not exists\");    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleDownloader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onSubtitleDownloadSuccess", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onSubtitleDownloadSuccess() {        if (contextReference.get() == null) return;        if (listenerReference.get() == null) return;        Context context = contextReference.get();        ISubtitleDownloaderListener listener = listenerReference.get();        try {            File subtitleFile = getDownloadedSubtitleFile(context, media, subtitleLanguage);            String subtitleNewName = String.format(Locale.US, \"%s (%s) [%s] [WEBRip] [YTS.MX].srt\",                    subtitleFile.getParent() + \"/\" + media.title,                    media.year,                    streamInfo.getQuality());            subtitleFile.renameTo(new File(subtitleNewName));            SubtitleParseTask task = new SubtitleParseTask(subtitleLanguage, listener);            task.execute(subtitleFile);        } catch (FileNotFoundException e) {            e.printStackTrace();            listener.onSubtitleDownloadCompleted(false, null);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleDownloader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onSubtitleDownloadFailed", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onSubtitleDownloadFailed() {        subtitleLanguage = SubsProvider.SUBTITLE_LANGUAGE_NONE;        if (listenerReference.get() == null) return;        ISubtitleDownloaderListener listener = listenerReference.get();        listener.onSubtitleDownloadCompleted(false, null);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleDownloader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "doInBackground", "params": ["File"], "throws": null, "modifiers": ["protected"], "return_type": "TimedTextObject", "snippet": "        protected TimedTextObject doInBackground(File... files) {            for (File file : files) {                try {                    TimedTextObject text = parseAsTimedTextObject(file);                    publishProgress(text);                } catch (FileNotFoundException e) {                    if (e.getMessage().contains(\"EBUSY\")) {                        try {                            TimedTextObject text = parseAsTimedTextObject(file);                            publishProgress(text);                        } catch (IOException e1) {                            e1.printStackTrace();                            return null;                        }                    }                    e.printStackTrace();                } catch (IOException e) {                    e.printStackTrace();                    return null;                }            }            return null;        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleParseTask", "extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"method_name": "onProgressUpdate", "params": ["TimedTextObject"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void onProgressUpdate(TimedTextObject... values) {            super.onProgressUpdate(values);            for (TimedTextObject timedTextObject : values) {                if (listenerReference.get() == null) break;                listenerReference.get().onSubtitleDownloadCompleted(true, timedTextObject);            }        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleParseTask", "extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"method_name": "parseAsTimedTextObject", "params": ["File"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "TimedTextObject", "snippet": "        private TimedTextObject parseAsTimedTextObject(File file) throws IOException {            FileInputStream fileInputStream = new FileInputStream(file);            FormatSRT formatSRT = new FormatSRT();            TimedTextObject result = formatSRT.parseFile(                    file.toString(),                    FileUtils.inputstreamToCharsetString(                            fileInputStream,                            subtitleLanguage).split(\"\\n\"));            return result;        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/subs/SubtitleDownloader.java", "stars": "4", "class": {"name": "SubtitleParseTask", "extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"method_name": "shouldSetParameter", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {    TYPE_HANDLER.setParameter(ps, 1, true, null);    verify(ps).setBoolean(1, true);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BooleanTypeHandlerTest.java", "stars": "15", "class": {"name": "BooleanTypeHandlerTest", "extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"method_name": "shouldGetResultFromResultSetByName", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {    when(rs.getBoolean(\"column\")).thenReturn(true);    assertEquals(true, TYPE_HANDLER.getResult(rs, \"column\"));    when(rs.getBoolean(\"column\")).thenReturn(false);    assertEquals(false, TYPE_HANDLER.getResult(rs, \"column\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BooleanTypeHandlerTest.java", "stars": "15", "class": {"name": "BooleanTypeHandlerTest", "extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"method_name": "shouldGetResultNullFromResultSetByName", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {    when(rs.getBoolean(\"column\")).thenReturn(false);    when(rs.wasNull()).thenReturn(true);    assertNull(TYPE_HANDLER.getResult(rs, \"column\"));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BooleanTypeHandlerTest.java", "stars": "15", "class": {"name": "BooleanTypeHandlerTest", "extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"method_name": "shouldGetResultFromResultSetByPosition", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {    when(rs.getBoolean(1)).thenReturn(true);    assertEquals(true, TYPE_HANDLER.getResult(rs, 1));    when(rs.getBoolean(1)).thenReturn(false);    assertEquals(false, TYPE_HANDLER.getResult(rs, 1));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BooleanTypeHandlerTest.java", "stars": "15", "class": {"name": "BooleanTypeHandlerTest", "extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"method_name": "shouldGetResultNullFromResultSetByPosition", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {    when(rs.getBoolean(1)).thenReturn(false);    when(rs.wasNull()).thenReturn(true);    assertNull(TYPE_HANDLER.getResult(rs, 1));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BooleanTypeHandlerTest.java", "stars": "15", "class": {"name": "BooleanTypeHandlerTest", "extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"method_name": "shouldGetResultFromCallableStatement", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {    when(cs.getBoolean(1)).thenReturn(true);    assertEquals(true, TYPE_HANDLER.getResult(cs, 1));    when(cs.getBoolean(1)).thenReturn(false);    assertEquals(false, TYPE_HANDLER.getResult(cs, 1));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BooleanTypeHandlerTest.java", "stars": "15", "class": {"name": "BooleanTypeHandlerTest", "extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"method_name": "shouldGetResultNullFromCallableStatement", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {    when(cs.getBoolean(1)).thenReturn(false);    when(cs.wasNull()).thenReturn(true);    assertNull(TYPE_HANDLER.getResult(cs, 1));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/BooleanTypeHandlerTest.java", "stars": "15", "class": {"name": "BooleanTypeHandlerTest", "extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"method_name": "checkPermission", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean checkPermission(Context context, String permission) {    if (ContextCompat.checkSelfPermission(context, permission)        == PackageManager.PERMISSION_GRANTED) {      return true;    } else {      return false;    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkMorePermissions", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "  public static List<String> checkMorePermissions(Context context, String[] permissions) {    List<String> permissionList = new ArrayList<>();    for (int i = 0; i < permissions.length; i++) {      if (!checkPermission(context, permissions[i])) {        permissionList.add(permissions[i]);      }    }    return permissionList;  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "requestPermission", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void requestPermission(Context context, String permission, int requestCode) {    ActivityCompat.requestPermissions((Activity) context, new String[]{permission}, requestCode);  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "requestMorePermissions", "params": ["Context", "List", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void requestMorePermissions(Context context, List permissionList, int requestCode) {    String[] permissions = (String[]) permissionList.toArray(new String[permissionList.size()]);    requestMorePermissions(context, permissions, requestCode);  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "requestMorePermissions", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void requestMorePermissions(Context context, String[] permissions,      int requestCode) {    ActivityCompat.requestPermissions((Activity) context, permissions, requestCode);  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "judgePermission", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean judgePermission(Context context, String permission) {    if (ActivityCompat.shouldShowRequestPermissionRationale((Activity) context, permission)) {      return true;    } else {      return false;    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkAndRequestPermission", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void checkAndRequestPermission(Context context, String permission,      int requestCode) {    if (!checkPermission(context, permission)) {      requestPermission(context, permission, requestCode);    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkAndRequestMorePermissions", "params": ["Context", "String", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void checkAndRequestMorePermissions(Context context, String[] permissions,      int requestCode) {    List<String> permissionList = checkMorePermissions(context, permissions);    requestMorePermissions(context, permissionList, requestCode);  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkPermission", "params": ["Context", "String", "PermissionCheckCallBack"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void checkPermission(Context context, String permission,      PermissionCheckCallBack callBack) {    if (checkPermission(context, permission)) { // \u7528\u6237\u5df2\u6388\u4e88\u6743\u9650\uff08User has granted permission\uff09      callBack.onHasPermission();    } else {      if (judgePermission(context, permission))  // \u7528\u6237\u4e4b\u524d\u5df2\u62d2\u7edd\u8fc7\u6743\u9650\u7533\u8bf7(User has previously denied permission application)      {        callBack.onUserHasAlreadyTurnedDown(permission);      } else                                       // \u7528\u6237\u4e4b\u524d\u5df2\u62d2\u7edd\u5e76\u52fe\u9009\u4e86\u4e0d\u5728\u8be2\u95ee\u3001\u7528\u6237\u7b2c\u4e00\u6b21\u7533\u8bf7\u6743\u9650\u3002(The user has previously rejected and checked the first time the user is not asking for permission.)      {        callBack.onUserHasAlreadyTurnedDownAndDontAsk(permission);      }    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkMorePermissions", "params": ["Context", "String", "PermissionCheckCallBack"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void checkMorePermissions(Context context, String[] permissions,      PermissionCheckCallBack callBack) {    List<String> permissionList = checkMorePermissions(context, permissions);    if (permissionList.size() == 0) {  // \u7528\u6237\u5df2\u6388\u4e88\u6743\u9650\uff08User has granted permission\uff09      callBack.onHasPermission();    } else {      boolean isFirst = true;      for (int i = 0; i < permissionList.size(); i++) {        String permission = permissionList.get(i);        if (judgePermission(context, permission)) {          isFirst = false;          break;        }      }      String[] unauthorizedMorePermissions = (String[]) permissionList          .toArray(new String[permissionList.size()]);      if (isFirst)// \u7528\u6237\u4e4b\u524d\u5df2\u62d2\u7edd\u8fc7\u6743\u9650\u7533\u8bf7(User has previously denied permission application)      {        callBack.onUserHasAlreadyTurnedDownAndDontAsk(unauthorizedMorePermissions);      } else       // \u7528\u6237\u4e4b\u524d\u5df2\u62d2\u7edd\u5e76\u52fe\u9009\u4e86\u4e0d\u5728\u8be2\u95ee\u3001\u7528\u6237\u7b2c\u4e00\u6b21\u7533\u8bf7\u6743\u9650\u3002(The user has previously rejected and checked the first time the user is not asking for permission.)      {        callBack.onUserHasAlreadyTurnedDown(unauthorizedMorePermissions);      }    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkAndRequestPermission", "params": ["Context", "String", "int", "PermissionRequestSuccessCallBack"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void checkAndRequestPermission(Context context, String permission, int requestCode,      PermissionRequestSuccessCallBack callBack) {    if (checkPermission(context, permission)) {// \u7528\u6237\u5df2\u6388\u4e88\u6743\u9650\uff08User has granted permission\uff09      callBack.onHasPermission();    } else {      requestPermission(context, permission, requestCode);    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkAndRequestMorePermissions", "params": ["Context", "String", "int", "PermissionRequestSuccessCallBack"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void checkAndRequestMorePermissions(Context context, String[] permissions,      int requestCode, PermissionRequestSuccessCallBack callBack) {    List<String> permissionList = checkMorePermissions(context, permissions);    if (permissionList.size() == 0) {  // \u7528\u6237\u5df2\u6388\u4e88\u6743\u9650\uff08User has granted permission\uff09      callBack.onHasPermission();    } else {      requestMorePermissions(context, permissionList, requestCode);    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isPermissionRequestSuccess", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean isPermissionRequestSuccess(int[] grantResults) {    if (grantResults.length > 0        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {      return true;    } else {      return false;    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onRequestPermissionResult", "params": ["Context", "String", "int", "PermissionCheckCallBack"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void onRequestPermissionResult(Context context, String permission,      int[] grantResults, PermissionCheckCallBack callback) {    if (PermissionUtils.isPermissionRequestSuccess(grantResults)) {      callback.onHasPermission();    } else {      if (PermissionUtils.judgePermission(context, permission)) {        callback.onUserHasAlreadyTurnedDown(permission);      } else {        callback.onUserHasAlreadyTurnedDownAndDontAsk(permission);      }    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onRequestMorePermissionsResult", "params": ["Context", "String", "PermissionCheckCallBack"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void onRequestMorePermissionsResult(Context context, String[] permissions,      PermissionCheckCallBack callback) {    boolean isBannedPermission = false;    List<String> permissionList = checkMorePermissions(context, permissions);    if (permissionList.size() == 0) {      callback.onHasPermission();    } else {      for (int i = 0; i < permissionList.size(); i++) {        if (!judgePermission(context, permissionList.get(i))) {          isBannedPermission = true;          break;        }      }      //Prohibited asking for permission again      //\u3000\u5df2\u7981\u6b62\u518d\u6b21\u8be2\u95ee\u6743\u9650      if (isBannedPermission) {        callback.onUserHasAlreadyTurnedDownAndDontAsk(permissions);      } else // \u62d2\u7edd\u6743\u9650\uff08Permission denied\uff09      {        callback.onUserHasAlreadyTurnedDown(permissions);      }    }  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toAppSetting", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void toAppSetting(Context context) {    Intent intent = new Intent();    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);    if (Build.VERSION.SDK_INT >= 9) {      intent.setAction(\"android.settings.APPLICATION_DETAILS_SETTINGS\");      intent.setData(Uri.fromParts(\"package\", context.getPackageName(), null));    } else if (Build.VERSION.SDK_INT <= 8) {      intent.setAction(Intent.ACTION_VIEW);      intent.setClassName(\"com.android.settings\", \"com.android.settings.InstalledAppDetails\");      intent.putExtra(\"com.android.settings.ApplicationPkgName\", context.getPackageName());    }    context.startActivity(intent);  }", "url": "https://raw.githubusercontent.com/Aivacom/JLYAudio-android/master/app/src/main/java/com/mediaroom/utils/PermissionUtils.java", "stars": "2", "class": {"name": "PermissionUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\tSpringApplication.run(SampleHateoasApplication.class, args);\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-hateoas/src/main/java/smoketest/hateoas/SampleHateoasApplication.java", "stars": "47572", "class": {"name": "SampleHateoasApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "start", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "    public synchronized void start() {        if (running) {            return;        }        running = true;        try {            welcomeSocket = new ServerSocket(this.port);        } catch (IOException ex) {            ex.printStackTrace();            return;        }        Util.runInBackground(new Runnable() {            @Override            public void run() {                processRequests();            }        }, true);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "stop", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "    public synchronized void stop() {        if (!running) {            return;        }        for (URLServiceSubscription<?> sub : subscriptions) {            sub.unsubscribe();        }        subscriptions.clear();        if (welcomeSocket != null && !welcomeSocket.isClosed()) {            try {                welcomeSocket.close();            } catch (IOException ex) {                ex.printStackTrace();            }        }        welcomeSocket = null;        running = false;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "processRequests", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void processRequests() {        while (running) {            if (welcomeSocket == null || welcomeSocket.isClosed()) {                break;            }            Socket connectionSocket = null;            BufferedReader inFromClient = null;            DataOutputStream outToClient = null;            try {                connectionSocket = welcomeSocket.accept();            } catch (IOException ex) {                ex.printStackTrace();                // this socket may have been closed, so we'll stop                break;            }            int c = 0;            String body = null;            try {                inFromClient = new BufferedReader(new InputStreamReader(connectionSocket.getInputStream()));                StringBuilder sb = new StringBuilder();                while ((c = inFromClient.read()) != -1) {                    sb.append((char)c);                    if (sb.toString().endsWith(\"\\r\\n\\r\\n\"))                        break;                }                sb = new StringBuilder();                while ((c = inFromClient.read()) != -1) {                    sb.append((char)c);                    body = sb.toString();                    if (body.endsWith(\"</e:propertyset>\"))                        break;                }            } catch (IOException ex) {                ex.printStackTrace();            }            PrintWriter out = null;            try {                outToClient = new DataOutputStream(connectionSocket.getOutputStream());                out = new PrintWriter(outToClient);                out.println(\"HTTP/1.1 200 OK\");                out.println(\"Connection: Close\");                out.println(\"Content-Length: 0\");                out.println();                out.flush();            } catch (IOException ex) {                ex.printStackTrace();            } finally {                try {                    inFromClient.close();                    out.close();                    outToClient.close();                    connectionSocket.close();                } catch (IOException ex) {                    ex.printStackTrace();                } catch (NullPointerException ex) {                    ex.printStackTrace();                }            }            if (body == null)                continue;            InputStream stream = null;            try {                stream = new ByteArrayInputStream(body.getBytes(\"UTF-8\"));            } catch (UnsupportedEncodingException ex) {                ex.printStackTrace();            }            JSONArray propertySet;            DLNANotifyParser parser = new DLNANotifyParser();            try {                propertySet = parser.parse(stream);                for (int i = 0; i < propertySet.length(); i++) {                    JSONObject property = propertySet.getJSONObject(i);                    if (property.has(\"LastChange\")) {                        JSONObject lastChange = property.getJSONObject(\"LastChange\");                        handleLastChange(lastChange);                    }                }            } catch (XmlPullParserException e) {                e.printStackTrace();            } catch (IOException e) {                e.printStackTrace();            } catch (JSONException e) {                e.printStackTrace();            }        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "handleLastChange", "params": ["JSONObject"], "throws": ["JSONException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleLastChange(JSONObject lastChange) throws JSONException {        if (lastChange.has(\"InstanceID\")) {            JSONArray instanceIDs = lastChange.getJSONArray(\"InstanceID\");            for (int i = 0; i < instanceIDs.length(); i++) {                JSONArray events = instanceIDs.getJSONArray(i);                for (int j = 0; j < events.length(); j++) {                    JSONObject entry = events.getJSONObject(j);                    handleEntry(entry);                }            }        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "handleEntry", "params": ["JSONObject"], "throws": ["JSONException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleEntry(JSONObject entry) throws JSONException {        if (entry.has(\"TransportState\")) {            String transportState = entry.getString(\"TransportState\");            PlayStateStatus status = PlayStateStatus.convertTransportStateToPlayStateStatus(transportState);            for (URLServiceSubscription<?> sub: subscriptions) {                if (sub.getTarget().equalsIgnoreCase(\"playState\")) {                    for (int j = 0; j < sub.getListeners().size(); j++) {                        @SuppressWarnings(\"unchecked\")                        ResponseListener<Object> listener = (ResponseListener<Object>) sub.getListeners().get(j);                        Util.postSuccess(listener, status);                    }                }            }        }        if ((entry.has(\"Volume\")&&!entry.has(\"channel\"))||(entry.has(\"Volume\")&&entry.getString(\"channel\").equals(\"Master\"))) {            int intVolume = entry.getInt(\"Volume\");            float volume = (float) intVolume / 100;            for (URLServiceSubscription<?> sub : subscriptions) {                if (sub.getTarget().equalsIgnoreCase(\"volume\")) {                    for (int j = 0; j < sub.getListeners().size(); j++) {                        @SuppressWarnings(\"unchecked\")                        ResponseListener<Object> listener = (ResponseListener<Object>) sub.getListeners().get(j);                        Util.postSuccess(listener, volume);                    }                }            }        }        if ((entry.has(\"Mute\")&&!entry.has(\"channel\"))||(entry.has(\"Mute\")&&entry.getString(\"channel\").equals(\"Master\"))) {            String muteStatus = entry.getString(\"Mute\");            boolean mute;            try {                mute = (Integer.parseInt(muteStatus) == 1);            } catch(NumberFormatException e) {                mute = Boolean.parseBoolean(muteStatus);            }            for (URLServiceSubscription<?> sub : subscriptions) {                if (sub.getTarget().equalsIgnoreCase(\"mute\")) {                    for (int j = 0; j < sub.getListeners().size(); j++) {                        @SuppressWarnings(\"unchecked\")                        ResponseListener<Object> listener = (ResponseListener<Object>) sub.getListeners().get(j);                        Util.postSuccess(listener, mute);                    }                }            }        }        if (entry.has(\"CurrentTrackMetaData\")) {            String trackMetaData = entry.getString(\"CurrentTrackMetaData\");            MediaInfo info = DLNAMediaInfoParser.getMediaInfo(trackMetaData);            for (URLServiceSubscription<?> sub : subscriptions) {                if (sub.getTarget().equalsIgnoreCase(\"info\")) {                    for (int j = 0; j < sub.getListeners().size(); j++) {                        @SuppressWarnings(\"unchecked\")                        ResponseListener<Object> listener = (ResponseListener<Object>) sub.getListeners().get(j);                        Util.postSuccess(listener, info);                    }                }            }        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPort", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPort() {        return port;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSubscriptions", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<URLServiceSubscription>", "snippet": "    public List<URLServiceSubscription<?>> getSubscriptions() {        return subscriptions;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSubscriptions", "params": ["List<URLServiceSubscription>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSubscriptions(List<URLServiceSubscription<?>> subscriptions) {        this.subscriptions = new CopyOnWriteArrayList<URLServiceSubscription<?>>(subscriptions);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isRunning", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isRunning() {        return running;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/upnp/DLNAHttpServer.java", "stars": "4", "class": {"name": "DLNAHttpServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getNombrePersonnes", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getNombrePersonnes() {        return this.getNombreMineurs() != null ? this.getNombreMineurs() + 1 : 1;    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/IdentiteDemandeurUI.java", "stars": "5", "class": {"name": "IdentiteDemandeurUI", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\tSpringApplication.run(SampleAnimatedBannerApplication.class, args);\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-animated-banner/src/main/java/smoketest/animated/SampleAnimatedBannerApplication.java", "stars": "47572", "class": {"name": "SampleAnimatedBannerApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCapeResource", "params": ["AbstractClientPlayer"], "throws": null, "modifiers": ["public", "static"], "return_type": "ResourceLocation", "snippet": "    public static ResourceLocation getCapeResource(AbstractClientPlayer player) {        for(CapeUser user : INSTANCE.capeUser) {            if(player.getUniqueID().toString().equalsIgnoreCase(user.uuid)) {                return new ResourceLocation(\"capes/baldent/\" + formatUUID(user.uuid));            }        }        return null;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/capes/Capes.java", "stars": "12", "class": {"name": "Capes", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "bindTexture", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindTexture(String url, String resource) {        IImageBuffer iib = new IImageBuffer() {            @Override            public BufferedImage parseUserSkin(BufferedImage image) {                return parseCape(image);            }            @Override            public void skinAvailable() {}        };        ResourceLocation rl = new ResourceLocation(resource);        TextureManager textureManager = Minecraft.getMinecraft().getTextureManager();        textureManager.getTexture(rl);        ThreadDownloadImageData textureCape = new ThreadDownloadImageData(null, url, null, iib);        textureManager.loadTexture(rl, textureCape);    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/capes/Capes.java", "stars": "12", "class": {"name": "Capes", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "parseCape", "params": ["BufferedImage"], "throws": null, "modifiers": ["private"], "return_type": "BufferedImage", "snippet": "    private BufferedImage parseCape(BufferedImage img)  {        int imageWidth = 64;        int imageHeight = 32;        int srcWidth = img.getWidth();        int srcHeight = img.getHeight();        while (imageWidth < srcWidth || imageHeight < srcHeight) {            imageWidth *= 2;            imageHeight *= 2;        }        BufferedImage imgNew = new BufferedImage(imageWidth, imageHeight, 2);        Graphics g = imgNew.getGraphics();        g.drawImage(img, 0, 0, null);        g.dispose();        return imgNew;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/capes/Capes.java", "stars": "12", "class": {"name": "Capes", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "formatUUID", "params": ["String"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "    private static String formatUUID(String uuid) {        return uuid.replaceAll(\"-\", \"\");    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/capes/Capes.java", "stars": "12", "class": {"name": "Capes", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {    // create an SqlSessionFactory    try (Reader reader = Resources.getResourceAsReader(        \"org/apache/ibatis/submitted/enum_interface_type_handler/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    // populate in-memory database    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/enum_interface_type_handler/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/enum_interface_type_handler/EnumInterfaceTypeHandlerTest.java", "stars": "15", "class": {"name": "EnumInterfaceTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetAUser", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetAUser() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      User user = mapper.getUser(1);      assertEquals(Color.RED, user.getColor());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/enum_interface_type_handler/EnumInterfaceTypeHandlerTest.java", "stars": "15", "class": {"name": "EnumInterfaceTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldInsertAUser", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInsertAUser() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      User user = new User();      user.setId(2);      user.setColor(Color.BLUE);      mapper.insertUser(user);      User result = mapper.getUser(2);      assertEquals(Color.BLUE, result.getColor());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/enum_interface_type_handler/EnumInterfaceTypeHandlerTest.java", "stars": "15", "class": {"name": "EnumInterfaceTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldInsertAUserWithoutParameterTypeInXmlElement", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInsertAUserWithoutParameterTypeInXmlElement() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      XmlMapper mapper = sqlSession.getMapper(XmlMapper.class);      User user = new User();      user.setId(2);      user.setColor(Color.BLUE);      mapper.insertUser(user);      User result = sqlSession.getMapper(Mapper.class).getUser(2);      assertEquals(Color.BLUE, result.getColor());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/enum_interface_type_handler/EnumInterfaceTypeHandlerTest.java", "stars": "15", "class": {"name": "EnumInterfaceTypeHandlerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void onCreate(Bundle savedInstanceState) {    super.onCreate(savedInstanceState);    keyprefVideoCall = getString(R.string.pref_videocall_key);    keyprefScreencapture = getString(R.string.pref_screencapture_key);    keyprefCamera2 = getString(R.string.pref_camera2_key);    keyprefResolution = getString(R.string.pref_resolution_key);    keyprefFps = getString(R.string.pref_fps_key);    keyprefCaptureQualitySlider = getString(R.string.pref_capturequalityslider_key);    keyprefMaxVideoBitrateType = getString(R.string.pref_maxvideobitrate_key);    keyprefMaxVideoBitrateValue = getString(R.string.pref_maxvideobitratevalue_key);    keyPrefVideoCodec = getString(R.string.pref_videocodec_key);    keyprefHwCodec = getString(R.string.pref_hwcodec_key);    keyprefCaptureToTexture = getString(R.string.pref_capturetotexture_key);    keyprefFlexfec = getString(R.string.pref_flexfec_key);    keyprefStartAudioBitrateType = getString(R.string.pref_startaudiobitrate_key);    keyprefStartAudioBitrateValue = getString(R.string.pref_startaudiobitratevalue_key);    keyPrefAudioCodec = getString(R.string.pref_audiocodec_key);    keyprefNoAudioProcessing = getString(R.string.pref_noaudioprocessing_key);    keyprefAecDump = getString(R.string.pref_aecdump_key);    keyprefEnableSaveInputAudioToFile =        getString(R.string.pref_enable_save_input_audio_to_file_key);    keyprefOpenSLES = getString(R.string.pref_opensles_key);    keyprefDisableBuiltInAEC = getString(R.string.pref_disable_built_in_aec_key);    keyprefDisableBuiltInAGC = getString(R.string.pref_disable_built_in_agc_key);    keyprefDisableBuiltInNS = getString(R.string.pref_disable_built_in_ns_key);    keyprefDisableWebRtcAGCAndHPF = getString(R.string.pref_disable_webrtc_agc_and_hpf_key);    keyprefSpeakerphone = getString(R.string.pref_speakerphone_key);    keyprefEnableDataChannel = getString(R.string.pref_enable_datachannel_key);    keyprefOrdered = getString(R.string.pref_ordered_key);    keyprefMaxRetransmitTimeMs = getString(R.string.pref_max_retransmit_time_ms_key);    keyprefMaxRetransmits = getString(R.string.pref_max_retransmits_key);    keyprefDataProtocol = getString(R.string.pref_data_protocol_key);    keyprefNegotiated = getString(R.string.pref_negotiated_key);    keyprefDataId = getString(R.string.pref_data_id_key);    keyPrefRoomServerUrl = getString(R.string.pref_room_server_url_key);    keyPrefDisplayHud = getString(R.string.pref_displayhud_key);    keyPrefTracing = getString(R.string.pref_tracing_key);    keyprefEnabledRtcEventLog = getString(R.string.pref_enable_rtceventlog_key);    // Display the fragment as the main content.    settingsFragment = new SettingsFragment();    getFragmentManager()        .beginTransaction()        .replace(android.R.id.content, settingsFragment)        .commit();  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "onResume", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void onResume() {    super.onResume();    // Set summary to be the user-description for the selected value    SharedPreferences sharedPreferences =        settingsFragment.getPreferenceScreen().getSharedPreferences();    sharedPreferences.registerOnSharedPreferenceChangeListener(this);    updateSummaryB(sharedPreferences, keyprefVideoCall);    updateSummaryB(sharedPreferences, keyprefScreencapture);    updateSummaryB(sharedPreferences, keyprefCamera2);    updateSummary(sharedPreferences, keyprefResolution);    updateSummary(sharedPreferences, keyprefFps);    updateSummaryB(sharedPreferences, keyprefCaptureQualitySlider);    updateSummary(sharedPreferences, keyprefMaxVideoBitrateType);    updateSummaryBitrate(sharedPreferences, keyprefMaxVideoBitrateValue);    setVideoBitrateEnable(sharedPreferences);    updateSummary(sharedPreferences, keyPrefVideoCodec);    updateSummaryB(sharedPreferences, keyprefHwCodec);    updateSummaryB(sharedPreferences, keyprefCaptureToTexture);    updateSummaryB(sharedPreferences, keyprefFlexfec);    updateSummary(sharedPreferences, keyprefStartAudioBitrateType);    updateSummaryBitrate(sharedPreferences, keyprefStartAudioBitrateValue);    setAudioBitrateEnable(sharedPreferences);    updateSummary(sharedPreferences, keyPrefAudioCodec);    updateSummaryB(sharedPreferences, keyprefNoAudioProcessing);    updateSummaryB(sharedPreferences, keyprefAecDump);    updateSummaryB(sharedPreferences, keyprefEnableSaveInputAudioToFile);    updateSummaryB(sharedPreferences, keyprefOpenSLES);    updateSummaryB(sharedPreferences, keyprefDisableBuiltInAEC);    updateSummaryB(sharedPreferences, keyprefDisableBuiltInAGC);    updateSummaryB(sharedPreferences, keyprefDisableBuiltInNS);    updateSummaryB(sharedPreferences, keyprefDisableWebRtcAGCAndHPF);    updateSummaryList(sharedPreferences, keyprefSpeakerphone);    updateSummaryB(sharedPreferences, keyprefEnableDataChannel);    updateSummaryB(sharedPreferences, keyprefOrdered);    updateSummary(sharedPreferences, keyprefMaxRetransmitTimeMs);    updateSummary(sharedPreferences, keyprefMaxRetransmits);    updateSummary(sharedPreferences, keyprefDataProtocol);    updateSummaryB(sharedPreferences, keyprefNegotiated);    updateSummary(sharedPreferences, keyprefDataId);    setDataChannelEnable(sharedPreferences);    updateSummary(sharedPreferences, keyPrefRoomServerUrl);    updateSummaryB(sharedPreferences, keyPrefDisplayHud);    updateSummaryB(sharedPreferences, keyPrefTracing);    updateSummaryB(sharedPreferences, keyprefEnabledRtcEventLog);    if (!Camera2Enumerator.isSupported(this)) {      Preference camera2Preference = settingsFragment.findPreference(keyprefCamera2);      camera2Preference.setSummary(getString(R.string.pref_camera2_not_supported));      camera2Preference.setEnabled(false);    }    if (!JavaAudioDeviceModule.isBuiltInAcousticEchoCancelerSupported()) {      Preference disableBuiltInAECPreference =          settingsFragment.findPreference(keyprefDisableBuiltInAEC);      disableBuiltInAECPreference.setSummary(getString(R.string.pref_built_in_aec_not_available));      disableBuiltInAECPreference.setEnabled(false);    }    Preference disableBuiltInAGCPreference =        settingsFragment.findPreference(keyprefDisableBuiltInAGC);    disableBuiltInAGCPreference.setSummary(getString(R.string.pref_built_in_agc_not_available));    disableBuiltInAGCPreference.setEnabled(false);    if (!JavaAudioDeviceModule.isBuiltInNoiseSuppressorSupported()) {      Preference disableBuiltInNSPreference =          settingsFragment.findPreference(keyprefDisableBuiltInNS);      disableBuiltInNSPreference.setSummary(getString(R.string.pref_built_in_ns_not_available));      disableBuiltInNSPreference.setEnabled(false);    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "onPause", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void onPause() {    super.onPause();    SharedPreferences sharedPreferences =        settingsFragment.getPreferenceScreen().getSharedPreferences();    sharedPreferences.unregisterOnSharedPreferenceChangeListener(this);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "onSharedPreferenceChanged", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {    // clang-format off    if (key.equals(keyprefResolution)        || key.equals(keyprefFps)        || key.equals(keyprefMaxVideoBitrateType)        || key.equals(keyPrefVideoCodec)        || key.equals(keyprefStartAudioBitrateType)        || key.equals(keyPrefAudioCodec)        || key.equals(keyPrefRoomServerUrl)        || key.equals(keyprefMaxRetransmitTimeMs)        || key.equals(keyprefMaxRetransmits)        || key.equals(keyprefDataProtocol)        || key.equals(keyprefDataId)) {      updateSummary(sharedPreferences, key);    } else if (key.equals(keyprefMaxVideoBitrateValue)        || key.equals(keyprefStartAudioBitrateValue)) {      updateSummaryBitrate(sharedPreferences, key);    } else if (key.equals(keyprefVideoCall)        || key.equals(keyprefScreencapture)        || key.equals(keyprefCamera2)        || key.equals(keyPrefTracing)        || key.equals(keyprefCaptureQualitySlider)        || key.equals(keyprefHwCodec)        || key.equals(keyprefCaptureToTexture)        || key.equals(keyprefFlexfec)        || key.equals(keyprefNoAudioProcessing)        || key.equals(keyprefAecDump)        || key.equals(keyprefEnableSaveInputAudioToFile)        || key.equals(keyprefOpenSLES)        || key.equals(keyprefDisableBuiltInAEC)        || key.equals(keyprefDisableBuiltInAGC)        || key.equals(keyprefDisableBuiltInNS)        || key.equals(keyprefDisableWebRtcAGCAndHPF)        || key.equals(keyPrefDisplayHud)        || key.equals(keyprefEnableDataChannel)        || key.equals(keyprefOrdered)        || key.equals(keyprefNegotiated)        || key.equals(keyprefEnabledRtcEventLog)) {      updateSummaryB(sharedPreferences, key);    } else if (key.equals(keyprefSpeakerphone)) {      updateSummaryList(sharedPreferences, key);    }    // clang-format on    if (key.equals(keyprefMaxVideoBitrateType)) {      setVideoBitrateEnable(sharedPreferences);    }    if (key.equals(keyprefStartAudioBitrateType)) {      setAudioBitrateEnable(sharedPreferences);    }    if (key.equals(keyprefEnableDataChannel)) {      setDataChannelEnable(sharedPreferences);    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "updateSummary", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateSummary(SharedPreferences sharedPreferences, String key) {    Preference updatedPref = settingsFragment.findPreference(key);    // Set summary to be the user-description for the selected value    updatedPref.setSummary(sharedPreferences.getString(key, \"\"));  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "updateSummaryBitrate", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateSummaryBitrate(SharedPreferences sharedPreferences, String key) {    Preference updatedPref = settingsFragment.findPreference(key);    updatedPref.setSummary(sharedPreferences.getString(key, \"\") + \" kbps\");  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "updateSummaryB", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateSummaryB(SharedPreferences sharedPreferences, String key) {    Preference updatedPref = settingsFragment.findPreference(key);    updatedPref.setSummary(sharedPreferences.getBoolean(key, true)            ? getString(R.string.pref_value_enabled)            : getString(R.string.pref_value_disabled));  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "updateSummaryList", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateSummaryList(SharedPreferences sharedPreferences, String key) {    ListPreference updatedPref = (ListPreference) settingsFragment.findPreference(key);    updatedPref.setSummary(updatedPref.getEntry());  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "setVideoBitrateEnable", "params": ["SharedPreferences"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setVideoBitrateEnable(SharedPreferences sharedPreferences) {    Preference bitratePreferenceValue =        settingsFragment.findPreference(keyprefMaxVideoBitrateValue);    String bitrateTypeDefault = getString(R.string.pref_maxvideobitrate_default);    String bitrateType =        sharedPreferences.getString(keyprefMaxVideoBitrateType, bitrateTypeDefault);    if (bitrateType.equals(bitrateTypeDefault)) {      bitratePreferenceValue.setEnabled(false);    } else {      bitratePreferenceValue.setEnabled(true);    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "setAudioBitrateEnable", "params": ["SharedPreferences"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setAudioBitrateEnable(SharedPreferences sharedPreferences) {    Preference bitratePreferenceValue =        settingsFragment.findPreference(keyprefStartAudioBitrateValue);    String bitrateTypeDefault = getString(R.string.pref_startaudiobitrate_default);    String bitrateType =        sharedPreferences.getString(keyprefStartAudioBitrateType, bitrateTypeDefault);    if (bitrateType.equals(bitrateTypeDefault)) {      bitratePreferenceValue.setEnabled(false);    } else {      bitratePreferenceValue.setEnabled(true);    }  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "setDataChannelEnable", "params": ["SharedPreferences"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setDataChannelEnable(SharedPreferences sharedPreferences) {    boolean enabled = sharedPreferences.getBoolean(keyprefEnableDataChannel, true);    settingsFragment.findPreference(keyprefOrdered).setEnabled(enabled);    settingsFragment.findPreference(keyprefMaxRetransmitTimeMs).setEnabled(enabled);    settingsFragment.findPreference(keyprefMaxRetransmits).setEnabled(enabled);    settingsFragment.findPreference(keyprefDataProtocol).setEnabled(enabled);    settingsFragment.findPreference(keyprefNegotiated).setEnabled(enabled);    settingsFragment.findPreference(keyprefDataId).setEnabled(enabled);  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/SettingsActivity.java", "stars": "2", "class": {"name": "SettingsActivity", "extends": "Activity", "implements": ["OnSharedPreferenceChangeListener"], "modifiers": ["public"]}}, {"method_name": "setup", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setup() throws Exception {    String resource = \"org/apache/ibatis/submitted/complex_property/Configuration.xml\";    Reader reader = Resources.getResourceAsReader(resource);    sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/complex_property/db.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_property/ComponentTest.java", "stars": "15", "class": {"name": "ComponentTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldInsertNestedPasswordFieldOfComplexType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInsertNestedPasswordFieldOfComplexType() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      //Create User      User user = new User();      user.setId(500000L);      user.setPassword(new EncryptedString(\"secret\"));      user.setUsername(\"johnny\" + Calendar.getInstance().getTimeInMillis());// random      user.setAdministrator(true);      sqlSession.insert(\"User.insert\", user);      // Retrieve User      user = sqlSession.selectOne(\"User.find\", user.getId());      assertNotNull(user.getId());      sqlSession.rollback();    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/complex_property/ComponentTest.java", "stars": "15", "class": {"name": "ComponentTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "action", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void action(){        System.out.println(\"\u63a5\u53d7\u8005action\u65b9\u6cd5\u88ab\u8c03\u7528\");        System.out.println(\"\u5458\u5de5\u6536\u5230Boss\u4e0b\u8fbe\u7684\u547d\u4ee4\");    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/command/Employee.java", "stars": "2", "class": {"name": "Employee", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "adapt", "params": ["MemorySection"], "throws": null, "modifiers": ["public"], "return_type": "Title", "snippet": "    public Title adapt(MemorySection section) {        if (section == null) return new Title();        Set<String> keys = section.getKeys(false);        if (keys.isEmpty()) return new Title();        final Title title = new Title();        final String type = section.getString(\"type\");        if (type == null || type.isEmpty()) return title;        final String titleString = section.getString(\"title\", \"\");        final String subtitleString = section.getString(\"subtitle\", \"\");        List<String> titles = new ArrayList<String>() {{            add(type);            add(Strings.colorize(titleString));            add(Strings.colorize(subtitleString));        }};        if (!titles.isEmpty())            title.setSection(titles);        return title;    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/adapter/MemorySectionToTitleAdapter.java", "stars": "2", "class": {"name": "MemorySectionToTitleAdapter", "extends": null, "implements": ["ObjectAdapter"], "modifiers": ["public"]}}, {"method_name": "registerByType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void registerByType() {    registry.register(RawLanguageDriver.class);    LanguageDriver driver = registry.getDriver(RawLanguageDriver.class);    assertThat(driver).isInstanceOf(RawLanguageDriver.class);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "registerByTypeSameType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void registerByTypeSameType() {    registry.register(RawLanguageDriver.class);    LanguageDriver driver = registry.getDriver(RawLanguageDriver.class);    registry.register(RawLanguageDriver.class);    assertThat(driver).isSameAs(registry.getDriver(RawLanguageDriver.class));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "registerByTypeNull", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void registerByTypeNull() {    when(() -> registry.register((Class<? extends LanguageDriver>) null));    then(caughtException()).isInstanceOf(IllegalArgumentException.class)      .hasMessage(\"null is not a valid Language Driver\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "registerByTypeDoesNotCreateNewInstance", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void registerByTypeDoesNotCreateNewInstance() {    when(() -> registry.register(PrivateLanguageDriver.class));    then(caughtException()).isInstanceOf(ScriptingException.class)      .hasMessage(\"Failed to load language driver for org.apache.ibatis.scripting.LanguageDriverRegistryTest$PrivateLanguageDriver\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "registerByInstance", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void registerByInstance() {    registry.register(new PrivateLanguageDriver());    LanguageDriver driver = registry.getDriver(PrivateLanguageDriver.class);    assertThat(driver).isInstanceOf(PrivateLanguageDriver.class);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "registerByInstanceSameType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void registerByInstanceSameType() {    registry.register(new PrivateLanguageDriver());    LanguageDriver driver = registry.getDriver(PrivateLanguageDriver.class);    registry.register(new PrivateLanguageDriver());    assertThat(driver).isSameAs(registry.getDriver(PrivateLanguageDriver.class));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "registerByInstanceNull", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void registerByInstanceNull() {    when(() -> registry.register((LanguageDriver) null));    then(caughtException()).isInstanceOf(IllegalArgumentException.class)      .hasMessage(\"null is not a valid Language Driver\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "setDefaultDriverClass", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void setDefaultDriverClass() {    registry.setDefaultDriverClass(RawLanguageDriver.class);    assertThat(registry.getDefaultDriverClass() == RawLanguageDriver.class).isTrue();    assertThat(registry.getDefaultDriver()).isInstanceOf(RawLanguageDriver.class);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "LanguageDriverRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "createParameterHandler", "params": ["MappedStatement", "Object", "BoundSql"], "throws": null, "modifiers": ["public"], "return_type": "ParameterHandler", "snippet": "    public ParameterHandler createParameterHandler(MappedStatement mappedStatement, Object parameterObject, BoundSql boundSql) {      return null;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "PrivateLanguageDriver", "extends": null, "implements": ["LanguageDriver"], "modifiers": ["private", "static"]}}, {"method_name": "createSqlSource", "params": ["Configuration", "XNode", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "SqlSource", "snippet": "    public SqlSource createSqlSource(Configuration configuration, XNode script, Class<?> parameterType) {      return null;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "PrivateLanguageDriver", "extends": null, "implements": ["LanguageDriver"], "modifiers": ["private", "static"]}}, {"method_name": "createSqlSource", "params": ["Configuration", "String", "Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "SqlSource", "snippet": "    public SqlSource createSqlSource(Configuration configuration, String script, Class<?> parameterType) {      return null;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/scripting/LanguageDriverRegistryTest.java", "stars": "15", "class": {"name": "PrivateLanguageDriver", "extends": null, "implements": ["LanguageDriver"], "modifiers": ["private", "static"]}}, {"method_name": "forBeanTypesMatchesTypes", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid forBeanTypesMatchesTypes() {\t\tLazyInitializationExcludeFilter filter = LazyInitializationExcludeFilter.forBeanTypes(CharSequence.class,\t\t\t\tNumber.class);\t\tString beanName = \"test\";\t\tBeanDefinition beanDefinition = mock(BeanDefinition.class);\t\tassertThat(filter.isExcluded(beanName, beanDefinition, CharSequence.class)).isTrue();\t\tassertThat(filter.isExcluded(beanName, beanDefinition, String.class)).isTrue();\t\tassertThat(filter.isExcluded(beanName, beanDefinition, StringBuilder.class)).isTrue();\t\tassertThat(filter.isExcluded(beanName, beanDefinition, Number.class)).isTrue();\t\tassertThat(filter.isExcluded(beanName, beanDefinition, Long.class)).isTrue();\t\tassertThat(filter.isExcluded(beanName, beanDefinition, Boolean.class)).isFalse();\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/test/java/org/springframework/boot/LazyInitializationExcludeFilterTests.java", "stars": "47572", "class": {"name": "LazyInitializationExcludeFilterTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "initialise", "params": ["Activity", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initialise(Activity activity, @DrawableRes int defaultBackground) {        mContext = activity.getApplicationContext();        mBackgroundManager = BackgroundManager.getInstance(activity);        mBackgroundManager.attach(activity.getWindow());        mBackgroundImageTarget = new PicassoBackgroundManagerTarget(mBackgroundManager);        mDefaultBackground = defaultBackground;        mDisplayWidth = PixelUtils.getScreenWidth(mContext);        mDisplayHeight = PixelUtils.getScreenWidth(mContext);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "BackgroundUpdater", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "updateBackgroundAsync", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateBackgroundAsync(String url) {        mBackgroundUrl = url;        if (null != mBackgroundTimer) {            mBackgroundTimer.cancel();        }        mBackgroundTimer = new Timer();        mBackgroundTimer.schedule(new UpdateBackgroundTask(), BACKGROUND_UPDATE_DELAY);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "BackgroundUpdater", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "updateBackground", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateBackground(final String uri) {        if (null != mBackgroundTimer) {            mBackgroundTimer.cancel();        }        //load default background image        if (null == uri) {            Picasso.get().load(mDefaultBackground).into(mBackgroundImageTarget);            return;        }        //load actual background image        Picasso.get()                .load(uri)                .error(mDefaultBackground)                .into(mBackgroundImageTarget);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "BackgroundUpdater", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDefaultBackground", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setDefaultBackground(int resourceId) {        mDefaultBackground = resourceId;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "BackgroundUpdater", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "updateBackground", "params": ["Drawable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateBackground(Drawable drawable) {        mBackgroundManager.setDrawable(drawable);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "BackgroundUpdater", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "clearBackground", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearBackground() {        mBackgroundManager.setThemeDrawableResourceId(mDefaultBackground);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "BackgroundUpdater", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "destroy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroy() {        if (null != mBackgroundTimer) {            mBackgroundTimer.cancel();        }        Picasso.get().cancelRequest(mBackgroundImageTarget);        mBackgroundManager.release();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "BackgroundUpdater", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {            ThreadUtils.runOnUiThread(new Runnable() {                @Override                public void run() {                    if (mBackgroundUrl != null) {                        updateBackground(mBackgroundUrl.toString());                    }                }            });        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/utils/BackgroundUpdater.java", "stars": "4", "class": {"name": "UpdateBackgroundTask", "extends": "TimerTask", "implements": null, "modifiers": ["private"]}}, {"method_name": "isDebugEnabled", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isDebugEnabled() {    return log.isDebugEnabled();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j/Log4jImpl.java", "stars": "15", "class": {"name": "Log4jImpl", "extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"method_name": "isTraceEnabled", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isTraceEnabled() {    return log.isTraceEnabled();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j/Log4jImpl.java", "stars": "15", "class": {"name": "Log4jImpl", "extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"method_name": "error", "params": ["String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(String s, Throwable e) {    log.log(FQCN, Level.ERROR, s, e);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j/Log4jImpl.java", "stars": "15", "class": {"name": "Log4jImpl", "extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"method_name": "error", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(String s) {    log.log(FQCN, Level.ERROR, s, null);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j/Log4jImpl.java", "stars": "15", "class": {"name": "Log4jImpl", "extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"method_name": "debug", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void debug(String s) {    log.log(FQCN, Level.DEBUG, s, null);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j/Log4jImpl.java", "stars": "15", "class": {"name": "Log4jImpl", "extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"method_name": "trace", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void trace(String s) {    log.log(FQCN, Level.TRACE, s, null);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j/Log4jImpl.java", "stars": "15", "class": {"name": "Log4jImpl", "extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"method_name": "warn", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void warn(String s) {    log.log(FQCN, Level.WARN, s, null);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/log4j/Log4jImpl.java", "stars": "15", "class": {"name": "Log4jImpl", "extends": null, "implements": ["Log"], "modifiers": ["public"]}}, {"method_name": "addDefaultConstructor", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addDefaultConstructor(Class<?> clazz) {    Constructor<?>[] constructors = clazz.getDeclaredConstructors();    Arrays.stream(constructors).filter(constructor -> constructor.getParameterTypes().length == 0)      .findAny().ifPresent(constructor -> this.defaultConstructor = constructor);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addGetMethods", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addGetMethods(Class<?> clazz) {    Map<String, List<Method>> conflictingGetters = new HashMap<>();    Method[] methods = getClassMethods(clazz);    Arrays.stream(methods).filter(m -> m.getParameterTypes().length == 0 && PropertyNamer.isGetter(m.getName()))      .forEach(m -> addMethodConflict(conflictingGetters, PropertyNamer.methodToProperty(m.getName()), m));    resolveGetterConflicts(conflictingGetters);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveGetterConflicts", "params": ["Map<String,List>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveGetterConflicts(Map<String, List<Method>> conflictingGetters) {    for (Entry<String, List<Method>> entry : conflictingGetters.entrySet()) {      Method winner = null;      String propName = entry.getKey();      boolean isAmbiguous = false;      for (Method candidate : entry.getValue()) {        if (winner == null) {          winner = candidate;          continue;        }        Class<?> winnerType = winner.getReturnType();        Class<?> candidateType = candidate.getReturnType();        if (candidateType.equals(winnerType)) {          if (!boolean.class.equals(candidateType)) {            isAmbiguous = true;            break;          } else if (candidate.getName().startsWith(\"is\")) {            winner = candidate;          }        } else if (candidateType.isAssignableFrom(winnerType)) {          // OK getter type is descendant        } else if (winnerType.isAssignableFrom(candidateType)) {          winner = candidate;        } else {          isAmbiguous = true;          break;        }      }      addGetMethod(propName, winner, isAmbiguous);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addGetMethod", "params": ["String", "Method", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addGetMethod(String name, Method method, boolean isAmbiguous) {    MethodInvoker invoker = isAmbiguous        ? new AmbiguousMethodInvoker(method, MessageFormat.format(            \"Illegal overloaded getter method with ambiguous type for property ''{0}'' in class ''{1}''. This breaks the JavaBeans specification and can cause unpredictable results.\",            name, method.getDeclaringClass().getName()))        : new MethodInvoker(method);    getMethods.put(name, invoker);    Type returnType = TypeParameterResolver.resolveReturnType(method, type);    getTypes.put(name, typeToClass(returnType));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addSetMethods", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addSetMethods(Class<?> clazz) {    Map<String, List<Method>> conflictingSetters = new HashMap<>();    Method[] methods = getClassMethods(clazz);    Arrays.stream(methods).filter(m -> m.getParameterTypes().length == 1 && PropertyNamer.isSetter(m.getName()))      .forEach(m -> addMethodConflict(conflictingSetters, PropertyNamer.methodToProperty(m.getName()), m));    resolveSetterConflicts(conflictingSetters);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addMethodConflict", "params": ["Map<String,List>", "String", "Method"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addMethodConflict(Map<String, List<Method>> conflictingMethods, String name, Method method) {    if (isValidPropertyName(name)) {      List<Method> list = conflictingMethods.computeIfAbsent(name, k -> new ArrayList<>());      list.add(method);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveSetterConflicts", "params": ["Map<String,List>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveSetterConflicts(Map<String, List<Method>> conflictingSetters) {    for (String propName : conflictingSetters.keySet()) {      List<Method> setters = conflictingSetters.get(propName);      Class<?> getterType = getTypes.get(propName);      boolean isGetterAmbiguous = getMethods.get(propName) instanceof AmbiguousMethodInvoker;      boolean isSetterAmbiguous = false;      Method match = null;      for (Method setter : setters) {        if (!isGetterAmbiguous && setter.getParameterTypes()[0].equals(getterType)) {          // should be the best match          match = setter;          break;        }        if (!isSetterAmbiguous) {          match = pickBetterSetter(match, setter, propName);          isSetterAmbiguous = match == null;        }      }      if (match != null) {        addSetMethod(propName, match);      }    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pickBetterSetter", "params": ["Method", "Method", "String"], "throws": null, "modifiers": ["private"], "return_type": "Method", "snippet": "  private Method pickBetterSetter(Method setter1, Method setter2, String property) {    if (setter1 == null) {      return setter2;    }    Class<?> paramType1 = setter1.getParameterTypes()[0];    Class<?> paramType2 = setter2.getParameterTypes()[0];    if (paramType1.isAssignableFrom(paramType2)) {      return setter2;    } else if (paramType2.isAssignableFrom(paramType1)) {      return setter1;    }    MethodInvoker invoker = new AmbiguousMethodInvoker(setter1,        MessageFormat.format(            \"Ambiguous setters defined for property ''{0}'' in class ''{1}'' with types ''{2}'' and ''{3}''.\",            property, setter2.getDeclaringClass().getName(), paramType1.getName(), paramType2.getName()));    setMethods.put(property, invoker);    Type[] paramTypes = TypeParameterResolver.resolveParamTypes(setter1, type);    setTypes.put(property, typeToClass(paramTypes[0]));    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addSetMethod", "params": ["String", "Method"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addSetMethod(String name, Method method) {    MethodInvoker invoker = new MethodInvoker(method);    setMethods.put(name, invoker);    Type[] paramTypes = TypeParameterResolver.resolveParamTypes(method, type);    setTypes.put(name, typeToClass(paramTypes[0]));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "typeToClass", "params": ["Type"], "throws": null, "modifiers": ["private"], "return_type": "Class<?>", "snippet": "  private Class<?> typeToClass(Type src) {    Class<?> result = null;    if (src instanceof Class) {      result = (Class<?>) src;    } else if (src instanceof ParameterizedType) {      result = (Class<?>) ((ParameterizedType) src).getRawType();    } else if (src instanceof GenericArrayType) {      Type componentType = ((GenericArrayType) src).getGenericComponentType();      if (componentType instanceof Class) {        result = Array.newInstance((Class<?>) componentType, 0).getClass();      } else {        Class<?> componentClass = typeToClass(componentType);        result = Array.newInstance(componentClass, 0).getClass();      }    }    if (result == null) {      result = Object.class;    }    return result;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addFields", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addFields(Class<?> clazz) {    Field[] fields = clazz.getDeclaredFields();    for (Field field : fields) {      if (!setMethods.containsKey(field.getName())) {        // issue #379 - removed the check for final because JDK 1.5 allows        // modification of final fields through reflection (JSR-133). (JGB)        // pr #16 - final static can only be set by the classloader        int modifiers = field.getModifiers();        if (!(Modifier.isFinal(modifiers) && Modifier.isStatic(modifiers))) {          addSetField(field);        }      }      if (!getMethods.containsKey(field.getName())) {        addGetField(field);      }    }    if (clazz.getSuperclass() != null) {      addFields(clazz.getSuperclass());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addSetField", "params": ["Field"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addSetField(Field field) {    if (isValidPropertyName(field.getName())) {      setMethods.put(field.getName(), new SetFieldInvoker(field));      Type fieldType = TypeParameterResolver.resolveFieldType(field, type);      setTypes.put(field.getName(), typeToClass(fieldType));    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addGetField", "params": ["Field"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addGetField(Field field) {    if (isValidPropertyName(field.getName())) {      getMethods.put(field.getName(), new GetFieldInvoker(field));      Type fieldType = TypeParameterResolver.resolveFieldType(field, type);      getTypes.put(field.getName(), typeToClass(fieldType));    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isValidPropertyName", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isValidPropertyName(String name) {    return !(name.startsWith(\"$\") || \"serialVersionUID\".equals(name) || \"class\".equals(name));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getClassMethods", "params": ["Class<?>"], "throws": null, "modifiers": ["private"], "return_type": "Method", "snippet": "  private Method[] getClassMethods(Class<?> clazz) {    Map<String, Method> uniqueMethods = new HashMap<>();    Class<?> currentClass = clazz;    while (currentClass != null && currentClass != Object.class) {      addUniqueMethods(uniqueMethods, currentClass.getDeclaredMethods());      // we also need to look for interface methods -      // because the class may be abstract      Class<?>[] interfaces = currentClass.getInterfaces();      for (Class<?> anInterface : interfaces) {        addUniqueMethods(uniqueMethods, anInterface.getMethods());      }      currentClass = currentClass.getSuperclass();    }    Collection<Method> methods = uniqueMethods.values();    return methods.toArray(new Method[0]);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addUniqueMethods", "params": ["Map<String,Method>", "Method"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addUniqueMethods(Map<String, Method> uniqueMethods, Method[] methods) {    for (Method currentMethod : methods) {      if (!currentMethod.isBridge()) {        String signature = getSignature(currentMethod);        // check to see if the method is already known        // if it is known, then an extended class must have        // overridden a method        if (!uniqueMethods.containsKey(signature)) {          uniqueMethods.put(signature, currentMethod);        }      }    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSignature", "params": ["Method"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getSignature(Method method) {    StringBuilder sb = new StringBuilder();    Class<?> returnType = method.getReturnType();    if (returnType != null) {      sb.append(returnType.getName()).append('#');    }    sb.append(method.getName());    Class<?>[] parameters = method.getParameterTypes();    for (int i = 0; i < parameters.length; i++) {      sb.append(i == 0 ? ':' : ',').append(parameters[i].getName());    }    return sb.toString();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "canControlMemberAccessible", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "  public static boolean canControlMemberAccessible() {    try {      SecurityManager securityManager = System.getSecurityManager();      if (null != securityManager) {        securityManager.checkPermission(new ReflectPermission(\"suppressAccessChecks\"));      }    } catch (SecurityException e) {      return false;    }    return true;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getType() {    return type;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDefaultConstructor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Constructor<?>", "snippet": "  public Constructor<?> getDefaultConstructor() {    if (defaultConstructor != null) {      return defaultConstructor;    } else {      throw new ReflectionException(\"There is no default constructor for \" + type);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "hasDefaultConstructor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasDefaultConstructor() {    return defaultConstructor != null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSetInvoker", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Invoker", "snippet": "  public Invoker getSetInvoker(String propertyName) {    Invoker method = setMethods.get(propertyName);    if (method == null) {      throw new ReflectionException(\"There is no setter for property named '\" + propertyName + \"' in '\" + type + \"'\");    }    return method;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getGetInvoker", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Invoker", "snippet": "  public Invoker getGetInvoker(String propertyName) {    Invoker method = getMethods.get(propertyName);    if (method == null) {      throw new ReflectionException(\"There is no getter for property named '\" + propertyName + \"' in '\" + type + \"'\");    }    return method;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSetterType", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getSetterType(String propertyName) {    Class<?> clazz = setTypes.get(propertyName);    if (clazz == null) {      throw new ReflectionException(\"There is no setter for property named '\" + propertyName + \"' in '\" + type + \"'\");    }    return clazz;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getGetterType", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getGetterType(String propertyName) {    Class<?> clazz = getTypes.get(propertyName);    if (clazz == null) {      throw new ReflectionException(\"There is no getter for property named '\" + propertyName + \"' in '\" + type + \"'\");    }    return clazz;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getGetablePropertyNames", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getGetablePropertyNames() {    return readablePropertyNames;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSetablePropertyNames", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getSetablePropertyNames() {    return writablePropertyNames;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "hasSetter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasSetter(String propertyName) {    return setMethods.keySet().contains(propertyName);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "hasGetter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasGetter(String propertyName) {    return getMethods.keySet().contains(propertyName);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findPropertyName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String findPropertyName(String name) {    return caseInsensitivePropertyMap.get(name.toUpperCase(Locale.ENGLISH));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/Reflector.java", "stars": "15", "class": {"name": "Reflector", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "visit", "params": ["int", "int", "String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void visit(int version, int access, String name, String signature, String superName, String[] interfaces) {        owner = name;        for (int i = 0; i < interfaces.length; i++) {            if (interfaces[i].equals(Type.getInternalName(Jroutine.class))) {                throw new RuntimeException(name + \" has already been enhanced\");            }        }        String[] newInterfaces = new String[interfaces.length + 1];        System.arraycopy(interfaces, 0, newInterfaces, 0, interfaces.length);        // add marker interface        newInterfaces[newInterfaces.length - 1] = Type.getInternalName(Jroutine.class);        cv.visit(version, access, name, signature, superName, interfaces);    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineClassAdapter.java", "stars": "3", "class": {"name": "JroutineClassAdapter", "extends": "ClassVisitor", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"method_name": "visitMethod", "params": ["int", "String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "MethodVisitor", "snippet": "    public MethodVisitor visitMethod(int access, String name, String descriptor, String signature,            String[] exceptions) {        MethodVisitor mv = super.visitMethod(access, name, descriptor, signature, exceptions);        // skip constructor, native and abstract methods        if (mv != null && !\"<init>\".equals(name) && ((access & (ACC_ABSTRACT | ACC_NATIVE)) == 0)) {            mv = new JroutineMethodAnalyzer(owner, mv, access, name, descriptor, signature, exceptions);        }        return mv;    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineClassAdapter.java", "stars": "3", "class": {"name": "JroutineClassAdapter", "extends": "ClassVisitor", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"method_name": "init", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() throws Exception {        log.info(\"\u5f00\u59cb\u68c0\u6d4b\u914d\u7f6e\");        this.detection();    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/HallInitializer.java", "stars": "1", "class": {"name": "HallInitializer", "extends": "BaseLocalMemory", "implements": ["AppInitializer"], "modifiers": ["public"]}}, {"method_name": "order", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int order() {        return Const.Number.ONE;    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/HallInitializer.java", "stars": "1", "class": {"name": "HallInitializer", "extends": "BaseLocalMemory", "implements": ["AppInitializer"], "modifiers": ["public"]}}, {"method_name": "detection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void detection() {        String channelIdStr = redisUtil.getStr(RedisKey.CHANNEL_IDS.getKey());        JSONArray jsonArray = JSONArray.parseArray(channelIdStr);        Map<Integer, GameConfig> map = baseLocalMemory.getGameConfigMap();        Map<Integer, GameJack> gameJackMap = baseLocalMemory.getGameJackMap();        jsonArray.forEach(channelId -> {            log.info(\"\u6e20\u9053\u8d4b\u503c\u6e38\u620f\u914d\u7f6e channelId:{}\", channelId);            String gameConfigStr = redisUtil.getHash(RedisKey.GAME_CONFIGS.getKey() + channelId, GAME_ID.toString());            map.put(Integer.valueOf(channelId.toString()), JSONObject.parseObject(gameConfigStr, GameConfig.class));            baseLocalMemory.setGameConfigMap(map);            String jackPotList = redisUtil.getHash(RedisKey.JACK_POT.getKey() + channelId, GAME_ID.toString());            gameJackMap.put(Integer.valueOf(channelId.toString()), JSONObject.parseObject(jackPotList, GameJack.class));            baseLocalMemory.setGameJackMap(gameJackMap);        });        String serverConfig = redisUtil.getHash(RedisKey.SERVER_CONFIGS.getKey(), GAME_ID.toString());        ServerInfoConfig serverInfoNew = JSONObject.parseObject(serverConfig, ServerInfoConfig.class);        if (Objects.nonNull(serverInfoNew)) {            log.info(\"\u5f00\u59cb\u8d4b\u503c\u542f\u52a8\u9879\u76ee\u6240\u9700\u8981\u7684\u914d\u7f6e\u4fe1\u606f GameId:{} port:{}\", serverInfoNew.getGameId(), serverInfoNew.getStartPort());            baseLocalMemory.setServerInfo(serverInfoNew);        }    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/service/HallInitializer.java", "stars": "1", "class": {"name": "HallInitializer", "extends": "BaseLocalMemory", "implements": ["AppInitializer"], "modifiers": ["public"]}}, {"method_name": "doUpdate", "params": ["MappedStatement", "Object"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "int", "snippet": "  public int doUpdate(MappedStatement ms, Object parameter) throws SQLException {    Statement stmt = null;    try {      Configuration configuration = ms.getConfiguration();      StatementHandler handler = configuration.newStatementHandler(this, ms, parameter, RowBounds.DEFAULT, null, null);      stmt = prepareStatement(handler, ms.getStatementLog());      //return handler.update(stmt);  modify by xuliang 20200403      return 0;    } finally {      closeStatement(stmt);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/SimpleExecutor.java", "stars": "15", "class": {"name": "SimpleExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "doQuery", "params": ["MappedStatement", "Object", "RowBounds", "ResultHandler", "BoundSql"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<E>", "snippet": "  public <E> List<E> doQuery(MappedStatement ms, Object parameter, RowBounds rowBounds, ResultHandler resultHandler, BoundSql boundSql) throws SQLException {    Statement stmt = null;    try {      Configuration configuration = ms.getConfiguration();      StatementHandler handler = configuration.newStatementHandler(wrapper, ms, parameter, rowBounds, resultHandler, boundSql);      stmt = prepareStatement(handler, ms.getStatementLog());      return handler.query(stmt, resultHandler);    } finally {      closeStatement(stmt);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/SimpleExecutor.java", "stars": "15", "class": {"name": "SimpleExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "doQueryCursor", "params": ["MappedStatement", "Object", "RowBounds", "BoundSql"], "throws": ["SQLException"], "modifiers": ["protected"], "return_type": "Cursor<E>", "snippet": "  protected <E> Cursor<E> doQueryCursor(MappedStatement ms, Object parameter, RowBounds rowBounds, BoundSql boundSql) throws SQLException {    Configuration configuration = ms.getConfiguration();    StatementHandler handler = configuration.newStatementHandler(wrapper, ms, parameter, rowBounds, null, boundSql);    Statement stmt = prepareStatement(handler, ms.getStatementLog());    Cursor<E> cursor = handler.queryCursor(stmt);    stmt.closeOnCompletion();    return cursor;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/SimpleExecutor.java", "stars": "15", "class": {"name": "SimpleExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "doFlushStatements", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "List<BatchResult>", "snippet": "  public List<BatchResult> doFlushStatements(boolean isRollback) {    return Collections.emptyList();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/SimpleExecutor.java", "stars": "15", "class": {"name": "SimpleExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "prepareStatement", "params": ["StatementHandler", "Log"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "Statement", "snippet": "  private Statement prepareStatement(StatementHandler handler, Log statementLog) throws SQLException {    Statement stmt;    Connection connection = getConnection(statementLog);    stmt = handler.prepare(connection, transaction.getTimeout());    handler.parameterize(stmt);    return stmt;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/SimpleExecutor.java", "stars": "15", "class": {"name": "SimpleExecutor", "extends": "BaseExecutor", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreateViewHolder", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "contactsinhomeadapter", "snippet": "    public contactsinhomeadapter.contactHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        LayoutInflater myInflater = LayoutInflater.from(ctx);        View myView = myInflater.inflate(R.layout.contact_child,parent,false);        return new contactHolder(myView);    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contactinhomeadapter.java", "stars": "2", "class": {"name": "contactsinhomeadapter", "extends": "RecyclerView", "implements": null, "modifiers": []}}, {"method_name": "onBindViewHolder", "params": ["contactHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull contactHolder holder, int position) {        //todo we have to bind the holder later on let me do the fragment work done.        final listforadapter myListobj1 = data.get(position);        holder.t1_name.setText(myListobj1.getName());        holder.t2_number.setText(myListobj1.getPhone());        TextDrawable drawable = TextDrawable.builder().buildRound(myListobj1.getName().substring(0, 1).toUpperCase(), Color.rgb(15,167,255));        holder.contactimg.setBackground(drawable);        holder.itemView.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                final String frname=myListobj1.getName();                inbetweendata.name=frname;                SharedPreferences sf=ctx.getSharedPreferences(\"Login data\",MODE_PRIVATE);                final String s=sf.getString(\"user\",\"unable to fetch\");                final DatabaseReference db=FirebaseDatabase.getInstance().getReference(\"Users\");                db.child(s).child(\"Transactions\").child(\"give money\").addValueEventListener(new ValueEventListener() {                    @Override                    public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                        for(DataSnapshot dp:dataSnapshot.getChildren()){                            String sss=dp.getKey();                            for(DataSnapshot sd:dp.getChildren()){                                String name=sd.getKey();                                String money=sd.getValue().toString();                                System.out.println(sss+\" \"+name+\" \"+money);                                if (sss.equals(frname)){                                    inbetweendata.ll.add(new datapersoninfo(sss,money,name,\"give money\"));                                }                            }                        }                        db.child(s).child(\"Transactions\").child(\"take money\").addValueEventListener(new ValueEventListener() {                            @Override                            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                                for(DataSnapshot dp:dataSnapshot.getChildren()){                                    String sss=dp.getKey();                                    for(DataSnapshot sd:dp.getChildren()){                                        String name=sd.getKey();                                        String money=sd.getValue().toString();                                        System.out.println(sss+\" \"+name+\" \"+money);                                        if (sss.equals(frname)){                                            inbetweendata.ll.add(new datapersoninfo(sss,money,name,\"take money\"));                                        }                                    }                                }                                FragmentManager manager = ((home)ctx).getSupportFragmentManager();                                manager.beginTransaction().replace(R.id.main_hu_container,new perpersoninfo_fragment()).commit();                                manager.beginTransaction().addToBackStack(\"personinfo\").commit();                            }                            @Override                            public void onCancelled(@NonNull DatabaseError databaseError) {                            }                        });                    }                    @Override                    public void onCancelled(@NonNull DatabaseError databaseError) {                    }                });            }        });    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contactinhomeadapter.java", "stars": "2", "class": {"name": "contactsinhomeadapter", "extends": "RecyclerView", "implements": null, "modifiers": []}}, {"method_name": "getItemCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {        return data.size();    }", "url": "https://raw.githubusercontent.com/AkhilRautela/ledger_system/master/app/src/main/java/com/example/ledgersystem/contactinhomeadapter.java", "stars": "2", "class": {"name": "contactsinhomeadapter", "extends": "RecyclerView", "implements": null, "modifiers": []}}, {"method_name": "startActivity", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "Intent", "snippet": "    public static Intent startActivity(Activity activity) {        Intent intent = new Intent(activity, SearchActivity.class);        activity.startActivity(intent);//\t\tactivity.overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out,);        return intent;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/SearchActivity.java", "stars": "4", "class": {"name": "SearchActivity", "extends": "ButterBaseActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState, R.layout.activity_search);        setSupportActionBar(toolbar);        getSupportActionBar().setDisplayHomeAsUpEnabled(true);        setShowCasting(true);        ToolbarUtils.updateToolbarHeight(this, toolbar);        mSearchview.onActionViewExpanded();        mSearchview.setOnQueryTextListener(mSearchListener);        //dont re add the fragment if it exists        if (null != savedInstanceState) {            mFragment = (MediaListFragment) getSupportFragmentManager().findFragmentById(R.id.fragment);            return;        }        //create and add the media fragment        mFragment = MediaListFragment.newInstance(MediaListFragment.Mode.SEARCH, MediaProvider.Filters.Sort.POPULARITY,                MediaProvider.Filters.Order.DESC);        getSupportFragmentManager().beginTransaction().replace(R.id.fragment, mFragment).commit();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/SearchActivity.java", "stars": "4", "class": {"name": "SearchActivity", "extends": "ButterBaseActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onOptionsItemSelected", "params": ["MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onOptionsItemSelected(MenuItem item) {        switch (item.getItemId()) {            case android.R.id.home:                onHomePressed();                //to fade out the activity                overridePendingTransition(android.R.anim.fade_in, android.R.anim.fade_out);                return true;        }        return super.onOptionsItemSelected(item);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/activities/SearchActivity.java", "stars": "4", "class": {"name": "SearchActivity", "extends": "ButterBaseActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getId() {\t\treturn Id;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/ClienteResumoModel.java", "stars": "2", "class": {"name": "ClienteResumoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(Long id) {\t\tId = id;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/ClienteResumoModel.java", "stars": "2", "class": {"name": "ClienteResumoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getNome", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getNome() {\t\treturn nome;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/ClienteResumoModel.java", "stars": "2", "class": {"name": "ClienteResumoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setNome", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setNome(String nome) {\t\tthis.nome = nome;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/ClienteResumoModel.java", "stars": "2", "class": {"name": "ClienteResumoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        show02();    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo02/Map/Demo01HashMapSavePerson.java", "stars": "2", "class": {"name": "Demo01HashMapSavePerson", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "show02", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void show02() {        //\u521b\u5efaHashMap\u96c6\u5408        HashMap<Person,String> map = new HashMap<>();        //\u5f80\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20        map.put(new Person(\"\u5973\u738b\",18),\"\u82f1\u56fd\");        map.put(new Person(\"\u79e6\u59cb\u7687\",18),\"\u79e6\u56fd\");        map.put(new Person(\"\u666e\u4eac\",30),\"\u4fc4\u7f57\u65af\");        map.put(new Person(\"\u5973\u738b\",18),\"\u6bdb\u91cc\u6c42\u65af\");        //\u4f7f\u7528entrySet\u548c\u589e\u5f3afor\u904d\u5386Map\u96c6\u5408        Set<Map.Entry<Person, String>> set = map.entrySet();        for (Map.Entry<Person, String> entry : set) {            Person key = entry.getKey();            String value = entry.getValue();            System.out.println(key+\"-->\"+value);        }    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo02/Map/Demo01HashMapSavePerson.java", "stars": "2", "class": {"name": "Demo01HashMapSavePerson", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "show01", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void show01() {        //\u521b\u5efaHashMap\u96c6\u5408        HashMap<String,Person> map = new HashMap<>();        //\u5f80\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20        map.put(\"\u5317\u4eac\",new Person(\"\u5f20\u4e09\",18));        map.put(\"\u4e0a\u6d77\",new Person(\"\u674e\u56db\",19));        map.put(\"\u5e7f\u5dde\",new Person(\"\u738b\u4e94\",20));        map.put(\"\u5317\u4eac\",new Person(\"\u8d75\u516d\",18));        //\u4f7f\u7528keySet\u52a0\u589e\u5f3afor\u904d\u5386Map\u96c6\u5408        Set<String> set = map.keySet();        for (String key : set) {            Person value = map.get(key);            System.out.println(key+\"-->\"+value);        }    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo02/Map/Demo01HashMapSavePerson.java", "stars": "2", "class": {"name": "Demo01HashMapSavePerson", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TimePickerRenderer.java", "stars": "2", "class": {"name": "TimePickerRenderer", "extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TimePickerRenderer.java", "stars": "2", "class": {"name": "TimePickerRenderer", "extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "addPeriodicSync", "params": ["Account", "String", "Bundle", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addPeriodicSync(Account account, String authority, Bundle extras, long pollFrequency) {        ContentResolver.addPeriodicSync(convertAccount(account), authority, extras, pollFrequency);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/FroyoContentSyncer.java", "stars": "74", "class": {"name": "FroyoContentSyncer", "extends": "EclairContentSyncer", "implements": null, "modifiers": []}}, {"method_name": "removePeriodicSync", "params": ["Account", "String", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removePeriodicSync(Account account, String authority, Bundle extras) {        ContentResolver.removePeriodicSync(convertAccount(account), authority, extras);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/accounts/FroyoContentSyncer.java", "stars": "74", "class": {"name": "FroyoContentSyncer", "extends": "EclairContentSyncer", "implements": null, "modifiers": []}}, {"method_name": "list", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "List<Book>", "snippet": "    public List<Book> list() throws Exception {        return bookService.list();    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/controller/LibraryController.java", "stars": "2", "class": {"name": "LibraryController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addOrUpdate", "params": ["Book"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "Book", "snippet": "    public Book addOrUpdate(@RequestBody Book book) throws Exception {        bookService.addOrUpdate(book);        return book;    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/controller/LibraryController.java", "stars": "2", "class": {"name": "LibraryController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "delete", "params": ["Book"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(@RequestBody Book book) throws Exception {        bookService.deleteById(book.getId());    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/controller/LibraryController.java", "stars": "2", "class": {"name": "LibraryController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "listByCategory", "params": ["int"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "List<Book>", "snippet": "    public List<Book> listByCategory(@PathVariable(\"cid\") int cid) throws Exception {        if (0 != cid) {            return bookService.listByCategory(cid);        } else {            return list();        }    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/controller/LibraryController.java", "stars": "2", "class": {"name": "LibraryController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "searchResult", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Book>", "snippet": "    public List<Book> searchResult(@RequestParam(\"keywords\") String keywords) {        // \u5173\u952e\u8bcd\u4e3a\u7a7a\u65f6\u67e5\u8be2\u51fa\u6240\u6709\u4e66\u7c4d        if (\"\".equals(keywords)) {            return bookService.list();        } else {            return bookService.Search(keywords);        }    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/controller/LibraryController.java", "stars": "2", "class": {"name": "LibraryController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "coversUpload", "params": ["MultipartFile"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String coversUpload(MultipartFile file) throws Exception {        String folder = \"D:/work/img\";        File imageFolder = new File(folder);        File f = new File(imageFolder, StringUtils.getRandomString(6) + file.getOriginalFilename()                .substring(file.getOriginalFilename().length() - 4));        if (!f.getParentFile().exists()){            f.getParentFile().mkdirs();        }        try {            file.transferTo(f);            String imgURL = \"http://localhost:1024/api/file/\" + f.getName();            return imgURL;        } catch (IOException e) {            e.printStackTrace();            return \"\";        }    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/controller/LibraryController.java", "stars": "2", "class": {"name": "LibraryController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "corsFilter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CorsFilter", "snippet": "    public CorsFilter corsFilter() {        final UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();        final CorsConfiguration config = new CorsConfiguration();        config.setAllowCredentials(true); // \u5141\u8bb8cookies\u8de8\u57df        config.addAllowedOrigin(\"*\");// #\u5141\u8bb8\u5411\u8be5\u670d\u52a1\u5668\u63d0\u4ea4\u8bf7\u6c42\u7684URI\uff0c*\u8868\u793a\u5168\u90e8\u5141\u8bb8\uff0c\u5728SpringMVC\u4e2d\uff0c\u5982\u679c\u8bbe\u6210*\uff0c\u4f1a\u81ea\u52a8\u8f6c\u6210\u5f53\u524d\u8bf7\u6c42\u5934\u4e2d\u7684Origin        config.addAllowedHeader(\"*\");// #\u5141\u8bb8\u8bbf\u95ee\u7684\u5934\u4fe1\u606f,*\u8868\u793a\u5168\u90e8        config.setMaxAge(7200L);// \u9884\u68c0\u8bf7\u6c42\u7684\u7f13\u5b58\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u5373\u5728\u8fd9\u4e2a\u65f6\u95f4\u6bb5\u91cc\uff0c\u5bf9\u4e8e\u76f8\u540c\u7684\u8de8\u57df\u8bf7\u6c42\u4e0d\u4f1a\u518d\u9884\u68c0\u4e86        config.addAllowedMethod(\"*\");// \u5141\u8bb8\u63d0\u4ea4\u8bf7\u6c42\u7684\u65b9\u6cd5\uff0c*\u8868\u793a\u5168\u90e8\u5141\u8bb8        source.registerCorsConfiguration(\"/**\", config);        return new CorsFilter(source);    }", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-zuul-service/src/main/java/com/iiht/stock/zuul/conf/CorsConfig.java", "stars": "2", "class": {"name": "CorsConfig", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getContentFromFile", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getContentFromFile(File file){        try{            return getContentFromInputStream(new FileInputStream(file));        }catch (Exception e){            e.printStackTrace();        }        // return \"\u89e3\u6790\u6587\u4ef6\u5931\u8d25!!!\";        return \"Failed to parse file!!!\";    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/FileDataChangeUtil.java", "stars": "7", "class": {"name": "FileDataChangeUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getContentFromInputStream", "params": ["InputStream"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getContentFromInputStream(InputStream inputStream){        try{            InputStreamReader reader=new InputStreamReader(inputStream,\"UTF-8\");            BufferedReader bfreader=new BufferedReader(reader);            String line;            StringBuffer stringBuffer = new StringBuffer();            while((line=bfreader.readLine())!=null) {//\u5305\u542b\u8be5\u884c\u5185\u5bb9\u7684\u5b57\u7b26\u4e32\uff0c\u4e0d\u5305\u542b\u4efb\u4f55\u884c\u7ec8\u6b62\u7b26\uff0c\u5982\u679c\u5df2\u5230\u8fbe\u6d41\u672b\u5c3e\uff0c\u5219\u8fd4\u56de null                stringBuffer.append(line+System.getProperty(\"line.separator\"));            }            return stringBuffer.toString();        }catch (Exception e){            e.printStackTrace();        }        // return \"\u89e3\u6790\u6587\u4ef6\u5931\u8d25!!!\";        return \"Failed to parse file!!!\";    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/FileDataChangeUtil.java", "stars": "7", "class": {"name": "FileDataChangeUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getBytesFromFile", "params": ["File"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] getBytesFromFile(File file) {        try {            FileInputStream fis = new FileInputStream(file);            ByteArrayOutputStream bos = new ByteArrayOutputStream(100000);            IOUtils.copy(fis, bos);            byte[] data = bos.toByteArray();            bos.close();            return data;        } catch (Exception e) {            e.printStackTrace();        }        return null;    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/FileDataChangeUtil.java", "stars": "7", "class": {"name": "FileDataChangeUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getBytesFromInputStream", "params": ["InputStream"], "throws": null, "modifiers": ["public", "static"], "return_type": "byte", "snippet": "    public static byte[] getBytesFromInputStream(InputStream inputStream){        try {            ByteArrayOutputStream bos = new ByteArrayOutputStream(100000);            IOUtils.copy(inputStream, bos);            byte[] data = bos.toByteArray();            bos.close();            return data;        } catch (Exception e) {            e.printStackTrace();        }        return null;    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/util/FileDataChangeUtil.java", "stars": "7", "class": {"name": "FileDataChangeUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {        FileWriter fw = new FileWriter(\"09_IOAndProperties\\\\g.txt\",true);        for (int i = 0; i <10 ; i++) {            fw.write(\"HelloWorld\"+i+\"\\r\\n\");        }        fw.close();    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/20.%E3%80%90%E5%AD%97%E8%8A%82%E6%B5%81%E3%80%81%E5%AD%97%E7%AC%A6%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/09_IOAndProperties/src/com/itheima/Demo05Writer/Demo04Writer.java", "stars": "2", "class": {"name": "Demo04Writer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "enqueue", "params": ["Subscription", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void enqueue(Subscription subscription, Object event) {        PendingPost pendingPost = PendingPost.obtainPendingPost(subscription, event);        synchronized (this) {            queue.enqueue(pendingPost);            if (!handlerActive) {                handlerActive = true;                if (!sendMessage(obtainMessage())) {                    throw new EventBusException(\"Could not send handler message\");                }            }        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/HandlerPoster.java", "stars": "7", "class": {"name": "HandlerPoster", "extends": "Handler", "implements": ["Poster"], "modifiers": ["public"]}}, {"method_name": "handleMessage", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleMessage(Message msg) {        boolean rescheduled = false;        try {            long started = SystemClock.uptimeMillis();            while (true) {                PendingPost pendingPost = queue.poll();                if (pendingPost == null) {                    synchronized (this) {                        // Check again, this time in synchronized                        pendingPost = queue.poll();                        if (pendingPost == null) {                            handlerActive = false;                            return;                        }                    }                }                eventBus.invokeSubscriber(pendingPost);                long timeInMethod = SystemClock.uptimeMillis() - started;                if (timeInMethod >= maxMillisInsideHandleMessage) {                    if (!sendMessage(obtainMessage())) {                        throw new EventBusException(\"Could not send handler message\");                    }                    rescheduled = true;                    return;                }            }        } finally {            handlerActive = rescheduled;        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/HandlerPoster.java", "stars": "7", "class": {"name": "HandlerPoster", "extends": "Handler", "implements": ["Poster"], "modifiers": ["public"]}}, {"method_name": "findSlot", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Type", "snippet": "\tprivate Type findSlot(String name) {\t\t@SuppressWarnings(\"unchecked\")\t\tMap<String, Type> map = (Map<String, Type>) getSon().getType().getData();\t\tType type = map.get(name);\t\treturn type;\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprDOT.java", "stars": "3", "class": {"name": "ExprDOT", "extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"method_name": "checkType", "params": [], "throws": ["TypeException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkType() throws TypeException {\t\tthis.getSon().checkType();\t\tgetSon().getType().assertType(this, TypeCode.STRUCT);\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprDOT.java", "stars": "3", "class": {"name": "ExprDOT", "extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"method_name": "generateCode", "params": [], "throws": ["CodeException"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String generateCode() throws CodeException {\t\tString result = \"\";\t\tString lhs = \"\";\t\tif (getSon().isPOINTER()) {\t\t\tlhs = ((ExprPOINTER)getSon()).getPointerCode();\t\t} \t\telse {\t\t\tlhs = getSon().generateCode();\t\t}\t\tswitch (getTypeCode()) {\t\tcase BOOLEAN:\t\tcase ENUM:\t\tcase FLOAT:\t\tcase INTEGER:\t\t\tresult += \"*(\" + lhs + \"+\" + this.getType().getOffset() + \")\";\t\t\tbreak;\t\tcase POINTER:\t\tcase STRING:\t\tcase STRUCT:\t\t\tresult += \"(\" + lhs + \"+\" + this.getType().getOffset() + \")\";\t\t\tbreak;\t\tdefault:\t\t\tthrow new CodeException(\"***erreur syst\u00e8me\" + getType().getTypeCode());\t\t}\t\treturn result;\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprDOT.java", "stars": "3", "class": {"name": "ExprDOT", "extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"method_name": "constEval", "params": ["Environment<ExprVALUE>"], "throws": ["EnvironmentException", "TypeException"], "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object constEval(Environment<ExprVALUE> environment) throws EnvironmentException, TypeException {\t\tthrow new TypeException(\"erreur syst\u00e8me\", line, column);\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprDOT.java", "stars": "3", "class": {"name": "ExprDOT", "extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\t\treturn this.getSon() + \".\" + name;\t}", "url": "https://raw.githubusercontent.com/RhenaudTheLukark/Lea2C/master/src/fr/ubordeaux/deptinfo/compilation/lea/abstract_syntax/ExprDOT.java", "stars": "3", "class": {"name": "ExprDOT", "extends": "ExprUnary", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {    // create an SqlSessionFactory    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/mapper_type_parameter/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    // populate in-memory database    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/mapper_type_parameter/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/mapper_type_parameter/MapperTypeParameterTest.java", "stars": "15", "class": {"name": "MapperTypeParameterTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveReturnType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveReturnType() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper mapper = sqlSession.getMapper(PersonMapper.class);      Person person = mapper.select(new Person(1));      assertEquals(\"Jane\", person.getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/mapper_type_parameter/MapperTypeParameterTest.java", "stars": "15", "class": {"name": "MapperTypeParameterTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveListTypeParam", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveListTypeParam() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper mapper = sqlSession.getMapper(PersonMapper.class);      List<Person> persons = mapper.selectList(null);      assertEquals(2, persons.size());      assertEquals(\"Jane\", persons.get(0).getName());      assertEquals(\"John\", persons.get(1).getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/mapper_type_parameter/MapperTypeParameterTest.java", "stars": "15", "class": {"name": "MapperTypeParameterTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveMultipleTypeParam", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveMultipleTypeParam() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);      Map<Long, Country> results = mapper.selectMap(new Country());      assertEquals(2, results.size());      assertEquals(\"Japan\", results.get(1L).getName());      assertEquals(\"New Zealand\", results.get(2L).getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/mapper_type_parameter/MapperTypeParameterTest.java", "stars": "15", "class": {"name": "MapperTypeParameterTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveParameterizedReturnType", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveParameterizedReturnType() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonListMapper mapper = sqlSession.getMapper(PersonListMapper.class);      List<Person> persons = mapper.select(null);      assertEquals(2, persons.size());      assertEquals(\"Jane\", persons.get(0).getName());      assertEquals(\"John\", persons.get(1).getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/mapper_type_parameter/MapperTypeParameterTest.java", "stars": "15", "class": {"name": "MapperTypeParameterTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveParam", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveParam() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      CountryMapper mapper = sqlSession.getMapper(CountryMapper.class);      assertEquals(1, mapper.update(new Country(2L, \"Greenland\")));    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/mapper_type_parameter/MapperTypeParameterTest.java", "stars": "15", "class": {"name": "MapperTypeParameterTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveListParam", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveListParam() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper mapper = sqlSession.getMapper(PersonMapper.class);      Person person1 = new Person(\"James\");      assertEquals(1, mapper.insert(Collections.singletonList(person1)));      assertNotNull(person1.getId());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/mapper_type_parameter/MapperTypeParameterTest.java", "stars": "15", "class": {"name": "MapperTypeParameterTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        SpringApplication.run(SecurityJwtApplication.class, args);    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/SecurityJwtApplication.java", "stars": "2", "class": {"name": "SecurityJwtApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "initComponents", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());        getContentPane().setLayout(layout);        layout.setHorizontalGroup(            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)            .addGap(0, 400, Short.MAX_VALUE)        );        layout.setVerticalGroup(            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)            .addGap(0, 300, Short.MAX_VALUE)        );        pack();    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/FileTransfer.java", "stars": "1", "class": {"name": "FileTransfer", "extends": "javax", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) {        /* Set the Nimbus look and feel */        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html          */        try {            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {                if (\"Nimbus\".equals(info.getName())) {                    javax.swing.UIManager.setLookAndFeel(info.getClassName());                    break;                }            }        } catch (ClassNotFoundException ex) {            java.util.logging.Logger.getLogger(FileTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);        } catch (InstantiationException ex) {            java.util.logging.Logger.getLogger(FileTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);        } catch (IllegalAccessException ex) {            java.util.logging.Logger.getLogger(FileTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);        } catch (javax.swing.UnsupportedLookAndFeelException ex) {            java.util.logging.Logger.getLogger(FileTransfer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);        }        //</editor-fold>        /* Create and display the form */        java.awt.EventQueue.invokeLater(new Runnable() {            public void run() {                new FileTransfer().setVisible(true);            }        });    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/FileTransfer.java", "stars": "1", "class": {"name": "FileTransfer", "extends": "javax", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        //\u8c03\u7528invokeCook\u65b9\u6cd5\uff0c\u53c2\u6570\u662fcook\u63a5\u53e3\uff0c\u4f20\u9012cook\u63a5\u53e3\u7684\u533f\u540d\u5185\u90e8\u7c7b\u5bf9\u8c61        invokeCook(new Cook() {            @Override            public void makeFood() {                System.out.println(\"\u5403\u996d\u5566\uff01\");            }        });        //\u4f7f\u7528Lambda\u8868\u8fbe\u5f0f\uff0c\u7b80\u5316\u533f\u540d\u5185\u90e8\u7c7b\u7684\u4e66\u5199        invokeCook(()->{            System.out.println(\"\u5403\u996d\u5566\uff01\");        });    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Cook/DemoCook.java", "stars": "2", "class": {"name": "DemoCook", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "invokeCook", "params": ["Cook"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void invokeCook(Cook cook){        cook.makeFood();    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/Cook/DemoCook.java", "stars": "2", "class": {"name": "DemoCook", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getTiles", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Tile", "snippet": "\tpublic Tile[] getTiles() {\t\treturn tiles;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/tile/loader/DynamicGlassTileLoader.java", "stars": "3", "class": {"name": "DynamicGlassTileLoader", "extends": null, "implements": ["TileLoader"], "modifiers": ["public"]}}, {"method_name": "hLine", "params": ["BufferedImage", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "\tprivate static void hLine(BufferedImage image, int xStart, int y, int length, int color) {\t\tfor(int x = 0; x < length; x++) {\t\t\timage.setRGB(x + xStart, y, color);\t\t}\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/tile/loader/DynamicGlassTileLoader.java", "stars": "3", "class": {"name": "DynamicGlassTileLoader", "extends": null, "implements": ["TileLoader"], "modifiers": ["public"]}}, {"method_name": "vLine", "params": ["BufferedImage", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "\tprivate static void vLine(BufferedImage image, int x, int yStart, int length, int color) {\t\tfor(int y = 0; y < length; y++) {\t\t\timage.setRGB(x, y + yStart, color);\t\t}\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/tile/loader/DynamicGlassTileLoader.java", "stars": "3", "class": {"name": "DynamicGlassTileLoader", "extends": null, "implements": ["TileLoader"], "modifiers": ["public"]}}, {"method_name": "unsubscribe", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unsubscribe() {    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/command/NotSupportedServiceSubscription.java", "stars": "4", "class": {"name": "NotSupportedServiceSubscription", "extends": null, "implements": ["ServiceSubscription"], "modifiers": ["public"]}}, {"method_name": "addListener", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T addListener(T listener) {        listeners.add(listener);        return listener;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/command/NotSupportedServiceSubscription.java", "stars": "4", "class": {"name": "NotSupportedServiceSubscription", "extends": null, "implements": ["ServiceSubscription"], "modifiers": ["public"]}}, {"method_name": "getListeners", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<T>", "snippet": "    public List<T> getListeners() {        return listeners;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/command/NotSupportedServiceSubscription.java", "stars": "4", "class": {"name": "NotSupportedServiceSubscription", "extends": null, "implements": ["ServiceSubscription"], "modifiers": ["public"]}}, {"method_name": "removeListener", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeListener(T listener) {        listeners.remove(listener);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/command/NotSupportedServiceSubscription.java", "stars": "4", "class": {"name": "NotSupportedServiceSubscription", "extends": null, "implements": ["ServiceSubscription"], "modifiers": ["public"]}}, {"method_name": "onShowFileChooser", "params": ["android", "android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onShowFileChooser (android.webkit.WebView p0, android.webkit.ValueCallback p1, android.webkit.WebChromeClient.FileChooserParams p2)\t{\t\treturn n_onShowFileChooser (p0, p1, p2);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsWebChromeClient.java", "stars": "2", "class": {"name": "FormsWebChromeClient", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "n_onShowFileChooser", "params": ["android", "android", "android"], "throws": null, "modifiers": ["native", "private"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onShowFileChooser (android.webkit.WebView p0, android.webkit.ValueCallback p1, android.webkit.WebChromeClient.FileChooserParams p2);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsWebChromeClient.java", "stars": "2", "class": {"name": "FormsWebChromeClient", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsWebChromeClient.java", "stars": "2", "class": {"name": "FormsWebChromeClient", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormsWebChromeClient.java", "stars": "2", "class": {"name": "FormsWebChromeClient", "extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "isWithinRadius", "params": ["Location", "Location", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isWithinRadius(Location l1, Location l2, int radius) {        if (l1.getWorld() != null && l2.getWorld() != null) {            return l1.getWorld().equals(l2.getWorld()) && getDistanceSquared(l1, l2) <= radius * radius;        }        return false;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getNearbyEntities", "params": ["Location", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Entity", "snippet": "    public static Entity[] getNearbyEntities(Location l, int radius) {        int chunkRadius = radius < 16 ? 1 : (radius - radius % 16) / 16;        HashSet<Entity> radiusEntities = new HashSet<>();        for (int chX = 0 - chunkRadius; chX <= chunkRadius; chX++) {            for (int chZ = 0 - chunkRadius; chZ <= chunkRadius; chZ++) {                int x = (int) l.getX(), y = (int) l.getY(), z = (int) l.getZ();                for (Entity e :                        new Location(l.getWorld(), x + chX * 16, y, z + chZ * 16).getChunk().getEntities()) {                    if (e.getLocation().getWorld().equals(l.getWorld())                            && e.getLocation().distanceSquared(l) <= radius * radius                            && e.getLocation().getBlock() != l.getBlock()) {                        radiusEntities.add(e);                    }                }            }        }        return radiusEntities.toArray(new Entity[radiusEntities.size()]);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getDistance", "params": ["Location", "Location"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double getDistance(Location l1, Location l2) {        return getBlockDistance(l1, l2);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getDistanceSquared", "params": ["Location", "Location"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double getDistanceSquared(Location l1, Location l2) {        return getBlockDistance(l1, l2) * getBlockDistance(l1, l2);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getBlockDistance", "params": ["Location", "Location"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getBlockDistance(Location l1, Location l2) {        int x = Math.abs(l1.getBlockX() - l2.getBlockX());        int y = Math.abs(l1.getBlockY() - l2.getBlockY());        int z = Math.abs(l1.getBlockZ() - l2.getBlockZ());        if (x >= y && x >= z) {            return x;        } else if (y >= x && y >= z) {            return y;        } else if (z >= x && z >= y) {            return z;        } else {            return x;        }    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getRealDistance", "params": ["double", "double", "double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double getRealDistance(double x1, double z1, double x2, double z2) {        double dx = Math.abs(x2 - x1);        double dy = Math.abs(z2 - z1);        return Math.sqrt(dx * dx + dy * dy);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getRelativeOffset", "params": ["Block", "BlockFace", "int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Block", "snippet": "    public static Block getRelativeOffset(            Block block, BlockFace facing, int offsetX, int offsetY, int offsetZ) {        BlockFace front = facing;        BlockFace back;        BlockFace right;        BlockFace left;        switch (front) {            case SOUTH:                back = BlockFace.NORTH;                left = BlockFace.EAST;                right = BlockFace.WEST;                break;            case WEST:                back = BlockFace.EAST;                left = BlockFace.SOUTH;                right = BlockFace.NORTH;                break;            case NORTH:                back = BlockFace.SOUTH;                left = BlockFace.WEST;                right = BlockFace.EAST;                break;            case EAST:                back = BlockFace.WEST;                left = BlockFace.NORTH;                right = BlockFace.SOUTH;                break;            default:                back = BlockFace.SOUTH;                left = BlockFace.EAST;                right = BlockFace.WEST;        }        // apply left and right offset        if (offsetX > 0) {            block = getRelativeBlock(block, right, offsetX);        } else if (offsetX < 0) {            block = getRelativeBlock(block, left, offsetX);        }        // apply front and back offset        if (offsetZ > 0) {            block = getRelativeBlock(block, front, offsetZ);        } else if (offsetZ < 0) {            block = getRelativeBlock(block, back, offsetZ);        }        // apply up and down offset        if (offsetY > 0) {            block = getRelativeBlock(block, BlockFace.UP, offsetY);        } else if (offsetY < 0) {            block = getRelativeBlock(block, BlockFace.DOWN, offsetY);        }        return block;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getSurroundingChunks", "params": ["Block", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Set<Chunk>", "snippet": "    public static Set<Chunk> getSurroundingChunks(Block block, int radius) {        Chunk chunk = block.getChunk();        radius = radius / 16 + 1;        Set<Chunk> chunks = new LinkedHashSet<>();        World world = chunk.getWorld();        int cX = chunk.getX();        int cZ = chunk.getZ();        for (int x = radius; x >= 0; x--) {            for (int z = radius; z >= 0; z--) {                chunks.add(world.getChunkAt(cX + x, cZ + z));                chunks.add(world.getChunkAt(cX - x, cZ - z));                chunks.add(world.getChunkAt(cX + x, cZ - z));                chunks.add(world.getChunkAt(cX - x, cZ + z));                chunks.add(world.getChunkAt(cX + x, cZ));                chunks.add(world.getChunkAt(cX - x, cZ));                chunks.add(world.getChunkAt(cX, cZ + z));                chunks.add(world.getChunkAt(cX, cZ - z));            }        }        return chunks;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getRelativeBlock", "params": ["Block", "BlockFace", "int"], "throws": null, "modifiers": ["private", "static"], "return_type": "Block", "snippet": "    private static Block getRelativeBlock(Block block, BlockFace facing, int amount) {        amount = Math.abs(amount);        for (int i = 0; i < amount; i++) {            block = block.getRelative(facing);        }        return block;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getNextFreeSpace", "params": ["Block", "BlockFace"], "throws": null, "modifiers": ["public", "static"], "return_type": "Block", "snippet": "    public static Block getNextFreeSpace(Block block, BlockFace direction) {        while (block.getType() != Material.AIR                && block.getRelative(direction).getType() != Material.AIR) {            if (!(block.getY() < block.getWorld().getMaxHeight())) {                break;            }            block = block.getRelative(direction);        }        return block;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getCenterOfBlock", "params": ["Block"], "throws": null, "modifiers": ["public", "static"], "return_type": "Location", "snippet": "    public static Location getCenterOfBlock(Block block) {        Location location = block.getLocation();        location.setX(block.getX() + 0.5);        location.setZ(block.getZ() + 0.5);        location.setY(block.getY() + 1);        return location;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "flipBlockFace", "params": ["BlockFace"], "throws": null, "modifiers": ["public", "static"], "return_type": "BlockFace", "snippet": "    public static BlockFace flipBlockFace(BlockFace face) {        switch (face) {            case DOWN:                return BlockFace.UP;            case UP:                return BlockFace.DOWN;            case NORTH:                return BlockFace.SOUTH;            case SOUTH:                return BlockFace.NORTH;            case WEST:                return BlockFace.EAST;            case EAST:                return BlockFace.WEST;            // TODO: add more face flipping            default:                return face;        }    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "rotateBlockFace", "params": ["BlockFace"], "throws": null, "modifiers": ["public", "static"], "return_type": "BlockFace", "snippet": "    public static BlockFace rotateBlockFace(BlockFace face) {        switch (face) {            case WEST:                return BlockFace.NORTH;            case NORTH:                return BlockFace.EAST;            case EAST:                return BlockFace.SOUTH;            case SOUTH:                return BlockFace.WEST;            default:                return face;        }    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getNearbyPlayers", "params": ["Block", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Player>", "snippet": "    public static List<Player> getNearbyPlayers(Block block, int radius) {        List<Player> players = new ArrayList<>();        for (Chunk chunk : getSurroundingChunks(block, radius)) {            for (Entity e : chunk.getEntities()) {                if (e instanceof Player) {                    players.add((Player) e);                }            }        }        return players;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getNearbyBlocks", "params": ["Location", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Collection<Block>", "snippet": "    public static Collection<Block> getNearbyBlocks(Location location, int radius) {        ArrayList<Block> blocks = new ArrayList<>();        final Block block = location.getBlock();        for (int x = -(radius); x <= radius; x++) {            for (int y = -(radius); y <= radius; y++) {                for (int z = -(radius); z <= radius; z++) {                    Block relative = block.getRelative(x, y, z);                    if (relative != null && !relative.isEmpty() && !relative.isLiquid()) {                        blocks.add(relative);                    }                }            }        }        return blocks;    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getCaseInsensitiveWorld", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "World", "snippet": "    public static World getCaseInsensitiveWorld(String name) {        return Bukkit.getWorlds().stream()                .filter(                        world ->                                world.getName().equalsIgnoreCase(name)                                        || world.getUID().toString().equalsIgnoreCase(name))                .findFirst()                .orElse(null);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/main/java/net/silthus/slib/util/LocationUtil.java", "stars": "3", "class": {"name": "LocationUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "testSelectList", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testSelectList() throws Exception {    String xmlConfig = \"org/apache/ibatis/submitted/result_handler_type/MapperConfig.xml\";    SqlSessionFactory sqlSessionFactory = getSqlSessionFactoryXmlConfig(xmlConfig);    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      List<Person> list = sqlSession          .selectList(\"org.apache.ibatis.submitted.result_handler_type.PersonMapper.doSelect\");      assertEquals(list.size(), 2);      assertEquals(\"java.util.LinkedList\", list.getClass().getCanonicalName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/result_handler_type/DefaultResultHandlerTypeTest.java", "stars": "15", "class": {"name": "DefaultResultHandlerTypeTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testSelectMap", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testSelectMap() throws Exception {    String xmlConfig = \"org/apache/ibatis/submitted/result_handler_type/MapperConfig.xml\";    SqlSessionFactory sqlSessionFactory = getSqlSessionFactoryXmlConfig(xmlConfig);    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Map<Integer, Person> map = sqlSession.selectMap(          \"org.apache.ibatis.submitted.result_handler_type.PersonMapper.doSelect\", \"id\");      assertEquals(map.size(), 2);      assertEquals(\"java.util.LinkedHashMap\", map.getClass().getCanonicalName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/result_handler_type/DefaultResultHandlerTypeTest.java", "stars": "15", "class": {"name": "DefaultResultHandlerTypeTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testSelectMapAnnotation", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testSelectMapAnnotation() throws Exception {    String xmlConfig = \"org/apache/ibatis/submitted/result_handler_type/MapperConfig.xml\";    SqlSessionFactory sqlSessionFactory = getSqlSessionFactoryXmlConfig(xmlConfig);    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper mapper = sqlSession.getMapper(PersonMapper.class);      Map<Integer, Person> map = mapper.selectAsMap();      assertEquals(map.size(), 2);      assertEquals(\"java.util.LinkedHashMap\", map.getClass().getCanonicalName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/result_handler_type/DefaultResultHandlerTypeTest.java", "stars": "15", "class": {"name": "DefaultResultHandlerTypeTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getSqlSessionFactoryXmlConfig", "params": ["String"], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryXmlConfig(String resource) throws Exception {    try (Reader configReader = Resources.getResourceAsReader(resource)) {      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configReader);      BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/result_handler_type/CreateDB.sql\");      return sqlSessionFactory;    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/result_handler_type/DefaultResultHandlerTypeTest.java", "stars": "15", "class": {"name": "DefaultResultHandlerTypeTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "initDatabase", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void initDatabase() throws Exception {    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/cglib_lazy_error/ibatisConfigLazy.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);      sqlSessionFactory.getConfiguration().setLazyLoadingEnabled(true);      sqlSessionFactory.getConfiguration().setAggressiveLazyLoading(false);    }    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/cglib_lazy_error/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cglib_lazy_error/CglibNPELazyTest.java", "stars": "15", "class": {"name": "CglibNPELazyTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testNoParent", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testNoParent() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);      Person person = personMapper.selectById(1);      Assertions.assertNotNull(person, \"Persons must not be null\");      Person parent = person.getParent();      Assertions.assertNull(parent, \"Parent must be null\");    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cglib_lazy_error/CglibNPELazyTest.java", "stars": "15", "class": {"name": "CglibNPELazyTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testAncestorSelf", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAncestorSelf() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);      Person person = personMapper.selectById(1);      Assertions.assertNotNull(person, \"Persons must not be null\");      Person ancestor = person.getAncestor();      Assertions.assertEquals(person, ancestor, \"Ancestor must be John Smith sr.\");    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cglib_lazy_error/CglibNPELazyTest.java", "stars": "15", "class": {"name": "CglibNPELazyTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testAncestorAfterQueryingParents", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAncestorAfterQueryingParents() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);      Person expectedAncestor = personMapper.selectById(1);      Person person = personMapper.selectById(3);      // Load ancestor indirectly.      Assertions.assertNotNull(person, \"Persons must not be null\");      Assertions.assertNotNull(person.getParent(), \"Parent must not be null\");      Assertions.assertNotNull(person.getParent().getParent(), \"Grandparent must not be null\");      Assertions.assertEquals(expectedAncestor, person.getAncestor(), \"Ancestor must be John Smith sr.\");    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cglib_lazy_error/CglibNPELazyTest.java", "stars": "15", "class": {"name": "CglibNPELazyTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testGrandParent", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testGrandParent() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);      Person expectedParent = personMapper.selectById(2);      Person expectedGrandParent = personMapper.selectById(1);      Person person = personMapper.selectById(3);      Assertions.assertNotNull(person, \"Persons must not be null\");      final Person actualParent = person.getParent();      final Person actualGrandParent = person.getParent().getParent();      Assertions.assertEquals(expectedParent, actualParent);      Assertions.assertEquals(expectedGrandParent, actualGrandParent);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cglib_lazy_error/CglibNPELazyTest.java", "stars": "15", "class": {"name": "CglibNPELazyTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testAncestor", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testAncestor() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);      Person expectedAncestor = personMapper.selectById(1);      Person person = personMapper.selectById(3);      Assertions.assertNotNull(person, \"Persons must not be null\");      final Person actualAncestor = person.getAncestor();      Assertions.assertEquals(expectedAncestor, actualAncestor);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cglib_lazy_error/CglibNPELazyTest.java", "stars": "15", "class": {"name": "CglibNPELazyTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "startTActivity", "params": ["Activity", "View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void startTActivity(Activity activity, View transitionView) {        Intent intent = new Intent(activity, SwitchDetailActivity.class);        // \u8fd9\u91cc\u6307\u5b9a\u4e86\u5171\u4eab\u7684\u89c6\u56fe\u5143\u7d20        ActivityOptionsCompat options = ActivityOptionsCompat.makeSceneTransitionAnimation(activity, transitionView, OPTION_VIEW);        ActivityCompat.startActivity(activity, intent, options.toBundle());    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchDetailActivity.java", "stars": "2", "class": {"name": "SwitchDetailActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.switch_activity_detail_player);        detailPlayer = (SwitchVideo) findViewById(R.id.detail_player);        //\u589e\u52a0title        detailPlayer.getTitleTextView().setVisibility(View.GONE);        detailPlayer.getBackButton().setVisibility(View.GONE);        //\u5916\u90e8\u8f85\u52a9\u7684\u65cb\u8f6c\uff0c\u5e2e\u52a9\u5168\u5c4f        orientationUtils = new OrientationUtils(this, detailPlayer);        //\u521d\u59cb\u5316\u4e0d\u6253\u5f00\u5916\u90e8\u7684\u65cb\u8f6c        orientationUtils.setEnable(false);        SwitchUtil.optionPlayer(detailPlayer, getIntent().getStringExtra(URL), true, \"\u8fd9\u662ftitle\");        SwitchUtil.clonePlayState(detailPlayer);        detailPlayer.setIsTouchWiget(true);        detailPlayer.setVideoAllCallBack(new GSYSampleCallBack() {                    @Override                    public void onPrepared(String url, Object... objects) {                        super.onPrepared(url, objects);                        //\u5f00\u59cb\u64ad\u653e\u4e86\u624d\u80fd\u65cb\u8f6c\u548c\u5168\u5c4f                        orientationUtils.setEnable(true);                    }                    @Override                    public void onQuitFullscreen(String url, Object... objects) {                        super.onQuitFullscreen(url, objects);                        if (orientationUtils != null) {                            orientationUtils.backToProtVideo();                        }                    }                });        detailPlayer.getFullscreenButton().setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                //\u76f4\u63a5\u6a2a\u5c4f                orientationUtils.resolveByClick();                //\u7b2c\u4e00\u4e2atrue\u662f\u5426\u9700\u8981\u9690\u85cfactionbar\uff0c\u7b2c\u4e8c\u4e2atrue\u662f\u5426\u9700\u8981\u9690\u85cfstatusbar                detailPlayer.startWindowFullscreen(SwitchDetailActivity.this, true, true);            }        });        detailPlayer.setSurfaceToPlay();        // \u8fd9\u91cc\u6307\u5b9a\u4e86\u88ab\u5171\u4eab\u7684\u89c6\u56fe\u5143\u7d20        ViewCompat.setTransitionName(detailPlayer, OPTION_VIEW);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchDetailActivity.java", "stars": "2", "class": {"name": "SwitchDetailActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onBackPressed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {        if (orientationUtils != null) {            orientationUtils.backToProtVideo();        }        if (GSYVideoManager.backFromWindowFull(this)) {            return;        }        super.onBackPressed();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchDetailActivity.java", "stars": "2", "class": {"name": "SwitchDetailActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onPause", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {        detailPlayer.getCurrentPlayer().onVideoPause();        super.onPause();        isPause = true;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchDetailActivity.java", "stars": "2", "class": {"name": "SwitchDetailActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onResume", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {        detailPlayer.getCurrentPlayer().onVideoResume(false);        super.onResume();        isPause = false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchDetailActivity.java", "stars": "2", "class": {"name": "SwitchDetailActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onDestroy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {        super.onDestroy();        detailPlayer.getGSYVideoManager().setListener(detailPlayer.getGSYVideoManager().lastListener());        detailPlayer.getGSYVideoManager().setLastListener(null);        GSYVideoManager.releaseAllVideos();        if (orientationUtils != null)            orientationUtils.releaseListener();        SwitchUtil.release();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchDetailActivity.java", "stars": "2", "class": {"name": "SwitchDetailActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onConfigurationChanged", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConfigurationChanged(Configuration newConfig) {        super.onConfigurationChanged(newConfig);        //\u5982\u679c\u65cb\u8f6c\u4e86\u5c31\u5168\u5c4f        if (isPlay && !isPause) {            detailPlayer.onConfigurationChanged(this, newConfig, orientationUtils, true, true);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/switchplay/SwitchDetailActivity.java", "stars": "2", "class": {"name": "SwitchDetailActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "flush", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean flush() {        this.version = null;        return true;    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/parser/client/ClientReleaseVersionParser.java", "stars": "2", "class": {"name": "ClientReleaseVersionParser", "extends": null, "implements": ["IMessageParser"], "modifiers": ["public"]}}, {"method_name": "parse", "params": ["IMessageDataWrapper"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean parse(IMessageDataWrapper wrapper) {        if(wrapper == null) return false;        this.version = wrapper.readString();        return true;    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/parser/client/ClientReleaseVersionParser.java", "stars": "2", "class": {"name": "ClientReleaseVersionParser", "extends": null, "implements": ["IMessageParser"], "modifiers": ["public"]}}, {"method_name": "getVersion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getVersion() {        return this.version;    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/application/src/main/java/com/nitro/application/communication/messages/parser/client/ClientReleaseVersionParser.java", "stars": "2", "class": {"name": "ClientReleaseVersionParser", "extends": null, "implements": ["IMessageParser"], "modifiers": ["public"]}}, {"method_name": "getPassword", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPassword() {        return password;    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/ManagedUserVM.java", "stars": "2", "class": {"name": "ManagedUserVM", "extends": "UserDTO", "implements": null, "modifiers": ["public"]}}, {"method_name": "setPassword", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPassword(String password) {        this.password = password;    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/ManagedUserVM.java", "stars": "2", "class": {"name": "ManagedUserVM", "extends": "UserDTO", "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        return \"ManagedUserVM{\" + super.toString() + \"} \";    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/vm/ManagedUserVM.java", "stars": "2", "class": {"name": "ManagedUserVM", "extends": "UserDTO", "implements": null, "modifiers": ["public"]}}, {"method_name": "adapt", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "PrettyName", "snippet": "    public PrettyName adapt(String string) {        PrettyName prettyName = new PrettyName();        if (string != null && !string.isEmpty())            prettyName.setSection(Strings.colorize(string));        return prettyName;    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/adapter/StringToPrettyNameAdapter.java", "stars": "2", "class": {"name": "StringToPrettyNameAdapter", "extends": null, "implements": ["ObjectAdapter"], "modifiers": ["public"]}}, {"method_name": "shouldKeepGenericTypes", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldKeepGenericTypes() {    for (int i = 0; i < 10000; i++) {      Author pc = new Author();      Author proxy = (Author) proxyFactory.createProxy(pc, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(),          new ArrayList<>(), new ArrayList<>());      proxy.getBio();    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldSerializeAProxyForABeanWithDefaultConstructor", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSerializeAProxyForABeanWithDefaultConstructor() throws Exception {    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    Object proxy2 = deserialize(serialize((Serializable) proxy));    assertEquals(author, proxy2);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldSerializeAProxyForABeanWithoutDefaultConstructor", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSerializeAProxyForABeanWithoutDefaultConstructor() throws Exception {    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);    ArrayList<Class<?>> argTypes = new ArrayList<>();    argTypes.add(Integer.class);    argTypes.add(String.class);    argTypes.add(String.class);    argTypes.add(String.class);    argTypes.add(String.class);    argTypes.add(Section.class);    ArrayList<Object> argValues = new ArrayList<>();    argValues.add(999);    argValues.add(\"someone\");    argValues.add(\"!@#@!#!@#\");    argValues.add(\"someone@somewhere.com\");    argValues.add(\"blah\");    argValues.add(Section.NEWS);    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), argTypes, argValues);    Object proxy2 = deserialize(serialize((Serializable) proxy));    assertEquals(author, proxy2);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSerializeAProxyForABeanWithoutDefaultConstructorAndUnloadedProperties() throws Exception {    AuthorWithoutDefaultConstructor author = new AuthorWithoutDefaultConstructor(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);    ArrayList<Class<?>> argTypes = new ArrayList<>();    argTypes.add(Integer.class);    argTypes.add(String.class);    argTypes.add(String.class);    argTypes.add(String.class);    argTypes.add(String.class);    argTypes.add(Section.class);    ArrayList<Object> argValues = new ArrayList<>();    argValues.add(999);    argValues.add(\"someone\");    argValues.add(\"!@#@!#!@#\");    argValues.add(\"someone@somewhere.com\");    argValues.add(\"blah\");    argValues.add(Section.NEWS);    ResultLoaderMap loader = new ResultLoaderMap();    loader.addLoader(\"id\", null, null);    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), argTypes, argValues);    Object proxy2 = deserialize(serialize((Serializable) proxy));    assertEquals(author, proxy2);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldSerizaliceAFullLoadedObjectToOriginalClass", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldSerizaliceAFullLoadedObjectToOriginalClass() throws Exception {    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    Object proxy2 = deserialize(serialize((Serializable) proxy));    assertEquals(author.getClass(), proxy2.getClass());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldGenerateWriteReplace", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGenerateWriteReplace() throws Exception {    try {      author.getClass().getDeclaredMethod(\"writeReplace\");      fail(\"Author should not have a writeReplace method\");    } catch (NoSuchMethodException e) {      // ok    }    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    Method m = proxy.getClass().getDeclaredMethod(\"writeReplace\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldNotGenerateWriteReplaceItThereIsAlreadyOne", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldNotGenerateWriteReplaceItThereIsAlreadyOne() {    AuthorWithWriteReplaceMethod beanWithWriteReplace = new AuthorWithWriteReplaceMethod(999, \"someone\", \"!@#@!#!@#\", \"someone@somewhere.com\", \"blah\", Section.NEWS);    try {      beanWithWriteReplace.getClass().getDeclaredMethod(\"writeReplace\");    } catch (NoSuchMethodException e) {      fail(\"Bean should declare a writeReplace method\");    }    Object proxy = proxyFactory.createProxy(beanWithWriteReplace, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    Class<?>[] interfaces = proxy.getClass().getInterfaces();    boolean ownInterfaceFound = false;    for (Class<?> i : interfaces) {      if (i.equals(WriteReplaceInterface.class)) {        ownInterfaceFound = true;        break;      }    }    assertFalse(ownInterfaceFound);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldNotCreateAProxyForAFullyLoadedBean", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldNotCreateAProxyForAFullyLoadedBean() throws Exception {    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    Author author2 = (Author) deserialize(serialize((Serializable) proxy));    assertEquals(author.getClass(), author2.getClass());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldNotLetReadUnloadedPropertyAfterSerialization", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldNotLetReadUnloadedPropertyAfterSerialization() throws Exception {    ResultLoaderMap loader = new ResultLoaderMap();    loader.addLoader(\"id\", null, null);    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    Author author2 = (Author) deserialize(serialize((Serializable) proxy));    Assertions.assertThrows(ExecutorException.class, author2::getId);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldNotLetReadUnloadedPropertyAfterTwoSerializations", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldNotLetReadUnloadedPropertyAfterTwoSerializations() throws Exception {    ResultLoaderMap loader = new ResultLoaderMap();    loader.addLoader(\"id\", null, null);    Object proxy = proxyFactory.createProxy(author, loader, new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    Author author2 = (Author) deserialize(serialize(deserialize(serialize((Serializable) proxy))));    Assertions.assertThrows(ExecutorException.class, author2::getId);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "shouldLetReadALoadedPropertyAfterSerialization", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldLetReadALoadedPropertyAfterSerialization() throws Exception {    Object proxy = proxyFactory.createProxy(author, new ResultLoaderMap(), new Configuration(), new DefaultObjectFactory(), new ArrayList<>(), new ArrayList<>());    byte[] ser = serialize((Serializable) proxy);    Author author2 = (Author) deserialize(ser);    assertEquals(999, author2.getId());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "serialize", "params": ["Serializable"], "throws": ["Exception"], "modifiers": [], "return_type": "byte", "snippet": "  byte[] serialize(Serializable value) throws Exception {    try(ByteArrayOutputStream bos = new ByteArrayOutputStream();        ObjectOutputStream oos = new ObjectOutputStream(bos)) {      oos.writeObject(value);      oos.flush();      return bos.toByteArray();    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "deserialize", "params": ["byte"], "throws": ["Exception"], "modifiers": [], "return_type": "Serializable", "snippet": "  Serializable deserialize(byte[] value) throws Exception {    try(ByteArrayInputStream bis = new ByteArrayInputStream(value);    ObjectInputStream ois = new ObjectInputStream(bis)) {      return (Serializable) ois.readObject();    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "SerializableProxyTest", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "writeReplace", "params": [], "throws": ["ObjectStreamException"], "modifiers": [], "return_type": "Object", "snippet": "    Object writeReplace() throws ObjectStreamException {      return this;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "AuthorWithWriteReplaceMethod", "extends": "Author", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "writeReplace", "params": [], "throws": ["ObjectStreamException"], "modifiers": ["protected"], "return_type": "Object", "snippet": "    protected Object writeReplace() throws ObjectStreamException {      return this;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/loader/SerializableProxyTest.java", "stars": "15", "class": {"name": "AuthorWithoutDefaultConstructor", "extends": "Author", "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {    try (Reader reader = Resources        .getResourceAsReader(\"org/apache/ibatis/submitted/sqlprovider/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);      sqlSessionFactory.getConfiguration().addMapper(ProvideMethodResolverMapper.class);    }    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),        \"org/apache/ibatis/submitted/sqlprovider/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveWhenDefaultResolverMatchedMethodIsOne", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveWhenDefaultResolverMatchedMethodIsOne() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      ProvideMethodResolverMapper mapper = sqlSession.getMapper(ProvideMethodResolverMapper.class);      assertEquals(1, mapper.select());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldErrorWhenDefaultResolverMethodNameMatchedMethodIsNone", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorWhenDefaultResolverMethodNameMatchedMethodIsNone() {    BuilderException e = Assertions.assertThrows(BuilderException.class,        () -> sqlSessionFactory.getConfiguration().addMapper(DefaultProvideMethodResolverMethodNameMatchedMethodIsNoneMapper.class));    assertEquals(        \"Cannot resolve the provider method because 'insert' not found in SqlProvider 'org.apache.ibatis.submitted.sqlprovider.ProviderMethodResolutionTest$DefaultProvideMethodResolverMethodNameMatchedMethodIsNoneMapper$MethodResolverBasedSqlProvider'.\",        e.getCause().getMessage());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldErrorWhenDefaultResolverReturnTypeMatchedMethodIsNone", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorWhenDefaultResolverReturnTypeMatchedMethodIsNone() {    BuilderException e = Assertions.assertThrows(BuilderException.class,        () -> sqlSessionFactory.getConfiguration().addMapper(DefaultProvideMethodResolverReturnTypeMatchedMethodIsNoneMapper.class));    assertEquals(        \"Cannot resolve the provider method because 'insert' does not return the CharSequence or its subclass in SqlProvider 'org.apache.ibatis.submitted.sqlprovider.ProviderMethodResolutionTest$DefaultProvideMethodResolverReturnTypeMatchedMethodIsNoneMapper$MethodResolverBasedSqlProvider'.\",        e.getCause().getMessage());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldErrorWhenDefaultResolverMatchedMethodIsMultiple", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorWhenDefaultResolverMatchedMethodIsMultiple() {    BuilderException e = Assertions.assertThrows(BuilderException.class,        () -> sqlSessionFactory.getConfiguration().addMapper(DefaultProvideMethodResolverMatchedMethodIsMultipleMapper.class));    assertEquals(        \"Cannot resolve the provider method because 'update' is found multiple in SqlProvider 'org.apache.ibatis.submitted.sqlprovider.ProviderMethodResolutionTest$DefaultProvideMethodResolverMatchedMethodIsMultipleMapper$MethodResolverBasedSqlProvider'.\",        e.getCause().getMessage());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveReservedMethod", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveReservedMethod() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      ProvideMethodResolverMapper mapper = sqlSession.getMapper(ProvideMethodResolverMapper.class);      assertEquals(1, mapper.delete());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldUseSpecifiedMethodOnSqlProviderAnnotation", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldUseSpecifiedMethodOnSqlProviderAnnotation() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      ProvideMethodResolverMapper mapper = sqlSession.getMapper(ProvideMethodResolverMapper.class);      assertEquals(2, mapper.select2());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveMethodUsingCustomResolver", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveMethodUsingCustomResolver() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      ProvideMethodResolverMapper mapper = sqlSession.getMapper(ProvideMethodResolverMapper.class);      assertEquals(3, mapper.select3());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldResolveReservedNameMethodWhenCustomResolverReturnNull", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveReservedNameMethodWhenCustomResolverReturnNull() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      ProvideMethodResolverMapper mapper = sqlSession.getMapper(ProvideMethodResolverMapper.class);      assertEquals(99, mapper.select4());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldErrorWhenCannotDetectsReservedNameMethod", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorWhenCannotDetectsReservedNameMethod() {    BuilderException e = Assertions.assertThrows(BuilderException.class,        () -> sqlSessionFactory.getConfiguration().addMapper(ReservedNameMethodIsNoneMapper.class));    assertEquals(        \"Error creating SqlSource for SqlProvider. Method 'provideSql' not found in SqlProvider 'org.apache.ibatis.submitted.sqlprovider.ProviderMethodResolutionTest$ReservedNameMethodIsNoneMapper$SqlProvider'.\",        e.getCause().getMessage());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ProviderMethodResolutionTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "select", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String select() {        return \"SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "MethodResolverBasedSqlProvider", "extends": null, "implements": ["ProviderMethodResolver"], "modifiers": []}}, {"method_name": "select2", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String select2() {        throw new IllegalStateException(\"This method should not called when specify `method` attribute on @SelectProvider.\");      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "MethodResolverBasedSqlProvider", "extends": null, "implements": ["ProviderMethodResolver"], "modifiers": []}}, {"method_name": "provideSelect2Sql", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String provideSelect2Sql() {        return \"SELECT 2 FROM INFORMATION_SCHEMA.SYSTEM_USERS\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "MethodResolverBasedSqlProvider", "extends": null, "implements": ["ProviderMethodResolver"], "modifiers": []}}, {"method_name": "provideSql", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String provideSql() {        return \"DELETE FROM memos WHERE id = 1\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "ReservedMethodNameBasedSqlProvider", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "select3Sql", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String select3Sql() {        return \"SELECT 3 FROM INFORMATION_SCHEMA.SYSTEM_USERS\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "CustomMethodResolverBasedSqlProvider", "extends": null, "implements": ["CustomProviderMethodResolver"], "modifiers": []}}, {"method_name": "provideSql", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String provideSql() {        return \"SELECT 99 FROM INFORMATION_SCHEMA.SYSTEM_USERS\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "CustomMethodResolverBasedSqlProvider", "extends": null, "implements": ["CustomProviderMethodResolver"], "modifiers": []}}, {"method_name": "provideInsertSql", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String provideInsertSql() {        return \"INSERT INTO foo (name) VALUES(#{name})\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "MethodResolverBasedSqlProvider", "extends": null, "implements": ["ProviderMethodResolver"], "modifiers": []}}, {"method_name": "insert", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "      public static int insert() {        return 1;      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "MethodResolverBasedSqlProvider", "extends": null, "implements": ["ProviderMethodResolver"], "modifiers": []}}, {"method_name": "update", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String update() {        return \"UPDATE foo SET name = #{name} WHERE id = #{id}\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "MethodResolverBasedSqlProvider", "extends": null, "implements": ["ProviderMethodResolver"], "modifiers": []}}, {"method_name": "update", "params": ["ProviderContext"], "throws": null, "modifiers": ["public", "static"], "return_type": "StringBuilder", "snippet": "      public static StringBuilder update(ProviderContext context) {        return new StringBuilder(\"UPDATE foo SET name = #{name} WHERE id = #{id}\");      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "MethodResolverBasedSqlProvider", "extends": null, "implements": ["ProviderMethodResolver"], "modifiers": []}}, {"method_name": "select", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "      public static String select() {        return \"SELECT 1 FROM INFORMATION_SCHEMA.SYSTEM_USERS\";      }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sqlprovider/ProviderMethodResolutionTest.java", "stars": "15", "class": {"name": "SqlProvider", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\tint stringLength;\t\tlong time;\t\tString path;\t\tIntArray string=null;\t\tBernoulliSubstring w;\t\tSubstringIterator iterator;\t\tRuntime runtime = Runtime.getRuntime();\t\t// Parsing input\t\tpath=\"NC_021658.fna\";\t\tstringLength=14782125;  // (file,length,nLines): (dna.50MB,52427710,?), (NC_021658.fna,14782125,211174)\t\tfinal int MAX_THREADS = 2;\t\t// Initializing\t\tint[] alphabet = new int[] {0,1,2,3};\t\ttry { string=Utils.loadDNA(path,stringLength,1000); }\t\tcatch(IOException e) {\t\t\te.printStackTrace();\t\t\tSystem.exit(1);\t\t}\t\tstringLength=(int)string.length();\t\tw = new BernoulliSubstring(alphabet.length,Utils.log2(alphabet.length),Utils.bitsToEncode(alphabet.length),stringLength+1,Utils.log2(stringLength+1),Utils.bitsToEncode(stringLength+1));\t\tConstants.N_THREADS=MAX_THREADS;\t\ttime=System.currentTimeMillis();\t\titerator = new SubstringIterator(string,alphabet,alphabet.length,w);\t\tSystem.out.print(\"construction time with \"+Constants.N_THREADS+\" threads: \"+((double)(System.currentTimeMillis()-time))/1000+\"s, \");\t\tSystem.out.println(\"String length: \"+stringLength);\t\t// Running\t\tfor (Constants.N_THREADS=MAX_THREADS; Constants.N_THREADS>=1; Constants.N_THREADS--) {\t\t\tjava.text.SimpleDateFormat sdf = new java.text.SimpleDateFormat(\"MM/dd/yyyy HH:mm:ss\");\t\t\tSystem.out.println(sdf.format(new java.util.Date())+\"> run with \"+Constants.N_THREADS+\" threads started... \");\t\t\ttime=System.currentTimeMillis();\t\t\titerator.run();\t\t\tSystem.out.println(sdf.format(new java.util.Date())+\"> run with \"+Constants.N_THREADS+\" ended in \"+((double)(System.currentTimeMillis()-time))/1000+\" sec\");\t\t}\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/ParallelTestDrive.java", "stars": "2", "class": {"name": "ParallelTestDrive", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testNetworkTimeout_UnpooledDataSource", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testNetworkTimeout_UnpooledDataSource() throws Exception {    UnpooledDataSource dataSource = (UnpooledDataSource) PgContainer.getUnpooledDataSource();    dataSource.setDefaultNetworkTimeout(5000);    try (Connection connection = dataSource.getConnection()) {      assertEquals(5000, connection.getNetworkTimeout());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/datasource/unpooled/NetworkTimeoutTest.java", "stars": "15", "class": {"name": "NetworkTimeoutTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testNetworkTimeout_PooledDataSource", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testNetworkTimeout_PooledDataSource() throws Exception {    UnpooledDataSource unpooledDataSource = (UnpooledDataSource) PgContainer.getUnpooledDataSource();    PooledDataSource dataSource = new PooledDataSource(unpooledDataSource);    dataSource.setDefaultNetworkTimeout(5000);    try (Connection connection = dataSource.getConnection()) {      assertEquals(5000, connection.getNetworkTimeout());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/datasource/unpooled/NetworkTimeoutTest.java", "stars": "15", "class": {"name": "NetworkTimeoutTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        // \u8bbe\u7f6e\u4e00\u4e2aexit transition        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {            getWindow().requestFeature(Window.FEATURE_CONTENT_TRANSITIONS);            getWindow().setEnterTransition(new Explode());            getWindow().setExitTransition(new Explode());        }        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_recycler_view);        ButterKnife.bind(this);        resolveData();        final RecyclerNormalAdapter recyclerNormalAdapter = new RecyclerNormalAdapter(this, dataList);        linearLayoutManager = new LinearLayoutManager(this);        videoList.setLayoutManager(linearLayoutManager);        videoList.setAdapter(recyclerNormalAdapter);        videoList.addOnScrollListener(new RecyclerView.OnScrollListener() {            int firstVisibleItem, lastVisibleItem;            @Override            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {                super.onScrollStateChanged(recyclerView, newState);            }            @Override            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {                super.onScrolled(recyclerView, dx, dy);                firstVisibleItem   = linearLayoutManager.findFirstVisibleItemPosition();                lastVisibleItem = linearLayoutManager.findLastVisibleItemPosition();                //\u5927\u4e8e0\u8bf4\u660e\u6709\u64ad\u653e                if (GSYVideoManager.instance().getPlayPosition() >= 0) {                    //\u5f53\u524d\u64ad\u653e\u7684\u4f4d\u7f6e                    int position = GSYVideoManager.instance().getPlayPosition();                    //\u5bf9\u5e94\u7684\u64ad\u653e\u5217\u8868TAG                    if (GSYVideoManager.instance().getPlayTag().equals(RecyclerItemNormalHolder.TAG)                            && (position < firstVisibleItem || position > lastVisibleItem)) {                        //\u5982\u679c\u6ed1\u51fa\u53bb\u4e86\u4e0a\u9762\u548c\u4e0b\u9762\u5c31\u662f\u5426\uff0c\u548c\u4eca\u65e5\u5934\u6761\u4e00\u6837                        //\u662f\u5426\u5168\u5c4f                        if(!GSYVideoManager.isFullState(RecyclerViewActivity.this)) {                            GSYVideoManager.releaseAllVideos();                            recyclerNormalAdapter.notifyDataSetChanged();                        }                    }                }            }        });    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/RecyclerViewActivity.java", "stars": "2", "class": {"name": "RecyclerViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onBackPressed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {        if (GSYVideoManager.backFromWindowFull(this)) {            return;        }        super.onBackPressed();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/RecyclerViewActivity.java", "stars": "2", "class": {"name": "RecyclerViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onPause", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {        super.onPause();        GSYVideoManager.onPause();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/RecyclerViewActivity.java", "stars": "2", "class": {"name": "RecyclerViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onResume", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {        super.onResume();        GSYVideoManager.onResume(false);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/RecyclerViewActivity.java", "stars": "2", "class": {"name": "RecyclerViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onDestroy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {        super.onDestroy();        GSYVideoManager.releaseAllVideos();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/RecyclerViewActivity.java", "stars": "2", "class": {"name": "RecyclerViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveData", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveData() {        for (int i = 0; i < 19; i++) {            VideoModel videoModel = new VideoModel();            dataList.add(videoModel);        }        if (recyclerBaseAdapter != null)            recyclerBaseAdapter.notifyDataSetChanged();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/RecyclerViewActivity.java", "stars": "2", "class": {"name": "RecyclerViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "process", "params": ["RequestEvent", "SipLayer", "ServerTransaction"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void process(RequestEvent evt, SipLayer layer, ServerTransaction transaction) {\t\tSystem.out.println(\"no support the method! Method:\" + evt.getRequest().getMethod());\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/request/impl/OtherRequestProcessor.java", "stars": "29", "class": {"name": "OtherRequestProcessor", "extends": null, "implements": ["ISIPRequestProcessor"], "modifiers": ["public"]}}, {"method_name": "onCreateViewHolder", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "WorldWiseCaseViewHolder", "snippet": "    public WorldWiseCaseViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        LayoutInflater inflater = LayoutInflater.from(context);        View view = inflater.inflate(R.layout.row_info,parent,false);        return new WorldWiseCaseViewHolder(view);    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/adapter/AllWorldWiseAdapter.java", "stars": "2", "class": {"name": "AllWorldWiseAdapter", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "onBindViewHolder", "params": ["WorldWiseCaseViewHolder", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull WorldWiseCaseViewHolder holder, int position) {        CountyCaseData countyCaseData = list.get(position);        holder.Header.setText(countyCaseData.getHeader());        holder.value.setText(countyCaseData.getValue());        holder.cardView.setCardBackgroundColor(Color.parseColor(countyCaseData.getColor()));    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/adapter/AllWorldWiseAdapter.java", "stars": "2", "class": {"name": "AllWorldWiseAdapter", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItemCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {        return list.size();    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/adapter/AllWorldWiseAdapter.java", "stars": "2", "class": {"name": "AllWorldWiseAdapter", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "get", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "TerminateRecord", "snippet": "    public static TerminateRecord get() {        return SINGLE;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "addColumn", "params": ["Column"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addColumn(Column column) {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "getColumn", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Column", "snippet": "    public Column getColumn(int i) {        return null;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "getColumnNumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getColumnNumber() {        return 0;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "getColumns", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Column>", "snippet": "    public List<Column> getColumns() {        return new ArrayList<>();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "uid", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String uid() {        return \"\";    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "getByteSize", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getByteSize() {        return 0;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "getMemorySize", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getMemorySize() {        return 0;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "copyElement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public <T>T copyElement() {        return (T)this;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "setColumn", "params": ["int", "Column"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColumn(int i, Column column) {        return;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/record/TerminateRecord.java", "stars": "23", "class": {"name": "TerminateRecord", "extends": null, "implements": ["Record"], "modifiers": ["public"]}}, {"method_name": "setup", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setup() {        JHipsterProperties jHipsterProperties = new JHipsterProperties();        tokenProvider = new TokenProvider(jHipsterProperties);        ReflectionTestUtils.setField(tokenProvider, \"key\",            Keys.hmacShaKeyFor(Decoders.BASE64                .decode(\"fd54a45s65fds737b9aafcb3412e07ed99b267f33413274720ddbb7f6c5e64e9f14075f2d7ed041592f0b7657baf8\")));        ReflectionTestUtils.setField(tokenProvider, \"tokenValidityInMilliseconds\", 60000);        jwtFilter = new JWTFilter(tokenProvider);        SecurityContextHolder.getContext().setAuthentication(null);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/JWTFilterTest.java", "stars": "2", "class": {"name": "JWTFilterTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testJWTFilter", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testJWTFilter() throws Exception {        UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(            \"test-user\",            \"test-password\",            Collections.singletonList(new SimpleGrantedAuthority(AuthoritiesConstants.USER))        );        String jwt = tokenProvider.createToken(authentication, false);        MockHttpServletRequest request = new MockHttpServletRequest();        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, \"Bearer \" + jwt);        request.setRequestURI(\"/api/v1/test\");        MockHttpServletResponse response = new MockHttpServletResponse();        MockFilterChain filterChain = new MockFilterChain();        jwtFilter.doFilter(request, response, filterChain);        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());        assertThat(SecurityContextHolder.getContext().getAuthentication().getName()).isEqualTo(\"test-user\");        assertThat(SecurityContextHolder.getContext().getAuthentication().getCredentials().toString()).isEqualTo(jwt);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/JWTFilterTest.java", "stars": "2", "class": {"name": "JWTFilterTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testJWTFilterInvalidToken", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testJWTFilterInvalidToken() throws Exception {        String jwt = \"wrong_jwt\";        MockHttpServletRequest request = new MockHttpServletRequest();        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, \"Bearer \" + jwt);        request.setRequestURI(\"/api/v1/test\");        MockHttpServletResponse response = new MockHttpServletResponse();        MockFilterChain filterChain = new MockFilterChain();        jwtFilter.doFilter(request, response, filterChain);        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/JWTFilterTest.java", "stars": "2", "class": {"name": "JWTFilterTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testJWTFilterMissingAuthorization", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testJWTFilterMissingAuthorization() throws Exception {        MockHttpServletRequest request = new MockHttpServletRequest();        request.setRequestURI(\"/api/v1/test\");        MockHttpServletResponse response = new MockHttpServletResponse();        MockFilterChain filterChain = new MockFilterChain();        jwtFilter.doFilter(request, response, filterChain);        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/JWTFilterTest.java", "stars": "2", "class": {"name": "JWTFilterTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testJWTFilterMissingToken", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testJWTFilterMissingToken() throws Exception {        MockHttpServletRequest request = new MockHttpServletRequest();        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, \"Bearer \");        request.setRequestURI(\"/api/v1/test\");        MockHttpServletResponse response = new MockHttpServletResponse();        MockFilterChain filterChain = new MockFilterChain();        jwtFilter.doFilter(request, response, filterChain);        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/JWTFilterTest.java", "stars": "2", "class": {"name": "JWTFilterTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testJWTFilterWrongScheme", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testJWTFilterWrongScheme() throws Exception {        UsernamePasswordAuthenticationToken authentication = new UsernamePasswordAuthenticationToken(            \"test-user\",            \"test-password\",            Collections.singletonList(new SimpleGrantedAuthority(AuthoritiesConstants.USER))        );        String jwt = tokenProvider.createToken(authentication, false);        MockHttpServletRequest request = new MockHttpServletRequest();        request.addHeader(JWTFilter.AUTHORIZATION_HEADER, \"Basic \" + jwt);        request.setRequestURI(\"/api/v1/test\");        MockHttpServletResponse response = new MockHttpServletResponse();        MockFilterChain filterChain = new MockFilterChain();        jwtFilter.doFilter(request, response, filterChain);        assertThat(response.getStatus()).isEqualTo(HttpStatus.OK.value());        assertThat(SecurityContextHolder.getContext().getAuthentication()).isNull();    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/security/jwt/JWTFilterTest.java", "stars": "2", "class": {"name": "JWTFilterTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\tSpringApplication.run(OsworksApiApplication.class, args);\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/OsworksApiApplication.java", "stars": "2", "class": {"name": "OsworksApiApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "println", "params": ["int", "String", "String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void println(int priority, String tag, String msg, Throwable tr) {        if (mNext != null) {            getNext().println(Log.NONE, null, msg, null);        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/common/logger/MessageOnlyLogFilter.java", "stars": "74", "class": {"name": "MessageOnlyLogFilter", "extends": null, "implements": ["LogNode"], "modifiers": ["public"]}}, {"method_name": "getNext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LogNode", "snippet": "    public LogNode getNext() {        return mNext;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/common/logger/MessageOnlyLogFilter.java", "stars": "74", "class": {"name": "MessageOnlyLogFilter", "extends": null, "implements": ["LogNode"], "modifiers": ["public"]}}, {"method_name": "setNext", "params": ["LogNode"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNext(LogNode node) {        mNext = node;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ImageGridActivity/src/com/example/android/common/logger/MessageOnlyLogFilter.java", "stars": "74", "class": {"name": "MessageOnlyLogFilter", "extends": null, "implements": ["LogNode"], "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        MultiplayerGameRunner gameRunner = new MultiplayerGameRunner();        // Select agents here        gameRunner.addAgent(\"python3 config/Boss.py\", \"Blinky\", \"https://static.codingame.com/servlet/fileservlet?id=43829808065962\");        gameRunner.addAgent(\"python3 config/Boss.py\", \"Inky\", \"https://static.codingame.com/servlet/fileservlet?id=43829821541064\");        gameRunner.setSeed(5842184981578562716L);        Properties params = new Properties();        gameRunner.setGameParameters(params);        gameRunner.setLeagueLevel(3);        gameRunner.start(8888);    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/test/java/Spring2020Main.java", "stars": "15", "class": {"name": "Spring2020Main", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "align", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int align(int num) {        return (int) (align((long) num));    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ClassSize.java", "stars": "23", "class": {"name": "ClassSize", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "align", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "    public static long align(long num) {        //The 7 comes from that the alignSize is 8 which is the number of bytes        //stored and sent together        return ((num + 7) >> 3) << 3;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/util/ClassSize.java", "stars": "23", "class": {"name": "ClassSize", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "executeWithRetry", "params": ["Callable<T>", "int", "long", "boolean"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T executeWithRetry(Callable<T> callable,                                         int retryTimes,                                         long sleepTimeInMilliSecond,                                         boolean exponential) throws Exception {        Retry retry = new Retry();        return retry.doRetry(callable, retryTimes, sleepTimeInMilliSecond, exponential, null);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/RetryUtil.java", "stars": "23", "class": {"name": "RetryUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "executeWithRetry", "params": ["Callable<T>", "int", "long", "boolean", "List<Class>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T executeWithRetry(Callable<T> callable,                                         int retryTimes,                                         long sleepTimeInMilliSecond,                                         boolean exponential,                                         List<Class<?>> retryExceptionClasss) throws Exception {        Retry retry = new Retry();        return retry.doRetry(callable, retryTimes, sleepTimeInMilliSecond, exponential, retryExceptionClasss);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/RetryUtil.java", "stars": "23", "class": {"name": "RetryUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "asyncExecuteWithRetry", "params": ["Callable<T>", "int", "long", "boolean", "long", "ThreadPoolExecutor"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T asyncExecuteWithRetry(Callable<T> callable,                                              int retryTimes,                                              long sleepTimeInMilliSecond,                                              boolean exponential,                                              long timeoutMs,                                              ThreadPoolExecutor executor) throws Exception {        Retry retry = new AsyncRetry(timeoutMs, executor);        return retry.doRetry(callable, retryTimes, sleepTimeInMilliSecond, exponential, null);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/RetryUtil.java", "stars": "23", "class": {"name": "RetryUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "createThreadPoolExecutor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ThreadPoolExecutor", "snippet": "    public static ThreadPoolExecutor createThreadPoolExecutor() {        return new ThreadPoolExecutor(0, 5,                60L, TimeUnit.SECONDS,                new SynchronousQueue<Runnable>());    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/RetryUtil.java", "stars": "23", "class": {"name": "RetryUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "doRetry", "params": ["Callable<T>", "int", "long", "boolean", "List<Class>"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "T", "snippet": "        public <T> T doRetry(Callable<T> callable, int retryTimes, long sleepTimeInMilliSecond, boolean exponential, List<Class<?>> retryExceptionClasss)                throws Exception {            if (null == callable) {                throw new IllegalArgumentException(\"\u7cfb\u7edf\u7f16\u7a0b\u9519\u8bef, \u5165\u53c2callable\u4e0d\u80fd\u4e3a\u7a7a ! \");            }            if (retryTimes < 1) {                throw new IllegalArgumentException(String.format(                        \"\u7cfb\u7edf\u7f16\u7a0b\u9519\u8bef, \u5165\u53c2retrytime[%d]\u4e0d\u80fd\u5c0f\u4e8e1 !\", retryTimes));            }            Exception saveException = null;            for (int i = 0; i < retryTimes; i++) {                try {                    return call(callable);                } catch (Exception e) {                    saveException = e;                    if (i == 0) {                        LOG.error(String.format(\"Exception when calling callable, \u5f02\u5e38Msg:%s\", saveException.getMessage()), saveException);                    }                    if (null != retryExceptionClasss && !retryExceptionClasss.isEmpty()) {                        boolean needRetry = false;                        for (Class<?> eachExceptionClass : retryExceptionClasss) {                            if (eachExceptionClass == e.getClass()) {                                needRetry = true;                                break;                            }                        }                        if (!needRetry) {                            throw saveException;                        }                    }                    if (i + 1 < retryTimes && sleepTimeInMilliSecond > 0) {                        long startTime = System.currentTimeMillis();                        long timeToSleep;                        if (exponential) {                            timeToSleep = sleepTimeInMilliSecond * (long) Math.pow(2, i);                            if (timeToSleep >= MAX_SLEEP_MILLISECOND) {                                timeToSleep = MAX_SLEEP_MILLISECOND;                            }                        } else {                            timeToSleep = sleepTimeInMilliSecond;                            if (timeToSleep >= MAX_SLEEP_MILLISECOND) {                                timeToSleep = MAX_SLEEP_MILLISECOND;                            }                        }                        try {                            Thread.sleep(timeToSleep);                        } catch (InterruptedException ignored) {                        }                        long realTimeSleep = System.currentTimeMillis() - startTime;                        LOG.error(String.format(\"Exception when calling callable, \u5373\u5c06\u5c1d\u8bd5\u6267\u884c\u7b2c%s\u6b21\u91cd\u8bd5.\u672c\u6b21\u91cd\u8bd5\u8ba1\u5212\u7b49\u5f85[%s]ms,\u5b9e\u9645\u7b49\u5f85[%s]ms, \u5f02\u5e38Msg:[%s]\",                                i + 1, timeToSleep, realTimeSleep, e.getMessage()));                    }                }            }            throw saveException;        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/RetryUtil.java", "stars": "23", "class": {"name": "Retry", "extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"method_name": "call", "params": ["Callable<T>"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "T", "snippet": "        protected <T> T call(Callable<T> callable) throws Exception {            return callable.call();        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/RetryUtil.java", "stars": "23", "class": {"name": "Retry", "extends": null, "implements": null, "modifiers": ["private", "static"]}}, {"method_name": "call", "params": ["Callable<T>"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "T", "snippet": "        protected <T> T call(Callable<T> callable) throws Exception {            Future<T> future = executor.submit(callable);            try {                return future.get(timeoutMs, TimeUnit.MILLISECONDS);            } catch (Exception e) {                LOG.warn(\"Try once failed\", e);                throw e;            } finally {                if (!future.isDone()) {                    future.cancel(true);                    LOG.warn(\"Try once task not done, cancel it, active count: \" + executor.getActiveCount());                }            }        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/RetryUtil.java", "stars": "23", "class": {"name": "AsyncRetry", "extends": "Retry", "implements": null, "modifiers": ["private", "static"]}}, {"method_name": "getDoctors", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "\tpublic List<String> getDoctors() {\t\treturn Arrays.asList(\"venkat\", \"chandu\");\t}", "url": "https://raw.githubusercontent.com/chandureddys/spring-boot-doc-appointment/master/src/main/java/com/docappointment/project/DoctorsController.java", "stars": "2", "class": {"name": "DoctorsController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getContentView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getContentView() {        return findViewById(Window.ID_ANDROID_CONTENT);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "getGravity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getGravity() {        Window window = getWindow();        if (window != null) {            WindowManager.LayoutParams params = window.getAttributes();            return params.gravity;        }        return Gravity.NO_GRAVITY;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setWidth", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWidth(int width) {        Window window = getWindow();        if (window != null) {            WindowManager.LayoutParams params = window.getAttributes();            params.width = width;            window.setAttributes(params);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setHeight", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHeight(int height) {        Window window = getWindow();        if (window != null) {            WindowManager.LayoutParams params = window.getAttributes();            params.height = height;            window.setAttributes(params);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setGravity", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGravity(int gravity) {        Window window = getWindow();        if (window != null) {            window.setGravity(gravity);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setWindowAnimations", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWindowAnimations(@StyleRes int id) {        Window window = getWindow();        if (window != null) {            window.setWindowAnimations(id);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "getWindowAnimations", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getWindowAnimations() {        Window window = getWindow();        if (window != null) {            return window.getAttributes().windowAnimations;        }        return AnimAction.NO_ANIM;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setBackgroundDimEnabled", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBackgroundDimEnabled(boolean enabled) {        Window window = getWindow();        if (window != null) {            if (enabled) {                window.addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);            } else {                window.clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);            }        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setBackgroundDimAmount", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBackgroundDimAmount(@FloatRange(from = 0, to = 1) float dimAmount) {        Window window = getWindow();        if (window != null) {            window.setDimAmount(dimAmount);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnShowListener", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnShowListener(@Nullable DialogInterface.OnShowListener listener) {        if (listener == null) {            return;        }        addOnShowListener(new ShowListenerWrapper(listener));    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnCancelListener", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnCancelListener(@Nullable DialogInterface.OnCancelListener listener) {        if (listener == null) {            return;        }        addOnCancelListener(new CancelListenerWrapper(listener));    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnDismissListener", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnDismissListener(@Nullable DialogInterface.OnDismissListener listener) {        if (listener == null) {            return;        }        addOnDismissListener(new DismissListenerWrapper(listener));    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnKeyListener", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnKeyListener(@Nullable DialogInterface.OnKeyListener listener) {        super.setOnKeyListener(listener);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnKeyListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnKeyListener(@Nullable BaseDialog.OnKeyListener listener) {        super.setOnKeyListener(new KeyListenerWrapper(listener));    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "addOnShowListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addOnShowListener(@Nullable BaseDialog.OnShowListener listener) {        if (mShowListeners == null) {            mShowListeners = new ArrayList<>();            super.setOnShowListener(mListeners);        }        mShowListeners.add(listener);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "addOnCancelListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addOnCancelListener(@Nullable BaseDialog.OnCancelListener listener) {        if (mCancelListeners == null) {            mCancelListeners = new ArrayList<>();            super.setOnCancelListener(mListeners);        }        mCancelListeners.add(listener);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "addOnDismissListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addOnDismissListener(@Nullable BaseDialog.OnDismissListener listener) {        if (mDismissListeners == null) {            mDismissListeners = new ArrayList<>();            super.setOnDismissListener(mListeners);        }        mDismissListeners.add(listener);    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "removeOnShowListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeOnShowListener(@Nullable BaseDialog.OnShowListener listener) {        if (mShowListeners != null) {            mShowListeners.remove(listener);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "removeOnCancelListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeOnCancelListener(@Nullable BaseDialog.OnCancelListener listener) {        if (mCancelListeners != null) {            mCancelListeners.remove(listener);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "removeOnDismissListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeOnDismissListener(@Nullable BaseDialog.OnDismissListener listener) {        if (mDismissListeners != null) {            mDismissListeners.remove(listener);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnShowListeners", "params": ["List<BaseDialog>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setOnShowListeners(@Nullable List<BaseDialog.OnShowListener> listeners) {        super.setOnShowListener(mListeners);        mShowListeners = listeners;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnCancelListeners", "params": ["List<BaseDialog>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setOnCancelListeners(@Nullable List<BaseDialog.OnCancelListener> listeners) {        super.setOnCancelListener(mListeners);        mCancelListeners = listeners;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setOnDismissListeners", "params": ["List<BaseDialog>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setOnDismissListeners(@Nullable List<BaseDialog.OnDismissListener> listeners) {        super.setOnDismissListener(mListeners);        mDismissListeners = listeners;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "onShow", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onShow(DialogInterface dialog) {        if (mShowListeners != null) {            for (int i = 0; i < mShowListeners.size(); i++) {                mShowListeners.get(i).onShow(this);            }        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "onCancel", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCancel(DialogInterface dialog) {        if (mCancelListeners != null) {            for (int i = 0; i < mCancelListeners.size(); i++) {                mCancelListeners.get(i).onCancel(this);            }        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "onDismiss", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDismiss(DialogInterface dialog) {        if (mDismissListeners != null) {            for (int i = 0; i < mDismissListeners.size(); i++) {                mDismissListeners.get(i).onDismiss(this);            }        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "dismiss", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dismiss() {        removeCallbacks();        super.dismiss();    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "BaseDialog", "extends": "AppCompatDialog", "implements": ["ContextAction", "HandlerAction", "ClickAction", "DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["public"]}}, {"method_name": "setThemeStyle", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setThemeStyle(@StyleRes int id) {            if (isCreated()) {                // Dialog \u521b\u5efa\u4e4b\u540e\u4e0d\u80fd\u518d\u8bbe\u7f6e\u4e3b\u9898 id                throw new IllegalStateException(\"are you ok?\");            }            mThemeId = id;            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setContentView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setContentView(@LayoutRes int id) {            // \u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\uff0c\u4e3a\u4ec0\u4e48\u8981\u4f20 new FrameLayout\uff0c\u56e0\u4e3a\u5982\u679c\u4e0d\u4f20\u7684\u8bdd\uff0cXML \u7684\u6839\u5e03\u5c40\u83b7\u53d6\u5230\u7684 LayoutParams \u5bf9\u8c61\u4f1a\u4e3a\u7a7a\uff0c\u4e5f\u5c31\u4f1a\u5bfc\u81f4\u5bbd\u9ad8\u53c2\u6570\u89e3\u6790\u4e0d\u51fa\u6765            return setContentView(LayoutInflater.from(mContext).inflate(id, new FrameLayout(mContext), false));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setContentView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setContentView(View view) {            mContentView = view;            if (isCreated()) {                mDialog.setContentView(view);            } else {                if (mContentView != null) {                    ViewGroup.LayoutParams layoutParams = mContentView.getLayoutParams();                    if (layoutParams != null && mWidth == ViewGroup.LayoutParams.WRAP_CONTENT && mHeight == ViewGroup.LayoutParams.WRAP_CONTENT) {                        // \u5982\u679c\u5f53\u524d Dialog \u7684\u5bbd\u9ad8\u8bbe\u7f6e\u4e86\u81ea\u9002\u5e94\uff0c\u5c31\u4ee5\u5e03\u5c40\u4e2d\u8bbe\u7f6e\u7684\u5bbd\u9ad8\u4e3a\u4e3b                        setWidth(layoutParams.width);                        setHeight(layoutParams.height);                    }                    // \u5982\u679c\u5f53\u524d\u6ca1\u6709\u8bbe\u7f6e\u91cd\u5fc3\uff0c\u5c31\u81ea\u52a8\u83b7\u53d6\u5e03\u5c40\u91cd\u5fc3                    if (mGravity == Gravity.NO_GRAVITY) {                        if (layoutParams instanceof FrameLayout.LayoutParams) {                            setGravity(((FrameLayout.LayoutParams) layoutParams).gravity);                        } else if (layoutParams instanceof LinearLayout.LayoutParams) {                            setGravity(((LinearLayout.LayoutParams) layoutParams).gravity);                        } else {                            // \u9ed8\u8ba4\u91cd\u5fc3\u662f\u5c45\u4e2d                            setGravity(Gravity.CENTER);                        }                    }                }            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setGravity", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setGravity(int gravity) {            // \u9002\u914d Android 4.2 \u65b0\u7279\u6027\uff0c\u5e03\u5c40\u53cd\u65b9\u5411\uff08\u5f00\u53d1\u8005\u9009\u9879 - \u5f3a\u5236\u4f7f\u7528\u4ece\u53f3\u5230\u5de6\u7684\u5e03\u5c40\u65b9\u5411\uff09            mGravity = gravity;            if (isCreated()) {                mDialog.setGravity(gravity);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setWidth", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setWidth(int width) {            mWidth = width;            if (isCreated()) {                mDialog.setWidth(width);            } else {                ViewGroup.LayoutParams params = mContentView != null ? mContentView.getLayoutParams() : null;                if (params != null) {                    params.width = width;                    mContentView.setLayoutParams(params);                }            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setHeight", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setHeight(int height) {            mHeight = height;            if (isCreated()) {                mDialog.setHeight(height);            } else {                // \u8fd9\u91cc\u89e3\u91ca\u4e00\u4e0b\u4e3a\u4ec0\u4e48\u8981\u91cd\u65b0\u8bbe\u7f6e LayoutParams                // \u56e0\u4e3a\u5982\u679c\u4e0d\u8fd9\u6837\u8bbe\u7f6e\u7684\u8bdd\uff0c\u7b2c\u4e00\u6b21\u663e\u793a\u7684\u65f6\u5019\u4f1a\u6309\u7167 Dialog \u5bbd\u9ad8\u663e\u793a                // \u4f46\u662f Layout \u5185\u5bb9\u53d8\u66f4\u4e4b\u540e\u5c31\u4e0d\u4f1a\u6309\u7167\u4e4b\u524d\u7684\u8bbe\u7f6e\u5bbd\u9ad8\u6765\u663e\u793a                // \u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5bf9 View \u7684 LayoutParams \u4e5f\u8fdb\u884c\u8bbe\u7f6e                ViewGroup.LayoutParams params = mContentView != null ? mContentView.getLayoutParams() : null;                if (params != null) {                    params.height = height;                    mContentView.setLayoutParams(params);                }            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setCancelable", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setCancelable(boolean cancelable) {            mCancelable = cancelable;            if (isCreated()) {                mDialog.setCancelable(cancelable);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setCanceledOnTouchOutside", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setCanceledOnTouchOutside(boolean cancel) {            mCanceledOnTouchOutside = cancel;            if (isCreated() && mCancelable) {                mDialog.setCanceledOnTouchOutside(cancel);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setAnimStyle", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setAnimStyle(@StyleRes int id) {            mAnimations = id;            if (isCreated()) {                mDialog.setWindowAnimations(id);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setBackgroundDimEnabled", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setBackgroundDimEnabled(boolean enabled) {            mBackgroundDimEnabled = enabled;            if (isCreated()) {                mDialog.setBackgroundDimEnabled(enabled);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setBackgroundDimAmount", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setBackgroundDimAmount(@FloatRange(from = 0, to = 1) float dimAmount) {            mBackgroundDimAmount = dimAmount;            if (isCreated()) {                mDialog.setBackgroundDimAmount(dimAmount);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "addOnShowListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B addOnShowListener(@NonNull BaseDialog.OnShowListener listener) {            if (isCreated()) {                mDialog.addOnShowListener(listener);            } else {                if (mOnShowListeners == null) {                    mOnShowListeners = new ArrayList<>();                }                mOnShowListeners.add(listener);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "addOnCancelListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B addOnCancelListener(@NonNull BaseDialog.OnCancelListener listener) {            if (isCreated()) {                mDialog.addOnCancelListener(listener);            } else {                if (mOnCancelListeners == null) {                    mOnCancelListeners = new ArrayList<>();                }                mOnCancelListeners.add(listener);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "addOnDismissListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B addOnDismissListener(@NonNull BaseDialog.OnDismissListener listener) {            if (isCreated()) {                mDialog.addOnDismissListener(listener);            } else {                if (mOnDismissListeners == null) {                    mOnDismissListeners = new ArrayList<>();                }                mOnDismissListeners.add(listener);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setOnKeyListener", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setOnKeyListener(@NonNull BaseDialog.OnKeyListener listener) {            if (isCreated()) {                mDialog.setOnKeyListener(listener);            } else {                mOnKeyListener = listener;            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setText", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setText(@IdRes int viewId, @StringRes int stringId) {            return setText(viewId, getString(stringId));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setText", "params": ["int", "CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setText(@IdRes int id, CharSequence text) {            ((TextView) findViewById(id)).setText(text);            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setTextColor", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setTextColor(@IdRes int id, @ColorInt int color) {            ((TextView) findViewById(id)).setTextColor(color);            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setHint", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setHint(@IdRes int viewId, @StringRes int stringId) {            return setHint(viewId, getString(stringId));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setHint", "params": ["int", "CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setHint(@IdRes int id, CharSequence text) {            ((TextView) findViewById(id)).setHint(text);            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setVisibility", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setVisibility(@IdRes int id, int visibility) {            findViewById(id).setVisibility(visibility);            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setBackground", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setBackground(@IdRes int viewId, @DrawableRes int drawableId) {            return setBackground(viewId, ContextCompat.getDrawable(mContext, drawableId));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setBackground", "params": ["int", "Drawable"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setBackground(@IdRes int id, Drawable drawable) {            findViewById(id).setBackground(drawable);            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setImageDrawable", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setImageDrawable(@IdRes int viewId, @DrawableRes int drawableId) {            return setBackground(viewId, ContextCompat.getDrawable(mContext, drawableId));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setImageDrawable", "params": ["int", "Drawable"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setImageDrawable(@IdRes int id, Drawable drawable) {            ((ImageView) findViewById(id)).setImageDrawable(drawable);            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "setOnClickListener", "params": ["int", "BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "B", "snippet": "        public B setOnClickListener(@IdRes int id, @NonNull BaseDialog.OnClickListener listener) {            if (isCreated()) {                View view = mDialog.findViewById(id);                if (view != null) {                    view.setOnClickListener(new ViewClickWrapper(mDialog, listener));                }            } else {                if (mClickArray == null) {                    mClickArray = new SparseArray<>();                }                mClickArray.put(id, listener);            }            return (B) this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "create", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BaseDialog", "snippet": "        public BaseDialog create() {            // \u5224\u65ad\u5e03\u5c40\u662f\u5426\u4e3a\u7a7a            if (mContentView == null) {                throw new IllegalArgumentException(\"are you ok?\");            }            // \u5982\u679c\u5f53\u524d\u6ca1\u6709\u8bbe\u7f6e\u91cd\u5fc3\uff0c\u5c31\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u7684\u91cd\u5fc3            if (mGravity == Gravity.NO_GRAVITY) {                mGravity = Gravity.CENTER;            }            // \u5982\u679c\u5f53\u524d\u6ca1\u6709\u8bbe\u7f6e\u52a8\u753b\u6548\u679c\uff0c\u5c31\u8bbe\u7f6e\u4e00\u4e2a\u9ed8\u8ba4\u7684\u52a8\u753b\u6548\u679c            if (mAnimations == AnimAction.NO_ANIM) {                switch (mGravity) {                    case Gravity.TOP:                        mAnimations = AnimAction.TOP;                        break;                    case Gravity.BOTTOM:                        mAnimations = AnimAction.BOTTOM;                        break;                    case Gravity.LEFT:                        mAnimations = AnimAction.LEFT;                        break;                    case Gravity.RIGHT:                        mAnimations = AnimAction.RIGHT;                        break;                    default:                        mAnimations = AnimAction.DEFAULT;                        break;                }            }            mDialog = createDialog(mContext, mThemeId);            mDialog.setContentView(mContentView);            mDialog.setCancelable(mCancelable);            if (mCancelable) {                mDialog.setCanceledOnTouchOutside(mCanceledOnTouchOutside);            }            // \u8bbe\u7f6e\u53c2\u6570            Window window = mDialog.getWindow();            if (window != null) {                WindowManager.LayoutParams params = window.getAttributes();                params.width = mWidth;                params.height = mHeight;                params.gravity = mGravity;                params.windowAnimations = mAnimations;                window.setAttributes(params);                if (mBackgroundDimEnabled) {                    window.addFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);                    window.setDimAmount(mBackgroundDimAmount);                } else {                    window.clearFlags(WindowManager.LayoutParams.FLAG_DIM_BEHIND);                }            }            if (mOnShowListeners != null) {                mDialog.setOnShowListeners(mOnShowListeners);            }            if (mOnCancelListeners != null) {                mDialog.setOnCancelListeners(mOnCancelListeners);            }            if (mOnDismissListeners != null) {                mDialog.setOnDismissListeners(mOnDismissListeners);            }            if (mOnKeyListener != null) {                mDialog.setOnKeyListener(mOnKeyListener);            }            for (int i = 0; mClickArray != null && i < mClickArray.size(); i++) {                mContentView.findViewById(mClickArray.keyAt(i)).setOnClickListener(new ViewClickWrapper(mDialog, mClickArray.valueAt(i)));            }            Activity activity = getActivity();            if (activity != null) {                DialogLifecycle.with(activity, mDialog);            }            return mDialog;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "show", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BaseDialog", "snippet": "        public BaseDialog show() {            if (!isCreated()) {                create();            }            mDialog.show();            return mDialog;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "getContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Context", "snippet": "        public Context getContext() {            return mContext;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "getActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Activity", "snippet": "        public Activity getActivity() {            Context context = mContext;            do {                if (context instanceof Activity) {                    return (Activity) context;                } else if (context instanceof ContextWrapper){                    context = ((ContextWrapper) context).getBaseContext();                } else {                    return null;                }            } while (context != null);            return null;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "isCreated", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isCreated() {            return mDialog != null;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "isShowing", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isShowing() {            return mDialog != null && mDialog.isShowing();        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "dismiss", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void dismiss() {            if (mDialog != null) {                mDialog.dismiss();            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "createDialog", "params": ["Context", "int"], "throws": null, "modifiers": ["protected"], "return_type": "BaseDialog", "snippet": "        protected BaseDialog createDialog(Context context, @StyleRes int themeId) {            return new BaseDialog(context, themeId);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "post", "params": ["Runnable"], "throws": null, "modifiers": ["public", "final"], "return_type": "void", "snippet": "        public final void post(Runnable r) {            if (isShowing()) {                mDialog.post(r);            } else {                addOnShowListener(new ShowPostWrapper(r));            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "postDelayed", "params": ["Runnable", "long"], "throws": null, "modifiers": ["public", "final"], "return_type": "void", "snippet": "        public final void postDelayed(Runnable r, long delayMillis) {            if (isShowing()) {                mDialog.postDelayed(r, delayMillis);            } else {                addOnShowListener(new ShowPostDelayedWrapper(r, delayMillis));            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "postAtTime", "params": ["Runnable", "long"], "throws": null, "modifiers": ["public", "final"], "return_type": "void", "snippet": "        public final void postAtTime(Runnable r, long uptimeMillis) {            if (isShowing()) {                mDialog.postAtTime(r, uptimeMillis);            } else {                addOnShowListener(new ShowPostAtTimeWrapper(r, uptimeMillis));            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "getContentView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "        public View getContentView() {            return mContentView;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "findViewById", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "        public  <V extends View> V findViewById(@IdRes int id) {            if (mContentView == null) {                // \u6ca1\u6709 setContentView \u5c31\u60f3 findViewById ?                throw new IllegalStateException(\"are you ok?\");            }            return mContentView.findViewById(id);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "getDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BaseDialog", "snippet": "        public BaseDialog getDialog() {            return mDialog;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "Builder", "extends": null, "implements": ["ContextAction", "ClickAction"], "modifiers": ["public", "static"]}}, {"method_name": "with", "params": ["Activity", "BaseDialog"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "        private static void with(Activity activity, BaseDialog dialog) {            new DialogLifecycle(activity, dialog);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onActivityCreated", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityCreated(@NonNull Activity activity, @Nullable Bundle savedInstanceState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onActivityStarted", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityStarted(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onActivityResumed", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityResumed(@NonNull Activity activity) {            if (mDialog != null && mDialog.isShowing()) {                // \u8fd8\u539f Dialog \u52a8\u753b\u6837\u5f0f\uff08\u8fd9\u91cc\u5fc5\u987b\u8981\u4f7f\u7528\u5ef6\u8fdf\u8bbe\u7f6e\uff0c\u5426\u5219\u6709\u4e00\u5b9a\u51e0\u7387\u4f1a\u51fa\u73b0\uff09                mDialog.post(() -> mDialog.setWindowAnimations(mDialogAnim));            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onActivityPaused", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityPaused(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onActivityStopped", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityStopped(@NonNull Activity activity) {            if (mDialog != null && mDialog.isShowing()) {                // \u83b7\u53d6 Dialog \u52a8\u753b\u6837\u5f0f                mDialogAnim = mDialog.getWindowAnimations();                // \u8bbe\u7f6e Dialog \u65e0\u52a8\u753b\u6548\u679c                mDialog.setWindowAnimations(AnimAction.NO_ANIM);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onActivitySaveInstanceState", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivitySaveInstanceState(@NonNull Activity activity, @NonNull Bundle outState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onActivityDestroyed", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityDestroyed(@NonNull Activity activity) {            if (mActivity == activity) {                if (mDialog != null) {                    mDialog.removeOnShowListener(null);                    mDialog.removeOnDismissListener(null);                    if (mDialog.isShowing()) {                        mDialog.dismiss();                    }                    mDialog = null;                }                mActivity.getApplication().unregisterActivityLifecycleCallbacks(this);                mActivity = null;            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onShow", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(BaseDialog dialog) {            mDialog = dialog;            mActivity.getApplication().registerActivityLifecycleCallbacks(this);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onDismiss", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDismiss(BaseDialog dialog) {            mDialog = null;            mActivity.getApplication().unregisterActivityLifecycleCallbacks(this);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DialogLifecycle", "extends": null, "implements": ["Application", "BaseDialog", "BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onShow", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(DialogInterface dialog) {            if (get() != null) {                get().onShow(dialog);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ListenersWrapper", "extends": "SoftReference", "implements": ["DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onCancel", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onCancel(DialogInterface dialog) {            if (get() != null) {                get().onCancel(dialog);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ListenersWrapper", "extends": "SoftReference", "implements": ["DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onDismiss", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDismiss(DialogInterface dialog) {            if (get() != null) {                get().onDismiss(dialog);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ListenersWrapper", "extends": "SoftReference", "implements": ["DialogInterface", "DialogInterface", "DialogInterface"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onClick", "params": ["View"], "throws": null, "modifiers": ["public", "final"], "return_type": "void", "snippet": "        public final void onClick(View v) {            mListener.onClick(mDialog, v);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ViewClickWrapper", "extends": null, "implements": ["View"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onShow", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(BaseDialog dialog) {            // \u5728\u6a2a\u7ad6\u5c4f\u5207\u6362\u540e\u76d1\u542c\u5bf9\u8c61\u4f1a\u4e3a\u7a7a            if (get() != null) {                get().onShow(dialog);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ShowListenerWrapper", "extends": "SoftReference", "implements": ["BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onCancel", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onCancel(BaseDialog dialog) {            // \u5728\u6a2a\u7ad6\u5c4f\u5207\u6362\u540e\u76d1\u542c\u5bf9\u8c61\u4f1a\u4e3a\u7a7a            if (get() != null) {                get().onCancel(dialog);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "CancelListenerWrapper", "extends": "SoftReference", "implements": ["BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onDismiss", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDismiss(BaseDialog dialog) {            // \u5728\u6a2a\u7ad6\u5c4f\u5207\u6362\u540e\u76d1\u542c\u5bf9\u8c61\u4f1a\u4e3a\u7a7a            if (get() != null) {                get().onDismiss(dialog);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "DismissListenerWrapper", "extends": "SoftReference", "implements": ["BaseDialog"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onKey", "params": ["DialogInterface", "int", "KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {            // \u5728\u6a2a\u7ad6\u5c4f\u5207\u6362\u540e\u76d1\u542c\u5bf9\u8c61\u4f1a\u4e3a\u7a7a            if (mListener != null && dialog instanceof BaseDialog) {                mListener.onKey((BaseDialog) dialog, event);            }            return false;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "KeyListenerWrapper", "extends": null, "implements": ["DialogInterface"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onShow", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(BaseDialog dialog) {            if (mRunnable != null) {                dialog.removeOnShowListener(this);                dialog.post(mRunnable);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ShowPostWrapper", "extends": null, "implements": ["OnShowListener"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onShow", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(BaseDialog dialog) {            if (mRunnable != null) {                dialog.removeOnShowListener(this);                dialog.postDelayed(mRunnable, mDelayMillis);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ShowPostDelayedWrapper", "extends": null, "implements": ["OnShowListener"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onShow", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(BaseDialog dialog) {            if (mRunnable != null) {                dialog.removeOnShowListener(this);                dialog.postAtTime(mRunnable, mUptimeMillis);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/base/src/main/java/com/hjq/base/BaseDialog.java", "stars": "1", "class": {"name": "ShowPostAtTimeWrapper", "extends": null, "implements": ["OnShowListener"], "modifiers": ["private", "static", "final"]}}, {"method_name": "onAttachEVEEntity", "params": ["AttachCapabilitiesEvent<Entity>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onAttachEVEEntity(AttachCapabilitiesEvent<Entity> event) {        if (event.getObject() instanceof EntityLivingBase) {            event.addCapability(StringHelper.getResourceLocation(\"eve\"),                    new EVEStorageLiving((EntityLivingBase) event.getObject(), new Range(0, 1), new Range(0, 1), 100));        }    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/EVEEvent.java", "stars": "2", "class": {"name": "EVEEvent", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onAttachEVEChunk", "params": ["AttachCapabilitiesEvent<Chunk>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onAttachEVEChunk(AttachCapabilitiesEvent<Chunk> event) {        if (perlin1 == null) {            perlin1 = new NoiseGeneratorPerlin(new Random(1919L), 1);            perlin2 = new NoiseGeneratorPerlin(new Random(810L), 1);            perlin3 = new NoiseGeneratorPerlin(new Random(114L), 1);            perlin4 = new NoiseGeneratorPerlin(new Random(514L), 1);        }        int x = event.getObject().x, z = event.getObject().z;        float noise1 = MathHelper.denormalize((float) Math.abs(perlin1.getValue(x / 200d, z / 200d)), 0.8f, 0.5f);        float noise2 = MathHelper.denormalize((float) Math.abs(perlin2.getValue(x / 200d, z / 200d)), 0.8f, 0.5f);        float noise3 = (float) Math.abs(perlin3.getValue(x / 200d, z / 200d));        float noise4 = (float) Math.abs(perlin4.getValue(x / 200d, z / 200d));        event.addCapability(                StringHelper.getResourceLocation(\"eve_chunk\"),                new ARadCenterStorage(event.getObject(),                        new Range(Math.min(noise3, noise4), Math.max(noise3, noise4)),                        new Range(Math.min(noise1, noise2), Math.max(noise1, noise2))                ));    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Auxiliary/Magic/EVE/EVEEvent.java", "stars": "2", "class": {"name": "EVEEvent", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadFontFromAssets", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "Typeface", "snippet": "    public static Typeface loadFontFromAssets(Context context) {   \t     \tString fontName = Constant.FONT_NORMAL;        // make sure we load each font only once        synchronized (mCache) {             if (! mCache.containsKey(fontName)) {                 Typeface typeface = Typeface.createFromAsset(context.getAssets(), fontName);                 mCache.put(fontName, typeface);            }             return mCache.get(fontName);         }     }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/FontUtils.java", "stars": "2", "class": {"name": "FontUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadFontFromAssets", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Typeface", "snippet": "    public static Typeface loadFontFromAssets(Context context, String styleType) {    \t     \tString fontName = Constant.FONT_NORMAL;    \tif(Constant.FONT_BOLD == styleType){    \t\tfontName = Constant.FONT_BOLD;    \t}        // make sure we load each font only once        synchronized (mCache) {             if (! mCache.containsKey(fontName)) {                 Typeface typeface = Typeface.createFromAsset(context.getAssets(), fontName);                 mCache.put(fontName, typeface);            }             return mCache.get(fontName);         }     }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/FontUtils.java", "stars": "2", "class": {"name": "FontUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadFontFromAssets", "params": ["Context", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "Typeface", "snippet": "    public static Typeface loadFontFromAssets(Context context, String fontType, String styleType) {   \t     \tString fontName = Constant.FONT_NORMAL;    \tif(Constant.FONT_BOLD.equals(fontType)){    \t\tfontName = Constant.FONT_BOLD;    \t}else if(Constant.FONT_ITALIC.equals(fontType)){    \t\tfontName = Constant.FONT_ITALIC;    \t}else if(Constant.FONT_BOLD_ITALIC.equals(fontType)){    \t\tfontName = Constant.FONT_BOLD_ITALIC;    \t}        // make sure we load each font only once        synchronized (mCache) {             if (! mCache.containsKey(fontName)) {                 Typeface typeface = Typeface.createFromAsset(context.getAssets(), fontName);                 mCache.put(fontName, typeface);            }             return mCache.get(fontName);         }     }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/util/FontUtils.java", "stars": "2", "class": {"name": "FontUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMediaPlayer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMediaPlayer", "snippet": "    public IMediaPlayer getMediaPlayer() {        return mediaPlayer;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "initVideoPlayer", "params": ["Context", "Message", "List<VideoOptionModel>", "ICacheManager"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initVideoPlayer(Context context, Message msg, List<VideoOptionModel> optionModelList, ICacheManager cacheManager) {        mediaPlayer = (ijkLibLoader == null) ? new IjkMediaPlayer() : new IjkMediaPlayer(ijkLibLoader);        mediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);        mediaPlayer.setOnNativeInvokeListener(new IjkMediaPlayer.OnNativeInvokeListener() {            @Override            public boolean onNativeInvoke(int i, Bundle bundle) {                return true;            }        });        GSYModel gsyModel = (GSYModel) msg.obj;        String url = gsyModel.getUrl();        try {            //\u5f00\u542f\u786c\u89e3\u7801            if (GSYVideoType.isMediaCodec()) {                Debuger.printfLog(\"enable mediaCodec\");                mediaPlayer.setOption(IjkMediaPlayer.OPT_CATEGORY_PLAYER, \"mediacodec\", 1);                mediaPlayer.setOption(IjkMediaPlayer.OPT_CATEGORY_PLAYER, \"mediacodec-auto-rotate\", 1);                mediaPlayer.setOption(IjkMediaPlayer.OPT_CATEGORY_PLAYER, \"mediacodec-handle-resolution-change\", 1);            }            if (gsyModel.isCache() && cacheManager != null) {                cacheManager.doCacheLogic(context, mediaPlayer, url, gsyModel.getMapHeadData(), gsyModel.getCachePath());            } else {                if (!TextUtils.isEmpty(url)) {                    Uri uri = Uri.parse(url);                    if (uri.getScheme().equals(ContentResolver.SCHEME_ANDROID_RESOURCE)) {                        RawDataSourceProvider rawDataSourceProvider = RawDataSourceProvider.create(context, uri);                        mediaPlayer.setDataSource(rawDataSourceProvider);                    } else {                        mediaPlayer.setDataSource(url, gsyModel.getMapHeadData());                    }                } else {                    mediaPlayer.setDataSource(url, gsyModel.getMapHeadData());                }            }            mediaPlayer.setLooping(gsyModel.isLooping());            if (gsyModel.getSpeed() != 1 && gsyModel.getSpeed() > 0) {                mediaPlayer.setSpeed(gsyModel.getSpeed());            }            mediaPlayer.native_setLogLevel(logLevel);            initIJKOption(mediaPlayer, optionModelList);        } catch (IOException e) {            e.printStackTrace();        }        initSuccess(gsyModel);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "showDisplay", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDisplay(Message msg) {        if (msg.obj == null && mediaPlayer != null) {            mediaPlayer.setSurface(null);        } else {            Surface holder = (Surface) msg.obj;            surface = holder;            if (mediaPlayer != null && holder.isValid()) {                mediaPlayer.setSurface(holder);            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSpeed", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeed(float speed, boolean soundTouch) {        if (speed > 0) {            try {                if (mediaPlayer != null) {                    mediaPlayer.setSpeed(speed);                }            } catch (Exception e) {                e.printStackTrace();            }            if (soundTouch) {                VideoOptionModel videoOptionModel =                        new VideoOptionModel(IjkMediaPlayer.OPT_CATEGORY_PLAYER, \"soundtouch\", 1);                List<VideoOptionModel> list = getOptionModelList();                if (list != null) {                    list.add(videoOptionModel);                } else {                    list = new ArrayList<>();                    list.add(videoOptionModel);                }                setOptionModelList(list);            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setNeedMute", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNeedMute(boolean needMute) {        if (mediaPlayer != null) {            if (needMute) {                mediaPlayer.setVolume(0, 0);            } else {                mediaPlayer.setVolume(1, 1);            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "releaseSurface", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseSurface() {        if (surface != null) {            //surface.release();            surface = null;        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "release", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {        if (mediaPlayer != null) {            mediaPlayer.release();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBufferedPercentage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBufferedPercentage() {        return -1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getNetSpeed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getNetSpeed() {        if (mediaPlayer != null) {            return mediaPlayer.getTcpSpeed();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setSpeedPlaying", "params": ["float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSpeedPlaying(float speed, boolean soundTouch) {        if (mediaPlayer != null) {            mediaPlayer.setSpeed(speed);            mediaPlayer.setOption(IjkMediaPlayer.OPT_CATEGORY_PLAYER, \"soundtouch\", (soundTouch) ? 1 : 0);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "start", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {        if (mediaPlayer != null) {            mediaPlayer.start();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "stop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {        if (mediaPlayer != null) {            mediaPlayer.stop();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "pause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void pause() {        if (mediaPlayer != null) {            mediaPlayer.pause();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoWidth", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoWidth() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoWidth();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoHeight", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoHeight() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoHeight();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "isPlaying", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isPlaying() {        if (mediaPlayer != null) {            return mediaPlayer.isPlaying();        }        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "seekTo", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void seekTo(long time) {        if (mediaPlayer != null) {            mediaPlayer.seekTo(time);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCurrentPosition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCurrentPosition() {        if (mediaPlayer != null) {            return mediaPlayer.getCurrentPosition();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDuration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {        if (mediaPlayer != null) {            return mediaPlayer.getDuration();        }        return 0;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoSarNum", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarNum() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoSarNum();        }        return 1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getVideoSarDen", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarDen() {        if (mediaPlayer != null) {            return mediaPlayer.getVideoSarDen();        }        return 1;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "isSurfaceSupportLockCanvas", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSurfaceSupportLockCanvas() {        return true;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "initIJKOption", "params": ["IjkMediaPlayer", "List<VideoOptionModel>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initIJKOption(IjkMediaPlayer ijkMediaPlayer, List<VideoOptionModel> optionModelList) {        if (optionModelList != null && optionModelList.size() > 0) {            for (VideoOptionModel videoOptionModel : optionModelList) {                if (videoOptionModel.getValueType() == VideoOptionModel.VALUE_TYPE_INT) {                    ijkMediaPlayer.setOption(videoOptionModel.getCategory(),                            videoOptionModel.getName(), videoOptionModel.getValueInt());                } else {                    ijkMediaPlayer.setOption(videoOptionModel.getCategory(),                            videoOptionModel.getName(), videoOptionModel.getValueString());                }            }        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getOptionModelList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<VideoOptionModel>", "snippet": "    public List<VideoOptionModel> getOptionModelList() {        return optionModelList;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setOptionModelList", "params": ["List<VideoOptionModel>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOptionModelList(List<VideoOptionModel> optionModelList) {        this.optionModelList = optionModelList;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getIjkLibLoader", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "IjkLibLoader", "snippet": "    public static IjkLibLoader getIjkLibLoader() {        return ijkLibLoader;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setIjkLibLoader", "params": ["IjkLibLoader"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setIjkLibLoader(IjkLibLoader ijkLibLoader) {        IjkPlayerManager.ijkLibLoader = ijkLibLoader;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getLogLevel", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getLogLevel() {        return logLevel;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "setLogLevel", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setLogLevel(int logLevel) {        IjkPlayerManager.logLevel = logLevel;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/player/IjkPlayerManager.java", "stars": "2", "class": {"name": "IjkPlayerManager", "extends": "BasePlayerManager", "implements": null, "modifiers": ["public"]}}, {"method_name": "getState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getState() {        return gearBoxCurrentParams[0];    }", "url": "https://raw.githubusercontent.com/DevUpgrade-online/gearbox/master/Gearbox.java", "stars": "2", "class": {"name": "Gearbox", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCurrentGear", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getCurrentGear() {        return gearBoxCurrentParams[1];    }", "url": "https://raw.githubusercontent.com/DevUpgrade-online/gearbox/master/Gearbox.java", "stars": "2", "class": {"name": "Gearbox", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setCurrentGear", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCurrentGear(int currentGear) {        gearBoxCurrentParams[1] = currentGear;    }", "url": "https://raw.githubusercontent.com/DevUpgrade-online/gearbox/master/Gearbox.java", "stars": "2", "class": {"name": "Gearbox", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setGearBoxCurrentParams", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGearBoxCurrentParams(Object[] gearBoxCurrentParams) {        if (gearBoxCurrentParams[0] != this.gearBoxCurrentParams[0]) {            //zmienil sie state            this.gearBoxCurrentParams[0] = gearBoxCurrentParams[0];            Integer state = (Integer) gearBoxCurrentParams[0];            if (state == 2) {                setCurrentGear(0);            }            if (state == 3) {                setCurrentGear(-1);            }            if (state == 4) {                setCurrentGear(0);            }            setCurrentGear((Integer) gearBoxCurrentParams[1]);        } else {           setCurrentGear((Integer) gearBoxCurrentParams[1]);        }    }", "url": "https://raw.githubusercontent.com/DevUpgrade-online/gearbox/master/Gearbox.java", "stars": "2", "class": {"name": "Gearbox", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMaxDrive", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getMaxDrive() {        return maxDrive;    }", "url": "https://raw.githubusercontent.com/DevUpgrade-online/gearbox/master/Gearbox.java", "stars": "2", "class": {"name": "Gearbox", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setMaxDrive", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMaxDrive(int maxDrive) {        this.maxDrive = maxDrive;    }", "url": "https://raw.githubusercontent.com/DevUpgrade-online/gearbox/master/Gearbox.java", "stars": "2", "class": {"name": "Gearbox", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "filterByRegular", "params": ["List<String>", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> filterByRegular(List<String> allStrs,                                               String regular) {        List<String> matchedValues = new ArrayList<String>();        // \u8bed\u6cd5\u4e60\u60ef\u4e0a\u7684\u517c\u5bb9\u5904\u7406(pt=* \u5b9e\u9645\u6b63\u5219\u5e94\u8be5\u662f\uff1apt=.*)        String newReqular = regular.replace(\".*\", \"*\").replace(\"*\", \".*\");        Pattern p = Pattern.compile(newReqular);        for (String partition : allStrs) {            if (p.matcher(partition).matches()) {                if (!matchedValues.contains(partition)) {                    matchedValues.add(partition);                }            }        }        return matchedValues;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/FilterUtil.java", "stars": "23", "class": {"name": "FilterUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "filterByRegulars", "params": ["List<String>", "List<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> filterByRegulars(List<String> allStrs,                                                List<String> regulars) {        List<String> matchedValues = new ArrayList<String>();        List<String> tempMatched = null;        for (String regular : regulars) {            tempMatched = filterByRegular(allStrs, regular);            if (null != tempMatched && !tempMatched.isEmpty()) {                for (String temp : tempMatched) {                    if (!matchedValues.contains(temp)) {                        matchedValues.add(temp);                    }                }            }        }        return matchedValues;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/FilterUtil.java", "stars": "23", "class": {"name": "FilterUtil", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "onCreateView", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\t\tView view = inflater.inflate(R.layout.fragment_green, container, false);\t\treturn view;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/ViewPagerDemo/src/pl/looksok/viewpagerdemo/FragmentGreen.java", "stars": "74", "class": {"name": "FragmentGreen", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "getMyAllLabels", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getMyAllLabels()  throws IOException {        User user = (User) session.getAttribute(\"onlineUser\");        List<String> list = ls.getAllLabelsByUserId(user.getUser_id());        // \u89e3\u51b3response\u8fd4\u56de\u7684\u6570\u636e\u4e2d\u6587\u4e71\u7801\u95ee\u9898        response.setContentType(\"text/html;charset=UTF-8\");        // \u4f7f\u7528\u5de5\u5177\u7c7bJSON\u5c06\u96c6\u5408\u8f6c\u4e3ajson\u5b57\u7b26\u4e32,\u65b9\u4fbf\u524d\u7aef\u8c03\u53d6        String result = JSON.toJSONString(list);        // \u5c06\u8f6c\u6362\u597d\u7684json\u5b57\u7b26\u4e32\u8fd4\u56de\u7ed9\u524d\u7aef\u8fdb\u884c\u6e32\u67d3        response.getWriter().write(result);    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/LabelController.java", "stars": "10", "class": {"name": "LabelController", "extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"method_name": "getMyAllLabelsAndArticleCount", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void getMyAllLabelsAndArticleCount() throws IOException {        User user = (User) session.getAttribute(\"onlineUser\");        List<String> list = ls.getAllLabelsByUserId(user.getUser_id());        Map<String,Integer> map = new LinkedHashMap<>();        for (String tag:list             ) {            int num = ls.getTagArticleCount(tag,user.getUser_id());            map.put(tag,num);        }        // \u89e3\u51b3response\u8fd4\u56de\u7684\u6570\u636e\u4e2d\u6587\u4e71\u7801\u95ee\u9898        response.setContentType(\"text/html;charset=UTF-8\");        // \u4f7f\u7528\u5de5\u5177\u7c7bJSON\u5c06\u96c6\u5408\u8f6c\u4e3ajson\u5b57\u7b26\u4e32,\u65b9\u4fbf\u524d\u7aef\u8c03\u53d6        String string = JSON.toJSONString(map);        // \u5c06\u8f6c\u6362\u597d\u7684json\u5b57\u7b26\u4e32\u8fd4\u56de\u7ed9\u524d\u7aef\u8fdb\u884c\u6e32\u67d3        response.getWriter().write(string);    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/LabelController.java", "stars": "10", "class": {"name": "LabelController", "extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"method_name": "addLabel", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void addLabel(String name) throws IOException {        User user = (User) session.getAttribute(\"onlineUser\");        response.setContentType(\"text/html;charset=UTF-8\");        if(!isExist(name,user.getUser_id())){            ls.addLabel(name,user.getUser_id());            response.getWriter().write(\"yes\");        }else{            response.getWriter().write(\"no\");        }    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/LabelController.java", "stars": "10", "class": {"name": "LabelController", "extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"method_name": "deleteLabel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteLabel(String name){        User user = (User) session.getAttribute(\"onlineUser\");        ls.deleteLabel(name,user.getUser_id());    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/LabelController.java", "stars": "10", "class": {"name": "LabelController", "extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"method_name": "updateLabel", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateLabel(String oldLabel,String newLabel){        User user = (User) session.getAttribute(\"onlineUser\");        ls.updateLabel(oldLabel,newLabel,user.getUser_id());    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/LabelController.java", "stars": "10", "class": {"name": "LabelController", "extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"method_name": "isExist", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isExist(String name,int user_id){        Label label = ls.getLabel(name,user_id);        if(label == null){            return false;        }        return true;    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/LabelController.java", "stars": "10", "class": {"name": "LabelController", "extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"method_name": "toHQL", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toHQL() {    return \"ALTER TABLE \" + table + \" SET LOCATION '\" + newLocation + \"';\";  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/azkaban/hive/actions/AlterTableLocationQL.java", "stars": "18", "class": {"name": "AlterTableLocationQL", "extends": null, "implements": ["HQL"], "modifiers": []}}, {"method_name": "createExecutor", "params": ["int", "int", "QueueProcessingType"], "throws": null, "modifiers": ["public", "static"], "return_type": "Executor", "snippet": "\tpublic static Executor createExecutor(int threadPoolSize, int threadPriority, QueueProcessingType tasksProcessingType) {\t\tboolean lifo = tasksProcessingType == QueueProcessingType.LIFO;\t\tBlockingQueue<Runnable> taskQueue = lifo ? new LIFOLinkedBlockingDeque<Runnable>() : new LinkedBlockingQueue<Runnable>();\t\treturn new ThreadPoolExecutor(threadPoolSize, threadPoolSize, 0L, TimeUnit.MILLISECONDS, taskQueue, createThreadFactory(threadPriority));\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createFileNameGenerator", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "FileNameGenerator", "snippet": "\tpublic static FileNameGenerator createFileNameGenerator() {\t\treturn new HashCodeFileNameGenerator();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createDiscCache", "params": ["Context", "FileNameGenerator", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "DiscCacheAware", "snippet": "\tpublic static DiscCacheAware createDiscCache(Context context, FileNameGenerator discCacheFileNameGenerator, int discCacheSize, int discCacheFileCount) {\t\tif (discCacheSize > 0) {\t\t\tFile individualCacheDir = StorageUtils.getIndividualCacheDirectory(context);\t\t\treturn new TotalSizeLimitedDiscCache(individualCacheDir, discCacheFileNameGenerator, discCacheSize);\t\t} else if (discCacheFileCount > 0) {\t\t\tFile individualCacheDir = StorageUtils.getIndividualCacheDirectory(context);\t\t\treturn new FileCountLimitedDiscCache(individualCacheDir, discCacheFileNameGenerator, discCacheFileCount);\t\t} else {\t\t\tFile cacheDir = StorageUtils.getCacheDirectory(context);\t\t\treturn new UnlimitedDiscCache(cacheDir, discCacheFileNameGenerator);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createReserveDiscCache", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "DiscCacheAware", "snippet": "\tpublic static DiscCacheAware createReserveDiscCache(Context context) {\t\tFile cacheDir = context.getCacheDir();\t\tFile individualDir = new File(cacheDir, \"uil-images\");\t\tif (individualDir.exists() || individualDir.mkdir()) {\t\t\tcacheDir = individualDir;\t\t}\t\treturn new TotalSizeLimitedDiscCache(cacheDir, 2 * 1024 * 1024); // limit - 2 Mb\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createMemoryCache", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "MemoryCacheAware<String,Bitmap>", "snippet": "\tpublic static MemoryCacheAware<String, Bitmap> createMemoryCache(int memoryCacheSize) {\t\tif (memoryCacheSize == 0) {\t\t\tmemoryCacheSize = (int) (Runtime.getRuntime().maxMemory() / 8);\t\t}\t\tMemoryCacheAware<String, Bitmap> memoryCache;\t\tif (Build.VERSION.SDK_INT >= Build.VERSION_CODES.GINGERBREAD) {\t\t\tmemoryCache = new LruMemoryCache(memoryCacheSize);\t\t} else {\t\t\tmemoryCache = new LRULimitedMemoryCache(memoryCacheSize);\t\t}\t\treturn memoryCache;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createImageDownloader", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageDownloader", "snippet": "\tpublic static ImageDownloader createImageDownloader(Context context) {\t\treturn new BaseImageDownloader(context);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createImageDecoder", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageDecoder", "snippet": "\tpublic static ImageDecoder createImageDecoder(boolean loggingEnabled) {\t\treturn new BaseImageDecoder(loggingEnabled);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createBitmapDisplayer", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "BitmapDisplayer", "snippet": "\tpublic static BitmapDisplayer createBitmapDisplayer() {\t\treturn new SimpleBitmapDisplayer();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createThreadFactory", "params": ["int"], "throws": null, "modifiers": ["private", "static"], "return_type": "ThreadFactory", "snippet": "\tprivate static ThreadFactory createThreadFactory(int threadPriority) {\t\treturn new DefaultThreadFactory(threadPriority);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultConfigurationFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "newThread", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "Thread", "snippet": "\t\tpublic Thread newThread(Runnable r) {\t\t\tThread t = new Thread(group, r, namePrefix + threadNumber.getAndIncrement(), 0);\t\t\tif (t.isDaemon()) t.setDaemon(false);\t\t\tt.setPriority(threadPriority);\t\t\treturn t;\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/DefaultConfigurationFactory.java", "stars": "74", "class": {"name": "DefaultThreadFactory", "extends": null, "implements": ["ThreadFactory"], "modifiers": ["private", "static"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {        test();        String s = new String();        Object o = new Object();        System.out.println(s.equals(o));    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/test/java/org/coral/jroutine/weave/rewrite/Loop.java", "stars": "3", "class": {"name": "Loop", "extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"method_name": "test", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void test() {        // TODO Auto-generated method stub            }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/test/java/org/coral/jroutine/weave/rewrite/Loop.java", "stars": "3", "class": {"name": "Loop", "extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\tFangfafugaitest f1 = new Fangfafugaitest();\t\tf1.move();\t\tFangfafugaitest1 f2 = new Fangfafugaitest1();\t\tf2.move();\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/Fangfafugai.java", "stars": "2", "class": {"name": "Fangfafugai", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": ["ClassNotFoundException", "IllegalAccessException", "InstantiationException", "NoSuchMethodException", "InvocationTargetException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws ClassNotFoundException, IllegalAccessException, InstantiationException, NoSuchMethodException, InvocationTargetException {        //\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u7c7b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u65b9\u6cd5        /*         * \u524d\u63d0\uff1a\u4e0d\u80fd\u6539\u53d8\u8be5\u7c7b\u7684\u4efb\u4f55\u4ee3\u7801\uff0c\u53ef\u4ee5\u521b\u5efa\u4efb\u610f\u7c7b\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u6267\u884c\u4efb\u610f\u65b9\u6cd5         */        //1\u3001\u89e3\u6790\u6ce8\u89e3        //1.1 \u83b7\u53d6\u8be5\u7c7b\u7684\u5b57\u8282\u7801\u5bf9\u8c61        Class<annotation> annotationClass = annotation.class;        //2\u3001\u83b7\u53d6\u4e0a\u8fb9\u7684\u6ce8\u89e3\u5bf9\u8c61        //\u5176\u5b9e\u5c31\u662f\u5728\u5185\u5b58\u4e2d\u751f\u6210\u4e86\u4e00\u4e2a\u8be5\u6ce8\u89e3\u63a5\u53e3\u7684\u5b50\u7c7b\u5b9e\u73b0\u5bf9\u8c61        /**         *  public class ProImpl implements Pro{         *      public String className(){         *          return \"java2.itcast.annotation.Demo1\";         *      }         *         *      public String methodName(){         *          return \"show\";         *      }         *  }         */        Pro an = annotationClass.getAnnotation(Pro.class);        //3\u3001\u8c03\u7528\u6ce8\u89e3\u5bf9\u8c61\u4e2d\u7684\u62bd\u8c61\u65b9\u6cd5\uff0c\u83b7\u53d6\u8fd4\u56de\u503c        String className = an.className();        String methodName = an.methodName();        System.out.println(className);        System.out.println(methodName);        //3\u3001\u52a0\u8f7d\u8fdb\u5185\u5b58        Class<?> cls = Class.forName(className);        //4\u3001\u521b\u5efa\u5bf9\u8c61        Object obj = cls.newInstance();        //5\u3001\u83b7\u53d6\u5bf9\u8c61\u65b9\u6cd5        Method method = cls.getMethod(methodName);        //6\u3001\u6267\u884c\u65b9\u6cd5        method.invoke(obj);    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/java2/itcast/annotation/annotation.java", "stars": "2", "class": {"name": "annotation", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setUp() throws Exception {    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/multidb/MultiDbConfig.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/multidb/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/MultiDbTest.java", "stars": "15", "class": {"name": "MultiDbTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldExecuteHsqlQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldExecuteHsqlQuery() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      MultiDbMapper mapper = sqlSession.getMapper(MultiDbMapper.class);      String answer = mapper.select1(1);      assertEquals(\"hsql\", answer);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/MultiDbTest.java", "stars": "15", "class": {"name": "MultiDbTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldExecuteCommonQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldExecuteCommonQuery() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      MultiDbMapper mapper = sqlSession.getMapper(MultiDbMapper.class);      String answer = mapper.select2(1);      assertEquals(\"common\", answer);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/MultiDbTest.java", "stars": "15", "class": {"name": "MultiDbTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldExecuteHsqlQueryWithDynamicIf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldExecuteHsqlQueryWithDynamicIf() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      MultiDbMapper mapper = sqlSession.getMapper(MultiDbMapper.class);      String answer = mapper.select3(1);      assertEquals(\"hsql\", answer);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/MultiDbTest.java", "stars": "15", "class": {"name": "MultiDbTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldExecuteHsqlQueryWithInclude", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldExecuteHsqlQueryWithInclude() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      MultiDbMapper mapper = sqlSession.getMapper(MultiDbMapper.class);      String answer = mapper.select4(1);      assertEquals(\"hsql\", answer);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/MultiDbTest.java", "stars": "15", "class": {"name": "MultiDbTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldInsertInCommonWithSelectKey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldInsertInCommonWithSelectKey() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      MultiDbMapper mapper = sqlSession.getMapper(MultiDbMapper.class);      mapper.insert(new User(2, \"test\"));      String answer = mapper.select2(1);      assertEquals(\"common\", answer);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/MultiDbTest.java", "stars": "15", "class": {"name": "MultiDbTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "shouldInsertInCommonWithSelectKey2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldInsertInCommonWithSelectKey2() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      MultiDbMapper mapper = sqlSession.getMapper(MultiDbMapper.class);      mapper.insert2(new User(2, \"test\"));      String answer = mapper.select2(1);      assertEquals(\"common\", answer);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/multidb/MultiDbTest.java", "stars": "15", "class": {"name": "MultiDbTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        int s = sum(3);        System.out.println(s);    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo02Recurison.java", "stars": "2", "class": {"name": "Demo02Recurison", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "sum", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int sum(int n){        //\u83b7\u53d6\u52301\u7684\u65f6\u5019\u7ed3\u675f        if(n==1){            return 1;        }        //\u83b7\u53d6\u4e0b\u4e00\u4e2a\u88ab\u52a0\u7684\u6570\u5b57(n-1)        return n + sum(n-1);    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo02/Recursion/Demo02Recurison.java", "stars": "2", "class": {"name": "Demo02Recurison", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getInstance", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Authenticate", "snippet": "    public static Authenticate getInstance(){        if(single_instance==null){            synchronized(Authenticate.class){                if(single_instance==null){                    single_instance=new Authenticate();                }            }        }        return single_instance;    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/Authenticate.java", "stars": "1", "class": {"name": "Authenticate", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getConnection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Connection", "snippet": "    public Connection getConnection(){        try{            Class.forName(\"org.apache.derby.jdbc.ClientDriver\").newInstance();            Connection con=DriverManager.getConnection(\"jdbc:derby://localhost:1527/Users\",\"tarun\",\"12345\");            return con;        }catch(Exception E){            System.out.println(E);        }        return null;    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/Authenticate.java", "stars": "1", "class": {"name": "Authenticate", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "login", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "     public void login(String user , String pass){               try{            Connection con=getConnection();            PreparedStatement preparedStatement=con.prepareStatement(\"Select * from Tarun.AUTHENTICATION\");            ResultSet rs=preparedStatement.executeQuery();            while(rs.next()){                if(rs.getString(\"username\").equals(user) && rs.getString(\"password\").equals(pass)){                    System.out.println(\"Login successfully\");                    Client c = new Client();                    c.Client_download();                }                           }        }catch(Exception e){System.out.println(e);}    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/Authenticate.java", "stars": "1", "class": {"name": "Authenticate", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "register", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "   public void register(String user , String pass){              try{            Connection con=getConnection();            PreparedStatement preparedStatement=con.prepareStatement(\"Insert into TARUN.AUTHENTICATION values(?,?)\");            preparedStatement.setString(1,user);            preparedStatement.setString(2, pass);            preparedStatement.addBatch();            preparedStatement.executeBatch();        }catch(Exception ex){            System.out.println(ex);        }    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/Authenticate.java", "stars": "1", "class": {"name": "Authenticate", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getPluginName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPluginName() {        assert null != this.pluginConf;        return this.pluginConf.getString(\"name\");    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "getDeveloper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDeveloper() {        assert null != this.pluginConf;        return this.pluginConf.getString(\"developer\");    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "getDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {        assert null != this.pluginConf;        return this.pluginConf.getString(\"description\");    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "getPluginJobConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Configuration", "snippet": "    public Configuration getPluginJobConf() {        return pluginJobConf;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "setPluginJobConf", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPluginJobConf(Configuration pluginJobConf) {        this.pluginJobConf = pluginJobConf;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "setPluginConf", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPluginConf(Configuration pluginConf) {        this.pluginConf = pluginConf;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "getPeerPluginJobConfList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Configuration>", "snippet": "    public List<Configuration> getPeerPluginJobConfList() {        return peerPluginJobConfList;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "addPeerPluginJobConf", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addPeerPluginJobConf(Configuration peerPluginJobConf) {        this.peerPluginJobConfList.add(peerPluginJobConf);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "getPeerPluginNameList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getPeerPluginNameList() {        return peerPluginNames;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "addPeerPluginName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addPeerPluginName(String peerPluginName) {        this.peerPluginNames.add(peerPluginName);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "preCheck", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void preCheck() {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "prepare", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void prepare() {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "post", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void post() {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "preHandler", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void preHandler(Configuration jobConfiguration) {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "postHandler", "params": ["Configuration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void postHandler(Configuration jobConfiguration) {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractPlugin.java", "stars": "23", "class": {"name": "AbstractPlugin", "extends": "BaseObject", "implements": ["Pluginable"], "modifiers": ["public", "abstract"]}}, {"method_name": "getInstance", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "IPManager", "snippet": "    public static IPManager getInstance() {        if (ipManager == null) {            ipManager = new IPManager();        }        return ipManager;    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/IPManager.java", "stars": "1", "class": {"name": "IPManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getServerName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServerName() {        return serverName;    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/IPManager.java", "stars": "1", "class": {"name": "IPManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setServerName", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServerName(String serverName) {        this.serverName = serverName;    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/IPManager.java", "stars": "1", "class": {"name": "IPManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isOnline", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isOnline() {        return CredentialsManager.getInstance().isOnline();    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/IPManager.java", "stars": "1", "class": {"name": "IPManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getServicesStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HashMap<Service,Boolean>", "snippet": "    public HashMap<Service, Boolean> getServicesStatus() {        return this.servicesStatus;    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/IPManager.java", "stars": "1", "class": {"name": "IPManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "recalculateServicesStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void recalculateServicesStatus() {        this.servicesStatus = APIConnector.getInstance().getServiceStatus();    }", "url": "https://raw.githubusercontent.com/harvestcore/ipmdroid/master/app/src/main/java/com/agm/ipmanager/IPManager.java", "stars": "1", "class": {"name": "IPManager", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getInteger", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInteger(String name) {        if (mMediaFormat == null)            return 0;        return mMediaFormat.getInteger(name);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/AndroidMediaFormat.java", "stars": "2", "class": {"name": "AndroidMediaFormat", "extends": null, "implements": ["IMediaFormat"], "modifiers": ["public"]}}, {"method_name": "getString", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String name) {        if (mMediaFormat == null)            return null;        return mMediaFormat.getString(name);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/AndroidMediaFormat.java", "stars": "2", "class": {"name": "AndroidMediaFormat", "extends": null, "implements": ["IMediaFormat"], "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        StringBuilder out = new StringBuilder(128);        out.append(getClass().getName());        out.append('{');        if (mMediaFormat != null) {            out.append(mMediaFormat.toString());        } else {            out.append(\"null\");        }        out.append('}');        return out.toString();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/tv/danmaku/ijk/media/player/misc/AndroidMediaFormat.java", "stars": "2", "class": {"name": "AndroidMediaFormat", "extends": null, "implements": ["IMediaFormat"], "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate(Bundle savedInstanceState) {\t\tsuper.onCreate(savedInstanceState);\t\tsetContentView(R.layout.activity_ptr_webview2);\t\tPullToRefreshWebView2 pullRefreshWebView = (PullToRefreshWebView2) findViewById(R.id.pull_refresh_webview2);\t\tpullRefreshWebView.setOnRefreshListener(this);\t\tWebView webView = pullRefreshWebView.getRefreshableView();\t\twebView.getSettings().setJavaScriptEnabled(true);\t\twebView.setWebViewClient(new SampleWebViewClient());\t\t// We just load a prepared HTML page from the assets folder for this\t\t// sample, see that file for the Javascript implementation\t\twebView.loadUrl(\"file:///android_asset/ptr_webview2_sample.html\");\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshWebView2Activity.java", "stars": "74", "class": {"name": "PullToRefreshWebView2Activity", "extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public", "final"]}}, {"method_name": "onRefresh", "params": ["PullToRefreshBase<WebView>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onRefresh(final PullToRefreshBase<WebView> refreshView) {\t\t// This is very contrived example, we just wait 2 seconds, then call\t\t// onRefreshComplete()\t\trefreshView.postDelayed(new Runnable() {\t\t\t@Override\t\t\tpublic void run() {\t\t\t\trefreshView.onRefreshComplete();\t\t\t}\t\t}, 2 * 1000);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshWebView2Activity.java", "stars": "74", "class": {"name": "PullToRefreshWebView2Activity", "extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public", "final"]}}, {"method_name": "shouldOverrideUrlLoading", "params": ["WebView", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean shouldOverrideUrlLoading(WebView view, String url) {\t\t\tview.loadUrl(url);\t\t\treturn true;\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/pulltorefresh%20and%20dragndrop%20to%20gridview/LauncherActivity/src/com/handmark/pulltorefresh/samples/PullToRefreshWebView2Activity.java", "stars": "74", "class": {"name": "SampleWebViewClient", "extends": "WebViewClient", "implements": null, "modifiers": ["private", "static"]}}, {"method_name": "getQid", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getQid() {        return qid;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/query/ElementQuery.java", "stars": "23", "class": {"name": "ElementQuery", "extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"method_name": "setQid", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setQid(Integer qid) {        this.qid = qid;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/query/ElementQuery.java", "stars": "23", "class": {"name": "ElementQuery", "extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"method_name": "getStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getStatus() {        return status;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/query/ElementQuery.java", "stars": "23", "class": {"name": "ElementQuery", "extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"method_name": "setStatus", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(Integer status) {        this.status = status;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/query/ElementQuery.java", "stars": "23", "class": {"name": "ElementQuery", "extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"method_name": "getUseDelay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getUseDelay() {        return useDelay;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/query/ElementQuery.java", "stars": "23", "class": {"name": "ElementQuery", "extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUseDelay", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUseDelay(Integer useDelay) {        this.useDelay = useDelay;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/queue/query/ElementQuery.java", "stars": "23", "class": {"name": "ElementQuery", "extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"method_name": "getProps", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "    public Props getProps() {        return this.props;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "fetchAllUserVariable", "params": ["UserVariable"], "throws": null, "modifiers": ["public"], "return_type": "List<UserVariable>", "snippet": "    public List<UserVariable> fetchAllUserVariable(UserVariable userVariable){        List<UserVariable> userVariables = new ArrayList<>();        try {            userVariables = jdbcExecutorLoader.fetchAllUserVariable(userVariable);        }catch (ExecutorManagerException e){            logger.error(\"fetch All User Variable failed.\");        }        return userVariables;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addUserVariable", "params": ["UserVariable"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean addUserVariable(UserVariable userVariable){        boolean ret = false;        try {            jdbcExecutorLoader.addUserVariable(userVariable);            ret = true;        }catch (ExecutorManagerException e){            logger.error(\"add userVariable failed\");        }        return ret;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "deleteUserVariable", "params": ["UserVariable"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean deleteUserVariable(UserVariable userVariable){        int ret = 0;        try {            ret = jdbcExecutorLoader.deleteUserVariable(userVariable);        }catch (ExecutorManagerException e){            logger.error(\"delete UserVariable failed\");        }        if(ret != 0) {            return true;        }        return false;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "updateUserVariable", "params": ["UserVariable"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean updateUserVariable(UserVariable userVariable){        int ret = 0;        try {            ret = jdbcExecutorLoader.updateUserVariable(userVariable);        }catch (ExecutorManagerException e){            logger.error(\"update UserVariable failed\");        }        if(ret != 0) {            return true;        }        return false;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getUserVariableById", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "UserVariable", "snippet": "    public UserVariable getUserVariableById(Integer id){        UserVariable userVariable = null;        try {            userVariable = jdbcExecutorLoader.getUserVariableById(id);        }catch (ExecutorManagerException e){            logger.error(\"get Department Group by id failed\");        }        return userVariable;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkWtssUserIsExist", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean checkWtssUserIsExist(String name){        int cout = 0;        try {            cout = jdbcExecutorLoader.findWtssUserByName(name);        }catch (ExecutorManagerException e){            logger.error(\"can not found wtssuser by\" + name + \", \" + e);        }        if(cout == 0){            return false;        }        return true;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getWtssUserTotal", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getWtssUserTotal() throws ExecutorManagerException {        return this.jdbcExecutorLoader.getWtssUserTotal();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "findAllWtssUserPageList", "params": ["String", "int", "int"], "throws": ["ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<WtssUser>", "snippet": "    public List<WtssUser> findAllWtssUserPageList(String searchName, int pageNum, int pageSize) throws ExecutorManagerException {        return this.jdbcExecutorLoader.findAllWtssUserPageList(searchName, pageNum, pageSize);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDepMaintainDepList", "params": ["String"], "throws": ["SystemUserManagerException", "ExecutorManagerException"], "modifiers": ["public"], "return_type": "List<UserVariable>", "snippet": "    public List<UserVariable> getDepMaintainDepList(String currentUser) throws SystemUserManagerException, ExecutorManagerException {        List<UserVariable> depUserVariableList = new ArrayList<>();        List<Integer> depList = this.systemUserLoader.getDepartmentMaintainerDepListByUserName(currentUser);        if (CollectionUtils.isNotEmpty(depList)) {            for (Integer departmentId : depList) {                depUserVariableList = this.jdbcExecutorLoader.fetchAllUserVariableByOwnerDepartment(departmentId);            }        }        return depUserVariableList;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/az-webank-user-params/src/main/java/com/webank/wedatasphere/schedulis/userparams/service/UserParamsService.java", "stars": "18", "class": {"name": "UserParamsService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isReleased", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "boolean", "snippet": "    public synchronized boolean isReleased() {        return mNativeRefCount == 0;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "retain", "params": [], "throws": null, "modifiers": ["synchronized", "public", "final"], "return_type": "boolean", "snippet": "    public synchronized final boolean retain() {        if (mNativeRefCount > 0) {            mNativeRefCount++;            return true;        } else            return false;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "release", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "void", "snippet": "    public final void release() {        int refCount = -1;        synchronized (this) {            if (mNativeRefCount == 0)                return;            if (mNativeRefCount > 0) {                refCount = --mNativeRefCount;            }            // clear event list            if (refCount == 0)                setEventListener(null);        }        if (refCount == 0) {            // detach events when not synchronized since onEvent is executed synchronized            nativeDetachEvents();            synchronized (this) {                onReleaseNative();            }        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "setEventListener", "params": ["VLCEvent"], "throws": null, "modifiers": ["synchronized", "protected"], "return_type": "void", "snippet": "    protected synchronized void setEventListener(VLCEvent.Listener<T> listener) {        if (mHandler != null)            mHandler.removeCallbacksAndMessages(null);        mEventListener = listener;        if (mEventListener != null && mHandler == null)            mHandler = new Handler(Looper.getMainLooper());    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "onEventNative", "params": ["int", "long", "float"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "T", "snippet": "    protected abstract T onEventNative(int eventType, long arg1, float arg2);    /**     * Called when native object is released (refcount is 0).     *     * This is where you must release native resources.     */    protected abstract void onReleaseNative();    /* JNI */    @SuppressWarnings(\"unused\") /* Used from JNI */    private long mInstance = 0;    private synchronized void dispatchEventFromNative(int eventType, long arg1, float arg2) {        if (isReleased())            return;        final T event = onEventNative(eventType, arg1, arg2);        class EventRunnable implements Runnable {            private final VLCEvent.Listener<T> listener;            private final T event;            private EventRunnable(VLCEvent.Listener<T> listener, T event) {                this.listener = listener;                this.event = event;            }            @Override            public void run() {                listener.onEvent(event);            }        }        if (event != null && mEventListener != null && mHandler != null)            mHandler.post(new EventRunnable(mEventListener, event));    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "onReleaseNative", "params": [], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void onReleaseNative();    /* JNI */    @SuppressWarnings(\"unused\") /* Used from JNI */    private long mInstance = 0;    private synchronized void dispatchEventFromNative(int eventType, long arg1, float arg2) {        if (isReleased())            return;        final T event = onEventNative(eventType, arg1, arg2);        class EventRunnable implements Runnable {            private final VLCEvent.Listener<T> listener;            private final T event;            private EventRunnable(VLCEvent.Listener<T> listener, T event) {                this.listener = listener;                this.event = event;            }            @Override            public void run() {                listener.onEvent(event);            }        }        if (event != null && mEventListener != null && mHandler != null)            mHandler.post(new EventRunnable(mEventListener, event));    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "dispatchEventFromNative", "params": ["int", "long", "float"], "throws": null, "modifiers": ["synchronized", "private"], "return_type": "void", "snippet": "    private synchronized void dispatchEventFromNative(int eventType, long arg1, float arg2) {        if (isReleased())            return;        final T event = onEventNative(eventType, arg1, arg2);        class EventRunnable implements Runnable {            private final VLCEvent.Listener<T> listener;            private final T event;            private EventRunnable(VLCEvent.Listener<T> listener, T event) {                this.listener = listener;                this.event = event;            }            @Override            public void run() {                listener.onEvent(event);            }        }        if (event != null && mEventListener != null && mHandler != null)            mHandler.post(new EventRunnable(mEventListener, event));    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "nativeDetachEvents", "params": [], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "    private native void nativeDetachEvents();    /* used only before API 7: substitute for NewWeakGlobalRef */    @SuppressWarnings(\"unused\") /* Used from JNI */    private Object getWeakReference() {        return new WeakReference<VLCObject>(this);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "getWeakReference", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "    private Object getWeakReference() {        return new WeakReference<VLCObject>(this);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "dispatchEventFromWeakNative", "params": ["Object", "int", "long", "float"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void dispatchEventFromWeakNative(Object weak, int eventType, long arg1, float arg2) {        VLCObject obj = ((WeakReference<VLCObject>)weak).get();        if (obj != null)            obj.dispatchEventFromNative(eventType, arg1, arg2);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "VLCObject", "extends": null, "implements": null, "modifiers": ["abstract"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void run() {                listener.onEvent(event);            }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/vlc/src/main/java/org/videolan/libvlc/VLCObject.java", "stars": "4", "class": {"name": "EventRunnable", "extends": null, "implements": ["Runnable"], "modifiers": []}}, {"method_name": "registerAllExtensions", "params": ["com"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void registerAllExtensions(      com.google.protobuf.ExtensionRegistryLite registry) {  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentProtos.java", "stars": "3", "class": {"name": "SegmentProtos", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "registerAllExtensions", "params": ["com"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void registerAllExtensions(      com.google.protobuf.ExtensionRegistry registry) {    registerAllExtensions(        (com.google.protobuf.ExtensionRegistryLite) registry);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentProtos.java", "stars": "3", "class": {"name": "SegmentProtos", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "getDescriptor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "  public static com.google.protobuf.Descriptors.FileDescriptor      getDescriptor() {    return descriptor;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentProtos.java", "stars": "3", "class": {"name": "SegmentProtos", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "hasResource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean hasResource() {\t\treturn false;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/tile/ImageBackedTile.java", "stars": "3", "class": {"name": "ImageBackedTile", "extends": null, "implements": ["Tile"], "modifiers": ["public"]}}, {"method_name": "getResource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Identifier", "snippet": "\tpublic Identifier getResource() {\t\tthrow new UnsupportedOperationException(\"Tile has no underlying resource!\");\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/tile/ImageBackedTile.java", "stars": "3", "class": {"name": "ImageBackedTile", "extends": null, "implements": ["Tile"], "modifiers": ["public"]}}, {"method_name": "getImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BufferedImage", "snippet": "\tpublic BufferedImage getImage() {\t\treturn image;\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/tile/ImageBackedTile.java", "stars": "3", "class": {"name": "ImageBackedTile", "extends": null, "implements": ["Tile"], "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "  public Long getId() {    return id;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_gh1551/ProductInfo.java", "stars": "15", "class": {"name": "ProductInfo", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Long id) {    this.id = id;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_gh1551/ProductInfo.java", "stars": "15", "class": {"name": "ProductInfo", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getProductId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getProductId() {    return productId;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_gh1551/ProductInfo.java", "stars": "15", "class": {"name": "ProductInfo", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setProductId", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProductId(String productId) {    this.productId = productId;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_gh1551/ProductInfo.java", "stars": "15", "class": {"name": "ProductInfo", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOtherInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getOtherInfo() {    return otherInfo;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_gh1551/ProductInfo.java", "stars": "15", "class": {"name": "ProductInfo", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setOtherInfo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setOtherInfo(String otherInfo) {    this.otherInfo = otherInfo;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/nestedresulthandler_gh1551/ProductInfo.java", "stars": "15", "class": {"name": "ProductInfo", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "contextLoads", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/test/java/com/macro/mall/tiny/MallTinyMybatisGeneratorApplicationTests.java", "stars": "2", "class": {"name": "MallTinyMybatisGeneratorApplicationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "statPush", "params": ["Communication", "long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void statPush(Communication currentCommunication, long dataSize) {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/StreamChannel.java", "stars": "23", "class": {"name": "StreamChannel", "extends": "AbstractChannel", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "statPull", "params": ["Communication", "long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void statPull(Communication currentCommunication, long dataSize) {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/StreamChannel.java", "stars": "23", "class": {"name": "StreamChannel", "extends": "AbstractChannel", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "currentDataSpeed", "params": ["Communication", "Communication", "long"], "throws": null, "modifiers": ["protected"], "return_type": "long", "snippet": "    protected long currentDataSpeed(Communication currentCommunication, Communication lastCommunication, long interval) {        return 0;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/StreamChannel.java", "stars": "23", "class": {"name": "StreamChannel", "extends": "AbstractChannel", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "updateCounter", "params": ["Communication", "Communication"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void updateCounter(Communication currentCommunication, Communication lastCommunication) {    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/StreamChannel.java", "stars": "23", "class": {"name": "StreamChannel", "extends": "AbstractChannel", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "firstPrint", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void firstPrint() {        LOG.info(\"StreamChannel set byte_speed_limit to \" + getByteSpeed() +                (getByteSpeed() <= 0? \", No bps activated.\" : \".\"));    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/StreamChannel.java", "stars": "23", "class": {"name": "StreamChannel", "extends": "AbstractChannel", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getBlockSize", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getBlockSize(){        return this.blockSize;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/transport/channel/StreamChannel.java", "stars": "23", "class": {"name": "StreamChannel", "extends": "AbstractChannel", "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {        return id;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {        this.id = id;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getTinynumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getTinynumber() {        return tinynumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setTinynumber", "params": ["Byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTinynumber(Byte tinynumber) {        this.tinynumber = tinynumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSmallnumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Short", "snippet": "    public Short getSmallnumber() {        return smallnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSmallnumber", "params": ["Short"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSmallnumber(Short smallnumber) {        this.smallnumber = smallnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getLonginteger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getLonginteger() {        return longinteger;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setLonginteger", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLonginteger(Long longinteger) {        this.longinteger = longinteger;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getBiginteger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigInteger", "snippet": "    public BigInteger getBiginteger() {        return biginteger;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setBiginteger", "params": ["BigInteger"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBiginteger(BigInteger biginteger) {        this.biginteger = biginteger;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getNumericnumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getNumericnumber() {        return numericnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setNumericnumber", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNumericnumber(BigDecimal numericnumber) {        this.numericnumber = numericnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDecimalnumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getDecimalnumber() {        return decimalnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDecimalnumber", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDecimalnumber(BigDecimal decimalnumber) {        this.decimalnumber = decimalnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getRealnumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getRealnumber() {        return realnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setRealnumber", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRealnumber(Float realnumber) {        this.realnumber = realnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getFloatnumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getFloatnumber() {        return floatnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setFloatnumber", "params": ["Float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFloatnumber(Float floatnumber) {        this.floatnumber = floatnumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDoublenumber", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "    public Double getDoublenumber() {        return doublenumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDoublenumber", "params": ["Double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDoublenumber(Double doublenumber) {        this.doublenumber = doublenumber;    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/NumericRow.java", "stars": "15", "class": {"name": "NumericRow", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "process", "params": ["Channel", "MqttPublishMessage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void process(Channel channel, MqttPublishMessage msg) {        byte[] messageBytes = new byte[msg.payload().readableBytes()];        msg.payload().getBytes(msg.payload().readerIndex(), messageBytes);        String context = new String(messageBytes, StandardCharsets.UTF_8);        String topic = msg.variableHeader().topicName();        MqttQoS qos = msg.fixedHeader().qosLevel();        String userId = topic.split(\"/\")[0];        SecurityUser user = NettyUtil.getUser(channel);        if (user == null) {            channel.close();            return;        }        // \u4e0d\u5141\u8bb8push\u5230\u5176\u4ed6\u7528\u6237\u4e0a        if (!user.getId().equals(Integer.parseInt(userId))) {            channel.close();        }        // \u6587\u5b57\u6d88\u606f        // userId/taoiot/mp/msg        if (topic.equals(userId + \"/\" + Const.PREFIX + \"/mp/msg\")) {            mpMsgService.sendTextMsg(user.getWxMpOpenid(), NettyUtil.getName(channel), context);        }        // \u56fe\u7247\u6d88\u606f        if (topic.equals(userId + \"/\" + Const.PREFIX + \"/mp/img\")) {            mpMsgService.sendImgMsg(user.getWxMpOpenid(), NettyUtil.getName(channel), messageBytes);        }        // \u6a21\u677f1        // userid/taoiot/mp/temp/1        if (topic.equals(userId + \"/\" + Const.PREFIX + \"/mp/temp/1\")) {            // \u6a21\u677f\u6d88\u606f            mpMsgService.sendTemplateMsg1(                    user.getWxMpOpenid(),                    NettyUtil.getName(channel),                    context,                    \"MQTT\",                    new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").format(new Date()),                    \"from: \" + topic            );        }        ChannelGroup channelGroup = NettyMqttHandler.TOPICS.get(topic);        if (channelGroup != null) {            MqttPublishMessage publishMessage = (MqttPublishMessage) MqttMessageFactory.newMessage(                    new MqttFixedHeader(MqttMessageType.PUBLISH, false, qos, false, 0),                    new MqttPublishVariableHeader(topic, 0),                    Unpooled.buffer().writeBytes(messageBytes));            channelGroup.writeAndFlush(publishMessage);            log.debug(\"PUBLISH - clientId: {}, topic: {}, Qos: {}, channels: {}\",                    NettyUtil.getName(channel),                    topic,                    qos.value(),                    channelGroup.size()            );        }    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/netty/mqtt/impl/MqttPublishHandler.java", "stars": "6", "class": {"name": "MqttPublishHandler", "extends": null, "implements": ["MqttHandler"], "modifiers": ["public"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {    return id;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Item.java", "stars": "15", "class": {"name": "Item", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {    this.id = id;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Item.java", "stars": "15", "class": {"name": "Item", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getItem() {    return item;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Item.java", "stars": "15", "class": {"name": "Item", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setItem(String item) {    this.item = item;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/sptests/Item.java", "stars": "15", "class": {"name": "Item", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setupDriver", "params": ["String", "String", "String", "String"], "throws": ["MalformedURLException"], "modifiers": ["public"], "return_type": "AndroidDriver<MobileElement>", "snippet": "\tpublic AndroidDriver<MobileElement> setupDriver(String AndroidDeviceName, String apk, String automationName, String newCommandTimeout) throws MalformedURLException {\t\tfinal String URL_STRING = \"http://127.0.0.1:4723/wd/hub\";\t\turl = new URL(URL_STRING);\t\tcapabilities = new DesiredCapabilities();\t\tcapabilities.setCapability(MobileCapabilityType.DEVICE_NAME, AndroidDeviceName);\t\tfinal String dir = System.getProperty(\"user.dir\");\t\tcapabilities.setCapability(MobileCapabilityType.APP, dir + apk);\t\tcapabilities.setCapability(MobileCapabilityType.NO_RESET, true);\t\tcapabilities.setCapability(MobileCapabilityType.AUTOMATION_NAME, automationName);\t\tcapabilities.setCapability(MobileCapabilityType.NEW_COMMAND_TIMEOUT, newCommandTimeout);\t\tdriver = new AndroidDriver<MobileElement>(url, capabilities);\t\tdriver.manage().timeouts().implicitlyWait(2, TimeUnit.SECONDS);\t\treturn driver;\t}", "url": "https://raw.githubusercontent.com/vanitha128/appiumTests/master/src/test/java/setup/SetupAndroidTest.java", "stars": "2", "class": {"name": "SetupAndroidTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "uninstallApp", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void uninstallApp() throws InterruptedException {\t}", "url": "https://raw.githubusercontent.com/vanitha128/appiumTests/master/src/test/java/setup/SetupAndroidTest.java", "stars": "2", "class": {"name": "SetupAndroidTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {    // create an SqlSessionFactory    try (Reader reader = Resources.getResourceAsReader(        \"org/apache/ibatis/submitted/default_method/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    // populate in-memory database    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),        \"org/apache/ibatis/submitted/default_method/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/default_method/DefaultMethodTest.java", "stars": "15", "class": {"name": "DefaultMethodTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldInvokeDefaultMethod", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInvokeDefaultMethod() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      User user = mapper.defaultGetUser(1);      assertEquals(\"User1\", user.getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/default_method/DefaultMethodTest.java", "stars": "15", "class": {"name": "DefaultMethodTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldInvokeDefaultMethodOfSubclass", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInvokeDefaultMethodOfSubclass() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      SubMapper mapper = sqlSession.getMapper(SubMapper.class);      User user = mapper.defaultGetUser(\"User1\", 1);      assertEquals(\"User1\", user.getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/default_method/DefaultMethodTest.java", "stars": "15", "class": {"name": "DefaultMethodTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldInvokeDefaultMethodOfPackagePrivateMapper", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInvokeDefaultMethodOfPackagePrivateMapper() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      PackageMapper mapper = sqlSession.getMapper(PackageMapper.class);      User user = mapper.defaultGetUser(1);      assertEquals(\"User1\", user.getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/default_method/DefaultMethodTest.java", "stars": "15", "class": {"name": "DefaultMethodTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getLine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLine() {    return query;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/HiveQueryExecutionException.java", "stars": "18", "class": {"name": "HiveQueryExecutionException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "getReturnCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getReturnCode() {    return returnCode;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/HiveQueryExecutionException.java", "stars": "18", "class": {"name": "HiveQueryExecutionException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {    return \"HiveQueryExecutionException{\" + \"query='\" + query + '\\''        + \", returnCode=\" + returnCode + '}';  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/HiveQueryExecutionException.java", "stars": "18", "class": {"name": "HiveQueryExecutionException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws Exception {        readFile(\"c:\\\\a.tx\");        System.out.println(\"\u540e\u7eed\u4ee3\u7801\");    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/05_ExceptionAndThread/src/com/itheima/demo01/Exception/Demo05Throws.java", "stars": "2", "class": {"name": "Demo05Throws", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "readFile", "params": ["String"], "throws": ["FileNotFoundException", "IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void readFile(String fileName) throws FileNotFoundException,IOException{        if(!fileName.equals(\"c:\\\\a.txt\")){            throw new FileNotFoundException(\"\u4f20\u9012\u7684\u6587\u4ef6\u8def\u5f84\u4e0d\u662fc:\\\\a.txt\");        }        /*            \u5982\u679c\u4f20\u9012\u7684\u8def\u5f84,\u4e0d\u662f.txt\u7ed3\u5c3e            \u90a3\u4e48\u6211\u4eec\u5c31\u629b\u51faIO\u5f02\u5e38\u5bf9\u8c61,\u544a\u77e5\u65b9\u6cd5\u7684\u8c03\u7528\u8005,\u6587\u4ef6\u7684\u540e\u7f00\u540d\u4e0d\u5bf9         */        if(!fileName.endsWith(\".txt\")){            throw new IOException(\"\u6587\u4ef6\u7684\u540e\u7f00\u540d\u4e0d\u5bf9\");        }        System.out.println(\"\u8def\u5f84\u6ca1\u6709\u95ee\u9898,\u8bfb\u53d6\u6587\u4ef6\");    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/05_ExceptionAndThread/src/com/itheima/demo01/Exception/Demo05Throws.java", "stars": "2", "class": {"name": "Demo05Throws", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        int a = getA();        System.out.println(a);    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/05_ExceptionAndThread/src/com/itheima/demo03/Exception/Demo02Exception.java", "stars": "2", "class": {"name": "Demo02Exception", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getA", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getA(){        int a = 10;        try{            return a;        }catch (Exception e){            System.out.println(e);        }finally {            //\u4e00\u5b9a\u4f1a\u6267\u884c\u7684\u4ee3\u7801            a = 100;            return a;        }    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/05_ExceptionAndThread/src/com/itheima/demo03/Exception/Demo02Exception.java", "stars": "2", "class": {"name": "Demo02Exception", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isInstanceOfSupportCursorAdapter", "params": ["ListAdapter"], "throws": null, "modifiers": ["private", "static"], "return_type": "boolean", "snippet": "    private static boolean isInstanceOfSupportCursorAdapter(ListAdapter adapter) {        return SUPPORT_CURSOR_ADAPTER != null && SUPPORT_CURSOR_ADAPTER.isInstance(adapter);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "supportGetCursor", "params": ["ListAdapter"], "throws": null, "modifiers": ["private", "static"], "return_type": "Cursor", "snippet": "    private static Cursor supportGetCursor(ListAdapter adapter) {        try {            return (Cursor) SUPPORT_GET_CURSOR.invoke(adapter);        } catch (Exception e) {            throw new RuntimeException(\"Incompatible android.support.v4.widget.CursorAdapter\", e);        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getWrappedAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ListAdapter", "snippet": "    public ListAdapter getWrappedAdapter() {        return mAdapter;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getCursorExtras", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Bundle", "snippet": "    private Bundle getCursorExtras() {        if (mAdapter instanceof android.widget.CursorAdapter) {            Cursor cursor = ((android.widget.CursorAdapter) mAdapter).getCursor();            return cursor != null ? cursor.getExtras() : Bundle.EMPTY;        } else if (isInstanceOfSupportCursorAdapter(mAdapter)) {            Cursor cursor = supportGetCursor(mAdapter);            return cursor != null ? cursor.getExtras() : Bundle.EMPTY;        } else {            return Bundle.EMPTY;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "hasMore", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean hasMore() {        return getCursorExtras().getBoolean(FeedExtras.EXTRA_MORE);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "hasError", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean hasError() {        return getCursorExtras().containsKey(FeedExtras.EXTRA_ERROR);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getCount", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "int", "snippet": "    public final int getCount() {        int count = mAdapter.getCount();        if (count != 0) {            if (hasError() || hasMore()) {                count++;            }        } else {            // Don't show footers when the list is empty.        }        return count;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getItemViewType", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {        if (isItem(position)) {            return mAdapter.getItemViewType(position);        } else {            return AdapterView.ITEM_VIEW_TYPE_IGNORE;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getViewTypeCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getViewTypeCount() {        return mAdapter.getViewTypeCount();    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "isItem", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isItem(int position) {        return position < mAdapter.getCount();    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getView", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent) {        if (isItem(position)) {            return mAdapter.getView(position, convertView, parent);        } else if (hasError()) {            LayoutInflater inflater = getLayoutInflater(parent);            return newErrorView(inflater, parent);        } else if (hasMore()) {            LayoutInflater inflater = getLayoutInflater(parent);            return newLoadingView(inflater, parent);        } else {            throw new IndexOutOfBoundsException();        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "newErrorView", "params": ["LayoutInflater", "ViewGroup"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "View", "snippet": "    protected abstract View newErrorView(LayoutInflater inflater, ViewGroup parent);    /**     * Creates a view that is shown when more items can be loaded.     *      * @param inflater a layout inflater.     * @param parent the parent view.     * @return a new loading view.     * @see LayoutInflater#inflate(int, ViewGroup, boolean)     */    protected abstract View newLoadingView(LayoutInflater inflater, ViewGroup parent);    /** {@inheritDoc}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "newLoadingView", "params": ["LayoutInflater", "ViewGroup"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "View", "snippet": "    protected abstract View newLoadingView(LayoutInflater inflater, ViewGroup parent);    /** {@inheritDoc}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {        if (isItem(position)) {            return mAdapter.getItem(position);        } else {            return null;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getItemId", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {        if (isItem(position)) {            return mAdapter.getItemId(position);        } else {            return AdapterView.INVALID_ROW_ID;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "hasStableIds", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasStableIds() {        return mAdapter.hasStableIds();    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "isEmpty", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "boolean", "snippet": "    public final boolean isEmpty() {        // This method must not be overridden to ensure consistency        return getCount() == 0;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "registerDataSetObserver", "params": ["DataSetObserver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerDataSetObserver(DataSetObserver observer) {        mAdapter.registerDataSetObserver(observer);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "unregisterDataSetObserver", "params": ["DataSetObserver"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unregisterDataSetObserver(DataSetObserver observer) {        mAdapter.unregisterDataSetObserver(observer);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "areAllItemsEnabled", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean areAllItemsEnabled() {        // The loading view cannot be clicked.        // See also: http://code.google.com/p/android/issues/detail?id=8914        return false;    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "isEnabled", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEnabled(int position) {        if (isItem(position)) {            return mAdapter.isEnabled(position);        } else {            return false;        }    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "getLayoutInflater", "params": ["ViewGroup"], "throws": null, "modifiers": ["private", "static"], "return_type": "LayoutInflater", "snippet": "    private static LayoutInflater getLayoutInflater(ViewGroup parent) {        Context context = parent.getContext();        return LayoutInflater.from(context);    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/ContentDecorator.java", "stars": "74", "class": {"name": "ContentDecorator", "extends": null, "implements": ["WrapperListAdapter"], "modifiers": ["public", "abstract"]}}, {"method_name": "createFromObject", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "ExecutionOptions", "snippet": "  public static ExecutionOptions createFromObject(final Object obj) {    if (obj == null || !(obj instanceof Map)) {      return null;    }    final Map<String, Object> optionsMap = (Map<String, Object>) obj;    final TypedMapWrapper<String, Object> wrapper =        new TypedMapWrapper<>(optionsMap);    final ExecutionOptions options = new ExecutionOptions();    if (optionsMap.containsKey(FLOW_PARAMETERS)) {      options.flowParameters = new HashMap<>();      options.flowParameters.putAll(wrapper          .<String, String>getMap(FLOW_PARAMETERS));    }    // Failure notification    options.notifyOnFirstFailure =        wrapper.getBool(NOTIFY_ON_FIRST_FAILURE, options.notifyOnFirstFailure);    options.notifyOnLastFailure =        wrapper.getBool(NOTIFY_ON_LAST_FAILURE, options.notifyOnLastFailure);    options.concurrentOption =        wrapper.getString(CONCURRENT_OPTION, options.concurrentOption);    if (wrapper.containsKey(DISABLE)) {      options.initiallyDisabledJobs = wrapper.<Object>getList(DISABLE);    }    if (optionsMap.containsKey(MAIL_CREATOR)) {      options.mailCreator = (String) optionsMap.get(MAIL_CREATOR);    }    // Failure action    options.failureAction =        FailureAction.valueOf(wrapper.getString(FAILURE_ACTION,            options.failureAction.toString()));    options.pipelineLevel =        wrapper.getInt(PIPELINE_LEVEL, options.pipelineLevel);    options.pipelineExecId =        wrapper.getInt(PIPELINE_EXECID, options.pipelineExecId);    options.queueLevel = wrapper.getInt(QUEUE_LEVEL, options.queueLevel);    // Success emails    options.setSuccessEmails(wrapper.<String>getList(SUCCESS_EMAILS,        Collections.<String>emptyList()));    options.setFailureEmails(wrapper.<String>getList(FAILURE_EMAILS,        Collections.<String>emptyList()));    options.setSuccessEmailsOverridden(wrapper.getBool(SUCCESS_EMAILS_OVERRIDE,        false));    options.setFailureEmailsOverridden(wrapper.getBool(FAILURE_EMAILS_OVERRIDE,        false));    options.setMemoryCheck(wrapper.getBool(MEMORY_CHECK, true));    return options;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addAllFlowParameters", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void addAllFlowParameters(final Map<String, String> flowParam) {    this.flowParameters.putAll(flowParam);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getFlowParameters", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "  public Map<String, String> getFlowParameters() {    return this.flowParameters;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isFailureEmailsOverridden", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isFailureEmailsOverridden() {    return this.failureEmailsOverride;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setFailureEmailsOverridden", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFailureEmailsOverridden(final boolean override) {    this.failureEmailsOverride = override;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isSuccessEmailsOverridden", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isSuccessEmailsOverridden() {    return this.successEmailsOverride;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSuccessEmailsOverridden", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSuccessEmailsOverridden(final boolean override) {    this.successEmailsOverride = override;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getFailureEmails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getFailureEmails() {    return this.failureEmails;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setFailureEmails", "params": ["Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFailureEmails(final Collection<String> emails) {    this.failureEmails = new ArrayList<>(emails);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getSuccessEmails", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getSuccessEmails() {    return this.successEmails;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSuccessEmails", "params": ["Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSuccessEmails(final Collection<String> emails) {    this.successEmails = new ArrayList<>(emails);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getNotifyOnFirstFailure", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean getNotifyOnFirstFailure() {    return this.notifyOnFirstFailure;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setNotifyOnFirstFailure", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNotifyOnFirstFailure(final boolean notify) {    this.notifyOnFirstFailure = notify;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getNotifyOnLastFailure", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean getNotifyOnLastFailure() {    return this.notifyOnLastFailure;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setNotifyOnLastFailure", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNotifyOnLastFailure(final boolean notify) {    this.notifyOnLastFailure = notify;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getFailureAction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FailureAction", "snippet": "  public FailureAction getFailureAction() {    return this.failureAction;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setFailureAction", "params": ["FailureAction"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFailureAction(final FailureAction action) {    this.failureAction = action;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getConcurrentOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getConcurrentOption() {    return this.concurrentOption;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setConcurrentOption", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setConcurrentOption(final String concurrentOption) {    this.concurrentOption = concurrentOption;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMailCreator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getMailCreator() {    return this.mailCreator;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setMailCreator", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setMailCreator(final String mailCreator) {    this.mailCreator = mailCreator;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPipelineLevel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getPipelineLevel() {    return this.pipelineLevel;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setPipelineLevel", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setPipelineLevel(final Integer level) {    this.pipelineLevel = level;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPipelineExecutionId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getPipelineExecutionId() {    return this.pipelineExecId;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setPipelineExecutionId", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setPipelineExecutionId(final Integer id) {    this.pipelineExecId = id;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getQueueLevel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getQueueLevel() {    return this.queueLevel;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDisabledJobs", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Object>", "snippet": "  public List<Object> getDisabledJobs() {    return new ArrayList<>(this.initiallyDisabledJobs);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDisabledJobs", "params": ["List<Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDisabledJobs(final List<Object> disabledJobs) {    this.initiallyDisabledJobs = disabledJobs;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMemoryCheck", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean getMemoryCheck() {    return this.memoryCheck;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setMemoryCheck", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setMemoryCheck(final boolean memoryCheck) {    this.memoryCheck = memoryCheck;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> toObject() {    final HashMap<String, Object> flowOptionObj = new HashMap<>();    flowOptionObj.put(FLOW_PARAMETERS, this.flowParameters);    flowOptionObj.put(NOTIFY_ON_FIRST_FAILURE, this.notifyOnFirstFailure);    flowOptionObj.put(NOTIFY_ON_LAST_FAILURE, this.notifyOnLastFailure);    flowOptionObj.put(SUCCESS_EMAILS, this.successEmails);    flowOptionObj.put(FAILURE_EMAILS, this.failureEmails);    flowOptionObj.put(FAILURE_ACTION, this.failureAction.toString());    flowOptionObj.put(PIPELINE_LEVEL, this.pipelineLevel);    flowOptionObj.put(PIPELINE_EXECID, this.pipelineExecId);    flowOptionObj.put(QUEUE_LEVEL, this.queueLevel);    flowOptionObj.put(CONCURRENT_OPTION, this.concurrentOption);    flowOptionObj.put(DISABLE, this.initiallyDisabledJobs);    flowOptionObj.put(FAILURE_EMAILS_OVERRIDE, this.failureEmailsOverride);    flowOptionObj.put(SUCCESS_EMAILS_OVERRIDE, this.successEmailsOverride);    flowOptionObj.put(MAIL_CREATOR, this.mailCreator);    flowOptionObj.put(MEMORY_CHECK, this.memoryCheck);    return flowOptionObj;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "toJSON", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toJSON() {    return new GsonBuilder().setPrettyPrinting().create().toJson(toObject());  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutionOptions.java", "stars": "18", "class": {"name": "ExecutionOptions", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setNonNullParameter", "params": ["PreparedStatement", "int", "Instant", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Instant parameter, JdbcType jdbcType) throws SQLException {    ps.setTimestamp(i, Timestamp.from(parameter));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/InstantTypeHandler.java", "stars": "15", "class": {"name": "InstantTypeHandler", "extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"method_name": "getNullableResult", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Instant", "snippet": "  public Instant getNullableResult(ResultSet rs, String columnName) throws SQLException {    Timestamp timestamp = rs.getTimestamp(columnName);    return getInstant(timestamp);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/InstantTypeHandler.java", "stars": "15", "class": {"name": "InstantTypeHandler", "extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"method_name": "getNullableResult", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Instant", "snippet": "  public Instant getNullableResult(ResultSet rs, int columnIndex) throws SQLException {    Timestamp timestamp = rs.getTimestamp(columnIndex);    return getInstant(timestamp);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/InstantTypeHandler.java", "stars": "15", "class": {"name": "InstantTypeHandler", "extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"method_name": "getNullableResult", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Instant", "snippet": "  public Instant getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {    Timestamp timestamp = cs.getTimestamp(columnIndex);    return getInstant(timestamp);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/InstantTypeHandler.java", "stars": "15", "class": {"name": "InstantTypeHandler", "extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"method_name": "getInstant", "params": ["Timestamp"], "throws": null, "modifiers": ["private", "static"], "return_type": "Instant", "snippet": "  private static Instant getInstant(Timestamp timestamp) {    if (timestamp != null) {      return timestamp.toInstant();    }    return null;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/InstantTypeHandler.java", "stars": "15", "class": {"name": "InstantTypeHandler", "extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCode() {        return code;    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/exception/BleException.java", "stars": "2", "class": {"name": "BleException", "extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"method_name": "setCode", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "BleException", "snippet": "    public BleException setCode(int code) {        this.code = code;        return this;    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/exception/BleException.java", "stars": "2", "class": {"name": "BleException", "extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"method_name": "getDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {        return description;    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/exception/BleException.java", "stars": "2", "class": {"name": "BleException", "extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"method_name": "setDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "BleException", "snippet": "    public BleException setDescription(String description) {        this.description = description;        return this;    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/exception/BleException.java", "stars": "2", "class": {"name": "BleException", "extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        return \"BleException { \" +               \"code=\" + code +               \", description='\" + description + '\\'' +               '}';    }", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/exception/BleException.java", "stars": "2", "class": {"name": "BleException", "extends": null, "implements": ["Serializable"], "modifiers": ["public", "abstract"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\t{\t\tSystem.out.println(\"Hellow woeld!\");\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/Ray1.java", "stars": "2", "class": {"name": "Ray1", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setSize", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSize(int width, int height) {        mLayoutParams.width = width;        mLayoutParams.height = height;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "setView", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setView(View view) {        int layout_type;        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {            layout_type = WindowManager.LayoutParams.TYPE_APPLICATION_OVERLAY;        } else {            layout_type = WindowManager.LayoutParams.TYPE_PHONE;        }        mLayoutParams.flags = WindowManager.LayoutParams.FLAG_NOT_TOUCH_MODAL                | WindowManager.LayoutParams.FLAG_NOT_FOCUSABLE;        mLayoutParams.type = layout_type;        mLayoutParams.windowAnimations = 0;        mView = view;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "setGravity", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGravity(int gravity, int xOffset, int yOffset) {        mLayoutParams.gravity = gravity;        mLayoutParams.x = mX = xOffset;        mLayoutParams.y = mY = yOffset;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "init", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {        if (Util.hasPermission(mContext)) {            mLayoutParams.format = PixelFormat.RGBA_8888;            mWindowManager.addView(mView, mLayoutParams);        } else {            FloatActivity.request(mContext, new PermissionListener() {                @Override                public void onSuccess() {                    mLayoutParams.format = PixelFormat.RGBA_8888;                    mWindowManager.addView(mView, mLayoutParams);                }                @Override                public void onFail() {                }            });        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "dismiss", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dismiss() {        mWindowManager.removeView(mView);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "updateXY", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateXY(int x, int y) {        mLayoutParams.x = mX = x;        mLayoutParams.y = mY = y;        mWindowManager.updateViewLayout(mView, mLayoutParams);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "updateX", "params": ["int"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void updateX(int x) {        mLayoutParams.x = mX = x;        mWindowManager.updateViewLayout(mView, mLayoutParams);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "updateY", "params": ["int"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void updateY(int y) {        mLayoutParams.y = mY = y;        mWindowManager.updateViewLayout(mView, mLayoutParams);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "getX", "params": [], "throws": null, "modifiers": [], "return_type": "int", "snippet": "    int getX() {        return mX;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "getY", "params": [], "throws": null, "modifiers": [], "return_type": "int", "snippet": "    int getY() {        return mY;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/utils/floatUtil/FloatPhone.java", "stars": "2", "class": {"name": "FloatPhone", "extends": "FloatView", "implements": null, "modifiers": []}}, {"method_name": "getJobId", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "long", "snippet": "    protected final long getJobId(){        return this.jobId;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "getTaskId", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "long", "snippet": "    protected final long getTaskId(){        return this.taskId;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "getExecUser", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "String", "snippet": "    protected final String getExecUser(){        return execUser;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "getTaskConfig", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "TaskConfiguration", "snippet": "    protected final TaskConfiguration getTaskConfig(){        return taskConfig;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "getEngineParams", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "Map<String,Object>", "snippet": "    protected final Map<String, Object> getEngineParams(){        return engineParams;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "getTaskState", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "TaskState", "snippet": "    protected final TaskState getTaskState(){        return taskState;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "getExecConfig", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "ExecutorConfiguration", "snippet": "    protected final ExecutorConfiguration getExecConfig(){        return execConfig;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "getWorkDir", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "File", "snippet": "    public final File getWorkDir() {        return workDir;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/task/process/AbstractTaskProcess.java", "stars": "23", "class": {"name": "AbstractTaskProcess", "extends": null, "implements": ["TaskProcess"], "modifiers": ["public", "abstract"]}}, {"method_name": "setup", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setup() throws Exception {    BaseDataTest.createBlogDataSource();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_resource_loaded/DuplicateResourceTest.java", "stars": "15", "class": {"name": "DuplicateResourceTest", "extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"method_name": "shouldDemonstrateDuplicateResourceIssue", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateDuplicateResourceIssue() throws Exception {    final String resource = \"org/apache/ibatis/submitted/duplicate_resource_loaded/Config.xml\";    final Reader reader = Resources.getResourceAsReader(resource);    final SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();    final SqlSessionFactory factory = builder.build(reader);    try (SqlSession sqlSession = factory.openSession()) {      final Mapper mapper = sqlSession.getMapper(Mapper.class);      final List<Map<String, Object>> list = mapper.selectAllBlogs();      Assertions.assertEquals(2,list.size());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/duplicate_resource_loaded/DuplicateResourceTest.java", "stars": "15", "class": {"name": "DuplicateResourceTest", "extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run() {\t\t// TODO Auto-generated method stub\t\t\t\ttry {\t\t\tThread.sleep(n);\t\t} catch (InterruptedException e)\t\t{\t\t\te.printStackTrace();\t\t}\t\t\t\tthis.offset = (timer.stop() - n * 1e+6) /(n * 1e+6); \t}", "url": "https://raw.githubusercontent.com/miricel/CO_Project/master/UPTBench/src/bench/DemoBenchmark.java", "stars": "2", "class": {"name": "DemoBenchmark", "extends": null, "implements": ["IBenchmark"], "modifiers": ["public"]}}, {"method_name": "run", "params": ["Object"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run(Object... params) throws IOException {\t\t// TODO Auto-generated method stub\t\t\t}", "url": "https://raw.githubusercontent.com/miricel/CO_Project/master/UPTBench/src/bench/DemoBenchmark.java", "stars": "2", "class": {"name": "DemoBenchmark", "extends": null, "implements": ["IBenchmark"], "modifiers": ["public"]}}, {"method_name": "initialize", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initialize(Object... params) {\t\t// TODO Auto-generated method stub\t\t\t\trunning = true;\t\tn = (int)params[0];\t\t\t}", "url": "https://raw.githubusercontent.com/miricel/CO_Project/master/UPTBench/src/bench/DemoBenchmark.java", "stars": "2", "class": {"name": "DemoBenchmark", "extends": null, "implements": ["IBenchmark"], "modifiers": ["public"]}}, {"method_name": "clean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clean() {\t\t// TODO Auto-generated method stub\t\t\t}", "url": "https://raw.githubusercontent.com/miricel/CO_Project/master/UPTBench/src/bench/DemoBenchmark.java", "stars": "2", "class": {"name": "DemoBenchmark", "extends": null, "implements": ["IBenchmark"], "modifiers": ["public"]}}, {"method_name": "cancel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cancel() {\t\t// TODO Auto-generated method stub\t\trunning = false;\t\t\t\t\t}", "url": "https://raw.githubusercontent.com/miricel/CO_Project/master/UPTBench/src/bench/DemoBenchmark.java", "stars": "2", "class": {"name": "DemoBenchmark", "extends": null, "implements": ["IBenchmark"], "modifiers": ["public"]}}, {"method_name": "warmUp", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void warmUp() throws IOException {\t\t// TODO Auto-generated method stub\t\t\t}", "url": "https://raw.githubusercontent.com/miricel/CO_Project/master/UPTBench/src/bench/DemoBenchmark.java", "stars": "2", "class": {"name": "DemoBenchmark", "extends": null, "implements": ["IBenchmark"], "modifiers": ["public"]}}, {"method_name": "getResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getResult() {\t\t// TODO Auto-generated method stub\t\treturn null;\t}", "url": "https://raw.githubusercontent.com/miricel/CO_Project/master/UPTBench/src/bench/DemoBenchmark.java", "stars": "2", "class": {"name": "DemoBenchmark", "extends": null, "implements": ["IBenchmark"], "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {    return \"DependencyInstance{\" +        \"startTime=\" + this.startTime +        \", depName='\" + this.depName + '\\'' +        \", context=\" + this.context +        \", endTime=\" + this.endTime +        \", status=\" + this.status +        \", cause=\" + this.cause +        '}';  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCancellationCause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CancellationCause", "snippet": "  public CancellationCause getCancellationCause() {    return this.cause;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setCancellationCause", "params": ["CancellationCause"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCancellationCause(final CancellationCause cancellationCause) {    this.cause = cancellationCause;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getTriggerInstance", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TriggerInstance", "snippet": "  public TriggerInstance getTriggerInstance() {    return this.triggerInstance;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setTriggerInstance", "params": ["TriggerInstance"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setTriggerInstance(final TriggerInstance triggerInstance) {    this.triggerInstance = triggerInstance;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDependencyInstanceContext", "params": ["DependencyInstanceContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDependencyInstanceContext(final DependencyInstanceContext context) {    this.context = context;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getStartTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getStartTime() {    return this.startTime;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getEndTime", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getEndTime() {    return this.endTime;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setEndTime", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setEndTime(final long endTime) {    this.endTime = endTime;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDepName", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getDepName() {    return this.depName;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DependencyInstanceContext", "snippet": "  public DependencyInstanceContext getContext() {    return this.context;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Status", "snippet": "  public Status getStatus() {    return this.status;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setStatus", "params": ["Status"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setStatus(final Status status) {    this.status = status;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/DependencyInstance.java", "stars": "18", "class": {"name": "DependencyInstance", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void init(Context context) {        super.init(context);        mCoverImage = (ImageView) findViewById(R.id.thumbImage);        if (mThumbImageViewLayout != null &&                (mCurrentState == -1 || mCurrentState == CURRENT_STATE_NORMAL || mCurrentState == CURRENT_STATE_ERROR)) {            mThumbImageViewLayout.setVisibility(VISIBLE);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getLayoutId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLayoutId() {        return R.layout.audio_layout_cover;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "loadCoverImage", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadCoverImage(String url, int res) {        mCoverOriginUrl = url;        mDefaultRes = res;        Glide.with(getContext().getApplicationContext())                .setDefaultRequestOptions(                        new RequestOptions()                                .frame(1000000)                                .centerCrop()                                .error(res)                                .placeholder(res))                .load(url)                .into(mCoverImage);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "startWindowFullscreen", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {        GSYBaseVideoPlayer gsyBaseVideoPlayer = super.startWindowFullscreen(context, actionBar, statusBar);        AudioSampleVideo audioSampleVideo = (AudioSampleVideo) gsyBaseVideoPlayer;        audioSampleVideo.loadCoverImage(mCoverOriginUrl, mDefaultRes);        return gsyBaseVideoPlayer;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "showSmallVideo", "params": ["Point", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer showSmallVideo(Point size, boolean actionBar, boolean statusBar) {        //\u4e0b\u9762\u8fd9\u91cc\u66ff\u6362\u6210\u4f60\u81ea\u5df1\u7684\u5f3a\u5236\u8f6c\u5316        AudioSampleVideo audioSampleVideo = (AudioSampleVideo) super.showSmallVideo(size, actionBar, statusBar);        audioSampleVideo.mStartButton.setVisibility(GONE);        audioSampleVideo.mStartButton = null;        return audioSampleVideo;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "cloneParams", "params": ["GSYBaseVideoPlayer", "GSYBaseVideoPlayer"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cloneParams(GSYBaseVideoPlayer from, GSYBaseVideoPlayer to) {        super.cloneParams(from, to);        AudioSampleVideo sf = (AudioSampleVideo) from;        AudioSampleVideo st = (AudioSampleVideo) to;        st.mShowFullAnimation = sf.mShowFullAnimation;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "clearFullscreenLayout", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void clearFullscreenLayout() {        if (!mFullAnimEnd) {            return;        }        mIfCurrentIsFullscreen = false;        int delay = 0;        if (mOrientationUtils != null) {            delay = mOrientationUtils.backToProtVideo();            mOrientationUtils.setEnable(false);            if (mOrientationUtils != null) {                mOrientationUtils.releaseListener();                mOrientationUtils = null;            }        }        if (!mShowFullAnimation) {            delay = 0;        }        final ViewGroup vp = (CommonUtil.scanForActivity(getContext())).findViewById(Window.ID_ANDROID_CONTENT);        final View oldF = vp.findViewById(getFullId());        if (oldF != null) {            AudioSampleVideo gsyVideoPlayer = (AudioSampleVideo) oldF;            gsyVideoPlayer.mIfCurrentIsFullscreen = false;        }        if (delay == 0) {            backToNormal();        } else {            postDelayed(new Runnable() {                @Override                public void run() {                    backToNormal();                }            }, delay);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "addTextureView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addTextureView() {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToNormal", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToNormal() {        super.changeUiToNormal();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPreparingShow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPreparingShow() {        super.changeUiToPreparingShow();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPlayingShow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingShow() {        super.changeUiToPlayingShow();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPauseShow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPauseShow() {        super.changeUiToPauseShow();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPlayingBufferingShow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingBufferingShow() {        super.changeUiToPlayingBufferingShow();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToCompleteShow", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToCompleteShow() {        super.changeUiToCompleteShow();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToError", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToError() {        super.changeUiToError();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPrepareingClear", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPrepareingClear() {        super.changeUiToPrepareingClear();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPlayingClear", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingClear() {        super.changeUiToPlayingClear();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPauseClear", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPauseClear() {        super.changeUiToPauseClear();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToPlayingBufferingClear", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToPlayingBufferingClear() {        super.changeUiToPlayingBufferingClear();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToClear", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToClear() {        super.changeUiToClear();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "changeUiToCompleteClear", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void changeUiToCompleteClear() {        super.changeUiToCompleteClear();        setViewShowState(mThumbImageViewLayout, VISIBLE);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/AudioSampleVideo.java", "stars": "2", "class": {"name": "AudioSampleVideo", "extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"method_name": "put", "params": ["String", "V"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "  public V put(final String key, final V value) {    return this.map.put(key.toLowerCase(), value);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/CaseInsensitiveConcurrentHashMap.java", "stars": "18", "class": {"name": "CaseInsensitiveConcurrentHashMap", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "get", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "  public V get(final String key) {    return this.map.get(key.toLowerCase());  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/CaseInsensitiveConcurrentHashMap.java", "stars": "18", "class": {"name": "CaseInsensitiveConcurrentHashMap", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "containsKey", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean containsKey(final String key) {    return this.map.containsKey(key.toLowerCase());  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/CaseInsensitiveConcurrentHashMap.java", "stars": "18", "class": {"name": "CaseInsensitiveConcurrentHashMap", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "remove", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "  public V remove(final String key) {    return this.map.remove(key.toLowerCase());  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/CaseInsensitiveConcurrentHashMap.java", "stars": "18", "class": {"name": "CaseInsensitiveConcurrentHashMap", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setUpClass", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUpClass() throws Exception {    // create a SqlSessionFactory    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/foreach_map/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    // populate in-memory database    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/foreach_map/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach_map/ForEachMapTest.java", "stars": "15", "class": {"name": "ForEachMapTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "setUp", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void setUp() {    sqlSession = sqlSessionFactory.openSession();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach_map/ForEachMapTest.java", "stars": "15", "class": {"name": "ForEachMapTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "tearDown", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void tearDown() {    sqlSession.close();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach_map/ForEachMapTest.java", "stars": "15", "class": {"name": "ForEachMapTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetStringKeyStringValueEntries", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetStringKeyStringValueEntries() {    MapParam mapParam = new MapParam();    mapParam.getMap().put(\"key 1\", \"value 1\");    mapParam.getMap().put(\"key 2\", \"value 2\");    sqlSession.insert(\"ins_string_string\", mapParam);    List<StringStringMapEntry> entries = sqlSession.selectList(\"sel_string_string\", new MapParam());    Assertions.assertEquals(new StringStringMapEntry(\"key 1\", \"value 1\"), entries.get(0));    Assertions.assertEquals(new StringStringMapEntry(\"key 2\", \"value 2\"), entries.get(1));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach_map/ForEachMapTest.java", "stars": "15", "class": {"name": "ForEachMapTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetIntKeyBoolValueEntries", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetIntKeyBoolValueEntries() {    MapParam mapParam = new MapParam();    mapParam.getMap().put(12345, true);    mapParam.getMap().put(54321, false);    sqlSession.insert(\"ins_int_bool\", mapParam);    List<IntBoolMapEntry> entries = sqlSession.selectList(\"sel_int_bool\");    Assertions.assertEquals(new IntBoolMapEntry(12345, true), entries.get(0));    Assertions.assertEquals(new IntBoolMapEntry(54321, false), entries.get(1));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach_map/ForEachMapTest.java", "stars": "15", "class": {"name": "ForEachMapTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldGetNestedBeanKeyValueEntries", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldGetNestedBeanKeyValueEntries() {    MapParam mapParam = new MapParam();    mapParam.getMap().put(new NestedBean(12345, true), new NestedBean(54321, false));    mapParam.getMap().put(new NestedBean(67890, true), new NestedBean(9876, false));    sqlSession.insert(\"ins_nested_bean\", mapParam);    List<NestedBeanMapEntry> entries = sqlSession.selectList(\"sel_nested_bean\");    Assertions.assertEquals(new NestedBeanMapEntry(12345, true, 54321, false), entries.get(0));    Assertions.assertEquals(new NestedBeanMapEntry(67890, true, 9876, false), entries.get(1));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach_map/ForEachMapTest.java", "stars": "15", "class": {"name": "ForEachMapTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldSubstituteIndexWithKey", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldSubstituteIndexWithKey() {    MapParam mapParam = new MapParam();    mapParam.getMap().put(\"col_a\", 22);    mapParam.getMap().put(\"col_b\", 222);    Integer count = sqlSession.selectOne(\"sel_key_cols\", mapParam);    Assertions.assertEquals(Integer.valueOf(1), count);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/foreach_map/ForEachMapTest.java", "stars": "15", "class": {"name": "ForEachMapTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "hasImageViewScaleChange", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean hasImageViewScaleChange(View snapshotView) {        return snapshotView instanceof ImageView;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "saveImageViewScale", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void saveImageViewScale() {        if (mSavedScaleType == null) {            // only save first time after initialize/restoreImageViewScale()            ImageView imageView = mViewHolder.mImageView;            mSavedScaleType = imageView.getScaleType();            mSavedMatrix = mSavedScaleType == ScaleType.MATRIX ? imageView.getMatrix() : null;            if (DEBUG) {                Log.d(TAG, \"saveImageViewScale: \"+ mSavedScaleType);            }        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "updateImageViewAfterScaleTypeChange", "params": ["ImageView"], "throws": null, "modifiers": ["private", "static"], "return_type": "void", "snippet": "    private static void updateImageViewAfterScaleTypeChange(ImageView imageView) {        // enforcing imageView to update its internal bounds/matrix immediately        imageView.measure(                MeasureSpec.makeMeasureSpec(imageView.getMeasuredWidth(), MeasureSpec.EXACTLY),                MeasureSpec.makeMeasureSpec(imageView.getMeasuredHeight(), MeasureSpec.EXACTLY));        imageView.layout(imageView.getLeft(), imageView.getTop(),                imageView.getRight(), imageView.getBottom());    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "changeImageViewScale", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void changeImageViewScale(View snapshotView) {        ImageView snapshotImageView = (ImageView) snapshotView;        ImageView imageView = mViewHolder.mImageView;        if (DEBUG) {            Log.d(TAG, \"changeImageViewScale to \"+snapshotImageView.getScaleType());        }        imageView.setScaleType(snapshotImageView.getScaleType());        if (snapshotImageView.getScaleType() == ScaleType.MATRIX) {            imageView.setImageMatrix(snapshotImageView.getImageMatrix());        }        updateImageViewAfterScaleTypeChange(imageView);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "restoreImageViewScale", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void restoreImageViewScale() {        if (mSavedScaleType != null) {            if (DEBUG) {                Log.d(TAG, \"restoreImageViewScale to \"+mSavedScaleType);            }            ImageView imageView = mViewHolder.mImageView;            imageView.setScaleType(mSavedScaleType);            if (mSavedScaleType == ScaleType.MATRIX) {                imageView.setImageMatrix(mSavedMatrix);            }            // only restore once unless another save happens            mSavedScaleType = null;            updateImageViewAfterScaleTypeChange(imageView);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "onSharedElementStart", "params": ["List<String>", "List<View>", "List<View>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSharedElementStart(List<String> sharedElementNames,            List<View> sharedElements, List<View> sharedElementSnapshots) {        if (DEBUG) {            Log.d(TAG, \"onSharedElementStart \" + mActivityToRunTransition);        }        if (sharedElements.size() < 1) {            return;        }        View overviewView = sharedElements.get(0);        if (mViewHolder == null || mViewHolder.mOverviewFrame != overviewView) {            return;        }        View snapshot = sharedElementSnapshots.get(0);        if (hasImageViewScaleChange(snapshot)) {            saveImageViewScale();            changeImageViewScale(snapshot);        }        View imageView = mViewHolder.mImageView;        final int width = overviewView.getWidth();        final int height = overviewView.getHeight();        imageView.measure(MeasureSpec.makeMeasureSpec(width, MeasureSpec.EXACTLY),                MeasureSpec.makeMeasureSpec(height, MeasureSpec.EXACTLY));        imageView.layout(0, 0, width, height);        final View rightPanel = mViewHolder.mRightPanel;        if (mRightPanelWidth != 0 && mRightPanelHeight != 0) {            rightPanel.measure(MeasureSpec.makeMeasureSpec(mRightPanelWidth, MeasureSpec.EXACTLY),                    MeasureSpec.makeMeasureSpec(mRightPanelHeight, MeasureSpec.EXACTLY));            rightPanel.layout(width, rightPanel.getTop(), width + mRightPanelWidth,                    rightPanel.getTop() + mRightPanelHeight);        } else {            rightPanel.offsetLeftAndRight(width - rightPanel.getLeft());        }        mViewHolder.mActionsRow.setVisibility(View.INVISIBLE);        mViewHolder.mDetailsDescriptionFrame.setVisibility(View.INVISIBLE);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "onSharedElementEnd", "params": ["List<String>", "List<View>", "List<View>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSharedElementEnd(List<String> sharedElementNames,            List<View> sharedElements, List<View> sharedElementSnapshots) {        if (DEBUG) {            Log.d(TAG, \"onSharedElementEnd \" + mActivityToRunTransition);        }        if (sharedElements.size() < 1) {            return;        }        View overviewView = sharedElements.get(0);        if (mViewHolder == null || mViewHolder.mOverviewFrame != overviewView) {            return;        }        restoreImageViewScale();        // temporary let action row take focus so we defer button background animation        mViewHolder.mActionsRow.setDescendantFocusability(ViewGroup.FOCUS_BEFORE_DESCENDANTS);        mViewHolder.mActionsRow.setVisibility(View.VISIBLE);        mViewHolder.mActionsRow.setDescendantFocusability(ViewGroup.FOCUS_AFTER_DESCENDANTS);        mViewHolder.mDetailsDescriptionFrame.setVisibility(View.VISIBLE);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "setSharedElementEnterTransition", "params": ["Activity", "String", "long"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setSharedElementEnterTransition(Activity activity, String sharedElementName,            long timeoutMs) {        if (activity == null && !TextUtils.isEmpty(sharedElementName) ||                activity != null && TextUtils.isEmpty(sharedElementName)) {            throw new IllegalArgumentException();        }        if (activity == mActivityToRunTransition &&                TextUtils.equals(sharedElementName, mSharedElementName)) {            return;        }        if (mActivityToRunTransition != null) {            ActivityCompat.setEnterSharedElementCallback(mActivityToRunTransition, null);        }        mActivityToRunTransition = activity;        mSharedElementName = sharedElementName;        if (DEBUG) {            Log.d(TAG, \"postponeEnterTransition \" + mActivityToRunTransition);        }        ActivityCompat.setEnterSharedElementCallback(mActivityToRunTransition, this);        ActivityCompat.postponeEnterTransition(mActivityToRunTransition);        if (timeoutMs > 0) {            new Handler().postDelayed(new Runnable() {                @Override                public void run() {                    if (mStartedPostpone) {                        return;                    }                    if (DEBUG) {                        Log.d(TAG, \"timeout \" + mActivityToRunTransition);                    }                    startPostponedEnterTransition();                }            }, timeoutMs);        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "onBindToDrawable", "params": ["ViewHolder"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onBindToDrawable(ViewHolder vh) {        if (DEBUG) {            Log.d(TAG, \"onBindToDrawable, could start transition of \" + mActivityToRunTransition);        }        if (mViewHolder != null) {            if (DEBUG) {                Log.d(TAG, \"rebind? clear transitionName on current viewHolder \"                        + mViewHolder.mOverviewFrame);            }            ViewCompat.setTransitionName(mViewHolder.mOverviewFrame, null);        }        // After we got a image drawable,  we can determine size of right panel.        // We want right panel to have fixed size so that the right panel don't change size        // when the overview is layout as a small bounds in transition.        mViewHolder = vh;        mViewHolder.mRightPanel.addOnLayoutChangeListener(new View.OnLayoutChangeListener() {            @Override            public void onLayoutChange(View v, int left, int top, int right, int bottom,                    int oldLeft, int oldTop, int oldRight, int oldBottom) {                mViewHolder.mRightPanel.removeOnLayoutChangeListener(this);                mRightPanelWidth = mViewHolder.mRightPanel.getWidth();                mRightPanelHeight = mViewHolder.mRightPanel.getHeight();                if (DEBUG) {                    Log.d(TAG, \"onLayoutChange records size of right panel as \"                            + mRightPanelWidth + \", \"+ mRightPanelHeight);                }            }        });        mViewHolder.mRightPanel.postOnAnimation(new Runnable() {            @SuppressLint(\"RestrictedApi\")            @Override            public void run() {                if (DEBUG) {                    Log.d(TAG, \"setTransitionName \"+mViewHolder.mOverviewFrame);                }                ViewCompat.setTransitionName(mViewHolder.mOverviewFrame, mSharedElementName);                Object transition = TransitionHelper.getSharedElementEnterTransition(                        mActivityToRunTransition.getWindow());                if (transition != null) {                    TransitionHelper.addTransitionListener(transition, new TransitionListener() {                        @Override                        public void onTransitionEnd(Object transition) {                            if (DEBUG) {                                Log.d(TAG, \"onTransitionEnd \" + mActivityToRunTransition);                            }                            // after transition if the action row still focused, transfer                            // focus to its children                            if (mViewHolder.mActionsRow.isFocused()) {                                mViewHolder.mActionsRow.requestFocus();                            }                            TransitionHelper.removeTransitionListener(transition, this);                        }                    });                }                startPostponedEnterTransition();            }        });    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "startPostponedEnterTransition", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startPostponedEnterTransition() {        if (!mStartedPostpone) {            if (DEBUG) {                Log.d(TAG, \"startPostponedEnterTransition \" + mActivityToRunTransition);            }            ActivityCompat.startPostponedEnterTransition(mActivityToRunTransition);            mStartedPostpone = true;        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/androidx/leanback/widget/PTVDetailsOverviewSharedElementHelper.java", "stars": "4", "class": {"name": "PTVDetailsOverviewSharedElementHelper", "extends": "SharedElementCallback", "implements": null, "modifiers": ["final"]}}, {"method_name": "testViajeFamiliar", "params": [], "throws": ["ParseException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testViajeFamiliar() throws ParseException {        System.out.println(\"Viaje familiar\");        ViajeFamiliar viaje = new ViajeFamiliar(\"Popay\u00e1n\", \"Bogot\u00e1\", 1250000, new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"01/05/2019\"), new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"05/05/2019\"), 5);        assertEquals(\"Popay\u00e1n\", viaje.getOrigen());        assertEquals(\"Bogot\u00e1\", viaje.getDestino());        assertEquals(1250000, viaje.getCosto());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"01/05/2019\"), viaje.getFechaSalida());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"05/05/2019\"), viaje.getFechaLlegada());        assertEquals(5, viaje.getFamilia());        assertEquals(\"Viaje para disfrutar con toda tu familia\", viaje.descripcion());        assertEquals(\"Cualquier m\u00e9todo implementado en la clase base\", viaje.cualquierMetodo());        assertEquals(\"M\u00e9todo implementado en la clase hija viaje familiar\", viaje.cualquierMetodo2());    }", "url": "https://raw.githubusercontent.com/santiago9739/Ingenieria-del-software-2/master/src/test/java/co/unicauca/tallerpolimorfismo/modelo/ViajeTest.java", "stars": "1", "class": {"name": "ViajeTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testViajeIncentivo", "params": [], "throws": ["ParseException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testViajeIncentivo() throws ParseException {        System.out.println(\"Viaje incentivo\");        ViajeIncentivo viaje = new ViajeIncentivo(\"Popay\u00e1n\", \"Medellin\", 2100000, new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"03/06/2019\"), new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"09/06/2019\"), \"Emtel\");        assertEquals(\"Popay\u00e1n\", viaje.getOrigen());        assertEquals(\"Medellin\", viaje.getDestino());        assertEquals(2100000, viaje.getCosto());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"03/06/2019\"), viaje.getFechaSalida());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"09/06/2019\"), viaje.getFechaLlegada());        assertEquals(\"Emtel\", viaje.getEmpresa());        assertEquals(\"Viaje incentivo que te envia la empresa Emtel\", viaje.descripcion());        assertEquals(\"Cualquier m\u00e9todo implementado en la clase base\", viaje.cualquierMetodo());        assertEquals(\"M\u00e9todo implementado en la clase hija viaje de incentivo\", viaje.cualquierMetodo2());    }", "url": "https://raw.githubusercontent.com/santiago9739/Ingenieria-del-software-2/master/src/test/java/co/unicauca/tallerpolimorfismo/modelo/ViajeTest.java", "stars": "1", "class": {"name": "ViajeTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testViajeIndividual", "params": [], "throws": ["ParseException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testViajeIndividual() throws ParseException {        System.out.println(\"Viaje individual\");        Viaje viaje = new ViajeIndividual(\"Popay\u00e1n\", \"San Andres\", 4250000, new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"01/07/2019\"), new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"12/07/2019\"));        assertEquals(\"Popay\u00e1n\", viaje.getOrigen());        assertEquals(\"San Andres\", viaje.getDestino());        assertEquals(4250000, viaje.getCosto());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"01/07/2019\"), viaje.getFechaSalida());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"12/07/2019\"), viaje.getFechaLlegada());        assertEquals(\"Disfruta tu viaje individual\", viaje.descripcion());        assertEquals(\"Cualquier m\u00e9todo implementado en la clase base\", viaje.cualquierMetodo());        assertEquals(\"Cualquier m\u00e9todo2 implementado en la clase base\", viaje.cualquierMetodo2());    }", "url": "https://raw.githubusercontent.com/santiago9739/Ingenieria-del-software-2/master/src/test/java/co/unicauca/tallerpolimorfismo/modelo/ViajeTest.java", "stars": "1", "class": {"name": "ViajeTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testViajeTodoIncluido", "params": [], "throws": ["ParseException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void testViajeTodoIncluido() throws ParseException {        System.out.println(\"Viaje todo incluido\");        Viaje viaje = new ViajeTodoIncluido(\"Popay\u00e1n\", \"Cartagena\", 7350000, new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"01/07/2019\"), new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"12/07/2019\"));        assertEquals(\"Popay\u00e1n\", viaje.getOrigen());        assertEquals(\"Cartagena\", viaje.getDestino());        assertEquals(7350000, viaje.getCosto());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"01/07/2019\"), viaje.getFechaSalida());        assertEquals(new SimpleDateFormat(\"dd/MM/yyyy\").parse(\"12/07/2019\"), viaje.getFechaLlegada());        assertEquals(\"Disfruta tu viaje todo incluido\", viaje.descripcion());        assertEquals(\"Cualquier m\u00e9todo implementado en la clase base\", viaje.cualquierMetodo());        assertEquals(\"Cualquier m\u00e9todo2 implementado en la clase base\", viaje.cualquierMetodo2());    }", "url": "https://raw.githubusercontent.com/santiago9739/Ingenieria-del-software-2/master/src/test/java/co/unicauca/tallerpolimorfismo/modelo/ViajeTest.java", "stars": "1", "class": {"name": "ViajeTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "render", "params": ["Entity", "float", "float", "float", "float", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void render(Entity entityIn, float limbSwing, float limbSwingAmount, float ageInTicks, float netHeadYaw, float headPitch, float scale) {        //Try to set models color        if (entityIn instanceof EntityLivingBase) {            //Recolor the part            ItemStack colliculusStack = ((EntityLivingBase) entityIn).getItemStackFromSlot(EntityEquipmentSlot.HEAD);            NBTTagCompound tag = colliculusStack.getTagCompound();            NBTTagCompound colorTag = NBTHelper.getSafe(tag, \"color\");            Color color = Color.getHSBColor(                    NBTHelper.getOrDefault(colorTag, \"h\", 0f),                    NBTHelper.getOrDefault(colorTag, \"s\", 0f),                    NBTHelper.getOrDefault(colorTag, \"b\", 0f));            framePart.setColor(color.getRed() / 255.f, color.getGreen() / 255.f, color.getBlue() / 255.f, 1);            IItemHandler itemCap = colliculusStack.getCapability(CapabilityItemHandler.ITEM_HANDLER_CAPABILITY, null);            if (itemCap != null) {                ItemStack battery = itemCap.getStackInSlot(0);                ItemStack lensLeft = itemCap.getStackInSlot(1);                ItemStack lensRight = itemCap.getStackInSlot(2);                ItemStack matrix = itemCap.getStackInSlot(3);                if (!lensLeft.isEmpty()) {                    leftGlassPart.showModel = true;                } else leftGlassPart.showModel = false;                if (!lensRight.isEmpty()) {                    rightGlassPart.showModel = true;                } else rightGlassPart.showModel = false;                if (!matrix.isEmpty()) {                    ;                }            }        }        bipedHeadwear.showModel = false;        helmAnchor.showModel = true;        //leftGlassPart.setColor(color.getRed() / 255.f, color.getGreen() / 255.f, color.getBlue() / 255.f, 1);        bipedHead = helmAnchor;        super.render(entityIn, limbSwing, limbSwingAmount, ageInTicks, netHeadYaw, headPitch, scale);    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Item/ItemColliculus/ModelColliculus.java", "stars": "2", "class": {"name": "ModelColliculus", "extends": "ModelArmor", "implements": null, "modifiers": ["public"]}}, {"method_name": "setRotationAngle", "params": ["ModelRenderer", "float", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRotationAngle(ModelRenderer modelRenderer, float x, float y, float z) {        modelRenderer.rotateAngleX = x;        modelRenderer.rotateAngleY = y;        modelRenderer.rotateAngleZ = z;    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Item/ItemColliculus/ModelColliculus.java", "stars": "2", "class": {"name": "ModelColliculus", "extends": "ModelArmor", "implements": null, "modifiers": ["public"]}}, {"method_name": "playerNameWrapper", "params": ["NetworkPlayerInfo", "CallbackInfoReturnable<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void playerNameWrapper(NetworkPlayerInfo networkPlayerInfoIn, CallbackInfoReturnable<String> cir) {\t\tcir.setReturnValue(ClanTags.handlePlayerTab(networkPlayerInfoIn));\t}", "url": "https://raw.githubusercontent.com/2b2t-Utilities/2b2t-Utilities/master/src/main/java/me/tigermouthbear/utilities/mixin/MixinGuiPlayerTabOverlay.java", "stars": "2", "class": {"name": "MixinGuiPlayerTabOverlay", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {       double temperaturInCelsion = 40.2;       // Aufgabe hier: Ausgabe in Kelvin und Fahrenheit        // Celsius -> Fahrenheit        double temperaturInFahrenheit = 105;        // Fahreneinheit -> Celsius ODER Fahrenheit -> Kelvin    }", "url": "https://raw.githubusercontent.com/unterstein/dhbw-java-2020/master/src/EinheitenUmrechnen.java", "stars": "3", "class": {"name": "EinheitenUmrechnen", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "logSubscriberExceptions", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder logSubscriberExceptions(boolean logSubscriberExceptions) {        this.logSubscriberExceptions = logSubscriberExceptions;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "logNoSubscriberMessages", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder logNoSubscriberMessages(boolean logNoSubscriberMessages) {        this.logNoSubscriberMessages = logNoSubscriberMessages;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "sendSubscriberExceptionEvent", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder sendSubscriberExceptionEvent(boolean sendSubscriberExceptionEvent) {        this.sendSubscriberExceptionEvent = sendSubscriberExceptionEvent;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "sendNoSubscriberEvent", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder sendNoSubscriberEvent(boolean sendNoSubscriberEvent) {        this.sendNoSubscriberEvent = sendNoSubscriberEvent;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "throwSubscriberException", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder throwSubscriberException(boolean throwSubscriberException) {        this.throwSubscriberException = throwSubscriberException;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "eventInheritance", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder eventInheritance(boolean eventInheritance) {        this.eventInheritance = eventInheritance;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "executorService", "params": ["ExecutorService"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder executorService(ExecutorService executorService) {        this.executorService = executorService;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "skipMethodVerificationFor", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder skipMethodVerificationFor(Class<?> clazz) {        if (skipMethodVerificationForClasses == null) {            skipMethodVerificationForClasses = new ArrayList<>();        }        skipMethodVerificationForClasses.add(clazz);        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "ignoreGeneratedIndex", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder ignoreGeneratedIndex(boolean ignoreGeneratedIndex) {        this.ignoreGeneratedIndex = ignoreGeneratedIndex;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "strictMethodVerification", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder strictMethodVerification(boolean strictMethodVerification) {        this.strictMethodVerification = strictMethodVerification;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addIndex", "params": ["SubscriberInfoIndex"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder addIndex(SubscriberInfoIndex index) {        if (subscriberInfoIndexes == null) {            subscriberInfoIndexes = new ArrayList<>();        }        subscriberInfoIndexes.add(index);        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "logger", "params": ["Logger"], "throws": null, "modifiers": ["public"], "return_type": "EventBusBuilder", "snippet": "    public EventBusBuilder logger(Logger logger) {        this.logger = logger;        return this;    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getLogger", "params": [], "throws": null, "modifiers": [], "return_type": "Logger", "snippet": "    Logger getLogger() {        if (logger != null) {            return logger;        } else {            // also check main looper to see if we have \"good\" Android classes (not Stubs etc.)            return Logger.AndroidLogger.isAndroidLogAvailable() && getAndroidMainLooperOrNull() != null                    ? new Logger.AndroidLogger(\"KeventBus\") :                    new Logger.SystemOutLogger();        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMainThreadSupport", "params": [], "throws": null, "modifiers": [], "return_type": "MainThreadSupport", "snippet": "    MainThreadSupport getMainThreadSupport() {        if (mainThreadSupport != null) {            return mainThreadSupport;        } else if (Logger.AndroidLogger.isAndroidLogAvailable()) {            Object looperOrNull = getAndroidMainLooperOrNull();            return looperOrNull == null ? null :                    new MainThreadSupport.AndroidHandlerMainThreadSupport((Looper) looperOrNull);        } else {            return null;        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getAndroidMainLooperOrNull", "params": [], "throws": null, "modifiers": [], "return_type": "Object", "snippet": "    Object getAndroidMainLooperOrNull() {        try {            return Looper.getMainLooper();        } catch (RuntimeException e) {            // Not really a functional Android (e.g. \"Stub!\" maven dependencies)            return null;        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "installDefaultEventBus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "KeventBus", "snippet": "    public KeventBus installDefaultEventBus() {        synchronized (KeventBus.class) {            if (KeventBus.defaultInstance != null) {                throw new EventBusException(\"Default instance already exists.\" +                        \" It may be only set once before it's used the first time to ensure consistent behavior.\");            }            KeventBus.defaultInstance = build();            return KeventBus.defaultInstance;        }    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "build", "params": [], "throws": null, "modifiers": ["public"], "return_type": "KeventBus", "snippet": "    public KeventBus build() {        return new KeventBus(this);    }", "url": "https://raw.githubusercontent.com/chenjk-520/keventbus/master/keventbus/src/main/java/com/util/keventbus/EventBusBuilder.java", "stars": "7", "class": {"name": "EventBusBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getEnergyCost", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getEnergyCost() {        return 10;    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Item/ItemUpgrades/ItemBrightnessUpgrade.java", "stars": "2", "class": {"name": "ItemBrightnessUpgrade", "extends": "ItemUpgradeBlank", "implements": null, "modifiers": ["public"]}}, {"method_name": "getStreamFromNetwork", "params": ["String", "Object"], "throws": ["IOException"], "modifiers": ["protected"], "return_type": "InputStream", "snippet": "\tprotected InputStream getStreamFromNetwork(String imageUri, Object extra) throws IOException {\t\tHttpGet httpRequest = new HttpGet(imageUri);\t\tHttpResponse response = httpClient.execute(httpRequest);\t\tHttpEntity entity = response.getEntity();\t\tBufferedHttpEntity bufHttpEntity = new BufferedHttpEntity(entity);\t\treturn bufHttpEntity.getContent();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/download/HttpClientImageDownloader.java", "stars": "74", "class": {"name": "HttpClientImageDownloader", "extends": "BaseImageDownloader", "implements": null, "modifiers": ["public"]}}, {"method_name": "start", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void start(Activity act) {        Intent starter = new Intent(act, GraceViewPagerSupportActivity.class);        act.startActivity(starter);    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "GraceViewPagerSupportActivity", "extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_grace_view_pager_support);        buildTestData();        mViewPager = findViewById(R.id.vp);        mAdapter = new Adapter(mData);        mViewPager.setAdapter(mAdapter);        mViewPager.setPageTransformer(false, new Transformer(mAdapter));        // \u6dfb\u52a0\u4e00\u5c4f\u591a\u9875\u652f\u6301        mMultiPagePlugin = new GraceMultiPagePlugin.Builder(mViewPager)                .pageHeightWidthRatio(2f)                .pageHorizontalMinMargin(dip2px(50))                .pageVerticalMinMargin(dip2px(50))                .build();        GraceViewPagerSupport.supportMultiPage(mViewPager, mMultiPagePlugin);        mViewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {            @Override            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {            }            @Override            public void onPageSelected(int position) {                Log.d(TAG, \"onPageSelected() called with: position = [\" + position + \"]\");            }            @Override            public void onPageScrollStateChanged(int state) {            }        });        mPlaceholderView = findViewById(R.id.placeholder);        findViewById(R.id.ratio_btn).setOnClickListener(this);        findViewById(R.id.horitontal_btn).setOnClickListener(this);        findViewById(R.id.vertical_btn).setOnClickListener(this);        findViewById(R.id.reverse_btn).setOnClickListener(this);        findViewById(R.id.add_btn).setOnClickListener(this);        findViewById(R.id.delete_btn).setOnClickListener(this);        findViewById(R.id.change_padding_btn).setOnClickListener(this);        findViewById(R.id.change_margin_btn).setOnClickListener(this);        findViewById(R.id.locate_btn).setOnClickListener(this);        findViewById(R.id.smooth_btn).setOnClickListener(this);    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "GraceViewPagerSupportActivity", "extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"method_name": "buildTestData", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void buildTestData() {        for (int i = 0; i < 10; i++) {            mData.add(\"item:\" + i);        }    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "GraceViewPagerSupportActivity", "extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"method_name": "onClick", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {        int _50dp = dip2px(50);        int _80dp = dip2px(80);        switch (v.getId()) {            case R.id.ratio_btn:                float ratio = mMultiPagePlugin.getPageHeightWidthRatio();                if (ratio == 2) {                    ratio = 1;                } else {                    ratio = 2;                }                // \u4fee\u6539\u6bd4\u4f8b                mMultiPagePlugin.setPageHeightWidthRatio(ratio);                break;            case R.id.horitontal_btn:                int horizontalMinMargin = mMultiPagePlugin.getPageHorizontalMinMargin();                if (horizontalMinMargin == _50dp) {                    horizontalMinMargin = _80dp;                } else {                    horizontalMinMargin = _50dp;                }                // \u4fee\u6539\u6c34\u5e73\u6700\u5c0f\u95f4\u8ddd                mMultiPagePlugin.setPageHorizontalMinMargin(horizontalMinMargin);                break;            case R.id.vertical_btn:                int verticalMinMargin = mMultiPagePlugin.getPageVerticalMinMargin();                if (verticalMinMargin == _50dp) {                    verticalMinMargin = _80dp;                } else {                    verticalMinMargin = _50dp;                }                // \u4fee\u6539\u5782\u76f4\u6700\u5c0f\u95f4\u8ddd                mMultiPagePlugin.setPageVerticalMinMargin(verticalMinMargin);                break;            case R.id.reverse_btn:                Collections.reverse(mData);                mAdapter.notifyDataSetChanged();                break;            case R.id.add_btn:                mData.add(mViewPager.getCurrentItem(), \"add item:\" + mData.size());                mAdapter.notifyDataSetChanged();                break;            case R.id.delete_btn:                if (mData.size() > 0) {                    mData.remove(mViewPager.getCurrentItem());                    mAdapter.notifyDataSetChanged();                }                break;            case R.id.change_padding_btn:                boolean visible = mPlaceholderView.getVisibility() == View.VISIBLE;                mPlaceholderView.setVisibility(visible ? View.GONE : View.VISIBLE);                break;            case R.id.change_margin_btn:                int pageMargin = mViewPager.getPageMargin();                if (pageMargin == 0) {                    pageMargin = dip2px(10);                } else {                    pageMargin = 0;                }                // \u4f7f\u7528GraceViewPagerSupport.setPageMargin()\u6765\u8bbe\u7f6epageMargin\uff09//                mViewPager.setPageMargin(pageMargin);                GraceViewPagerSupport.setPageMargin(mViewPager, pageMargin);                break;            case R.id.locate_btn:            case R.id.smooth_btn:                int nextInt = new Random().nextInt(mData.size());                mViewPager.setCurrentItem(nextInt, v.getId() == R.id.smooth_btn);                break;        }    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "GraceViewPagerSupportActivity", "extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"method_name": "dip2px", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int dip2px(float dpValue) {        final float scale = getResources().getDisplayMetrics().density;        return (int) (dpValue * scale + 0.5f);    }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "GraceViewPagerSupportActivity", "extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"method_name": "transformPageWithCorrectPosition", "params": ["View", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void transformPageWithCorrectPosition(@NonNull View page, float position) {            if (position >= -1 && position <= 1) {                // [-1,1]\uff0c\u4e2d\u95f4\u4ee5\u53ca\u76f8\u90bb\u7684\u9875\u9762\uff0c\u4e00\u822c\u76f8\u90bb\u7684\u624d\u4f1a\u7528\u4e8e\u8ba1\u7b97\u52a8\u753b                float scale = SCALE + (1 - SCALE) * (1 - Math.abs(position));                page.setScaleX(scale);                page.setScaleY(scale);            } else {                // [-Infinity,-1)\u3001(1,+Infinity]\uff0c\u8d85\u51fa\u76f8\u90bb\u7684\u8303\u56f4                page.setScaleX(SCALE);                page.setScaleY(SCALE);            }        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "Transformer", "extends": "GracePageTransformer", "implements": null, "modifiers": ["private"]}}, {"method_name": "instantiateItemView", "params": ["ViewGroup", "String", "int"], "throws": null, "modifiers": ["protected"], "return_type": "View", "snippet": "        protected View instantiateItemView(@NonNull ViewGroup container, String item, int position) {            return getLayoutInflater().inflate(R.layout.page_item, container, false);        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "Adapter", "extends": "GracePagerAdapter", "implements": null, "modifiers": ["private"]}}, {"method_name": "bindItemView", "params": ["View", "String", "int", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void bindItemView(@NonNull View itemView, String item, int position, boolean first) {            TextView tv = itemView.findViewById(R.id.tv);            tv.setText(item);        }", "url": "https://raw.githubusercontent.com/wurensen/GraceViewPager/master/app/src/main/java/com/lancewu/graceviewpager/example/GraceViewPagerSupportActivity.java", "stars": "331", "class": {"name": "Adapter", "extends": "GracePagerAdapter", "implements": null, "modifiers": ["private"]}}, {"method_name": "onProgressChanged", "params": ["HtmlView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onProgressChanged(HtmlView view, int newProgress) {    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/htmlwidget/HtmlChromeClient.java", "stars": "74", "class": {"name": "HtmlChromeClient", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onAdapterChanged", "params": ["android", "android", "android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAdapterChanged (android.support.v4.view.ViewPager p0, android.support.v4.view.PagerAdapter p1, android.support.v4.view.PagerAdapter p2)\t{\t\tn_onAdapterChanged (p0, p1, p2);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnAdapterChangeListenerImplementor.java", "stars": "2", "class": {"name": "ViewPager_OnAdapterChangeListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_onAdapterChanged", "params": ["android", "android", "android"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_onAdapterChanged (android.support.v4.view.ViewPager p0, android.support.v4.view.PagerAdapter p1, android.support.v4.view.PagerAdapter p2);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnAdapterChangeListenerImplementor.java", "stars": "2", "class": {"name": "ViewPager_OnAdapterChangeListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnAdapterChangeListenerImplementor.java", "stars": "2", "class": {"name": "ViewPager_OnAdapterChangeListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/v4/view/ViewPager_OnAdapterChangeListenerImplementor.java", "stars": "2", "class": {"name": "ViewPager_OnAdapterChangeListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "getDataSourceFactory", "params": ["Context", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "DataSource", "snippet": "    static public DataSource.Factory getDataSourceFactory(Context context, boolean preview) {        return new DefaultDataSourceFactory(context, preview ? null : new DefaultBandwidthMeter(),                getHttpDataSourceFactory(context, preview));    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/source/CustomSourceTag.java", "stars": "2", "class": {"name": "CustomSourceTag", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getHttpDataSourceFactory", "params": ["Context", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "DataSource", "snippet": "    static public DataSource.Factory getHttpDataSourceFactory(Context context, boolean preview) {        DefaultHttpDataSourceFactory dataSourceFactory = new DefaultHttpDataSourceFactory(Util.getUserAgent(context,                \"yout tag\"), preview ? null : new DefaultBandwidthMeter());        return dataSourceFactory;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/source/CustomSourceTag.java", "stars": "2", "class": {"name": "CustomSourceTag", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCancelPayment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCancelPayment() {        doNothing().when(paymentProviderService).cancelPayment(anyString());        paymentService.cancelPayment(\"test\");        verify(paymentProviderService).cancelPayment(anyString());    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCancelPaymentException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCancelPaymentException() {        assertThrows(PaymentNotSetServiceException.class, () -> paymentService.cancelPayment(null));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testFinalizePayment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testFinalizePayment() {        Leasing leasing = new Leasing();        leasing.setPaymentSessionId(\"testid\");        FinalizePaymentAtPaymentProviderDTO finalizePaymentAtPaymentProviderDTO = new FinalizePaymentAtPaymentProviderDTO(null, leasing);        doNothing().when(paymentProviderService).finalizePayment(eq(finalizePaymentAtPaymentProviderDTO));        when(securityHelperService.getLoggedInUser()).thenReturn(new User());        paymentService.finalizePayment(leasing);        verify(paymentProviderService).finalizePayment(eq(finalizePaymentAtPaymentProviderDTO));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testFinalizePaymentLeasingNullShouldThrowException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testFinalizePaymentLeasingNullShouldThrowException() {        assertThrows(PaymentNotSetServiceException.class, () -> paymentService.finalizePayment(null));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testFinalizePaymentPaymentSessionIdNullShouldThrowException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testFinalizePaymentPaymentSessionIdNullShouldThrowException() {        Leasing leasing = new Leasing();        leasing.setPaymentSessionId(null);        assertThrows(PaymentNotSetServiceException.class, () -> paymentService.finalizePayment(leasing));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCreatePaymentAccount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreatePaymentAccount() {        String email = \"test@mail.com\";        String iban = \"AT1231231231123\";        CreatePaymentProviderAccountDTO createPaymentProviderAccountDTO = new CreatePaymentProviderAccountDTO(email, iban);        when(paymentProviderService.createAccount(createPaymentProviderAccountDTO)).thenReturn(null);        paymentService.createPaymentAccount(email, iban);        verify(paymentProviderService).createAccount(createPaymentProviderAccountDTO);    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCreateAccountEmptyIban", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateAccountEmptyIban() {        assertThrows(BankAccountCreationEmailEmptyServiceException.class, () -> this.paymentService.createPaymentAccount(\"test@mail.com\", null));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testCreateAccountEmptyEmail", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCreateAccountEmptyEmail() {        assertThrows(BankAccountCreationEmailEmptyServiceException.class, () -> this.paymentService.createPaymentAccount(null, \"AT12312312313\"));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/PaymentServiceTest.java", "stars": "2", "class": {"name": "PaymentServiceTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "read", "params": ["byte"], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read(byte[] buffer) throws ProxyCacheException {        return arrayInputStream.read(buffer, 0, buffer.length);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArraySource.java", "stars": "2", "class": {"name": "ByteArraySource", "extends": null, "implements": ["Source"], "modifiers": ["public"]}}, {"method_name": "length", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "long", "snippet": "    public long length() throws ProxyCacheException {        return data.length;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArraySource.java", "stars": "2", "class": {"name": "ByteArraySource", "extends": null, "implements": ["Source"], "modifiers": ["public"]}}, {"method_name": "open", "params": ["long"], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void open(long offset) throws ProxyCacheException {        arrayInputStream = new ByteArrayInputStream(data);        arrayInputStream.skip(offset);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArraySource.java", "stars": "2", "class": {"name": "ByteArraySource", "extends": null, "implements": ["Source"], "modifiers": ["public"]}}, {"method_name": "close", "params": [], "throws": ["ProxyCacheException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() throws ProxyCacheException {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/ByteArraySource.java", "stars": "2", "class": {"name": "ByteArraySource", "extends": null, "implements": ["Source"], "modifiers": ["public"]}}, {"method_name": "chooseHeight", "params": ["java", "int", "int", "int", "int", "android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void chooseHeight (java.lang.CharSequence p0, int p1, int p2, int p3, int p4, android.graphics.Paint.FontMetricsInt p5)\t{\t\tn_chooseHeight (p0, p1, p2, p3, p4, p5);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormattedStringExtensions_LineHeightSpan.java", "stars": "2", "class": {"name": "FormattedStringExtensions_LineHeightSpan", "extends": "java", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"method_name": "n_chooseHeight", "params": ["java", "int", "int", "int", "int", "android"], "throws": null, "modifiers": ["native", "private"], "return_type": "void", "snippet": "\tprivate native void n_chooseHeight (java.lang.CharSequence p0, int p1, int p2, int p3, int p4, android.graphics.Paint.FontMetricsInt p5);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormattedStringExtensions_LineHeightSpan.java", "stars": "2", "class": {"name": "FormattedStringExtensions_LineHeightSpan", "extends": "java", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormattedStringExtensions_LineHeightSpan.java", "stars": "2", "class": {"name": "FormattedStringExtensions_LineHeightSpan", "extends": "java", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/FormattedStringExtensions_LineHeightSpan.java", "stars": "2", "class": {"name": "FormattedStringExtensions_LineHeightSpan", "extends": "java", "implements": ["mono", "android", "android", "android"], "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_play_empty_control);        ButterKnife.bind(this);        isTransition = getIntent().getBooleanExtra(TRANSITION, false);        init();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {        String url = \"https://res.exexm.com/cw_145225549855002\";        videoPlayer.setUp(url, true, \"\");        //\u8fc7\u6e21\u52a8\u753b        initTransition();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onPause", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {        super.onPause();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onResume", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {        super.onResume();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onDestroy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {        super.onDestroy();        videoPlayer.release();        if (orientationUtils != null)            orientationUtils.releaseListener();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onBackPressed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {        //\u91ca\u653e\u6240\u6709        videoPlayer.setVideoAllCallBack(null);        GSYVideoManager.releaseAllVideos();        if (isTransition && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {            super.onBackPressed();        } else {            new Handler().postDelayed(new Runnable() {                @Override                public void run() {                    finish();                    overridePendingTransition(R.anim.abc_fade_in, R.anim.abc_fade_out);                }            }, 500);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "initTransition", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initTransition() {        if (isTransition && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {            postponeEnterTransition();            ViewCompat.setTransitionName(videoPlayer, IMG_TRANSITION);            addTransitionListener();            startPostponedEnterTransition();        } else {            videoPlayer.startPlayLogic();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "addTransitionListener", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean addTransitionListener() {        transition = getWindow().getSharedElementEnterTransition();        if (transition != null) {            transition.addListener(new OnTransitionListener(){                @Override                public void onTransitionEnd(Transition transition) {                    super.onTransitionEnd(transition);                    videoPlayer.startPlayLogic();                    transition.removeListener(this);                }            });            return true;        }        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayEmptyControlActivity.java", "stars": "2", "class": {"name": "PlayEmptyControlActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onNavigationItemSelected", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onNavigationItemSelected (android.view.MenuItem p0)\t{\t\treturn n_onNavigationItemSelected (p0);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/design/widget/BottomNavigationView_OnNavigationItemSelectedListenerImplementor.java", "stars": "2", "class": {"name": "BottomNavigationView_OnNavigationItemSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_onNavigationItemSelected", "params": ["android"], "throws": null, "modifiers": ["native", "private"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onNavigationItemSelected (android.view.MenuItem p0);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/design/widget/BottomNavigationView_OnNavigationItemSelectedListenerImplementor.java", "stars": "2", "class": {"name": "BottomNavigationView_OnNavigationItemSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/design/widget/BottomNavigationView_OnNavigationItemSelectedListenerImplementor.java", "stars": "2", "class": {"name": "BottomNavigationView_OnNavigationItemSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/mono/android/support/design/widget/BottomNavigationView_OnNavigationItemSelectedListenerImplementor.java", "stars": "2", "class": {"name": "BottomNavigationView_OnNavigationItemSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setUp() {        server = MockBukkit.mock();        plugin = MockBukkit.loadWith(LimitsPlugin.class, new File(\"src/test/resources/plugin.yml\"));        limitsManager = new LimitsManager(plugin);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "tearDown", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void tearDown() {        MockBukkit.unmock();    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "beforeEach", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void beforeEach() {        Path configPath = new File(\"src/test/resources\", \"test-limit1.yaml\").toPath();        BlockPlacementLimitConfig config = new BlockPlacementLimitConfig(configPath);        config.load();        limit = new BlockPlacementLimit(\"test\", limitsManager);        limit.load(config);        plugin.registerEvents(limit);        player = server.addPlayer();        player.addAttachment(plugin, Constants.PERMISSION_PREFIX + \"test\", true);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldIncreaseLimitCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldIncreaseLimitCount() {        Block block = getBlock();        limit.addPlacedBlock(player, block);        PlayerBlockPlacementLimit playerLimit = limitsManager.getPlayerLimit(player);        assertThat(playerLimit).isNotNull();        assertThat(playerLimit.getCount(block.getType())).isEqualTo(1);        for (int i = 0; i < 10; i++) {            limit.addPlacedBlock(player, getBlock());        }        assertThat(playerLimit.getCount(block.getType()))                .isBetween(1, 11);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldDecreaseLimitCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldDecreaseLimitCount() {        World world = server.getWorld(\"world\");        assertThat(world).isNotNull();        PlayerBlockPlacementLimit playerLimit = limitsManager.getPlayerLimit(player);        for (int i = 0; i < 5; i++) {            playerLimit.addBlock(world.getBlockAt(i, i, i));        }        Block block = world.getBlockAt(0, 0, 0);        assertThat(playerLimit.getCounts()).hasSizeBetween(1, 5);        assertThat(playerLimit.getLocations()).hasSize(5);        int count = playerLimit.getCount(block.getType());        playerLimit.removeBlock(block);        assertThat(playerLimit.getCount(block.getType())).isEqualTo(count - 1);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "blockBreakEventShouldDecreaseLimitCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void blockBreakEventShouldDecreaseLimitCount() {        World world = server.getWorld(\"world\");        assertThat(world).isNotNull();        Block block = world.getBlockAt(0, 0, 0);        limit.addPlacedBlock(player, block);        Material blockType = block.getType();        assertThat(limitsManager.getPlayerLimit(player).getCount(blockType)).isEqualTo(1);        player.simulateBlockBreak(block);        assertThat(limitsManager.getPlayerLimit(player).getCount(blockType)).isEqualTo(0);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getBlock", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Block", "snippet": "    private Block getBlock() {        World world = server.getWorld(\"world\");        assertThat(world).isNotNull();        return world.getBlockAt(RandomUtils.nextInt(256), RandomUtils.nextInt(128), RandomUtils.nextInt(256));    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "afterEach", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterEach() {        plugin.unregisterEvents(limit);    }", "url": "https://raw.githubusercontent.com/Silthus/sLimits/master/src/test/java/net/silthus/slimits/limits/BlockPlacementLimitTest.java", "stars": "3", "class": {"name": "BlockPlacementLimitTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "execute", "params": ["JobExecutionContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void execute(final JobExecutionContext context) {    final JobDataMap data = context.getMergedJobDataMap();    final int projectId = data.getInt(PROJECT_ID);    final Project project = this.projectManager.getProject(projectId);    final String flowId = data.getString(FLOW_ID);    final int flowVersion = data.getInt(FLOW_VERSION);    final String submitUser = data.getString(SUBMIT_USER);    final FlowTrigger flowTrigger = (FlowTrigger) data.get(FLOW_TRIGGER);    this.triggerService.startTrigger(flowTrigger, flowId, flowVersion, submitUser, project);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/quartz/FlowTriggerQuartzJob.java", "stars": "18", "class": {"name": "FlowTriggerQuartzJob", "extends": "AbstractQuartzJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setUp() throws Exception {    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/bringrags/mybatis-config.xml\")) {      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);      sqlSession = sqlSessionFactory.openSession();      conn = sqlSession.getConnection();      ScriptRunner runner = new ScriptRunner(conn);      runner.setLogWriter(null);      runner.runScript(new StringReader(\"DROP TABLE IF EXISTS SimpleObject;\"));      runner.runScript(new StringReader(\"DROP TABLE IF EXISTS SimpleChildObject;\"));      runner.runScript(new StringReader(\"CREATE TABLE SimpleObject (id VARCHAR(5) NOT NULL);\"));      runner.runScript(new StringReader(\"CREATE TABLE SimpleChildObject (id VARCHAR(5) NOT NULL, simple_object_id VARCHAR(5) NOT NULL);\"));      runner.runScript(new StringReader(\"INSERT INTO SimpleObject (id) values ('10000');\"));      runner.runScript(new StringReader(\"INSERT INTO SimpleChildObject (id, simple_object_id) values ('20000', '10000');\"));      simpleChildObjectMapper = sqlSession.getMapper(SimpleChildObjectMapper.class);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/bringrags/SimpleObjectTest.java", "stars": "15", "class": {"name": "SimpleObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "tearDown", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void tearDown() throws Exception {    conn.close();    sqlSession.close();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/bringrags/SimpleObjectTest.java", "stars": "15", "class": {"name": "SimpleObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testGetById", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testGetById() {    SimpleChildObject sc = simpleChildObjectMapper.getSimpleChildObjectById(\"20000\");    Assertions.assertNotNull(sc);    Assertions.assertNotNull(sc.getSimpleObject());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/bringrags/SimpleObjectTest.java", "stars": "15", "class": {"name": "SimpleObjectTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "newInstance", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "MediaContainerFragment", "snippet": "    public static MediaContainerFragment newInstance() {        return new MediaContainerFragment();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/MediaContainerFragment.java", "stars": "4", "class": {"name": "MediaContainerFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreateView", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        return inflater.inflate(R.layout.fragment_media_container, container, false);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/MediaContainerFragment.java", "stars": "4", "class": {"name": "MediaContainerFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onViewCreated", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        ButterKnife.bind(this, view);        MobileButterApplication.getAppContext()                .getComponent()                .inject(this);        MediaProvider mProvider = providerManager.getCurrentMediaProvider();        MediaPagerAdapter mAdapter = new MediaPagerAdapter(mProvider, getChildFragmentManager(), mProvider.getNavigation());        mViewPager.setAdapter(mAdapter);        mViewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {            @Override            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {            }            @Override            public void onPageSelected(int position) {                mSelection = position;            }            @Override            public void onPageScrollStateChanged(int state) {            }        });        mSelection = mProvider.getDefaultNavigationIndex();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/MediaContainerFragment.java", "stars": "4", "class": {"name": "MediaContainerFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onActivityCreated", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {        super.onActivityCreated(savedInstanceState);        ((MainActivity) getActivity()).updateTabs(this, mSelection);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/MediaContainerFragment.java", "stars": "4", "class": {"name": "MediaContainerFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "getViewPager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ViewPager", "snippet": "    public ViewPager getViewPager() {        return mViewPager;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/MediaContainerFragment.java", "stars": "4", "class": {"name": "MediaContainerFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCurrentSelection", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getCurrentSelection() {        return mSelection;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/MediaContainerFragment.java", "stars": "4", "class": {"name": "MediaContainerFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onInterceptTouchEvent", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onInterceptTouchEvent(MotionEvent ev) {        // \u5f53 PhotoView \u548c ViewPager \u7ec4\u5408\u65f6 \uff0c\u7528\u53cc\u6307\u8fdb\u884c\u653e\u5927\u65f6 \u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u4f46\u662f\u7528\u53cc\u6307\u8fdb\u884c\u7f29\u5c0f\u7684\u65f6\u5019\uff0c\u7a0b\u5e8f\u5c31\u4f1a\u5d29\u6389        // \u5e76\u4e14\u629b\u51fajava.lang.IllegalArgumentException: pointerIndex out of range        try {            return super.onInterceptTouchEvent(ev);        } catch (IllegalArgumentException | ArrayIndexOutOfBoundsException ignored) {            return false;        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/PhotoViewPager.java", "stars": "1", "class": {"name": "PhotoViewPager", "extends": "ViewPager", "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "registerCacheListener", "params": ["CacheListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerCacheListener(CacheListener cacheListener) {        this.listener = cacheListener;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "processRequest", "params": ["GetRequest", "Socket"], "throws": ["IOException", "ProxyCacheException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void processRequest(GetRequest request, Socket socket) throws IOException, ProxyCacheException {        OutputStream out = new BufferedOutputStream(socket.getOutputStream());        String responseHeaders = newResponseHeaders(request);        out.write(responseHeaders.getBytes(\"UTF-8\"));        long offset = request.rangeOffset;        if (isUseCache(request)) {            responseWithCache(out, offset);        } else {            responseWithoutCache(out, offset);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "isUseCache", "params": ["GetRequest"], "throws": ["ProxyCacheException"], "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isUseCache(GetRequest request) throws ProxyCacheException {        long sourceLength = source.length();        boolean sourceLengthKnown = sourceLength > 0;        long cacheAvailable = cache.available();        // do not use cache for partial requests which too far from available cache. It seems user seek video.        return !sourceLengthKnown || !request.partial || request.rangeOffset <= cacheAvailable + sourceLength * NO_CACHE_BARRIER;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "newResponseHeaders", "params": ["GetRequest"], "throws": ["IOException", "ProxyCacheException"], "modifiers": ["private"], "return_type": "String", "snippet": "    private String newResponseHeaders(GetRequest request) throws IOException, ProxyCacheException {        String mime = source.getMime();        boolean mimeKnown = !TextUtils.isEmpty(mime);        long length = cache.isCompleted() ? cache.available() : source.length();        boolean lengthKnown = length >= 0;        long contentLength = request.partial ? length - request.rangeOffset : length;        boolean addRange = lengthKnown && request.partial;        return new StringBuilder()                .append(request.partial ? \"HTTP/1.1 206 PARTIAL CONTENT\\n\" : \"HTTP/1.1 200 OK\\n\")                .append(\"Accept-Ranges: bytes\\n\")                .append(lengthKnown ? format(\"Content-Length: %d\\n\", contentLength) : \"\")                .append(addRange ? format(\"Content-Range: bytes %d-%d/%d\\n\", request.rangeOffset, length - 1, length) : \"\")                .append(mimeKnown ? format(\"Content-Type: %s\\n\", mime) : \"\")                .append(\"\\n\") // headers end                .toString();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "responseWithCache", "params": ["OutputStream", "long"], "throws": ["ProxyCacheException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void responseWithCache(OutputStream out, long offset) throws ProxyCacheException, IOException {        byte[] buffer = new byte[DEFAULT_BUFFER_SIZE];        int readBytes;        while ((readBytes = read(buffer, offset, buffer.length)) != -1) {            out.write(buffer, 0, readBytes);            offset += readBytes;        }        out.flush();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "responseWithoutCache", "params": ["OutputStream", "long"], "throws": ["ProxyCacheException", "IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void responseWithoutCache(OutputStream out, long offset) throws ProxyCacheException, IOException {        HttpUrlSource newSourceNoCache = new HttpUrlSource(this.source);        try {            newSourceNoCache.open((int) offset);            byte[] buffer = new byte[DEFAULT_BUFFER_SIZE];            int readBytes;            while ((readBytes = newSourceNoCache.read(buffer)) != -1) {                out.write(buffer, 0, readBytes);                offset += readBytes;            }            out.flush();        } finally {            newSourceNoCache.close();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "format", "params": ["String", "Object"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String format(String pattern, Object... args) {        return String.format(Locale.US, pattern, args);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "onCachePercentsAvailableChanged", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCachePercentsAvailableChanged(int percents) {        if (listener != null) {            listener.onCacheAvailable(cache.file, source.getUrl(), percents);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/HttpProxyCache.java", "stars": "2", "class": {"name": "HttpProxyCache", "extends": "ProxyCache", "implements": null, "modifiers": []}}, {"method_name": "getHost", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHost() { return \"http://eva7base.com:99/\"; }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/server/TestServer.java", "stars": "1", "class": {"name": "TestServer", "extends": "ReleaseServer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getPath", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPath() {        return \"\";//        return \"api/\";    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/server/TestServer.java", "stars": "1", "class": {"name": "TestServer", "extends": "ReleaseServer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BodyType", "snippet": "    public BodyType getType() {        return BodyType.JSON;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/server/TestServer.java", "stars": "1", "class": {"name": "TestServer", "extends": "ReleaseServer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getInstance", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ImageLoader", "snippet": "\tpublic static ImageLoader getInstance() {\t\tif (instance == null) {\t\t\tsynchronized (ImageLoader.class) {\t\t\t\tif (instance == null) {\t\t\t\t\tinstance = new ImageLoader();\t\t\t\t}\t\t\t}\t\t}\t\treturn instance;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": ["ImageLoaderConfiguration"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "\tpublic synchronized void init(ImageLoaderConfiguration configuration) {\t\tif (configuration == null) {\t\t\tthrow new IllegalArgumentException(ERROR_INIT_CONFIG_WITH_NULL);\t\t}\t\tif (this.configuration == null) {\t\t\tif (configuration.writeLogs) L.d(LOG_INIT_CONFIG);\t\t\tengine = new ImageLoaderEngine(configuration);\t\t\tthis.configuration = configuration;\t\t} else {\t\t\tL.w(WARNING_RE_INIT_CONFIG);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isInited", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isInited() {\t\treturn configuration != null;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "displayImage", "params": ["String", "ImageView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void displayImage(String uri, ImageView imageView) {\t\tdisplayImage(uri, imageView, null, null);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "displayImage", "params": ["String", "ImageView", "DisplayImageOptions"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void displayImage(String uri, ImageView imageView, DisplayImageOptions options) {\t\tdisplayImage(uri, imageView, options, null);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "displayImage", "params": ["String", "ImageView", "ImageLoadingListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void displayImage(String uri, ImageView imageView, ImageLoadingListener listener) {\t\tdisplayImage(uri, imageView, null, listener);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "displayImage", "params": ["String", "ImageView", "DisplayImageOptions", "ImageLoadingListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void displayImage(String uri, ImageView imageView, DisplayImageOptions options, ImageLoadingListener listener) {\t\tcheckConfiguration();\t\tif (imageView == null) {\t\t\tthrow new IllegalArgumentException(ERROR_WRONG_ARGUMENTS);\t\t}\t\tif (listener == null) {\t\t\tlistener = emptyListener;\t\t}\t\tif (options == null) {\t\t\toptions = configuration.defaultDisplayImageOptions;\t\t}\t\tif (TextUtils.isEmpty(uri)) {\t\t\tengine.cancelDisplayTaskFor(imageView);\t\t\tlistener.onLoadingStarted(uri, imageView);\t\t\tif (options.shouldShowImageForEmptyUri()) {\t\t\t\timageView.setImageResource(options.getImageForEmptyUri());\t\t\t} else {\t\t\t\timageView.setImageDrawable(null);\t\t\t}\t\t\tlistener.onLoadingComplete(uri, imageView, null);\t\t\treturn;\t\t}\t\tImageSize targetSize = ImageSizeUtils.defineTargetSizeForView(imageView, configuration.maxImageWidthForMemoryCache, configuration.maxImageHeightForMemoryCache);\t\tString memoryCacheKey = MemoryCacheUtil.generateKey(uri, targetSize);\t\tengine.prepareDisplayTaskFor(imageView, memoryCacheKey);\t\tlistener.onLoadingStarted(uri, imageView);\t\tBitmap bmp = configuration.memoryCache.get(memoryCacheKey);\t\tif (bmp != null && !bmp.isRecycled()) {\t\t\tif (configuration.writeLogs) L.d(LOG_LOAD_IMAGE_FROM_MEMORY_CACHE, memoryCacheKey);\t\t\tif (options.shouldPostProcess()) {\t\t\t\tImageLoadingInfo imageLoadingInfo = new ImageLoadingInfo(uri, imageView, targetSize, memoryCacheKey, options, listener, engine.getLockForUri(uri));\t\t\t\tProcessAndDisplayImageTask displayTask = new ProcessAndDisplayImageTask(engine, bmp, imageLoadingInfo, options.getHandler());\t\t\t\tengine.submit(displayTask);\t\t\t} else {\t\t\t\toptions.getDisplayer().display(bmp, imageView, LoadedFrom.MEMORY_CACHE);\t\t\t\tlistener.onLoadingComplete(uri, imageView, bmp);\t\t\t}\t\t} else {\t\t\tif (options.shouldShowStubImage()) {\t\t\t\timageView.setImageResource(options.getStubImage());\t\t\t} else {\t\t\t\tif (options.isResetViewBeforeLoading()) {\t\t\t\t\timageView.setImageDrawable(null);\t\t\t\t}\t\t\t}\t\t\tImageLoadingInfo imageLoadingInfo = new ImageLoadingInfo(uri, imageView, targetSize, memoryCacheKey, options, listener, engine.getLockForUri(uri));\t\t\tLoadAndDisplayImageTask displayTask = new LoadAndDisplayImageTask(engine, imageLoadingInfo, options.getHandler());\t\t\tengine.submit(displayTask);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadImage", "params": ["String", "ImageLoadingListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void loadImage(String uri, ImageLoadingListener listener) {\t\tloadImage(uri, null, null, listener);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadImage", "params": ["String", "ImageSize", "ImageLoadingListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void loadImage(String uri, ImageSize minImageSize, ImageLoadingListener listener) {\t\tloadImage(uri, minImageSize, null, listener);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadImage", "params": ["String", "DisplayImageOptions", "ImageLoadingListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void loadImage(String uri, DisplayImageOptions options, ImageLoadingListener listener) {\t\tloadImage(uri, null, options, listener);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "loadImage", "params": ["String", "ImageSize", "DisplayImageOptions", "ImageLoadingListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void loadImage(String uri, ImageSize targetImageSize, DisplayImageOptions options, ImageLoadingListener listener) {\t\tcheckConfiguration();\t\tif (targetImageSize == null) {\t\t\ttargetImageSize = new ImageSize(configuration.maxImageWidthForMemoryCache, configuration.maxImageHeightForMemoryCache);\t\t}\t\tif (options == null) {\t\t\toptions = configuration.defaultDisplayImageOptions;\t\t}\t\tDisplayImageOptions optionsWithFakeDisplayer;\t\tif (options.getDisplayer() instanceof FakeBitmapDisplayer) {\t\t\toptionsWithFakeDisplayer = options;\t\t} else {\t\t\toptionsWithFakeDisplayer = new DisplayImageOptions.Builder().cloneFrom(options).displayer(fakeBitmapDisplayer).build();\t\t}\t\tImageView fakeImage = new ImageView(configuration.context);\t\tfakeImage.setLayoutParams(new LayoutParams(targetImageSize.getWidth(), targetImageSize.getHeight()));\t\tfakeImage.setScaleType(ScaleType.CENTER_CROP);\t\tdisplayImage(uri, fakeImage, optionsWithFakeDisplayer, listener);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "checkConfiguration", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void checkConfiguration() {\t\tif (configuration == null) {\t\t\tthrow new IllegalStateException(ERROR_NOT_INIT);\t\t}\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getMemoryCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MemoryCacheAware<String,Bitmap>", "snippet": "\tpublic MemoryCacheAware<String, Bitmap> getMemoryCache() {\t\tcheckConfiguration();\t\treturn configuration.memoryCache;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "clearMemoryCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clearMemoryCache() {\t\tcheckConfiguration();\t\tconfiguration.memoryCache.clear();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDiscCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DiscCacheAware", "snippet": "\tpublic DiscCacheAware getDiscCache() {\t\tcheckConfiguration();\t\treturn configuration.discCache;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "clearDiscCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clearDiscCache() {\t\tcheckConfiguration();\t\tconfiguration.discCache.clear();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getLoadingUriForView", "params": ["ImageView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getLoadingUriForView(ImageView imageView) {\t\treturn engine.getLoadingUriForView(imageView);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "cancelDisplayTask", "params": ["ImageView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void cancelDisplayTask(ImageView imageView) {\t\tengine.cancelDisplayTaskFor(imageView);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "denyNetworkDownloads", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void denyNetworkDownloads(boolean denyNetworkDownloads) {\t\tengine.denyNetworkDownloads(denyNetworkDownloads);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "handleSlowNetwork", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void handleSlowNetwork(boolean handleSlowNetwork) {\t\tengine.handleSlowNetwork(handleSlowNetwork);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "pause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void pause() {\t\tengine.pause();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "resume", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void resume() {\t\tengine.resume();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "stop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void stop() {\t\tengine.stop();\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "destroy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void destroy() {\t\tif (configuration != null && configuration.writeLogs) L.d(LOG_DESTROY);\t\tstop();\t\tengine = null;\t\tconfiguration = null;\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/ImageLoader.java", "stars": "74", "class": {"name": "ImageLoader", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\t//1\t\tint[] ns = { 1, 4, 9, 16, 25 };        for (int i = 4; i >= 0; i--) {            System.out.println(ns[i]);        }        //2        int sum = 0;        for (int i : ns) {            // TODO        \tsum += i;        }        System.out.println(sum); // 55                //3        double pi = 0;        int n = 1;        for (double i = 1; i < 1000000; i += 2) {//i\u82e5\u662fint \u7ed3\u679c\u8f93\u51fa\u4e3a4.0 \u56e0\u4e3a1/i=0,\u4e5f\u53ef\u518d\u540e\u9762\u505a\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362            // TODO       \t        \tif(n == 1) {        \t\tpi += 1/i;        \t\tn = 0;        \t}else {        \t\tpi -= 1/i;        \t\tn = 1;        \t}        }        System.out.println(pi*4);\t}", "url": "https://raw.githubusercontent.com/IzzyPrime/JavaWorkspace/master/JavaPractice/part1/src/com/flow/javapractice/FlowFor.java", "stars": "2", "class": {"name": "FlowFor", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String... args) {        GuiDemo main = new GuiDemo();        AppSettings settings = new AppSettings(true);        settings.setTitle(\"My Awesome Game\");        main.setSettings(settings);        main.start();    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/GuiDemo.java", "stars": "2", "class": {"name": "GuiDemo", "extends": "SimpleApplication", "implements": null, "modifiers": ["public"]}}, {"method_name": "simpleInitApp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void simpleInitApp() {        Mesh b = createBox(1, 1, 1);        Geometry geom = new Geometry(\"Box\", b);        Material mat = new Material(assetManager, \"Common/MatDefs/Misc/Unshaded.j3md\");        mat.setColor(\"Color\", ColorRGBA.Orange);        geom.setMaterial(mat);        rootNode.attachChild(geom);        GuiGlobals.initialize(this);        Container myWindow = new Container();        guiNode.attachChild(myWindow);        myWindow.setLocalTranslation(30, 450, 0);        // Add some elements        Label la = new Label(\"Move the Camera\");        myWindow.addChild(la);        Button clickMe = myWindow.addChild(new Button(\"Click Me\"));        clickMe.addClickCommands((Command<Button>) (Button source) -> {            try (Box box = App.cube()) {                Ason ason = box.bind(\"Table\", 1L).replace(Ason.class);                Long l = get(ason, Count, 0L);                set(ason, Count, l + 1L);                CommitResult cr = box.commit();            }            String text = App.auto.selectCount(\"from Table\") + \" , \";            text += App.auto.select(\"from Table\").toString();            la.setText(text);        });    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/GuiDemo.java", "stars": "2", "class": {"name": "GuiDemo", "extends": "SimpleApplication", "implements": null, "modifiers": ["public"]}}, {"method_name": "simpleUpdate", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void simpleUpdate(float tpf) {        super.simpleUpdate(tpf);    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/GuiDemo.java", "stars": "2", "class": {"name": "GuiDemo", "extends": "SimpleApplication", "implements": null, "modifiers": ["public"]}}, {"method_name": "destroy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroy() {        App.auto.getDatabase().close();        super.destroy();    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/GuiDemo.java", "stars": "2", "class": {"name": "GuiDemo", "extends": "SimpleApplication", "implements": null, "modifiers": ["public"]}}, {"method_name": "createBox", "params": ["float", "float", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "Mesh", "snippet": "    public static Mesh createBox(float x, float y, float z) {        return new com.jme3.scene.shape.Box(x, y, z);    }", "url": "https://raw.githubusercontent.com/iboxdb/jmegradle/master/src/main/java/demo/jmegradle/GuiDemo.java", "stars": "2", "class": {"name": "GuiDemo", "extends": "SimpleApplication", "implements": null, "modifiers": ["public"]}}, {"method_name": "setOrderByClause", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderByClause(String orderByClause) {        this.orderByClause = orderByClause;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOrderByClause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOrderByClause() {        return orderByClause;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDistinct", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDistinct(boolean distinct) {        this.distinct = distinct;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isDistinct", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDistinct() {        return distinct;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOredCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criteria>", "snippet": "    public List<Criteria> getOredCriteria() {        return oredCriteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "or", "params": ["Criteria"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void or(Criteria criteria) {        oredCriteria.add(criteria);    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "or", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria or() {        Criteria criteria = createCriteriaInternal();        oredCriteria.add(criteria);        return criteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria createCriteria() {        Criteria criteria = createCriteriaInternal();        if (oredCriteria.size() == 0) {            oredCriteria.add(criteria);        }        return criteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createCriteriaInternal", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Criteria", "snippet": "    protected Criteria createCriteriaInternal() {        Criteria criteria = new Criteria();        return criteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "clear", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {        oredCriteria.clear();        orderByClause = null;        distinct = false;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "PmsProductCategoryExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isValid", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isValid() {            return criteria.size() > 0;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "getAllCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getAllCriteria() {            return criteria;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "getCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getCriteria() {            return criteria;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "addCriterion", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition) {            if (condition == null) {                throw new RuntimeException(\"Value for condition cannot be null\");            }            criteria.add(new Criterion(condition));        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "addCriterion", "params": ["String", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value, String property) {            if (value == null) {                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");            }            criteria.add(new Criterion(condition, value));        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "addCriterion", "params": ["String", "Object", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value1, Object value2, String property) {            if (value1 == null || value2 == null) {                throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");            }            criteria.add(new Criterion(condition, value1, value2));        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNull() {            addCriterion(\"id is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNotNull() {            addCriterion(\"id is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdEqualTo(Long value) {            addCriterion(\"id =\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdNotEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotEqualTo(Long value) {            addCriterion(\"id <>\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdGreaterThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThan(Long value) {            addCriterion(\"id >\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdGreaterThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThanOrEqualTo(Long value) {            addCriterion(\"id >=\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdLessThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThan(Long value) {            addCriterion(\"id <\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdLessThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThanOrEqualTo(Long value) {            addCriterion(\"id <=\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIn(List<Long> values) {            addCriterion(\"id in\", values, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdNotIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotIn(List<Long> values) {            addCriterion(\"id not in\", values, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdBetween(Long value1, Long value2) {            addCriterion(\"id between\", value1, value2, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdNotBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotBetween(Long value1, Long value2) {            addCriterion(\"id not between\", value1, value2, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdIsNull() {            addCriterion(\"parent_id is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdIsNotNull() {            addCriterion(\"parent_id is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdEqualTo(Long value) {            addCriterion(\"parent_id =\", value, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdNotEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdNotEqualTo(Long value) {            addCriterion(\"parent_id <>\", value, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdGreaterThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdGreaterThan(Long value) {            addCriterion(\"parent_id >\", value, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdGreaterThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdGreaterThanOrEqualTo(Long value) {            addCriterion(\"parent_id >=\", value, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdLessThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdLessThan(Long value) {            addCriterion(\"parent_id <\", value, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdLessThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdLessThanOrEqualTo(Long value) {            addCriterion(\"parent_id <=\", value, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdIn(List<Long> values) {            addCriterion(\"parent_id in\", values, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdNotIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdNotIn(List<Long> values) {            addCriterion(\"parent_id not in\", values, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdBetween(Long value1, Long value2) {            addCriterion(\"parent_id between\", value1, value2, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andParentIdNotBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParentIdNotBetween(Long value1, Long value2) {            addCriterion(\"parent_id not between\", value1, value2, \"parentId\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIsNull() {            addCriterion(\"name is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIsNotNull() {            addCriterion(\"name is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameEqualTo(String value) {            addCriterion(\"name =\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotEqualTo(String value) {            addCriterion(\"name <>\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameGreaterThan(String value) {            addCriterion(\"name >\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameGreaterThanOrEqualTo(String value) {            addCriterion(\"name >=\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLessThan(String value) {            addCriterion(\"name <\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLessThanOrEqualTo(String value) {            addCriterion(\"name <=\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLike(String value) {            addCriterion(\"name like\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotLike(String value) {            addCriterion(\"name not like\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIn(List<String> values) {            addCriterion(\"name in\", values, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotIn(List<String> values) {            addCriterion(\"name not in\", values, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameBetween(String value1, String value2) {            addCriterion(\"name between\", value1, value2, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotBetween(String value1, String value2) {            addCriterion(\"name not between\", value1, value2, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelIsNull() {            addCriterion(\"level is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelIsNotNull() {            addCriterion(\"level is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelEqualTo(Integer value) {            addCriterion(\"level =\", value, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelNotEqualTo(Integer value) {            addCriterion(\"level <>\", value, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelGreaterThan(Integer value) {            addCriterion(\"level >\", value, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelGreaterThanOrEqualTo(Integer value) {            addCriterion(\"level >=\", value, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelLessThan(Integer value) {            addCriterion(\"level <\", value, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelLessThanOrEqualTo(Integer value) {            addCriterion(\"level <=\", value, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelIn(List<Integer> values) {            addCriterion(\"level in\", values, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelNotIn(List<Integer> values) {            addCriterion(\"level not in\", values, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelBetween(Integer value1, Integer value2) {            addCriterion(\"level between\", value1, value2, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andLevelNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLevelNotBetween(Integer value1, Integer value2) {            addCriterion(\"level not between\", value1, value2, \"level\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountIsNull() {            addCriterion(\"product_count is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountIsNotNull() {            addCriterion(\"product_count is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountEqualTo(Integer value) {            addCriterion(\"product_count =\", value, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountNotEqualTo(Integer value) {            addCriterion(\"product_count <>\", value, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountGreaterThan(Integer value) {            addCriterion(\"product_count >\", value, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountGreaterThanOrEqualTo(Integer value) {            addCriterion(\"product_count >=\", value, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountLessThan(Integer value) {            addCriterion(\"product_count <\", value, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountLessThanOrEqualTo(Integer value) {            addCriterion(\"product_count <=\", value, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountIn(List<Integer> values) {            addCriterion(\"product_count in\", values, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountNotIn(List<Integer> values) {            addCriterion(\"product_count not in\", values, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountBetween(Integer value1, Integer value2) {            addCriterion(\"product_count between\", value1, value2, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductCountNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductCountNotBetween(Integer value1, Integer value2) {            addCriterion(\"product_count not between\", value1, value2, \"productCount\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitIsNull() {            addCriterion(\"product_unit is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitIsNotNull() {            addCriterion(\"product_unit is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitEqualTo(String value) {            addCriterion(\"product_unit =\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitNotEqualTo(String value) {            addCriterion(\"product_unit <>\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitGreaterThan(String value) {            addCriterion(\"product_unit >\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitGreaterThanOrEqualTo(String value) {            addCriterion(\"product_unit >=\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitLessThan(String value) {            addCriterion(\"product_unit <\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitLessThanOrEqualTo(String value) {            addCriterion(\"product_unit <=\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitLike(String value) {            addCriterion(\"product_unit like\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitNotLike(String value) {            addCriterion(\"product_unit not like\", value, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitIn(List<String> values) {            addCriterion(\"product_unit in\", values, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitNotIn(List<String> values) {            addCriterion(\"product_unit not in\", values, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitBetween(String value1, String value2) {            addCriterion(\"product_unit between\", value1, value2, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andProductUnitNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andProductUnitNotBetween(String value1, String value2) {            addCriterion(\"product_unit not between\", value1, value2, \"productUnit\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusIsNull() {            addCriterion(\"nav_status is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusIsNotNull() {            addCriterion(\"nav_status is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusEqualTo(Integer value) {            addCriterion(\"nav_status =\", value, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusNotEqualTo(Integer value) {            addCriterion(\"nav_status <>\", value, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusGreaterThan(Integer value) {            addCriterion(\"nav_status >\", value, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusGreaterThanOrEqualTo(Integer value) {            addCriterion(\"nav_status >=\", value, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusLessThan(Integer value) {            addCriterion(\"nav_status <\", value, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusLessThanOrEqualTo(Integer value) {            addCriterion(\"nav_status <=\", value, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusIn(List<Integer> values) {            addCriterion(\"nav_status in\", values, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusNotIn(List<Integer> values) {            addCriterion(\"nav_status not in\", values, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusBetween(Integer value1, Integer value2) {            addCriterion(\"nav_status between\", value1, value2, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNavStatusNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNavStatusNotBetween(Integer value1, Integer value2) {            addCriterion(\"nav_status not between\", value1, value2, \"navStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusIsNull() {            addCriterion(\"show_status is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusIsNotNull() {            addCriterion(\"show_status is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusEqualTo(Integer value) {            addCriterion(\"show_status =\", value, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusNotEqualTo(Integer value) {            addCriterion(\"show_status <>\", value, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusGreaterThan(Integer value) {            addCriterion(\"show_status >\", value, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusGreaterThanOrEqualTo(Integer value) {            addCriterion(\"show_status >=\", value, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusLessThan(Integer value) {            addCriterion(\"show_status <\", value, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusLessThanOrEqualTo(Integer value) {            addCriterion(\"show_status <=\", value, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusIn(List<Integer> values) {            addCriterion(\"show_status in\", values, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusNotIn(List<Integer> values) {            addCriterion(\"show_status not in\", values, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusBetween(Integer value1, Integer value2) {            addCriterion(\"show_status between\", value1, value2, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andShowStatusNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andShowStatusNotBetween(Integer value1, Integer value2) {            addCriterion(\"show_status not between\", value1, value2, \"showStatus\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortIsNull() {            addCriterion(\"sort is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortIsNotNull() {            addCriterion(\"sort is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortEqualTo(Integer value) {            addCriterion(\"sort =\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortNotEqualTo(Integer value) {            addCriterion(\"sort <>\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortGreaterThan(Integer value) {            addCriterion(\"sort >\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortGreaterThanOrEqualTo(Integer value) {            addCriterion(\"sort >=\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortLessThan(Integer value) {            addCriterion(\"sort <\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortLessThanOrEqualTo(Integer value) {            addCriterion(\"sort <=\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortIn(List<Integer> values) {            addCriterion(\"sort in\", values, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortNotIn(List<Integer> values) {            addCriterion(\"sort not in\", values, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortBetween(Integer value1, Integer value2) {            addCriterion(\"sort between\", value1, value2, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortNotBetween(Integer value1, Integer value2) {            addCriterion(\"sort not between\", value1, value2, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIsNull() {            addCriterion(\"icon is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIsNotNull() {            addCriterion(\"icon is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconEqualTo(String value) {            addCriterion(\"icon =\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotEqualTo(String value) {            addCriterion(\"icon <>\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconGreaterThan(String value) {            addCriterion(\"icon >\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconGreaterThanOrEqualTo(String value) {            addCriterion(\"icon >=\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLessThan(String value) {            addCriterion(\"icon <\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLessThanOrEqualTo(String value) {            addCriterion(\"icon <=\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLike(String value) {            addCriterion(\"icon like\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotLike(String value) {            addCriterion(\"icon not like\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIn(List<String> values) {            addCriterion(\"icon in\", values, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotIn(List<String> values) {            addCriterion(\"icon not in\", values, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconBetween(String value1, String value2) {            addCriterion(\"icon between\", value1, value2, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotBetween(String value1, String value2) {            addCriterion(\"icon not between\", value1, value2, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsIsNull() {            addCriterion(\"keywords is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsIsNotNull() {            addCriterion(\"keywords is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsEqualTo(String value) {            addCriterion(\"keywords =\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsNotEqualTo(String value) {            addCriterion(\"keywords <>\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsGreaterThan(String value) {            addCriterion(\"keywords >\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsGreaterThanOrEqualTo(String value) {            addCriterion(\"keywords >=\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsLessThan(String value) {            addCriterion(\"keywords <\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsLessThanOrEqualTo(String value) {            addCriterion(\"keywords <=\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsLike(String value) {            addCriterion(\"keywords like\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsNotLike(String value) {            addCriterion(\"keywords not like\", value, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsIn(List<String> values) {            addCriterion(\"keywords in\", values, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsNotIn(List<String> values) {            addCriterion(\"keywords not in\", values, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsBetween(String value1, String value2) {            addCriterion(\"keywords between\", value1, value2, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andKeywordsNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andKeywordsNotBetween(String value1, String value2) {            addCriterion(\"keywords not between\", value1, value2, \"keywords\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "getCondition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCondition() {            return condition;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getValue() {            return value;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getSecondValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getSecondValue() {            return secondValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isNoValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isNoValue() {            return noValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isSingleValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSingleValue() {            return singleValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isBetweenValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isBetweenValue() {            return betweenValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isListValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isListValue() {            return listValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getTypeHandler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTypeHandler() {            return typeHandler;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductCategoryExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "onRender3D", "params": ["Render3DEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRender3D(Render3DEvent event) {        mc.world.loadedEntityList.forEach(entity -> {            if (doesQualify(entity)) {                Color clr = getColor(entity);                if (mode.equalsIgnoreCase(\"box\")) {                    Vec3d vec = MathUtil.interpolateEntity(entity, event.getPartialTicks());                    double posX = vec.x - mc.getRenderManager().renderPosX;                    double posY = vec.y - mc.getRenderManager().renderPosY;                    double posZ = vec.z - mc.getRenderManager().renderPosZ;                    float alpha = 40F;                    if (box) {                        if (entity instanceof EntityLivingBase) {                            EntityLivingBase ent = (EntityLivingBase) entity;                            if (ent.hurtTime > 0)                                alpha += 10;                        }                        RenderUtil.drawESP(new AxisAlignedBB(0.0, 0.0, 0.0, entity.width, entity.height, entity.width).offset(posX - entity.width / 2, posY, posZ - entity.width / 2), clr.getRed(), clr.getGreen(), clr.getBlue(), alpha);                    }                    if (outline)                        RenderUtil.drawESPOutline(new AxisAlignedBB(0.0, 0.0, 0.0, entity.width, entity.height, entity.width).offset(posX - entity.width / 2, posY, posZ - entity.width / 2), clr.getRed(), clr.getGreen(), clr.getBlue(), 255f, 1f);                }                /*if (mode.equalsIgnoreCase(\"outline\")) {                    mc.renderGlobal.entityOutlineShader.listShaders.forEach(shader -> {                        ShaderUniform radius = shader.getShaderManager().getShaderUniform(\"Radius\");                        if (radius != null)                            radius.set(radiusValue);                    });                    if (clr.getAlpha() != 0) {                        GL11.glPushMatrix();                        RenderUtil.glEnableOutlineMode(clr);                        mc.getRenderManager().renderEntityStatic(entity, event.getPartialTicks(), true);                        RenderUtil.glDisableOutlineMode();                        GL11.glPopMatrix();                    }                }*/            }            });    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/visual/EntityESP.java", "stars": "12", "class": {"name": "EntityESP", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "onOutline", "params": ["OutlineEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onOutline(OutlineEvent event) {        if (mode.equalsIgnoreCase(\"outline\")) {             mc.renderGlobal.entityOutlineShader.listShaders.forEach(shader -> {                ShaderUniform radius = shader.getShaderManager().getShaderUniform(\"Radius\");                if(radius != null)                    radius.set(radiusValue);            });            mc.world.loadedEntityList.forEach(entity -> {                if (doesQualify(entity)) {                    if (event.getEntity() == entity)                        event.setCancelled(true);                }            });        }    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/visual/EntityESP.java", "stars": "12", "class": {"name": "EntityESP", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "getColor", "params": ["Entity"], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "    public Color getColor(Entity entity) {        if (color) {            return new Color(red, green, blue);        }        if (Mercury.INSTANCE.getFriendManager().isFriend(entity.getName()))            return new Color(155, 100, 180);        if (entity.isSneaking())             return new Color(192, 58, 100);        if (entity instanceof EntityItem)            return new Color(116, 255, 253);        if (Mercury.INSTANCE.getModuleManager().find(KillAura.class).isEnabled() && KillAura.target != null && KillAura.target.equals(entity) && targetESP)            return new Color(233, 11, 0);        if (entity instanceof EntityPlayer)            return new Color(255, 63, 43);        return new Color(255, 125, 40);    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/visual/EntityESP.java", "stars": "12", "class": {"name": "EntityESP", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "doesQualify", "params": ["Entity"], "throws": null, "modifiers": ["private", "static"], "return_type": "boolean", "snippet": "    private static boolean doesQualify(Entity entity) {        return entity != null && entity.isEntityAlive() && RenderUtil.isInViewFrustrum(entity) && entity != mc.player                && ((entity instanceof EntityPlayer && players) || (entity instanceof EntityItem && items) || (entity instanceof EntityAnimal                || entity instanceof EntityMob || entity instanceof EntitySlime || entity instanceof EntityVillager) && mobs)                && (!entity.isInvisible() || invisibles);    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/visual/EntityESP.java", "stars": "12", "class": {"name": "EntityESP", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "makeToken", "params": ["XxlJobUser"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String makeToken(XxlJobUser xxlJobUser){        String tokenJson = JacksonUtil.writeValueAsString(xxlJobUser);        String tokenHex = new BigInteger(tokenJson.getBytes()).toString(16);        return tokenHex;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/service/LoginService.java", "stars": "1", "class": {"name": "LoginService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "parseToken", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "XxlJobUser", "snippet": "    private XxlJobUser parseToken(String tokenHex){        XxlJobUser xxlJobUser = null;        if (tokenHex != null) {            String tokenJson = new String(new BigInteger(tokenHex, 16).toByteArray());      // username_password(md5)            xxlJobUser = JacksonUtil.readValue(tokenJson, XxlJobUser.class);        }        return xxlJobUser;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/service/LoginService.java", "stars": "1", "class": {"name": "LoginService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "login", "params": ["HttpServletRequest", "HttpServletResponse", "String", "String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> login(HttpServletRequest request, HttpServletResponse response, String username, String password, boolean ifRemember){        // param        if (username==null || username.trim().length()==0 || password==null || password.trim().length()==0){            return new ReturnT<String>(500, I18nUtil.getString(\"login_param_empty\"));        }        // valid passowrd        XxlJobUser xxlJobUser = xxlJobUserDao.loadByUserName(username);        if (xxlJobUser == null) {            return new ReturnT<String>(500, I18nUtil.getString(\"login_param_unvalid\"));        }        String passwordMd5 = DigestUtils.md5DigestAsHex(password.getBytes());        if (!passwordMd5.equals(xxlJobUser.getPassword())) {            return new ReturnT<String>(500, I18nUtil.getString(\"login_param_unvalid\"));        }        String loginToken = makeToken(xxlJobUser);        // do login        CookieUtil.set(response, LOGIN_IDENTITY_KEY, loginToken, ifRemember);        return ReturnT.SUCCESS;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/service/LoginService.java", "stars": "1", "class": {"name": "LoginService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "logout", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> logout(HttpServletRequest request, HttpServletResponse response){        CookieUtil.remove(request, response, LOGIN_IDENTITY_KEY);        return ReturnT.SUCCESS;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/service/LoginService.java", "stars": "1", "class": {"name": "LoginService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "ifLogin", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "XxlJobUser", "snippet": "    public XxlJobUser ifLogin(HttpServletRequest request, HttpServletResponse response){        String cookieToken = CookieUtil.getValue(request, LOGIN_IDENTITY_KEY);        if (cookieToken != null) {            XxlJobUser cookieUser = null;            try {                cookieUser = parseToken(cookieToken);            } catch (Exception e) {                logout(request, response);            }            if (cookieUser != null) {                XxlJobUser dbUser = xxlJobUserDao.loadByUserName(cookieUser.getUsername());                if (dbUser != null) {                    if (cookieUser.getPassword().equals(dbUser.getPassword())) {                        return dbUser;                    }                }            }        }        return null;    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/service/LoginService.java", "stars": "1", "class": {"name": "LoginService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "tokenUrl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "JwtDsl", "snippet": "\tpublic JwtDsl tokenUrl(String url) {\t\tthis.tokenUrl = url;\t\treturn this;\t}", "url": "https://raw.githubusercontent.com/joshlong/jwt-spring-boot-starter/master/src/main/java/com/joshlong/jwt/JwtDsl.java", "stars": "7", "class": {"name": "JwtDsl", "extends": "AbstractHttpConfigurer", "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": ["HttpSecurity"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(HttpSecurity builder) throws Exception {\t\tbuilder.csrf(AbstractHttpConfigurer::disable).authorizeRequests(ae -> ae.anyRequest().authenticated())//\t\t\t\t.httpBasic(Customizer.withDefaults())//\t\t\t\t.oauth2ResourceServer(OAuth2ResourceServerConfigurer::jwt);\t}", "url": "https://raw.githubusercontent.com/joshlong/jwt-spring-boot-starter/master/src/main/java/com/joshlong/jwt/JwtDsl.java", "stars": "7", "class": {"name": "JwtDsl", "extends": "AbstractHttpConfigurer", "implements": null, "modifiers": ["public"]}}, {"method_name": "jwtDsl", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "JwtDsl", "snippet": "\tpublic static JwtDsl jwtDsl() {\t\treturn new JwtDsl();\t}", "url": "https://raw.githubusercontent.com/joshlong/jwt-spring-boot-starter/master/src/main/java/com/joshlong/jwt/JwtDsl.java", "stars": "7", "class": {"name": "JwtDsl", "extends": "AbstractHttpConfigurer", "implements": null, "modifiers": ["public"]}}, {"method_name": "getShader", "params": ["GLSurfaceView"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getShader(GLSurfaceView mGlSurfaceView) {        String shader =  \"#extension GL_OES_EGL_image_external : require\\n\" +                \"precision mediump float;\\n\"+                \"varying vec2 vTextureCoord;\\n\" +                \"float imageWidthFactor = \"+ (1 / (float)mGlSurfaceView.getWidth()) +\";\\n\" +                \"float imageHeightFactor = \" + ( 1 /(float)mGlSurfaceView.getHeight()) + \";\\n\" +                \"uniform samplerExternalOES sTexture;\\n\" +                \"float pixel = \" + pixel +\";\\n\" +                \"void main()\\n\" +                \"{\\n\" +                \"  vec2 uv  = vTextureCoord.xy;\\n\" +                \"  float dx = pixel * imageWidthFactor;\\n\" +                \"  float dy = pixel * imageHeightFactor;\\n\" +                \"  vec2 coord = vec2(dx * floor(uv.x / dx), dy * floor(uv.y / dy));\\n\" +                \"  vec3 tc = texture2D(sTexture, coord).xyz;\\n\" +                \"  gl_FragColor = vec4(tc, 1.0);\\n\" +                \"}\";        return shader;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/effect/PixelationEffect.java", "stars": "2", "class": {"name": "PixelationEffect", "extends": null, "implements": ["GSYVideoGLView"], "modifiers": ["public"]}}, {"method_name": "getInstance", "params": ["Class"], "throws": null, "modifiers": ["public", "static"], "return_type": "Logger", "snippet": "    public static Logger getInstance(Class c){        return logger =  Logger.getLogger(c);    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/utils/LogUtils.java", "stars": "10", "class": {"name": "LogUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/StepperRenderer.java", "stars": "2", "class": {"name": "StepperRenderer", "extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/StepperRenderer.java", "stars": "2", "class": {"name": "StepperRenderer", "extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"method_name": "doTransformer", "params": ["Record"], "throws": null, "modifiers": ["public"], "return_type": "Record", "snippet": "    public Record doTransformer(Record record) {        if (transformerExecs == null || transformerExecs.size() == 0) {            return record;        }        Record result = record;        long diffExaustedTime = 0;        String errorMsg = null;        boolean failed = false;        for (TransformerExecution transformerInfoExec : transformerExecs) {            long startTs = System.nanoTime();            if (transformerInfoExec.getClassLoader() != null) {                classLoaderSwapper.setCurrentThreadClassLoader(transformerInfoExec.getClassLoader());            }            /**             * \u5ef6\u8fdf\u68c0\u67e5transformer\u53c2\u6570\u7684\u6709\u6548\u6027\uff0c\u76f4\u63a5\u629b\u51fa\u5f02\u5e38\uff0c\u4e0d\u4f5c\u4e3a\u810f\u6570\u636e             * \u4e0d\u9700\u8981\u5728\u63d2\u4ef6\u4e2d\u68c0\u67e5\u53c2\u6570\u7684\u6709\u6548\u6027\u3002\u4f46\u53c2\u6570\u7684\u4e2a\u6570\u7b49\u548c\u63d2\u4ef6\u76f8\u5173\u7684\u53c2\u6570\uff0c\u5728\u63d2\u4ef6\u5185\u90e8\u68c0\u67e5             */            if (!transformerInfoExec.isChecked()) {                if (transformerInfoExec.getColumnIndex() != null && transformerInfoExec.getColumnIndex() >= record.getColumnNumber()) {                    throw DataXException.asDataXException(TransformerErrorCode.TRANSFORMER_ILLEGAL_PARAMETER,                            String.format(\"columnIndex[%s] out of bound[%s]. name=%s\",                                    transformerInfoExec.getColumnIndex(), record.getColumnNumber(),                                    transformerInfoExec.getTransformerName()));                }                transformerInfoExec.setIsChecked(true);            }            try {                result = transformerInfoExec.getTransformer().evaluate(result, transformerInfoExec.gettContext(), transformerInfoExec.getFinalParas());            } catch (Exception e) {                errorMsg = String.format(\"transformer(%s) has Exception(%s)\", transformerInfoExec.getTransformerName(),                        e.getMessage());                failed = true;                //LOG.error(errorMsg, e);                // transformerInfoExec.addFailedRecords(1);                //\u810f\u6570\u636e\u4e0d\u518d\u8fdb\u884c\u540e\u7eedtransformer\u5904\u7406\uff0c\u6309\u810f\u6570\u636e\u5904\u7406\uff0c\u5e76\u8fc7\u6ee4\u8be5record\u3002                break;            } finally {                if (transformerInfoExec.getClassLoader() != null) {                    classLoaderSwapper.restoreCurrentThreadClassLoader();                }            }            if (result == null) {                /**                 * \u8fd9\u4e2anull\u4e0d\u80fd\u4f20\u5230writer\uff0c\u5fc5\u987b\u6d88\u5316\u6389                 */                totalFilterRecords++;                //transformerInfoExec.addFilterRecords(1);                break;            }            long diff = System.nanoTime() - startTs;            //transformerInfoExec.addExaustedTime(diff);            diffExaustedTime += diff;            //transformerInfoExec.addSuccessRecords(1);        }        totalExaustedTime += diffExaustedTime;        if (failed) {            totalFailedRecords++;            this.pluginCollector.collectDirtyRecord(record, errorMsg);            return null;        } else {            totalSuccessRecords++;            return result;        }    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/TransformerExchanger.java", "stars": "23", "class": {"name": "TransformerExchanger", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "doStat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doStat() {        /**         * todo \u5bf9\u4e8e\u591a\u4e2atransformer\u65f6\uff0c\u5404\u4e2atransformer\u7684\u5355\u72ec\u7edf\u8ba1\u8fdb\u884c\u663e\u793a\u3002\u6700\u540e\u518d\u6c47\u603b\u6574\u4e2atransformer\u7684\u65f6\u95f4\u6d88\u8017.         * \u6682\u65f6\u4e0d\u7edf\u8ba1\u3002         *///        if (transformers.size() > 1) {//            for (ransformerInfoExec transformerInfoExec : transformers) {//                currentCommunication.setLongCounter(CommunicationTool.TRANSFORMER_NAME_PREFIX + transformerInfoExec.getTransformerName(), transformerInfoExec.getExaustedTime());//            }//        }        currentCommunication.setLongCounter(CommunicationTool.TRANSFORMER_SUCCEED_RECORDS, totalSuccessRecords);        currentCommunication.setLongCounter(CommunicationTool.TRANSFORMER_FAILED_RECORDS, totalFailedRecords);        currentCommunication.setLongCounter(CommunicationTool.TRANSFORMER_FILTER_RECORDS, totalFilterRecords);        currentCommunication.setLongCounter(CommunicationTool.TRANSFORMER_USED_TIME, totalExaustedTime);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/transport/exchanger/TransformerExchanger.java", "stars": "23", "class": {"name": "TransformerExchanger", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {        String hostAddress = controller.getServerAddress();        String portNumber = controller.getServerPort();        int portValue;        try {            portValue = Integer.parseInt(portNumber);        } catch (NumberFormatException e) {            logger.error(\"PortNumber is not valid!\");            Platform.runLater(() -> controller.setServerPort(\"PortNumber is not valid!\",                    \"-fx-text-fill: red;\"));            Platform.runLater(controller::resetLoginButton);            return;        }        client = new Client(hostAddress, portValue);        try {            userName = controller.getUserName();            if (OpeningWindowController.validateUserName(userName)) {                try {                    client.runClient(userName);                    if (client.isUserNameIsValid())                        Platform.runLater(this::openMainPage);                    else {                        logger.error(\"This username is not available!\");                        Platform.runLater(() -> controller.setUsernameTextField(\"This username is not available!\",                                \"-fx-text-fill: red;\"));                        Platform.runLater(controller::resetLoginButton);                    }                } catch (ClientInitializedBefore e) {                    logger.fatal(e.getMessage());                }            } else {                logger.error(\"This username is not valid!\");                Platform.runLater(() -> controller.setUsernameTextField(\"This username is not valid!\",                        \"-fx-text-fill: red;\"));                Platform.runLater(controller::resetLoginButton);            }        } catch (ServerIsNotAccessible e) {            Platform.runLater(controller::setIsOffline);            logger.error(\"Invalid data passed!\");        }    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/ClientConnector.java", "stars": "2", "class": {"name": "ClientConnector", "extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"method_name": "openMainPage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void openMainPage() {        try {            Platform.runLater(controller::setConnected);            FXMLLoader loader = new FXMLLoader(getClass().getResource(                    Utils.rebuildPath(\"\\\\FXML\\\\main.fxml\")            ));            Parent root = loader.load();            MainWindowController mainWindowController = loader.getController();            Stage mainWindowStage = new Stage();            mainWindowStage.setTitle(\"Chatroom\");            mainWindowStage.setScene(new Scene(root));            mainWindowStage.setResizable(false);            mainWindowStage.getIcons().add(new Image(                    new File(Utils.rebuildPath(\"src\\\\Resources\\\\Icons\\\\icon.png\")).toURI().toString()));            mainWindowStage.setTitle(\"Logged in as \" + userName);            mainWindowStage.setOnCloseRequest(mainWindowController::logoutAndExit);            mainWindowStage.show();            mainWindowController.setupClient(client);            final Node source = (Node) event.getSource();            final Stage currentStage = (Stage) source.getScene().getWindow();            currentStage.close();        } catch (IOException e) {            logger.fatal(\"Can't load main panel!\");        }    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Client/UserInterface/ClientConnector.java", "stars": "2", "class": {"name": "ClientConnector", "extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"method_name": "setShareTitle", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setShareTitle(String title) {            mShareTitle = title;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareData", "extends": null, "implements": null, "modifiers": ["public", "final", "static"]}}, {"method_name": "setShareUrl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setShareUrl(String url) {            mShareUrl = url;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareData", "extends": null, "implements": null, "modifiers": ["public", "final", "static"]}}, {"method_name": "setShareDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setShareDescription(String description) {            mShareDescription = description;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareData", "extends": null, "implements": null, "modifiers": ["public", "final", "static"]}}, {"method_name": "setShareLogo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setShareLogo(String logo) {            mShareLogo = new UMImage(mContext, logo);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareData", "extends": null, "implements": null, "modifiers": ["public", "final", "static"]}}, {"method_name": "setShareLogo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setShareLogo(@DrawableRes int id) {            mShareLogo = new UMImage(mContext, id);        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareData", "extends": null, "implements": null, "modifiers": ["public", "final", "static"]}}, {"method_name": "getShareUrl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getShareUrl() {            return mShareUrl;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareData", "extends": null, "implements": null, "modifiers": ["public", "final", "static"]}}, {"method_name": "create", "params": [], "throws": null, "modifiers": [], "return_type": "UMWeb", "snippet": "        UMWeb create() {            UMWeb content = new UMWeb(mShareUrl);            content.setTitle(mShareTitle);            if (mShareLogo != null) {                content.setThumb(mShareLogo);            }            content.setDescription(mShareDescription);            return content;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareData", "extends": null, "implements": null, "modifiers": ["public", "final", "static"]}}, {"method_name": "onStart", "params": ["SHARE_MEDIA"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onStart(SHARE_MEDIA platform) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareListenerWrapper", "extends": "SoftReference", "implements": ["UMShareListener"], "modifiers": ["public", "final", "static"]}}, {"method_name": "onResult", "params": ["SHARE_MEDIA"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onResult(SHARE_MEDIA platform) {            if (get() != null) {                get().onSucceed(mPlatform);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareListenerWrapper", "extends": "SoftReference", "implements": ["UMShareListener"], "modifiers": ["public", "final", "static"]}}, {"method_name": "onError", "params": ["SHARE_MEDIA", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onError(SHARE_MEDIA platform, Throwable t) {            if (get() != null) {                get().onError(mPlatform, t);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareListenerWrapper", "extends": "SoftReference", "implements": ["UMShareListener"], "modifiers": ["public", "final", "static"]}}, {"method_name": "onCancel", "params": ["SHARE_MEDIA"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onCancel(SHARE_MEDIA platform) {            if (get() != null) {                get().onCancel(mPlatform);            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/umeng/src/main/java/com/hjq/umeng/UmengShare.java", "stars": "1", "class": {"name": "ShareListenerWrapper", "extends": "SoftReference", "implements": ["UMShareListener"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setmultiplePackages", "params": ["ArrayList<Passenger_details>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setmultiplePackages(ArrayList<Passenger_details> passenger_details)    {        this.passenger_details = passenger_details;    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/RecyclerViewAdapter_2.java", "stars": "2", "class": {"name": "RecyclerViewAdapter_2", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreateViewHolder", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerViewAdapter_2", "snippet": "    public RecyclerViewAdapter_2.ViewHolder2 onCreateViewHolder(@NonNull ViewGroup parent, int viewType){        View v = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_2,parent,false);        return new ViewHolder2(v);    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/RecyclerViewAdapter_2.java", "stars": "2", "class": {"name": "RecyclerViewAdapter_2", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "onBindViewHolder", "params": ["RecyclerViewAdapter_2", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NonNull final RecyclerViewAdapter_2.ViewHolder2 holder , int position) {        holder.bind(position);    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/RecyclerViewAdapter_2.java", "stars": "2", "class": {"name": "RecyclerViewAdapter_2", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItemCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount()    {        return passenger_details.size();    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/RecyclerViewAdapter_2.java", "stars": "2", "class": {"name": "RecyclerViewAdapter_2", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "bind", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void bind(int pos)        {            Passenger_details pd = passenger_details.get(pos);            if (pd.b_id != 0 ) {                p_name.setText(pd.p_name);                String ct = String.valueOf(pd.p_age);                p_age.setText(ct);                p_gender.setText(pd.p_gender);            }        }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/RecyclerViewAdapter_2.java", "stars": "2", "class": {"name": "ViewHolder2", "extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        SpringApplication.run( UaaApplication.class);    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_uaa/src/main/java/com/okhurley/uaa/UaaApplication.java", "stars": "2", "class": {"name": "UaaApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "bcryptPasswordEncoder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BCryptPasswordEncoder", "snippet": "    public BCryptPasswordEncoder bcryptPasswordEncoder(){        return new BCryptPasswordEncoder();    }", "url": "https://raw.githubusercontent.com/okhurley/oauth2/master/oauth2_uaa/src/main/java/com/okhurley/uaa/UaaApplication.java", "stars": "2", "class": {"name": "UaaApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getJVMArguments", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String getJVMArguments() {    String args = super.getJVMArguments();    String typeGlobalJVMArgs =        getSysProps().getString(\"jobtype.global.jvm.args\", null);    if (typeGlobalJVMArgs != null) {      args += \" \" + typeGlobalJVMArgs;    }    return args;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JavaJob.java", "stars": "18", "class": {"name": "JavaJob", "extends": "JavaProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getClassPaths", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "  protected List<String> getClassPaths() {    List<String> classPath = super.getClassPaths();    classPath.add(getSourcePathFromClass(JavaJobRunnerMain.class));    classPath.add(getSourcePathFromClass(Props.class));    classPath.add(getSourcePathFromClass(SecurityUtils.class));    classPath.add(HadoopConfigurationInjector.getPath(getJobProps(),        getWorkingDirectory()));    String loggerPath = getSourcePathFromClass(org.apache.log4j.Logger.class);    if (!classPath.contains(loggerPath)) {      classPath.add(loggerPath);    }    // Add hadoop home to classpath    String hadoopHome = System.getenv(\"HADOOP_HOME\");    if (hadoopHome == null) {      info(\"HADOOP_HOME not set, using default hadoop config.\");    } else {      info(\"Using hadoop config found in \" + hadoopHome);      classPath.add(new File(hadoopHome, \"conf\").getPath());    }    List<String> typeClassPath =        getSysProps().getStringList(\"jobtype.classpath\", null, \",\");    if (typeClassPath != null) {      // fill in this when load this jobtype      String pluginDir = getSysProps().get(\"plugin.dir\");      for (String jar : typeClassPath) {        File jarFile = new File(jar);        if (!jarFile.isAbsolute()) {          jarFile = new File(pluginDir + File.separatorChar + jar);        }        File tempFile = jarFile.getAbsoluteFile();        if (!classPath.contains(tempFile.getPath())) {          classPath.add(tempFile.getPath());        }      }    }    List<String> typeGlobalClassPath =        getSysProps().getStringList(\"jobtype.global.classpath\", null, \",\");    if (typeGlobalClassPath != null) {      for (String jar : typeGlobalClassPath) {        if (!classPath.contains(jar)) {          classPath.add(jar);        }      }    }    return classPath;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JavaJob.java", "stars": "18", "class": {"name": "JavaJob", "extends": "JavaProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSourcePathFromClass", "params": ["Class<?>"], "throws": null, "modifiers": ["private", "static"], "return_type": "String", "snippet": "  private static String getSourcePathFromClass(Class<?> containedClass) {    File file =        new File(containedClass.getProtectionDomain().getCodeSource()            .getLocation().getPath());    if (!file.isDirectory() && file.getName().endsWith(\".class\")) {      String name = containedClass.getName();      StringTokenizer tokenizer = new StringTokenizer(name, \".\");      while (tokenizer.hasMoreTokens()) {        tokenizer.nextElement();        file = file.getParentFile();      }      return file.getPath();    } else {      return containedClass.getProtectionDomain().getCodeSource().getLocation()          .getPath();    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JavaJob.java", "stars": "18", "class": {"name": "JavaJob", "extends": "JavaProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJavaClass", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String getJavaClass() {    return JavaJobRunnerMain.class.getName();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JavaJob.java", "stars": "18", "class": {"name": "JavaJob", "extends": "JavaProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {    return \"JavaJob{\" + \"_runMethod='\" + _runMethod + '\\''        + \", _cancelMethod='\" + _cancelMethod + '\\'' + \", _progressMethod='\"        + _progressMethod + '\\'' + \", _javaObject=\" + _javaObject + \", props=\"        + props + '}';  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JavaJob.java", "stars": "18", "class": {"name": "JavaJob", "extends": "JavaProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "run", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void run() throws Exception {    HadoopConfigurationInjector.prepareResourcesToInject(getJobProps(),        getWorkingDirectory());    super.run();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/JavaJob.java", "stars": "18", "class": {"name": "JavaJob", "extends": "JavaProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onCreate(Bundle savedInstanceState) {    super.onCreate(savedInstanceState);    setContentView(R.layout.main);        // Find the ListView resource.     mainListView = (ListView) findViewById( R.id.mainListView );    // Create and populate a List of planet names.    String[] planets = new String[] { \"Mercury\", \"Venus\", \"Earth\", \"Mars\",                                      \"Jupiter\", \"Saturn\", \"Uranus\", \"Neptune\"};      ArrayList<String> planetList = new ArrayList<String>();    planetList.addAll( Arrays.asList(planets) );        // Create ArrayAdapter using the planet list.    listAdapter = new ArrayAdapter<String>(this, R.layout.simplerow, planetList);        // Add more planets. If you passed a String[] instead of a List<String>     // into the ArrayAdapter constructor, you must not add more items.     // Otherwise an exception will occur.    listAdapter.add( \"Ceres\" );    listAdapter.add( \"Pluto\" );    listAdapter.add( \"Haumea\" );    listAdapter.add( \"Makemake\" );    listAdapter.add( \"Eris\" );        // Set the ArrayAdapter as the ListView's adapter.    mainListView.setAdapter( listAdapter );        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/SimpleListView/src/com/windrealm/android/SimpleListViewActivity.java", "stars": "74", "class": {"name": "SimpleListViewActivity", "extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"method_name": "toDp", "params": ["int", "Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int toDp(int input, Context context) {        float scale = context.getResources().getDisplayMetrics().density;        return (int) (input * scale + 0.5f);    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/MathUtil.java", "stars": "4", "class": {"name": "MathUtil", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "calcularCostoFabricacion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float calcularCostoFabricacion(){        int contador = 0;        for(int i=0; i < getReceta().getListaingrediente().size();i++){            contador += getReceta().getListaingrediente().get(i).getPrecioUnidad();        }        contador += contador * (getPorcentajeComplejidad()/100);        return contador;    }", "url": "https://raw.githubusercontent.com/guimainini/Practica_Lab3_Parcial2019/master/src/Rubia.java", "stars": "2", "class": {"name": "Rubia", "extends": "TipoCerveza", "implements": null, "modifiers": ["public"]}}, {"method_name": "toString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {        return \"Rubia{}\"+super.toString();    }", "url": "https://raw.githubusercontent.com/guimainini/Practica_Lab3_Parcial2019/master/src/Rubia.java", "stars": "2", "class": {"name": "Rubia", "extends": "TipoCerveza", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        requestWindowFeature(Window.FEATURE_NO_TITLE);        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,                WindowManager.LayoutParams.FLAG_FULLSCREEN);        setContentView(R.layout.activity_timer_end);        TextView tx = findViewById(R.id.end_activity_toolbar_text);        Typeface adelline_font = Typeface.createFromAsset(getAssets(),  \"fonts/adelline.ttf\");        tx.setTypeface(adelline_font);        Button newTimerButton = findViewById(R.id.start_new_timer_button);        newTimerButton.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                finish();            }        });    }", "url": "https://raw.githubusercontent.com/LakshyaKhatri/Lifetime/master/app/src/main/java/com/compiletales/lifetime/TimerEndActivity.java", "stars": "2", "class": {"name": "TimerEndActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "handleLeasingWebhook", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleLeasingWebhook(final String payload, final String stripeSignatureHeader) {        stripeService.checkWebhookSignature(new CheckStripeWebhookSignatureDTO(payload, stripeSignatureHeader, leasingEndpointSecret)).ifPresent((event -> {            // Handle the checkout.session.completed event            if (\"checkout.session.completed\".equals(event.getType())) {                Session session = (Session) event.getDataObjectDeserializer().getObject().orElse(null);                onCheckoutSessionCompleted(session);            }        }));    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/StripeWebhookService.java", "stars": "2", "class": {"name": "StripeWebhookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onCheckoutSessionCompleted", "params": ["Session"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onCheckoutSessionCompleted(@Nullable final Session session) {        if (session != null) {            this.stripeService.getPaymentIntentForId(session.getPaymentIntent())                .ifPresent((paymentIntent) -> leasingService.createLeasing(extractData(paymentIntent.getMetadata()), session.getId()));        }    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/StripeWebhookService.java", "stars": "2", "class": {"name": "StripeWebhookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "handleAccountUpdateWebhook", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void handleAccountUpdateWebhook(final String payload, final String stripeSignatureHeader) {        stripeService.checkWebhookSignature(new CheckStripeWebhookSignatureDTO(payload, stripeSignatureHeader, accountsEndpointSecret)).ifPresent((event) -> {            if (\"account.updated\".equals(event.getType())) {                Account account = (Account) event.getDataObjectDeserializer().getObject().orElse(null);                onAccountUpdate(account);            }        });    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/StripeWebhookService.java", "stars": "2", "class": {"name": "StripeWebhookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onAccountUpdate", "params": ["Account"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onAccountUpdate(final Account account) {        LOGGER.debug(\"Received account update webhook, with account: {}\", account);        if (account != null) {            if (account.getPayoutsEnabled()) {                userService.getUserByStripeAccountId(account.getId()).ifPresent(userToUpdate -> {                    userToUpdate.setStripeAccountVerified(true);                    userService.updateUser(userToUpdate);                });            } else {                LOGGER.debug(\"payout not possible, needed requirements: {}\", account.getRequirements());            }        } else {            LOGGER.debug(\"Error in Account Object deserialization in StripeWebhookService, account nr\");        }    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/StripeWebhookService.java", "stars": "2", "class": {"name": "StripeWebhookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "extractData", "params": ["Map<String,String>"], "throws": null, "modifiers": ["private"], "return_type": "CreatorLeasingDTO", "snippet": "    private CreatorLeasingDTO extractData(Map<String, String> metaData) {        CreatorLeasingDTO creatorLeasingDTO = new CreatorLeasingDTO();        creatorLeasingDTO.setFrom(Instant.parse(metaData.get(\"leasing_from\")));        creatorLeasingDTO.setTo(Instant.parse(metaData.get(\"leasing_to\")));        creatorLeasingDTO.setGardenFieldId(Long.valueOf(metaData.get(\"leasing_gardenfield_id\")));        creatorLeasingDTO.setUserId(Long.valueOf(metaData.get(\"leasing_requester_id\")));        return creatorLeasingDTO;    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/StripeWebhookService.java", "stars": "2", "class": {"name": "StripeWebhookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "listAll", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> listAll(){        return new Response<>().successResponse(execUserService.listExecUser());    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/controller/ExecUserAdminController.java", "stars": "23", "class": {"name": "ExecUserAdminController", "extends": "ExceptionResolverContext", "implements": null, "modifiers": ["public"]}}, {"method_name": "add", "params": ["ExecUser"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> add(@Valid @RequestBody ExecUser execUser){        String userName = execUser.getExecUser();        if(!userName.matches(NAME_PATTERN_REGEX)){            return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null,                    this.informationSwitch(\"exchange.exec_user.name.illegal.not\"));        }        if(null != execUserService.selectExecUserByName(execUser.getExecUser())){            return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null ,                    this.informationSwitch(\"exchange.exec_user.exists\"));        }        execUserService.addExecUser(execUser);        return new Response<>().successResponse(\"success\");    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/controller/ExecUserAdminController.java", "stars": "23", "class": {"name": "ExecUserAdminController", "extends": "ExceptionResolverContext", "implements": null, "modifiers": ["public"]}}, {"method_name": "delete", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> delete(@PathVariable(\"id\") Integer id){        ExecUser execUser = execUserService.selectExecUser(id);        if(execUser == null){            return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null ,                    this.informationSwitch(\"exchange.exec_user.exists.not\"));        }        if(execUserService.hasBoundAppUser(execUser.getExecUser())){            return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null,                    this.informationSwitch(\"exchange.exec_user.bind.appUser\"));        }        if(execUserService.hasBoundNode(execUser.getExecUser())){            return new Response<>().errorResponse(CodeConstant.PARAMETER_ERROR, null,                    this.informationSwitch(\"exchange.exec_user.bind.node\"));        }        execUserService.deleteExecUser(id);        return new Response<>().successResponse(\"success\");    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/controller/ExecUserAdminController.java", "stars": "23", "class": {"name": "ExecUserAdminController", "extends": "ExceptionResolverContext", "implements": null, "modifiers": ["public"]}}, {"method_name": "pager", "params": ["ExecUserQuery"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> pager(ExecUserQuery query){        int pageSize = query.getPageSize();        if(0 == pageSize){            query.setPageSize(10);        }        return new Response<>().successResponse(execUserService.findExecUserPage(query));    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/controller/ExecUserAdminController.java", "stars": "23", "class": {"name": "ExecUserAdminController", "extends": "ExceptionResolverContext", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        Connection conn = null;        PreparedStatement pstmt1 = null;        PreparedStatement pstmt2 = null;        try {            //1\u3001\u83b7\u53d6\u8fde\u63a5            conn = JDBCUtils.getConnection();            //\u5f00\u542f\u4e8b\u52a1            conn.setAutoCommit(false);            //2\u3001\u5b9a\u4e49sql            //2.1 \u5f20\u4e09 - 500            String sql1 = \"update money set balance = balance - ? where id = ?\";            //2.2 \u674e\u56db + 500            String sql2 = \"update money set balance = balance + ? where id = ?\";            //3\u3001\u83b7\u53d6\u6267\u884csql\u5bf9\u8c61            pstmt1 = conn.prepareStatement(sql1);            pstmt2 = conn.prepareStatement(sql2);            //4\u3001\u8bbe\u7f6e\u53c2\u6570            pstmt1.setInt(1,500);            pstmt1.setInt(2,1);            pstmt2.setInt(1,500);            pstmt2.setInt(2,2);            pstmt1.executeUpdate();            pstmt2.executeUpdate();            //\u5236\u9020\u9519\u8bef            int i = 3/0;            //\u63d0\u4ea4\u4e8b\u52a1            conn.commit();        } catch (Exception throwables) {            try {                if(conn != null) {                    conn.rollback();                }            } catch (SQLException e) {                e.printStackTrace();            }            throwables.printStackTrace();        } finally {            JDBCUtils.close(pstmt1, conn);            JDBCUtils.close(pstmt2, null);        }    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JDBCDemo10.java", "stars": "2", "class": {"name": "JDBCDemo10", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createCommand", "params": ["CommandType", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "LibraryCommand", "snippet": "    public static LibraryCommand createCommand(CommandType cmdType, String argumentInput) {        Objects.requireNonNull(cmdType, \"Given command type must not be null.\");        Objects.requireNonNull(argumentInput, \"Given argument input must not be null.\");        try {            switch(cmdType) {                /* TODO Implement individual commands and comment                 * corresponding line back in once you have a class in place                 * Lastly, get rid of the unsupported Operation exception.                 */                case HELP: return new HelpCmd(argumentInput);                case EXIT: return new ExitCmd(argumentInput);                case ADD: return new AddCmd(argumentInput);                case LIST: return new ListCmd(argumentInput);                case SEARCH: return new SearchCmd(argumentInput);                case REMOVE: return new RemoveCmd(argumentInput);                case GROUP: return new GroupCmd(argumentInput);                default:                    throw new IllegalArgumentException(\"Command type not supported: \" + cmdType);            }        } catch (IllegalArgumentException e) {            System.err.println(\"ERROR: \" + e.getMessage());        }        return null;    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/CommandFactory.java", "stars": "6", "class": {"name": "CommandFactory", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "setOrderByClause", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderByClause(String orderByClause) {        this.orderByClause = orderByClause;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOrderByClause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOrderByClause() {        return orderByClause;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDistinct", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDistinct(boolean distinct) {        this.distinct = distinct;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isDistinct", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDistinct() {        return distinct;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOredCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criteria>", "snippet": "    public List<Criteria> getOredCriteria() {        return oredCriteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "or", "params": ["Criteria"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void or(Criteria criteria) {        oredCriteria.add(criteria);    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "or", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria or() {        Criteria criteria = createCriteriaInternal();        oredCriteria.add(criteria);        return criteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria createCriteria() {        Criteria criteria = createCriteriaInternal();        if (oredCriteria.size() == 0) {            oredCriteria.add(criteria);        }        return criteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createCriteriaInternal", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Criteria", "snippet": "    protected Criteria createCriteriaInternal() {        Criteria criteria = new Criteria();        return criteria;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "clear", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {        oredCriteria.clear();        orderByClause = null;        distinct = false;    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "UmsPermissionExample", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "isValid", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isValid() {            return criteria.size() > 0;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "getAllCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getAllCriteria() {            return criteria;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "getCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getCriteria() {            return criteria;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "addCriterion", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition) {            if (condition == null) {                throw new RuntimeException(\"Value for condition cannot be null\");            }            criteria.add(new Criterion(condition));        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "addCriterion", "params": ["String", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value, String property) {            if (value == null) {                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");            }            criteria.add(new Criterion(condition, value));        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "addCriterion", "params": ["String", "Object", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value1, Object value2, String property) {            if (value1 == null || value2 == null) {                throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");            }            criteria.add(new Criterion(condition, value1, value2));        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNull() {            addCriterion(\"id is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNotNull() {            addCriterion(\"id is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdEqualTo(Long value) {            addCriterion(\"id =\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdNotEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotEqualTo(Long value) {            addCriterion(\"id <>\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdGreaterThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThan(Long value) {            addCriterion(\"id >\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdGreaterThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThanOrEqualTo(Long value) {            addCriterion(\"id >=\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdLessThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThan(Long value) {            addCriterion(\"id <\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdLessThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThanOrEqualTo(Long value) {            addCriterion(\"id <=\", value, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIn(List<Long> values) {            addCriterion(\"id in\", values, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdNotIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotIn(List<Long> values) {            addCriterion(\"id not in\", values, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdBetween(Long value1, Long value2) {            addCriterion(\"id between\", value1, value2, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIdNotBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotBetween(Long value1, Long value2) {            addCriterion(\"id not between\", value1, value2, \"id\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidIsNull() {            addCriterion(\"pid is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidIsNotNull() {            addCriterion(\"pid is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidEqualTo(Long value) {            addCriterion(\"pid =\", value, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidNotEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidNotEqualTo(Long value) {            addCriterion(\"pid <>\", value, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidGreaterThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidGreaterThan(Long value) {            addCriterion(\"pid >\", value, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidGreaterThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidGreaterThanOrEqualTo(Long value) {            addCriterion(\"pid >=\", value, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidLessThan", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidLessThan(Long value) {            addCriterion(\"pid <\", value, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidLessThanOrEqualTo", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidLessThanOrEqualTo(Long value) {            addCriterion(\"pid <=\", value, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidIn(List<Long> values) {            addCriterion(\"pid in\", values, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidNotIn", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidNotIn(List<Long> values) {            addCriterion(\"pid not in\", values, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidBetween(Long value1, Long value2) {            addCriterion(\"pid between\", value1, value2, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andPidNotBetween", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPidNotBetween(Long value1, Long value2) {            addCriterion(\"pid not between\", value1, value2, \"pid\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIsNull() {            addCriterion(\"name is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIsNotNull() {            addCriterion(\"name is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameEqualTo(String value) {            addCriterion(\"name =\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotEqualTo(String value) {            addCriterion(\"name <>\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameGreaterThan(String value) {            addCriterion(\"name >\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameGreaterThanOrEqualTo(String value) {            addCriterion(\"name >=\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLessThan(String value) {            addCriterion(\"name <\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLessThanOrEqualTo(String value) {            addCriterion(\"name <=\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLike(String value) {            addCriterion(\"name like\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotLike(String value) {            addCriterion(\"name not like\", value, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIn(List<String> values) {            addCriterion(\"name in\", values, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotIn(List<String> values) {            addCriterion(\"name not in\", values, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameBetween(String value1, String value2) {            addCriterion(\"name between\", value1, value2, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andNameNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotBetween(String value1, String value2) {            addCriterion(\"name not between\", value1, value2, \"name\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueIsNull() {            addCriterion(\"value is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueIsNotNull() {            addCriterion(\"value is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueEqualTo(String value) {            addCriterion(\"value =\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueNotEqualTo(String value) {            addCriterion(\"value <>\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueGreaterThan(String value) {            addCriterion(\"value >\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueGreaterThanOrEqualTo(String value) {            addCriterion(\"value >=\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueLessThan(String value) {            addCriterion(\"value <\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueLessThanOrEqualTo(String value) {            addCriterion(\"value <=\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueLike(String value) {            addCriterion(\"value like\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueNotLike(String value) {            addCriterion(\"value not like\", value, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueIn(List<String> values) {            addCriterion(\"value in\", values, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueNotIn(List<String> values) {            addCriterion(\"value not in\", values, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueBetween(String value1, String value2) {            addCriterion(\"value between\", value1, value2, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andValueNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andValueNotBetween(String value1, String value2) {            addCriterion(\"value not between\", value1, value2, \"value\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIsNull() {            addCriterion(\"icon is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIsNotNull() {            addCriterion(\"icon is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconEqualTo(String value) {            addCriterion(\"icon =\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotEqualTo(String value) {            addCriterion(\"icon <>\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconGreaterThan(String value) {            addCriterion(\"icon >\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconGreaterThanOrEqualTo(String value) {            addCriterion(\"icon >=\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLessThan(String value) {            addCriterion(\"icon <\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLessThanOrEqualTo(String value) {            addCriterion(\"icon <=\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLike(String value) {            addCriterion(\"icon like\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotLike(String value) {            addCriterion(\"icon not like\", value, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIn(List<String> values) {            addCriterion(\"icon in\", values, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotIn(List<String> values) {            addCriterion(\"icon not in\", values, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconBetween(String value1, String value2) {            addCriterion(\"icon between\", value1, value2, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andIconNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotBetween(String value1, String value2) {            addCriterion(\"icon not between\", value1, value2, \"icon\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeIsNull() {            addCriterion(\"type is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeIsNotNull() {            addCriterion(\"type is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeEqualTo(Integer value) {            addCriterion(\"type =\", value, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeNotEqualTo(Integer value) {            addCriterion(\"type <>\", value, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeGreaterThan(Integer value) {            addCriterion(\"type >\", value, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeGreaterThanOrEqualTo(Integer value) {            addCriterion(\"type >=\", value, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeLessThan(Integer value) {            addCriterion(\"type <\", value, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeLessThanOrEqualTo(Integer value) {            addCriterion(\"type <=\", value, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeIn(List<Integer> values) {            addCriterion(\"type in\", values, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeNotIn(List<Integer> values) {            addCriterion(\"type not in\", values, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeBetween(Integer value1, Integer value2) {            addCriterion(\"type between\", value1, value2, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andTypeNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTypeNotBetween(Integer value1, Integer value2) {            addCriterion(\"type not between\", value1, value2, \"type\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriIsNull() {            addCriterion(\"uri is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriIsNotNull() {            addCriterion(\"uri is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriEqualTo(String value) {            addCriterion(\"uri =\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriNotEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriNotEqualTo(String value) {            addCriterion(\"uri <>\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriGreaterThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriGreaterThan(String value) {            addCriterion(\"uri >\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriGreaterThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriGreaterThanOrEqualTo(String value) {            addCriterion(\"uri >=\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriLessThan", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriLessThan(String value) {            addCriterion(\"uri <\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriLessThanOrEqualTo", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriLessThanOrEqualTo(String value) {            addCriterion(\"uri <=\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriLike(String value) {            addCriterion(\"uri like\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriNotLike", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriNotLike(String value) {            addCriterion(\"uri not like\", value, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriIn(List<String> values) {            addCriterion(\"uri in\", values, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriNotIn", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriNotIn(List<String> values) {            addCriterion(\"uri not in\", values, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriBetween(String value1, String value2) {            addCriterion(\"uri between\", value1, value2, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andUriNotBetween", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUriNotBetween(String value1, String value2) {            addCriterion(\"uri not between\", value1, value2, \"uri\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusIsNull() {            addCriterion(\"status is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusIsNotNull() {            addCriterion(\"status is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusEqualTo(Integer value) {            addCriterion(\"status =\", value, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusNotEqualTo(Integer value) {            addCriterion(\"status <>\", value, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusGreaterThan(Integer value) {            addCriterion(\"status >\", value, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {            addCriterion(\"status >=\", value, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusLessThan(Integer value) {            addCriterion(\"status <\", value, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusLessThanOrEqualTo(Integer value) {            addCriterion(\"status <=\", value, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusIn(List<Integer> values) {            addCriterion(\"status in\", values, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusNotIn(List<Integer> values) {            addCriterion(\"status not in\", values, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusBetween(Integer value1, Integer value2) {            addCriterion(\"status between\", value1, value2, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andStatusNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusNotBetween(Integer value1, Integer value2) {            addCriterion(\"status not between\", value1, value2, \"status\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeIsNull() {            addCriterion(\"create_time is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeIsNotNull() {            addCriterion(\"create_time is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeEqualTo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeEqualTo(Date value) {            addCriterion(\"create_time =\", value, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeNotEqualTo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeNotEqualTo(Date value) {            addCriterion(\"create_time <>\", value, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeGreaterThan", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeGreaterThan(Date value) {            addCriterion(\"create_time >\", value, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeGreaterThanOrEqualTo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {            addCriterion(\"create_time >=\", value, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeLessThan", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeLessThan(Date value) {            addCriterion(\"create_time <\", value, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeLessThanOrEqualTo", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {            addCriterion(\"create_time <=\", value, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeIn", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeIn(List<Date> values) {            addCriterion(\"create_time in\", values, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeNotIn", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeNotIn(List<Date> values) {            addCriterion(\"create_time not in\", values, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeBetween", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeBetween(Date value1, Date value2) {            addCriterion(\"create_time between\", value1, value2, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andCreateTimeNotBetween", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {            addCriterion(\"create_time not between\", value1, value2, \"createTime\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortIsNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortIsNull() {            addCriterion(\"sort is null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortIsNotNull", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortIsNotNull() {            addCriterion(\"sort is not null\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortEqualTo(Integer value) {            addCriterion(\"sort =\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortNotEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortNotEqualTo(Integer value) {            addCriterion(\"sort <>\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortGreaterThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortGreaterThan(Integer value) {            addCriterion(\"sort >\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortGreaterThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortGreaterThanOrEqualTo(Integer value) {            addCriterion(\"sort >=\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortLessThan", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortLessThan(Integer value) {            addCriterion(\"sort <\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortLessThanOrEqualTo", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortLessThanOrEqualTo(Integer value) {            addCriterion(\"sort <=\", value, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortIn(List<Integer> values) {            addCriterion(\"sort in\", values, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortNotIn", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortNotIn(List<Integer> values) {            addCriterion(\"sort not in\", values, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortBetween(Integer value1, Integer value2) {            addCriterion(\"sort between\", value1, value2, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "andSortNotBetween", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andSortNotBetween(Integer value1, Integer value2) {            addCriterion(\"sort not between\", value1, value2, \"sort\");            return (Criteria) this;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "GeneratedCriteria", "extends": null, "implements": null, "modifiers": ["abstract", "static", "protected"]}}, {"method_name": "getCondition", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCondition() {            return condition;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getValue() {            return value;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getSecondValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getSecondValue() {            return secondValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isNoValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isNoValue() {            return noValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isSingleValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSingleValue() {            return singleValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isBetweenValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isBetweenValue() {            return betweenValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "isListValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isListValue() {            return listValue;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getTypeHandler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTypeHandler() {            return typeHandler;        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsPermissionExample.java", "stars": "2", "class": {"name": "Criterion", "extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"method_name": "getLayoutId", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {        return R.layout.activity_transfer;    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/TransferActivity.java", "stars": "1", "class": {"name": "TransferActivity", "extends": "MyActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "initView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initView() {        mRLayoutSwitch.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String content = mTvCapital.getText().toString();                mTvCapital.setText(mTvDeal.getText().toString());                mTvDeal.setText(content);            }        });    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/TransferActivity.java", "stars": "1", "class": {"name": "TransferActivity", "extends": "MyActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "initData", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData() {    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/TransferActivity.java", "stars": "1", "class": {"name": "TransferActivity", "extends": "MyActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onUpdate", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {        if(event.getTiming().equals(EventTiming.PRE)) {            if (mc.player.fallDistance > 5) {                if (mc.player.posY < 0) {                    event.getLocation().setY(event.getLocation().getY() + 8);                }                }            }        }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/movement/AntiVoid.java", "stars": "12", "class": {"name": "AntiVoid", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "getValue", "params": ["String", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "  public static Object getValue(String expression, Object root) {    try {      Map context = Ognl.createDefaultContext(root, MEMBER_ACCESS, CLASS_RESOLVER, null);      return Ognl.getValue(parseExpression(expression), context, root);//      String rst=\"\";//      Object node =parseExpression(expression);//      if(node.toString().indexOf('+')>-1 ){//        for (int i=0;i<((NumericExpression) node).jjtGetNumChildren();i++)//        {//          Node n=((NumericExpression) node).jjtGetChild(i);//          if(n instanceof ASTConst)//          {//            rst=rst + n.toString();//          }else if(n instanceof ASTProperty){//            rst=rst + '?';//          }//        }//      }//      return rst;    } catch (OgnlException e) {      throw new BuilderException(\"Error evaluating expression '\" + expression + \"'. Cause: \" + e, e);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/OgnlCache.java", "stars": "15", "class": {"name": "OgnlCache", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "parseExpression", "params": ["String"], "throws": ["OgnlException"], "modifiers": ["private", "static"], "return_type": "Object", "snippet": "  private static Object parseExpression(String expression) throws OgnlException {    Object node = expressionCache.get(expression);    if (node == null) {      node = Ognl.parseExpression(expression);      expressionCache.put(expression, node);    }    return node;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/scripting/xmltags/OgnlCache.java", "stars": "15", "class": {"name": "OgnlCache", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "loginAuthenticatedURL", "params": ["URL", "String", "String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "HttpURLConnection", "snippet": "  public static HttpURLConnection loginAuthenticatedURL(final URL url, final String keytabPrincipal,      final String keytabPath) throws Exception {    final List<URL> resources = new ArrayList<>();    resources.add(url);    final URLClassLoader ucl = new URLClassLoader(resources.toArray(new URL[resources.size()]));    final Configuration conf = new Configuration();    conf.setClassLoader(ucl);    UserGroupInformation.setConfiguration(conf);    logger.info(        \"Logging in URL: \" + url.toString() + \" using Principal: \" + keytabPrincipal + \", Keytab: \"            + keytabPath);    UserGroupInformation.loginUserFromKeytab(keytabPrincipal, keytabPath);    final HttpURLConnection connection = UserGroupInformation.getLoginUser().doAs(        (PrivilegedExceptionAction<HttpURLConnection>) () -> {          final Token token = new Token();          return new AuthenticatedURL().openConnection(url, token);        });    return connection;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/AuthenticationUtils.java", "stars": "18", "class": {"name": "AuthenticationUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\t{\t\tCustomer c = new Customer();\t\tc.setId(1001);\t\tc.setName(\"\u00cd\u00f5\u00e8\u00a1\");\t\tc.setAge(18);\t\tc.setAddr(\"\u00c9\u00c2\u00ce\u00f7\u00d3\u00dc\u00c1\u00d6\");\t\t\t\tSystem.out.println(c.getId());\t\tSystem.out.println(c.getName());\t\tSystem.out.println(c.getAge());\t\tSystem.out.println(c.getAddr());\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/leiTest/CustomerTest.java", "stars": "2", "class": {"name": "CustomerTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onUpdate", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {            if (mc.player.inventory.getCurrentItem().getItem() instanceof ItemBow && mc.player.isHandActive() && mc.player.getItemInUseMaxCount() >= 3) {                mc.player.connection.sendPacket(new CPacketPlayerDigging(CPacketPlayerDigging.Action.RELEASE_USE_ITEM, BlockPos.ORIGIN, mc.player.getHorizontalFacing()));                mc.player.connection.sendPacket(new CPacketPlayerTryUseItem(mc.player.getActiveHand()));                mc.player.stopActiveHand();                }            }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/combat/FastBow.java", "stars": "12", "class": {"name": "FastBow", "extends": "Module", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        HorseFarm horseFarm = new HorseFarm();        Animal horse = horseFarm.newAnimal();        horse.show();        CattleFarm cattleFarm = new CattleFarm();        Animal cattle = cattleFarm.newAnimal();        cattle.show();    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/creational/factorymethod/AnimalFarmTest.java", "stars": "2", "class": {"name": "AnimalFarmTest", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "startActivity", "params": ["Activity", "Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "Intent", "snippet": "    public static Intent startActivity(Activity activity, Media item) {        return startActivity(activity, null, item);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVMediaDetailActivity.java", "stars": "4", "class": {"name": "TVMediaDetailActivity", "extends": "TVBaseActivity", "implements": ["TVMovieDetailsFragment"], "modifiers": ["public"]}}, {"method_name": "startActivity", "params": ["Activity", "Bundle", "Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "Intent", "snippet": "    public static Intent startActivity(Activity activity, Bundle options, Media item) {        Intent intent = buildIntent(activity, item);        activity.startActivity(intent, options);        return intent;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVMediaDetailActivity.java", "stars": "4", "class": {"name": "TVMediaDetailActivity", "extends": "TVBaseActivity", "implements": ["TVMovieDetailsFragment"], "modifiers": ["public"]}}, {"method_name": "buildIntent", "params": ["Context", "Media"], "throws": null, "modifiers": ["public", "static"], "return_type": "Intent", "snippet": "    public static Intent buildIntent(Context context, Media item){        Intent intent = new Intent(context, TVMediaDetailActivity.class);        intent.putExtra(EXTRA_ITEM, item);        return intent;    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVMediaDetailActivity.java", "stars": "4", "class": {"name": "TVMediaDetailActivity", "extends": "TVBaseActivity", "implements": ["TVMovieDetailsFragment"], "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        TVButterApplication.getAppContext()                .getComponent()                .inject(this);        super.onCreate(savedInstanceState, R.layout.activity_media_details);        mBackgroundUpdater.initialise(this, R.color.black);        Media media = getIntent().getParcelableExtra(EXTRA_ITEM);        updateBackground(media.headerImage);        if (VersionUtils.isLollipop()) {            postponeEnterTransition();        }        if (media instanceof Movie) {            getSupportFragmentManager().beginTransaction().replace(R.id.fragment, TVMovieDetailsFragment.newInstance(media)).commit();        } else {            getSupportFragmentManager().beginTransaction().replace(R.id.fragment, TVShowDetailsFragment.newInstance(media)).commit();        }        getSupportFragmentManager().executePendingTransactions();        if (VersionUtils.isLollipop()) {            startPostponedEnterTransition();        }    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVMediaDetailActivity.java", "stars": "4", "class": {"name": "TVMediaDetailActivity", "extends": "TVBaseActivity", "implements": ["TVMovieDetailsFragment"], "modifiers": ["public"]}}, {"method_name": "onDestroy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {        super.onDestroy();        if (null != mBackgroundUpdater) mBackgroundUpdater.destroy();    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVMediaDetailActivity.java", "stars": "4", "class": {"name": "TVMediaDetailActivity", "extends": "TVBaseActivity", "implements": ["TVMovieDetailsFragment"], "modifiers": ["public"]}}, {"method_name": "updateBackground", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void updateBackground(String backgroundImage) {        mBackgroundUpdater.updateBackground(backgroundImage);    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/TVMediaDetailActivity.java", "stars": "4", "class": {"name": "TVMediaDetailActivity", "extends": "TVBaseActivity", "implements": ["TVMovieDetailsFragment"], "modifiers": ["public"]}}, {"method_name": "getBlogInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BlogInfo", "snippet": "    public BlogInfo getBlogInfo() {        Long articleCount = articleService.getCount();        Long commentCount = commentsService.getCount();        Long linkCount = linksService.getCount();        Info info = infoService.getInfo();        Long birthday = info.getBirthday();        BlogInfo blogInfo = new BlogInfo();        blogInfo.setArticleCount(articleCount);        // TODO \u7edf\u8ba1\u9644\u4ef6\u7684\u6570\u91cf        blogInfo.setAttachmentCount(0);        blogInfo.setBirthday(birthday);        blogInfo.setCommentCount(commentCount);        blogInfo.setLinkCount(linkCount);        blogInfo.setVisitedCount(info.getVisited());        blogInfo.setEstablishDays(DateUtil.betweenDays(DateUtil.now(), DateUtil.getDate(birthday)));        return blogInfo;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/AdminServiceImpl.java", "stars": "1", "class": {"name": "AdminServiceImpl", "extends": null, "implements": ["AdminService"], "modifiers": ["public"]}}, {"method_name": "authenticate", "params": ["LoginParam"], "throws": null, "modifiers": ["public"], "return_type": "AuthToken", "snippet": "    public AuthToken authenticate(LoginParam loginParam) {        Assert.notNull(loginParam, \"Login param must not be null.\");        String username = loginParam.getUsername();        final User user;        try {            user = EmailUtil.isEmail(username) ?                    userService.getByEmailOfNonNull(username) : userService.getByUsernameOfNonNull(username);        } catch (NotFoundException e) {            throw new BadRequestException(\"Wrong with username or password!\");        }        // \u5bc6\u7801\u6bd4\u5bf9        if (!userService.passwordMatch(user, loginParam.getPassword())) {            throw new BadRequestException(\"Wrong with username or password!\");        }        // \u4e4b\u524d\u8fd8\u6ca1\u767b\u5f55\u3001\u91cd\u590d\u767b\u5f55        if (SecurityContextHolder.getContext().isAuthenticated()) {            throw new BadRequestException(\"You had logged in. Don't repeat login\");        }        // \u6784\u5efatoken\u5e76\u8fd4\u56de        return buildAuthToken(user);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/AdminServiceImpl.java", "stars": "1", "class": {"name": "AdminServiceImpl", "extends": null, "implements": ["AdminService"], "modifiers": ["public"]}}, {"method_name": "clearToken", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearToken() {        Authentication authentication = SecurityContextHolder.getContext().getAuthentication();        if (authentication == null) {            throw new BadRequestException(\"You are not logged in. Can't log out\");        }        User user = authentication.getUserDetail().getUser();        inMemoryCacheStore.getAny(SecurityUtil.buildAccessTokenKey(user), String.class).ifPresent(aToken -> {            inMemoryCacheStore.delete(SecurityUtil.buildTokenAccessKey(aToken));            inMemoryCacheStore.delete(SecurityUtil.buildAccessTokenKey(user));        });        inMemoryCacheStore.getAny(SecurityUtil.buildRefreshTokenKey(user), String.class).ifPresent(rToken -> {            inMemoryCacheStore.delete(SecurityUtil.buildTokenRefreshKey(rToken));            inMemoryCacheStore.delete(SecurityUtil.buildRefreshTokenKey(user));        });        log.info(\"you have been logged out.\");    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/AdminServiceImpl.java", "stars": "1", "class": {"name": "AdminServiceImpl", "extends": null, "implements": ["AdminService"], "modifiers": ["public"]}}, {"method_name": "refreshToken", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AuthToken", "snippet": "    public AuthToken refreshToken(String refreshToken) {        Assert.hasText(refreshToken, \"Refresh token must not be blank\");        Long userId = inMemoryCacheStore.getAny(SecurityUtil.buildTokenRefreshKey(refreshToken), Long.class).orElseThrow(() ->                new BadRequestException(\"Login status has expired, please login again\"));        // \u6ca1\u6709\u8fc7\u671f        User user = userService.getById(userId);        // \u5220\u9664token        inMemoryCacheStore.getAny(SecurityUtil.buildAccessTokenKey(user), String.class).ifPresent(accessToken ->                inMemoryCacheStore.delete(SecurityUtil.buildTokenAccessKey(accessToken)));        inMemoryCacheStore.delete(SecurityUtil.buildTokenRefreshKey(refreshToken));        inMemoryCacheStore.delete(SecurityUtil.buildAccessTokenKey(user));        inMemoryCacheStore.delete(SecurityUtil.buildRefreshTokenKey(user));        return buildAuthToken(user);    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/AdminServiceImpl.java", "stars": "1", "class": {"name": "AdminServiceImpl", "extends": null, "implements": ["AdminService"], "modifiers": ["public"]}}, {"method_name": "buildAuthToken", "params": ["User"], "throws": null, "modifiers": ["private"], "return_type": "AuthToken", "snippet": "    private AuthToken buildAuthToken(User user) {        AuthToken authToken = new AuthToken();        authToken.setAccessToken(BeyondUtil.buildUUIDWithoutDash());        authToken.setExpiredIn(ACCESS_TOKEN_EXPIRE_SECOND);        authToken.setRefreshToken(BeyondUtil.buildUUIDWithoutDash());        // \u5c06tokens\u653e\u5165\u7f13\u5b58        inMemoryCacheStore.putAny(SecurityUtil.buildAccessTokenKey(user), authToken.getAccessToken(), ACCESS_TOKEN_EXPIRE_SECOND, TimeUnit.SECONDS);        inMemoryCacheStore.putAny(SecurityUtil.buildRefreshTokenKey(user), authToken.getRefreshToken(), REFRESH_TOKEN_EXPIRE_DAY, TimeUnit.DAYS);        inMemoryCacheStore.putAny(SecurityUtil.buildTokenAccessKey(authToken.getAccessToken()), user.getId(), ACCESS_TOKEN_EXPIRE_SECOND, TimeUnit.SECONDS);        inMemoryCacheStore.putAny(SecurityUtil.buildTokenRefreshKey(authToken.getRefreshToken()), user.getId(), REFRESH_TOKEN_EXPIRE_DAY, TimeUnit.DAYS);        return authToken;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/AdminServiceImpl.java", "stars": "1", "class": {"name": "AdminServiceImpl", "extends": null, "implements": ["AdminService"], "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_play_pick);        ButterKnife.bind(this);        isTransition = getIntent().getBooleanExtra(TRANSITION, false);        init();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "init", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {        //\u501f\u7528\u4e86jjdxm_ijkplayer\u7684URL        String source1 = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\";        String name = \"\u666e\u901a\";        SwitchVideoModel switchVideoModel = new SwitchVideoModel(name, source1);        String source2 = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f30.mp4\";        String name2 = \"\u6e05\u6670\";        SwitchVideoModel switchVideoModel2 = new SwitchVideoModel(name2, source2);        List<SwitchVideoModel> list = new ArrayList<>();        list.add(switchVideoModel);        list.add(switchVideoModel2);        videoPlayer.setUp(list, false, \"\u6d4b\u8bd5\u89c6\u9891\");        //\u589e\u52a0\u5c01\u9762        ImageView imageView = new ImageView(this);        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);        imageView.setImageResource(R.mipmap.xxx1);        videoPlayer.setThumbImageView(imageView);        //\u589e\u52a0title        videoPlayer.getTitleTextView().setVisibility(View.VISIBLE);        //\u8bbe\u7f6e\u8fd4\u56de\u952e        videoPlayer.getBackButton().setVisibility(View.VISIBLE);        //\u8bbe\u7f6e\u65cb\u8f6c        orientationUtils = new OrientationUtils(this, videoPlayer);        //\u8bbe\u7f6e\u5168\u5c4f\u6309\u952e\u529f\u80fd,\u8fd9\u662f\u4f7f\u7528\u7684\u662f\u9009\u62e9\u5c4f\u5e55\uff0c\u800c\u4e0d\u662f\u5168\u5c4f        videoPlayer.getFullscreenButton().setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                orientationUtils.resolveByClick();            }        });        //\u662f\u5426\u53ef\u4ee5\u6ed1\u52a8\u8c03\u6574        videoPlayer.setIsTouchWiget(true);        //\u8bbe\u7f6e\u8fd4\u56de\u6309\u952e\u529f\u80fd        videoPlayer.getBackButton().setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                onBackPressed();            }        });        //\u8fc7\u6e21\u52a8\u753b        initTransition();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onPause", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {        super.onPause();        videoPlayer.onVideoPause();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onResume", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onResume() {        super.onResume();        videoPlayer.onVideoResume();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onDestroy", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {        super.onDestroy();        if (orientationUtils != null)            orientationUtils.releaseListener();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onBackPressed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {        //\u5148\u8fd4\u56de\u6b63\u5e38\u72b6\u6001        if (orientationUtils.getScreenType() == ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE) {            videoPlayer.getFullscreenButton().performClick();            return;        }        //\u91ca\u653e\u6240\u6709        videoPlayer.setVideoAllCallBack(null);        GSYVideoManager.releaseAllVideos();        if (isTransition && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {            super.onBackPressed();        } else {            new Handler().postDelayed(new Runnable() {                @Override                public void run() {                    finish();                    overridePendingTransition(R.anim.abc_fade_in, R.anim.abc_fade_out);                }            }, 500);        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "initTransition", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initTransition() {        if (isTransition && Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {            postponeEnterTransition();            ViewCompat.setTransitionName(videoPlayer, IMG_TRANSITION);            addTransitionListener();            startPostponedEnterTransition();        } else {            videoPlayer.startPlayLogic();        }    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "addTransitionListener", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean addTransitionListener() {        transition = getWindow().getSharedElementEnterTransition();        if (transition != null) {            transition.addListener(new OnTransitionListener(){                @Override                public void onTransitionEnd(Transition transition) {                    super.onTransitionEnd(transition);                    videoPlayer.startPlayLogic();                    transition.removeListener(this);                }            });            return true;        }        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/PlayPickActivity.java", "stars": "2", "class": {"name": "PlayPickActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCommitContent", "params": ["android", "int", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onCommitContent (android.support.v13.view.inputmethod.InputContentInfoCompat p0, int p1, android.os.Bundle p2)\t{\t\treturn n_onCommitContent (p0, p1, p2);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v13/view/inputmethod/InputConnectionCompat_OnCommitContentListenerImplementor.java", "stars": "2", "class": {"name": "InputConnectionCompat_OnCommitContentListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_onCommitContent", "params": ["android", "int", "android"], "throws": null, "modifiers": ["native", "private"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onCommitContent (android.support.v13.view.inputmethod.InputContentInfoCompat p0, int p1, android.os.Bundle p2);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v13/view/inputmethod/InputConnectionCompat_OnCommitContentListenerImplementor.java", "stars": "2", "class": {"name": "InputConnectionCompat_OnCommitContentListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v13/view/inputmethod/InputConnectionCompat_OnCommitContentListenerImplementor.java", "stars": "2", "class": {"name": "InputConnectionCompat_OnCommitContentListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v13/view/inputmethod/InputConnectionCompat_OnCommitContentListenerImplementor.java", "stars": "2", "class": {"name": "InputConnectionCompat_OnCommitContentListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "partitionCommandLine", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String[] partitionCommandLine(final String command) {    final ArrayList<String> commands = new ArrayList<>();    int index = 0;    StringBuffer buffer = new StringBuffer(command.length());    boolean isApos = false;    boolean isQuote = false;    while (index < command.length()) {      final char c = command.charAt(index);      switch (c) {        case ' ':          if (!isQuote && !isApos) {            final String arg = buffer.toString();            buffer = new StringBuffer(command.length() - index);            if (arg.length() > 0) {              commands.add(arg);            }          } else {            buffer.append(c);          }          break;        case '\\'':          if (!isQuote) {            isApos = !isApos;          } else {            buffer.append(c);          }          break;        case '\"':          if (!isApos) {            isQuote = !isQuote;          } else {            buffer.append(c);          }          break;        default:          buffer.append(c);      }      index++;    }    if (buffer.length() > 0) {      final String arg = buffer.toString();      commands.add(arg);    }    return commands.toArray(new String[commands.size()]);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "run", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void run() throws Exception {    try {      resolveProps();    } catch (final Exception e) {      handleError(\"Bad property definition! \" + e.getMessage(), e);    }    if (this.sysProps.getBoolean(MEMCHECK_ENABLED, true)        && this.jobProps.getBoolean(AZKABAN_MEMORY_CHECK, true)) {      final Pair<Long, Long> memPair = getProcMemoryRequirement();      final long xms = memPair.getFirst();      final long xmx = memPair.getSecond();      // retry backoff in ms      final String oomMsg = String          .format(\"Cannot request memory (Xms %d kb, Xmx %d kb) from system for job %s\",              xms, xmx, getId());      int attempt;      boolean isMemGranted = true;      //todo HappyRay: move to proper Guice after this class is refactored.      final SystemMemoryInfo memInfo = SERVICE_PROVIDER.getInstance(SystemMemoryInfo.class);      for (attempt = 1; attempt <= Constants.MEMORY_CHECK_RETRY_LIMIT; attempt++) {        isMemGranted = memInfo.canSystemGrantMemory(xmx);        if (isMemGranted) {          info(String.format(\"Memory granted for job %s\", getId()));          if (attempt > 1) {            this.commonMetrics.decrementOOMJobWaitCount();          }          break;        }        if (attempt < Constants.MEMORY_CHECK_RETRY_LIMIT) {          info(String.format(oomMsg + \", sleep for %s secs and retry, attempt %s of %s\",              TimeUnit.MILLISECONDS.toSeconds(                  Constants.MEMORY_CHECK_INTERVAL_MS), attempt,              Constants.MEMORY_CHECK_RETRY_LIMIT));          if (attempt == 1) {            this.commonMetrics.incrementOOMJobWaitCount();          }          synchronized (this) {            try {              this.wait(Constants.MEMORY_CHECK_INTERVAL_MS);            } catch (final InterruptedException e) {              info(String.format(\"Job %s interrupted while waiting for memory check retry\", getId()));            }          }          if (this.killed) {            this.commonMetrics.decrementOOMJobWaitCount();            info(String.format(\"Job %s was killed while waiting for memory check retry\", getId()));            return;          }        }      }      if (!isMemGranted) {        this.commonMetrics.decrementOOMJobWaitCount();        handleError(oomMsg, null);      }    }    List<String> commands = null;    try {      commands = getCommandList();    } catch (final Exception e) {      handleError(\"Job set up failed \" + e.getCause(), e);    }    final long startMs = System.currentTimeMillis();    if (commands == null) {      handleError(\"There are no commands to execute\", null);    }    info(commands.size() + \" commands to execute.\");    final File[] propFiles = initPropsFiles();    initOverAllPropsFiles();    // change krb5ccname env var so that each job execution gets its own cache    final Map<String, String> envVars = getEnvironmentVariables();    envVars.put(KRB5CCNAME, getKrb5ccname(this.jobProps));    // determine whether to run as Azkaban or run as effectiveUser,    // by default, run as effectiveUser    String executeAsUserBinaryPath = null;    String effectiveUser = null;    final boolean isExecuteAsUser = this.sysProps.getBoolean(EXECUTE_AS_USER, true);    //Get list of users we never execute flows as. (ie: root, azkaban)    final Set<String> blackListedUsers = new HashSet<>(        Arrays.asList(            this.sysProps.getString(Constants.ConfigurationKeys.BLACK_LISTED_USERS, \"root,azkaban\")                .split(\",\")        )    );    // nativeLibFolder specifies the path for execute-as-user file,    // which will change user from Azkaban to effectiveUser    if (isExecuteAsUser) {      final String nativeLibFolder = this.sysProps.getString(AZKABAN_SERVER_NATIVE_LIB_FOLDER);      executeAsUserBinaryPath = String.format(\"%s/%s\", nativeLibFolder, \"execute-as-user\");      effectiveUser = getEffectiveUser(this.jobProps);      // Throw exception if Azkaban tries to run flow as a prohibited user      if (blackListedUsers.contains(effectiveUser)) {        throw new RuntimeException(            String.format(\"Not permitted to proxy as '%s' through Azkaban\", effectiveUser)        );      }      // Set parent directory permissions to <uid>:azkaban so user can write in their execution directory      // if the directory is not permissioned correctly already (should happen once per execution)      if (!canWriteInCurrentWorkingDirectory(effectiveUser)) {        info(\"Changing current working directory ownership\");        assignUserFileOwnership(effectiveUser, getWorkingDirectory());      }      // Set property file permissions to <uid>:azkaban so user can write to their prop files      // in order to pass properties from one job to another\u8bbe\u7f6e\u914d\u7f6e\u6587\u4ef6\u6743\u9650 \u65b9\u4fbf\u53c2\u6570\u4f20\u9012      for (final File propFile : propFiles) {        info(\"Changing properties files ownership\");        assignUserFileOwnership(effectiveUser, propFile.getAbsolutePath());      }    }    for (String command : commands) {      AzkabanProcessBuilder builder = null;      if (isExecuteAsUser) {        // FIXME\u00a0Solve the problem that multiple commands cannot be executed at the same time.        String[] cmd = new String[]{executeAsUserBinaryPath, effectiveUser, command};        info(\"Command: \" + command);        builder =            new AzkabanProcessBuilder(cmd)                .setEnv(envVars).setWorkingDir(getCwd()).setLogger(getLog())                .enableExecuteAsUser().setExecuteAsUserBinaryPath(executeAsUserBinaryPath)                .setEffectiveUser(effectiveUser);      } else {        info(\"Command: \" + command);        builder =            new AzkabanProcessBuilder(partitionCommandLine(command))                .setEnv(envVars).setWorkingDir(getCwd()).setLogger(getLog());      }      if (builder.getEnv().size() > 0) {        info(\"Environment variables: \" + builder.getEnv());      }      info(\"Working directory: \" + builder.getWorkingDir());      // print out the Job properties to the job log.      this.logJobProperties();      synchronized (this) {        // Make sure that checking if the process job is killed and creating an AzkabanProcess        // object are atomic. The cancel method relies on this to make sure that if this.process is        // not null, this block of code which includes checking if the job is killed has not been        // executed yet.        if (this.killed) {          info(\"The job is killed. Abort. No job process created.\");          return;        }        this.process = builder.build();      }      try {        this.process.run();        this.success = true;      } catch (final Throwable e) {        for (final File file : propFiles) {          if (file != null && file.exists()) {            file.delete();          }        }        throw new RuntimeException(e);      } finally {        info(\"Process completed \"            + (this.success ? \"successfully\" : \"unsuccessfully\") + \" in \"            + ((System.currentTimeMillis() - startMs) / 1000) + \" seconds.\");      }    }    // Get the output properties from this job.    generateProperties(propFiles[1]);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getKrb5ccname", "params": ["Props"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getKrb5ccname(final Props jobProps) {    final String effectiveUser = getEffectiveUser(jobProps);    final String projectName =        jobProps.getString(CommonJobProperties.PROJECT_NAME).replace(\" \", \"_\");    final String flowId =        jobProps.getString(CommonJobProperties.FLOW_ID).replace(\" \", \"_\");    final String jobId =        jobProps.getString(CommonJobProperties.JOB_ID).replace(\" \", \"_\");    // execId should be an int and should not have space in it, ever    final String execId = jobProps.getString(CommonJobProperties.EXEC_ID);    final String krb5ccname =        String.format(\"/tmp/krb5cc__%s__%s__%s__%s__%s\", projectName, flowId,            jobId, execId, effectiveUser);    return krb5ccname;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getEffectiveUser", "params": ["Props"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getEffectiveUser(final Props jobProps) {    String effectiveUser = null;    if (jobProps.containsKey(JobProperties.USER_TO_PROXY)) {      effectiveUser = jobProps.getString(JobProperties.USER_TO_PROXY);    } else if (jobProps.containsKey(CommonJobProperties.SUBMIT_USER)) {      effectiveUser = jobProps.getString(CommonJobProperties.SUBMIT_USER);    } else {      throw new RuntimeException(          \"Internal Error: No user.to.proxy or submit.user in the jobProps\");    }    info(\"effective user is: \" + effectiveUser);    return effectiveUser;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "canWriteInCurrentWorkingDirectory", "params": ["String"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean canWriteInCurrentWorkingDirectory(final String effectiveUser)      throws IOException {    final ExecuteAsUser executeAsUser = new ExecuteAsUser(        this.sysProps.getString(AZKABAN_SERVER_NATIVE_LIB_FOLDER));    final List<String> checkIfUserCanWriteCommand = Arrays        .asList(CREATE_FILE, getWorkingDirectory() + \"/\" + TEMP_FILE_NAME);    final int result = executeAsUser.execute(effectiveUser, checkIfUserCanWriteCommand);    return result == SUCCESSFUL_EXECUTION;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "assignUserFileOwnership", "params": ["String", "String"], "throws": ["Exception"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void assignUserFileOwnership(final String effectiveUser, final String fileName) throws      Exception {    final ExecuteAsUser executeAsUser = new ExecuteAsUser(        this.sysProps.getString(AZKABAN_SERVER_NATIVE_LIB_FOLDER));    //\u5982\u679c\u6ca1\u6709\u8bbe\u7f6e\u7ec4\u540d \u4f7f\u7528\u9ed8\u8ba4\u7528\u6237\u540d\u4f5c\u4e3a\u7ec4\u540d    final String groupName = this.sysProps.getString(AZKABAN_SERVER_GROUP_NAME, effectiveUser);    final List<String> changeOwnershipCommand = Arrays        .asList(CHOWN, effectiveUser + \":\" + groupName, fileName);    //info(\"Change ownership of \" + fileName + \" to \" + effectiveUser + \":\" + groupName + \".\");    info(\"\u4fee\u6539\u5de5\u4f5c\u76ee\u5f55\u540d\uff1a \" + fileName + \" \u6267\u884c\u7528\u6237\uff1a \" + effectiveUser + \" \u7528\u6237\u7684\u7ec4\u540d\uff1a\" + groupName + \".\");    final int result = executeAsUser.execute(\"root\", changeOwnershipCommand);    if (result != 0) {//      handleError(\"Failed to change current working directory ownership. Error code: \" + Integer//          .toString(result), null);      handleError(\"\u4f7f\u7528chown\u547d\u4ee4\u4fee\u6539\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\u6743\u9650\u5931\u8d25.\u8bf7\u68c0\u67e5\u6267\u884c\u7528\u6237\u6216\u7ec4\u662f\u5426\u6709\u76f8\u5e94\u7684\u6743\u9650\u3002 \u9519\u8bef\u4ee3\u7801: \" + Integer          .toString(result), null);    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getProcMemoryRequirement", "params": [], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "Pair<Long,Long>", "snippet": "  protected Pair<Long, Long> getProcMemoryRequirement() throws Exception {    return new Pair<>(0L, 0L);  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "handleError", "params": ["String", "Exception"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void handleError(final String errorMsg, final Exception e) throws Exception {    error(errorMsg);    if (e != null) {      throw new Exception(errorMsg, e);    } else {      throw new Exception(errorMsg);    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCommandList", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "  protected List<String> getCommandList() {    final List<String> commands = new ArrayList<>();    commands.add(this.jobProps.getString(COMMAND));    for (int i = 1; this.jobProps.containsKey(COMMAND + \".\" + i); i++) {      commands.add(this.jobProps.getString(COMMAND + \".\" + i));    }    return commands;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "cancel", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancel() throws InterruptedException {    // in case the job is waiting    synchronized (this) {      this.killed = true;      this.notify();      if (this.process == null) {        // The job thread has not checked if the job is killed yet.        // setting the killed flag should be enough to abort the job.        // There is no job process to kill.        return;      }    }    try {      this.process.awaitStartup();      warn(\"Kill with signal TERM failed. Killing with KILL signal.\");      // FIXME\u00a0Use the hardkill method to solve the bug that cannot kill the child process.      this.process.hardKill();    } catch (InterruptedException ie){      throw ie;    }finally {      // FIXME\u00a0Solve the bug that hive task cannot be killed using spark submitted by command type.      if(jobProps.get(\"type\").equals(COMMAND)) {        //kill job by application_id        String logFilePath = this.jobProps.get(CommonJobProperties.JOB_LOG_FILE);        info(\"log file path is: \" + logFilePath);        if(org.apache.commons.lang.StringUtils.isBlank(logFilePath)){          info(\"log file does not exist.\");          return;        }        HadoopJobUtils.killAllHadoopJobs(logFilePath, getLog());        HadoopJobUtils.killBdpClientJob(getCommandList(), logFilePath, getLog());      }    }  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getProgress", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "  public double getProgress() {    return this.process != null && this.process.isComplete() ? 1.0 : 0.0;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getProcessId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getProcessId() {    return this.process.getProcessId();  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "isSuccess", "params": [], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "  boolean isSuccess() {    return this.success;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getProcess", "params": [], "throws": null, "modifiers": [], "return_type": "AzkabanProcess", "snippet": "  AzkabanProcess getProcess() {    return this.process;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "getPath", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getPath() {    return this._jobPath == null ? \"\" : this._jobPath;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/ProcessJob.java", "stars": "18", "class": {"name": "ProcessJob", "extends": "AbstractProcessJob", "implements": null, "modifiers": ["public"]}}, {"method_name": "onShareTargetSelected", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onShareTargetSelected (android.support.v7.widget.ShareActionProvider p0, android.content.Intent p1)\t{\t\treturn n_onShareTargetSelected (p0, p1);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/ShareActionProvider_OnShareTargetSelectedListenerImplementor.java", "stars": "2", "class": {"name": "ShareActionProvider_OnShareTargetSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "n_onShareTargetSelected", "params": ["android", "android"], "throws": null, "modifiers": ["native", "private"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onShareTargetSelected (android.support.v7.widget.ShareActionProvider p0, android.content.Intent p1);\tprivate java.util.ArrayList refList;\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/ShareActionProvider_OnShareTargetSelectedListenerImplementor.java", "stars": "2", "class": {"name": "ShareActionProvider_OnShareTargetSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidAddReference", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\t{\t\tif (refList == null)\t\t\trefList = new java.util.ArrayList ();\t\trefList.add (obj);\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/ShareActionProvider_OnShareTargetSelectedListenerImplementor.java", "stars": "2", "class": {"name": "ShareActionProvider_OnShareTargetSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "monodroidClearReferences", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\t{\t\tif (refList != null)\t\t\trefList.clear ();\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/ShareActionProvider_OnShareTargetSelectedListenerImplementor.java", "stars": "2", "class": {"name": "ShareActionProvider_OnShareTargetSelectedListenerImplementor", "extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {    // create an SqlSessionFactory    try (Reader reader = Resources        .getResourceAsReader(\"org/apache/ibatis/submitted/constructor_automapping/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    // populate in-memory database    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),        \"org/apache/ibatis/submitted/constructor_automapping/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/constructor_automapping/ConstructorAutomappingTest.java", "stars": "15", "class": {"name": "ConstructorAutomappingTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldHandleColumnPrefixCorrectly", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldHandleColumnPrefixCorrectly() {    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {      Mapper mapper = sqlSession.getMapper(Mapper.class);      List<Article> articles = mapper.nestedConstructorAutomapping();      assertEquals(2, articles.size());      Article article1 = articles.get(0);      assertEquals(\"Article1\", article1.getTitle());      Author author1 = article1.getAuthor();      assertEquals(Integer.valueOf(100), author1.getId());      assertEquals(\"Author1\", author1.getName());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/constructor_automapping/ConstructorAutomappingTest.java", "stars": "15", "class": {"name": "ConstructorAutomappingTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "ofInt", "params": ["AbstractInsnNode", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofInt(AbstractInsnNode insn, int value) {\t\treturn new PrimitiveValue(insn, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofInt", "params": ["List<AbstractInsnNode>", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofInt(List<AbstractInsnNode> insns, int value) {\t\treturn new PrimitiveValue(insns, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofChar", "params": ["AbstractInsnNode", "char"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofChar(AbstractInsnNode insn, char value) {\t\treturn new PrimitiveValue(insn, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofChar", "params": ["List<AbstractInsnNode>", "char"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofChar(List<AbstractInsnNode> insns, char value) {\t\treturn new PrimitiveValue(insns, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofByte", "params": ["AbstractInsnNode", "byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofByte(AbstractInsnNode insn, byte value) {\t\treturn new PrimitiveValue(insn, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofByte", "params": ["List<AbstractInsnNode>", "byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofByte(List<AbstractInsnNode> insns, byte value) {\t\treturn new PrimitiveValue(insns, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofShort", "params": ["AbstractInsnNode", "short"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofShort(AbstractInsnNode insn, short value) {\t\treturn new PrimitiveValue(insn, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofShort", "params": ["List<AbstractInsnNode>", "short"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofShort(List<AbstractInsnNode> insns, short value) {\t\treturn new PrimitiveValue(insns, Type.INT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofBool", "params": ["AbstractInsnNode", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofBool(AbstractInsnNode insn, boolean value) {\t\treturn new PrimitiveValue(insn, Type.INT_TYPE, value ? 1 : 0);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofBool", "params": ["List<AbstractInsnNode>", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofBool(List<AbstractInsnNode> insns, boolean value) {\t\treturn new PrimitiveValue(insns, Type.INT_TYPE, value ? 1 : 0);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofLong", "params": ["AbstractInsnNode", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofLong(AbstractInsnNode insn, long value) {\t\treturn new PrimitiveValue(insn, Type.LONG_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofLong", "params": ["List<AbstractInsnNode>", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofLong(List<AbstractInsnNode> insns, long value) {\t\treturn new PrimitiveValue(insns, Type.LONG_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofFloat", "params": ["AbstractInsnNode", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofFloat(AbstractInsnNode insn, float value) {\t\treturn new PrimitiveValue(insn, Type.FLOAT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofFloat", "params": ["List<AbstractInsnNode>", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofFloat(List<AbstractInsnNode> insns, float value) {\t\treturn new PrimitiveValue(insns, Type.FLOAT_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofDouble", "params": ["AbstractInsnNode", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofDouble(AbstractInsnNode insn, double value) {\t\treturn new PrimitiveValue(insn, Type.DOUBLE_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ofDouble", "params": ["List<AbstractInsnNode>", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbstractValue", "snippet": "\tpublic static AbstractValue ofDouble(List<AbstractInsnNode> insns, double value) {\t\treturn new PrimitiveValue(insns, Type.DOUBLE_TYPE, value);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "getBooleanValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean getBooleanValue() {\t\treturn ((Number) getValue()).intValue() > 1;\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "getIntValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getIntValue() {\t\treturn ((Number) getValue()).intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "getFloatValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "\tpublic float getFloatValue() {\t\treturn ((Number) getValue()).floatValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "getDoubleValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "\tpublic double getDoubleValue() {\t\treturn ((Number) getValue()).doubleValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "getLongValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getLongValue() {\t\treturn ((Number) getValue()).longValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "add", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue add(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, addN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "sub", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue sub(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, subN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "mul", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue mul(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, mulN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "div", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue div(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\ttry {\t\t\treturn new PrimitiveValue(mergedInsns, common, divN((Number) value, (Number) other.value));\t\t} catch(ArithmeticException ex) {\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\t}\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "rem", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue rem(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\ttry {\t\t\treturn new PrimitiveValue(mergedInsns, common, remN((Number) value, (Number) other.value));\t\t} catch(ArithmeticException ex) {\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\t}\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "shl", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue shl(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (!(common.equals(Type.INT_TYPE) || common.equals(Type.LONG_TYPE)))\t\t\tthrow new IllegalStateException(\"Requires int/long types\");\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, shlN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "shr", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue shr(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tif (!(common.equals(Type.INT_TYPE) || common.equals(Type.LONG_TYPE)))\t\t\tthrow new IllegalStateException(\"Requires int/long types\");\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, shrN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ushr", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue ushr(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tif (!(common.equals(Type.INT_TYPE) || common.equals(Type.LONG_TYPE)))\t\t\tthrow new IllegalStateException(\"Requires int/long types\");\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, ushrN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "and", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue and(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tif (!(common.equals(Type.INT_TYPE) || common.equals(Type.LONG_TYPE)))\t\t\tthrow new IllegalStateException(\"Requires int/long types\");\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, andN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "or", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue or(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tif (!(common.equals(Type.INT_TYPE) || common.equals(Type.LONG_TYPE)))\t\t\tthrow new IllegalStateException(\"Requires int/long types\");\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (value == null || other.value == null)\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\tif (value instanceof Unresolved || other.value instanceof Unresolved)\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, orN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "xor", "params": ["AbstractInsnNode", "AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "PrimitiveValue", "snippet": "\tpublic PrimitiveValue xor(AbstractInsnNode opInsn, AbstractValue other) {\t\tType common = commonMathType(type, other.type);\t\tif (!(common.equals(Type.INT_TYPE) || common.equals(Type.LONG_TYPE)))\t\t\tthrow new IllegalStateException(\"Requires int/long types\");\t\tList<AbstractInsnNode> mergedInsns = combine(insns, other.insns, opInsn);\t\tif (isValueUnresolved() || other.isValueUnresolved())\t\t\treturn new PrimitiveValue(mergedInsns, common);\t\treturn new PrimitiveValue(mergedInsns, common, xorN((Number) value, (Number) other.value));\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "copy", "params": ["AbstractInsnNode"], "throws": null, "modifiers": ["public"], "return_type": "AbstractValue", "snippet": "\tpublic AbstractValue copy(AbstractInsnNode insn) {\t\treturn new PrimitiveValue(combine(getInsns(), insn), getType(), getValue());\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "canMerge", "params": ["AbstractValue"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean canMerge(AbstractValue other) {\t\tif (other == this)\t\t\treturn true;\t\telse if (!other.isPrimitive())\t\t\treturn false;\t\treturn type.equals(other.type) || ((PrimitiveValue) other).isPromotionOf(this);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "isReference", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isReference() {\t\treturn false;\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "isValueResolved", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isValueResolved() {\t\treturn (value != null) && !(value instanceof Unresolved);\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "isArray", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isArray() {\t\treturn false;\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "isPrimitive", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isPrimitive() {\t\treturn true;\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "equals", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean equals(Object other) {\t\tif (other == this)\t\t\treturn true;\t\telse if (other instanceof PrimitiveValue) {\t\t\tPrimitiveValue pOther = (PrimitiveValue) other;\t\t\tif (isValueUnresolved() || pOther.isValueUnresolved())\t\t\t\treturn type.equals(pOther.type);\t\t\treturn type.equals(pOther.type) && value.equals(pOther.value);\t\t}\t\t// Other is not a primitive\t\treturn false;\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "isPromotionOf", "params": ["AbstractValue"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean isPromotionOf(AbstractValue other) {\t\tint i1 = TypeUtil.getPromotionIndex(type.getSort());\t\tint i2 = TypeUtil.getPromotionIndex(other.getType().getSort());\t\treturn i1 >= i2;\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "addN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number addN(Number a, Number b) {\t\tif(a instanceof Double || b instanceof Double)\t\t\treturn a.doubleValue() + b.doubleValue();\t\telse if(a instanceof Float || b instanceof Float)\t\t\treturn a.floatValue() + b.floatValue();\t\telse if(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() + b.longValue();\t\telse\t\t\treturn a.intValue() + b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "subN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number subN(Number a, Number b) {\t\tif(a instanceof Double || b instanceof Double)\t\t\treturn a.doubleValue() - b.doubleValue();\t\telse if(a instanceof Float || b instanceof Float)\t\t\treturn a.floatValue() - b.floatValue();\t\telse if(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() - b.longValue();\t\telse\t\t\treturn a.intValue() - b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "mulN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number mulN(Number a, Number b) {\t\tif(a instanceof Double || b instanceof Double)\t\t\treturn a.doubleValue() * b.doubleValue();\t\telse if(a instanceof Float || b instanceof Float)\t\t\treturn a.floatValue() * b.floatValue();\t\telse if(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() * b.longValue();\t\telse\t\t\treturn a.intValue() * b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "divN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number divN(Number a, Number b) {\t\tif(a instanceof Double || b instanceof Double)\t\t\treturn a.doubleValue() / b.doubleValue();\t\telse if(a instanceof Float || b instanceof Float)\t\t\treturn a.floatValue() / b.floatValue();\t\telse if(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() / b.longValue();\t\telse\t\t\treturn a.intValue() / b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "remN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number remN(Number a, Number b) {\t\tif(a instanceof Double || b instanceof Double)\t\t\treturn a.doubleValue() % b.doubleValue();\t\telse if(a instanceof Float || b instanceof Float)\t\t\treturn a.floatValue() % b.floatValue();\t\telse if(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() % b.longValue();\t\telse\t\t\treturn a.intValue() % b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "shlN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number shlN(Number a, Number b) {\t\tif(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() << b.longValue();\t\telse\t\t\treturn a.intValue() << b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "shrN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number shrN(Number a, Number b) {\t\tif(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() >> b.longValue();\t\telse\t\t\treturn a.intValue() >> b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "ushrN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number ushrN(Number a, Number b) {\t\tif(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() >>> b.longValue();\t\telse\t\t\treturn a.intValue() >>> b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "andN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number andN(Number a, Number b) {\t\tif(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() & b.longValue();\t\telse\t\t\treturn a.intValue() & b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "orN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number orN(Number a, Number b) {\t\tif(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() | b.longValue();\t\telse\t\t\treturn a.intValue() | b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "xorN", "params": ["Number", "Number"], "throws": null, "modifiers": ["private", "static"], "return_type": "Number", "snippet": "\tprivate static Number xorN(Number a, Number b) {\t\tif(a instanceof Long || b instanceof Long)\t\t\treturn a.longValue() ^ b.longValue();\t\telse\t\t\treturn a.intValue() ^ b.intValue();\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "commonMathType", "params": ["Type", "Type"], "throws": null, "modifiers": ["private", "static"], "return_type": "Type", "snippet": "\tprivate static Type commonMathType(Type a, Type b) {\t\tif (a == null || b == null)\t\t\tthrow new IllegalStateException(\"Cannot find common type of a null type\");\t\tint i1 = TypeUtil.getPromotionIndex(a.getSort());\t\tint i2 = TypeUtil.getPromotionIndex(b.getSort());\t\tint max = Math.max(i1, i2);\t\tif(max <= Type.DOUBLE)\t\t\treturn max == i1 ? a : b;\t\tthrow new IllegalStateException(\"Cannot do math on non-primitive types: \" +\t\t\t\ta.getDescriptor() + \" & \" + b.getDescriptor());\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/value/PrimitiveValue.java", "stars": "12", "class": {"name": "PrimitiveValue", "extends": "AbstractValue", "implements": null, "modifiers": ["public"]}}, {"method_name": "initialize", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initialize() {        this.setSize(422, 136);        this.setPreferredSize(new Dimension(318, 117));        this.setTitle(\"\u30dc\u30ea\u30e5\u30fc\u30e0\u8a2d\u5b9a\");        this.setContentPane(getJContentPane());    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJContentPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getJContentPane() {        if (jContentPane == null) {            jContentPane = new JPanel();            jContentPane.setLayout(new BoxLayout(getJContentPane(), BoxLayout.Y_AXIS));            jContentPane.add(getJPanel1(), null);            jContentPane.add(getJPanel(), null);        }        return jContentPane;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJSlider", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JSlider", "snippet": "    private JSlider getJSlider() {        if (jSlider == null) {            jSlider = new JSlider();            jSlider.setMajorTickSpacing(10);            jSlider.setMinorTickSpacing(5);            jSlider.setPaintLabels(true);            jSlider.setPaintTicks(true);            jSlider.setValue((int)(computer.getHardware().getSoundProcessor().getPropertyOfVolume() & 0xff));            jSlider.addChangeListener(new ChangeListener() {                public void stateChanged(ChangeEvent e) {                    TF_value.setText(Integer.toString(jSlider.getValue()));                }            });        }        return jSlider;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getJPanel() {        if (jPanel == null) {            jPanel = new JPanel();            jPanel.setLayout(new BoxLayout(getJPanel(), BoxLayout.X_AXIS));            jPanel.add(Box.createHorizontalGlue());            jPanel.add(getJButton(), null);            jPanel.add(getJButton1(), null);            jPanel.add(getJButton2(), null);        }        return jPanel;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJButton", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getJButton() {        if (jButton == null) {            jButton = new JButton();            jButton.setText(\"OK\");            jButton.addActionListener(new java.awt.event.ActionListener() {                public void actionPerformed(java.awt.event.ActionEvent e) {                    computer.getHardware().getSoundProcessor().setPropertyOfVolume((byte)jSlider.getValue());                    VolumeDialog.this.dispose();                }            });        }        return jButton;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJPanel1", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JPanel", "snippet": "    private JPanel getJPanel1() {        if (jPanel1 == null) {            GridBagConstraints gridBagConstraints2 = new GridBagConstraints();            gridBagConstraints2.fill = GridBagConstraints.NONE;            gridBagConstraints2.gridy = 0;            gridBagConstraints2.weightx = 0.0D;            gridBagConstraints2.gridx = 2;            GridBagConstraints gridBagConstraints1 = new GridBagConstraints();            gridBagConstraints1.gridx = 1;            gridBagConstraints1.insets = new Insets(0, 10, 0, 5);            gridBagConstraints1.gridy = 0;            L_value = new JLabel();            L_value.setText(\"\u5024\");            GridBagConstraints gridBagConstraints = new GridBagConstraints();            gridBagConstraints.fill = GridBagConstraints.HORIZONTAL;            gridBagConstraints.weightx = 1.0D;            jPanel1 = new JPanel();            jPanel1.setLayout(new GridBagLayout());            jPanel1.setBorder(BorderFactory.createTitledBorder(null, \"\\u97f3\\u306e\\u5927\\u304d\\u3055\", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, new Font(\"Dialog\", Font.BOLD, 12), new Color(51, 51, 51)));            jPanel1.add(getJSlider(), gridBagConstraints);            jPanel1.add(L_value, gridBagConstraints1);            jPanel1.add(getTF_value(), gridBagConstraints2);        }        return jPanel1;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJButton1", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getJButton1() {        if (jButton1 == null) {            jButton1 = new JButton();            jButton1.setText(\"\u30ad\u30e3\u30f3\u30bb\u30eb\");            jButton1.addActionListener(new java.awt.event.ActionListener() {                public void actionPerformed(java.awt.event.ActionEvent e) {                    VolumeDialog.this.dispose();                }            });        }        return jButton1;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getJButton2", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JButton", "snippet": "    private JButton getJButton2() {        if (jButton2 == null) {            jButton2 = new JButton();            jButton2.setText(\"\u9069\u7528\");            jButton2.addActionListener(new java.awt.event.ActionListener() {                public void actionPerformed(java.awt.event.ActionEvent e) {                    computer.getHardware().getSoundProcessor().setPropertyOfVolume((byte)jSlider.getValue());                }            });        }        return jButton2;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getTextFieldValue", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getTextFieldValue() {        int value = jSlider.getValue();        try {            value = Integer.parseInt(TF_value.getText());            if (value < 0) {                value = 0;            }            else if (value > 100) {                value = 100;            }        }        catch (NumberFormatException ex) {        }        return value;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "getTF_value", "params": [], "throws": null, "modifiers": ["private"], "return_type": "JTextField", "snippet": "    private JTextField getTF_value() {        if (TF_value == null) {            TF_value = new JTextField(4);            TF_value.setText(Integer.toString(computer.getHardware().getSoundProcessor().getPropertyOfVolume()));            TF_value.setHorizontalAlignment(JTextField.RIGHT);            TF_value.addActionListener(new java.awt.event.ActionListener() {                public void actionPerformed(java.awt.event.ActionEvent e) {                    jSlider.setValue(getTextFieldValue());                }            });            TF_value.addFocusListener(new java.awt.event.FocusListener() {                public void focusLost(java.awt.event.FocusEvent e) {                    jSlider.setValue(getTextFieldValue());                }                public void focusGained(java.awt.event.FocusEvent e) {                }            });        }        return TF_value;    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/VolumeDialog.java", "stars": "4", "class": {"name": "VolumeDialog", "extends": "JDialog", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate(Bundle savedInstanceState) {\t\tsuper.onCreate(savedInstanceState);\t\tsetContentView(R.layout.main);\t\t// Welcome Message\t\tTextView textview = (TextView) findViewById(R.id.text);\t\ttextview.setText(\"Welcome to SocialAuth Demo. Connect any provider and then press Update button to Share Update.\");\t\tLinearLayout bar = (LinearLayout) findViewById(R.id.linearbar);\t\tbar.setBackgroundResource(R.drawable.bar_gradient);\t\t// Add Bar to library\t\tadapter = new SocialAuthAdapter(new ResponseListener());\t\t// Please note : Update status functionality is only supported by\t\t// Facebook, Twitter, Linkedin, MySpace, Yahoo and Yammer.\t\t// Add providers\t\tadapter.addProvider(Provider.FACEBOOK, R.drawable.facebook);\t\tadapter.addProvider(Provider.TWITTER, R.drawable.twitter);\t\tadapter.addProvider(Provider.LINKEDIN, R.drawable.linkedin);\t\tadapter.addProvider(Provider.MYSPACE, R.drawable.myspace);\t\t// Add email and mms providers\t\tadapter.addProvider(Provider.EMAIL, R.drawable.email);\t\tadapter.addProvider(Provider.MMS, R.drawable.mms);\t\t// For twitter use add callback method. Put your own callback url here.\t\tadapter.addCallBack(Provider.TWITTER, \"http://socialauth.in/socialauthdemo/socialAuthSuccessAction.do\");\t\tadapter.enable(bar);\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-bar/src/org/brickred/socialbar/ShareBarActivity.java", "stars": "74", "class": {"name": "ShareBarActivity", "extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"method_name": "onComplete", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onComplete(Bundle values) {\t\t\t// Variable to receive message status\t\t\tLog.d(\"Share-Bar\", \"Authentication Successful\");\t\t\t// Get name of provider after authentication\t\t\tfinal String providerName = values.getString(SocialAuthAdapter.PROVIDER);\t\t\tLog.d(\"Share-Bar\", \"Provider Name = \" + providerName);\t\t\tToast.makeText(ShareBarActivity.this, providerName + \" connected\", Toast.LENGTH_SHORT).show();\t\t\tupdate = (Button) findViewById(R.id.update);\t\t\tedit = (EditText) findViewById(R.id.editTxt);\t\t\t// Please avoid sending duplicate message. Social Media Providers\t\t\t// block duplicate messages.\t\t\tupdate.setOnClickListener(new OnClickListener() {\t\t\t\t@Override\t\t\t\tpublic void onClick(View v) {\t\t\t\t\t// Call updateStatus to share message via oAuth providers\t\t\t\t\t// adapter.updateStatus(edit.getText().toString(), new\t\t\t\t\t// MessageListener(), false);\t\t\t\t\t// call to update on all connected providers at once\t\t\t\t\tadapter.updateStatus(edit.getText().toString(), new MessageListener(), true);\t\t\t\t}\t\t\t});\t\t\t// Share via Email Intent\t\t\tif (providerName.equalsIgnoreCase(\"share_mail\")) {\t\t\t\tIntent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(\"mailto\",\t\t\t\t\t\t\"vineet.aggarwal@3pillarglobal.com\", null));\t\t\t\temailIntent.putExtra(android.content.Intent.EXTRA_SUBJECT, \"Test\");\t\t\t\tFile file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM),\t\t\t\t\t\t\"image5964402.png\");\t\t\t\tUri uri = Uri.fromFile(file);\t\t\t\temailIntent.putExtra(Intent.EXTRA_STREAM, uri);\t\t\t\tstartActivity(Intent.createChooser(emailIntent, \"Test\"));\t\t\t}\t\t\t// Share via mms intent\t\t\tif (providerName.equalsIgnoreCase(\"share_mms\")) {\t\t\t\tFile file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM),\t\t\t\t\t\t\"image5964402.png\");\t\t\t\tUri uri = Uri.fromFile(file);\t\t\t\tIntent mmsIntent = new Intent(Intent.ACTION_SEND, uri);\t\t\t\tmmsIntent.putExtra(\"sms_body\", \"Test\");\t\t\t\tmmsIntent.putExtra(Intent.EXTRA_STREAM, uri);\t\t\t\tmmsIntent.setType(\"image/png\");\t\t\t\tstartActivity(mmsIntent);\t\t\t}\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-bar/src/org/brickred/socialbar/ShareBarActivity.java", "stars": "74", "class": {"name": "ResponseListener", "extends": null, "implements": ["DialogListener"], "modifiers": ["private", "final"]}}, {"method_name": "onError", "params": ["SocialAuthError"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onError(SocialAuthError error) {\t\t\terror.printStackTrace();\t\t\tLog.d(\"Share-Bar\", error.getMessage());\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-bar/src/org/brickred/socialbar/ShareBarActivity.java", "stars": "74", "class": {"name": "ResponseListener", "extends": null, "implements": ["DialogListener"], "modifiers": ["private", "final"]}}, {"method_name": "onCancel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onCancel() {\t\t\tLog.d(\"Share-Bar\", \"Authentication Cancelled\");\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-bar/src/org/brickred/socialbar/ShareBarActivity.java", "stars": "74", "class": {"name": "ResponseListener", "extends": null, "implements": ["DialogListener"], "modifiers": ["private", "final"]}}, {"method_name": "onBack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onBack() {\t\t\tLog.d(\"Share-Bar\", \"Dialog Closed by pressing Back Key\");\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-bar/src/org/brickred/socialbar/ShareBarActivity.java", "stars": "74", "class": {"name": "ResponseListener", "extends": null, "implements": ["DialogListener"], "modifiers": ["private", "final"]}}, {"method_name": "onExecute", "params": ["String", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onExecute(String provider, Integer t) {\t\t\tInteger status = t;\t\t\tif (status.intValue() == 200 || status.intValue() == 201 || status.intValue() == 204)\t\t\t\tToast.makeText(ShareBarActivity.this, \"Message posted on \" + provider, Toast.LENGTH_LONG).show();\t\t\telse\t\t\t\tToast.makeText(ShareBarActivity.this, \"Message not posted on\" + provider, Toast.LENGTH_LONG).show();\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-bar/src/org/brickred/socialbar/ShareBarActivity.java", "stars": "74", "class": {"name": "MessageListener", "extends": null, "implements": ["SocialAuthListener"], "modifiers": ["private", "final"]}}, {"method_name": "onError", "params": ["SocialAuthError"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onError(SocialAuthError e) {\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-bar/src/org/brickred/socialbar/ShareBarActivity.java", "stars": "74", "class": {"name": "MessageListener", "extends": null, "implements": ["SocialAuthListener"], "modifiers": ["private", "final"]}}, {"method_name": "run", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {            if (mHourView.getScrollState() == RecyclerView.SCROLL_STATE_IDLE &&                    mMinuteView.getScrollState() == RecyclerView.SCROLL_STATE_IDLE &&                    mSecondView.getScrollState() == RecyclerView.SCROLL_STATE_IDLE) {                Calendar calendar = Calendar.getInstance();                calendar.set(Calendar.HOUR_OF_DAY, mHourManager.getPickedPosition());                calendar.set(Calendar.MINUTE, mMinuteManager.getPickedPosition());                calendar.set(Calendar.SECOND, mSecondManager.getPickedPosition());                if (System.currentTimeMillis() - calendar.getTimeInMillis() < 3000) {                    calendar = Calendar.getInstance();                    setHour(calendar.get(Calendar.HOUR_OF_DAY));                    setMinute(calendar.get(Calendar.MINUTE));                    setSecond(calendar.get(Calendar.SECOND));                    postDelayed(this, 1000);                }            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setListener", "params": ["OnListener"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setListener(OnListener listener) {            mListener = listener;            return this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setIgnoreSecond", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setIgnoreSecond() {            mSecondView.setVisibility(View.GONE);            return this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setTime", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setTime(String time) {            // 102030            if (time.matches(\"\\\\d{6}\")) {                setHour(time.substring(0, 2));                setMinute(time.substring(2, 4));                setSecond(time.substring(4, 6));            // 10:20:30            } else if (time.matches(\"\\\\d{2}:\\\\d{2}:\\\\d{2}\")) {                setHour(time.substring(0, 2));                setMinute(time.substring(3, 5));                setSecond(time.substring(6, 8));            }            return this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setHour", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setHour(String hour) {            return setHour(Integer.valueOf(hour));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setHour", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setHour(int hour) {            int index = hour;            if (index < 0 || hour == 24) {                index = 0;            } else if (index > mHourAdapter.getItemCount() - 1) {                index = mHourAdapter.getItemCount() - 1;            }            mHourView.scrollToPosition(index);            return this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setMinute", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setMinute(String minute) {            return setMinute(Integer.valueOf(minute));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setMinute", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setMinute(int minute) {            int index = minute;            if (index < 0) {                index = 0;            } else if (index > mMinuteAdapter.getItemCount() - 1) {                index = mMinuteAdapter.getItemCount() - 1;            }            mMinuteView.scrollToPosition(index);            return this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setSecond", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setSecond(String second) {            return setSecond(Integer.valueOf(second));        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setSecond", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setSecond(int second) {            int index = second;            if (index < 0) {                index = 0;            } else if (index > mSecondAdapter.getItemCount() - 1) {                index = mSecondAdapter.getItemCount() - 1;            }            mSecondView.scrollToPosition(index);            return this;        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "onClick", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View v) {            switch (v.getId()) {                case R.id.tv_ui_confirm:                    autoDismiss();                    if (mListener != null) {                        mListener.onSelected(getDialog(), mHourManager.getPickedPosition(), mMinuteManager.getPickedPosition(), mSecondManager.getPickedPosition());                    }                    break;                case R.id.tv_ui_cancel:                    autoDismiss();                    if (mListener != null) {                        mListener.onCancel(getDialog());                    }                    break;                default:                    break;            }        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "Builder", "extends": "UIDialog", "implements": ["Runnable"], "modifiers": ["public", "final", "static"]}}, {"method_name": "onCreateViewHolder", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "ViewHolder", "snippet": "        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {            return new ViewHolder();        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "PickerAdapter", "extends": "MyAdapter", "implements": null, "modifiers": ["private", "static", "final"]}}, {"method_name": "onBindView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void onBindView(int position) {                mPickerView.setText(getItem(position));            }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/TimeDialog.java", "stars": "1", "class": {"name": "ViewHolder", "extends": "MyAdapter", "implements": null, "modifiers": ["final"]}}, {"method_name": "shouldTestIfClassIsSimpleTypeAndReturnTrue", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldTestIfClassIsSimpleTypeAndReturnTrue() {    assertTrue(SimpleTypeRegistry.isSimpleType(String.class));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SimpleTypeRegistryTest.java", "stars": "15", "class": {"name": "SimpleTypeRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldTestIfClassIsSimpleTypeAndReturnFalse", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldTestIfClassIsSimpleTypeAndReturnFalse() {    assertFalse(SimpleTypeRegistry.isSimpleType(RichType.class));  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SimpleTypeRegistryTest.java", "stars": "15", "class": {"name": "SimpleTypeRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldTestIfMapIsSimpleTypeAndReturnFalse", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldTestIfMapIsSimpleTypeAndReturnFalse() {    assertFalse(SimpleTypeRegistry.isSimpleType(HashMap.class)); // see issue #165, a Map is not a simple type  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/SimpleTypeRegistryTest.java", "stars": "15", "class": {"name": "SimpleTypeRegistryTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "get", "params": ["String", "RetrievalEventListener<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void get(String id, final RetrievalEventListener<T> retrievalEventListener) {        DatabaseReference rowReference = dbReference.child(tableName).child(id);        Query query = rowReference;        rowReference.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                parseDataSnapshot(dataSnapshot, new RetrievalEventListener<T>() {                    @Override                    public void OnDataRetrieved(T t) {                        retrievalEventListener.OnDataRetrieved(t);                    }                });            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {            }        });    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class": {"name": "FirebaseDao", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "GetNewKey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String GetNewKey()    {        return dbReference.child(tableName).push().getKey();    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class": {"name": "FirebaseDao", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "parseDataSnapshot", "params": ["DataSnapshot", "RetrievalEventListener<T>"], "throws": null, "modifiers": ["abstract", "protected"], "return_type": "void", "snippet": "    protected abstract void parseDataSnapshot(DataSnapshot dataSnapshot, RetrievalEventListener<T> retrievalEventListener);    public void getAll(final RetrievalEventListener<List<T>> retrievalEventListener){        DatabaseReference rowReference = dbReference.child(tableName);        rowReference.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                final List<T> list = new ArrayList<T>();                final long len = dataSnapshot.getChildrenCount();                if(len == 0)                {                    retrievalEventListener.OnDataRetrieved(list);                    return;                }                RetrievalEventListener<T> listRetrievalEventListener = new RetrievalEventListener<T>() {                    @Override                    public void OnDataRetrieved(T t) {                        list.add(t);                        if(list.size() == len){                            retrievalEventListener.OnDataRetrieved(list);                        }                    }                };                for(DataSnapshot currentDataSnapshot : dataSnapshot.getChildren())                    parseDataSnapshot(currentDataSnapshot, listRetrievalEventListener);            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {            }        });    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class": {"name": "FirebaseDao", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getAll", "params": ["RetrievalEventListener<List>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getAll(final RetrievalEventListener<List<T>> retrievalEventListener){        DatabaseReference rowReference = dbReference.child(tableName);        rowReference.addListenerForSingleValueEvent(new ValueEventListener() {            @Override            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {                final List<T> list = new ArrayList<T>();                final long len = dataSnapshot.getChildrenCount();                if(len == 0)                {                    retrievalEventListener.OnDataRetrieved(list);                    return;                }                RetrievalEventListener<T> listRetrievalEventListener = new RetrievalEventListener<T>() {                    @Override                    public void OnDataRetrieved(T t) {                        list.add(t);                        if(list.size() == len){                            retrievalEventListener.OnDataRetrieved(list);                        }                    }                };                for(DataSnapshot currentDataSnapshot : dataSnapshot.getChildren())                    parseDataSnapshot(currentDataSnapshot, listRetrievalEventListener);            }            @Override            public void onCancelled(@NonNull DatabaseError databaseError) {            }        });    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class": {"name": "FirebaseDao", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "save", "params": ["T", "String", "TaskListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void save(T t, String id, final TaskListener taskListener){        Task<Void> task = dbReference.child(tableName).child(id).setValue(t);        task.addOnCompleteListener(new OnCompleteListener<Void>() {            @Override            public void onComplete(@NonNull Task<Void> task) {                taskListener.OnSuccess();            }        });        task.addOnFailureListener(new OnFailureListener() {            @Override            public void onFailure(@NonNull Exception e) {                taskListener.OnFail();            }        });    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class": {"name": "FirebaseDao", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "delete", "params": ["String", "TaskListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(String id, TaskListener taskListener){        save(null, id, taskListener);    }", "url": "https://raw.githubusercontent.com/islammohsen/FirebaseDao/master/firbasedao/src/main/java/com/example/firbasedao/FirebaseDao.java", "stars": "2", "class": {"name": "FirebaseDao", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "retrieveCountry", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid retrieveCountry() {\t\tString randomCode = SAMPLE_COUNTRY_CODES.get(this.random.nextInt(SAMPLE_COUNTRY_CODES.size()));\t\tSystem.out.println(\"Looking for country with code '\" + randomCode + \"'\");\t\tthis.countryService.findByCode(randomCode);\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-cache/src/main/java/smoketest/cache/SampleClient.java", "stars": "47572", "class": {"name": "SampleClient", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getCount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {        return list.length;    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class": {"name": "SysmptomsAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int i) {        return null;    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class": {"name": "SysmptomsAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getItemId", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int i) {        return 0;    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class": {"name": "SysmptomsAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getView", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int i, View view, ViewGroup viewGroup) {        view = inflter.inflate(R.layout.layout_covid_sysmptoms, null);        ImageView imageView  = (ImageView) view.findViewById(R.id.image);        TextView title  = (TextView) view.findViewById(R.id.title);        title.setTypeface(FontUtils.loadFontFromAssets(context, Constant.FONT_NORMAL));        title.setText(list[i]);        switch (i){            case 0:                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.fever));                break;            case 1:                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.sore_throat));                break;            case 2:                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.headache));                break;            case 3:                imageView.setImageDrawable(view.getResources().getDrawable(R.drawable.breathing));                break;        }        return view;    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/adapter/SysmptomsAdapter.java", "stars": "2", "class": {"name": "SysmptomsAdapter", "extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"method_name": "getSharedNodesInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> getSharedNodesInfo() {        return this.sharedNodesInfo;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class": {"name": "AzkabanCommonLinkisReadJob", "extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"method_name": "getSharedKey", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSharedKey(String value) {        String projectId = getJobProps().get(LinkisJobTypeConf.PROJECT_ID);        String flowId = getJobProps().get(LinkisJobTypeConf.FLOW_NAME);        String flowExecId = getJobProps().get(LinkisJobTypeConf.FLOW_EXEC_ID);        return projectId + \".\" + flowId + \".\" + flowExecId + \".\" + value;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class": {"name": "AzkabanCommonLinkisReadJob", "extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"method_name": "setSharedNodesInfo", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSharedNodesInfo(Map<String, Object> sharedNodesInfo) {        this.sharedNodesInfo = sharedNodesInfo;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class": {"name": "AzkabanCommonLinkisReadJob", "extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"method_name": "getShareNodeIds", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public  String[] getShareNodeIds() {        String nodesStr = getJobProps().get(LinkisJobTypeConf.READ_NODE_TOKEN);        String[] nodes = nodesStr.split(\",\");        return nodes;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/linkis/job/AzkabanCommonLinkisReadJob.java", "stars": "18", "class": {"name": "AzkabanCommonLinkisReadJob", "extends": "AzkabanCommonLinkisJob", "implements": ["ReadJob"], "modifiers": ["public"]}}, {"method_name": "getCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCode() {    return code;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setCode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCode(String code) {    this.code = code;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getShortUrl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getShortUrl() {    return shortUrl;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setShortUrl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setShortUrl(String shortUrl) {    this.shortUrl = shortUrl;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getEntryType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getEntryType() {    return entryType;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setEntryType", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setEntryType(String entryType) {    this.entryType = entryType;    return this;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getMessage() {    return message;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setMessage(String message) {    this.message = message;    return this;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getLongUrl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getLongUrl() {    return longUrl;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setLongUrl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setLongUrl(String longUrl) {    this.longUrl = longUrl;    return this;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OriginData", "snippet": "  public OriginData getData() {    return data;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "setData", "params": ["OriginData"], "throws": null, "modifiers": ["public"], "return_type": "ShortUrlVO", "snippet": "  public ShortUrlVO setData(OriginData data) {    this.data = data;    return this;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "equals", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object o) {    if (this == o) return true;    if (!(o instanceof ShortUrlVO)) return false;    ShortUrlVO that = (ShortUrlVO) o;    return Objects.equals(getEntryType(), that.getEntryType()) &&            Objects.equals(getCode(), that.getCode()) &&            Objects.equals(getMessage(), that.getMessage()) &&            Objects.equals(getShortUrl(), that.getShortUrl()) &&            Objects.equals(getLongUrl(), that.getLongUrl()) &&            Objects.equals(getData(), that.getData());  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "hashCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {    return Objects.hash(getEntryType(), getCode(), getMessage(), getShortUrl(), getLongUrl(), getData());  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "ShortUrlVO", "extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"method_name": "getCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCode() {    return code;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "OriginData", "extends": null, "implements": ["Serializable"], "modifiers": []}}, {"method_name": "setCode", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "OriginData", "snippet": "  public OriginData setCode(String code) {    this.code = code;    return this;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "OriginData", "extends": null, "implements": ["Serializable"], "modifiers": []}}, {"method_name": "getShortUrl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getShortUrl() {    return shortUrl;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "OriginData", "extends": null, "implements": ["Serializable"], "modifiers": []}}, {"method_name": "setShortUrl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "OriginData", "snippet": "  public OriginData setShortUrl(String shortUrl) {    this.shortUrl = shortUrl;    return this;  }", "url": "https://raw.githubusercontent.com/wechaturl/wechat_url_api_java_sdk/master/src/main/java/www/wechaturl/us/fangfeng/sdk/vo/ShortUrlVO.java", "stars": "2", "class": {"name": "OriginData", "extends": null, "implements": ["Serializable"], "modifiers": []}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {        SpringApplication.run(SampleConsumerApplication.class, args);    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/SampleConsumerApplication.java", "stars": "2", "class": {"name": "SampleConsumerApplication", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "twoSum", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int[] twoSum(int[] nums, int target) {        HashMap<Integer, Integer> map = new HashMap<>();        for(int i = 0; i < nums.length; i ++) {            if(map.containsKey(target - nums[i])) {                return new int[]{i, map.get(target - nums[i])};            }            map.put(nums[i], i);        }        return null;    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/TwoSum.java", "stars": "1", "class": {"name": "TwoSum", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "invoke", "params": ["Object", "Object"], "throws": ["IllegalAccessException", "InvocationTargetException"], "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object invoke(Object target, Object[] args) throws IllegalAccessException, InvocationTargetException {    throw new ReflectionException(exceptionMessage);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/invoker/AmbiguousMethodInvoker.java", "stars": "15", "class": {"name": "AmbiguousMethodInvoker", "extends": "MethodInvoker", "implements": null, "modifiers": ["public"]}}, {"method_name": "onStartPrepared", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStartPrepared(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onPrepared", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPrepared(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickStartIcon", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStartIcon(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickStartError", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStartError(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickStop", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStop(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickStopFullscreen", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStopFullscreen(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickResume", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickResume(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickResumeFullscreen", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickResumeFullscreen(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickSeekbar", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickSeekbar(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickSeekbarFullscreen", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickSeekbarFullscreen(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onAutoComplete", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAutoComplete(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onEnterFullscreen", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnterFullscreen(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onQuitFullscreen", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onQuitFullscreen(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onQuitSmallWidget", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onQuitSmallWidget(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onEnterSmallWidget", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnterSmallWidget(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onTouchScreenSeekVolume", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTouchScreenSeekVolume(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onTouchScreenSeekPosition", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTouchScreenSeekPosition(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onTouchScreenSeekLight", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTouchScreenSeekLight(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onPlayError", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPlayError(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickStartThumb", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickStartThumb(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickBlank", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickBlank(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "onClickBlankFullscreen", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClickBlankFullscreen(String url, Object... objects) {    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/listener/GSYSampleCallBack.java", "stars": "2", "class": {"name": "GSYSampleCallBack", "extends": null, "implements": ["VideoAllCallBack"], "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\tint n;\t\tScanner sc = new Scanner(System.in);\t\tSystem.out.println(\"enter no of rows:\");\t\tn = sc.nextInt();\t\tfor(int i = 1;i <= n; i++) {\t\t\t\t\t\tfor(int j = 1 ;j <= i ; j++) {\t\t\t\tSystem.out.print(\"*\");\t\t\t}\t\t\tSystem.out.print(\"\\n\");\t\t}\t\tsc.close();\t}", "url": "https://raw.githubusercontent.com/likith22/java-programs/master/RightTriangle.java", "stars": "3", "class": {"name": "RightTriangle", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "mappingFrom", "params": ["MappingsLoader"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void mappingFrom(MappingsLoader loader) {    app.loadMappingsUsing(loader);  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockApp.java", "stars": "8", "class": {"name": "WireMockApp", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "stubFor", "params": ["MappingBuilder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stubFor(MappingBuilder mappingBuilder) {    app.addStubMapping(mappingBuilder.build());  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockApp.java", "stars": "8", "class": {"name": "WireMockApp", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "buildStubRequestHandler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StubRequestHandler", "snippet": "  public StubRequestHandler buildStubRequestHandler() {    Options options = app.getOptions();    Map<String, PostServeAction> postServeActions = options.extensionsOfType(PostServeAction.class);    return new StubRequestHandler(      app,      new StubResponseRenderer(        options.filesRoot(),        app.getGlobalSettingsHolder(),        new ProxyResponseRenderer(          options.proxyVia(),          options.httpsSettings().trustStore(),          options.shouldPreserveHostHeader(),          options.proxyHostHeader(),          app.getGlobalSettingsHolder()),        ImmutableList.copyOf(options.extensionsOfType(ResponseTransformer.class).values())      ),      app,      postServeActions,      new DisabledRequestJournal()    ) {      @Override      protected boolean logRequests() {        return false;      }    };  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/wiremock/src/main/java/com/cognifide/aem/stubs/wiremock/WireMockApp.java", "stars": "8", "class": {"name": "WireMockApp", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws Exception {        //MBG \u6267\u884c\u8fc7\u7a0b\u4e2d\u7684\u8b66\u544a\u4fe1\u606f        List<String> warnings = new ArrayList<String>();        //\u5f53\u751f\u6210\u7684\u4ee3\u7801\u91cd\u590d\u65f6\uff0c\u8986\u76d6\u539f\u4ee3\u7801        boolean overwrite = true;        //\u8bfb\u53d6\u6211\u4eec\u7684 MBG \u914d\u7f6e\u6587\u4ef6        InputStream is = Generator.class.getResourceAsStream(\"/generatorConfig.xml\");        ConfigurationParser cp = new ConfigurationParser(warnings);        Configuration config = cp.parseConfiguration(is);        is.close();        DefaultShellCallback callback = new DefaultShellCallback(overwrite);        //\u521b\u5efa MBG        MyBatisGenerator myBatisGenerator = new MyBatisGenerator(config, callback, warnings);        //\u6267\u884c\u751f\u6210\u4ee3\u7801        myBatisGenerator.generate(null);        //\u8f93\u51fa\u8b66\u544a\u4fe1\u606f        for (String warning : warnings) {            System.out.println(warning);        }    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/Generator.java", "stars": "2", "class": {"name": "Generator", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "report", "params": ["JobReport"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> report(@RequestBody JobReport jobReport){        LOG.info(\"Report obj : {}\", Json.toJson(jobReport,null));        JobContainer jobContainer = executorService.getJobContainer(jobReport.getId());        if(null != jobContainer){            jobReport.setJobId(jobContainer.getJobId());            return callBackService.report(jobReport);        }        return new Response<>().successResponse(true);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/controller/TaskProcessController.java", "stars": "23", "class": {"name": "TaskProcessController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "state", "params": ["TaskState"], "throws": null, "modifiers": ["public"], "return_type": "Response<Object>", "snippet": "    public Response<Object> state(@RequestBody TaskState taskState){        Map<String, Object> runtimeParams = new HashMap<>(1);        JobContainer jobContainer = executorService.getJobContainer(taskState.getTaskId());        if(null != jobContainer){            jobContainer.updateTaskState(taskState);            runtimeParams.put(\"maxByteSpeed\", jobContainer.getRuntime().getMaxByteSpeed());        }        //return runtime parameters        return new Response<>().successResponse(runtimeParams);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/controller/TaskProcessController.java", "stars": "23", "class": {"name": "TaskProcessController", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "showKeyboard", "params": ["View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showKeyboard(View view) {        if (view == null) {            return;        }        InputMethodManager imm = (InputMethodManager) view.getContext()                .getSystemService(Context.INPUT_METHOD_SERVICE);        if (imm != null) {            imm.showSoftInput(view, 0);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/KeyboardUtils.java", "stars": "1", "class": {"name": "KeyboardUtils", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "hideKeyboard", "params": ["View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void hideKeyboard(View view) {        if (view == null) {            return;        }        InputMethodManager imm = (InputMethodManager) view.getContext()                .getSystemService(Context.INPUT_METHOD_SERVICE);        if (imm != null) {            imm.hideSoftInputFromWindow(view.getWindowToken(), 0);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/KeyboardUtils.java", "stars": "1", "class": {"name": "KeyboardUtils", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "toggleSoftInput", "params": ["View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleSoftInput(View view) {        if (view == null) {            return;        }        InputMethodManager imm = (InputMethodManager) view.getContext()                .getSystemService(Context.INPUT_METHOD_SERVICE);        if (imm != null) {            imm.toggleSoftInput(0, 0);        }    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/KeyboardUtils.java", "stars": "1", "class": {"name": "KeyboardUtils", "extends": null, "implements": null, "modifiers": ["public", "final"]}}, {"method_name": "BEGIN", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void BEGIN() {    RESET();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "RESET", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void RESET() {    localSQL.set(new SQL());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "SELECT", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void SELECT(String columns) {    sql().SELECT(columns);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "SELECT_DISTINCT", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void SELECT_DISTINCT(String columns) {    sql().SELECT_DISTINCT(columns);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "FROM", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void FROM(String table) {    sql().FROM(table);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "JOIN", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void JOIN(String join) {    sql().JOIN(join);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "INNER_JOIN", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void INNER_JOIN(String join) {    sql().INNER_JOIN(join);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "LEFT_OUTER_JOIN", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void LEFT_OUTER_JOIN(String join) {    sql().LEFT_OUTER_JOIN(join);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "RIGHT_OUTER_JOIN", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void RIGHT_OUTER_JOIN(String join) {    sql().RIGHT_OUTER_JOIN(join);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "OUTER_JOIN", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void OUTER_JOIN(String join) {    sql().OUTER_JOIN(join);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "WHERE", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void WHERE(String conditions) {    sql().WHERE(conditions);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "OR", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void OR() {    sql().OR();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "AND", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void AND() {    sql().AND();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "GROUP_BY", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void GROUP_BY(String columns) {    sql().GROUP_BY(columns);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "HAVING", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void HAVING(String conditions) {    sql().HAVING(conditions);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "ORDER_BY", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void ORDER_BY(String columns) {    sql().ORDER_BY(columns);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "SQL", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String SQL() {    try {      return sql().toString();    } finally {      RESET();    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "sql", "params": [], "throws": null, "modifiers": ["private", "static"], "return_type": "SQL", "snippet": "  private static SQL sql() {    return localSQL.get();  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/SelectBuilder.java", "stars": "15", "class": {"name": "SelectBuilder", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getRotation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation getRotation() {        return rotation;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class": {"name": "RotationEvent", "extends": "Event", "implements": null, "modifiers": ["public"]}}, {"method_name": "getPrevRotation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation getPrevRotation() {        return prevRotation;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class": {"name": "RotationEvent", "extends": "Event", "implements": null, "modifiers": ["public"]}}, {"method_name": "getRenderYawOffset", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getRenderYawOffset() {        return renderYawOffset;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class": {"name": "RotationEvent", "extends": "Event", "implements": null, "modifiers": ["public"]}}, {"method_name": "getPrevRenderYawOffset", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getPrevRenderYawOffset() {        return prevRenderYawOffset;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class": {"name": "RotationEvent", "extends": "Event", "implements": null, "modifiers": ["public"]}}, {"method_name": "setRenderYawOffset", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRenderYawOffset(float renderYawOffset) {        this.renderYawOffset = renderYawOffset;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class": {"name": "RotationEvent", "extends": "Event", "implements": null, "modifiers": ["public"]}}, {"method_name": "setPrevRenderYawOffset", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPrevRenderYawOffset(float prevRenderYawOffset) {        this.prevRenderYawOffset = prevRenderYawOffset;    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/RotationEvent.java", "stars": "12", "class": {"name": "RotationEvent", "extends": "Event", "implements": null, "modifiers": ["public"]}}, {"method_name": "getErrorPath", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getErrorPath() {        return \"/error\";    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ErrorPageController.java", "stars": "1", "class": {"name": "ErrorPageController", "extends": "ContentBaseController", "implements": ["ErrorController"], "modifiers": ["public"]}}, {"method_name": "handleError", "params": ["HttpServletRequest"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String handleError(HttpServletRequest request) {        Integer statusCode = (Integer) request.getAttribute(\"javax.servlet.error.status_code\");        if (statusCode == 404) {            return BASE_DIR + \"404\";        } else {            return BASE_DIR + \"500\";        }    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/controller/ErrorPageController.java", "stars": "1", "class": {"name": "ErrorPageController", "extends": "ContentBaseController", "implements": ["ErrorController"], "modifiers": ["public"]}}, {"method_name": "setProperties", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProperties(Properties properties) {    Properties driverProperties = new Properties();    MetaObject metaDataSource = SystemMetaObject.forObject(dataSource);    for (Object key : properties.keySet()) {      String propertyName = (String) key;      if (propertyName.startsWith(DRIVER_PROPERTY_PREFIX)) {        String value = properties.getProperty(propertyName);        driverProperties.setProperty(propertyName.substring(DRIVER_PROPERTY_PREFIX_LENGTH), value);      } else if (metaDataSource.hasSetter(propertyName)) {        String value = (String) properties.get(propertyName);        Object convertedValue = convertValue(metaDataSource, propertyName, value);        metaDataSource.setValue(propertyName, convertedValue);      } else {        throw new DataSourceException(\"Unknown DataSource property: \" + propertyName);      }    }    if (driverProperties.size() > 0) {      metaDataSource.setValue(\"driverProperties\", driverProperties);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.java", "stars": "15", "class": {"name": "UnpooledDataSourceFactory", "extends": null, "implements": ["DataSourceFactory"], "modifiers": ["public"]}}, {"method_name": "getDataSource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "  public DataSource getDataSource() {    return dataSource;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.java", "stars": "15", "class": {"name": "UnpooledDataSourceFactory", "extends": null, "implements": ["DataSourceFactory"], "modifiers": ["public"]}}, {"method_name": "convertValue", "params": ["MetaObject", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "  private Object convertValue(MetaObject metaDataSource, String propertyName, String value) {    Object convertedValue = value;    Class<?> targetType = metaDataSource.getSetterType(propertyName);    if (targetType == Integer.class || targetType == int.class) {      convertedValue = Integer.valueOf(value);    } else if (targetType == Long.class || targetType == long.class) {      convertedValue = Long.valueOf(value);    } else if (targetType == Boolean.class || targetType == boolean.class) {      convertedValue = Boolean.valueOf(value);    }    return convertedValue;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/datasource/unpooled/UnpooledDataSourceFactory.java", "stars": "15", "class": {"name": "UnpooledDataSourceFactory", "extends": null, "implements": ["DataSourceFactory"], "modifiers": ["public"]}}, {"method_name": "testStaticResource", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testStaticResource() {\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/css/application.css\", String.class);\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\t\tassertThat(entity.getBody()).contains(\"color: green;\");\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-devtools/src/test/java/smoketest/devtools/SampleDevToolsApplicationIntegrationTests.java", "stars": "47572", "class": {"name": "SampleDevToolsApplicationIntegrationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testPublicResource", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testPublicResource() {\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/public.txt\", String.class);\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\t\tassertThat(entity.getBody()).contains(\"public file\");\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-devtools/src/test/java/smoketest/devtools/SampleDevToolsApplicationIntegrationTests.java", "stars": "47572", "class": {"name": "SampleDevToolsApplicationIntegrationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testClassResource", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testClassResource() {\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/application.properties\", String.class);\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-devtools/src/test/java/smoketest/devtools/SampleDevToolsApplicationIntegrationTests.java", "stars": "47572", "class": {"name": "SampleDevToolsApplicationIntegrationTests", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "invoke", "params": ["Object", "Method", "Object"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object invoke(Object proxy, Method method, Object[] params) throws Throwable {    try {      if (Object.class.equals(method.getDeclaringClass())) {        return method.invoke(this, params);      }      if (EXECUTE_METHODS.contains(method.getName())) {        if (isDebugEnabled()) {          debug(\" Executing: \" + removeBreakingWhitespace((String) params[0]), true);        }        if (\"executeQuery\".equals(method.getName())) {          ResultSet rs = (ResultSet) method.invoke(statement, params);          return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);        } else {          return method.invoke(statement, params);        }      } else if (\"getResultSet\".equals(method.getName())) {        ResultSet rs = (ResultSet) method.invoke(statement, params);        return rs == null ? null : ResultSetLogger.newInstance(rs, statementLog, queryStack);      } else {        return method.invoke(statement, params);      }    } catch (Throwable t) {      throw ExceptionUtil.unwrapThrowable(t);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java", "stars": "15", "class": {"name": "StatementLogger", "extends": "BaseJdbcLogger", "implements": ["InvocationHandler"], "modifiers": ["public", "final"]}}, {"method_name": "newInstance", "params": ["Statement", "Log", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Statement", "snippet": "  public static Statement newInstance(Statement stmt, Log statementLog, int queryStack) {    InvocationHandler handler = new StatementLogger(stmt, statementLog, queryStack);    ClassLoader cl = Statement.class.getClassLoader();    return (Statement) Proxy.newProxyInstance(cl, new Class[]{Statement.class}, handler);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java", "stars": "15", "class": {"name": "StatementLogger", "extends": "BaseJdbcLogger", "implements": ["InvocationHandler"], "modifiers": ["public", "final"]}}, {"method_name": "getStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Statement", "snippet": "  public Statement getStatement() {    return statement;  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/StatementLogger.java", "stars": "15", "class": {"name": "StatementLogger", "extends": "BaseJdbcLogger", "implements": ["InvocationHandler"], "modifiers": ["public", "final"]}}, {"method_name": "unexpectedType", "params": ["Type", "Type", "AbstractInsnNode", "AbstractValue", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "ResolvableAnalyzerException", "snippet": "\tpublic ResolvableAnalyzerException unexpectedType(\t\t\tType expectedType,\t\t\tType actualType,\t\t\tAbstractInsnNode insn,\t\t\tAbstractValue actualValue,\t\t\tTypeMismatchKind errorType) {\t\tswitch(errorType) {\t\t\tcase PUTSTATIC:\t\t\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\t\t\t\t\t// Validate that the argument value is no longer null when stack-frames are filled out\t\t\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\t\t\t\t\tAbstractValue methodContext = frame.getStack(frame.getStackSize() - 1);\t\t\t\t\treturn TypeUtil.isSubTypeOfOrNull(typeChecker, methodContext, expectedType);\t\t\t\t}, insn, \"Expected type: \" + expectedType);\t\t\tcase GETFIELD:\t\t\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\t\t\t\t\t// Validate that the top of the stack matches the expected type\t\t\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\t\t\t\t\tAbstractValue fieldContext = frame.getStack(frame.getStackSize() - 1);\t\t\t\t\treturn TypeUtil.isSubTypeOf(typeChecker, fieldContext.getType(), expectedType);\t\t\t\t}, insn, \"Expected type: \" + expectedType);\t\t\tcase RETURN:\t\t\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\t\t\t\t\t// Validate that the top of the stack matches the expected type\t\t\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\t\t\t\t\tAbstractValue returnValue = frame.getStack(frame.getStackSize() - 1);\t\t\t\t\treturn TypeUtil.isSubTypeOfOrNull(typeChecker, returnValue, expectedType);\t\t\t\t}, insn, \"Incompatible return type, found '\" + actualType + \"', expected: \" +\t\t\t\t\t\texpectedType, expectedType, actualValue);\t\t\tdefault:\t\t\t\tbreak;\t\t}\t\tthrow new IllegalStateException(\"Unhandled exception in factory\");\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class": {"name": "ResolvableExceptionFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "unexpectedMethodHostType", "params": ["Type", "Type", "MethodInsnNode", "AbstractValue", "List<AbstractValue>", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "AnalyzerException", "snippet": "\tpublic AnalyzerException unexpectedMethodHostType(\t\t\tType expectedType,\t\t\tType actualType,\t\t\tMethodInsnNode insn,\t\t\tAbstractValue actualValue,\t\t\tList<? extends AbstractValue> stackValues,\t\t\tTypeMismatchKind errorType) {\t\tType[] args = Type.getArgumentTypes(insn.desc);\t\tType owner = Type.getObjectType(insn.owner);\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\t\t\t// Validate that the owner value is no longer null when stack-frames are filled out\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\t\t\t// TODO: Validate the stack index is correct here\t\t\tAbstractValue methodContext =\t\t\t\t\tframe.getStack(frame.getStackSize() - (args.length + 1));\t\t\treturn TypeUtil.isSubTypeOf(typeChecker, methodContext.getType(), owner);\t\t}, insn, \"Method owner does not match type on stack\");\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class": {"name": "ResolvableExceptionFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "unexpectedMethodArgType", "params": ["Type", "Type", "AbstractInsnNode", "AbstractValue", "List<AbstractValue>", "int", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "AnalyzerException", "snippet": "\tpublic AnalyzerException unexpectedMethodArgType(\t\t\tType expectedType, Type actualType,\t\t\tAbstractInsnNode insn,\t\t\tAbstractValue actualValue,\t\t\tList<? extends AbstractValue> stackValues,\t\t\tint argIndex,\t\t\tTypeMismatchKind errorType) {\t\tString methodDescriptor = (insn.getOpcode() == INVOKEDYNAMIC) ?\t\t\t\t((InvokeDynamicInsnNode) insn).desc :\t\t\t\t((MethodInsnNode) insn).desc;\t\tType[] args = Type.getArgumentTypes(methodDescriptor);\t\treturn new ResolvableAnalyzerException((methodNode, frames) -> {\t\t\t// Validate that the argument value is no longer null when stack-frames are filled out\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\t\t\tAbstractValue methodContext = frame.getStack(frame.getStackSize() - (args.length - argIndex + 1));\t\t\treturn TypeUtil.isSubTypeOfOrNull(typeChecker, methodContext, expectedType);\t\t},insn, \"Argument type was \\\"\" + actualType + \"\\\" but expected \\\"\" + expectedType + \"\\\"\");\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class": {"name": "ResolvableExceptionFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "unexpectedNullReference", "params": ["MethodInsnNode", "AbstractValue", "List<AbstractValue>", "TypeMismatchKind"], "throws": null, "modifiers": ["public"], "return_type": "AnalyzerException", "snippet": "\tpublic AnalyzerException unexpectedNullReference(\t\t\tMethodInsnNode insn,\t\t\tAbstractValue actualValue,\t\t\tList<? extends AbstractValue> stackValues,\t\t\tTypeMismatchKind errorType) {\t\tType[] args = Type.getArgumentTypes(insn.desc);\t\treturn new ResolvableAnalyzerException((method, frames) -> {\t\t\t// Validate that the owner value is no longer null when stack-frames are filled out\t\t\tFrame<AbstractValue> frame = frames[InsnUtil.index(insn)];\t\t\tAbstractValue methodContext = frame.getStack(frame.getStackSize() - (args.length + 1));\t\t\treturn !methodContext.isNull();\t\t}, insn, \"Cannot call method on null reference\");\t}", "url": "https://raw.githubusercontent.com/Col-E/SimAnalyzer/master/src/main/java/me/coley/analysis/exception/ResolvableExceptionFactory.java", "stars": "12", "class": {"name": "ResolvableExceptionFactory", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "printStackTrace", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace() {        super.printStackTrace();    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class": {"name": "SignUpRestrictedException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "printStackTrace", "params": ["PrintStream"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintStream s) {        super.printStackTrace(s);    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class": {"name": "SignUpRestrictedException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "printStackTrace", "params": ["PrintWriter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void printStackTrace(PrintWriter s) {        super.printStackTrace(s);    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class": {"name": "SignUpRestrictedException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCode() {        return code;    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class": {"name": "SignUpRestrictedException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "getErrorMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getErrorMessage() {        return errorMessage;    }", "url": "https://raw.githubusercontent.com/aayush-grover/SoundCloud-Rest-Api/master/musichoster-service/src/main/java/com/upgrad/musichoster/service/exception/SignUpRestrictedException.java", "stars": "2", "class": {"name": "SignUpRestrictedException", "extends": "Exception", "implements": null, "modifiers": ["public"]}}, {"method_name": "setUp", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void setUp() throws Exception {    // create a SqlSessionFactory    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/cache/mybatis-config.xml\")) {      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);    }    // populate in-memory database    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),            \"org/apache/ibatis/submitted/cache/CreateDB.sql\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testplan1", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testplan1() {    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(false)) {      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(false)) {      try {        PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);        pm.delete(1);        Assertions.assertEquals(1, pm.findAll().size());      } finally {        sqlSession2.commit();      }    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testplan2", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testplan2() {    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(false)) {      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(false)) {      try {        PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);        pm.delete(1);      } finally {        sqlSession2.rollback();      }    }    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(false)) {      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "testplan3", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testplan3() {    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);      pm.delete(1);    }    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);      Assertions.assertEquals(1, pm.findAll().size());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldInsertWithOptionsFlushesCache", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldInsertWithOptionsFlushesCache() {    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);      Person p = new Person(3, \"hello\", \"world\");      pm.createWithOptions(p);    }    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);      Assertions.assertEquals(3, pm.findAll().size());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldApplyFlushCacheOptions", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyFlushCacheOptions() {    try (SqlSession sqlSession1 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession1.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }    try (SqlSession sqlSession2 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession2.getMapper(PersonMapper.class);      Person p = new Person(3, \"hello\", \"world\");      pm.createWithoutFlushCache(p);    }    try (SqlSession sqlSession3 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession3.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }    try (SqlSession sqlSession4 = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession4.getMapper(PersonMapper.class);      Assertions.assertEquals(3, pm.findWithFlushCache().size());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldApplyCacheNamespaceRef", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyCacheNamespaceRef() {    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());      Person p = new Person(3, \"hello\", \"world\");      pm.createWithoutFlushCache(p);    }    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);      Assertions.assertEquals(2, pm.findAll().size());    }    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {      ImportantPersonMapper pm = sqlSession.getMapper(ImportantPersonMapper.class);      Assertions.assertEquals(3, pm.findWithFlushCache().size());    }    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);      Assertions.assertEquals(3, pm.findAll().size());      Person p = new Person(4, \"foo\", \"bar\");      pm.createWithoutFlushCache(p);    }    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {      SpecialPersonMapper pm = sqlSession.getMapper(SpecialPersonMapper.class);      Assertions.assertEquals(4, pm.findWithFlushCache().size());    }    try (SqlSession sqlSession = sqlSessionFactory.openSession(true)) {      PersonMapper pm = sqlSession.getMapper(PersonMapper.class);      Assertions.assertEquals(4, pm.findAll().size());    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldApplyCustomCacheProperties", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldApplyCustomCacheProperties() {    CustomCache customCache = unwrap(sqlSessionFactory.getConfiguration().getCache(CustomCacheMapper.class.getName()));    Assertions.assertEquals(\"bar\", customCache.getStringValue());    Assertions.assertEquals(1, customCache.getIntegerValue().intValue());    Assertions.assertEquals(2, customCache.getIntValue());    Assertions.assertEquals(3, customCache.getLongWrapperValue().longValue());    Assertions.assertEquals(4, customCache.getLongValue());    Assertions.assertEquals(5, customCache.getShortWrapperValue().shortValue());    Assertions.assertEquals(6, customCache.getShortValue());    Assertions.assertEquals((float) 7.1, customCache.getFloatWrapperValue(), 1);    Assertions.assertEquals((float) 8.1, customCache.getFloatValue(), 1);    Assertions.assertEquals(9.01, customCache.getDoubleWrapperValue(), 1);    Assertions.assertEquals(10.01, customCache.getDoubleValue(), 1);    Assertions.assertEquals((byte) 11, customCache.getByteWrapperValue().byteValue());    Assertions.assertEquals((byte) 12, customCache.getByteValue());    Assertions.assertTrue(customCache.getBooleanWrapperValue());    Assertions.assertTrue(customCache.isBooleanValue());  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldErrorUnsupportedProperties", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorUnsupportedProperties() {    when(() -> sqlSessionFactory.getConfiguration().addMapper(CustomCacheUnsupportedPropertyMapper.class));    then(caughtException()).isInstanceOf(CacheException.class)      .hasMessage(\"Unsupported property type for cache: 'date' of type class java.util.Date\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldErrorInvalidCacheNamespaceRefAttributesSpecifyBoth", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorInvalidCacheNamespaceRefAttributesSpecifyBoth() {    when(() -> sqlSessionFactory.getConfiguration().getMapperRegistry()      .addMapper(InvalidCacheNamespaceRefBothMapper.class));    then(caughtException()).isInstanceOf(BuilderException.class)      .hasMessage(\"Cannot use both value() and name() attribute in the @CacheNamespaceRef\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "shouldErrorInvalidCacheNamespaceRefAttributesIsEmpty", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldErrorInvalidCacheNamespaceRefAttributesIsEmpty() {    when(() -> sqlSessionFactory.getConfiguration().getMapperRegistry()      .addMapper(InvalidCacheNamespaceRefEmptyMapper.class));    then(caughtException()).isInstanceOf(BuilderException.class)      .hasMessage(\"Should be specified either value() or name() attribute in the @CacheNamespaceRef\");  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "unwrap", "params": ["Cache"], "throws": null, "modifiers": ["private"], "return_type": "CustomCache", "snippet": "  private CustomCache unwrap(Cache cache){    Field field;    try {      field = cache.getClass().getDeclaredField(\"delegate\");    } catch (NoSuchFieldException e) {      throw new IllegalStateException(e);    }    try {      field.setAccessible(true);      return (CustomCache)field.get(cache);    } catch (IllegalAccessException e) {      throw new IllegalStateException(e);    } finally {      field.setAccessible(false);    }  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cache/CacheTest.java", "stars": "15", "class": {"name": "CacheTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "getStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpStatus", "snippet": "    public HttpStatus getStatus() {        return HttpStatus.INTERNAL_SERVER_ERROR;    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/exception/FileUploadException.java", "stars": "1", "class": {"name": "FileUploadException", "extends": "BaseException", "implements": null, "modifiers": ["public"]}}, {"method_name": "doFilter", "params": ["ServletRequest", "ServletResponse", "FilterChain"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void doFilter(ServletRequest request, ServletResponse response,      FilterChain chain) throws IOException, ServletException {    HttpServletRequest req = (HttpServletRequest) request;    HttpServletResponse resp = (HttpServletResponse) response;    Cookie[] cookies = req.getCookies();    if (cookies != null) {      Cookie cookie = cookies[0];//      String action = request.getParameter(\"action\") != null ? request.getParameter(\"action\") : \"\";//      if (cookie != null && !(\"login\".equals(action))) {      if (cookie != null) {        //cookie.setMaxAge(3600);        cookie.setSecure(true);        cookie.setHttpOnly(true);        resp.addCookie(cookie);      }//      if (null != cookies) {//        for (int i = 0; i < cookies.length; i++) {//          cookies[i].setSecure(true);//          cookies[i].setHttpOnly(true);//          resp.addCookie(cookies[i]);//        }//      }    }    //|| \"/\".equals(req.getRequestURI()    else if(\"/toL\".equals(req.getRequestURI())){      HttpSession session = req.getSession();      String session_id = session.getId();      Cookie cookie = new Cookie(\"JSESSIONID\", session_id);      cookie.setPath(\"/\");      cookie.setSecure(true);      resp.addCookie(cookie);      resp.sendRedirect(\"/toL\");    }    chain.doFilter(req, resp);  }  @Override  public void destroy() {  }  @Override  public void init(FilterConfig arg0) throws ServletException {  }}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/com/webank/wedatasphere/schedulis/web/webapp/error/CookieFilter.java", "stars": "18", "class": {"name": "CookieFilter", "extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"method_name": "destroy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void destroy() {  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/com/webank/wedatasphere/schedulis/web/webapp/error/CookieFilter.java", "stars": "18", "class": {"name": "CookieFilter", "extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"method_name": "init", "params": ["FilterConfig"], "throws": ["ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void init(FilterConfig arg0) throws ServletException {  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/com/webank/wedatasphere/schedulis/web/webapp/error/CookieFilter.java", "stars": "18", "class": {"name": "CookieFilter", "extends": null, "implements": ["Filter"], "modifiers": ["public"]}}, {"method_name": "formatDetailForPopcorn", "params": ["T", "MediaProvider", "SubsProvider"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "ArrayList<Media>", "snippet": "    public abstract ArrayList<Media> formatDetailForPopcorn(T responseItem, MediaProvider mediaProvider, SubsProvider subsProvider);}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/media/response/models/DetailsResponse.java", "stars": "4", "class": {"name": "DetailsResponse", "extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"method_name": "getId", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getId() {\t\treturn Id;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setId", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(Long id) {\t\tId = id;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCliente", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ClienteResumoModel", "snippet": "\tpublic ClienteResumoModel getCliente() {\t\treturn cliente;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setCliente", "params": ["ClienteResumoModel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCliente(ClienteResumoModel cliente) {\t\tthis.cliente = cliente;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDescricao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDescricao() {\t\treturn descricao;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDescricao", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDescricao(String descricao) {\t\tthis.descricao = descricao;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getPreco", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "\tpublic BigDecimal getPreco() {\t\treturn preco;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setPreco", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPreco(BigDecimal preco) {\t\tthis.preco = preco;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getStatus", "params": [], "throws": null, "modifiers": ["public"], "return_type": "StatusOrdemServico", "snippet": "\tpublic StatusOrdemServico getStatus() {\t\treturn status;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setStatus", "params": ["StatusOrdemServico"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStatus(StatusOrdemServico status) {\t\tthis.status = status;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDataAbertura", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataAbertura() {\t\treturn dataAbertura;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDataAbertura", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataAbertura(OffsetDateTime dataAbertura) {\t\tthis.dataAbertura = dataAbertura;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getDataFinalizacao", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OffsetDateTime", "snippet": "\tpublic OffsetDateTime getDataFinalizacao() {\t\treturn dataFinalizacao;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "setDataFinalizacao", "params": ["OffsetDateTime"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDataFinalizacao(OffsetDateTime dataFinalizacao) {\t\tthis.dataFinalizacao = dataFinalizacao;\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/model/OrdemServicoModel.java", "stars": "2", "class": {"name": "OrdemServicoModel", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "testShouldNotAllowMappedStatementsWithDots", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "    void testShouldNotAllowMappedStatementsWithDots() throws IOException {        Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/disallowdotsonnames/ibatisConfig.xml\");        Assertions.assertThrows(PersistenceException.class, () -> new SqlSessionFactoryBuilder().build(reader));    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/disallowdotsonnames/DisallowDotsOnNamesTest.java", "stars": "15", "class": {"name": "DisallowDotsOnNamesTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\t{\t\tScanner in = new Scanner(System.in);\t\t\t\tSystem.out.print(\"How many numbers do you need to draw?\");\t\tint k = in.nextInt();\t\t\t\tSystem.out.print(\"What is the hignest number you can draw?\");\t\tint n = in.nextInt();\t\t\t\t/*compute binomial coefficient n*(n+1)*(n+2)*...*(n-k+1)/(1*2*3*...*k)*/\t\t\t\tint lotteryOdds = 1;\t\tfor(int i = 1;i <= k;i++)\t\t\tlotteryOdds = lotteryOdds * (n - i + 1)/i;\t\t\t\tSystem.out.println(\"Your odds are 1 in \" + lotteryOdds + \".Good luck!\");\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/For.java", "stars": "2", "class": {"name": "For", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOperandString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperandString() {        switch (mode) {        case MODE_INDEXED:            return String.format(\"$%02x,X,#$%02x\", (operand & 0x00ff), ((operand & 0xff00) >> 8));        default:            return super.getOperandString();        }    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/NIM.java", "stars": "4", "class": {"name": "NIM", "extends": "NonBranchInstruction", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_photo_view);        findViews();        initLogic();    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/PhotoViewActivity.java", "stars": "4", "class": {"name": "PhotoViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "findViews", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void findViews () {        viewPager = findViewById(R.id.viewPager);    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/PhotoViewActivity.java", "stars": "4", "class": {"name": "PhotoViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "initLogic", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initLogic() {        viewPager.setAdapter(new PhotoViewAdapter(getIntent().getIntegerArrayListExtra(\"photos\"), getApplicationContext()));        viewPager.setCurrentItem(getIntent().getIntExtra(\"page\", 0));    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/activity/PhotoViewActivity.java", "stars": "4", "class": {"name": "PhotoViewActivity", "extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"method_name": "getUnknownFields", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "com", "snippet": "  public final com.google.protobuf.UnknownFieldSet  getUnknownFields() {    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getDescriptor", "params": [], "throws": null, "modifiers": ["public", "final", "static"], "return_type": "com", "snippet": "  public static final com.google.protobuf.Descriptors.Descriptor      getDescriptor() {    return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_descriptor;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "internalGetFieldAccessorTable", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable      internalGetFieldAccessorTable() {    return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_fieldAccessorTable        .ensureFieldAccessorsInitialized(            generated.xn.services.ex.api.grpcstream.protos.SegmentResp.class, generated.xn.services.ex.api.grpcstream.protos.SegmentResp.Builder.class);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "  public java.lang.String getResult() {    java.lang.Object ref = result_;    if (ref instanceof java.lang.String) {      return (java.lang.String) ref;    } else {      com.google.protobuf.ByteString bs =           (com.google.protobuf.ByteString) ref;      java.lang.String s = bs.toStringUtf8();      result_ = s;      return s;    }  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getResultBytes", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.ByteString      getResultBytes() {    java.lang.Object ref = result_;    if (ref instanceof java.lang.String) {      com.google.protobuf.ByteString b =           com.google.protobuf.ByteString.copyFromUtf8(              (java.lang.String) ref);      result_ = b;      return b;    } else {      return (com.google.protobuf.ByteString) ref;    }  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "isInitialized", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "boolean", "snippet": "  public final boolean isInitialized() {    byte isInitialized = memoizedIsInitialized;    if (isInitialized == 1) return true;    if (isInitialized == 0) return false;    memoizedIsInitialized = 1;    return true;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "writeTo", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void writeTo(com.google.protobuf.CodedOutputStream output)                      throws java.io.IOException {    if (!getResultBytes().isEmpty()) {      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, result_);    }  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getSerializedSize", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSerializedSize() {    int size = memoizedSize;    if (size != -1) return size;    size = 0;    if (!getResultBytes().isEmpty()) {      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, result_);    }    memoizedSize = size;    return size;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "equals", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(final java.lang.Object obj) {    if (obj == this) {     return true;    }    if (!(obj instanceof generated.xn.services.ex.api.grpcstream.protos.SegmentResp)) {      return super.equals(obj);    }    generated.xn.services.ex.api.grpcstream.protos.SegmentResp other = (generated.xn.services.ex.api.grpcstream.protos.SegmentResp) obj;    boolean result = true;    result = result && getResult()        .equals(other.getResult());    return result;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "hashCode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {    if (memoizedHashCode != 0) {      return memoizedHashCode;    }    int hash = 41;    hash = (19 * hash) + getDescriptorForType().hashCode();    hash = (37 * hash) + RESULT_FIELD_NUMBER;    hash = (53 * hash) + getResult().hashCode();    hash = (29 * hash) + unknownFields.hashCode();    memoizedHashCode = hash;    return hash;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(      com.google.protobuf.ByteString data)      throws com.google.protobuf.InvalidProtocolBufferException {    return PARSER.parseFrom(data);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(      com.google.protobuf.ByteString data,      com.google.protobuf.ExtensionRegistryLite extensionRegistry)      throws com.google.protobuf.InvalidProtocolBufferException {    return PARSER.parseFrom(data, extensionRegistry);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(byte[] data)      throws com.google.protobuf.InvalidProtocolBufferException {    return PARSER.parseFrom(data);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(      byte[] data,      com.google.protobuf.ExtensionRegistryLite extensionRegistry)      throws com.google.protobuf.InvalidProtocolBufferException {    return PARSER.parseFrom(data, extensionRegistry);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(java.io.InputStream input)      throws java.io.IOException {    return com.google.protobuf.GeneratedMessageV3        .parseWithIOException(PARSER, input);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(      java.io.InputStream input,      com.google.protobuf.ExtensionRegistryLite extensionRegistry)      throws java.io.IOException {    return com.google.protobuf.GeneratedMessageV3        .parseWithIOException(PARSER, input, extensionRegistry);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseDelimitedFrom", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseDelimitedFrom(java.io.InputStream input)      throws java.io.IOException {    return com.google.protobuf.GeneratedMessageV3        .parseDelimitedWithIOException(PARSER, input);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseDelimitedFrom", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseDelimitedFrom(      java.io.InputStream input,      com.google.protobuf.ExtensionRegistryLite extensionRegistry)      throws java.io.IOException {    return com.google.protobuf.GeneratedMessageV3        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(      com.google.protobuf.CodedInputStream input)      throws java.io.IOException {    return com.google.protobuf.GeneratedMessageV3        .parseWithIOException(PARSER, input);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parseFrom", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp parseFrom(      com.google.protobuf.CodedInputStream input,      com.google.protobuf.ExtensionRegistryLite extensionRegistry)      throws java.io.IOException {    return com.google.protobuf.GeneratedMessageV3        .parseWithIOException(PARSER, input, extensionRegistry);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "newBuilderForType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "newBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder() {    return DEFAULT_INSTANCE.toBuilder();  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "newBuilder", "params": ["generated"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder(generated.xn.services.ex.api.grpcstream.protos.SegmentResp prototype) {    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "toBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder toBuilder() {    return this == DEFAULT_INSTANCE        ? new Builder() : new Builder().mergeFrom(this);  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "newBuilderForType", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "  protected Builder newBuilderForType(      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {    Builder builder = new Builder(parent);    return builder;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getDefaultInstance", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentResp getDefaultInstance() {    return DEFAULT_INSTANCE;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "parser", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "  public static com.google.protobuf.Parser<SegmentResp> parser() {    return PARSER;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getParserForType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.Parser<SegmentResp> getParserForType() {    return PARSER;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getDefaultInstanceForType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "  public generated.xn.services.ex.api.grpcstream.protos.SegmentResp getDefaultInstanceForType() {    return DEFAULT_INSTANCE;  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "SegmentResp", "extends": "com", "implements": ["SegmentRespOrBuilder"], "modifiers": ["public", "final"]}}, {"method_name": "getDescriptor", "params": [], "throws": null, "modifiers": ["public", "final", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor        getDescriptor() {      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_descriptor;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "internalGetFieldAccessorTable", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable        internalGetFieldAccessorTable() {      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_fieldAccessorTable          .ensureFieldAccessorsInitialized(              generated.xn.services.ex.api.grpcstream.protos.SegmentResp.class, generated.xn.services.ex.api.grpcstream.protos.SegmentResp.Builder.class);    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "maybeForceBuilderInitialization", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void maybeForceBuilderInitialization() {      if (com.google.protobuf.GeneratedMessageV3              .alwaysUseFieldBuilders) {      }    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "clear", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clear() {      super.clear();      result_ = \"\";      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "getDescriptorForType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Descriptors.Descriptor        getDescriptorForType() {      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentResp_descriptor;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "getDefaultInstanceForType", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentResp getDefaultInstanceForType() {      return generated.xn.services.ex.api.grpcstream.protos.SegmentResp.getDefaultInstance();    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "build", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentResp build() {      generated.xn.services.ex.api.grpcstream.protos.SegmentResp result = buildPartial();      if (!result.isInitialized()) {        throw newUninitializedMessageException(result);      }      return result;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "buildPartial", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentResp buildPartial() {      generated.xn.services.ex.api.grpcstream.protos.SegmentResp result = new generated.xn.services.ex.api.grpcstream.protos.SegmentResp(this);      result.result_ = result_;      onBuilt();      return result;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "clone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clone() {      return (Builder) super.clone();    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setField", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setField(        com.google.protobuf.Descriptors.FieldDescriptor field,        Object value) {      return (Builder) super.setField(field, value);    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "clearField", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearField(        com.google.protobuf.Descriptors.FieldDescriptor field) {      return (Builder) super.clearField(field);    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "clearOneof", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearOneof(        com.google.protobuf.Descriptors.OneofDescriptor oneof) {      return (Builder) super.clearOneof(oneof);    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setRepeatedField", "params": ["com", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setRepeatedField(        com.google.protobuf.Descriptors.FieldDescriptor field,        int index, Object value) {      return (Builder) super.setRepeatedField(field, index, value);    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "addRepeatedField", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder addRepeatedField(        com.google.protobuf.Descriptors.FieldDescriptor field,        Object value) {      return (Builder) super.addRepeatedField(field, value);    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "mergeFrom", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(com.google.protobuf.Message other) {      if (other instanceof generated.xn.services.ex.api.grpcstream.protos.SegmentResp) {        return mergeFrom((generated.xn.services.ex.api.grpcstream.protos.SegmentResp)other);      } else {        super.mergeFrom(other);        return this;      }    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "mergeFrom", "params": ["generated"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(generated.xn.services.ex.api.grpcstream.protos.SegmentResp other) {      if (other == generated.xn.services.ex.api.grpcstream.protos.SegmentResp.getDefaultInstance()) return this;      if (!other.getResult().isEmpty()) {        result_ = other.result_;        onChanged();      }      onChanged();      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "isInitialized", "params": [], "throws": null, "modifiers": ["public", "final"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {      return true;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "mergeFrom", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(        com.google.protobuf.CodedInputStream input,        com.google.protobuf.ExtensionRegistryLite extensionRegistry)        throws java.io.IOException {      generated.xn.services.ex.api.grpcstream.protos.SegmentResp parsedMessage = null;      try {        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);      } catch (com.google.protobuf.InvalidProtocolBufferException e) {        parsedMessage = (generated.xn.services.ex.api.grpcstream.protos.SegmentResp) e.getUnfinishedMessage();        throw e.unwrapIOException();      } finally {        if (parsedMessage != null) {          mergeFrom(parsedMessage);        }      }      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "getResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.lang.String getResult() {      java.lang.Object ref = result_;      if (!(ref instanceof java.lang.String)) {        com.google.protobuf.ByteString bs =            (com.google.protobuf.ByteString) ref;        java.lang.String s = bs.toStringUtf8();        result_ = s;        return s;      } else {        return (java.lang.String) ref;      }    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "getResultBytes", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString        getResultBytes() {      java.lang.Object ref = result_;      if (ref instanceof String) {        com.google.protobuf.ByteString b =             com.google.protobuf.ByteString.copyFromUtf8(                (java.lang.String) ref);        result_ = b;        return b;      } else {        return (com.google.protobuf.ByteString) ref;      }    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setResult", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setResult(        java.lang.String value) {      if (value == null) {    throw new NullPointerException();  }        result_ = value;      onChanged();      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "clearResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearResult() {            result_ = getDefaultInstance().getResult();      onChanged();      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setResultBytes", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setResultBytes(        com.google.protobuf.ByteString value) {      if (value == null) {    throw new NullPointerException();  }  checkByteStringIsUtf8(value);            result_ = value;      onChanged();      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "setUnknownFields", "params": ["com"], "throws": null, "modifiers": ["public", "final"], "return_type": "Builder", "snippet": "    public final Builder setUnknownFields(        final com.google.protobuf.UnknownFieldSet unknownFields) {      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "mergeUnknownFields", "params": ["com"], "throws": null, "modifiers": ["public", "final"], "return_type": "Builder", "snippet": "    public final Builder mergeUnknownFields(        final com.google.protobuf.UnknownFieldSet unknownFields) {      return this;    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentResp.java", "stars": "3", "class": {"name": "Builder", "extends": "com", "implements": ["generated"], "modifiers": ["public", "final", "static"]}}, {"method_name": "Search", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<Book>", "snippet": "    public List<Book> Search(String keywords) {        return bookDAO.findAllByTitleLikeOrAuthorLike('%' + keywords + '%', '%' + keywords + '%');    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/service/BookService.java", "stars": "2", "class": {"name": "BookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "list", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Book>", "snippet": "    public List<Book> list() {        Sort sort = Sort.by(Sort.Direction.DESC, \"id\");        return bookDAO.findAll(sort);    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/service/BookService.java", "stars": "2", "class": {"name": "BookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "addOrUpdate", "params": ["Book"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addOrUpdate(Book book) {        bookDAO.save(book);    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/service/BookService.java", "stars": "2", "class": {"name": "BookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "deleteById", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteById(int id) {        bookDAO.deleteById(id);    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/service/BookService.java", "stars": "2", "class": {"name": "BookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "listByCategory", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "List<Book>", "snippet": "    public List<Book> listByCategory(int cid) {        Category category = categoryService.get(cid);        return bookDAO.findAllByCategory(category);    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/service/BookService.java", "stars": "2", "class": {"name": "BookService", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getOperandString", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperandString() {        switch (mode) {        case MODE_INDEXED:            return String.format(\"$%02x,X,#$%02x\", (operand & 0x00ff), ((operand & 0xff00) >> 8));        default:            return super.getOperandString();        }    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/TMM.java", "stars": "4", "class": {"name": "TMM", "extends": "NonBranchInstruction", "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws InterruptedException {        // \u9ed8\u8ba4\u5728 /test \u76ee\u5f55\u4e0b\u8fd0\u884c        MiraiConsolePureLoader.load(args[0], args[1]); // \u542f\u52a8 console        // \u963b\u6b62\u4e3b\u7ebf\u7a0b\u9000\u51fa        BuildersKt.runBlocking(GlobalScope.INSTANCE.getCoroutineContext(), (coroutineScope, continuation) -> CommandManager.INSTANCE.join(continuation));    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/test/java/mirai/RunMirai.java", "stars": "2", "class": {"name": "RunMirai", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSourceModel", "snippet": "    public DataSourceModel getModel() {        return model;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "setModel", "params": ["DataSourceModel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModel(DataSourceModel model) {        this.model = model;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "getAuthScopes", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getAuthScopes() {        return authScopes;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "setAuthScopes", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAuthScopes(List<String> authScopes) {        this.authScopes = authScopes;    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "setModifyUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModifyUser(String modifyUser) {        super.setModifyUser(modifyUser);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "setCreateUser", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateUser(String createUser) {        super.setCreateUser(createUser);    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "getModifyUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModifyUser() {        return super.getModifyUser();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "getCreateUser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateUser() {        return super.getCreateUser();    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/domain/DataSource.java", "stars": "23", "class": {"name": "DataSource", "extends": "DataSourceBase", "implements": null, "modifiers": ["public"]}}, {"method_name": "saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_code_postal_n_est_pas_present", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_code_postal_n_est_pas_present() throws Exception {        // Given        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);        // When Then        mockMvc.perform(MockMvcRequestBuilders.get(\"/saisie-identite-demandeur\")                .cookie(cookieTypeRemettant))                .andExpect(view().name(\"redirect:/\"))                .andExpect(status().is3xxRedirection());    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class": {"name": "SaisieIdentiteDemandeurControllerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_type_remettant_n_est_pas_present", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_le_cookie_type_remettant_n_est_pas_present() throws Exception {        // Given        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);        // When Then        mockMvc.perform(MockMvcRequestBuilders.get(\"/saisie-identite-demandeur\")                .cookie(cookieCodePostal))                .andExpect(view().name(\"redirect:/\"))                .andExpect(status().is3xxRedirection());    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class": {"name": "SaisieIdentiteDemandeurControllerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentiteDepuisAccueil_devrait_retourner_la_page_de_saisie_d_identite_quand_les_cookies_sont_presents() throws Exception {        Cookie cookieCodePostal = new Cookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, CODE_POSTAL);        Cookie cookieTypeRemettant = new Cookie(NOM_COOKIE_TYPE_REMETTANT, TYPE_REMETTANT);        // When Then        mockMvc.perform(MockMvcRequestBuilders.get(\"/saisie-identite-demandeur\")                .cookie(cookieCodePostal, cookieTypeRemettant))                .andExpect(view().name(\"saisie-identite-demandeur\"))                .andExpect(status().isOk())                .andExpect(content().string(containsString(\"Informations sur le demandeur de masques\")));    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class": {"name": "SaisieIdentiteDemandeurControllerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "saisirInfosIdentite_devrait_creer_les_cookies_remettant_et_retourner_la_page_de_saisie_d_identite", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "    void saisirInfosIdentite_devrait_creer_les_cookies_remettant_et_retourner_la_page_de_saisie_d_identite() throws Exception {        // When Then        String codePostal = \"97420\";        String typeRemettant = \"Mairie\";        mockMvc.perform(MockMvcRequestBuilders.post(\"/saisie-identite-demandeur\")                .param(\"code-postal\", codePostal)                .param(\"type-remettant\", typeRemettant))                .andExpect(view().name(\"saisie-identite-demandeur\"))                .andExpect(expectedCookie(NOM_COOKIE_CODE_POSTAL_REMETTANT, codePostal))                .andExpect(expectedCookie(NOM_COOKIE_TYPE_REMETTANT, typeRemettant))                .andExpect(status().isOk())                .andExpect(content().string(containsString(\"Informations sur le demandeur de masques\")));    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class": {"name": "SaisieIdentiteDemandeurControllerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "expectedCookie", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "ResultMatcher", "snippet": "    private ResultMatcher expectedCookie(String nom, String valeur) {        return matchAll(                cookie().value(nom, valeur),                cookie().httpOnly(nom, true),                cookie().path(nom, \"/\"),                cookie().secure(nom, false),                cookie().maxAge(nom, DUREE_DE_VIE_COOKIE_JOURS * 24 * 60 * 60)        );    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/test/java/fr/gouv/interieur/dmgp/remettant/application/ui/SaisieIdentiteDemandeurControllerTest.java", "stars": "5", "class": {"name": "SaisieIdentiteDemandeurControllerTest", "extends": null, "implements": null, "modifiers": []}}, {"method_name": "resolve", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void resolve() {    annotationBuilder.parseStatement(method);  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/builder/annotation/MethodResolver.java", "stars": "15", "class": {"name": "MethodResolver", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreate", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class": {"name": "VideoFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onCreateView", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        View view = inflater.inflate(R.layout.fragment_video, container, false);        ButterKnife.bind(this, view);        resolveData();        final RecyclerNormalAdapter recyclerNormalAdapter = new RecyclerNormalAdapter(getActivity(), dataList);        linearLayoutManager = new LinearLayoutManager(getActivity());        videoList.setLayoutManager(linearLayoutManager);        videoList.setAdapter(recyclerNormalAdapter);        videoList.addOnScrollListener(new RecyclerView.OnScrollListener() {            int firstVisibleItem, lastVisibleItem;            @Override            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {                super.onScrollStateChanged(recyclerView, newState);            }            @Override            public void onScrolled(RecyclerView recyclerView, int dx, int dy) {                super.onScrolled(recyclerView, dx, dy);                firstVisibleItem = linearLayoutManager.findFirstVisibleItemPosition();                lastVisibleItem = linearLayoutManager.findLastVisibleItemPosition();                //\u5927\u4e8e0\u8bf4\u660e\u6709\u64ad\u653e                if (GSYVideoManager.instance().getPlayPosition() >= 0) {                    //\u5f53\u524d\u64ad\u653e\u7684\u4f4d\u7f6e                    int position = GSYVideoManager.instance().getPlayPosition();                    //\u5bf9\u5e94\u7684\u64ad\u653e\u5217\u8868TAG                    if (GSYVideoManager.instance().getPlayTag().equals(RecyclerItemNormalHolder.TAG)                            && (position < firstVisibleItem || position > lastVisibleItem)) {                        //\u5982\u679c\u6ed1\u51fa\u53bb\u4e86\u4e0a\u9762\u548c\u4e0b\u9762\u5c31\u662f\u5426\uff0c\u548c\u4eca\u65e5\u5934\u6761\u4e00\u6837                        if(!GSYVideoManager.isFullState(getActivity())) {                            GSYVideoManager.releaseAllVideos();                            recyclerNormalAdapter.notifyDataSetChanged();                        }                    }                }            }        });        return view;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class": {"name": "VideoFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onBackPressed", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onBackPressed() {        if (GSYVideoManager.backFromWindowFull(getActivity())) {            return true;        }        return false;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class": {"name": "VideoFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onPause", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {        super.onPause();        GSYVideoManager.onPause();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class": {"name": "VideoFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onResume", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {        super.onResume();        GSYVideoManager.onResume();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class": {"name": "VideoFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "onDestroy", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {        super.onDestroy();        GSYVideoManager.releaseAllVideos();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class": {"name": "VideoFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "resolveData", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void resolveData() {        for (int i = 0; i < 19; i++) {            VideoModel videoModel = new VideoModel();            dataList.add(videoModel);        }        if (recyclerBaseAdapter != null)            recyclerBaseAdapter.notifyDataSetChanged();    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/fragment/VideoFragment.java", "stars": "2", "class": {"name": "VideoFragment", "extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"method_name": "validate", "params": ["String", "Props", "Props", "Collection<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "  public static int validate(final String jobName, final Props serverProps, final Props jobProps,      final Collection<String> errors) {    final int maxNumCallback =        serverProps.getInt(            JobCallbackConstants.MAX_CALLBACK_COUNT_PROPERTY_KEY,            JobCallbackConstants.DEFAULT_MAX_CALLBACK_COUNT);    final int maxPostBodyLength =        serverProps.getInt(MAX_POST_BODY_LENGTH_PROPERTY_KEY,            DEFAULT_POST_BODY_LENGTH);    int totalCallbackCount = 0;    for (final JobCallbackStatusEnum jobStatus : JobCallbackStatusEnum.values()) {      totalCallbackCount +=          validateBasedOnStatus(jobProps, errors, jobStatus, maxNumCallback,              maxPostBodyLength);    }    if (logger.isDebugEnabled()) {      logger.debug(\"Found \" + totalCallbackCount + \" job callbacks for job \"          + jobName);    }    return totalCallbackCount;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobcallback/JobCallbackValidator.java", "stars": "18", "class": {"name": "JobCallbackValidator", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "validateBasedOnStatus", "params": ["Props", "Collection<String>", "JobCallbackStatusEnum", "int", "int"], "throws": null, "modifiers": ["private", "static"], "return_type": "int", "snippet": "  private static int validateBasedOnStatus(final Props jobProps,      final Collection<String> errors, final JobCallbackStatusEnum jobStatus,      final int maxNumCallback, final int maxPostBodyLength) {    int callbackCount = 0;    // replace property templates with status    final String jobCallBackUrl =        JOB_CALLBACK_URL_TEMPLATE.replaceFirst(STATUS_TOKEN, jobStatus.name()            .toLowerCase());    final String requestMethod =        JOB_CALLBACK_REQUEST_METHOD_TEMPLATE.replaceFirst(STATUS_TOKEN,            jobStatus.name().toLowerCase());    final String httpBody =        JOB_CALLBACK_BODY_TEMPLATE.replaceFirst(STATUS_TOKEN, jobStatus.name()            .toLowerCase());    for (int i = 0; i <= maxNumCallback; i++) {      // callback url      final String callbackUrlKey =          jobCallBackUrl.replaceFirst(SEQUENCE_TOKEN, Integer.toString(i));      final String callbackUrlValue = jobProps.get(callbackUrlKey);      // sequence number should start at 1, this is to check for sequence      // number that starts a 0      if (i == 0) {        if (callbackUrlValue != null) {          errors.add(\"Sequence number starts at 1, not 0\");        }        continue;      }      if (callbackUrlValue == null || callbackUrlValue.length() == 0) {        break;      } else {        final String requestMethodKey =            requestMethod.replaceFirst(SEQUENCE_TOKEN, Integer.toString(i));        final String methodValue = jobProps.getString(requestMethodKey, HTTP_GET);        if (HTTP_POST.equals(methodValue)) {          // now try to get the post body          final String postBodyKey =              httpBody.replaceFirst(SEQUENCE_TOKEN, Integer.toString(i));          final String postBodyValue = jobProps.get(postBodyKey);          if (postBodyValue == null || postBodyValue.length() == 0) {            errors.add(\"No POST body was specified for job callback '\"                + callbackUrlValue + \"'\");          } else if (postBodyValue.length() > maxPostBodyLength) {            errors.add(\"POST body length is : \" + postBodyValue.length()                + \" which is larger than supported length of \"                + maxPostBodyLength);          } else {            callbackCount++;          }        } else if (HTTP_GET.equals(methodValue)) {          // that's cool          callbackCount++;        } else {          errors.add(\"Unsupported request method: \" + methodValue              + \" Only POST and GET are supported\");        }      }    }    return callbackCount;  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobcallback/JobCallbackValidator.java", "stars": "18", "class": {"name": "JobCallbackValidator", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getIndividualCacheDirectory", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "File", "snippet": "    public static File getIndividualCacheDirectory(Context context) {        File cacheDir = getCacheDirectory(context, true);        return new File(cacheDir, INDIVIDUAL_DIR_NAME);    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/StorageUtils.java", "stars": "2", "class": {"name": "StorageUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getCacheDirectory", "params": ["Context", "boolean"], "throws": null, "modifiers": ["private", "static"], "return_type": "File", "snippet": "    private static File getCacheDirectory(Context context, boolean preferExternal) {        File appCacheDir = null;        String externalStorageState;        try {            externalStorageState = Environment.getExternalStorageState();        } catch (NullPointerException e) { // (sh)it happens            externalStorageState = \"\";        }        if (preferExternal && MEDIA_MOUNTED.equals(externalStorageState)) {            appCacheDir = getExternalCacheDir(context);        }        if (appCacheDir == null) {            appCacheDir = context.getCacheDir();        }        if (appCacheDir == null) {            String cacheDirPath = \"/data/data/\" + context.getPackageName() + \"/cache/\";            appCacheDir = new File(cacheDirPath);        }        return appCacheDir;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/StorageUtils.java", "stars": "2", "class": {"name": "StorageUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getExternalCacheDir", "params": ["Context"], "throws": null, "modifiers": ["private", "static"], "return_type": "File", "snippet": "    private static File getExternalCacheDir(Context context) {        File dataDir = new File(new File(Environment.getExternalStorageDirectory(), \"Android\"), \"data\");        File appCacheDir = new File(new File(dataDir, context.getPackageName()), \"cache\");        if (!appCacheDir.exists()) {            if (!appCacheDir.mkdirs()) {                return null;            }        }        return appCacheDir;    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/utils/StorageUtils.java", "stars": "2", "class": {"name": "StorageUtils", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createMessageRequest", "params": ["Device", "String", "String", "String", "String"], "throws": ["ParseException", "InvalidArgumentException"], "modifiers": ["public"], "return_type": "Request", "snippet": "\tpublic Request createMessageRequest(Device device, String content, String viaTag, String fromTag, String toTag) throws ParseException, InvalidArgumentException {\t\tRequest request = null;\t\tHost host = device.getHost();\t\t// sipuri\t\tSipURI requestURI = layer.getAddressFactory().createSipURI(device.getDeviceId(), host.getAddress());\t\t// via\t\tArrayList<ViaHeader> viaHeaders = new ArrayList<ViaHeader>();\t\tViaHeader viaHeader = layer.getHeaderFactory().createViaHeader(sipConfig.getSipIp(), sipConfig.getSipPort(),\t\t\t\tdevice.getTransport(), viaTag);\t\tviaHeaders.add(viaHeader);\t\t// from\t\tSipURI fromSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(),\t\t\t\tsipConfig.getSipIp() + \":\" + sipConfig.getSipPort());\t\tAddress fromAddress = layer.getAddressFactory().createAddress(fromSipURI);\t\tFromHeader fromHeader = layer.getHeaderFactory().createFromHeader(fromAddress, fromTag);\t\t// to\t\tSipURI toSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(), host.getAddress());\t\tAddress toAddress = layer.getAddressFactory().createAddress(toSipURI);\t\tToHeader toHeader = layer.getHeaderFactory().createToHeader(toAddress, toTag);\t\t// callid\t\tCallIdHeader callIdHeader = device.getTransport().equals(\"TCP\") ? layer.getTcpSipProvider().getNewCallId()\t\t\t\t: layer.getUdpSipProvider().getNewCallId();\t\t// Forwards\t\tMaxForwardsHeader maxForwards = layer.getHeaderFactory().createMaxForwardsHeader(70);\t\t// ceq\t\tCSeqHeader cSeqHeader = layer.getHeaderFactory().createCSeqHeader(1L, Request.MESSAGE);\t\trequest = layer.getMessageFactory().createRequest(requestURI, Request.MESSAGE, callIdHeader, cSeqHeader, fromHeader,\t\t\t\ttoHeader, viaHeaders, maxForwards);\t\tContentTypeHeader contentTypeHeader = layer.getHeaderFactory().createContentTypeHeader(\"Application\", \"MANSCDP+xml\");\t\trequest.setContent(content, contentTypeHeader);\t\treturn request;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/cmd/SIPRequestHeaderProvider.java", "stars": "29", "class": {"name": "SIPRequestHeaderProvider", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "createInviteRequest", "params": ["Device", "String", "String", "String", "String"], "throws": ["ParseException", "InvalidArgumentException"], "modifiers": ["public"], "return_type": "Request", "snippet": "\tpublic Request createInviteRequest(Device device, String content, String viaTag, String fromTag, String toTag) throws ParseException, InvalidArgumentException {\t\tRequest request = null;\t\tHost host = device.getHost();\t\t//\u8bf7\u6c42\u884c\t\tSipURI requestLine = layer.getAddressFactory().createSipURI(device.getDeviceId(), host.getAddress());\t\t//via\t\tArrayList<ViaHeader> viaHeaders = new ArrayList<ViaHeader>();\t\tViaHeader viaHeader = layer.getHeaderFactory().createViaHeader(sipConfig.getSipIp(), sipConfig.getSipPort(), device.getTransport(), viaTag);\t\tviaHeader.setRPort();\t\tviaHeaders.add(viaHeader);\t\t//from\t\tSipURI fromSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(),sipConfig.getSipIp()+\":\"+sipConfig.getSipPort());\t\tAddress fromAddress = layer.getAddressFactory().createAddress(fromSipURI);\t\tFromHeader fromHeader = layer.getHeaderFactory().createFromHeader(fromAddress, fromTag); //\u5fc5\u987b\u8981\u6709\u6807\u8bb0\uff0c\u5426\u5219\u65e0\u6cd5\u521b\u5efa\u4f1a\u8bdd\uff0c\u65e0\u6cd5\u56de\u5e94ack\t\t//to\t\tSipURI toSipURI = layer.getAddressFactory().createSipURI(device.getDeviceId(),host.getAddress()); \t\tAddress toAddress = layer.getAddressFactory().createAddress(toSipURI);\t\tToHeader toHeader = layer.getHeaderFactory().createToHeader(toAddress,null);\t\t//callid\t\tCallIdHeader callIdHeader = null;\t\tif(device.getTransport().equals(\"TCP\")) {\t\t\tcallIdHeader = layer.getTcpSipProvider().getNewCallId();\t\t}\t\tif(device.getTransport().equals(\"UDP\")) {\t\t\tcallIdHeader = layer.getUdpSipProvider().getNewCallId();\t\t}\t\t\t\t//Forwards\t\tMaxForwardsHeader maxForwards = layer.getHeaderFactory().createMaxForwardsHeader(70);\t\t//ceq\t\tCSeqHeader cSeqHeader = layer.getHeaderFactory().createCSeqHeader(1L, Request.INVITE);\t\trequest = layer.getMessageFactory().createRequest(requestLine, Request.INVITE, callIdHeader, cSeqHeader,fromHeader, toHeader, viaHeaders, maxForwards);\t\tContentTypeHeader contentTypeHeader = layer.getHeaderFactory().createContentTypeHeader(\"Application\", \"SDP\");\t\trequest.setContent(content, contentTypeHeader);\t\treturn request;\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/transmit/cmd/SIPRequestHeaderProvider.java", "stars": "29", "class": {"name": "SIPRequestHeaderProvider", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "main", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {//        try {//            MqttServer mm = new MqttServer();//            mm.connection.listener(new Listener() {//                @Override//                public void onConnected() {//                }////                @Override//                public void onDisconnected() {//                }////                @Override//                public void onPublish(UTF8Buffer topic, Buffer body, Runnable ack) {//                    String topi = new String(topic.toByteArray());//                    System.out.println(\"=============receive msg================\\n\"//                            + new String(topi) + new String(body.toByteArray()));//                    ack.run();//                }////                @Override//                public void onFailure(Throwable value) {//                }//            });//            while (true) {////            }////        } catch (Exception e) {//            e.printStackTrace();//        }        connect();        HashMap<String, ArrayList<Double>> re = getData();        System.out.println(re);    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class": {"name": "MqttServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "connect", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void connect() {        try {            //\u52a0\u8f7d\u9a71\u52a8\u7a0b\u5e8f            Class.forName(driver);            conn = DriverManager.getConnection(url, user, password);            System.out.println(\"Connection to Mysql has been established.\");//            Statement s = conn.createStatement();//            String sql=\t\"CREATE TABLE IF NOT EXISTS todolist (\"//                    +\"memoID INTEGER PRIMARY KEY autoincrement,\"//                    +\"title TEXT,\"//                    +\"address TEXT,\"//                    +\"startTime integer,\"//                    +\"endTime integer,\"//                    +\"detail TEXT,\"//                    +\"alarm integer,\"//                    +\"remindTime integer,\"//                    +\"editTime integer\"//                    +\")\";//            s.executeUpdate(sql);        } catch (SQLException | ClassNotFoundException e) {            System.out.println(e.getMessage());        }    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class": {"name": "MqttServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "saveToDB", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveToDB(String payload) {        JsonObject resObj = JsonParser.parseString(payload).getAsJsonObject();        float tmp = resObj.get(\"tmp\").getAsFloat();        float hum = resObj.get(\"hum\").getAsFloat();        float press = resObj.get(\"press\").getAsFloat();        long time = resObj.get(\"time\").getAsLong() * 1000;        PreparedStatement s;        try {            s = conn.prepareStatement(                    \"INSERT INTO env (\"                            + \"tmp,hum,press,time)\"                            + \"VALUES(?,?,?,?)\");            s.setFloat(1, tmp);            s.setFloat(2, hum);            s.setFloat(3, press);            s.setTimestamp(4, new Timestamp(time));            s.executeUpdate();        } catch (SQLException e) {            e.printStackTrace();        }    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class": {"name": "MqttServer", "extends": null, "implements": null, "modifiers": ["public"]}}, {"method_name": "getData", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "HashMap<String,ArrayList>", "snippet": "    public static HashMap<String, ArrayList<Double>> getData() {        PreparedStatement s;        HashMap<String, ArrayList<Double>> result = new HashMap<String, ArrayList<Double>>();        ArrayList<Double> tmp = new ArrayList<Double>();        ArrayList<Double> hum = new ArrayList<Double>();        ArrayList<Double> time = new ArrayList<Double>();        long yesterday = System.currentTimeMillis() - 24 * 3600 * 1000;        try {            s = conn.prepareStatement(                    \"SELECT tmp,hum,time FROM env WHERE time > ?\");            s.setLong(1, yesterday);            ResultSet rs = s.executeQuery();            ResultSetMetaData rm = rs.getMetaData();            while (rs.next()) {                tmp.add(rs.getDouble(1));                hum.add(rs.getDouble(2));                time.add((double) rs.getTimestamp(3).getTime());            }            result.put(\"tmp\", tmp);            result.put(\"hum\", hum);            result.put(\"time\", time);        } catch (SQLException e) {            e.printStackTrace();        }        return result;    }", "url": "https://raw.githubusercontent.com/luzy99/IOT-Terminal/master/MqttTrans/src/main/java/com/m5go/plugin/MqttServer.java", "stars": "2", "class": {"name": "MqttServer", "extends": null, "implements": null, "modifiers": ["public"]}}]