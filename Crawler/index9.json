[{"id": 39999, "method_name": "andIdNotIn", "class_name": "GeneratedCriteria", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotIn(List<Long> values) {\n            addCriterion(\"id not in\", values, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40000, "method_name": "andIdBetween", "class_name": "GeneratedCriteria", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdBetween(Long value1, Long value2) {\n            addCriterion(\"id between\", value1, value2, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40001, "method_name": "andIdNotBetween", "class_name": "GeneratedCriteria", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotBetween(Long value1, Long value2) {\n            addCriterion(\"id not between\", value1, value2, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40002, "method_name": "andUsernameIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameIsNull() {\n            addCriterion(\"username is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40003, "method_name": "andUsernameIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameIsNotNull() {\n            addCriterion(\"username is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40004, "method_name": "andUsernameEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameEqualTo(String value) {\n            addCriterion(\"username =\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40005, "method_name": "andUsernameNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameNotEqualTo(String value) {\n            addCriterion(\"username <>\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40006, "method_name": "andUsernameGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameGreaterThan(String value) {\n            addCriterion(\"username >\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40007, "method_name": "andUsernameGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameGreaterThanOrEqualTo(String value) {\n            addCriterion(\"username >=\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40008, "method_name": "andUsernameLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameLessThan(String value) {\n            addCriterion(\"username <\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40009, "method_name": "andUsernameLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameLessThanOrEqualTo(String value) {\n            addCriterion(\"username <=\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40010, "method_name": "andUsernameLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameLike(String value) {\n            addCriterion(\"username like\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40011, "method_name": "andUsernameNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameNotLike(String value) {\n            addCriterion(\"username not like\", value, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40012, "method_name": "andUsernameIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameIn(List<String> values) {\n            addCriterion(\"username in\", values, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40013, "method_name": "andUsernameNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameNotIn(List<String> values) {\n            addCriterion(\"username not in\", values, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40014, "method_name": "andUsernameBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameBetween(String value1, String value2) {\n            addCriterion(\"username between\", value1, value2, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40015, "method_name": "andUsernameNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUsernameNotBetween(String value1, String value2) {\n            addCriterion(\"username not between\", value1, value2, \"username\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40016, "method_name": "andPasswordIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordIsNull() {\n            addCriterion(\"password is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40017, "method_name": "andPasswordIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordIsNotNull() {\n            addCriterion(\"password is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40018, "method_name": "andPasswordEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordEqualTo(String value) {\n            addCriterion(\"password =\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40019, "method_name": "andPasswordNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordNotEqualTo(String value) {\n            addCriterion(\"password <>\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40020, "method_name": "andPasswordGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordGreaterThan(String value) {\n            addCriterion(\"password >\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40021, "method_name": "andPasswordGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordGreaterThanOrEqualTo(String value) {\n            addCriterion(\"password >=\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40022, "method_name": "andPasswordLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordLessThan(String value) {\n            addCriterion(\"password <\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40023, "method_name": "andPasswordLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordLessThanOrEqualTo(String value) {\n            addCriterion(\"password <=\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40024, "method_name": "andPasswordLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordLike(String value) {\n            addCriterion(\"password like\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40025, "method_name": "andPasswordNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordNotLike(String value) {\n            addCriterion(\"password not like\", value, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40026, "method_name": "andPasswordIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordIn(List<String> values) {\n            addCriterion(\"password in\", values, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40027, "method_name": "andPasswordNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordNotIn(List<String> values) {\n            addCriterion(\"password not in\", values, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40028, "method_name": "andPasswordBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordBetween(String value1, String value2) {\n            addCriterion(\"password between\", value1, value2, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40029, "method_name": "andPasswordNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andPasswordNotBetween(String value1, String value2) {\n            addCriterion(\"password not between\", value1, value2, \"password\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40030, "method_name": "andIconIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIsNull() {\n            addCriterion(\"icon is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40031, "method_name": "andIconIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIsNotNull() {\n            addCriterion(\"icon is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40032, "method_name": "andIconEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconEqualTo(String value) {\n            addCriterion(\"icon =\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40033, "method_name": "andIconNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotEqualTo(String value) {\n            addCriterion(\"icon <>\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40034, "method_name": "andIconGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconGreaterThan(String value) {\n            addCriterion(\"icon >\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40035, "method_name": "andIconGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconGreaterThanOrEqualTo(String value) {\n            addCriterion(\"icon >=\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40036, "method_name": "andIconLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLessThan(String value) {\n            addCriterion(\"icon <\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40037, "method_name": "andIconLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLessThanOrEqualTo(String value) {\n            addCriterion(\"icon <=\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40038, "method_name": "andIconLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconLike(String value) {\n            addCriterion(\"icon like\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40039, "method_name": "andIconNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotLike(String value) {\n            addCriterion(\"icon not like\", value, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40040, "method_name": "andIconIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconIn(List<String> values) {\n            addCriterion(\"icon in\", values, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40041, "method_name": "andIconNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotIn(List<String> values) {\n            addCriterion(\"icon not in\", values, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40042, "method_name": "andIconBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconBetween(String value1, String value2) {\n            addCriterion(\"icon between\", value1, value2, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40043, "method_name": "andIconNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIconNotBetween(String value1, String value2) {\n            addCriterion(\"icon not between\", value1, value2, \"icon\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40044, "method_name": "andEmailIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailIsNull() {\n            addCriterion(\"email is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40045, "method_name": "andEmailIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailIsNotNull() {\n            addCriterion(\"email is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40046, "method_name": "andEmailEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailEqualTo(String value) {\n            addCriterion(\"email =\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40047, "method_name": "andEmailNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailNotEqualTo(String value) {\n            addCriterion(\"email <>\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40048, "method_name": "andEmailGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailGreaterThan(String value) {\n            addCriterion(\"email >\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40049, "method_name": "andEmailGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailGreaterThanOrEqualTo(String value) {\n            addCriterion(\"email >=\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40050, "method_name": "andEmailLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailLessThan(String value) {\n            addCriterion(\"email <\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40051, "method_name": "andEmailLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailLessThanOrEqualTo(String value) {\n            addCriterion(\"email <=\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40052, "method_name": "andEmailLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailLike(String value) {\n            addCriterion(\"email like\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40053, "method_name": "andEmailNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailNotLike(String value) {\n            addCriterion(\"email not like\", value, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40054, "method_name": "andEmailIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailIn(List<String> values) {\n            addCriterion(\"email in\", values, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40055, "method_name": "andEmailNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailNotIn(List<String> values) {\n            addCriterion(\"email not in\", values, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40056, "method_name": "andEmailBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailBetween(String value1, String value2) {\n            addCriterion(\"email between\", value1, value2, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40057, "method_name": "andEmailNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andEmailNotBetween(String value1, String value2) {\n            addCriterion(\"email not between\", value1, value2, \"email\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40058, "method_name": "andNickNameIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameIsNull() {\n            addCriterion(\"nick_name is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40059, "method_name": "andNickNameIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameIsNotNull() {\n            addCriterion(\"nick_name is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40060, "method_name": "andNickNameEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameEqualTo(String value) {\n            addCriterion(\"nick_name =\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40061, "method_name": "andNickNameNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameNotEqualTo(String value) {\n            addCriterion(\"nick_name <>\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40062, "method_name": "andNickNameGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameGreaterThan(String value) {\n            addCriterion(\"nick_name >\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40063, "method_name": "andNickNameGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameGreaterThanOrEqualTo(String value) {\n            addCriterion(\"nick_name >=\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40064, "method_name": "andNickNameLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameLessThan(String value) {\n            addCriterion(\"nick_name <\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40065, "method_name": "andNickNameLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameLessThanOrEqualTo(String value) {\n            addCriterion(\"nick_name <=\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40066, "method_name": "andNickNameLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameLike(String value) {\n            addCriterion(\"nick_name like\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40067, "method_name": "andNickNameNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameNotLike(String value) {\n            addCriterion(\"nick_name not like\", value, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40068, "method_name": "andNickNameIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameIn(List<String> values) {\n            addCriterion(\"nick_name in\", values, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40069, "method_name": "andNickNameNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameNotIn(List<String> values) {\n            addCriterion(\"nick_name not in\", values, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40070, "method_name": "andNickNameBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameBetween(String value1, String value2) {\n            addCriterion(\"nick_name between\", value1, value2, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40071, "method_name": "andNickNameNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNickNameNotBetween(String value1, String value2) {\n            addCriterion(\"nick_name not between\", value1, value2, \"nickName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40072, "method_name": "andNoteIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteIsNull() {\n            addCriterion(\"note is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40073, "method_name": "andNoteIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteIsNotNull() {\n            addCriterion(\"note is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40074, "method_name": "andNoteEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteEqualTo(String value) {\n            addCriterion(\"note =\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40075, "method_name": "andNoteNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteNotEqualTo(String value) {\n            addCriterion(\"note <>\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40076, "method_name": "andNoteGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteGreaterThan(String value) {\n            addCriterion(\"note >\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40077, "method_name": "andNoteGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteGreaterThanOrEqualTo(String value) {\n            addCriterion(\"note >=\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40078, "method_name": "andNoteLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteLessThan(String value) {\n            addCriterion(\"note <\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40079, "method_name": "andNoteLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteLessThanOrEqualTo(String value) {\n            addCriterion(\"note <=\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40080, "method_name": "andNoteLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteLike(String value) {\n            addCriterion(\"note like\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40081, "method_name": "andNoteNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteNotLike(String value) {\n            addCriterion(\"note not like\", value, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40082, "method_name": "andNoteIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteIn(List<String> values) {\n            addCriterion(\"note in\", values, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40083, "method_name": "andNoteNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteNotIn(List<String> values) {\n            addCriterion(\"note not in\", values, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40084, "method_name": "andNoteBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteBetween(String value1, String value2) {\n            addCriterion(\"note between\", value1, value2, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40085, "method_name": "andNoteNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNoteNotBetween(String value1, String value2) {\n            addCriterion(\"note not between\", value1, value2, \"note\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40086, "method_name": "andCreateTimeIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeIsNull() {\n            addCriterion(\"create_time is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40087, "method_name": "andCreateTimeIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeIsNotNull() {\n            addCriterion(\"create_time is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40088, "method_name": "andCreateTimeEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeEqualTo(Date value) {\n            addCriterion(\"create_time =\", value, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40089, "method_name": "andCreateTimeNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeNotEqualTo(Date value) {\n            addCriterion(\"create_time <>\", value, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40090, "method_name": "andCreateTimeGreaterThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeGreaterThan(Date value) {\n            addCriterion(\"create_time >\", value, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40091, "method_name": "andCreateTimeGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {\n            addCriterion(\"create_time >=\", value, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40092, "method_name": "andCreateTimeLessThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeLessThan(Date value) {\n            addCriterion(\"create_time <\", value, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40093, "method_name": "andCreateTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {\n            addCriterion(\"create_time <=\", value, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40094, "method_name": "andCreateTimeIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeIn(List<Date> values) {\n            addCriterion(\"create_time in\", values, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40095, "method_name": "andCreateTimeNotIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeNotIn(List<Date> values) {\n            addCriterion(\"create_time not in\", values, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40096, "method_name": "andCreateTimeBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeBetween(Date value1, Date value2) {\n            addCriterion(\"create_time between\", value1, value2, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40097, "method_name": "andCreateTimeNotBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {\n            addCriterion(\"create_time not between\", value1, value2, \"createTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40098, "method_name": "andLoginTimeIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeIsNull() {\n            addCriterion(\"login_time is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40099, "method_name": "andLoginTimeIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeIsNotNull() {\n            addCriterion(\"login_time is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40100, "method_name": "andLoginTimeEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeEqualTo(Date value) {\n            addCriterion(\"login_time =\", value, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40101, "method_name": "andLoginTimeNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeNotEqualTo(Date value) {\n            addCriterion(\"login_time <>\", value, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40102, "method_name": "andLoginTimeGreaterThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeGreaterThan(Date value) {\n            addCriterion(\"login_time >\", value, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40103, "method_name": "andLoginTimeGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeGreaterThanOrEqualTo(Date value) {\n            addCriterion(\"login_time >=\", value, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40104, "method_name": "andLoginTimeLessThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeLessThan(Date value) {\n            addCriterion(\"login_time <\", value, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40105, "method_name": "andLoginTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeLessThanOrEqualTo(Date value) {\n            addCriterion(\"login_time <=\", value, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40106, "method_name": "andLoginTimeIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeIn(List<Date> values) {\n            addCriterion(\"login_time in\", values, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40107, "method_name": "andLoginTimeNotIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeNotIn(List<Date> values) {\n            addCriterion(\"login_time not in\", values, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40108, "method_name": "andLoginTimeBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeBetween(Date value1, Date value2) {\n            addCriterion(\"login_time between\", value1, value2, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40109, "method_name": "andLoginTimeNotBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andLoginTimeNotBetween(Date value1, Date value2) {\n            addCriterion(\"login_time not between\", value1, value2, \"loginTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40110, "method_name": "andStatusIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusIsNull() {\n            addCriterion(\"status is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40111, "method_name": "andStatusIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusIsNotNull() {\n            addCriterion(\"status is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40112, "method_name": "andStatusEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusEqualTo(Integer value) {\n            addCriterion(\"status =\", value, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40113, "method_name": "andStatusNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusNotEqualTo(Integer value) {\n            addCriterion(\"status <>\", value, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40114, "method_name": "andStatusGreaterThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusGreaterThan(Integer value) {\n            addCriterion(\"status >\", value, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40115, "method_name": "andStatusGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {\n            addCriterion(\"status >=\", value, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40116, "method_name": "andStatusLessThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusLessThan(Integer value) {\n            addCriterion(\"status <\", value, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40117, "method_name": "andStatusLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusLessThanOrEqualTo(Integer value) {\n            addCriterion(\"status <=\", value, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40118, "method_name": "andStatusIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusIn(List<Integer> values) {\n            addCriterion(\"status in\", values, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40119, "method_name": "andStatusNotIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusNotIn(List<Integer> values) {\n            addCriterion(\"status not in\", values, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40120, "method_name": "andStatusBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusBetween(Integer value1, Integer value2) {\n            addCriterion(\"status between\", value1, value2, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40121, "method_name": "andStatusNotBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andStatusNotBetween(Integer value1, Integer value2) {\n            addCriterion(\"status not between\", value1, value2, \"status\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 40122, "method_name": "getCondition", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCondition() {\n            return condition;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40123, "method_name": "getValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getValue() {\n            return value;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40124, "method_name": "getSecondValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getSecondValue() {\n            return secondValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40125, "method_name": "isNoValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isNoValue() {\n            return noValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40126, "method_name": "isSingleValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSingleValue() {\n            return singleValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40127, "method_name": "isBetweenValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isBetweenValue() {\n            return betweenValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40128, "method_name": "isListValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isListValue() {\n            return listValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40129, "method_name": "getTypeHandler", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTypeHandler() {\n            return typeHandler;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/UmsAdminExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40130, "method_name": "setValue", "class_name": "ShortTag", "params": ["Short"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(Short s) {\n        this.value = s;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/ShortTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 40131, "method_name": "getValue", "class_name": "ShortTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Short", "snippet": "    public Short getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/ShortTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 40132, "method_name": "setName", "class_name": "ShortTag", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/ShortTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 40133, "method_name": "getName", "class_name": "ShortTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/ShortTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 40134, "method_name": "writeData", "class_name": "ShortTag", "params": ["DataOutputStream"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeData(DataOutputStream dos) throws IOException {\n        // Indicates the string\n        dos.write(getID());\n        //Create a new DataOutputStream\n        ByteArrayOutputStream os = new ByteArrayOutputStream();\n        CountingOutputStream cos = new CountingOutputStream(os);\n        DataOutputStream tempDos = new DataOutputStream(cos);\n\n        tempDos.writeShort(name.getBytes(StandardCharsets.UTF_8).length);\n        tempDos.write(name.getBytes(StandardCharsets.UTF_8));\n        tempDos.writeShort(value);\n\n        dos.writeInt(cos.getCount());\n        dos.write(os.toByteArray());\n        tempDos.close();\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/ShortTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 40135, "method_name": "createFromData", "class_name": "ShortTag", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "Tag<Short>", "snippet": "    public Tag<Short> createFromData(byte[] value) {\n        ByteBuffer wrappedFloat = ByteBuffer.wrap(value);\n        this.value = wrappedFloat.getShort();\n        wrappedFloat.clear();\n        return this;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/ShortTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 40136, "method_name": "getID", "class_name": "ShortTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte getID() {\n        return 5;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/ShortTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 40137, "method_name": "setTimeout", "class_name": "EmailMessage", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setTimeout(final int timeoutMillis) {\n    _mailTimeout = timeoutMillis;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40138, "method_name": "setConnectionTimeout", "class_name": "EmailMessage", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setConnectionTimeout(final int timeoutMillis) {\n    _connectionTimeout = timeoutMillis;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40139, "method_name": "setTotalAttachmentMaxSize", "class_name": "EmailMessage", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setTotalAttachmentMaxSize(final long sizeInBytes) {\n    if (sizeInBytes < 1) {\n      throw new IllegalArgumentException(\n          \"attachment max size can't be 0 or negative\");\n    }\n    _totalAttachmentMaxSizeInByte = sizeInBytes;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40140, "method_name": "enableAttachementEmbedment", "class_name": "EmailMessage", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage enableAttachementEmbedment(final boolean toEnable) {\n    this._enableAttachementEmbedment = toEnable;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40141, "method_name": "addAllToAddress", "class_name": "EmailMessage", "params": ["Collection<String>"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage addAllToAddress(final Collection<? extends String> addresses) {\n    this._toAddress.addAll(addresses);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40142, "method_name": "addToAddress", "class_name": "EmailMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage addToAddress(final String address) {\n    this._toAddress.add(address);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40143, "method_name": "setFromAddress", "class_name": "EmailMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage setFromAddress(final String fromAddress) {\n    this._fromAddress = fromAddress;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40144, "method_name": "setTLS", "class_name": "EmailMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage setTLS(final String tls) {\n    this._tls = tls;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40145, "method_name": "setAuth", "class_name": "EmailMessage", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage setAuth(final boolean auth) {\n    this._usesAuth = auth;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40146, "method_name": "addAttachment", "class_name": "EmailMessage", "params": ["File"], "throws": ["MessagingException"], "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage addAttachment(final File file) throws MessagingException {\n    return addAttachment(file.getName(), file);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40147, "method_name": "addAttachment", "class_name": "EmailMessage", "params": ["String", "File"], "throws": ["MessagingException"], "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage addAttachment(final String attachmentName, final File file)\n      throws MessagingException {\n\n    this._totalAttachmentSizeSoFar += file.length();\n\n    if (this._totalAttachmentSizeSoFar > _totalAttachmentMaxSizeInByte) {\n      throw new MessageAttachmentExceededMaximumSizeException(\n          \"Adding attachment '\" + attachmentName\n              + \"' will exceed the allowed maximum size of \"\n              + _totalAttachmentMaxSizeInByte);\n    }\n\n    final BodyPart attachmentPart = new MimeBodyPart();\n    final DataSource fileDataSource = new FileDataSource(file);\n    attachmentPart.setDataHandler(new DataHandler(fileDataSource));\n    attachmentPart.setFileName(attachmentName);\n    this._attachments.add(attachmentPart);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40148, "method_name": "addAttachment", "class_name": "EmailMessage", "params": ["String", "InputStream"], "throws": ["MessagingException"], "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage addAttachment(final String attachmentName, final InputStream stream)\n      throws MessagingException {\n    final BodyPart attachmentPart = new MimeBodyPart(stream);\n    attachmentPart.setFileName(attachmentName);\n    this._attachments.add(attachmentPart);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40149, "method_name": "checkSettings", "class_name": "EmailMessage", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void checkSettings() {\n    if (this._mailHost == null) {\n      throw new RuntimeException(\"Mail host not set.\");\n    }\n\n    if (this._fromAddress == null || this._fromAddress.length() == 0) {\n      throw new RuntimeException(\"From address not set.\");\n    }\n\n    if (this._subject == null) {\n      throw new RuntimeException(\"Subject cannot be null\");\n    }\n\n    if (this._toAddress.size() == 0) {\n      throw new RuntimeException(\"T\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40150, "method_name": "sendEmail", "class_name": "EmailMessage", "params": [], "throws": ["MessagingException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void sendEmail() throws MessagingException {\n    checkSettings();\n    final Properties props = new Properties();\n    if (this._usesAuth) {\n      props.put(\"mail.smtp.auth\", \"true\");\n      props.put(\"mail.user\", this._mailUser);\n      props.put(\"mail.password\", this._mailPassword);\n    } else {\n      props.put(\"mail.smtp.auth\", \"false\");\n    }\n    props.put(\"mail.smtp.host\", this._mailHost);\n    props.put(\"mail.smtp.port\", this._mailPort);\n    props.put(\"mail.smtp.timeout\", _mailTimeout);\n    props.put(\"mail.smtp.connectiontimeout\", _connectionTimeout);\n    props.put(\"mail.smtp.starttls.enable\", this._tls);\n    props.put(\"mail.smtp.ssl.trust\", this._mailHost);\n\n    final JavaxMailSender sender = this.creator.createSender(props);\n    final Message message = sender.createMessage();\n\n    final InternetAddress from = new InternetAddress(this._fromAddress, false);\n    message.setFrom(from);\n    for (final String toAddr : this._toAddress) {\n      message.addRecipient(Message.RecipientType.TO, new InternetAddress(\n          toAddr, false));\n    }\n    message.setSubject(this._subject);\n    message.setSentDate(new Date());\n\n    if (this._attachments.size() > 0) {\n      final MimeMultipart multipart =\n          this._enableAttachementEmbedment ? new MimeMultipart(\"related\")\n              : new MimeMultipart();\n\n      final BodyPart messageBodyPart = new MimeBodyPart();\n      messageBodyPart.setContent(this._body.toString(), this._mimeType);\n      multipart.addBodyPart(messageBodyPart);\n\n      // Add attachments\n      for (final BodyPart part : this._attachments) {\n        multipart.addBodyPart(part);\n      }\n\n      message.setContent(multipart);\n    } else {\n      message.setContent(this._body.toString(), this._mimeType);\n    }\n\n    retryConnectToSMTPServer(sender);\n    retrySendMessage(sender, message);\n    sender.close();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40151, "method_name": "connectToSMTPServer", "class_name": "EmailMessage", "params": ["JavaxMailSender"], "throws": ["MessagingException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void connectToSMTPServer(final JavaxMailSender s) throws MessagingException {\n    if (this._usesAuth) {\n      s.connect(this._mailHost, this._mailPort, this._mailUser, this._mailPassword);\n    } else {\n      s.connect();\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40152, "method_name": "retryConnectToSMTPServer", "class_name": "EmailMessage", "params": ["JavaxMailSender"], "throws": ["MessagingException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void retryConnectToSMTPServer(final JavaxMailSender s) throws MessagingException {\n    int attempt;\n    for (attempt = 0; attempt < MAX_EMAIL_RETRY_COUNT; attempt++) {\n      try {\n        connectToSMTPServer(s);\n        return;\n      } catch (final Exception e) {\n        this.logger.error(\"Connecting to SMTP server failed, attempt: \" + attempt, e);\n      }\n    }\n    s.close();\n    throw new MessagingException(\"Failed to connect to SMTP server after \"\n        + attempt + \" attempts.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40153, "method_name": "retrySendMessage", "class_name": "EmailMessage", "params": ["JavaxMailSender", "Message"], "throws": ["MessagingException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void retrySendMessage(final JavaxMailSender s, final Message message)\n      throws MessagingException {\n    int attempt;\n    for (attempt = 0; attempt < MAX_EMAIL_RETRY_COUNT; attempt++) {\n      try {\n        s.sendMessage(message, message.getRecipients(Message.RecipientType.TO));\n        return;\n      } catch (final Exception e) {\n        this.logger.error(\"Sending email messages failed, attempt: \" + attempt, e);\n      }\n    }\n    s.close();\n    throw new MessagingException(\"Failed to send email messages after \"\n        + attempt + \" attempts.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40154, "method_name": "setBody", "class_name": "EmailMessage", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setBody(final String body, final String mimeType) {\n    this._body = new StringBuffer(body);\n    this._mimeType = mimeType;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40155, "method_name": "setMimeType", "class_name": "EmailMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage setMimeType(final String mimeType) {\n    this._mimeType = mimeType;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40156, "method_name": "println", "class_name": "EmailMessage", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage println(final Object str) {\n    this._body.append(str);\n\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40157, "method_name": "getBody", "class_name": "EmailMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getBody() {\n    return this._body.toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40158, "method_name": "setBody", "class_name": "EmailMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setBody(final String body) {\n    setBody(body, this._mimeType);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40159, "method_name": "getSubject", "class_name": "EmailMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getSubject() {\n    return this._subject;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40160, "method_name": "setSubject", "class_name": "EmailMessage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "EmailMessage", "snippet": "  public EmailMessage setSubject(final String subject) {\n    this._subject = subject;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40161, "method_name": "getMailPort", "class_name": "EmailMessage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getMailPort() {\n    return this._mailPort;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/utils/EmailMessage.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40162, "method_name": "goodEvent", "class_name": "RandomEventAssassination", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean goodEvent()    \t\t{ return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventAssassination.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 40163, "method_name": "repeatable", "class_name": "RandomEventAssassination", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean repeatable()    \t\t{ return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventAssassination.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 40164, "method_name": "notificationText", "class_name": "RandomEventAssassination", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String notificationText()    {\n        String s1 = text(\"EVENT_ASSASSINATION\");\n        s1 = galaxy().empire(empAssassin).replaceTokens(s1, \"assassin\");\n        s1 = galaxy().empire(empVictim).replaceTokens(s1, \"victim\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventAssassination.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 40165, "method_name": "trigger", "class_name": "RandomEventAssassination", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void trigger(Empire emp) {\n        // find a contacted empire that is not at war\n        List<Empire> emps = new ArrayList<>();\n        for (Empire e: emp.contactedEmpires()) {\n            if (!emp.atWarWith(e.id))\n                emps.add(e);\n        }\n        if (emps.isEmpty())\n                return;\n\n        Empire assassin = emp;\n        Empire victim = random(emps);\n        \n        empAssassin = assassin.id;\n        empVictim = victim.id;\n\n        AssassinationIncident.create(assassin, victim);\n\n        // notify if player is one of the affected empires, or has contact with either one\n        if (assassin.isPlayer()\n        || victim.isPlayer()\n        || player().hasContact(assassin)\n        || player().hasContact(victim))\n            GNNNotification.notifyRandomEvent(notificationText(), \"GNN_Event_Assassin\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventAssassination.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 40166, "method_name": "actionPerformed", "class_name": "SwingAction", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void actionPerformed(ActionEvent e) {\n            CpuConfigurationDialog.this.dispose();\n        }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/CpuConfigurationDialog.java", "stars": "4", "class_props": {"extends": "AbstractAction", "implements": null, "modifiers": ["private"]}}, {"id": 40167, "method_name": "actionPerformed", "class_name": "SwingAction_1", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void actionPerformed(ActionEvent evt) {\n            int new_clock;\n            String s = btnGroup.getSelection().getActionCommand();\n            if (s.equals(\"custom\")) {\n                s = txtCustomclock.getText();\n            }\n            try {\n                new_clock = Integer.parseInt(s);\n                if (new_clock <= 0 || new_clock > 10000000) {\n                    JOptionPane.showMessageDialog(\n                            null,\n                            \"100000(100kHz)\uff5e10000000(10MHz)\u306e\u9593\u306e\u6570\u5024\u3092\u6307\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\",\n                            \"ERROR\",\n                            JOptionPane.ERROR_MESSAGE);\n                    return ;\n                }\n            }\n            catch (NumberFormatException e) {\n                JOptionPane.showMessageDialog(\n                        null,\n                        \"\u4e0d\u6b63\u306a\u6570\u5024\u3067\u3059: \" + s,\n                        \"ERROR\",\n                        JOptionPane.ERROR_MESSAGE);\n                return ;\n            }\n            JR100.setPropertyOfCpuClockFrequency(new_clock);\n            CpuConfigurationDialog.this.dispose();\n        }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/jr100/CpuConfigurationDialog.java", "stars": "4", "class_props": {"extends": "AbstractAction", "implements": null, "modifiers": ["private"]}}, {"id": 40168, "method_name": "user_gets_the_test_data_from_excel_sheet_row", "class_name": "DataSteps", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void user_gets_the_test_data_from_excel_sheet_row(String docName, String sheetName, String rowNum) {\n        BasePage basePage = PageObjects.getPageObject(\"Base\");\n        basePage.getData(docName, sheetName, rowNum);\n    }", "url": "https://raw.githubusercontent.com/Skarlet03/office_hour_cucumber_project/master/src/main/java/automationPractice/step_definitions/DataSteps.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40169, "method_name": "callList", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward callList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t   DynActionForm form,\n\t\t\t\t\t\t\t\t   HttpServletRequest request,\n\t\t\t\t\t\t\t\t   HttpServletResponse response,\n\t\t\t\t\t\t\t\t   ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger contractId = form.getParamInt( \"contractId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tSearchResult<Call> result = new SearchResult<Call>( form );\n\t\tcrmDAO.getCallList( result, contractId );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"callList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40170, "method_name": "registerGroupList", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward registerGroupList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\tDynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\tHttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\tHttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\tConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"registerGroupList\", crmDAO.getRegisterGroupList() );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"registerGroupList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40171, "method_name": "registerExecutorList", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward registerExecutorList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t   DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t   HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t   HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t   ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tString groupId = form.getParam( \"groupId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"registerExecutorList\", crmDAO.getRegisterExecutorList( groupId ) );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"registerExecutorList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40172, "method_name": "taskTypeList", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward taskTypeList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t   DynActionForm form,\n\t\t\t\t\t\t\t\t\t   HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t   HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t   ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"taskTypeList\", crmDAO.getTaskTypeList() );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"taskTypeList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40173, "method_name": "callTypeList", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward callTypeList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t   DynActionForm form,\n\t\t\t\t\t\t\t\t\t   HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t   HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t   ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"callTypeList\", crmDAO.getCallRegisterTypeList() );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"callTypeList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40174, "method_name": "callCurrentProblemList", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward callCurrentProblemList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t\t DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t\t HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t\t HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t\t ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger contractId = form.getParamInt( \"contractId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"callCurrentProblemList\", crmDAO.getCallCurrentProblemList( contractId ) );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"callCurrentProblemList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40175, "method_name": "createRegisterCall", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward createRegisterCall( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger contractId = form.getParamInt( \"contractId\" );\n\t\tInteger typeId = form.getParamInt( \"typeId\" );\n\t\tInteger problemGroupId = form.getParamInt( \"registerGroupId\" );\n\t\tString comment = form.getParam( \"comment\" );\n\t\tString problemComment = form.getParam( \"problemComment\" );\n\t\tInteger linkProblemId = form.getParamInt( \"linkProblemId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\t\tcrmDAO.updateRegisterCall( contractId, typeId, problemGroupId, linkProblemId, comment, problemComment );\n\n\t\treturn processJsonForward( conSet, form, response );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40176, "method_name": "getRegisterSubjectGroup", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward getRegisterSubjectGroup( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t\t  DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t\t  HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t\t  HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t\t  ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger typeId = form.getParamInt( \"typeId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"groupId\", crmDAO.getRegisterSubjectGroup( typeId ) );\n\n\t\treturn processJsonForward( conSet, form, response );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40177, "method_name": "taskList", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward taskList( ActionMapping mapping,\n\t\t\t\t\t\t\t\t   DynActionForm form,\n\t\t\t\t\t\t\t\t   HttpServletRequest request,\n\t\t\t\t\t\t\t\t   HttpServletResponse response,\n\t\t\t\t\t\t\t\t   ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger contractId = form.getParamInt( \"contractId\" );\n\n\t\tString sort1 = form.getParam( \"sort1\" );\n\t\tString sort2 = form.getParam( \"sort2\" );\n\n\t\tSearchResult<Task> result = new SearchResult<Task>( form );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\t\tcrmDAO.getTaskList( result, contractId, sort1, sort2 );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"taskList\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40178, "method_name": "taskGet", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward taskGet( ActionMapping mapping,\n\t\t\t\t\t\t\t\t  DynActionForm form,\n\t\t\t\t\t\t\t\t  HttpServletRequest request,\n\t\t\t\t\t\t\t\t  HttpServletResponse response,\n\t\t\t\t\t\t\t\t  ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger taskId = form.getParamInt( \"taskId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"task\", crmDAO.getTask( taskId ) );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"taskEditor\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40179, "method_name": "createRegisterTask", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward createRegisterTask( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\t\tint addressParameterId = form.getParamInt( \"contractAddressId\" );\n\t\tint typeId = form.getParamInt( \"taskTypeId\" );\n\t\tint groupId = form.getParamInt( \"registerGroupId\" );\n\t\tint statusId = form.getParamInt( \"statusId\" );\n\t\tString targetDate = form.getParam( \"targetDate\" );\n\t\tString executeDate = form.getParam( \"executeDate\" );\n\t\tString comment = form.getParam( \"taskComment\" );\n\t\tString resolution = form.getParam( \"taskResolution\" );\n\t\tList<Integer> executorList = form.getSelectedValuesList( \"executor\" );\n\t\tString executors = executorList.toString().replaceAll( \"\\\\]|\\\\[\", \"\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\t\tcrmDAO.createTask( contractId, 0, typeId, groupId, statusId, targetDate, \"\", executeDate, executors, resolution, addressParameterId, comment );\n\n\t\treturn processJsonForward( conSet, form, response );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40180, "method_name": "updateRegisterTask", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward updateRegisterTask( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tint contractId = form.getParamInt( \"contractId\" );\n\t\tint addressParameterId = form.getParamInt( \"contractAddressId\" );\n\t\tint typeId = form.getParamInt( \"taskTypeId\" );\n\t\tint taskId = form.getParamInt( \"taskId\" );\n\t\tint groupId = form.getParamInt( \"registerGroupId\" );\n\t\tint statusId = form.getParamInt( \"statusId\" );\n\t\tString targetDate = form.getParam( \"targetDate\" );\n\t\tString executeDate = form.getParam( \"executeDate\" );\n\t\tString comment = form.getParam( \"taskComment\" );\n\t\tString resolution = form.getParam( \"taskResolution\" );\n\t\tList<Integer> executorList = form.getSelectedValuesList( \"executor\" );\n\t\tString executors = executorList.toString().replaceAll( \"\\\\]|\\\\[\", \"\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\t\tcrmDAO.updateTask( taskId, contractId, 0, typeId, groupId, statusId, targetDate, \"\", executeDate, executors, resolution, addressParameterId, comment );\n\n\t\treturn processJsonForward( conSet, form, response );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40181, "method_name": "updateRegisterProblem", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward updateRegisterProblem( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t\tDynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t\tHttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t\tHttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t\tConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger problemId = form.getParamInt( \"problemId\" );\n\t\tInteger groupId = form.getParamInt( \"registerGroupId\" );\n\t\tInteger urgency = form.getParamInt( \"urgency\" );\n\t\tInteger statusId = form.getParamInt( \"statusId\" );\n\t\tString comment = form.getParam( \"problemComment\" );\n\t\tList<Integer> executorList = form.getSelectedValuesList( \"executor\" );\n\t\tString executors = executorList.toString().replaceAll( \"\\\\]|\\\\[\", \"\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\t\tform.getResponse().setData( \"problem\", crmDAO.updateRegisterProblem( problemId, statusId, groupId, executors, comment, urgency ) );\n\n\t\treturn processJsonForward( conSet, form, response );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40182, "method_name": "getRegisterProblem", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward getRegisterProblem( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t ConnectionSet conSet )\n\t\tthrows Exception\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger problemId = form.getParamInt( \"problemId\" );\n\n\t\tif( problemId > 0 )\n\t\t{\n\t\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\t\t\tform.getResponse().setData( \"problem\", crmDAO.getRegisterProblem( problemId ) );\n\t\t}\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"getRegisterProblem\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40183, "method_name": "registerProblemListItem", "class_name": "BillingCrmAction", "params": ["ActionMapping", "DynActionForm", "HttpServletRequest", "HttpServletResponse", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "\tpublic ActionForward registerProblemListItem( ActionMapping mapping,\n\t\t\t\t\t\t\t\t\t\t\t\t  DynActionForm form,\n\t\t\t\t\t\t\t\t\t\t\t\t  HttpServletRequest request,\n\t\t\t\t\t\t\t\t\t\t\t\t  HttpServletResponse response,\n\t\t\t\t\t\t\t\t\t\t\t\t  ConnectionSet conSet )\n\t\tthrows BGException\n\t{\n\t\tString billingId = form.getParam( \"billingId\" );\n\t\tInteger problemId = form.getParamInt( \"problemId\" );\n\n\t\tCrmDAO crmDAO = new CrmDAO( form.getUser(), billingId );\n\n\t\tform.getResponse().setData( \"problem\", crmDAO.getRegisterProblem( problemId ) );\n\n\t\treturn processUserTypedForward( conSet, mapping, form, response, \"registerProblemListItem\" );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/struts/action/BillingCrmAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 40184, "method_name": "peerExtend", "class_name": "PeerExtendBiz", "params": ["Map<String,String>", "InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void peerExtend(Map<String, String> diffPeerHostConfig, InitConfigEntity configEntity) {\n        //\u5728\u4e3b\u8282\u70b9\u4fee\u6539crypto-config.yaml\u6587\u4ef6\uff0c\u6dfb\u52a0\u65b0\u8282\u70b9hostname,\u7f16\u5199\u751f\u6210\u8bc1\u4e66\u547d\u4ee4\u884c\uff0c\u53c2\u6570extend\uff0c\u6267\u884c\u547d\u4ee4\u751f\u6210\u65b0\u8282\u70b9\u8bc1\u4e66,\u751f\u6210\u65b0\u589e\u8282\u70b9\u7684compose\u6587\u4ef6\n        //\u5728crypto-config\u914d\u7f6e\u6587\u4ef6\u6dfb\u52a0\u65b0\u8282\u70b9hostName\uff0c\u8c03\u7528generate.sh\u751f\u6210\u65b0\u8282\u70b9\u8bc1\u4e66\n        // log.info(\"\u5728crypto-config\u914d\u7f6e\u6587\u4ef6\u6dfb\u52a0\u65b0\u8282\u70b9hostName\uff0c\u8c03\u7528generate.sh\u751f\u6210\u65b0\u8282\u70b9\u8bc1\u4e66\");\n        log.info(\"Add a new node hostName in the crypto-config configuration file, run generate.sh to generate a new node certificate\");\n        /*initializer.reCreateNewPeerConfigFile(configEntity);*/\n        fabricConfigGen.cryptoGen(configEntity);\n        configFileGen.createExtendCerts();\n        //\u751f\u6210\u65b0\u8282\u70b9\u7684docker-compose\u6587\u4ef6\n        // log.info(\"\u751f\u6210\u65b0\u8282\u70b9\u7684docker-compose\u6587\u4ef6\");\n        log.info(\"Generate a docker-compose file for the new node\");\n\n        Map<String, List<String>> peerHostGroup = dockerConfigGen.groupHostByIp(diffPeerHostConfig);\n        Map<String, String> ipPathMap = this.createNewPeerDockerFile(configEntity, peerHostGroup);\n        //\u5c06\u65b0\u751f\u6210\u7684\u8bc1\u4e66\u62f7\u8d1d\u5230\u4e3b\u8282\u70b9\u5b89\u88c5\u76ee\u5f55\n        // log.info(\"\u5c06\u65b0\u751f\u6210\u7684\u8bc1\u4e66\u62f7\u8d1d\u5230\u4e3b\u8282\u70b9\u5b89\u88c5\u76ee\u5f55\");\n        log.info(\"Copy the new-generated certificate to the master node installation directory\");\n        fileService.masterCopyCryptoConfig();\n        // log.info(\"\u6ce8\u518c\u65b0Peer\u8282\u70b9\u89d2\u8272\");\n        log.info(\"Register a new Peer node role\");\n        List<String> ports = this.registerNewPeerRole(peerHostGroup);\n        // log.info(\"\u63a8\u9001\u65b0peer\u7684\u5b89\u88c5\u6587\u4ef6\");\n        log.info(\"Send new peer installation file\");\n        this.sendNewPeerFile(ipPathMap, configEntity);\n        //\u542f\u52a8\u65b0\u8282\u70b9\n        // log.info(\"\u542f\u52a8\u65b0\u65b0\u589epeer\");\n        log.info(\"Run the new peer node\");\n        List<ServerEntity> serverList = this.startNewPeer(ipPathMap, ports, configEntity);\n        // log.info(\"\u7b49\u5f85\u6240\u6709 peer \u542f\u52a8\u6210\u529f\");\n        log.info(\"Wait for all peer nodes to start successfully\");\n        while (serverList.stream().anyMatch(s -> s.getStatus() != InstallStatusEnum.SUCCESS)) {\n            try {\n                Thread.sleep(5000);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        // \u5c06\u65b0\u8282\u70b9\u7684\u57df\u540d\u66f4\u65b0\u5230cli\u6240\u5728\u5bbf\u4e3b\u673a\u7684host\n        // \u5728\u5bbf\u4e3b\u673a\u9632\u706b\u5899\u4e2d\u6253\u5f00\u65b0\u8282\u70b9\u7684\u7aef\u53e3\n        // log.info(\"\u5c06\u65b0\u8282\u70b9\u7684\u57df\u540d\u5199\u5165\u5230hosts\uff0c\u5728\u9632\u706b\u5899\u4e2d\u5f00\u542f\u65b0\u8282\u70b9\u7aef\u53e3\");\n        log.info(\"Write the domain name of the new node to the hosts, and open the new node port in the firewall\");\n        environmentService.updateNewPeerHostPort(diffPeerHostConfig);\n\n        // \u542f\u52a8\u4e00\u4e2a cli \u5bb9\u5668\n        // log.info(\"\u4e3b\u8282\u70b9\u521b\u5efacli\u5bb9\u5668\");\n        log.info(\"The master node creates a cli container\");\n        if (!fabricCliService.createCliContainer(modeService.getInstallPath() + \"cli\", configEntity)) {\n            // log.error(\"\u521b\u5efacli\u5bb9\u5668\u5931\u8d25\");\n            log.error(\"Failed to create cli container\");\n            return;\n        }\n\n        //\u83b7\u53d6\u6269\u5bb9peer\u53ef\u4ee5\u52a0\u5165\u7684\u4e1a\u52a1\u94fe\u5217\u8868\n        Set<String> channelList = new HashSet<>();\n        try {\n            channelList.addAll(fabricCliService.getAllChannels(configEntity));\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n\n        //\u65b0\u8282\u70b9\u52a0\u5165\u94fe\n        if (!CollectionUtils.isEmpty(channelList)) {\n            // log.info(\"\u65b0\u589e\u8282\u70b9\u52a0\u5165\u94fe\");\n            log.info(\"New node joins the chain\");\n            Set<String> joinChannels = newPeerJoinChannel(configEntity, diffPeerHostConfig, channelList);\n            // log.info(\"\u65b0\u589e\u8282\u70b9\u52a0\u5165\u94fe-joinChannels=\" + JSON.toJSONString(joinChannels));\n            log.info(\"New node joins the chain - joinChannels=\" + JSON.toJSONString(joinChannels));\n        }\n\n        // log.info(\"\u5c06\u65b0 peer(s) \u4fe1\u606f\u52a0\u5165\u672c\u5730\u6570\u636e\u5e93\");\n        log.info(\"Add the new peer(s) node information to the local database\");\n        // \u66f4\u65b0\u6570\u636e\u5e93\n        for (String host : diffPeerHostConfig.keySet()) {\n            String ip = diffPeerHostConfig.get(host);\n            int index = ip.lastIndexOf(\":\");\n            String port = ip.substring(index + 1);\n            ip = ip.substring(0, index);\n            NodeDO nodeDO = new NodeDO();\n            nodeDO.setOrgMspId(configEntity.getOrgMSPID());\n            nodeDO.setRole(RoleEnum.PEER);\n            nodeDO.setHostName(host);\n            nodeDO.setIp(ip);\n            nodeDO.setPort(Integer.parseInt(port));\n            nodeDO.setStatus(InstallStatusEnum.SUCCESS);\n\n            try {\n                this.checkPointDb.addNodeRecord(nodeDO);\n            } catch (SQLException e) {\n                // log.error(String.format(\"\u6dfb\u52a0\u65b0 peer \u8282\u70b9 %s \u8bb0\u5f55\u5230\u6570\u636e\u5e93\u5f02\u5e38\", host), e);\n                log.error(String.format(\"An exception occurred while recording the new peer node %s to the database\", host), e);\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/biz/PeerExtendBiz.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40185, "method_name": "registerNewPeerRole", "class_name": "PeerExtendBiz", "params": ["Map<String,List>"], "throws": null, "modifiers": ["private"], "return_type": "List<String>", "snippet": "    private List<String> registerNewPeerRole(Map<String, List<String>> peerHostGroup) {\n        List<String> ports = new ArrayList<>();\n        for (String ip : peerHostGroup.keySet()) {\n            List<String> hostList = peerHostGroup.get(ip);\n            for (String host : hostList) {\n                int index = host.lastIndexOf(\":\");\n                ports.add(host.substring(index + 1));\n            }\n            this.rolesBiz.addRole(RoleEnum.PEER, \"http://\" + ip + \":8080\", ip, ports);\n        }\n        return ports;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/biz/PeerExtendBiz.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40186, "method_name": "sendNewPeerFile", "class_name": "PeerExtendBiz", "params": ["Map<String,String>", "InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendNewPeerFile(Map<String, String> ipPathMap, InitConfigEntity configEntity) {\n        for (String ip : ipPathMap.keySet()) {\n            String path = ipPathMap.get(ip);\n\n            String folderName = new File(path).getName();\n            if (NetUtil.ipIsMine(ip)) {\n                fileService.copyFiles(RoleEnum.PEER, ip, folderName, modeService.getInstallPath(), folderName, configEntity, null);\n                this.rolesBiz.setServerStatus(ip, InstallStatusEnum.DOWNLOADED);\n            } else {\n                // log.info(\"\u4e3a\u65b0\u589e peer \u6253\u5305\u5b89\u88c5\u5305\");\n                log.info(\"Package  for the new peer node\");\n\n                String packFilePath = fileService.packExtendNodeFiles(ip, folderName, RoleEnum.PEER, configEntity);\n\n                // \u53d1\u9001\u5230\u8282\u70b9\u542f\u52a8\n                // log.info(\"\u5c06\u751f\u6210\u7684\u6587\u4ef6\u5305\u53d1\u9001\u5230\u65b0\u589e peer \u8282\u70b9\");\n                log.info(\"Send the  package to the new peer node\");\n                remoteService.pushSlaveInstallPackage(ip, packFilePath, configEntity);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/biz/PeerExtendBiz.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40187, "method_name": "startNewPeer", "class_name": "PeerExtendBiz", "params": ["Map<String,String>", "List<String>", "InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "List<ServerEntity>", "snippet": "    private List<ServerEntity> startNewPeer(Map<String, String> ipPathMap, List<String> ports, InitConfigEntity configEntity) {\n        List<ServerEntity> serverList = this.rolesBiz.getRolesMap().get(RoleEnum.PEER);\n        for (String ip : ipPathMap.keySet()) {\n            // log.info(String.format(\"\u53d1\u9001\u5b89\u88c5\u547d\u4ee4\u5230\u65b0\u589e peer \u8282\u70b9 %s\", ip));\n            log.info(String.format(\"Send installation command to the new peer node %s\", ip));\n\n            String path = ipPathMap.get(ip);\n\n            String folderName = new File(path).getName();\n\n            // \u5982\u679c\u4e3b\u8282\u70b9\u4e5f\u662f\u6b64\u89d2\u8272\uff0c\u5219\u5148\u5b89\u88c5\n            if (NetUtil.ipIsMine(ip)) {\n                Map<String, String> hosts = environmentService.getRoleNeedSetHost(RoleEnum.PEER, configEntity);\n                if (installService.startRole(RoleEnum.PEER, ports, hosts, folderName)) {\n                    this.rolesBiz.setServerStatus(ip, InstallStatusEnum.SUCCESS);\n                }\n            } else {\n                for (ServerEntity server : serverList) {\n                    if (server.getHost().equalsIgnoreCase(ip)) {\n                        // \u53d1\u9001\u5b89\u88c5\u6307\u4ee4\u7ed9\u4ece\u8282\u70b9\n                        do {\n                            HttpInstallResponse response = remoteService.sendInstallCommand(server, RoleEnum.PEER, folderName, configEntity);\n                            if (ResponseCode.SUCCESS.getCode().equals(response.getCode())) {\n                                // log.warn(String.format(\"\u53d1\u9001\u5b89\u88c5\u6307\u4ee4\u7ed9 %s \u8282\u70b9\u5b89\u88c5 peer \u6210\u529f\", ip));\n                                log.warn(String.format(\"Send installation instructions to %s node to install peer successfully\", ip));\n                                this.rolesBiz.setServerStatus(ip, InstallStatusEnum.INSTALLING);\n                                break;\n                            }\n\n                            // log.warn(String.format(\"\u53d1\u9001\u5b89\u88c5\u6307\u4ee4\u7ed9 %s \u8282\u70b9\u5b89\u88c5 peer \u5931\u8d25\uff0c\u7a0d\u540e\u91cd\u8bd5...\", ip));\n                            log.warn(String.format(\"Send installation instruction to %s, failed to install peer node, try again later...\", ip));\n                            try {\n                                Thread.sleep(3000);\n                            } catch (InterruptedException e) {\n                                e.printStackTrace();\n                            }\n                        } while (true);\n                        break;\n                    }\n                }\n            }\n        }\n        return serverList;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/biz/PeerExtendBiz.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40188, "method_name": "newPeerJoinChannel", "class_name": "PeerExtendBiz", "params": ["InitConfigEntity", "Map<String,String>", "Set<String>"], "throws": null, "modifiers": ["private"], "return_type": "Set<String>", "snippet": "    private Set<String> newPeerJoinChannel(InitConfigEntity configEntity, Map<String, String> diffPeerHostConifg, Set<String> channelList) {\n        //\u83b7\u53d6\u8fd0\u884c\u811a\u672c\u6240\u9700\u53c2\u6570\uff0cpeerAddress\u3001peerTlsRoot\u3001peerTlsCert,peerTlsKey\u3001orderer\u7684\u57df\u540d:\u7aef\u53e3\u3001\u5bf9\u5e94orderer\u7684ca\u8bc1\u4e66\u3001\u52a0\u5165\u94fe\u7684\u540d\u79f0\u3001\n        String privateChannel = \"privatechannel\" + configEntity.getOrgMSPID().toLowerCase();\n        String ordererHost = configEntity.getOrdererHostConfig().keySet().iterator().next();\n        String ordererPort = configEntity.getOrdererHostConfig().get(ordererHost).split(\":\")[1];\n        String orderer = ordererHost + \":\" + ordererPort;\n        String ordererCaPath = String.format(\"/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ordererOrganizations/%s/orderers/%s/msp/tlscacerts/tlsca.%s-cert.pem\", configEntity.getOrdererDomain(), ordererHost, configEntity.getOrdererDomain());\n        Set<String> joinChannels = null;\n        for (String peerHost : diffPeerHostConifg.keySet()) {\n            //\u6269\u5bb9\u8282\u70b9\u9009\u62e9\u52a0\u5165\u94fe\n            joinChannels = this.selectJoinChannel(channelList, privateChannel);\n            //\u521d\u59cb\u5316\u73af\u5883\u53c2\u6570\n            String peerPort = diffPeerHostConifg.get(peerHost).split(\":\")[1];\n            String peerAddress = peerHost + \":\" + peerPort;\n            String peerTlsCaPath = String.format(\"/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/%s/peers/%s/tls/ca.crt\", configEntity.getPeerDomain(), peerHost);\n            String peerTlsCertPath = String.format(\"/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/%s/peers/%s/tls/server.crt\", configEntity.getPeerDomain(), peerHost);\n            String peerTlsKeyPath = String.format(\"/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/%s/peers/%s/tls/server.key\", configEntity.getPeerDomain(), peerHost);\n            //\u521d\u59cb\u5316\u6267\u884c\u547d\u4ee4\n            for (String joinChannel : joinChannels) {\n                String cmd = String.format(\"docker exec cli bash ./scripts/newPeerJoinChannel.sh -c %s -o %s -O %s -p %s -r %s -e %s -k %s\", joinChannel, orderer, ordererCaPath, peerAddress, peerTlsCaPath, peerTlsCertPath, peerTlsKeyPath);\n                //\u6267\u884cpeer\u52a0\u5165\u94fe\u7684\u547d\u4ee4\n                try {\n                    FileUtils.copyFile(new File(modeService.getInitDir() + \"template/newPeerJoinChannel.sh\"), new File(modeService.getInstallPath() + \"cli/scripts/newPeerJoinChannel.sh\"));\n                    ProcessUtil.Result result = ProcessUtil.execCmd(cmd, null, modeService.getInstallPath() + \"cli\");\n                } catch (Exception e) {\n                    // log.error(\"\u6267\u884c docker \u811a\u672c\u5f02\u5e38\", e);\n                    log.error(\"An exception occurred while executing the docker script\", e);\n                    e.printStackTrace();\n                }\n            }\n        }\n        return joinChannels;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/biz/PeerExtendBiz.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40189, "method_name": "selectJoinChannel", "class_name": "PeerExtendBiz", "params": ["Set<String>", "String"], "throws": null, "modifiers": ["private"], "return_type": "Set<String>", "snippet": "    private Set<String> selectJoinChannel(Set<String> queryChannelList, String privateChannel) {\n        Set<String> selectChannels = new HashSet<>();\n        Map<String, String> selectChannelIndexMap = new HashMap<>(16);\n        //\u9009\u62e9\u9700\u8981\u52a0\u5165\u7684\u4e1a\u52a1\u94fe\n        // System.out.println(\"\u8bf7\u6839\u636e\u4ee5\u4e0b\u5217\u8868\uff0c\u9009\u62e9\u6269\u5bb9peer\u9700\u8981\u52a0\u5165\u7684\u4e1a\u52a1\u94fe\u3002\");\n        System.out.println(\"Please select the business chain that the expanded peer node needs to join according to the following list\");\n        StringBuilder builder = new StringBuilder();\n        int nextLine = 1;\n        for (String channel : queryChannelList) {\n            if (channel.equals(privateChannel) || StringUtils.isEmpty(channel)) {\n                continue;\n            }\n\n            builder.append(nextLine).append(\")\").append(channel).append(\"\\t\");\n            selectChannelIndexMap.put(Integer.toString(nextLine), channel);\n            if (nextLine % 5 == 0) {\n                builder.append(\"\\n\");\n            }\n            nextLine += 1;\n        }\n        System.out.println(builder.toString());\n        Scanner sc = new Scanner(System.in);\n        // System.out.print(\"\u8bf7\u8f93\u5165\u9700\u8981\u52a0\u5165\u7684\u94fe\u540d\u7f16\u53f7(\u591a\u4e8e\u4e00\u4e2a\u7f16\u53f7\u65f6\u4ee5\u201c,\u201d\u5206\u5272,\u8bf7\u56de\u8f66\u540e\u8f93\u5165):\");\n        System.out.print(\"Please enter the chain name number to be added (if more than one number is divided by \",\", please enter after entering):\");\n\n        String inputIndexList = \"\";\n        if (sc.hasNextLine()) {\n            inputIndexList = sc.nextLine();\n            // System.out.println(\"\u7528\u6237\u8f93\u5165\" + inputIndexList);\n            System.out.println(\"User input\" + inputIndexList);\n        }\n        sc.close();\n\n        if (StringUtils.isEmpty(inputIndexList)) {\n            // log.info(\"\u6269\u5bb9\u8282\u70b9\u2014\u2014\u7528\u6237\u8f93\u5165\u4e3a\u7a7a\uff0c\u9ed8\u8ba4\u52a0\u5165\u672c\u673a\u6784\u7684\u6240\u6709\u4e1a\u52a1\u94fe\");\n            log.info(\"Expansion node -- User input is empty, default to join all business chains of the institution\");\n            selectChannels.addAll(queryChannelList);\n            selectChannels.remove(\"\");\n        } else {\n            String[] channelIndexArray = inputIndexList.split(\",\");\n            Arrays.stream(channelIndexArray).forEach(i -> {\n                String channelName = selectChannelIndexMap.get(i);\n                if (!StringUtils.isEmpty(channelName)) {\n                    selectChannels.add(channelName);\n                }\n            });\n            selectChannels.add(privateChannel);\n        }\n\n        return selectChannels;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/biz/PeerExtendBiz.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40190, "method_name": "createNewPeerDockerFile", "class_name": "PeerExtendBiz", "params": ["InitConfigEntity", "Map<String,List>"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "    private Map<String, String> createNewPeerDockerFile(InitConfigEntity configEntity, Map<String, List<String>> peerHostGroup) {\n        Map<String, String> ipPathMap = new HashMap<>(16);\n        for (String peerServerIp : peerHostGroup.keySet()) {\n            try {\n                String folderName = UUID.randomUUID().toString();\n                folderName = StringUtils.deleteAny(folderName, \"-\");\n                folderName = \"new-\" + folderName;\n                String filePath = dockerConfigGen.createPeerYamlFile(configEntity, peerServerIp, peerHostGroup.get(peerServerIp), \"fabric-net/dockerFile\" + File.separator + \"peer-\" + folderName + File.separator);\n                String parentPath = new File(filePath).getParent();\n                ipPathMap.put(peerServerIp, parentPath);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        return ipPathMap;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/biz/PeerExtendBiz.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40191, "method_name": "getServiceList", "class_name": "NPayDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<NPayService>", "snippet": "\tpublic List<NPayService> getServiceList(int contractId) throws BGException {\n\t\tRequest req = new Request();\n\t\treq.setModule(NPAY_MODULE_ID);\n\t\treq.setAction(\"ServiceObjectTable\");\n\t\treq.setModuleID(moduleId);\n\t\treq.setContractId(contractId);\n\t\treq.setAttribute(\"object_id\", 0);\n\n\t\tDocument document = transferData.postData(req, user);\n\n\t\tList<NPayService> serviceList = new ArrayList<NPayService>();\n\n\t\tif (document != null) {\n\t\t\tElement dataElement = document.getDocumentElement();\n\t\t\tNodeList nodeList = dataElement.getElementsByTagName(\"row\");\n\n\t\t\tfor (int index = 0; index < nodeList.getLength(); index++) {\n\t\t\t\tNPayService service = new NPayService();\n\t\t\t\tElement rowElement = (Element) nodeList.item(index);\n\n\t\t\t\tservice.setComment(rowElement.getAttribute(\"comment\"));\n\t\t\t\tservice.setDateFrom(TimeUtils.parse(rowElement.getAttribute(\"date1\"), TimeUtils.PATTERN_DDMMYYYY));\n\t\t\t\tservice.setDateTo(TimeUtils.parse(rowElement.getAttribute(\"date2\"), TimeUtils.PATTERN_DDMMYYYY));\n\t\t\t\tservice.setId(Utils.parseInt(rowElement.getAttribute(\"id\")));\n\t\t\t\tservice.setObjectId(Utils.parseInt(rowElement.getAttribute(\"objectId\")));\n\t\t\t\tservice.setObjectTitle(rowElement.getAttribute(\"object\"));\n\t\t\t\tservice.setServiceTitle(rowElement.getAttribute(\"service\"));\n\t\t\t\tservice.setServiceId(Utils.parseInt(rowElement.getAttribute(\"sid\")));\n\t\t\t\tservice.setCount(Utils.parseInt(rowElement.getAttribute(\"col\")));\n\t\t\t\tservice.setContractId(contractId);\n\n\t\t\t\tserviceList.add(service);\n\t\t\t}\n\t\t}\n\t\treturn serviceList;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/NPayDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 40192, "method_name": "getService", "class_name": "NPayDAO", "params": ["int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "NPayService", "snippet": "\tpublic NPayService getService(int id) throws BGException {\n\t\t//http://billing:8081/executer?id=3004&module=npay&action=ServiceObjectGet&mid=6&BGBillingSecret=B6bysmW9pPPyBJxGsMFq6zEz&\n\t\t//[ length = 211 ] xml = <?xml version=\"1.0\" encoding=\"windows-1251\"?><data secret=\"6A6380BBFC43D59F44428773F111ADC8\" status=\"ok\"><object col=\"1\" date1=\"01.05.2008\" date2=\"\" entityId=\"0\" entityMid=\"0\" oid=\"0\" sid=\"31\"/><comment/></data>\n\n\t\tNPayService result = null;\n\n\t\tRequest req = new Request();\n\t\treq.setModule(NPAY_MODULE_ID);\n\t\treq.setAction(\"ServiceObjectGet\");\n\t\treq.setModuleID(moduleId);\n\t\treq.setAttribute(\"id\", id);\n\n\t\tDocument doc = transferData.postData(req, user);\n\t\tElement serviceEl = XMLUtils.selectElement(doc, \"/data/object\");\n\t\tif (serviceEl != null) {\n\t\t\tresult = new NPayService();\n\t\t\tresult.setId(id);\n\t\t\tresult.setServiceId(Utils.parseInt(serviceEl.getAttribute(\"sid\")));\n\t\t\tresult.setObjectId(Utils.parseInt(serviceEl.getAttribute(\"oid\")));\n\t\t\tresult.setCount(Utils.parseInt(serviceEl.getAttribute(\"col\")));\n\t\t\tresult.setDateFrom(TimeUtils.parse(serviceEl.getAttribute(\"date1\"), TimeUtils.PATTERN_DDMMYYYY));\n\t\t\tresult.setDateTo(TimeUtils.parse(serviceEl.getAttribute(\"date2\"), TimeUtils.PATTERN_DDMMYYYY));\n\t\t\tresult.setComment(linesToString(XMLUtils.selectElement(doc, \"/data/comment/\")));\n\t\t}\n\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/NPayDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 40193, "method_name": "updateService", "class_name": "NPayDAO", "params": ["NPayService"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void updateService(NPayService service) throws BGException {\n\t\tupdateService(service.getId(), service.getContractId(), service.getServiceId(), service.getDateFrom(),\n\t\t\t\tservice.getDateTo(), service.getObjectId(), service.getCount(), service.getComment());\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/NPayDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 40194, "method_name": "updateService", "class_name": "NPayDAO", "params": ["int", "int", "int", "Date", "Date", "int", "int", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void updateService(int id, int contractId, int serviceId, Date dateFrom, Date dateTo,\n\t\t\tint objectId, int count, String comment) throws BGException {\n\t\tSimpleDateFormat formatter = new SimpleDateFormat(\"dd.MM.yyyy\");\n\n\t\tRequest req = new Request();\n\t\treq.setModule(NPAY_MODULE_ID);\n\t\treq.setAction(\"ServiceObjectUpdate\");\n\t\treq.setModuleID(String.valueOf(moduleId));\n\t\treq.setContractId(contractId);\n\t\treq.setAttribute(\"object_id\", 0);\n\t\treq.setAttribute(\"id\", id <= 0 ? \"new\" : id);\n\t\treq.setAttribute(\"sid\", serviceId);\n\t\treq.setAttribute(\"oid\", objectId);\n\t\treq.setAttribute(\"col\", count);\n\t\treq.setAttribute(\"comment\", comment);\n\t\tif (dateFrom != null) {\n\t\t\treq.setAttribute(\"date1\", formatter.format(dateFrom));\n\t\t}\n\t\tif (dateTo != null) {\n\t\t\treq.setAttribute(\"date2\", formatter.format(dateTo));\n\t\t}\n\t\ttransferData.postData(req, user);\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/NPayDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 40195, "method_name": "deleteService", "class_name": "NPayDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deleteService(int contractId, int id) throws BGException {\n\t\tRequest req = new Request();\n\t\treq.setModule(NPAY_MODULE_ID);\n\t\treq.setAction(\"ServiceObjectDelete\");\n\t\treq.setModuleID(moduleId);\n\t\treq.setAttribute(\"id\", id);\n\n\t\ttransferData.postData(req, user);\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/NPayDAO.java", "stars": "12", "class_props": {"extends": "BillingModuleDAO", "implements": null, "modifiers": ["public"]}}, {"id": 40196, "method_name": "getDescribe", "class_name": "CaseDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescribe() {\n        return describe;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/entity/CaseDto.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40197, "method_name": "setDescribe", "class_name": "CaseDto", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescribe(String describe) {\n        this.describe = describe;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/entity/CaseDto.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40198, "method_name": "main", "class_name": "NettyGameAppApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(NettyGameAppApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/wangxingman/my_project/master/netty_game_app/netty_game_server/src/main/java/com/game/NettyGameAppApplication.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40199, "method_name": "executeProcedure", "class_name": "PlayerRightClicksProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"entity\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency entity for procedure PlayerRightClicks!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure PlayerRightClicks!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure PlayerRightClicks!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure PlayerRightClicks!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure PlayerRightClicks!\");\n\t\t\treturn;\n\t\t}\n\t\tEntity entity = (Entity) dependencies.get(\"entity\");\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif ((((world.getBlockState(new BlockPos((int) x, (int) y, (int) z))).getBlock() == Blocks.FARMLAND.getDefaultState().getBlock())\n\t\t\t\t&& (((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t\t\t.getItem() == new ItemStack(Items.WOODEN_SHOVEL, (int) (1)).getItem()))) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.DIRT.getDefaultState(), 3);\n\t\t} else if ((((world.getBlockState(new BlockPos((int) x, (int) y, (int) z))).getBlock() == Blocks.FARMLAND.getDefaultState().getBlock())\n\t\t\t\t&& (((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t\t\t.getItem() == new ItemStack(Items.STONE_SHOVEL, (int) (1)).getItem()))) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.DIRT.getDefaultState(), 3);\n\t\t} else if ((((world.getBlockState(new BlockPos((int) x, (int) y, (int) z))).getBlock() == Blocks.FARMLAND.getDefaultState().getBlock())\n\t\t\t\t&& (((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t\t\t.getItem() == new ItemStack(Items.IRON_SHOVEL, (int) (1)).getItem()))) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.DIRT.getDefaultState(), 3);\n\t\t} else if ((((world.getBlockState(new BlockPos((int) x, (int) y, (int) z))).getBlock() == Blocks.FARMLAND.getDefaultState().getBlock())\n\t\t\t\t&& (((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t\t\t.getItem() == new ItemStack(Items.GOLDEN_SHOVEL, (int) (1)).getItem()))) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.DIRT.getDefaultState(), 3);\n\t\t} else if ((((world.getBlockState(new BlockPos((int) x, (int) y, (int) z))).getBlock() == Blocks.FARMLAND.getDefaultState().getBlock())\n\t\t\t\t&& (((entity instanceof LivingEntity) ? ((LivingEntity) entity).getHeldItemMainhand() : ItemStack.EMPTY)\n\t\t\t\t\t\t.getItem() == new ItemStack(Items.DIAMOND_SHOVEL, (int) (1)).getItem()))) {\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.AIR.getDefaultState(), 3);\n\t\t\tworld.setBlockState(new BlockPos((int) x, (int) y, (int) z), Blocks.DIRT.getDefaultState(), 3);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/PlayerRightClicksProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 40200, "method_name": "onRightClickBlock", "class_name": "PlayerRightClicksProcedure", "params": ["PlayerInteractEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onRightClickBlock(PlayerInteractEvent.RightClickBlock event) {\n\t\tPlayerEntity entity = event.getPlayer();\n\t\tint i = event.getPos().getX();\n\t\tint j = event.getPos().getY();\n\t\tint k = event.getPos().getZ();\n\t\tWorld world = event.getWorld();\n\t\tjava.util.HashMap<String, Object> dependencies = new java.util.HashMap<>();\n\t\tdependencies.put(\"x\", i);\n\t\tdependencies.put(\"y\", j);\n\t\tdependencies.put(\"z\", k);\n\t\tdependencies.put(\"world\", world);\n\t\tdependencies.put(\"entity\", entity);\n\t\tdependencies.put(\"event\", event);\n\t\tthis.executeProcedure(dependencies);\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/PlayerRightClicksProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 40201, "method_name": "isShouldEffect", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isShouldEffect() {\n        return shouldEffect;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40202, "method_name": "setShouldEffect", "class_name": "MistuneRenderManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setShouldEffect(boolean shouldEffect) {\n        MistuneRenderManager.shouldEffect = shouldEffect;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40203, "method_name": "getMistuneRenderCallback", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Consumer<Integer>", "snippet": "    public static Consumer<Integer> getMistuneRenderCallback() {\n        return shader -> {\n            ShaderHelper.setUniformf(\"vertJerkOpt\", shader, vertJerkOpt);\n            ShaderHelper.setUniformf(\"vertMovementOpt\", shader, vertMovementOpt);\n            ShaderHelper.setUniformf(\"bottomStaticOpt\", shader, bottomStaticOpt);\n            ShaderHelper.setUniformf(\"scalinesOpt\", shader, scalinesOpt);\n            ShaderHelper.setUniformf(\"horzFuzzOpt\", shader, horzFuzzOpt);\n            ShaderHelper.setUniformf(\"rgbOffsetOpt\", shader, rgbOffsetOpt);\n            ShaderHelper.setUniformf(\"redMultiplier\", shader, redMultiplier);\n            ShaderHelper.setUniformf(\"greenMultiplier\", shader, greenMultiplier);\n            ShaderHelper.setUniformf(\"blueMultiplier\", shader, blueMultiplier);\n            ShaderHelper.setUniformf(\"brightnessMultiplier\", shader, brightnessMultiplier);\n            ShaderHelper.setUniformi(\"decolor\", shader, shouldDecolor ? 1 : 0);\n            ShaderHelper.setUniformi(\"showLeft\", shader, showLeft ? 1 : 0);\n            ShaderHelper.setUniformi(\"showRight\", shader, showRight ? 1 : 0);\n        };\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40204, "method_name": "getVertJerkOpt", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getVertJerkOpt() {\n        return vertJerkOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40205, "method_name": "setVertJerkOpt", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setVertJerkOpt(float vertJerkOpt) {\n        MistuneRenderManager.vertJerkOpt = vertJerkOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40206, "method_name": "getVertMovementOpt", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getVertMovementOpt() {\n        return vertMovementOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40207, "method_name": "setVertMovementOpt", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setVertMovementOpt(float vertMovementOpt) {\n        MistuneRenderManager.vertMovementOpt = vertMovementOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40208, "method_name": "getBottomStaticOpt", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getBottomStaticOpt() {\n        return bottomStaticOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40209, "method_name": "setBottomStaticOpt", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setBottomStaticOpt(float bottomStaticOpt) {\n        MistuneRenderManager.bottomStaticOpt = bottomStaticOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40210, "method_name": "getScalinesOpt", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getScalinesOpt() {\n        return scalinesOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40211, "method_name": "setScalinesOpt", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setScalinesOpt(float scalinesOpt) {\n        MistuneRenderManager.scalinesOpt = scalinesOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40212, "method_name": "getHorzFuzzOpt", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getHorzFuzzOpt() {\n        return horzFuzzOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40213, "method_name": "setHorzFuzzOpt", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setHorzFuzzOpt(float horzFuzzOpt) {\n        MistuneRenderManager.horzFuzzOpt = horzFuzzOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40214, "method_name": "getRgbOffsetOpt", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getRgbOffsetOpt() {\n        return rgbOffsetOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40215, "method_name": "setRgbOffsetOpt", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setRgbOffsetOpt(float rgbOffsetOpt) {\n        MistuneRenderManager.rgbOffsetOpt = rgbOffsetOpt;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40216, "method_name": "getRedMultiplier", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getRedMultiplier() {\n        return redMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40217, "method_name": "setRedMultiplier", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setRedMultiplier(float redMultiplier) {\n        MistuneRenderManager.redMultiplier = redMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40218, "method_name": "getGreenMultiplier", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getGreenMultiplier() {\n        return greenMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40219, "method_name": "setGreenMultiplier", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setGreenMultiplier(float greenMultiplier) {\n        MistuneRenderManager.greenMultiplier = greenMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40220, "method_name": "getBlueMultiplier", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getBlueMultiplier() {\n        return blueMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40221, "method_name": "setBlueMultiplier", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setBlueMultiplier(float blueMultiplier) {\n        MistuneRenderManager.blueMultiplier = blueMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40222, "method_name": "getBrightnessMultiplier", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float getBrightnessMultiplier() {\n        return brightnessMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40223, "method_name": "setBrightnessMultiplier", "class_name": "MistuneRenderManager", "params": ["float"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setBrightnessMultiplier(float brightnessMultiplier) {\n        MistuneRenderManager.brightnessMultiplier = brightnessMultiplier;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40224, "method_name": "isShouldDecolor", "class_name": "MistuneRenderManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isShouldDecolor() {\n        return shouldDecolor;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40225, "method_name": "setShouldDecolor", "class_name": "MistuneRenderManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setShouldDecolor(boolean shouldDecolor) {\n        MistuneRenderManager.shouldDecolor = shouldDecolor;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40226, "method_name": "setShowLeft", "class_name": "MistuneRenderManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setShowLeft(boolean show) {\n        showLeft = show;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40227, "method_name": "setShowRight", "class_name": "MistuneRenderManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setShowRight(boolean show) {\n        showRight = show;\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/Mistuned/MistuneRenderManager.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40228, "method_name": "getAllLabelsByUserId", "class_name": "LabelServiceImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getAllLabelsByUserId(int userId) {\n        List<String> result = new ArrayList<>();\n        List<Label> list = ld.getAllLabelsByUserId(userId);\n        for (Label temp: list ) {\n            result.add(temp.getLabel_name());\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40229, "method_name": "addLabel", "class_name": "LabelServiceImpl", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addLabel(String label, int user_id) {\n        ld.addLabel(label,user_id);\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40230, "method_name": "deleteLabel", "class_name": "LabelServiceImpl", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteLabel(String label, int user_id) {\n        List<Article> list = ad.getMyArticlesByTag(label,user_id);\n        if(list != null){\n            for (Article a:list\n            ) {\n                int id =  a.getArticle_id();\n                String oldTag = ld.getArticleLabel(id);\n                String newTag = oldTag.replaceAll(\"/\"+label,\"\");\n                ad.updateArticleTag(newTag,id);\n            }\n        }\n        ld.deleteLabel(label,user_id);\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40231, "method_name": "updateLabel", "class_name": "LabelServiceImpl", "params": ["String", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateLabel(String oldLabel, String newLabel, int user_id) {\n        List<Article> list = ad.getMyArticlesByTag(oldLabel,user_id);\n        if(list != null){\n            for (Article a:list\n            ) {\n                int id =  a.getArticle_id();\n                String oldTag = ld.getArticleLabel(id);\n                String newTag = oldTag.replaceAll(oldLabel,newLabel);\n                ad.updateArticleTag(newTag,id);\n            }\n        }\n        ld.updateLabel(oldLabel,newLabel,user_id);\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40232, "method_name": "getLabel", "class_name": "LabelServiceImpl", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "Label", "snippet": "    public Label getLabel(String label, int user_id) {\n        return ld.getLabel(label,user_id);\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40233, "method_name": "getTagArticleCount", "class_name": "LabelServiceImpl", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTagArticleCount(String tag, int user_id) {\n        List<Article> list = ad.getMyArticlesByTag(tag,user_id);\n        if(list == null){\n            return 0;\n        }\n        return list.size();\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40234, "method_name": "getOtherTagArticleCount", "class_name": "LabelServiceImpl", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOtherTagArticleCount(String tag, int user_id) {\n        List<Article> list = ad.getOtherArticlesByTag(tag,user_id);\n        if(list == null){\n            return 0;\n        }\n        return list.size();\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40235, "method_name": "getArticleLabel", "class_name": "LabelServiceImpl", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getArticleLabel(int article_id) {\n        return ld.getArticleLabel(article_id);\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/service/impl/LabelServiceImpl.java", "stars": "10", "class_props": {"extends": "BaseServiceImpl", "implements": ["LabelService"], "modifiers": ["public"]}}, {"id": 40236, "method_name": "init", "class_name": "UnexploredAlienSystemPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        initModel();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 40237, "method_name": "animate", "class_name": "UnexploredAlienSystemPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animate()            { overviewPane.animate(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 40238, "method_name": "topPane", "class_name": "UnexploredAlienSystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel topPane()    { return new SystemViewInfoPane(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 40239, "method_name": "bottomPane", "class_name": "UnexploredAlienSystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel bottomPane() { return new SystemRangePane(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 40240, "method_name": "detailPane", "class_name": "UnexploredAlienSystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel detailPane() {\n        return new DetailPane(this);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 40241, "method_name": "init", "class_name": "DetailPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            setOpaque(true);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["private"]}}, {"id": 40242, "method_name": "textureName", "class_name": "DetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String textureName()     { return TEXTURE_GRAY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["private"]}}, {"id": 40243, "method_name": "textureClip", "class_name": "DetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Shape", "snippet": "        public Shape textureClip()      { return textureClip; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["private"]}}, {"id": 40244, "method_name": "starBackgroundC", "class_name": "DetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "        public Color starBackgroundC()  { return SystemPanel.starBackgroundC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["private"]}}, {"id": 40245, "method_name": "hasStarBackground", "class_name": "DetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean hasStarBackground()     { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["private"]}}, {"id": 40246, "method_name": "paintComponent", "class_name": "DetailPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            StarSystem sys = parent.systemViewToDisplay();\n            if (sys == null)\n                return;\n            int id = sys.id;\n            Empire pl = player();\n\n            super.paintComponent(g);\n            int h = getHeight();\n            int w = getWidth();\n\n            int topH1 = s40;\n            int topH = s90;\n            // draw colony info box\n            g.setColor(MainUI.paneBackground());\n            g.fillRect(0, 0, w, topH-s5);\n            GradientPaint back = new GradientPaint(0,0,pl.sv.empire(id).color(),w, 0,transC);\n            g.setPaint(back);\n            g.fillRect(0, 0, w, topH1-s5);\n            g.setPaint(null);\n            g.setColor(MainUI.shadeBorderC());\n            g.fillRect(0, topH-s5, w, s6);\n\n            textureClip = new Rectangle2D.Float(0,0,w,topH-s5);\n\n            //  colony name\n            g.setFont(narrowFont(24));\n            drawShadowedString(g, pl.sv.descriptiveName(id), 2, s10, topH1-s15, MainUI.shadeBorderC(), SystemPanel.whiteLabelText);\n\n            // colony data\n            String unknown = text(\"RACES_UNKNOWN_DATA\");\n            String factLbl = text(\"MAIN_COLONY_FACTORIES\");\n            String baseLbl = text(\"MAIN_COLONY_BASES\");\n            String shieldLbl = text(\"MAIN_COLONY_SHIELD\");\n            String popLbl = text(\"MAIN_COLONY_POPULATION\");\n\n            boolean spied = pl.sv.isSpied(id);\n\n            int x0 = s5;\n            int x1 = w/2;\n            int y0 = topH-s37;\n            int y1 = topH-s12;\n\n            g.setFont(narrowFont(16));\n            g.setColor(textColor);\n            g.drawString(popLbl, x0, y0);\n            g.drawString(factLbl, x1, y0);\n            g.drawString(shieldLbl, x0, y1);\n            g.drawString(baseLbl, x1, y1);\n\n            String str1 = spied ? str(pl.sv.population(id)) : unknown;\n            int sw1 = g.getFontMetrics().stringWidth(str1);\n            g.drawString(str1, x1-sw1-s10, y0);\n            String str2 = spied ? str(pl.sv.factories(id)) : unknown;\n            int sw2 = g.getFontMetrics().stringWidth(str2);\n            g.drawString(str2, w-s10-sw2, y0);\n            String str3 = spied ? str(pl.sv.shieldLevel(id)) : unknown;\n            int sw3 = g.getFontMetrics().stringWidth(str3);\n            g.drawString(str3, x1-s10-sw3, y1);\n            String str4 = spied ? str(pl.sv.bases(id)) : unknown;\n            int sw4 = g.getFontMetrics().stringWidth(str4);\n            g.drawString(str4, w-s10-sw4, y1);\n\n            // draw borders around data\n            g.setColor(dataBorders);\n            Stroke prevStroke = g.getStroke();\n            g.setStroke(stroke1);\n            //g.drawLine(0, y0-s18, w, y0-s18);\n            g.drawLine(0, y1-s18, w, y1-s18);\n            g.drawLine(x1-s5, y0-s18, x1-s5, topH-s6);\n            g.setStroke(prevStroke);\n\n            // draw planet terrain background\n            drawStar(g, sys.starType(), s40, w/2, h/2);\n\n            g.setFont(narrowFont(16));\n            g.setColor(grayText);\n            List<String> descLines =  wrappedLines(g, text(sys.starType().description()), getWidth()-s12);\n\n            int ydelta = s18;\n            y0=h-s8-(ydelta*(descLines.size()-1));\n            for (String line: descLines) {\n                g.drawString(line, s8, y0);\n                y0 += ydelta;\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredAlienSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["private"]}}, {"id": 40247, "method_name": "getCategories", "class_name": "SelectedPagePresenterImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getCategories() {\n        if(mViewCallback != null) {\n            mViewCallback.onLoading();\n        }\n        Call<SelectedPageCategory> task = mApi.getSelectedPageCategories();\n        task.enqueue(new Callback<SelectedPageCategory>() {\n            @Override\n            public void onResponse(Call<SelectedPageCategory> call,Response<SelectedPageCategory> response) {\n                int resultCode = response.code();\n                LogUtils.d(SelectedPagePresenterImpl.this,\"result code -- > \" + resultCode);\n                if(resultCode == HttpURLConnection.HTTP_OK) {\n                    SelectedPageCategory result = response.body();\n                    //\u901a\u77e5UI\u66f4\u65b0\n                    if(mViewCallback != null) {\n                        mViewCallback.onCategoriesLoaded(result);\n                    }\n                } else {\n                    onLoadedError();\n                }\n            }\n\n            @Override\n            public void onFailure(Call<SelectedPageCategory> call,Throwable t) {\n                onLoadedError();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/presenter/impl/SelectedPagePresenterImpl.java", "stars": "9", "class_props": {"extends": null, "implements": ["ISelectedPagePresenter"], "modifiers": ["public"]}}, {"id": 40248, "method_name": "onLoadedError", "class_name": "SelectedPagePresenterImpl", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onLoadedError() {\n        if(mViewCallback != null) {\n            mViewCallback.onError();\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/presenter/impl/SelectedPagePresenterImpl.java", "stars": "9", "class_props": {"extends": null, "implements": ["ISelectedPagePresenter"], "modifiers": ["public"]}}, {"id": 40249, "method_name": "getContentByCategory", "class_name": "SelectedPagePresenterImpl", "params": ["SelectedPageCategory"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getContentByCategory(SelectedPageCategory.DataBean item) {\n        int categoryId = item.getFavorites_id();\n        LogUtils.d(this,\"categoryId -= > \" + categoryId);\n        String targetUrl = UrlUtils.getSelectedPageContentUrl(categoryId);\n        Call<SelectedContent> task = mApi.getSelectedPageContent(targetUrl);\n        task.enqueue(new Callback<SelectedContent>() {\n            @Override\n            public void onResponse(Call<SelectedContent> call,Response<SelectedContent> response) {\n                int resultCode = response.code();\n                LogUtils.d(SelectedPagePresenterImpl.this,\"getContentByCategory result code -- > \" + resultCode);\n                if(resultCode == HttpURLConnection.HTTP_OK) {\n                    SelectedContent result = response.body();\n                    if(mViewCallback != null) {\n                        mViewCallback.onContentLoaded(result);\n                    }\n                } else {\n                    onLoadedError();\n                }\n            }\n\n            @Override\n            public void onFailure(Call<SelectedContent> call,Throwable t) {\n                onLoadedError();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/presenter/impl/SelectedPagePresenterImpl.java", "stars": "9", "class_props": {"extends": null, "implements": ["ISelectedPagePresenter"], "modifiers": ["public"]}}, {"id": 40250, "method_name": "reloadContent", "class_name": "SelectedPagePresenterImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reloadContent() {\n        this.getCategories();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/presenter/impl/SelectedPagePresenterImpl.java", "stars": "9", "class_props": {"extends": null, "implements": ["ISelectedPagePresenter"], "modifiers": ["public"]}}, {"id": 40251, "method_name": "registerViewCallback", "class_name": "SelectedPagePresenterImpl", "params": ["ISelectedPageCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerViewCallback(ISelectedPageCallback callback) {\n        this.mViewCallback = callback;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/presenter/impl/SelectedPagePresenterImpl.java", "stars": "9", "class_props": {"extends": null, "implements": ["ISelectedPagePresenter"], "modifiers": ["public"]}}, {"id": 40252, "method_name": "unregisterViewCallback", "class_name": "SelectedPagePresenterImpl", "params": ["ISelectedPageCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unregisterViewCallback(ISelectedPageCallback callback) {\n        this.mViewCallback = null;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/presenter/impl/SelectedPagePresenterImpl.java", "stars": "9", "class_props": {"extends": null, "implements": ["ISelectedPagePresenter"], "modifiers": ["public"]}}, {"id": 40253, "method_name": "init", "class_name": "HdfsConnCheck", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(){\n        System.setProperty(\"java.security.krb5.conf\", conf.getKbKrb5Path());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/checks/HdfsConnCheck.java", "stars": "23", "class_props": {"extends": "AbstractDataSourceConnCheck", "implements": null, "modifiers": ["public"]}}, {"id": 40254, "method_name": "validate", "class_name": "HdfsConnCheck", "params": ["DataSourceModel"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void validate(DataSourceModel ma) throws Exception {\n        Map<String, Object> params = ma.resolveParams();\n        Set<String> keys = params.keySet();\n        if(!keys.contains(PARAM_HDFS_PATH)){\n            throw new Exception(PARAM_HDFS_PATH + \" cannot be found\");\n        }\n        if(!String.valueOf(params.get(PARAM_HDFS_PATH))\n                .startsWith(Hdfs.HDFS_PREFIX)){\n            throw new Exception(\"The structure of '\" + PARAM_HDFS_PATH + \"' is illegal\");\n        }\n        validateKb(params);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/checks/HdfsConnCheck.java", "stars": "23", "class_props": {"extends": "AbstractDataSourceConnCheck", "implements": null, "modifiers": ["public"]}}, {"id": 40255, "method_name": "check", "class_name": "HdfsConnCheck", "params": ["DataSource", "File"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void check(DataSource ds, File file) throws Exception {\n        Map<String, Object> parameters = ds.resolveParams();\n        File kbFileTmp = null;\n        try {\n            boolean isUseKb = isUseKb(parameters);\n            if(isUseKb && null == file){\n                if( ds.getId() > 0){\n                    new File(conf.getStoreTmp()).mkdirs();\n                    kbFileTmp = getAuthFileFromDataSource(ds, AuthType.KERBERS, conf.getStoreTmp());\n                    file = kbFileTmp;\n                }\n                if(null == file){\n                    throw new RuntimeException(\"Keytab file has been lost\");\n                }\n            }\n            //Try to get FileSystem\n            FileSystem fileSystem;\n            if(isUseKb){\n                fileSystem = Hdfs.getFileSystem(parameters, file);\n            }else {\n                String userName = String.valueOf(parameters.getOrDefault(PARAM_LADP_USERNAME, \"\"));\n                String password = String.valueOf(parameters.getOrDefault(PARAM_LADP_PASSWORD, \"\"));\n                if(StringUtils.isNotBlank(userName)) {\n                    if (conf.isLdapSwitch()) {\n                        LdapConnector connector = LdapConnector.getInstance(conf.getLdapUrl(), conf.getLdapBaseDn());\n                        if (!connector.authenticate(userName, password)) {\n                            throw new RuntimeException(\"LDAP Authenticate failed\");\n                        }\n                    } else {\n                        throw new RuntimeException(\"LDAP module does not be opened\");\n                    }\n                }\n                fileSystem = Hdfs.getFileSystem(parameters, userName);\n            }\n            fileSystem.close();\n        }finally{\n            if(null != kbFileTmp){\n                if(!kbFileTmp.delete()){\n                    logger.info(\"Delete kerberos temp file Failed, Path:\" + kbFileTmp.getPath());\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/checks/HdfsConnCheck.java", "stars": "23", "class_props": {"extends": "AbstractDataSourceConnCheck", "implements": null, "modifiers": ["public"]}}, {"id": 40256, "method_name": "init", "class_name": "FailsafeExecutorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        dataSource = h2DbExtension.getDataSource();\n        systemClock.resetTime();\n\n        failsafeExecutor = new FailsafeExecutor(systemClock, dataSource, 5, 1, 1);\n\n        helloWorldTask = Tasks.of(\"TestTask\", parameter -> log.info(\"Hello {}\", parameter));\n        failsafeExecutor.register(helloWorldTask);\n    }", "url": "https://raw.githubusercontent.com/oliverselinger/failsafe-executor/master/src/test/java/os/failsafe/executor/FailsafeExecutorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40257, "method_name": "stop", "class_name": "FailsafeExecutorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {\n        failsafeExecutor.stop();\n    }", "url": "https://raw.githubusercontent.com/oliverselinger/failsafe-executor/master/src/test/java/os/failsafe/executor/FailsafeExecutorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40258, "method_name": "shouldExecuteNextTask", "class_name": "FailsafeExecutorTest", "params": [], "throws": ["InterruptedException", "TimeoutException", "ExecutionException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldExecuteNextTask() throws InterruptedException, TimeoutException, ExecutionException {\n        Task.Instance instance = helloWorldTask.instance(\" world!\");\n\n        String taskInstanceId = failsafeExecutor.execute(instance);\n\n        Future<String> execution = this.failsafeExecutor.submitNextExecution().get();\n        String actualTaskId = execution.get(5, TimeUnit.SECONDS);\n\n        assertEquals(taskInstanceId, actualTaskId);\n    }", "url": "https://raw.githubusercontent.com/oliverselinger/failsafe-executor/master/src/test/java/os/failsafe/executor/FailsafeExecutorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40259, "method_name": "shouldExecuteNextTaskViaScheduler", "class_name": "FailsafeExecutorTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldExecuteNextTaskViaScheduler() {\n        Task.ExecutionEndedListener executionEndedListener = Mockito.mock(Task.ExecutionEndedListener.class);\n        helloWorldTask.subscribe(executionEndedListener);\n\n        Task.Instance instance = helloWorldTask.instance(\" world!\");\n\n        String taskInstanceId = failsafeExecutor.execute(instance);\n\n        this.failsafeExecutor.start();\n\n        verify(executionEndedListener, timeout((int) TimeUnit.SECONDS.toMillis(5))).executed(helloWorldTask.getName(), taskInstanceId);\n    }", "url": "https://raw.githubusercontent.com/oliverselinger/failsafe-executor/master/src/test/java/os/failsafe/executor/FailsafeExecutorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40260, "method_name": "shouldNotExecuteTaskThatIsAlreadyStarted", "class_name": "FailsafeExecutorTest", "params": [], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldNotExecuteTaskThatIsAlreadyStarted() throws SQLException {\n        Task.Instance instance = helloWorldTask.instance(\" world!\");\n\n        String taskInstanceId = failsafeExecutor.execute(instance);\n\n        TaskInstances taskInstances = new TaskInstances(dataSource, systemClock);\n\n        TaskInstance task;\n        try (Connection connection = dataSource.getConnection()) {\n            task = taskInstances.findNextTask(connection).get();\n            task.take(connection);\n        }\n\n        Optional<Future<String>> execution = failsafeExecutor.submitNextExecution();\n        assertTrue(execution.isEmpty());\n\n        task.delete();\n    }", "url": "https://raw.githubusercontent.com/oliverselinger/failsafe-executor/master/src/test/java/os/failsafe/executor/FailsafeExecutorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40261, "method_name": "shouldExecuteTaskThatIsOlderThanTimeout", "class_name": "FailsafeExecutorTest", "params": [], "throws": ["InterruptedException", "TimeoutException", "ExecutionException", "SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void shouldExecuteTaskThatIsOlderThanTimeout() throws InterruptedException, TimeoutException, ExecutionException, SQLException {\n        Task.Instance instance = helloWorldTask.instance(\" world!\");\n\n        String taskInstanceId = failsafeExecutor.execute(instance);\n\n        TaskInstances taskInstances = new TaskInstances(dataSource, systemClock);\n\n        TaskInstance task;\n        try (Connection connection = dataSource.getConnection()) {\n            task = taskInstances.findNextTask(connection).get();\n            task.take(connection);\n        }\n\n        systemClock.timeTravelBy(Duration.ofMinutes(10));\n\n        Future<String> execution = failsafeExecutor.submitNextExecution().get();\n        String actualTaskId = execution.get(5, TimeUnit.SECONDS);\n\n        assertEquals(task.id, actualTaskId);\n    }", "url": "https://raw.githubusercontent.com/oliverselinger/failsafe-executor/master/src/test/java/os/failsafe/executor/FailsafeExecutorTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40262, "method_name": "runTest", "class_name": "MultiVariableCounterFactorialTest", "params": ["Map<String,String>"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void runTest(Map<String, String> parameters) throws Throwable {\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"multiVarCount\", int.class), 10000000);\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"multiVarCountDiff\", int.class), 10000000);\n\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"multiVarCount\", long.class), 10000000);\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"multiVarCountDiff\", long.class), 10000000);\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/MultiVariableCounterFactorialTest.java", "stars": "97", "class_props": {"extends": "TailRecOptimizerTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 40263, "method_name": "multiVarCount", "class_name": "TestMethods", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\t\tpublic static int multiVarCount(int n) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tint v1 = multiVarCount(n - 1);\n\t\t\tint v2 = v1;\n\t\t\treturn v2;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/MultiVariableCounterFactorialTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40264, "method_name": "multiVarCountDiff", "class_name": "TestMethods", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\t\tpublic static int multiVarCountDiff(int n) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tint v1 = multiVarCountDiff(n - 1);\n\t\t\tint v2 = v1;\n\t\t\treturn v1;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/MultiVariableCounterFactorialTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40265, "method_name": "multiVarCount", "class_name": "TestMethods", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "\t\tpublic static long multiVarCount(long n) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tlong v1 = multiVarCount(n - 1);\n\t\t\tlong v2 = v1;\n\t\t\treturn v2;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/MultiVariableCounterFactorialTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40266, "method_name": "multiVarCountDiff", "class_name": "TestMethods", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "\t\tpublic static long multiVarCountDiff(long n) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tlong v1 = multiVarCountDiff(n - 1);\n\t\t\tlong v2 = v1;\n\t\t\treturn v1;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/MultiVariableCounterFactorialTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40267, "method_name": "updateSender", "class_name": "NDIControlThread", "params": ["DevolaySender"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateSender(DevolaySender sender){\n        this.sender.set(sender);\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIControlThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40268, "method_name": "end", "class_name": "NDIControlThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void end() {\n        running = false;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIControlThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40269, "method_name": "run", "class_name": "NDIControlThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();\n        DocumentBuilder db = null;\n        try {\n            db = documentBuilderFactory.newDocumentBuilder();\n        } catch (ParserConfigurationException e) {\n            e.printStackTrace();\n        }\n        while(running){\n            if(sender.get().getConnectionCount(0) < 1){\n                try {\n                    Thread.sleep(500);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                continue;\n            }\n            DevolayMetadataFrame metadataFrame = new DevolayMetadataFrame();\n            if (sender.get().sendCapture(metadataFrame, 0) == DevolayFrameType.METADATA) {\n                try {\n                    Document doc = db.parse(new InputSource(new StringReader(metadataFrame.getData())));\n                    String type = doc.getFirstChild().getNodeName();\n                    if(type.equals(\"ntk_ptz_pan_tilt_speed\")){\n                        Element element = (Element) doc.getFirstChild();\n                        float panSpeed = Float.parseFloat(element.getAttribute(\"pan_speed\"));\n                        float tiltSpeed = Float.parseFloat(element.getAttribute(\"tilt_speed\"));\n                        System.out.println(\"Pan speed is \" + panSpeed + \" and tilt speed is \" + tiltSpeed);\n                        float tilt = 5 * tiltSpeed;\n                        float pan = 5 * panSpeed;\n                        System.out.println(\"Pan is \" + pan + \" and tilt is \" + tilt);\n                        float pitch = entity.pitch - tilt;\n                        float yaw = entity.yaw - pan;\n                        System.out.println(\"Yaw is \" + yaw + \" and pitch is \" + pitch);\n                        entity.setHeadYaw(yaw);\n                        entity.updatePositionAndAngles(entity.getX(), entity.getY(), entity.getZ(), yaw, pitch);\n                    } else if(type.equals(\"ntk_ptz_zoom_speed\")){\n                        Element element = (Element) doc.getFirstChild();\n                        float zoomSpeed = Float.parseFloat(element.getAttribute(\"zoom_speed\"));\n                        float fov = 2 * zoomSpeed;\n                        int newZoom = (int) MathHelper.clamp((entity.getZoom() + fov), -50f, 69f);\n                        entity.setZoom(newZoom);\n                    }\n                } catch (SAXException | IOException e) {\n                    e.printStackTrace();\n                }\n            }\n            DevolayTally tally = sender.get().getTally(0);\n            if(tally != null){\n                entity.setLive(tally.isOnProgram());\n            }\n            try {\n                Thread.sleep(100);\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIControlThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40270, "method_name": "onCreate", "class_name": "SplashActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    Intent i = new Intent(getApplicationContext(), MainActivity.class);\n    startActivity(i);\n\n    finish();\n  }", "url": "https://raw.githubusercontent.com/Rminsh/Sarrafi/master/app/src/main/java/com/shalchian/sarrafi/activity/SplashActivity.java", "stars": "22", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40271, "method_name": "getDescription", "class_name": "ServiceDescription", "params": ["JSONObject"], "throws": null, "modifiers": ["public", "static"], "return_type": "ServiceDescription", "snippet": "    public static ServiceDescription getDescription(JSONObject json) {\n        return new ServiceDescription(json);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40272, "method_name": "getServiceFilter", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServiceFilter() {\n        return serviceFilter;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40273, "method_name": "setServiceFilter", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceFilter(String serviceFilter) {\n        this.serviceFilter = serviceFilter;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40274, "method_name": "getUUID", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUUID() {\n        return UUID;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40275, "method_name": "setUUID", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUUID(String uUID) {\n        UUID = uUID;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40276, "method_name": "getIpAddress", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIpAddress() {\n        return ipAddress;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40277, "method_name": "setIpAddress", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIpAddress(String getIpAddress) {\n        this.ipAddress = getIpAddress;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40278, "method_name": "setPort", "class_name": "ServiceDescription", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPort(int port) {\n        this.port = port;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40279, "method_name": "getPort", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPort() {\n        return port;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40280, "method_name": "getFriendlyName", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFriendlyName() {\n        return friendlyName;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40281, "method_name": "setFriendlyName", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFriendlyName(String friendlyName) {\n        this.friendlyName = friendlyName;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40282, "method_name": "getModelName", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModelName() {\n        return modelName;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40283, "method_name": "setModelName", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelName(String modelName) {\n        this.modelName = modelName;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40284, "method_name": "getModelNumber", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModelNumber() {\n        return modelNumber;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40285, "method_name": "setModelNumber", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelNumber(String modelNumber) {\n        this.modelNumber = modelNumber;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40286, "method_name": "getManufacturer", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getManufacturer() {\n        return manufacturer;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40287, "method_name": "setManufacturer", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setManufacturer(String manufacturer) {\n        this.manufacturer = manufacturer;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40288, "method_name": "getModelDescription", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModelDescription() {\n        return modelDescription;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40289, "method_name": "setModelDescription", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelDescription(String modelDescription) {\n        this.modelDescription = modelDescription;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40290, "method_name": "setServiceList", "class_name": "ServiceDescription", "params": ["List<Service>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceList(List<Service> serviceList) {\n        this.serviceList = serviceList;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40291, "method_name": "getApplicationURL", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getApplicationURL() {\n        return applicationURL;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40292, "method_name": "setApplicationURL", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setApplicationURL(String applicationURL) {\n        this.applicationURL = applicationURL;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40293, "method_name": "getServiceList", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Service>", "snippet": "    public List<Service> getServiceList() {\n        return serviceList;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40294, "method_name": "getLastDetection", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLastDetection() {\n        return lastDetection;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40295, "method_name": "setLastDetection", "class_name": "ServiceDescription", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLastDetection(long last) {\n        lastDetection = last;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40296, "method_name": "getServiceID", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServiceID() {\n        return serviceID;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40297, "method_name": "setServiceID", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceID(String serviceID) {\n        this.serviceID = serviceID;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40298, "method_name": "getResponseHeaders", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,List>", "snippet": "    public Map<String, List<String>> getResponseHeaders() {\n        return responseHeaders;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40299, "method_name": "setResponseHeaders", "class_name": "ServiceDescription", "params": ["Map<String,List>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResponseHeaders(Map<String, List<String>> responseHeaders) {\n        this.responseHeaders = responseHeaders;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40300, "method_name": "getVersion", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getVersion() {\n        return version;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40301, "method_name": "setVersion", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVersion(String version) {\n        this.version = version;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40302, "method_name": "getLocationXML", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLocationXML() {\n        return locationXML;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40303, "method_name": "setLocationXML", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLocationXML(String locationXML) {\n        this.locationXML = locationXML;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40304, "method_name": "getServiceURI", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServiceURI() {\n        return serviceURI;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40305, "method_name": "setServiceURI", "class_name": "ServiceDescription", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceURI(String serviceURI) {\n        this.serviceURI = serviceURI;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40306, "method_name": "getDevice", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getDevice() {\n        return device;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40307, "method_name": "setDevice", "class_name": "ServiceDescription", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDevice(Object device) {\n        this.device = device;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40308, "method_name": "toJSONObject", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject toJSONObject() {\n        JSONObject jsonObj = new JSONObject();\n\n        try {\n            jsonObj.putOpt(KEY_FILTER, serviceFilter);\n            jsonObj.putOpt(KEY_IP_ADDRESS, ipAddress);\n            jsonObj.putOpt(KEY_UUID, UUID);\n            jsonObj.putOpt(KEY_FRIENDLY, friendlyName);\n            jsonObj.putOpt(KEY_MODEL_NAME, modelName);\n            jsonObj.putOpt(KEY_MODEL_NUMBER, modelNumber);\n            jsonObj.putOpt(KEY_PORT, port);\n            jsonObj.putOpt(KEY_VERSION, version);\n            jsonObj.putOpt(KEY_SERVICE_ID, serviceID);\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        return jsonObj;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40309, "method_name": "clone", "class_name": "ServiceDescription", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ServiceDescription", "snippet": "    public ServiceDescription clone() {\n        ServiceDescription service = new ServiceDescription();\n        service.setPort(this.port);\n\n        // we can ignore all these NullPointerExceptions, it's OK if those properties don't have values\n        try { service.setServiceID(this.serviceID); } catch (NullPointerException ex) { }\n        try { service.setIpAddress(this.ipAddress); } catch (NullPointerException ex) { }\n        try { service.setUUID(this.UUID); } catch (NullPointerException ex) { }\n        try { service.setVersion(this.version); } catch (NullPointerException ex) { }\n        try { service.setFriendlyName(this.friendlyName); } catch (NullPointerException ex) { }\n        try { service.setManufacturer(this.manufacturer); } catch (NullPointerException ex) { }\n        try { service.setModelName(this.modelName); } catch (NullPointerException ex) { }\n        try { service.setModelNumber(this.modelNumber); } catch (NullPointerException ex) { }\n        try { service.setModelDescription(this.modelDescription); } catch (NullPointerException ex) { }\n        try { service.setApplicationURL(this.applicationURL); } catch (NullPointerException ex) { }\n        try { service.setLocationXML(this.locationXML); } catch (NullPointerException ex) { }\n        try { service.setResponseHeaders(this.responseHeaders); } catch (NullPointerException ex) { }\n        try { service.setServiceList(this.serviceList); } catch (NullPointerException ex) { }\n        try { service.setServiceFilter(this.serviceFilter); } catch (NullPointerException ex) { }\n\n        return service;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/config/ServiceDescription.java", "stars": "4", "class_props": {"extends": null, "implements": ["Cloneable"], "modifiers": ["public"]}}, {"id": 40310, "method_name": "tech", "class_name": "ShipECM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechECMJammer", "snippet": "    public TechECMJammer tech() { return (TechECMJammer) super.tech(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipECM.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40311, "method_name": "level", "class_name": "ShipECM", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int level()          { return tech() == null ? 0 : tech().mark; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipECM.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40312, "method_name": "fieldValue", "class_name": "ShipECM", "params": ["int", "ShipDesign", "int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String fieldValue(int n, ShipDesign d, int bank) {\n        switch(n) {\n            case 0: return name().isEmpty() ? text(\"SHIP_DESIGN_COMPONENT_NONE\") : name();\n            case 1: return str((int)(cost(d)+(enginesRequired(d)*d.engine().cost(d))));\n            case 2: return str((int)size(d));\n            case 3: return str((int)power(d));\n            case 4: return str((int)space(d));\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/ships/ShipECM.java", "stars": "74", "class_props": {"extends": "ShipComponent", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40313, "method_name": "preHandle", "class_name": "JwtInterceptor", "params": ["HttpServletRequest", "HttpServletResponse", "Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        System.out.println(\"\u7ecf\u8fc7\u4e86\u62e6\u622a\u5668\");\n        //\u65e0\u8bba\u5982\u4f55\u90fd\u653e\u884c\uff0c\u80fd\u4e0d\u80fd\u64cd\u4f5c\u8fd8\u662f\u5728\u5177\u4f53\u7684\u64cd\u4f5c\u4e2d\u53bb\u5224\u65ad\n        //\u62e6\u622a\u5668\u53ea\u662f\u628a\u5934\u8bf7\u6c42\u4e2d\u5305\u542btoken\u7684\u8fdb\u884c\u89e3\u6790\u9a8c\u8bc1\n        String header = request.getHeader(\"Authorization\");\n        if(header != null && !\"\".equals(header)) {\n            //\u5982\u679c\u5305\u542b\u6709Authorization\u5934\u4fe1\u606f\uff0c\u5c31\u5bf9\u5176\u8fdb\u884c\u89e3\u6790\n            if(header.startsWith(\"Bearer \")) {\n                //\u5f97\u5230token\n                String token = header.substring(7);\n                //\u5bf9\u4ee4\u724c\u8fdb\u884c\u9a8c\u8bc1\n                try{\n                    Claims claims = jwtUtil.parseJWT(token);\n                    String roles = (String) claims.get(\"roles\");\n                    if(roles != null || roles.equals(\"admin\")) {\n                       request.setAttribute(\"claims_admin\",token);\n                    }\n                    if(roles != null || roles.equals(\"user\")) {\n                        request.setAttribute(\"claims_user\",token);\n                    }\n                }catch(Exception e) {\n                    throw new RuntimeException(\"\u4ee4\u724c\u4e0d\u6b63\u786e!\");\n                }\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_user/src/main/java/com/tensquare/user/interceptor/JwtInterceptor.java", "stars": "34", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 40314, "method_name": "main", "class_name": "ProgramLan", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\t\tSystem.out.println(\"Java\");\n\t\tSystem.out.println(\"Python\");\n\t\tSystem.out.println(\"JavaScript\");\n\t\tSystem.out.println(\"Ruby\");\n\t\tSystem.out.println(\"C++\");\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day2/ProgramLan.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40315, "method_name": "main", "class_name": "Xunhuan", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\n\t{\n\t\t//read inputs\n\t\tScanner in = new Scanner(System.in);\n\t\t\n\t\tSystem.out.print(\"How much money do you need to retire?\");\n\t\tdouble goal = in.nextDouble();\n\t\t\n\t\tSystem.out.print(\"How much money will you conteibute every year?\");\n\t\tdouble payment = in.nextDouble();\n\t\t\n\t\tSystem.out.print(\"Interest rate in %: \");\n\t\tdouble interestRate = in.nextDouble();\n\t\t\n\t\tdouble balance = 0;\n\t\tint years = 0;    //\u8ba1\u6570\u5668\n\t\t\n\t\t//update account balance while goal isn't reached\n\t\twhile(balance < goal)\n\t\t{\n\t\t\t//add this year's payment and interest\n\t\t\tbalance += payment;\n\t\t\tdouble interest = balance * interestRate/100;\n\t\t\tbalance += interest;\n\t\t\tyears += 1;\n\t\t}\n\t\t\n\t\tSystem.out.println(\"You can retire in \" + years +\"years.\");\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/Xunhuan.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40316, "method_name": "createFileSystem", "class_name": "AndroidARM64Emulator", "params": ["File"], "throws": null, "modifiers": ["protected"], "return_type": "FileSystem<AndroidFileIO>", "snippet": "    protected FileSystem<AndroidFileIO> createFileSystem(File rootDir) {\n        return new LinuxFileSystem(this, rootDir);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40317, "method_name": "createMemory", "class_name": "AndroidARM64Emulator", "params": ["UnixSyscallHandler<AndroidFileIO>", "String"], "throws": null, "modifiers": ["protected"], "return_type": "Memory", "snippet": "    protected Memory createMemory(UnixSyscallHandler<AndroidFileIO> syscallHandler, String[] envs) {\n        return new AndroidElfLoader(this, syscallHandler);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40318, "method_name": "createDyld", "class_name": "AndroidARM64Emulator", "params": ["SvcMemory"], "throws": null, "modifiers": ["protected"], "return_type": "Dlfcn", "snippet": "    protected Dlfcn createDyld(SvcMemory svcMemory) {\n        return new ArmLD64(unicorn, svcMemory);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40319, "method_name": "createSyscallHandler", "class_name": "AndroidARM64Emulator", "params": ["SvcMemory"], "throws": null, "modifiers": ["protected"], "return_type": "UnixSyscallHandler<AndroidFileIO>", "snippet": "    protected UnixSyscallHandler<AndroidFileIO> createSyscallHandler(SvcMemory svcMemory) {\n        return new ARM64SyscallHandler(svcMemory);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40320, "method_name": "createDalvikVMInternal", "class_name": "AndroidARM64Emulator", "params": ["File"], "throws": null, "modifiers": ["private"], "return_type": "VM", "snippet": "    private VM createDalvikVMInternal(File apkFile) {\n        return new DalvikVM64(this, apkFile);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40321, "method_name": "setupTraps", "class_name": "AndroidARM64Emulator", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupTraps() {\n        try (Keystone keystone = new Keystone(KeystoneArchitecture.Arm64, KeystoneMode.LittleEndian)) {\n            unicorn.mem_map(LR, 0x10000, UnicornConst.UC_PROT_READ | UnicornConst.UC_PROT_EXEC);\n            KeystoneEncoded encoded = keystone.assemble(\"b #0\");\n            byte[] b0 = encoded.getMachineCode();\n            ByteBuffer buffer = ByteBuffer.allocate(0x10000);\n            for (int i = 0; i < 0x10000; i += b0.length) {\n                buffer.put(b0);\n            }\n            unicorn.mem_write(LR, buffer.array());\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40322, "method_name": "getLibraryExtension", "class_name": "AndroidARM64Emulator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLibraryExtension() {\n        return \".so\";\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40323, "method_name": "getLibraryPath", "class_name": "AndroidARM64Emulator", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLibraryPath() {\n        return \"/android/lib/arm64-v8a/\";\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40324, "method_name": "createURLibraryFile", "class_name": "AndroidARM64Emulator", "params": ["URL", "String"], "throws": null, "modifiers": ["public"], "return_type": "LibraryFile", "snippet": "    public LibraryFile createURLibraryFile(URL url, String libName) {\n        return new URLibraryFile(url, libName, -1);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40325, "method_name": "isPaddingArgument", "class_name": "AndroidARM64Emulator", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean isPaddingArgument() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40326, "method_name": "createDalvikVM", "class_name": "AndroidARM64Emulator", "params": ["File"], "throws": null, "modifiers": ["final", "public"], "return_type": "VM", "snippet": "    public final VM createDalvikVM(File apkFile) {\n        if (vm != null) {\n            throw new IllegalStateException(\"vm is already created\");\n        }\n        vm = createDalvikVMInternal(apkFile);\n        return vm;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40327, "method_name": "getDalvikVM", "class_name": "AndroidARM64Emulator", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "VM", "snippet": "    public final VM getDalvikVM() {\n        return vm;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/AndroidARM64Emulator.java", "stars": "16", "class_props": {"extends": "AbstractARM64Emulator", "implements": ["AndroidEmulator"], "modifiers": ["public"]}}, {"id": 40328, "method_name": "add", "class_name": "Arith", "params": ["double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double add(double v1, double v2) {\n        BigDecimal b1 = new BigDecimal(Double.toString(v1));\n        BigDecimal b2 = new BigDecimal(Double.toString(v2));\n        return b1.add(b2).doubleValue();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/utils/Arith.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40329, "method_name": "sub", "class_name": "Arith", "params": ["double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double sub(double v1, double v2) {\n        BigDecimal b1 = new BigDecimal(Double.toString(v1));\n        BigDecimal b2 = new BigDecimal(Double.toString(v2));\n        return b1.subtract(b2).doubleValue();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/utils/Arith.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40330, "method_name": "mul", "class_name": "Arith", "params": ["double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double mul(double v1, double v2) {\n        BigDecimal b1 = new BigDecimal(Double.toString(v1));\n        BigDecimal b2 = new BigDecimal(Double.toString(v2));\n        return b1.multiply(b2).doubleValue();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/utils/Arith.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40331, "method_name": "div", "class_name": "Arith", "params": ["double", "double"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double div(double v1, double v2) {\n        return div(v1, v2, DEF_DIV_SCALE);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/utils/Arith.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40332, "method_name": "div", "class_name": "Arith", "params": ["double", "double", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double div(double v1, double v2, int scale) {\n        if (scale < 0) {\n            throw new IllegalArgumentException(\n                    \"The   scale   must   be   a   positive   integer   or   zero\");\n        }\n        BigDecimal b1 = new BigDecimal(Double.toString(v1));\n        BigDecimal b2 = new BigDecimal(Double.toString(v2));\n        return b1.divide(b2, scale, BigDecimal.ROUND_HALF_UP).doubleValue();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/utils/Arith.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40333, "method_name": "round", "class_name": "Arith", "params": ["double", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double round(double v, int scale) {\n        if (scale < 0) {\n            throw new IllegalArgumentException(\n                    \"The   scale   must   be   a   positive   integer   or   zero\");\n        }\n        BigDecimal b = new BigDecimal(Double.toString(v));\n        BigDecimal one = new BigDecimal(\"1\");\n        return b.divide(one, scale, BigDecimal.ROUND_HALF_UP).doubleValue();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/utils/Arith.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40334, "method_name": "onCreate", "class_name": "BeamDeviceSelectorDialogFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/BeamDeviceSelectorDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 40335, "method_name": "onCreateDialog", "class_name": "BeamDeviceSelectorDialogFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "    public Dialog onCreateDialog(Bundle savedInstanceState) {\n        AlertDialog.Builder builder;\n        final BeamManager beamManager = BeamManager.getInstance(getActivity());\n        if (!beamManager.isConnected()) {\n            mAdapter = new BeamDeviceAdapter(getActivity());\n            builder = new AlertDialog.Builder(getActivity())\n                    .setSingleChoiceItems(mAdapter, -1, new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialog, int position) {\n                            ConnectableDevice device = mAdapter.getItem(position);\n                            BeamManager.getInstance(getActivity()).connect(device);\n                            dismiss();\n                        }\n                    })\n                    .setTitle(R.string.select_beaming)\n                    .setNegativeButton(R.string.cancel,\n                            new DialogInterface.OnClickListener() {\n                                @Override\n                                public void onClick(DialogInterface dialog, int which) {\n                                    dialog.dismiss();\n                                }\n                            }\n                    );\n            return builder.create();\n        } else if(beamManager.getConnectedDevice() != null) {\n            builder = new AlertDialog.Builder(getActivity())\n                    .setTitle(getString(R.string.connected_to) + \" \" + beamManager.getConnectedDevice().getFriendlyName())\n                    .setNeutralButton(R.string.disconnect, new DialogInterface.OnClickListener() {\n                        @Override\n                        public void onClick(DialogInterface dialog, int which) {\n                            beamManager.disconnect();\n                        }\n                    });\n            return builder.create();\n        }\n        return super.onCreateDialog(savedInstanceState);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/BeamDeviceSelectorDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 40336, "method_name": "onAttach", "class_name": "BeamDeviceSelectorDialogFragment", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Activity activity) {\n        super.onAttach(activity);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/BeamDeviceSelectorDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 40337, "method_name": "onDestroy", "class_name": "BeamDeviceSelectorDialogFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        if (null != mAdapter)\n            mAdapter.destroy();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/BeamDeviceSelectorDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 40338, "method_name": "show", "class_name": "BeamDeviceSelectorDialogFragment", "params": ["FragmentManager"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void show(FragmentManager fm) {\n        BeamDeviceSelectorDialogFragment fragment = new BeamDeviceSelectorDialogFragment();\n        fragment.show(fm, \"overlay_fragment\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/BeamDeviceSelectorDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 40339, "method_name": "click", "class_name": "ShipDisplaySprite", "params": ["GalaxyMapPanel", "int", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click(GalaxyMapPanel map, int count, boolean rightClick, boolean click) {\n        map.toggleShipDisplay(rightClick);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipDisplaySprite.java", "stars": "74", "class_props": {"extends": "MapControlSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40340, "method_name": "draw", "class_name": "ShipDisplaySprite", "params": ["GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(GalaxyMapPanel map, Graphics2D g2) {\n        drawBackground(map,g2);\n\n        int cnr = BasePanel.s12;        \n        g2.setColor(player().scoutBorderColor());\n        g2.fillRoundRect(startX, startY, width, height, cnr, cnr);\n\n        //g2.setColor(player().scoutBorderColor());\n        //g2.fillOval(startX+width/6, startY+height/6, width*2/3, height*2/3);\n\n        g2.setClip(startX, startY, width, height);\n\n        if (map.showArmedShips()) {\n            BufferedImage img = player().shipImage();\n            g2.drawImage(img, startX+BasePanel.s4, startY+BasePanel.s10, map);\n        }\n        if (map.showFriendlyTransports()) {\n            BufferedImage img = player().transportImage();\n            g2.drawImage(img, startX+BasePanel.s12, startY+BasePanel.s5, map);\n        }\n        if (map.showUnarmedShips()) {\n            BufferedImage img = player().scoutImage();\n            g2.drawImage(img, startX+BasePanel.s12, startY+BasePanel.s18, map);\n        }\n\n        g2.setClip(null);\n\n        drawBorder(map,g2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/ShipDisplaySprite.java", "stars": "74", "class_props": {"extends": "MapControlSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40341, "method_name": "searchWithStr", "class_name": "TreeDataUtils", "params": ["List<TreeItem>", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Integer>", "snippet": "    public static List<Integer> searchWithStr(final List<TreeItem<String>> items, final String keyword) {\n        return List.of();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/utils/TreeDataUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40342, "method_name": "linkedProcessList", "class_name": "ProcessLinkAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward linkedProcessList(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        ProcessLinkDAO processLinkDAO = new ProcessLinkDAO(con, form.getUser());\n\n        restoreRequestParams(con, form, true, true, \"open\");\n\n        User user = form.getUser();\n        String objectType = form.getParam(\"objectType\");\n        int id = form.getId();\n\n        Boolean paramOpen = form.getParamBoolean(\"open\", null);\n        Set<Integer> paramProcessTypeId = form.getSelectedValues(\"typeId\");\n\n        Queue queue = ProcessQueueCache.getQueue(setup.getInt(objectType + \".processes.queue\"));\n        if (queue != null) {\n            queue = queue.clone();\n\n            FilterList filters = queue.getFilterList();\n\n            FilterLinkObject filterLinkObject = new FilterLinkObject(0, ParameterMap.of(Filter.VALUES, String.valueOf(id)), objectType, FilterLinkObject.WHAT_FILTER_ID);\n            filters.add(filterLinkObject);\n\n            if (paramOpen != null) {\n                FilterOpenClose filterOpenClose = new FilterOpenClose(0, ParameterMap.of(Filter.VALUES, paramOpen ? FilterOpenClose.OPEN : FilterOpenClose.CLOSE));\n                filters.add(filterOpenClose);\n            }\n\n            if (!paramProcessTypeId.isEmpty()) {\n                FilterProcessType filterProcessType = new FilterProcessType(0, ParameterMap.of(Filter.ON_EMPTY_VALUES, Utils.toString(paramProcessTypeId)));\n                filters.add(filterProcessType);\n            }\n\n            SearchResult<Object[]> searchResult = new SearchResult<Object[]>(form);\n            List<String> aggregateValues = new ArrayList<>();\n\n            ProcessDAO processDAO = new ProcessDAO(con, form.getUser());\n            processDAO.searchProcess(searchResult, aggregateValues, queue, form);\n\n            final List<Object[]> list = searchResult.getList();\n\n            HttpServletRequest request = form.getHttpRequest();\n            request.setAttribute(\"columnList\", queue.getMediaColumnList(\"html\"));\n            queue.processDataForMedia(form, \"html\", list);\n            request.setAttribute(\"queue\", queue);\n        } else {\n            SearchResult<Pair<String, Process>> searchResult = new SearchResult<Pair<String, Process>>(form);\n            processLinkDAO.searchLinkedProcessList(searchResult, CommonDAO.getLikePattern(objectType, \"start\"), id, null,\n                    paramProcessTypeId, form.getSelectedValues(\"statusId\"), form.getParam(\"paramFilter\"),\n                    paramOpen);\n\n            // generate references\n            for (Pair<String, Process> pair : searchResult.getList())\n                setProcessReference(con, form, pair.getSecond(), objectType);\n        }\n\n        // filter type list\n        form.getResponse().setData(\"typeList\", processLinkDAO.getLinkedProcessTypeIdList(objectType, id));\n\n        // type tree for creation\n        List<ProcessType> typeList = ProcessTypeCache.getTypeList(con, objectType, id);\n\n        boolean onlyPermittedTypes = form.getPermission().getBoolean(\"onlyPermittedTypes\", false);\n        if (onlyPermittedTypes) {\n            applyProcessTypePermission(typeList, user);\n        }\n\n        Set<Integer> typeSet = new HashSet<Integer>();\n        for (ProcessType type : typeList) {\n            typeSet.add(type.getId());\n        }\n\n        form.getHttpRequest().setAttribute(\"typeTreeRoot\", ProcessTypeCache.getTypeTreeRoot().clone(typeSet, onlyPermittedTypes));\n\n        return data(con, mapping, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/ProcessLinkAction.java", "stars": "12", "class_props": {"extends": "ProcessAction", "implements": null, "modifiers": ["public"]}}, {"id": 40343, "method_name": "linkedProcessInfo", "class_name": "ProcessLinkAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward linkedProcessInfo(ActionMapping mapping, DynActionForm form, Connection con) throws BGException {\n        int id = form.getId();\n        if (id <= 0) {\n            throw new BGMessageException(\"process id error\");\n        }\n        ProcessDAO processDAO = new ProcessDAO(con);\n\n        form.getResponse().setData(\"process\", processDAO.getProcess(id));\n        new StatusChangeDAO(con).searchProcessStatus(new SearchResult<StatusChange>(form), form.getId(), form.getSelectedValues(\"statusId\"));\n\n        return data(con, mapping, form, \"linkedProcessInfo\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/ProcessLinkAction.java", "stars": "12", "class_props": {"extends": "ProcessAction", "implements": null, "modifiers": ["public"]}}, {"id": 40344, "method_name": "setProcessReference", "class_name": "ProcessLinkAction", "params": ["Connection", "DynActionForm", "Process", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setProcessReference(Connection con, DynActionForm form, Process process, String objectType) {\n        try {\n            ProcessType type = ProcessTypeCache.getProcessType(process.getTypeId());\n            if (type != null) {\n                ProcessReferenceConfig config = type.getProperties().getConfigMap().getConfig(ProcessReferenceConfig.class);\n                process.setReference(config.getReference(con, form, process, objectType));\n            }\n        } catch (Exception e) {\n            process.setReference(e.getMessage());\n            log.error(e.getMessage(), e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/ProcessLinkAction.java", "stars": "12", "class_props": {"extends": "ProcessAction", "implements": null, "modifiers": ["public"]}}, {"id": 40345, "method_name": "linkedProcessCreate", "class_name": "ProcessLinkAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward linkedProcessCreate(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        String objectType = form.getParam(\"objectType\");\n        int id = form.getId();\n        String objectTitle = form.getParam(\"objectTitle\");\n\n        Process process = ProcessAction.processCreate(form, con);\n\n        //TODO: \u041c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u043e\u043c \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 \u043f\u0435\u0440\u043c\u0438\u0448\u0435\u043d\u0430.\n        /*  ParameterMap permission = form.getPermission();\n            Set<Integer> processTypeIds = Utils.toIntegerSet( permission.get( \"allowedProcessTypeIds\" ) );\n        */\n\n        CommonObjectLink link = new CommonObjectLink(Process.OBJECT_TYPE, process.getId(), objectType, id, objectTitle);\n\n        EventProcessor.processEvent(new LinkAddingEvent(form, link),\n                ProcessTypeCache.getProcessType(process.getTypeId()).getProperties().getActualScriptName(), new SingleConnectionConnectionSet(con));\n\n        new ProcessLinkDAO(con).addLink(link);\n\n        EventProcessor.processEvent(new LinkAddedEvent(form, link),\n                ProcessTypeCache.getProcessType(process.getTypeId()).getProperties().getActualScriptName(), new SingleConnectionConnectionSet(con));\n\n        // \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\n        ProcessType type = ProcessTypeCache.getProcessType(form.getParamInt(\"typeId\", 0));\n        ParameterMap configMap = type.getProperties().getConfigMap();\n\n        new ParamValueDAO(con).copyParams(id, process.getId(), configMap.get(\"create.in.copyParams\"));\n\n        final String key = \"create.in.\" + objectType + \".openCreated\";\n        if (\"wizard\".equals(configMap.get(key)) || \n            configMap.getBoolean(\"create.in.\" + objectType + \".wizardCreated\", false)) {\n            form.getResponse().setData(\"wizard\", 1);\n            form.getResponse().getEventList().clear();\n        } else if (configMap.getBoolean(key, true)) {\n            form.getResponse().addEvent(new ProcessOpenEvent(process.getId()));\n        }\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/ProcessLinkAction.java", "stars": "12", "class_props": {"extends": "ProcessAction", "implements": null, "modifiers": ["public"]}}, {"id": 40346, "method_name": "linkProcessList", "class_name": "ProcessLinkAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward linkProcessList(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        HttpServletRequest request = form.getHttpRequest();\n        ProcessLinkDAO processLinkDao = new ProcessLinkDAO(con, form.getUser());\n\n        int id = form.getId();\n\n        Process process = getProcess(new ProcessDAO(con), id);\n        ProcessType type = getProcessType(process.getTypeId());\n\n        request.setAttribute(\"processType\", type);\n\n        // \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u0442\u0438\u043f\u043e\u0432 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u043b\u044c\u043d\u044b\u043c \u0432\u0438\u0434\u043e\u043c \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438\n        /*Set<Integer> createTypeIds = Utils.toIntegerSet(type.getProperties().getConfigMap().get(\"processCreateLinkProcessTypes\"));\n        request.setAttribute(\"typeList\", ProcessTypeCache.getTypeList(createTypeIds));*/\n\n        // \u0436\u0451\u0441\u0442\u043a\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0435 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0442\u0438\u043f\u044b \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432, \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c\u0438 \u0432\u0438\u0434\u0430\u043c\u0438 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438, \u0444\u0438\u043b\u044c\u0442\u0440\u044b \u043f\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0443 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 \u0438 \u0442.\u043f.\n        final List<LinkProcessCreateConfigItem> createTypeList = type.getProperties().getConfigMap().getConfig(LinkProcessCreateConfig.class)\n                .getItemList(con, process);\n\n        request.setAttribute(\"createTypeList\", createTypeList);\n\n        // \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432, \u043a \u043a\u043e\u0442\u043e\u0440\u044b\u043c \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d \u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\n        SearchResult<Pair<String, Process>> searchResultLinked = new SearchResult<>();\n        processLinkDao.searchLinkedProcessList(searchResultLinked, Process.OBJECT_TYPE + \"%\", id, null, null, null, null, null);\n        form.getResponse().setData(\"linkedProcessList\", searchResultLinked.getList());\n\n        // \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\n        for (Pair<String, Process> pair : searchResultLinked.getList()) {\n            setProcessReference(con, form, pair.getSecond(), form.getParam(\"linkedReferenceName\"));\n        }\n\n        // \u043f\u0440\u0438\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u043a \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0443 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u044b\n        SearchResult<Pair<String, Process>> searchResultLink = new SearchResult<Pair<String, Process>>(form);\n        processLinkDao.searchLinkProcessList(searchResultLink, id);\n\n        // \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0432\n        for (Pair<String, Process> pair : searchResultLink.getList()) {\n            setProcessReference(con, form, pair.getSecond(), form.getParam(\"linkReferenceName\"));\n        }\n\n        // \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0442\u0443\u0441\u0430 \u0432\u043a\u043b\u0430\u0434\u043a\u0438, \u0435\u0441\u043b\u0438 \u043d\u0443\u0436\u043d\u043e\n        if (Strings.isNotBlank(form.getParam(IfaceState.REQUEST_PARAM_IFACE_ID))) {\n            IfaceState ifaceState = new IfaceState(form);\n            IfaceState currentState = new IfaceState(Process.OBJECT_TYPE, id, form, \n                    String.valueOf(searchResultLinked.getPage().getRecordCount()),\n                    String.valueOf(searchResultLink.getPage().getRecordCount()));\n            new IfaceStateDAO(con).compareAndUpdateState(ifaceState, currentState, form);\n        }\n\n        return data(con, mapping, form, \"linkProcessList\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/ProcessLinkAction.java", "stars": "12", "class_props": {"extends": "ProcessAction", "implements": null, "modifiers": ["public"]}}, {"id": 40347, "method_name": "linkProcessCreate", "class_name": "ProcessLinkAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward linkProcessCreate(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        int id = form.getId();\n\n        // \u043b\u0438\u0431\u043e \u0442\u0438\u043f \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430 + \u0442\u0438\u043f \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439\n        int typeId = form.getParamInt(\"typeId\", -1);\n        String objectType = form.getParam(\"objectType\", \"\");\n\n        // \u043b\u0438\u0431\u043e \u043a\u043e\u0434 \u0438\u0437 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n        int createTypeId = form.getParamInt(\"createTypeId\", -1);\n\n        String description = Utils.maskNull(form.getParam(\"description\"));\n\n        Process linkedProcess = getProcess(new ProcessDAO(con), id);\n        linkProcessCreate(con, form, linkedProcess, typeId, objectType, createTypeId, description, form.getParamInt(\"groupId\", -1));\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/ProcessLinkAction.java", "stars": "12", "class_props": {"extends": "ProcessAction", "implements": null, "modifiers": ["public"]}}, {"id": 40348, "method_name": "linkProcessCreate", "class_name": "ProcessLinkAction", "params": ["Connection", "DynActionForm", "Process", "int", "String", "int", "String", "int"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "Process", "snippet": "    public static Process linkProcessCreate(Connection con, DynActionForm form, Process linkedProcess, int typeId, String objectType,\n            int createTypeId, String description, int groupId) throws Exception {\n        final ProcessLinkDAO linkDao = new ProcessLinkDAO(con);\n\n        int linkedId = linkedProcess.getId();\n\n        Process process = new Process();\n        if (createTypeId > 0) {\n            ProcessType linkedType = getProcessType(linkedProcess.getTypeId());\n\n            LinkProcessCreateConfigItem item = linkedType.getProperties().getConfigMap().getConfig(LinkProcessCreateConfig.class)\n                    .getItem(createTypeId);\n            if (item == null) {\n                throw new BGException(\"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043f\u0440\u0430\u0432\u0438\u043b\u043e \u0441 \u043a\u043e\u0434\u043e\u043c: \" + createTypeId);\n            }\n\n            objectType = item.getLinkType();\n\n            process.setTypeId(item.getProcessTypeId());\n            process.setDescription(description);\n\n            processCreate(form, con, process, groupId);\n\n            String copyParams = item.getCopyParamsMapping();\n            if (\"all\".equals(copyParams)) {\n                ProcessType type = getProcessType(process.getTypeId());\n                List<Integer> paramIds = type.getProperties().getParameterIds();\n                List<Integer> linkedParamIds = linkedType.getProperties().getParameterIds();\n                List<Integer> paramIdsBothHave = new ArrayList<Integer>(linkedParamIds);\n                paramIdsBothHave.retainAll(paramIds);\n\n                new ParamValueDAO(con).copyParams(linkedId, process.getId(), StringUtils.join(paramIdsBothHave, \",\"));\n            } else {\n                new ParamValueDAO(con).copyParams(linkedId, process.getId(), copyParams);\n            }\n\n            String copyLinks = item.getCopyLinks();\n\n            // \u043f\u043e\u043a\u0430 \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0440\u0430\u0437\u0443 \u0432\u0441\u0435\u0445 \u043f\u0440\u0438\u0432\u044f\u0437\u043e\u043a\n            if (Utils.notBlankString(copyLinks)) {\n                if (copyLinks.equals(\"1\")) {\n                    linkDao.copyLinks(linkedId, process.getId(), null, Process.OBJECT_TYPE + \"%\");\n                } else {\n                    linkDao.copyLinks(linkedId, process.getId(), copyLinks, Process.OBJECT_TYPE + \"%\");\n                }\n            }\n        } else {\n            process.setTypeId(typeId);\n            process.setDescription(description);\n\n            processCreate(form, con, process, -1);\n        }\n\n        // \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438\n        linkDao.addLink(new CommonObjectLink(linkedId, objectType, process.getId(), \"\"));\n\n        ProcessType createdProcessType = getProcessType(process.getTypeId());\n        EventProcessor.processEvent(new ProcessCreatedAsLinkEvent(form, linkedProcess, process),\n                createdProcessType.getProperties().getActualScriptName(), new SingleConnectionConnectionSet(con));\n\n        return process;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/ProcessLinkAction.java", "stars": "12", "class_props": {"extends": "ProcessAction", "implements": null, "modifiers": ["public"]}}, {"id": 40349, "method_name": "l", "class_name": "Localizer", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String l(String pattern, Object... args) {\n        for (Localization localization : localizations) {\n            if (localization == null) break;\n            \n            String translation = localization.getTranslation(pattern, toLang);\n            if (translation != null)\n                return String.format(translation, args);\n        }\n\n        log.debug(\"Missing translation for pattern: '%s'\", pattern);\n\n        return String.format(pattern, args);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgerp/i18n/Localizer.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40350, "method_name": "init", "class_name": "LocalResourceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(){\n        resWareHouse = new Resource(-1L, 0, MachineInfo.memoryTotal() - MachineInfo.memoryUsed());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/resource/LocalResourceManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["ResourceManager"], "modifiers": ["public"]}}, {"id": 40351, "method_name": "allocate", "class_name": "LocalResourceManager", "params": ["Resource"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean allocate(Resource resource) {\n        resourceLock.lock();\n        try{\n            if(allocated.size() <= 0){\n                resWareHouse.setMemByte(MachineInfo.memoryTotal() - MachineInfo.memoryUsed());\n            }\n            if(resWareHouse.getMemByte() >= resource.getMemByte()\n                     && resWareHouse.getCpuCore() >= resource.getCpuCore()){\n                long memRequire = resource.getMemByte();\n                long totalMem = MachineInfo.memoryTotal();\n                double actualRate = (double)(MachineInfo.memoryUsed() + memRequire)/(double)totalMem;\n                double virtualRate = (double)(totalMem - resWareHouse.getMemByte() + memRequire)/(double)totalMem;\n                LOG.info(\"ActualRate:[\" + actualRate +\"], virtualRate:[\" + virtualRate +\"],\" +\n                        \" threshold:[\"+resourceConfiguration.getThresholdMem() + \"]\");\n                if(Math.max(actualRate, virtualRate) >= resourceConfiguration.getThresholdMem()){\n                    return false;\n                }\n\n                resWareHouse.allocate(resource);\n                return null == allocated.putIfAbsent(String.valueOf(resource.getResourceId()), resource);\n            }\n            return false;\n        }finally{\n            resourceLock.unlock();\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/resource/LocalResourceManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["ResourceManager"], "modifiers": ["public"]}}, {"id": 40352, "method_name": "collect", "class_name": "LocalResourceManager", "params": ["Resource"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void collect(Resource resource) {\n        if(null != allocated.remove(String.valueOf(resource.getResourceId()))){\n            resWareHouse.collect(resource);\n            if(allocated.size() <= 0){\n                resourceLock.lock();\n                try {\n                    resWareHouse.setMemByte(MachineInfo.memoryTotal() - MachineInfo.memoryUsed());\n                }finally{\n                    resourceLock.unlock();\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/executor/resource/LocalResourceManager.java", "stars": "23", "class_props": {"extends": null, "implements": ["ResourceManager"], "modifiers": ["public"]}}, {"id": 40353, "method_name": "getPersons", "class_name": "PersonController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Person>", "snippet": "    public List<Person> getPersons(){\n        return  personService.getPersons();\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/controller/PersonController.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40354, "method_name": "getPerson", "class_name": "PersonController", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Person", "snippet": "    public Person getPerson(@PathVariable int id){\n        return personService.getPerson(id);\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/controller/PersonController.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40355, "method_name": "addPerson", "class_name": "PersonController", "params": ["Person", "BindingResult"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<?>", "snippet": "    public ResponseEntity<?> addPerson(@Valid @RequestBody Person person, BindingResult result) {\n        if (result.hasErrors()) {\n            Map<String, String> errors = new HashMap<>();\n            for (FieldError error : result.getFieldErrors()) {\n                errors.put(error.getField(), error.getDefaultMessage());\n            }\n            return new ResponseEntity<Map<String, String>>(errors, HttpStatus.BAD_REQUEST);\n        }\n        Person p = personService.addPerson(person);\n        return new ResponseEntity<Person>(p, HttpStatus.CREATED);\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/controller/PersonController.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40356, "method_name": "updatePerson", "class_name": "PersonController", "params": ["int", "Person"], "throws": null, "modifiers": ["public"], "return_type": "Person", "snippet": "    public Person updatePerson(@PathVariable int id, @RequestBody Person person) {\n        return personService.updatePerson(id, person);\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/controller/PersonController.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40357, "method_name": "deletePerson", "class_name": "PersonController", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deletePerson(@PathVariable int id){\n        personService.deletePerson(id);\n    }", "url": "https://raw.githubusercontent.com/fawad1997/SpringWebAPI/master/src/main/java/com/restfulspring/apiexample/controller/PersonController.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40358, "method_name": "title", "class_name": "DesignManeuverSelectionUI", "params": [], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String title()                    { return text(\"SHIP_DESIGN_MANEUVER_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40359, "method_name": "numColumns", "class_name": "DesignManeuverSelectionUI", "params": [], "throws": null, "modifiers": [], "return_type": "int", "snippet": "    int numColumns()                  { return 5; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40360, "method_name": "header", "class_name": "DesignManeuverSelectionUI", "params": ["int"], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String header(int i) {\n        switch(i) {\n            case 0: return text(\"SHIP_DESIGN_MANEUVER_TYPE\");\n            case 1: return text(\"SHIP_DESIGN_MANEUVER_SPEED\");\n            case 2: return text(\"SHIP_DESIGN_MANEUVER_COST\");\n            case 3: return text(\"SHIP_DESIGN_MANEUVER_POWER\");\n            case 4: return text(\"SHIP_DESIGN_MANEUVER_SPACE\");\n        }\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40361, "method_name": "alignment", "class_name": "DesignManeuverSelectionUI", "params": ["int"], "throws": null, "modifiers": [], "return_type": "int", "snippet": "    int alignment(int i) {\n        switch(i) {\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n                return JLabel.RIGHT;\n        }\n        return super.alignment(i);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40362, "method_name": "minimumWidth", "class_name": "DesignManeuverSelectionUI", "params": ["int"], "throws": null, "modifiers": [], "return_type": "int", "snippet": "    int minimumWidth(int i) {\n        switch(i) {\n            case 0: return 175;\n        }\n        return super.minimumWidth(i);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40363, "method_name": "baseComponents", "class_name": "DesignManeuverSelectionUI", "params": [], "throws": null, "modifiers": [], "return_type": "List<ShipComponent>", "snippet": "    List<? extends ShipComponent> baseComponents() { return selectedDesign.availableManeuvers(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40364, "method_name": "selectedComponent", "class_name": "DesignManeuverSelectionUI", "params": [], "throws": null, "modifiers": [], "return_type": "ShipComponent", "snippet": "    ShipComponent selectedComponent()              { return selectedDesign.maneuver(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40365, "method_name": "select", "class_name": "DesignManeuverSelectionUI", "params": ["int"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void select(int compNum)   { selectedDesign.maneuver((ShipManeuver)components().get(compNum)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/design/DesignManeuverSelectionUI.java", "stars": "74", "class_props": {"extends": "DesignSelectionUI", "implements": null, "modifiers": ["public"]}}, {"id": 40366, "method_name": "testCrossReferenceXmlConfig", "class_name": "XmlExternalRefTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testCrossReferenceXmlConfig() throws Exception {\n    testCrossReference(getSqlSessionFactoryXmlConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40367, "method_name": "testCrossReferenceJavaConfig", "class_name": "XmlExternalRefTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testCrossReferenceJavaConfig() throws Exception {\n    testCrossReference(getSqlSessionFactoryJavaConfig());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40368, "method_name": "testFailFastOnBuildAll", "class_name": "XmlExternalRefTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testFailFastOnBuildAll() {\n    Configuration configuration = new Configuration();\n    try {\n      configuration.addMapper(InvalidMapper.class);\n    } catch (Exception e) {\n      fail(\"No exception should be thrown before parsing statement nodes.\");\n    }\n    Assertions.assertThrows(BuilderException.class, configuration::getMappedStatementNames);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40369, "method_name": "testFailFastOnBuildAllWithInsert", "class_name": "XmlExternalRefTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testFailFastOnBuildAllWithInsert() {\n    Configuration configuration = new Configuration();\n    try {\n      configuration.addMapper(InvalidWithInsertMapper.class);\n      configuration.addMapper(InvalidMapper.class);\n    } catch (Exception e) {\n      fail(\"No exception should be thrown before parsing statement nodes.\");\n    }\n    Assertions.assertThrows(BuilderException.class, configuration::getMappedStatementNames);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40370, "method_name": "testMappedStatementCache", "class_name": "XmlExternalRefTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void testMappedStatementCache() throws Exception {\n    try (Reader configReader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/xml_external_ref/MapperConfig.xml\")) {\n      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configReader);\n\n      Configuration configuration = sqlSessionFactory.getConfiguration();\n      configuration.getMappedStatementNames();\n\n      MappedStatement selectPetStatement = configuration.getMappedStatement(\"org.apache.ibatis.submitted.xml_external_ref.PetMapper.select\");\n      MappedStatement selectPersonStatement = configuration.getMappedStatement(\"org.apache.ibatis.submitted.xml_external_ref.PersonMapper.select\");\n      Cache cache = selectPetStatement.getCache();\n      assertEquals(\"org.apache.ibatis.submitted.xml_external_ref.PetMapper\", cache.getId());\n      assertSame(cache, selectPersonStatement.getCache());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40371, "method_name": "testCrossReference", "class_name": "XmlExternalRefTest", "params": ["SqlSessionFactory"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void testCrossReference(SqlSessionFactory sqlSessionFactory) {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      PersonMapper personMapper = sqlSession.getMapper(PersonMapper.class);\n      Person person = personMapper.select(1);\n      assertEquals((Integer) 1, person.getId());\n      assertEquals(2, person.getPets().size());\n      assertEquals((Integer) 2, person.getPets().get(1).getId());\n\n      Pet pet = personMapper.selectPet(1);\n      assertEquals(Integer.valueOf(1), pet.getId());\n\n      PetMapper petMapper = sqlSession.getMapper(PetMapper.class);\n      Pet pet2 = petMapper.select(3);\n      assertEquals((Integer)3, pet2.getId());\n      assertEquals((Integer)2, pet2.getOwner().getId());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40372, "method_name": "getSqlSessionFactoryXmlConfig", "class_name": "XmlExternalRefTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryXmlConfig() throws Exception {\n    try (Reader configReader = Resources\n        .getResourceAsReader(\"org/apache/ibatis/submitted/xml_external_ref/MapperConfig.xml\")) {\n      SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configReader);\n\n      initDb(sqlSessionFactory);\n\n      return sqlSessionFactory;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40373, "method_name": "getSqlSessionFactoryJavaConfig", "class_name": "XmlExternalRefTest", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "SqlSessionFactory", "snippet": "  private SqlSessionFactory getSqlSessionFactoryJavaConfig() throws Exception {\n    Configuration configuration = new Configuration();\n    Environment environment = new Environment(\"development\", new JdbcTransactionFactory(), new UnpooledDataSource(\n        \"org.hsqldb.jdbcDriver\", \"jdbc:hsqldb:mem:xmlextref\", null));\n    configuration.setEnvironment(environment);\n    configuration.addMapper(PersonMapper.class);\n    configuration.addMapper(PetMapper.class);\n\n    SqlSessionFactory sqlSessionFactory = new SqlSessionFactoryBuilder().build(configuration);\n\n    initDb(sqlSessionFactory);\n\n    return sqlSessionFactory;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40374, "method_name": "initDb", "class_name": "XmlExternalRefTest", "params": ["SqlSessionFactory"], "throws": ["IOException", "SQLException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "  private static void initDb(SqlSessionFactory sqlSessionFactory) throws IOException, SQLException {\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/xml_external_ref/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/xml_external_ref/XmlExternalRefTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40375, "method_name": "getHead", "class_name": "SimpleList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SimpleNode<T>", "snippet": "    public SimpleNode<T> getHead() {\n        return head;\n    }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleList.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40376, "method_name": "setHead", "class_name": "SimpleList", "params": ["SimpleNode<T>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHead(SimpleNode<T> head) {\n        this.head = head;\n    }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleList.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40377, "method_name": "isEmpty", "class_name": "SimpleList", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEmpty() {\n        return head == null;\n    }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleList.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40378, "method_name": "add", "class_name": "SimpleList", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(T info) {\n        if (head == null) {\n            head = new SimpleNode(info);\n        } else {\n            SimpleNode aux = head;\n            while (aux.next != null) {\n                aux = aux.next;\n            }\n            aux.next = new SimpleNode(info);\n        }\n    }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleList.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40379, "method_name": "insert", "class_name": "SimpleList", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void insert(T info) {\n        head = new SimpleNode(info, head);\n    }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleList.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40380, "method_name": "delete", "class_name": "SimpleList", "params": ["T"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(T info) {\n        if (head != null) {\n            SimpleNode aux = head;\n            SimpleNode ant = null;\n            while (aux != null && info != aux.info) {\n                ant = aux;\n                aux = aux.next;\n            }\n            if (info == aux.info) {\n                if (aux == head) {\n                    head = aux.next;\n                } else {\n                    ant.next = aux.next;\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/FabianCristancho/Grammatical-Tree-LF/master/src/model/SimpleList.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40381, "method_name": "checkPenName", "class_name": "AuthorServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean checkPenName(String penName) {\n        return authorMapper.count(c ->\n                c.where(AuthorDynamicSqlSupport.penName, isEqualTo(penName))) > 0;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/service/impl/AuthorServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["AuthorService"], "modifiers": ["public"]}}, {"id": 40382, "method_name": "register", "class_name": "AuthorServiceImpl", "params": ["Long", "Author"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String register(Long userId, Author author) {\n        Date currentDate = new Date();\n        //\u5224\u65ad\u9080\u8bf7\u7801\u662f\u5426\u6709\u6548\n        if (authorCodeMapper.count(c ->\n                c.where(AuthorCodeDynamicSqlSupport.inviteCode, isEqualTo(author.getInviteCode()))\n                        .and(AuthorCodeDynamicSqlSupport.isUse, isEqualTo((byte) 0))\n                        .and(AuthorCodeDynamicSqlSupport.validityTime, isGreaterThan(currentDate))) > 0) {\n             //\u9080\u8bf7\u7801\u6709\u6548\n            //\u4fdd\u5b58\u4f5c\u5bb6\u4fe1\u606f\n            author.setUserId(userId);\n            author.setCreateTime(currentDate);\n            authorMapper.insertSelective(author);\n            //\u8bbe\u7f6e\u9080\u8bf7\u7801\u72b6\u6001\u4e3a\u5df2\u4f7f\u7528\n            authorCodeMapper.update(update(authorCode)\n                    .set(AuthorCodeDynamicSqlSupport.isUse)\n                    .equalTo((byte) 1)\n                    .where(AuthorCodeDynamicSqlSupport.inviteCode,isEqualTo(author.getInviteCode()))\n                    .build()\n                    .render(RenderingStrategies.MYBATIS3));\n            return \"\";\n        } else {\n            //\u9080\u8bf7\u7801\u65e0\u6548\n            return \"\u9080\u8bf7\u7801\u65e0\u6548\uff01\";\n        }\n\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/service/impl/AuthorServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["AuthorService"], "modifiers": ["public"]}}, {"id": 40383, "method_name": "isAuthor", "class_name": "AuthorServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean isAuthor(Long userId) {\n        return authorMapper.count(c ->\n                c.where(AuthorDynamicSqlSupport.userId, isEqualTo(userId))) > 0;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/service/impl/AuthorServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["AuthorService"], "modifiers": ["public"]}}, {"id": 40384, "method_name": "queryAuthor", "class_name": "AuthorServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Author", "snippet": "    public Author queryAuthor(Long userId) {\n        return authorMapper.selectMany(\n        select(AuthorDynamicSqlSupport.id,AuthorDynamicSqlSupport.penName,AuthorDynamicSqlSupport.status)\n        .from(AuthorDynamicSqlSupport.author)\n        .where(AuthorDynamicSqlSupport.userId,isEqualTo(userId))\n                .build()\n                .render(RenderingStrategies.MYBATIS3)).get(0);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/service/impl/AuthorServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["AuthorService"], "modifiers": ["public"]}}, {"id": 40385, "method_name": "addInterceptors", "class_name": "AuthWebConfiguer", "params": ["InterceptorRegistry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(authenticationInterceptor).order(1).addPathPatterns(\"/api/v1/executor/**\");\n        registry.addInterceptor(authorityInterceptor).order(2).addPathPatterns(\"/api/v1/executor/**\");\n        registry.addInterceptor(taskProcessAuthInterceptor).order(3).addPathPatterns(\"/api/v1/task/process\");\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/core/src/main/java/com/webank/wedatasphere/exchangis/auth/AuthWebConfiguer.java", "stars": "23", "class_props": {"extends": null, "implements": ["WebMvcConfigurer"], "modifiers": ["public"]}}, {"id": 40386, "method_name": "getContractId", "class_name": "ContractTariffOptionListWeb", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractId() {\n        return contractId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOptionListWeb.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40387, "method_name": "setContractId", "class_name": "ContractTariffOptionListWeb", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractId(int value) {\n        this.contractId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOptionListWeb.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40388, "method_name": "getDate", "class_name": "ContractTariffOptionListWeb", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOptionListWeb.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40389, "method_name": "setDate", "class_name": "ContractTariffOptionListWeb", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(Date value) {\n        this.date = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOptionListWeb.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40390, "method_name": "getContractTariffOptionList", "class_name": "ContractTariffOptionListWeb", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ContractTariffOption>", "snippet": "    public List<ContractTariffOption> getContractTariffOptionList() {\n        if (contractTariffOptionList == null) {\n            contractTariffOptionList = new ArrayList<ContractTariffOption>();\n        }\n        return this.contractTariffOptionList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOptionListWeb.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40391, "method_name": "ByteBufferToString", "class_name": "PrintUtils", "params": ["ByteBuffer"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void ByteBufferToString(ByteBuffer message) {\n\t\tString resultStr = null;\n\t\tbyte[] bytes = ByteUtils.decodeValue(message);\n\t\tString hexString = ByteUtils.bytesToHexString(bytes);\n\t\t// \u6570\u636e\u5305\u534f\u8bae\u7248\u672c 0\u672a\u538b\u7f29\u7684json\u683c\u5f0f\u6570\u636e 1\u5ba2\u6237\u7aef\u5fc3\u8df3\u901a\u5e38\u4e3a\u4eba\u6c14\u503c 4\u5b57\u8282\u6574\u6570 2\u4e3a\u5e26zlib\u538b\u7f29\u8fc7\u7684json\u683c\u5f0f\u6570\u636e\n\t\tInteger dataVersion = Integer.valueOf(hexString.substring(15, 16));\n\t\t// 2\u5fc3\u8df3\u5305 \u6bcf30\u79d2\u53d1\u9001\u4e00\u6b21 3\u5fc3\u8df3\u56de\u5e94 \u4eba\u6c14\u503c 4\u5b57\u8282\u6574\u6570 5\u901a\u77e5 \u5f39\u5e55\u793c\u7269\u516c\u544a\u7b49\u5185\u5bb9 7\u52a0\u5165\u623f\u95f4\u53d1\u9001\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u5305 8\u8ba4\u8bc1\u6210\u529f\u540e\u8fd4\u56de\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u5305\n\t\tInteger dataType = Integer.valueOf(hexString.substring(23, 24));\n\t\tif (dataVersion == 2) {\n\t\t\tif (dataType == 5) {\n\t\t\t\tresultStr = ByteUtils.hexStringTozlibInflate(stringToArrayStrByte(hexString));\n\t\t\t\tresultStr = ByteUtils.unicodeToString(resultStr);\n\t\t\t}\n\t\t} else if (dataVersion == 1) {\n\t\t\tif (dataType == 3) {\n\t\t\t\tresultStr = String.valueOf(\"\u5f53\u524d\u623f\u95f4\u4eba\u6c14\u503c\u4e3a:\" + Long.parseLong(stringToArrayStrByte(hexString), 16));\n\t\t\t}\n\t\t} else if (dataVersion == 0) {\n\t\t\tresultStr = ByteUtils.hexStringToString(stringToArrayStrByte(hexString));\n\t\t\tresultStr = ByteUtils.unicodeToString(resultStr);\n\t\t}\n\t\tif (resultStr == null) {\n\t\t\treturn;\n\t\t}\n\t\tString[] split = resultStr.split(\"%split%\");\n\t\tfor (String string : split) {\n\t\t\tLOGGER.debug(string, \"utf-8\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/tools/PrintUtils.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40392, "method_name": "stringToArrayStrByte", "class_name": "PrintUtils", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String stringToArrayStrByte(String hexString) {\n\t\tStringBuffer sb = new StringBuffer();\n\t\tint endIndex = Integer.parseInt(hexString.substring(0, 8), 16) * 2;\n\t\tif (hexString.length() == endIndex) {\n\t\t\treturn hexString.substring(32, endIndex);\n\t\t}\n\t\tsb.append(hexString.substring(32, endIndex) + \"706c697425\"\n\t\t\t\t+ stringToArrayStrByte(hexString.substring(endIndex, hexString.length())));\n\t\treturn sb.toString();\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/tools/PrintUtils.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40393, "method_name": "onCreateView", "class_name": "SlidingLayerSortItems_", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n        View view = inflater.inflate(R.layout.fragment_sliding_sort_items_by_category,container,false);\n        ButterKnife.bind(this,view);\n\n        loadDefaultSort();\n        return view;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40394, "method_name": "loadDefaultSort", "class_name": "SlidingLayerSortItems_", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void loadDefaultSort() {\n//        String[] sort_options = PrefSortShops.getSort(getActivity());\n\n        currentSort = PrefSortItemsByCategory.getSort(getActivity());\n        currentAscending = PrefSortItemsByCategory.getAscending(getActivity());\n\n        clearSelectionSort();\n        clearSelectionAscending();\n\n        if (currentSort.equals(SORT_BY_ITEM_RATING))\n        {\n            sort_by_rating.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n            sort_by_rating.setBackgroundColor(ContextCompat.getColor(getActivity(), colorSelected));\n        }\n        else if (currentSort.equals(SORT_BY_POPULARITY))\n        {\n            sort_by_popularity.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n            sort_by_popularity.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelected));\n        }\n        else if(currentSort.equals(SORT_BY_AVG_PRICE))\n        {\n            sort_by_price_avg.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n            sort_by_price_avg.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelected));\n\n        }\n        else if(currentSort.equals(SORT_BY_SHOP_COUNT))\n        {\n            sort_by_shop_count.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n            sort_by_shop_count.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelected));\n\n        }\n\n\n\n        if(currentAscending.equals(SORT_ASCENDING))\n        {\n            sort_ascending.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n            sort_ascending.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelectedAscending));\n        }\n        else if(currentAscending.equals(SORT_DESCENDING))\n        {\n            sort_descending.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n            sort_descending.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelectedAscending));\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40395, "method_name": "sortByNameClick", "class_name": "SlidingLayerSortItems_", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void sortByNameClick(View view)\n    {\n        clearSelectionSort();\n        sort_by_rating.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n        sort_by_rating.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelected));\n\n        PrefSortItemsByCategory.saveSort(getActivity(),SORT_BY_ITEM_RATING);\n\n        if(getParentFragment() instanceof NotifySort)\n        {\n            ((NotifySort)getParentFragment()).notifySortChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40396, "method_name": "sortByCreated", "class_name": "SlidingLayerSortItems_", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void sortByCreated(View view)\n    {\n        clearSelectionSort();\n        sort_by_popularity.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n        sort_by_popularity.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelected));\n\n        PrefSortItemsByCategory.saveSort(getActivity(),SORT_BY_POPULARITY);\n\n        if(getParentFragment() instanceof NotifySort)\n        {\n            ((NotifySort)getParentFragment()).notifySortChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40397, "method_name": "sortByShopCount", "class_name": "SlidingLayerSortItems_", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void sortByShopCount(View view)\n    {\n        clearSelectionSort();\n        sort_by_shop_count.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n        sort_by_shop_count.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelected));\n\n        PrefSortItemsByCategory.saveSort(getActivity(),SORT_BY_SHOP_COUNT);\n\n        if(getParentFragment() instanceof NotifySort)\n        {\n            ((NotifySort)getParentFragment()).notifySortChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40398, "method_name": "sortByPriceAvg", "class_name": "SlidingLayerSortItems_", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void sortByPriceAvg(View view)\n    {\n        clearSelectionSort();\n        sort_by_price_avg.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n        sort_by_price_avg.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelected));\n\n        PrefSortItemsByCategory.saveSort(getActivity(),SORT_BY_AVG_PRICE);\n\n        if(getParentFragment() instanceof NotifySort)\n        {\n\n\n            ((NotifySort)getParentFragment()).notifySortChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40399, "method_name": "ascendingClick", "class_name": "SlidingLayerSortItems_", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void ascendingClick(View view)\n    {\n        clearSelectionAscending();\n        sort_ascending.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n        sort_ascending.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelectedAscending));\n\n\n        PrefSortItemsByCategory.saveAscending(getActivity(),SORT_ASCENDING);\n\n        if(getParentFragment() instanceof NotifySort)\n        {\n            ((NotifySort)getParentFragment()).notifySortChanged();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40400, "method_name": "descendingClick", "class_name": "SlidingLayerSortItems_", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void descendingClick(View view)\n    {\n        clearSelectionAscending();\n        sort_descending.setTextColor(ContextCompat.getColor(getActivity(), R.color.white));\n        sort_descending.setBackgroundColor(ContextCompat.getColor(getActivity(),colorSelectedAscending));\n\n\n        PrefSortItemsByCategory.saveAscending(getActivity(),SORT_DESCENDING);\n\n        if(getParentFragment() instanceof NotifySort)\n        {\n            ((NotifySort)getParentFragment()).notifySortChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40401, "method_name": "clearSelectionSort", "class_name": "SlidingLayerSortItems_", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void clearSelectionSort()\n    {\n        sort_by_rating.setTextColor(ContextCompat.getColor(getActivity(), R.color.blueGrey800));\n        sort_by_popularity.setTextColor(ContextCompat.getColor(getActivity(), R.color.blueGrey800));\n        sort_by_shop_count.setTextColor(ContextCompat.getColor(getActivity(), R.color.blueGrey800));\n        sort_by_price_avg.setTextColor(ContextCompat.getColor(getActivity(), R.color.blueGrey800));\n\n        sort_by_rating.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.light_grey));\n        sort_by_popularity.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.light_grey));\n        sort_by_shop_count.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.light_grey));\n        sort_by_price_avg.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.light_grey));\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40402, "method_name": "clearSelectionAscending", "class_name": "SlidingLayerSortItems_", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void clearSelectionAscending()\n    {\n        sort_ascending.setTextColor(ContextCompat.getColor(getActivity(), R.color.blueGrey800));\n        sort_descending.setTextColor(ContextCompat.getColor(getActivity(), R.color.blueGrey800));\n\n        sort_ascending.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.light_grey));\n        sort_descending.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.light_grey));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/SlidingLayerSort/SlidingLayerSortItems_.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40403, "method_name": "retryScheduler", "class_name": "AxonConfig", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "RetryScheduler", "snippet": "    public RetryScheduler retryScheduler(@Value(\"${application.axon.retry.interval-milli-seconds}", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/config/AxonConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40404, "method_name": "defaultCommandGateway", "class_name": "AxonConfig", "params": ["CommandBus", "RetryScheduler", "List<MessageDispatchInterceptor>"], "throws": null, "modifiers": ["public"], "return_type": "DefaultCommandGateway", "snippet": "    public DefaultCommandGateway defaultCommandGateway(CommandBus commandBus,\n                                                       RetryScheduler retryScheduler,\n                                                       List<MessageDispatchInterceptor<? super CommandMessage<?>>> dispatchInterceptors) {\n        return DefaultCommandGateway.builder()\n                .commandBus(commandBus)\n                .retryScheduler(retryScheduler)\n                .dispatchInterceptors(dispatchInterceptors)\n                .build();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/config/AxonConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40405, "method_name": "commandBus", "class_name": "AxonConfig", "params": ["TransactionManager", "AxonConfiguration", "CommandValidatingMessageHandlerInterceptor", "LoggingMessageHandlerInterceptor"], "throws": null, "modifiers": ["public"], "return_type": "SimpleCommandBus", "snippet": "    public SimpleCommandBus commandBus(TransactionManager txManager,\n                                       AxonConfiguration axonConfiguration,\n                                       CommandValidatingMessageHandlerInterceptor commandValidatingMessageHandlerInterceptor,\n                                       LoggingMessageHandlerInterceptor loggingMessageHandlerInterceptor) {\n        var simpleCommandBus = SimpleCommandBus.builder()\n                .transactionManager(txManager)\n                .messageMonitor(axonConfiguration.messageMonitor(CommandBus.class, \"commandBus\"))\n                .build();\n        simpleCommandBus.registerHandlerInterceptor(new CorrelationDataInterceptor<>(axonConfiguration.correlationDataProviders()));\n        simpleCommandBus.registerHandlerInterceptor(commandValidatingMessageHandlerInterceptor);\n        simpleCommandBus.registerHandlerInterceptor(loggingMessageHandlerInterceptor);\n        return simpleCommandBus;\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/config/AxonConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40406, "method_name": "configure", "class_name": "AxonConfig", "params": ["TaskExecutor", "EventProcessingModule", "boolean", "EventProcessorType", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void configure(\n            TaskExecutor taskExecutor,\n            EventProcessingModule eventProcessingModule,\n            @Value(\"${application.axon.event-processor.default-group:true}", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/config/AxonConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40407, "method_name": "annotationCommandTargetResolver", "class_name": "AxonConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AnnotationCommandTargetResolver", "snippet": "    public AnnotationCommandTargetResolver annotationCommandTargetResolver() {\n        return AnnotationCommandTargetResolver.builder().build();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/axon-support/src/main/java/engineering/everest/lhotse/axon/config/AxonConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40408, "method_name": "getDayNight", "class_name": "DayNightApiController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDayNight(){\n        lat = issData.getLat();\n        lon = issData.getLon();\n        String url = \"https://api.sunrise-sunset.org/json?lat=\" + lat + \"&lng=\" + lon + \"&date=today\";\n        RestTemplate restTemplate = new RestTemplate();\n        HttpEntity httpEntityDayNight = new HttpEntity(dayNight);\n        ResponseEntity<DayNight> exchange = restTemplate.exchange(url, HttpMethod.GET, httpEntityDayNight, DayNight.class);\n        this.dayNight = exchange.getBody();\n//        System.out.println(dayNight);\n        issData.setSunriseUTC(dayNight.getResults().getSunrise());\n        issData.setSunsetUTC(dayNight.getResults().getSunset());\n    }", "url": "https://raw.githubusercontent.com/wojciechgalach/PositionInternationalSpaceStation/master/src/main/java/pl/com/nur/internationalspacestation/internationalspacestation/controller/DayNightApiController.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40409, "method_name": "onDraw", "class_name": "Practice1DrawColorView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n//        \u7ec3\u4e60\u5185\u5bb9\uff1a\u4f7f\u7528 canvas.drawColor() \u65b9\u6cd5\u628a View \u6d82\u6210\u9ec4\u8272\n//        \u9ec4\u8272\uff1a Color.YELLOW\n        canvas.drawColor(Color.YELLOW);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson1/Practice1DrawColorView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 40410, "method_name": "year", "class_name": "SystemHomeworldEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String year() {\n        return UserPreferences.displayYear() ? str(galaxy().beginningYear() + turn) : str(turn+1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/SystemHomeworldEvent.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "StarSystemEvent"], "modifiers": ["public"]}}, {"id": 40411, "method_name": "description", "class_name": "SystemHomeworldEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description() {\n        Empire emp = galaxy().empire(empId);\n        return text(\"SYSEVENT_HOMEWORLD\",emp.raceName());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/SystemHomeworldEvent.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "StarSystemEvent"], "modifiers": ["public"]}}, {"id": 40412, "method_name": "main", "class_name": "Subtraction", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint num1 = 78;\n\t\tint num2 = 43;\n\t\tint result = num1 - num2;\n\n\t\tSystem.out.println(\"Result is \" + result);\n\n\t\n\n  //      // 76   =  38    * 2\n\t\t// result = result * 2;\n\t\t// System.out.println(result);\n\n\t\t// Break till 10:10 AM EST\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day4/Subtraction.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40413, "method_name": "recommend", "class_name": "RecruitService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Recruit>", "snippet": "    public List<Recruit> recommend() {\n        return recruitDao.findTop6ByStateOrderByCreatetimeDesc(\"2\");\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40414, "method_name": "newList", "class_name": "RecruitService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Recruit>", "snippet": "    public List<Recruit> newList() {\n        return recruitDao.findTop6ByStateNotOrderByCreatetimeDesc(\"0\");\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40415, "method_name": "findAll", "class_name": "RecruitService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Recruit>", "snippet": "    public List<Recruit> findAll() {\n        return recruitDao.findAll();\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40416, "method_name": "findSearch", "class_name": "RecruitService", "params": ["Map", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Page<Recruit>", "snippet": "    public Page<Recruit> findSearch(Map whereMap, int page, int size) {\n        Specification<Recruit> specification = createSpecification(whereMap);\n        PageRequest pageRequest =  PageRequest.of(page-1, size);\n        return recruitDao.findAll(specification, pageRequest);\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40417, "method_name": "findSearch", "class_name": "RecruitService", "params": ["Map"], "throws": null, "modifiers": ["public"], "return_type": "List<Recruit>", "snippet": "    public List<Recruit> findSearch(Map whereMap) {\n        Specification<Recruit> specification = createSpecification(whereMap);\n        return recruitDao.findAll(specification);\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40418, "method_name": "findById", "class_name": "RecruitService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Recruit", "snippet": "    public Recruit findById(String id) {\n        return recruitDao.findById(id).get();\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40419, "method_name": "add", "class_name": "RecruitService", "params": ["Recruit"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void add(Recruit recruit) {\n        recruit.setId( idWorker.nextId()+\"\" );\n        recruitDao.save(recruit);\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40420, "method_name": "update", "class_name": "RecruitService", "params": ["Recruit"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void update(Recruit recruit) {\n        recruitDao.save(recruit);\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40421, "method_name": "deleteById", "class_name": "RecruitService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteById(String id) {\n        recruitDao.deleteById(id);\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40422, "method_name": "createSpecification", "class_name": "RecruitService", "params": ["Map"], "throws": null, "modifiers": ["private"], "return_type": "Specification<Recruit>", "snippet": "    private Specification<Recruit> createSpecification(Map searchMap) {\n\n        return new Specification<Recruit>() {\n\n            @Override\n            public Predicate toPredicate(Root<Recruit> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n                List<Predicate> predicateList = new ArrayList<Predicate>();\n                // ID\n                if (searchMap.get(\"id\")!=null && !\"\".equals(searchMap.get(\"id\"))) {\n                    predicateList.add(cb.like(root.get(\"id\").as(String.class), \"%\"+(String)searchMap.get(\"id\")+\"%\"));\n                }\n                // \u804c\u4f4d\u540d\u79f0\n                if (searchMap.get(\"jobname\")!=null && !\"\".equals(searchMap.get(\"jobname\"))) {\n                    predicateList.add(cb.like(root.get(\"jobname\").as(String.class), \"%\"+(String)searchMap.get(\"jobname\")+\"%\"));\n                }\n                // \u85aa\u8d44\u8303\u56f4\n                if (searchMap.get(\"salary\")!=null && !\"\".equals(searchMap.get(\"salary\"))) {\n                    predicateList.add(cb.like(root.get(\"salary\").as(String.class), \"%\"+(String)searchMap.get(\"salary\")+\"%\"));\n                }\n                // \u7ecf\u9a8c\u8981\u6c42\n                if (searchMap.get(\"condition\")!=null && !\"\".equals(searchMap.get(\"condition\"))) {\n                    predicateList.add(cb.like(root.get(\"condition\").as(String.class), \"%\"+(String)searchMap.get(\"condition\")+\"%\"));\n                }\n                // \u5b66\u5386\u8981\u6c42\n                if (searchMap.get(\"education\")!=null && !\"\".equals(searchMap.get(\"education\"))) {\n                    predicateList.add(cb.like(root.get(\"education\").as(String.class), \"%\"+(String)searchMap.get(\"education\")+\"%\"));\n                }\n                // \u4efb\u804c\u65b9\u5f0f\n                if (searchMap.get(\"type\")!=null && !\"\".equals(searchMap.get(\"type\"))) {\n                    predicateList.add(cb.like(root.get(\"type\").as(String.class), \"%\"+(String)searchMap.get(\"type\")+\"%\"));\n                }\n                // \u529e\u516c\u5730\u5740\n                if (searchMap.get(\"address\")!=null && !\"\".equals(searchMap.get(\"address\"))) {\n                    predicateList.add(cb.like(root.get(\"address\").as(String.class), \"%\"+(String)searchMap.get(\"address\")+\"%\"));\n                }\n                // \u4f01\u4e1aID\n                if (searchMap.get(\"eid\")!=null && !\"\".equals(searchMap.get(\"eid\"))) {\n                    predicateList.add(cb.like(root.get(\"eid\").as(String.class), \"%\"+(String)searchMap.get(\"eid\")+\"%\"));\n                }\n                // \u72b6\u6001\n                if (searchMap.get(\"state\")!=null && !\"\".equals(searchMap.get(\"state\"))) {\n                    predicateList.add(cb.like(root.get(\"state\").as(String.class), \"%\"+(String)searchMap.get(\"state\")+\"%\"));\n                }\n                // \u7f51\u5740\n                if (searchMap.get(\"url\")!=null && !\"\".equals(searchMap.get(\"url\"))) {\n                    predicateList.add(cb.like(root.get(\"url\").as(String.class), \"%\"+(String)searchMap.get(\"url\")+\"%\"));\n                }\n                // \u6807\u7b7e\n                if (searchMap.get(\"label\")!=null && !\"\".equals(searchMap.get(\"label\"))) {\n                    predicateList.add(cb.like(root.get(\"label\").as(String.class), \"%\"+(String)searchMap.get(\"label\")+\"%\"));\n                }\n                // \u804c\u4f4d\u63cf\u8ff0\n                if (searchMap.get(\"content1\")!=null && !\"\".equals(searchMap.get(\"content1\"))) {\n                    predicateList.add(cb.like(root.get(\"content1\").as(String.class), \"%\"+(String)searchMap.get(\"content1\")+\"%\"));\n                }\n                // \u804c\u4f4d\u8981\u6c42\n                if (searchMap.get(\"content2\")!=null && !\"\".equals(searchMap.get(\"content2\"))) {\n                    predicateList.add(cb.like(root.get(\"content2\").as(String.class), \"%\"+(String)searchMap.get(\"content2\")+\"%\"));\n                }\n\n                return cb.and( predicateList.toArray(new Predicate[predicateList.size()]));\n\n            }\n        };\n\n    }", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_recruiter/src/main/java/com/tensquare/recruiter/service/RecruitService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40423, "method_name": "testErrorPath", "class_name": "ServletPathSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testErrorPath() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(\n\t\t\t\tthis.restTemplate.withBasicAuth(\"user\", \"password\").getForEntity(\"/spring/error\", Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.INTERNAL_SERVER_ERROR);\n\t\tassertThat(entity.getBody().get(\"error\")).isEqualTo(\"None\");\n\t\tassertThat(entity.getBody().get(\"status\")).isEqualTo(999);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ServletPathSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40424, "method_name": "testHealth", "class_name": "ServletPathSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHealth() {\n\t\tResponseEntity<String> entity = this.restTemplate.withBasicAuth(\"user\", \"password\")\n\t\t\t\t.getForEntity(\"/spring/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ServletPathSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40425, "method_name": "testHomeIsSecure", "class_name": "ServletPathSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHomeIsSecure() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(this.restTemplate.getForEntity(\"/spring/\", Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t\tMap<String, Object> body = entity.getBody();\n\t\tassertThat(body.get(\"error\")).isEqualTo(\"Unauthorized\");\n\t\tassertThat(entity.getHeaders()).doesNotContainKey(\"Set-Cookie\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ServletPathSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40426, "method_name": "asMapEntity", "class_name": "ServletPathSampleActuatorApplicationTests", "params": ["ResponseEntity<Map>"], "throws": null, "modifiers": ["static"], "return_type": "ResponseEntity<Map>", "snippet": "\tstatic <K, V> ResponseEntity<Map<K, V>> asMapEntity(ResponseEntity<Map> entity) {\n\t\treturn (ResponseEntity) entity;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ServletPathSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40427, "method_name": "Initialize", "class_name": "Scene", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void Initialize();\n\t\n\tpublic abstract void Update();\n\t\n\tpublic abstract void Render(Graphics g);\n\t\n\t\n\t\n}\n\n", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Scene.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40428, "method_name": "Update", "class_name": "Scene", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void Update();\n\t\n\tpublic abstract void Render(Graphics g);\n\t\n\t\n\t\n}\n\n", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Scene.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40429, "method_name": "Render", "class_name": "Scene", "params": ["Graphics"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void Render(Graphics g);\n\t\n\t\n\t\n}\n\n", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Scene.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40430, "method_name": "fly", "class_name": "RoyalPalmTurkey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fly() {\n        // Turkeys cannot fly that high\n        // Very small height.\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Adapter%20Pattern/src/RoyalPalmTurkey.java", "stars": "38", "class_props": {"extends": null, "implements": ["ITurkey"], "modifiers": ["public"]}}, {"id": 40431, "method_name": "gobble", "class_name": "RoyalPalmTurkey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void gobble() {\n        // Makes a gobbling noise.\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Adapter%20Pattern/src/RoyalPalmTurkey.java", "stars": "38", "class_props": {"extends": null, "implements": ["ITurkey"], "modifiers": ["public"]}}, {"id": 40432, "method_name": "registerLoggedException", "class_name": "SpringBootExceptionHandler", "params": ["Throwable"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid registerLoggedException(Throwable exception) {\n\t\tthis.loggedExceptions.add(exception);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": null, "implements": ["UncaughtExceptionHandler"], "modifiers": []}}, {"id": 40433, "method_name": "registerExitCode", "class_name": "SpringBootExceptionHandler", "params": ["int"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid registerExitCode(int exitCode) {\n\t\tthis.exitCode = exitCode;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": null, "implements": ["UncaughtExceptionHandler"], "modifiers": []}}, {"id": 40434, "method_name": "uncaughtException", "class_name": "SpringBootExceptionHandler", "params": ["Thread", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void uncaughtException(Thread thread, Throwable ex) {\n\t\ttry {\n\t\t\tif (isPassedToParent(ex) && this.parent != null) {\n\t\t\t\tthis.parent.uncaughtException(thread, ex);\n\t\t\t}\n\t\t}\n\t\tfinally {\n\t\t\tthis.loggedExceptions.clear();\n\t\t\tif (this.exitCode != 0) {\n\t\t\t\tSystem.exit(this.exitCode);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": null, "implements": ["UncaughtExceptionHandler"], "modifiers": []}}, {"id": 40435, "method_name": "isPassedToParent", "class_name": "SpringBootExceptionHandler", "params": ["Throwable"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean isPassedToParent(Throwable ex) {\n\t\treturn isLogConfigurationMessage(ex) || !isRegistered(ex);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": null, "implements": ["UncaughtExceptionHandler"], "modifiers": []}}, {"id": 40436, "method_name": "isLogConfigurationMessage", "class_name": "SpringBootExceptionHandler", "params": ["Throwable"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean isLogConfigurationMessage(Throwable ex) {\n\t\tif (ex instanceof InvocationTargetException) {\n\t\t\treturn isLogConfigurationMessage(ex.getCause());\n\t\t}\n\t\tString message = ex.getMessage();\n\t\tif (message != null) {\n\t\t\tfor (String candidate : LOG_CONFIGURATION_MESSAGES) {\n\t\t\t\tif (message.contains(candidate)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": null, "implements": ["UncaughtExceptionHandler"], "modifiers": []}}, {"id": 40437, "method_name": "isRegistered", "class_name": "SpringBootExceptionHandler", "params": ["Throwable"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\tprivate boolean isRegistered(Throwable ex) {\n\t\tif (this.loggedExceptions.contains(ex)) {\n\t\t\treturn true;\n\t\t}\n\t\tif (ex instanceof InvocationTargetException) {\n\t\t\treturn isRegistered(ex.getCause());\n\t\t}\n\t\treturn false;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": null, "implements": ["UncaughtExceptionHandler"], "modifiers": []}}, {"id": 40438, "method_name": "forCurrentThread", "class_name": "SpringBootExceptionHandler", "params": [], "throws": null, "modifiers": ["static"], "return_type": "SpringBootExceptionHandler", "snippet": "\tstatic SpringBootExceptionHandler forCurrentThread() {\n\t\treturn handler.get();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": null, "implements": ["UncaughtExceptionHandler"], "modifiers": []}}, {"id": 40439, "method_name": "initialValue", "class_name": "LoggedExceptionHandlerThreadLocal", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "SpringBootExceptionHandler", "snippet": "\t\tprotected SpringBootExceptionHandler initialValue() {\n\t\t\tSpringBootExceptionHandler handler = new SpringBootExceptionHandler(\n\t\t\t\t\tThread.currentThread().getUncaughtExceptionHandler());\n\t\t\tThread.currentThread().setUncaughtExceptionHandler(handler);\n\t\t\treturn handler;\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/SpringBootExceptionHandler.java", "stars": "47572", "class_props": {"extends": "ThreadLocal", "implements": null, "modifiers": ["static", "private"]}}, {"id": 40440, "method_name": "onTouchEvent", "class_name": "GestureManager_TapAndPanGestureDetector", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onTouchEvent (android.view.MotionEvent p0)\n\t{\n\t\treturn n_onTouchEvent (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GestureManager_TapAndPanGestureDetector.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 40441, "method_name": "n_onTouchEvent", "class_name": "GestureManager_TapAndPanGestureDetector", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onTouchEvent (android.view.MotionEvent p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GestureManager_TapAndPanGestureDetector.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 40442, "method_name": "monodroidAddReference", "class_name": "GestureManager_TapAndPanGestureDetector", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GestureManager_TapAndPanGestureDetector.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 40443, "method_name": "monodroidClearReferences", "class_name": "GestureManager_TapAndPanGestureDetector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GestureManager_TapAndPanGestureDetector.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 40444, "method_name": "getItem", "class_name": "Mission", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Material", "snippet": "    public Material getItem()\n    {\n        return item;\n    }", "url": "https://raw.githubusercontent.com/Adzwoolly/FriendAnimals/master/src/main/java/uk/adamwoollen/friendanimals/Mission.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40445, "method_name": "getTargetFriend", "class_name": "Mission", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Friend", "snippet": "    public Friend getTargetFriend() {\n        return targetFriend;\n    }", "url": "https://raw.githubusercontent.com/Adzwoolly/FriendAnimals/master/src/main/java/uk/adamwoollen/friendanimals/Mission.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40446, "method_name": "getReward", "class_name": "Mission", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Material", "snippet": "    public Material getReward() {\n        return reward;\n    }", "url": "https://raw.githubusercontent.com/Adzwoolly/FriendAnimals/master/src/main/java/uk/adamwoollen/friendanimals/Mission.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40447, "method_name": "getId", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40448, "method_name": "setId", "class_name": "UserVariable", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40449, "method_name": "getKey", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getKey() {\n        return key;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40450, "method_name": "setKey", "class_name": "UserVariable", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKey(String key) {\n        this.key = key;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40451, "method_name": "getDescription", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40452, "method_name": "setDescription", "class_name": "UserVariable", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescription(String description) {\n        this.description = description;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40453, "method_name": "getValue", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40454, "method_name": "setValue", "class_name": "UserVariable", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(String value) {\n        this.value = value;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40455, "method_name": "getCreateTime", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40456, "method_name": "setCreateTime", "class_name": "UserVariable", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Long createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40457, "method_name": "getUpdateTime", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getUpdateTime() {\n        return updateTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40458, "method_name": "setUpdateTime", "class_name": "UserVariable", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateTime(Long updateTime) {\n        this.updateTime = updateTime;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40459, "method_name": "getUsers", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<WtssUser>", "snippet": "    public List<WtssUser> getUsers() {\n        return users;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40460, "method_name": "setUsers", "class_name": "UserVariable", "params": ["List<WtssUser>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsers(List<WtssUser> wtssUsers) {\n        this.users = wtssUsers;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40461, "method_name": "setOwner", "class_name": "UserVariable", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOwner(String owner) {\n        this.owner = owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40462, "method_name": "getOwner", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOwner() {\n        return owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40463, "method_name": "toString", "class_name": "UserVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"UserVariable{\" +\n                \"id=\" + id +\n                \", key='\" + key + '\\'' +\n                \", description='\" + description + '\\'' +\n                \", value='\" + value + '\\'' +\n                \", createTime=\" + createTime +\n                \", updateTime=\" + updateTime +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/executor/UserVariable.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40464, "method_name": "create", "class_name": "FinancialAidIncident", "params": ["Empire", "Empire", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "FinancialAidIncident", "snippet": "    public static FinancialAidIncident create(Empire emp, Empire donor, int amt) {\n        FinancialAidIncident inc = new FinancialAidIncident(emp, donor, amt);\n        emp.viewForEmpire(donor).embassy().addIncident(inc);\n        for (Empire enemy: emp.enemies()) \n            EnemyAidIncident.create(enemy, emp, donor, amt);\n\n        return inc;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FinancialAidIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 40465, "method_name": "title", "class_name": "FinancialAidIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String title()        { return text(\"INC_FINANCIAL_AID_TITLE\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FinancialAidIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 40466, "method_name": "description", "class_name": "FinancialAidIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description()  { return decode(text(\"INC_FINANCIAL_AID_DESC\")); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FinancialAidIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 40467, "method_name": "key", "class_name": "FinancialAidIncident", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String key()          { return \"Financial Aid\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FinancialAidIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 40468, "method_name": "decode", "class_name": "FinancialAidIncident", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String decode(String s) {\n        String s1 = super.decode(s);\n        s1 = galaxy().empire(empMe).replaceTokens(s1, \"my\");\n        s1 = galaxy().empire(empYou).replaceTokens(s1, \"your\");\n        s1 = s1.replace(\"[amt]\", str(amount));\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/incidents/FinancialAidIncident.java", "stars": "74", "class_props": {"extends": "DiplomaticIncident", "implements": null, "modifiers": ["public"]}}, {"id": 40469, "method_name": "main", "class_name": "Demo01Map", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        show04();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo01Map.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40470, "method_name": "show04", "class_name": "Demo01Map", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show04() {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"\u8d75\u4e3d\u9896\",168);\n        map.put(\"\u6768\u9896\",165);\n        map.put(\"\u6797\u5fd7\u73b2\",178);\n\n        boolean b1 = map.containsKey(\"\u8d75\u4e3d\u9896\");\n        System.out.println(\"b1:\"+b1);//b1:true\n\n        boolean b2 = map.containsKey(\"\u8d75\u9896\");\n        System.out.println(\"b2:\"+b2);//b2:false\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo01Map.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40471, "method_name": "show03", "class_name": "Demo01Map", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show03() {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"\u8d75\u4e3d\u9896\",168);\n        map.put(\"\u6768\u9896\",165);\n        map.put(\"\u6797\u5fd7\u73b2\",178);\n\n        Integer v1 = map.get(\"\u6768\u9896\");\n        System.out.println(\"v1:\"+v1);//v1:165\n\n        Integer v2 = map.get(\"\u8fea\u4e3d\u70ed\u5df4\");\n        System.out.println(\"v2:\"+v2);//v2:null\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo01Map.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40472, "method_name": "show02", "class_name": "Demo01Map", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show02() {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61\n        Map<String,Integer> map = new HashMap<>();\n        map.put(\"\u8d75\u4e3d\u9896\",168);\n        map.put(\"\u6768\u9896\",165);\n        map.put(\"\u6797\u5fd7\u73b2\",178);\n        System.out.println(map);//{\u6797\u5fd7\u73b2=178, \u8d75\u4e3d\u9896=168, \u6768\u9896=165}\n\n        Integer v1 = map.remove(\"\u6797\u5fd7\u73b2\");\n        System.out.println(\"v1:\"+v1);//v1:178\n\n        System.out.println(map);//{\u8d75\u4e3d\u9896=168, \u6768\u9896=165}\n\n        //int v2 = map.remove(\"\u6797\u5fd7\u9896\");//\u81ea\u52a8\u62c6\u7bb1  NullPointerException\n        Integer v2 = map.remove(\"\u6797\u5fd7\u9896\");\n        System.out.println(\"v2:\"+v2);//v2:null\n\n        System.out.println(map);//{\u8d75\u4e3d\u9896=168, \u6768\u9896=165}\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo01Map.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40473, "method_name": "show01", "class_name": "Demo01Map", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show01() {\n        //\u521b\u5efaMap\u96c6\u5408\u5bf9\u8c61,\u591a\u6001\n        Map<String,String> map = new HashMap<>();\n\n        String v1 = map.put(\"\u674e\u6668\", \"\u8303\u51b0\u51b01\");\n        System.out.println(\"v1:\"+v1);//v1:null\n\n        String v2 = map.put(\"\u674e\u6668\", \"\u8303\u51b0\u51b02\");\n        System.out.println(\"v2:\"+v2);//v2:\u8303\u51b0\u51b01\n\n        System.out.println(map);//{\u674e\u6668=\u8303\u51b0\u51b02}\n\n        map.put(\"\u51b7\u950b\",\"\u9f99\u5c0f\u4e91\");\n        map.put(\"\u6768\u8fc7\",\"\u5c0f\u9f99\u5973\");\n        map.put(\"\u5c39\u5fd7\u5e73\",\"\u5c0f\u9f99\u5973\");\n        System.out.println(map);//{\u6768\u8fc7=\u5c0f\u9f99\u5973, \u5c39\u5fd7\u5e73=\u5c0f\u9f99\u5973, \u674e\u6668=\u8303\u51b0\u51b02, \u51b7\u950b=\u9f99\u5c0f\u4e91}\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/15.%E3%80%90Map%E3%80%91-%E7%AC%94%E8%AE%B0/code/04_Map/src/com/itheima/demo01/Map/Demo01Map.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40474, "method_name": "setHint", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setHint(@StringRes int id) {\n            return setHint(getString(id));\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40475, "method_name": "setHint", "class_name": "Builder", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setHint(CharSequence text) {\n            mInputView.setHint(text);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40476, "method_name": "setContent", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setContent(@StringRes int id) {\n            return setContent(getString(id));\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40477, "method_name": "setContent", "class_name": "Builder", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setContent(CharSequence text) {\n            mInputView.setText(text);\n            int index = mInputView.getText().toString().length();\n            if (index > 0) {\n                mInputView.requestFocus();\n                mInputView.setSelection(index);\n            }\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40478, "method_name": "setListener", "class_name": "Builder", "params": ["OnListener"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setListener(OnListener listener) {\n            mListener = listener;\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40479, "method_name": "onShow", "class_name": "Builder", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onShow(BaseDialog dialog) {\n            postDelayed(() -> getSystemService(InputMethodManager.class).showSoftInput(mInputView, 0), 500);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40480, "method_name": "onDismiss", "class_name": "Builder", "params": ["BaseDialog"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onDismiss(BaseDialog dialog) {\n            getSystemService(InputMethodManager.class).hideSoftInputFromWindow(mInputView.getWindowToken(), 0);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40481, "method_name": "onClick", "class_name": "Builder", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View v) {\n            switch (v.getId()) {\n                case R.id.tv_ui_confirm:\n                    autoDismiss();\n                    if (mListener != null) {\n                        mListener.onConfirm(getDialog(), mInputView.getText().toString());\n                    }\n                    break;\n                case R.id.tv_ui_cancel:\n                    autoDismiss();\n                    if (mListener != null) {\n                        mListener.onCancel(getDialog());\n                    }\n                    break;\n                default:\n                    break;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/InputDialog.java", "stars": "1", "class_props": {"extends": "UIDialog", "implements": ["BaseDialog", "BaseDialog"], "modifiers": ["final", "public", "static"]}}, {"id": 40482, "method_name": "getFilesSize", "class_name": "FileSizeUtil", "params": ["File", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double getFilesSize(File file, int sizeType) {\n        long blockSize = 0;\n        try {\n            if (file.isDirectory()) {\n                blockSize = getFileSizes(file);\n            } else {\n                blockSize = getFileSize(file);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            Log.e(\"\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\", \"\u83b7\u53d6\u5931\u8d25!\");\n        }\n        return FormetFileSize(blockSize, sizeType);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/FileSizeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40483, "method_name": "getAutoFileOrFilesSize", "class_name": "FileSizeUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getAutoFileOrFilesSize(String filePath) {\n        File file = new File(filePath);\n        long blockSize = 0;\n        try {\n            if (file.isDirectory()) {\n                blockSize = getFileSizes(file);\n            } else {\n                blockSize = getFileSize(file);\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n            Log.e(\"\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\", \"\u83b7\u53d6\u5931\u8d25!\");\n        }\n        return FormetFileSize(blockSize);\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/FileSizeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40484, "method_name": "getFileSize", "class_name": "FileSizeUtil", "params": ["File"], "throws": ["Exception"], "modifiers": ["static", "private"], "return_type": "long", "snippet": "    private static long getFileSize(File file) throws Exception {\n        long size = 0;\n        if (file.exists()) {\n            FileInputStream fis = null;\n            fis = new FileInputStream(file);\n            size = fis.available();\n        } else {\n            file.createNewFile();\n            Log.e(\"\u83b7\u53d6\u6587\u4ef6\u5927\u5c0f\", \"\u6587\u4ef6\u4e0d\u5b58\u5728!\");\n        }\n        return size;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/FileSizeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40485, "method_name": "getFileSizes", "class_name": "FileSizeUtil", "params": ["File"], "throws": ["Exception"], "modifiers": ["static", "private"], "return_type": "long", "snippet": "    private static long getFileSizes(File f) throws Exception {\n        long size = 0;\n        File flist[] = f.listFiles();\n        for (int i = 0; i < flist.length; i++) {\n            if (flist[i].isDirectory()) {\n                size = size + getFileSizes(flist[i]);\n            } else {\n                size = size + getFileSize(flist[i]);\n            }\n        }\n        return size;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/FileSizeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40486, "method_name": "FormetFileSize", "class_name": "FileSizeUtil", "params": ["long"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String FormetFileSize(long fileS) {\n        DecimalFormat df = new DecimalFormat(\"#.00\");\n        String fileSizeString = \"\";\n        String wrongSize = \"0B\";\n        if (fileS == 0) {\n            return wrongSize;\n        }\n        if (fileS < 1024) {\n            fileSizeString = df.format((double) fileS) + \"B\";\n        } else if (fileS < 1048576) {\n            fileSizeString = df.format((double) fileS / 1024) + \"KB\";\n        } else if (fileS < 1073741824) {\n            fileSizeString = df.format((double) fileS / 1048576) + \"MB\";\n        } else {\n            fileSizeString = df.format((double) fileS / 1073741824) + \"GB\";\n        }\n        return fileSizeString;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/FileSizeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40487, "method_name": "FormetFileSize", "class_name": "FileSizeUtil", "params": ["long", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "double", "snippet": "    private static double FormetFileSize(long fileS, int sizeType) {\n        DecimalFormat df = new DecimalFormat(\"#.00\");\n        double fileSizeLong = 0;\n        switch (sizeType) {\n            case SIZETYPE_B:\n                fileSizeLong = Double.valueOf(df.format((double) fileS));\n                break;\n            case SIZETYPE_KB:\n                fileSizeLong = Double.valueOf(df.format((double) fileS / 1024));\n                break;\n            case SIZETYPE_MB:\n                fileSizeLong = Double.valueOf(df.format((double) fileS / 1048576));\n                break;\n            case SIZETYPE_GB:\n                fileSizeLong = Double.valueOf(df.format((double) fileS / 1073741824));\n                break;\n            default:\n                break;\n        }\n        return fileSizeLong;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/FileSizeUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40488, "method_name": "setShareTitle", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setShareTitle(String title) {\n            mData.setShareTitle(title);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["BaseAdapter"], "modifiers": ["final", "public", "static"]}}, {"id": 40489, "method_name": "setShareDescription", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setShareDescription(String description) {\n            mData.setShareDescription(description);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["BaseAdapter"], "modifiers": ["final", "public", "static"]}}, {"id": 40490, "method_name": "setShareLogo", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setShareLogo(String url) {\n            mData.setShareLogo(url);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["BaseAdapter"], "modifiers": ["final", "public", "static"]}}, {"id": 40491, "method_name": "setShareLogo", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setShareLogo(@DrawableRes int id) {\n            mData.setShareLogo(id);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["BaseAdapter"], "modifiers": ["final", "public", "static"]}}, {"id": 40492, "method_name": "setShareUrl", "class_name": "Builder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setShareUrl(String url) {\n            mData.setShareUrl(url);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["BaseAdapter"], "modifiers": ["final", "public", "static"]}}, {"id": 40493, "method_name": "setListener", "class_name": "Builder", "params": ["UmengShare"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setListener(UmengShare.OnShareListener listener) {\n            mListener = listener;\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["BaseAdapter"], "modifiers": ["final", "public", "static"]}}, {"id": 40494, "method_name": "onItemClick", "class_name": "Builder", "params": ["RecyclerView", "View", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onItemClick(RecyclerView recyclerView, View itemView, int position) {\n            Platform platform = mAdapter.getItem(position).getSharePlatform();\n            if (platform != null) {\n                UmengClient.share(getActivity(), platform, mData, mListener);\n            } else {\n                // \u590d\u5236\u5230\u526a\u8d34\u677f\n                getSystemService(ClipboardManager.class).setPrimaryClip(ClipData.newPlainText(\"url\", mData.getShareUrl()));\n                ToastUtils.show(R.string.share_platform_copy_hint);\n            }\n            dismiss();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "BaseDialog", "implements": ["BaseAdapter"], "modifiers": ["final", "public", "static"]}}, {"id": 40495, "method_name": "onCreateViewHolder", "class_name": "ShareAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "ViewHolder", "snippet": "        public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n            return new ViewHolder();\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": null, "modifiers": ["static", "private"]}}, {"id": 40496, "method_name": "onBindView", "class_name": "ViewHolder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void onBindView(int position) {\n                ShareBean bean = getItem(position);\n                mImageView.setImageDrawable(bean.getShareIcon());\n                mTextView.setText(bean.getShareName());\n            }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": "MyAdapter", "implements": null, "modifiers": ["final"]}}, {"id": 40497, "method_name": "getShareIcon", "class_name": "ShareBean", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Drawable", "snippet": "        private Drawable getShareIcon() {\n            return mShareIcon;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 40498, "method_name": "getShareName", "class_name": "ShareBean", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "        private String getShareName() {\n            return mShareName;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 40499, "method_name": "getSharePlatform", "class_name": "ShareBean", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Platform", "snippet": "        private Platform getSharePlatform() {\n            return mSharePlatform;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/dialog/ShareDialog.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 40500, "method_name": "getId", "class_name": "Emp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40501, "method_name": "setId", "class_name": "Emp", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40502, "method_name": "getAdmin_login", "class_name": "Emp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAdmin_login() {\n        return admin_login;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40503, "method_name": "setAdmin_login", "class_name": "Emp", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAdmin_login(String admin_login) {\n        this.admin_login = admin_login;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40504, "method_name": "getLast_login_time", "class_name": "Emp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getLast_login_time() {\n        return last_login_time;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40505, "method_name": "setLast_login_time", "class_name": "Emp", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLast_login_time(int last_login_time) {\n        this.last_login_time = last_login_time;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40506, "method_name": "getStatus", "class_name": "Emp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40507, "method_name": "setStatus", "class_name": "Emp", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(int status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40508, "method_name": "getDeleted_at", "class_name": "Emp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getDeleted_at() {\n        return deleted_at;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40509, "method_name": "setDeleted_at", "class_name": "Emp", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDeleted_at(Date deleted_at) {\n        this.deleted_at = deleted_at;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40510, "method_name": "getLast_login_ip", "class_name": "Emp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLast_login_ip() {\n        return last_login_ip;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40511, "method_name": "setLast_login_ip", "class_name": "Emp", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLast_login_ip(String last_login_ip) {\n        this.last_login_ip = last_login_ip;\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40512, "method_name": "toString", "class_name": "Emp", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Emp{\" +\n                \"id=\" + id +\n                \", admin_login='\" + admin_login + '\\'' +\n                \", last_login_time=\" + last_login_time +\n                \", status=\" + status +\n                \", deleted_at=\" + deleted_at +\n                \", last_login_ip='\" + last_login_ip + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Domain/Emp.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40513, "method_name": "getDefaultValue", "class_name": "FilterOpenClose", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDefaultValue() {\n        return defaultValue;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/queue/FilterOpenClose.java", "stars": "12", "class_props": {"extends": "Filter", "implements": null, "modifiers": ["public"]}}, {"id": 40514, "method_name": "initSender", "class_name": "AlarmSender", "params": ["Setup"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void initSender( Setup setup )\n    {\n    \tString name = setup.get( \"app.name\", \"UNDEF\" );\n\t\tString mail = setup.get( \"alarm.mail\", null );\n    \t\n\t\tif( Utils.notBlankString( mail ) )\n\t\t{\n\t\t\tsender = new AlarmSender( setup, name, mail );\n\t\t}\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40515, "method_name": "needAlarmSend", "class_name": "AlarmSender", "params": ["String", "long", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean needAlarmSend( String key, long time, long defaultInterval )\n    {\n        return \n            sender != null && \n            sender.needAlarmSendNoStatic( key, time, defaultInterval );\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40516, "method_name": "sendAlarm", "class_name": "AlarmSender", "params": ["AlarmErrorMessage", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void sendAlarm( AlarmErrorMessage message, long time )\n    {\n        if( sender != null )\n        {\n            sender.sendAlarmNoStatic( message, time );\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40517, "method_name": "reloadMinAlarmIntervals", "class_name": "AlarmSender", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void reloadMinAlarmIntervals()\n\t{\n\t    Map<String, Long> newMinIntervalMap = new HashMap<String, Long>();\n\t    \n\t    Map<String, String> intervals = setup.getHashValuesWithPrefix( \"alarm.min.interval.\" );\n\t    for( Map.Entry<String, String> me : intervals.entrySet() )\n\t    {\n\t        String key = me.getKey();\n\t        int value = Utils.parseInt( me.getValue() );\n\t        \n\t        if( value >= 0 )\n\t        {\n\t            newMinIntervalMap.put( key, (long)value * 1000 );\n\t        }\n\t    }\n\t    \n\t    this.minAlarmInterval = newMinIntervalMap;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40518, "method_name": "needAlarmSendNoStatic", "class_name": "AlarmSender", "params": ["String", "long", "long"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean needAlarmSendNoStatic( String key, long time, long defaultInterval )\n    {\n        Long lastSendTime = lastAlarmTime.get( key );\n        Long interval = minAlarmInterval.get( key );\n        if( interval == null )\n        {\n            interval = defaultInterval;\n        }\n        \n        return lastSendTime == null || (time - lastSendTime) > interval;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40519, "method_name": "sendAlarmNoStatic", "class_name": "AlarmSender", "params": ["AlarmErrorMessage", "long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void sendAlarmNoStatic( AlarmErrorMessage message, long time )\n\t{\n\t\twhile( !alarmQueue.offer( message ) )\n\t\t{\n\t\t\talarmQueue.poll();\n\t\t}\n\n\t\tlastAlarmTime.put( message.getKey(), time );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40520, "method_name": "run", "class_name": "AlarmSender", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run()\n    {\n    \tlog.info( \"AlarmSender started..\" );\n    \t\n    \twhile( true )\n    \t{\n    \t\ttry \n    \t\t{\n    \t\t\tAlarmErrorMessage message = alarmQueue.poll();\n    \t\t\tif( message != null )\n    \t\t\t{\n    \t\t\t\tStringBuilder text = new StringBuilder( 200 );\n    \t\t\t\ttext.append( \"ID \u0441\u043e\u0431\u044b\u0442\u0438\u044f: \" );\n    \t\t\t\ttext.append( message.getKey() );\n    \t\t\t\ttext.append( \"\\n\" );\n    \t\t\t\ttext.append( \"\u0412\u0440\u0435\u043c\u044f \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0441\u043e\u0431\u044b\u0442\u0438\u044f: \" );\n    \t\t\t\ttext.append( TimeUtils.format( message.getRegistrationTime(), \"dd.MM.yyyy HH:mm:ss\" ) );\n    \t\t\t\ttext.append( \"\\n\\n\" );\n    \t\t\t\ttext.append( message.getText() );\n\n    \t\t\t\t// \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043f\u0438\u0441\u044c\u043c\u0430\n    \t\t\t\tnew MailMsg( setup ).sendMessage( mail, \"[\" + name + \"] \" + message.getSubject(), text.toString() );\n    \t\t\t}\n    \t\t\t// \u0441\u043f\u0438\u043c \u0442\u043e\u043b\u044c\u043a\u043e, \u0435\u0441\u043b\u0438 \u043d\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u0438\n    \t\t\telse\n    \t\t\t{\n    \t\t\t\tsleep( 5 * 1000 );\n    \t\t\t}\n\n    \t\t\tif( oldMemoryCheck )\n    \t\t\t{\n    \t\t\t\tcheckSystemHealth();\n    \t\t\t}\t\t\t\t\n    \t\t} \n    \t\tcatch( Exception e ) \n    \t\t{\n    \t\t\tlog.error( e.getMessage(), e );\n    \t\t}\n    \t}\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40521, "method_name": "checkSystemHealth", "class_name": "AlarmSender", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkSystemHealth()\n    {\n        long now = System.currentTimeMillis();\n        if( now - lastSystemCheck > SYSTEM_CHECK_INTERVAL )\n        {\n\t\t\tRuntime r = Runtime.getRuntime();\n\t\t\tif( (r.maxMemory() * memoryCheckThreshold) < (r.totalMemory() - r.freeMemory()) )\n\t\t\t{\n        \t\tString key = \"system.no.memory\";\n        \t\tString msg = \"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u043d\u0435\u0433\u043e \u043f\u0430\u043c\u044f\u0442\u0438!\\n\" +\n\t\t\t\t\t\t\t \"\u0417\u0430\u0440\u0435\u0437\u0435\u0440\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u043e \" + r.totalMemory() + \" \u0438\u0437 \" + r.maxMemory() + \" (\u043c\u0430\u043a\u0441\u0438\u043c\u0443\u043c) \u0431\u0430\u0439\u0442\u043e\u0432 \u043f\u0430\u043c\u044f\u0442\u0438.\\n\" +\n\t\t\t\t\t\t\t \"\u0421\u0435\u0439\u0447\u0430\u0441 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u043e: \" + r.freeMemory() + \" \u0431\u0430\u0439\u0442\u043e\u0432.\\n\\n\" +\n\t\t\t\t\t\t\t \"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0432\u044b\u0434\u0435\u043b\u0438\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0430\u043c\u044f\u0442\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e.\";\n        \t\t\n        \t\tif( needAlarmSendNoStatic( key, now, 30 * 1000 ) )\n        \t\t{\n        \t\t\tsendAlarmNoStatic( new AlarmErrorMessage( key, \"\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u043a \u043f\u0430\u043c\u044f\u0442\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u044b\", msg ), now );\n        \t\t}\n        \t\t\n        \t\t//\u043f\u043e\u043f\u044b\u0442\u043a\u0430 \u043e\u0441\u0432\u043e\u0431\u043e\u0434\u0438\u0442\u044c \u0445\u043e\u0442\u044c \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u043f\u0430\u043c\u044f\u0442\u044c\n        \t\tr.gc();\n        \t}\n            lastSystemCheck = now;\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/AlarmSender.java", "stars": "12", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 40522, "method_name": "getLayoutId", "class_name": "RegisterActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getLayoutId() {\n        return R.layout.register_activity;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/RegisterActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40523, "method_name": "initView", "class_name": "RegisterActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initView() {\n        // \u7ed9\u8fd9\u4e2a View \u8bbe\u7f6e\u6c89\u6d78\u5f0f\uff0c\u907f\u514d\u72b6\u6001\u680f\u906e\u6321\n        ImmersionBar.setTitleBar(this, mTitleView);\n\n        InputTextHelper.with(this)\n                .addView(mPhoneView)\n                .addView(mCodeView)\n                .addView(pwdEdit)\n                .addView(invideCodeEdit)\n                .setMain(mCommitView)\n                .setListener(helper -> mPhoneView.getText().toString().length() == 11 &&\n                        pwdEdit.getText().toString().length() >= 6)\n                .build();\n        mPhoneView.setInputType(InputType.TYPE_CLASS_PHONE | InputType.TYPE_TEXT_VARIATION_EMAIL_ADDRESS);//\u7535\u8bdd\u548c\u90ae\u7bb1\n        setOnClickListener(R.id.cv_register_countdown, R.id.registerBtn, R.id.toLogin);\n        mPhoneView.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String testcode = mCodeView.getText().toString().trim();\n                String pwdedit = pwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && testcode.length() > 0 && pwdedit.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        mCodeView.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String mobile = mPhoneView.getText().toString().trim();\n                String pwdedit = pwdEdit.getText().toString().trim();\n                if (s.toString().length() > 0 && mobile.length() > 0 && pwdedit.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n        pwdEdit.addTextChangedListener(new TextWatcher() {\n\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                String mobile = mPhoneView.getText().toString().trim();\n                String testcode = mCodeView.getText().toString().trim();\n                if (s.toString().length() > 0 && testcode.length() > 0 && mobile.length() > 0) {\n                    mCommitView.setBackgroundResource(R.drawable.login_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(true);\n                } else {\n                    mCommitView.setBackgroundResource(R.drawable.normal_bg);\n                    mCommitView.setTextColor(Color.WHITE);\n                    mCommitView.setEnabled(false);\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/RegisterActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40524, "method_name": "initData", "class_name": "RegisterActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void initData() {\n\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/RegisterActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40525, "method_name": "createStatusBarConfig", "class_name": "RegisterActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ImmersionBar", "snippet": "    public ImmersionBar createStatusBarConfig() {\n        // \u4e0d\u8981\u628a\u6574\u4e2a\u5e03\u5c40\u9876\u4e0a\u53bb\n        return super.createStatusBarConfig().keyboardEnable(true);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/RegisterActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40526, "method_name": "onClick", "class_name": "RegisterActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n        switch (v.getId()) {\n            case R.id.cv_register_countdown:\n                // \u83b7\u53d6\u9a8c\u8bc1\u7801\n                if (mPhoneView.getText().toString().length() != 11) {\n                    toast(R.string.common_phone_input_error);\n                    return;\n                }\n                // \u83b7\u53d6\u9a8c\u8bc1\u7801\n                EasyHttp.post(this)\n                        .api(new GetCodeApi()\n                                .setPhone(mPhoneView.getText().toString())\n                                .setType(\"1\"))\n                        .request(new HttpCallback<HttpData<GetCode>>(this) {\n\n                            @Override\n                            public void onSucceed(HttpData<GetCode> getCode) {\n                                if (getCode!=null){\n                                    int code = getCode.getCode();\n                                    String message = getCode.getMessage();\n                                    if (code==0){\n                                        toast(R.string.common_code_send_hint);\n                                        mCountdownView.start();\n                                    }\n                                    if (!TextUtils.isEmpty(message)){\n                                        toast(message);\n                                    }\n                                }\n                            }\n\n                            @Override\n                            public void onFail(Exception e) {\n                                super.onFail(e);\n                                toast(e.getMessage());\n                            }\n                        });\n                break;\n            case R.id.registerBtn:\n                // \u63d0\u4ea4\u6ce8\u518c\n                EasyHttp.post(this)\n                        .api(new RegisterApi()\n                                .setAccount(mPhoneView.getText().toString())\n                                .setPwd(Md5Util.md5(pwdEdit.getText().toString()))\n                                .setCode(mCodeView.getText().toString())\n                                .setInviteCode(invideCodeEdit.getText().toString().trim())\n                                .setFrom(\"-1\"))\n                        .request(new HttpCallback<HttpData<RegisterBean>>(this) {\n\n                            @Override\n                            public void onSucceed(HttpData<RegisterBean> data) {\n                                LoginActivity.start(getActivity(), mPhoneView.getText().toString(), pwdEdit.getText().toString());\n                                setResult(RESULT_OK);\n                                finish();\n                            }\n\n                            @Override\n                            public void onFail(Exception e) {\n                                super.onFail(e);\n                                toast(e.getMessage());\n                            }\n                        });\n                break;\n            case R.id.toLogin:\n                // \u5df2\u6709\u8d26\u53f7\u53bb\u767b\u5f55\n                LoginActivity.start(getActivity(), mPhoneView.getText().toString(), pwdEdit.getText().toString());\n                setResult(RESULT_OK);\n                finish();\n                break;\n            default:\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/RegisterActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40527, "method_name": "isSwipeEnable", "class_name": "RegisterActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSwipeEnable() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/RegisterActivity.java", "stars": "1", "class_props": {"extends": "MyActivity", "implements": null, "modifiers": ["final", "public"]}}, {"id": 40528, "method_name": "getInstance", "class_name": "RegisterSP", "params": [], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "RegisterSP", "snippet": "    public static synchronized RegisterSP getInstance() {\n        if (instance == null) {\n            instance = new RegisterSP();\n        }\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/RegisterSP.java", "stars": "4", "class_props": {"extends": "Register", "implements": null, "modifiers": ["public"]}}, {"id": 40529, "method_name": "main", "class_name": "AzureClass", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\t\n\t\t// Launching the application\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\t\tSystem.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\t\tChromeOptions options = new ChromeOptions();\n\t\toptions.addArguments(\"--disable-notifications\");\n\n\t\tDesiredCapabilities cap = new DesiredCapabilities();\n\t\tcap.setCapability(CapabilityType.UNEXPECTED_ALERT_BEHAVIOUR, UnexpectedAlertBehaviour.DISMISS);\n\t\toptions.merge(cap);\n\n\t\tdriver = new ChromeDriver(options);\n\t\tdriver.get(\"https://azure.microsoft.com/en-in/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\n\t\tActions act = new Actions(driver);\n\t\tWebDriverWait wait = new WebDriverWait(driver, 10); \n\t\tJavascriptExecutor js = (JavascriptExecutor)driver;\n\t\t\n\t\tdriver.findElementByLinkText(\"Pricing\").click(); \n\t\tThread.sleep(3000); \n\t\t\n\t\tdriver.findElementByXPath(\"//a[contains(text(),'Pricing calculator')]\").click(); \n\t\tdriver.findElementByXPath(\"//button[@value='containers']\").click(); \n\t\tdriver.findElementByXPath(\"(//button[@data-event-property='container-instances'])[2]\").click(); \n\t\tdriver.findElementById(\"new-module-loc\").click(); \n\t\tThread.sleep(3000);\n\t\t\n\t\t// Setting the Region \n\t\tWebElement regionElement = driver.findElementByName(\"region\"); \n\t\tSelect regionOptions = new Select(regionElement); \n\t\tregionOptions.selectByValue(\"south-india\"); \n\t\tThread.sleep(3000);\n\t\t\n\t\tdriver.findElementByXPath(\"//h5[text()='Duration']/following::div[2]/input\").sendKeys(Keys.chord(Keys.CONTROL,\"a\"),\"180000\");\n\t\tThread.sleep(3000);\n\t\t\n\t\t// Selection container Memory \n\t\tWebElement memoryElement = driver.findElementByName(\"memory\"); \n\t\tSelect memoryOptions = new Select(memoryElement); \n\t\tmemoryOptions.selectByValue(\"4\"); \n\t\tThread.sleep(3000);\n\t\t\n\t\t// Toggle Dev/Test pricing \n\t\tdriver.findElementById(\"devtest-toggler\").click(); \n\t\t\n\t\t// Setting the currency to INR \n\t\tWebElement currencyElement = driver.findElementByXPath(\"//select[@class='select currency-dropdown']\");\n\t\tSelect currencyOptions = new Select(currencyElement);\n\t\tcurrencyOptions.selectByValue(\"INR\"); \n\t\t\n\t\t// Printing the Monthly price estimate \n\t\tString estimatedMonthlyPrice = driver.findElementByXPath(\"(//select[@class='select currency-dropdown']/parent::div//preceding-sibling::div[1]//span)[2]\").getText(); \n\t\tSystem.out.println(\"\\nMonthly Price estimate: \" + estimatedMonthlyPrice); \n\t\t\n\t\t// Exporting the estimate \n\t\tdriver.findElementByXPath(\"//button[text()='Export']\").click(); \n\t\tThread.sleep(5000);\n\t\t\n\t\t// Validating the file is downloaded or not \n\t\tString downloadPath = \"C:\\\\Users\\\\vinvi\\\\Downloads\"; \n\t\tString fileName = \"ExportedEstimate.xlsx\"; \n\t\t\n\t\tFile targetFile = new File(downloadPath, fileName); \n\t\t\n\t\tif (targetFile.exists()) {\n\t\t\tSystem.out.println(\"File is available.\");\n\t\t} else { \n\t\t\tSystem.out.println(\"File not present.\");\n\t\t}\n\t\t\n\t\t// Since second download also has same file name deleting this file to validating in the next steps \n\t\ttargetFile.delete(); \n\t\t\n\t\tjs.executeScript(\"window.scrollTo(0, document.body.scrollTop)\");  \n\t\t\n\t\t// Navigating to Example Scenarios \n\t\tdriver.findElementByLinkText(\"Example Scenarios\").click(); \n\t\tThread.sleep(3000);\n\t\tdriver.findElementByXPath(\"//span[text()='CI/CD for Containers']\").click(); \n\t\tThread.sleep(2000);\n\t\t\n\t\tjs.executeScript(\"window.scrollBy(0,400)\");  \n\t\tdriver.findElementByXPath(\"//button[text()='Add to estimate']\").click(); \n\t\tThread.sleep(5000); \n\t\t\n\t\tjs.executeScript(\"window.scrollBy(0, 900)\"); \n\t\t\n\t\t// Setting the currency to INR here \n\t\tWebElement currencyElement2 = driver.findElementByXPath(\"//select[@class='select currency-dropdown']\");\n\t\tSelect currencyOptions2 = new Select(currencyElement2);\n\t\tcurrencyOptions2.selectByValue(\"INR\");  \n\t\tThread.sleep(5000);\n\t\t\n\t\t// Toggle Dev/Test pricing \n\t\tdriver.findElementById(\"devtest-toggler\").click(); \n\t\t\n\t\t// Exporting the Estimate again \n\t\tdriver.findElementByXPath(\"//button[text()='Export']\").click(); \n\t\tThread.sleep(5000); \n\t\t\n\t\t// Validating the downloaded file again \n\t\tif (targetFile.exists()) {\n\t\t\tSystem.out.println(\"File is available.\");\n\t\t} else { \n\t\t\tSystem.out.println(\"File not present.\");\n\t\t}\n\t\t\n\t\t\n\t\tdriver.close();\n\t\t\n\n\t}", "url": "https://raw.githubusercontent.com/githubvin/VinSeleniumLab/master/SeleniumWorkout/src/main/java/plainseleniumscripts/AzureClass.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40530, "method_name": "year", "class_name": "SystemCapturedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String year() {\n        return UserPreferences.displayYear() ? str(galaxy().beginningYear() + turn) : str(turn+1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/SystemCapturedEvent.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "StarSystemEvent"], "modifiers": ["public"]}}, {"id": 40531, "method_name": "description", "class_name": "SystemCapturedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String description() {\n        Empire emp = galaxy().empire(empId);\n        return text(\"SYSEVENT_CAPTURED\",emp.raceName());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/SystemCapturedEvent.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "StarSystemEvent"], "modifiers": ["public"]}}, {"id": 40532, "method_name": "main", "class_name": "Demo01Collection", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u521b\u5efa\u96c6\u5408\u5bf9\u8c61,\u53ef\u4ee5\u4f7f\u7528\u591a\u6001\n        //Collection<String> coll = new ArrayList<>();\n        Collection<String> coll = new HashSet<>();\n        System.out.println(coll);//\u91cd\u5199\u4e86toString\u65b9\u6cd5  []\n\n        /*\n            public boolean add(E e)\uff1a  \u628a\u7ed9\u5b9a\u7684\u5bf9\u8c61\u6dfb\u52a0\u5230\u5f53\u524d\u96c6\u5408\u4e2d \u3002\n            \u8fd4\u56de\u503c\u662f\u4e00\u4e2aboolean\u503c,\u4e00\u822c\u90fd\u8fd4\u56detrue,\u6240\u4ee5\u53ef\u4ee5\u4e0d\u7528\u63a5\u6536\n         */\n        boolean b1 = coll.add(\"\u5f20\u4e09\");\n        System.out.println(\"b1:\"+b1);//b1:true\n        System.out.println(coll);//[\u5f20\u4e09]\n        coll.add(\"\u674e\u56db\");\n        coll.add(\"\u674e\u56db\");\n        coll.add(\"\u8d75\u516d\");\n        coll.add(\"\u7530\u4e03\");\n        System.out.println(coll);//[\u5f20\u4e09, \u674e\u56db, \u8d75\u516d, \u7530\u4e03]\n\n        /*\n            public boolean remove(E e): \u628a\u7ed9\u5b9a\u7684\u5bf9\u8c61\u5728\u5f53\u524d\u96c6\u5408\u4e2d\u5220\u9664\u3002\n            \u8fd4\u56de\u503c\u662f\u4e00\u4e2aboolean\u503c,\u96c6\u5408\u4e2d\u5b58\u5728\u5143\u7d20,\u5220\u9664\u5143\u7d20,\u8fd4\u56detrue\n                                \u96c6\u5408\u4e2d\u4e0d\u5b58\u5728\u5143\u7d20,\u5220\u9664\u5931\u8d25,\u8fd4\u56defalse\n         */\n        boolean b2 = coll.remove(\"\u8d75\u516d\");\n        System.out.println(\"b2:\"+b2);//b2:true\n\n        boolean b3 = coll.remove(\"\u8d75\u56db\");\n        System.out.println(\"b3:\"+b3);//b3:false\n        System.out.println(coll);//[\u5f20\u4e09, \u674e\u56db, \u7530\u4e03]\n\n        /*\n            public boolean contains(E e): \u5224\u65ad\u5f53\u524d\u96c6\u5408\u4e2d\u662f\u5426\u5305\u542b\u7ed9\u5b9a\u7684\u5bf9\u8c61\u3002\n            \u5305\u542b\u8fd4\u56detrue\n            \u4e0d\u5305\u542b\u8fd4\u56defalse\n         */\n        boolean b4 = coll.contains(\"\u674e\u56db\");\n        System.out.println(\"b4:\"+b4);//b4:true\n\n        boolean b5 = coll.contains(\"\u8d75\u56db\");\n        System.out.println(\"b5:\"+b5);//b5:false\n\n        //public boolean isEmpty(): \u5224\u65ad\u5f53\u524d\u96c6\u5408\u662f\u5426\u4e3a\u7a7a\u3002 \u96c6\u5408\u4e3a\u7a7a\u8fd4\u56detrue,\u96c6\u5408\u4e0d\u4e3a\u7a7a\u8fd4\u56defalse\n        boolean b6 = coll.isEmpty();\n        System.out.println(\"b6:\"+b6);//b6:false\n\n        //public int size(): \u8fd4\u56de\u96c6\u5408\u4e2d\u5143\u7d20\u7684\u4e2a\u6570\u3002\n        int size = coll.size();\n        System.out.println(\"size:\"+size);//size:3\n\n        //public Object[] toArray(): \u628a\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff0c\u5b58\u50a8\u5230\u6570\u7ec4\u4e2d\u3002\n        Object[] arr = coll.toArray();\n        for (int i = 0; i < arr.length; i++) {\n            System.out.println(arr[i]);\n        }\n\n        //public void clear() :\u6e05\u7a7a\u96c6\u5408\u4e2d\u6240\u6709\u7684\u5143\u7d20\u3002\u4f46\u662f\u4e0d\u5220\u9664\u96c6\u5408,\u96c6\u5408\u8fd8\u5b58\u5728\n        coll.clear();\n        System.out.println(coll);//[]\n        System.out.println(coll.isEmpty());//true\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/13.%E3%80%90Collection%E3%80%81%E6%B3%9B%E5%9E%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/02_CollectionAndReflect/src/com/itheima/demo01/Collection/Demo01Collection.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40533, "method_name": "paint", "class_name": "Character", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paint(Graphics g) {\n        g.setColor(Color.GREEN);\n        g.fillRect(0, 0, Utils.CHARACTER_SIZE, Utils.CHARACTER_SIZE);\n    }", "url": "https://raw.githubusercontent.com/radudioane99/Shape-Storm/master/Character.java", "stars": "2", "class_props": {"extends": "JComponent", "implements": null, "modifiers": ["public"]}}, {"id": 40534, "method_name": "create", "class_name": "ViewHolderItem", "params": ["ViewGroup", "Context", "Fragment"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderItem", "snippet": "    public static ViewHolderItem create(ViewGroup parent, Context context, Fragment fragment)\n    {\n\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.list_item_item,parent,false);\n        return new ViewHolderItem(view,context,fragment);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderItem.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 40535, "method_name": "listItemClick", "class_name": "ViewHolderItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void listItemClick()\n    {\n\n        Intent intent = new Intent(context, ShopItemByItem.class);\n\n        Gson gson = UtilityFunctions.provideGson();\n        String jsonString = gson.toJson(item);\n        intent.putExtra(\"item_json\",jsonString);\n\n        context.startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderItem.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 40536, "method_name": "setItem", "class_name": "ViewHolderItem", "params": ["Item"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItem(Item item)\n    {\n        this.item = item;\n\n\n\n        categoryName.setText(item.getItemName());\n\n        ItemStats itemStats = item.getItemStats();\n\n        if(itemStats!=null)\n        {\n            String currency = \"\";\n            currency = PrefGeneral.getCurrencySymbol(context);\n\n            priceRange.setText(\"Price Range :\\n\" + currency + \" \" + itemStats.getMin_price() + \" - \" + itemStats.getMax_price() + \" per \" + item.getQuantityUnit());\n            priceAverage.setText(\"Price Average :\\n\" + currency + \" \" + String.format(\"%.2f\",itemStats.getAvg_price()) + \" per \" + item.getQuantityUnit());\n            shopCount.setText(\"Available in \" + itemStats.getShopCount() + \" Shops\");\n//            System.out.println(\"Rating : \" + itemStats.getRating_avg() + \" : Ratings Count \" + itemStats.getRatingCount());\n        }\n\n\n\n\n//        holder.itemRating.setText(String.format(\"%.2f\",item.getRt_rating_avg()));\n//        holder.ratingCount.setText(\"( \" + String.valueOf((int)item.getRt_rating_count()) + \" Ratings )\");\n\n\n\n\n\n        if(item.getRt_rating_count()==0)\n        {\n            itemRating.setText(\" New \");\n            itemRating.setBackgroundColor(ContextCompat.getColor(context, R.color.phonographyBlue));\n            ratingCount.setVisibility(View.GONE);\n        }\n        else\n        {\n\n\n            itemRating.setText(String.format(\"%.2f\",item.getRt_rating_avg()));\n            ratingCount.setText(\"( \" + (int) item.getRt_rating_count() + \" Ratings )\");\n\n            itemRating.setBackgroundColor(ContextCompat.getColor(context, R.color.gplus_color_2));\n            ratingCount.setVisibility(View.VISIBLE);\n\n        }\n\n\n\n\n        String imagePath = PrefGeneral.getServiceURL(context)\n                + \"/api/v1/Item/Image/five_hundred_\" + item.getItemImageURL() + \".jpg\";\n\n\n        Drawable drawable = VectorDrawableCompat\n                .create(context.getResources(),\n                        R.drawable.ic_nature_people_white_48px, context.getTheme());\n\n\n\n        Picasso.get()\n                .load(imagePath)\n                .placeholder(drawable)\n                .into(categoryImage);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderItem.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 40537, "method_name": "executeProcedure", "class_name": "RoseExplosionProcedure", "params": ["java"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void executeProcedure(java.util.HashMap<String, Object> dependencies) {\n\t\tif (dependencies.get(\"x\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency x for procedure RoseExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"y\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency y for procedure RoseExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"z\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency z for procedure RoseExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tif (dependencies.get(\"world\") == null) {\n\t\t\tSystem.err.println(\"Failed to load dependency world for procedure RoseExplosion!\");\n\t\t\treturn;\n\t\t}\n\t\tint x = (int) dependencies.get(\"x\");\n\t\tint y = (int) dependencies.get(\"y\");\n\t\tint z = (int) dependencies.get(\"z\");\n\t\tWorld world = (World) dependencies.get(\"world\");\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(RoseBlock.block, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t\tif (!world.isRemote) {\n\t\t\tItemEntity entityToSpawn = new ItemEntity(world, x, y, z, new ItemStack(Items.FLOWER_POT, (int) (1)));\n\t\t\tentityToSpawn.setPickupDelay(10);\n\t\t\tworld.addEntity(entityToSpawn);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/procedures/RoseExplosionProcedure.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 40538, "method_name": "logSomething", "class_name": "SampleLogbackApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void logSomething() {\n\t\tlogger.debug(\"Sample Debug Message\");\n\t\tlogger.trace(\"Sample Trace Message\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-logback/src/main/java/smoketest/logback/SampleLogbackApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40539, "method_name": "main", "class_name": "SampleLogbackApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleLogbackApplication.class, args).close();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-logback/src/main/java/smoketest/logback/SampleLogbackApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40540, "method_name": "setTransportType", "class_name": "AbstractJobPlugin", "params": ["TransportType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTransportType(TransportType transportType){\n        this.transportType = transportType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractJobPlugin.java", "stars": "23", "class_props": {"extends": "AbstractPlugin", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40541, "method_name": "getTransportType", "class_name": "AbstractJobPlugin", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TransportType", "snippet": "    public TransportType getTransportType(){\n        return this.transportType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractJobPlugin.java", "stars": "23", "class_props": {"extends": "AbstractPlugin", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40542, "method_name": "getJobPluginCollector", "class_name": "AbstractJobPlugin", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JobPluginCollector", "snippet": "    public JobPluginCollector getJobPluginCollector() {\n        return jobPluginCollector;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractJobPlugin.java", "stars": "23", "class_props": {"extends": "AbstractPlugin", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40543, "method_name": "setJobPluginCollector", "class_name": "AbstractJobPlugin", "params": ["JobPluginCollector"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setJobPluginCollector(\n            JobPluginCollector jobPluginCollector) {\n        this.jobPluginCollector = jobPluginCollector;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/plugin/AbstractJobPlugin.java", "stars": "23", "class_props": {"extends": "AbstractPlugin", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40544, "method_name": "handshakeAcceptResponse", "class_name": "ServerMessageBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String handshakeAcceptResponse(String userName) {\n        return String.format(\"Hi %s, welcome to the chat room.\", userName);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40545, "method_name": "userJoiningInChatRoom", "class_name": "ServerMessageBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String userJoiningInChatRoom(String userName) {\n        return String.format(\"%s join the chat room.\", userName);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40546, "method_name": "sendUsersList", "class_name": "ServerMessageBuilder", "params": ["Set<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String sendUsersList(Set<String> onlineUsersList) {\n        StringBuilder list = new StringBuilder();\n        for (String user : onlineUsersList)\n            list.append(user).append(USERNAMES_SEPARATOR);\n        return String.format(\"%s%s<%s>\", GET_USER_LIST_RESPONSE, BODY_SEPARATOR,\n                list.subSequence(0, list.length() - 1).toString());\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40547, "method_name": "publicMessage", "class_name": "ServerMessageBuilder", "params": ["String", "long", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String publicMessage(String body, long length, String sender) {\n        return String.format(\"Public message, length=<%d> from <%s>%s\" +\n                \"<%s>\", length, sender, BODY_SEPARATOR, body);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40548, "method_name": "privateMessage", "class_name": "ServerMessageBuilder", "params": ["String", "long", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String privateMessage(String safeBody, long length, String userName, String[] receivers) {\n        return String.format(\"Private message, length=<%d> from <%s> to %s%s<%s>\",\n                length, userName, convertListToString(receivers),\n                BODY_SEPARATOR, safeBody);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40549, "method_name": "convertListToString", "class_name": "ServerMessageBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String convertListToString(String[] receivers) {\n        if (receivers.length == 0)\n            return \"<>\";\n\n        StringBuilder list = new StringBuilder();\n\n        for (String receiver : receivers)\n            list.append(String.format(\"<%s>%s\", receiver.trim(), RECEIVERS_LIST_SEPARATOR));\n        return list.substring(0, list.length() - RECEIVERS_LIST_SEPARATOR.length());\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40550, "method_name": "logoutMessage", "class_name": "ServerMessageBuilder", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String logoutMessage(String userName) {\n        return String.format(\"<%s> left the chat room.\", userName);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40551, "method_name": "responseBuilder", "class_name": "ServerMessageBuilder", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String responseBuilder(String status, String response) {\n        return String.format(\"%s,%s,%s\", SERVER_MESSAGE, status, response);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40552, "method_name": "privateFileSendMessage", "class_name": "ServerMessageBuilder", "params": ["String", "String", "long", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String privateFileSendMessage(String sender, String fileName, long fileSize, String[] receivers) {\n        return String.format(\"%s, from<%s>, name<%s>, length<%d>, %s\", PRIVATE_FILE_MESSAGE, sender, fileName, fileSize,\n                convertListToString(receivers));\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40553, "method_name": "publicFileSendMessage", "class_name": "ServerMessageBuilder", "params": ["String", "String", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String publicFileSendMessage(String sender, String fileName, long fileSize) {\n        return String.format(\"%s, from<%s>, name<%s>, length<%d>\", PUBLIC_FILE_MESSAGE, sender, fileName, fileSize);\n    }", "url": "https://raw.githubusercontent.com/AlirezaAZ/SimpleChatroom/master/src/Server/ServerMessageBuilder.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40554, "method_name": "discount", "class_name": "VIPDiscount", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void discount() {\n        System.out.println(\"\u5904\u7406VIP\u7528\u6237\u6298\u6263\u7684\u4e1a\u52a1\");\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/decorate/business/VIPDiscount.java", "stars": "2", "class_props": {"extends": "BasicDiscount", "implements": null, "modifiers": ["public"]}}, {"id": 40555, "method_name": "setNonNullParameter", "class_name": "ZonedDateTimeTypeHandler", "params": ["PreparedStatement", "int", "ZonedDateTime", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, ZonedDateTime parameter, JdbcType jdbcType)\n          throws SQLException {\n    ps.setObject(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ZonedDateTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 40556, "method_name": "getNullableResult", "class_name": "ZonedDateTimeTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "ZonedDateTime", "snippet": "  public ZonedDateTime getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    return rs.getObject(columnName, ZonedDateTime.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ZonedDateTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 40557, "method_name": "getNullableResult", "class_name": "ZonedDateTimeTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "ZonedDateTime", "snippet": "  public ZonedDateTime getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    return rs.getObject(columnIndex, ZonedDateTime.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ZonedDateTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 40558, "method_name": "getNullableResult", "class_name": "ZonedDateTimeTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "ZonedDateTime", "snippet": "  public ZonedDateTime getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    return cs.getObject(columnIndex, ZonedDateTime.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ZonedDateTimeTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 40559, "method_name": "main", "class_name": "StoreHpLaptops", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main (String args[]) throws InterruptedException {\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\t\tChromeOptions option = new ChromeOptions();\n\t\toption.addArguments(\"--disable-notifications\");\n\n\t\tChromeDriver driver = new ChromeDriver(option);\n\t\tActions action = new Actions(driver);\n\n\n//1) Go to https://store.hp.com/in-en/\n\t\tdriver.get(\"https://store.hp.com/in-en/\");\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\t\tdriver.manage().window().maximize();\n\t\tThread.sleep(2000);\n\t\t\n\t\ttry {\n\t\t\tdriver.findElementByXPath(\"//button[@class='optanon-allow-all accept-cookies-button']\").click();\n\t\t}\n\t\tcatch (NoSuchElementException exception) {\n\t\t\tSystem.out.println(\"Exception3 is catched\");\n\t\t}\n\n\t\ttry {\n\t\t\tdriver.findElementByXPath(\"//span[@class='optly-modal-close close-icon']\").click();\n\t\t}\n\t\tcatch (NoSuchElementException exception) {\n\t\t\tSystem.out.println(\"Exception2 is catched\");\n\t\t}\n\n\t\t\n\n//2) Mouse over on Laptops menu and click on Pavilion\n\t\tThread.sleep(2000);\n\t\taction.moveToElement(driver.findElementByXPath(\"//span[text()='Laptops']\")).pause(2000).perform();\n\t\tThread.sleep(2000);\n\t\tdriver.findElementByXPath(\"//a[@id='ui-id-43']//span[1]\").click();\n\n\n\t\ttry {\n\t\t\tdriver.findElementByXPath(\"//div[@class='inside_closeButton fonticon icon-hclose']\").click();\n\t\t}\n\t\tcatch (NoSuchElementException exception) {\n\t\t\tSystem.out.println(\"Exception3 is catched\");\n\t\t}\n\n\t\ttry {\n\t\t\tdriver.findElementByXPath(\"//button[text()='Accept Cookies']\").click();\n\t\t}\n\t\tcatch (NoSuchElementException exception) {\n\t\t\tSystem.out.println(\"Exception2 is catched\");\n\t\t}\n\n\t\ttry {\n\t\t\tdriver.findElementByXPath(\"//span[@class='optly-modal-close close-icon']\").click();\n\t\t}\n\t\tcatch (NoSuchElementException exception) {\n\t\t\tSystem.out.println(\"Exception1 is catched\");\n\t\t}\n\n\t\tJavascriptExecutor js = (JavascriptExecutor) driver; \n\t\tjs.executeScript(\"window.scrollBy(0, 250)\");\n\t\t\n\n//3) Under SHOPPING OPTIONS -->Processor -->Select Intel Core i7\n\t\tThread.sleep(3000);\n\t\tdriver.findElementByXPath(\"(//span[text()='Processor'])[2]\").click();\n\t\tThread.sleep(3000);\n\t\tdriver.findElementByXPath(\"(//span[text()='Intel Core i7']\").click();\n\t\t\n\n//4) Hard Drive Capacity -->More than 1TB\n\t\tdriver.findElementByXPath(\"//span[text()='More than 1 TB']\").click();\n\t\t\n//5) Select Sort By: Price: Low to High\n\t\tWebElement sortcombo = driver.findElementByXPath(\"(//select[@class='sorter-options option-new'])[1]\");\n\t\tSelect sortcomboprc = new Select(sortcombo);\n\t\tsortcomboprc.selectByValue(\"price_asc\");\n\t\tThread.sleep(3000);\n\n//\t6) Print the First resulting Product Name and Price\n\t\tList<WebElement> firstlap = driver.findElementsByXPath(\"(//img[@class='product-image-photo'])[2]\");\n\t\tWebElement lpname = firstlap.get(0);\n\t\tSystem.out.println(lpname);\n\t\tString price = driver.findElementByXPath(\"(//span[@data-price-type='finalPrice']//span)[1]\").getText();\n\t\tString prc=price.replaceAll(\"\\\\D\", \"\");\n\t\tint price1 = Integer.parseInt(prc);\n\t\tSystem.out.println(price1);\n\n//\t7) Click on Add to Cart\n\t\tThread.sleep(3000);\n\t\tdriver.findElementByXPath(\"(//span[text()='Add To Cart'])[1]\").click();\n\n\n//8) Click on Shopping Cart icon --> Click on View and Edit Cart\n\t\tThread.sleep(3000);\n\t\tdriver.findElementByXPath(\"//a[@class='action showcart']\").click();\n\t\tdriver.findElementByXPath(\"(//div[@class='primary']//a)[1]\").click();\n\n\n//9) Check the Shipping Option --> Check availability at Pincode\n\t\tdriver.findElementById(\"block-deliver-heading\").click();\n\t\tdriver.findElementByXPath(\"//input[@placeholder='Pincode']\").sendKeys(\"609110\");\n\t\tdriver.findElementByXPath(\"//button[text()='check']\").click();\n\t\tThread.sleep(5000);\n\t\t\n\n//10) Verify the order Total against the product price\n\t\tString ordervalue = driver.findElementByXPath(\"(//td[@class='amount']//span)[3]\").getText();\n\t\tString ordval =ordervalue.replaceAll(\"\\\\D\", \"\");\n\t\tint price2 = Integer.parseInt(ordval);\n\n\t\tif (price1==price2) {\n\t\t\tSystem.out.println(\"Order Total and Product  Price Matched\");\n\t\t\tdriver.findElementByXPath(\"(//span[text()='Proceed to Checkout'])[1]\").click();\n\t\t}\n\t\telse\n\t\t\tSystem.out.println(\"Order Total and Product  Price Matched are not matchd\");\n\n\n//\t11) Proceed to Checkout if Order Total and Product Price matches\n\t\tdriver.findElementByXPath(\"//span[text()='Proceed to Checkout']\").click();\n\t\t\n\t\t\n//12) Click on Place Order\n\t\tdriver.findElementByXPath(\"(//span[text()='Place Order'])[3]\").click();\n\t\t\n\t\t\n//13) Capture the Error message and Print\n\t\tString errmsg = driver.findElementByXPath(\"//div[@class='message notice']\").getText();\n\t\tSystem.out.println(errmsg);\n\t\t\n//\t14) Close Browser\n\t\tdriver.close();\n\n\t}", "url": "https://raw.githubusercontent.com/prahina/April2020_Simplescripts/master/StoreHpLaptops.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40560, "method_name": "loaderForFactory", "class_name": "RandomCTMConfig", "params": ["SpriteProviderFactory<RandomCTMConfig>"], "throws": null, "modifiers": ["public", "static"], "return_type": "CTMConfig", "snippet": "\tpublic static CTMConfig.Loader<RandomCTMConfig> loaderForFactory(SpriteProviderFactory<RandomCTMConfig> factory) {\n\t\treturn (p, l, m, n) -> new RandomCTMConfig(p, l, m, factory, n);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/RandomCTMConfig.java", "stars": "3", "class_props": {"extends": "BaseCTMConfig", "implements": null, "modifiers": ["public"]}}, {"id": 40561, "method_name": "getSelf", "class_name": "RandomCTMConfig", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "RandomCTMConfig", "snippet": "\tprotected RandomCTMConfig getSelf() {\n\t\treturn this;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/RandomCTMConfig.java", "stars": "3", "class_props": {"extends": "BaseCTMConfig", "implements": null, "modifiers": ["public"]}}, {"id": 40562, "method_name": "createOption", "class_name": "YamlFileService", "params": [], "throws": null, "modifiers": [], "return_type": "DumperOptions", "snippet": "    DumperOptions createOption() {\n        DumperOptions dumperOptions = new DumperOptions();\n        dumperOptions.setDefaultFlowStyle(DumperOptions.FlowStyle.BLOCK);\n        dumperOptions.setDefaultScalarStyle(DumperOptions.ScalarStyle.PLAIN);\n        dumperOptions.setPrettyFlow(false);\n        return dumperOptions;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/YamlFileService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40563, "method_name": "writeObjectToYamlFile", "class_name": "YamlFileService", "params": ["Map<Object,Object>", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean writeObjectToYamlFile(Map<Object, Object> entity, String yamlFile) {\n        DumperOptions options = this.createOption();\n        String yaml = new Yaml(new YamlRepresenter(options)).dumpAs(entity, null, DumperOptions.FlowStyle.BLOCK);\n        try {\n            File file = new File(yamlFile);\n            if (!file.getParentFile().exists()) {\n                boolean isMk = file.getParentFile().mkdirs();\n                if (!isMk) {\n                    return false;\n                }\n            }\n            FileOutputStream outputStream = new FileOutputStream(file, false);\n            outputStream.write(yaml.getBytes());\n            outputStream.close();\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/YamlFileService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40564, "method_name": "loadYamlFile", "class_name": "YamlFileService", "params": ["String"], "throws": ["FileNotFoundException"], "modifiers": ["public"], "return_type": "Map<Object,Object>", "snippet": "    public Map<Object, Object> loadYamlFile(String filePath) throws FileNotFoundException {\n        return new Yaml().loadAs(new FileInputStream(new File(filePath)), Map.class);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/service/YamlFileService.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40565, "method_name": "isNoTreaty", "class_name": "TreatyNone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isNoTreaty()               { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyNone.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 40566, "method_name": "listOrder", "class_name": "TreatyNone", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int listOrder()                      { return 6; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyNone.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 40567, "method_name": "init", "class_name": "SplashController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        var future = CompletableFuture.runAsync(() -> {\n            try {\n                init0();\n                init1();\n                init2();\n            } catch (Exception e) {\n                e.printStackTrace();\n                throw new RuntimeException(e);\n            }\n        });\n        future.whenComplete((r, t) -> {\n            if (Objects.nonNull(t)) {\n                LOGGER.error(\"application startup failed cause:{}\", t.getMessage());\n                showErrorDialog(t, \"\u542f\u52a8\u5931\u8d25\");\n                return;\n            }\n            updateProgress(\"\u542f\u52a8\u6210\u529f\", 100);\n            Platform.runLater(() -> {\n                new DatabaseFxStage();\n                stage.close();\n            });\n        });\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/controller/SplashController.java", "stars": "18", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 40568, "method_name": "updateProgress", "class_name": "SplashController", "params": ["String", "double"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateProgress(String title, double value) {\n        Platform.runLater(() -> {\n            this.title.setText(title);\n            progress.setValue(value);\n        });\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/controller/SplashController.java", "stars": "18", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 40569, "method_name": "init0", "class_name": "SplashController", "params": [], "throws": ["InterruptedException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void init0() throws InterruptedException {\n        AssetUtils.loadAllFont();\n        updateProgress(\"\u521d\u59cb\u5316\u4e2d....\", 0);\n        Thread.sleep(250);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/controller/SplashController.java", "stars": "18", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 40570, "method_name": "init1", "class_name": "SplashController", "params": [], "throws": ["InterruptedException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void init1() throws InterruptedException {\n        updateProgress(\"\u52a0\u8f7d\u914d\u7f6e\u4fe1\u606f...\", 25);\n        var db = loadConfig(DB_CONFIG_FILE);\n        var params = db.getJsonArray(DATABASE).stream()\n                .map(it -> ((JsonObject) it).mapTo(ConnectionParam.class))\n                .collect(Collectors.toList());\n        DbPreference.setParams(params);\n        Thread.sleep(250);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/controller/SplashController.java", "stars": "18", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 40571, "method_name": "init2", "class_name": "SplashController", "params": [], "throws": ["InterruptedException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void init2() throws InterruptedException {\n        updateProgress(\"\u52a0\u8f7dUI\u914d\u7f6e....\", 75);\n        loadConfig(UI_CONFIG_FILE);\n        Thread.sleep(250);\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/controller/SplashController.java", "stars": "18", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 40572, "method_name": "channelActive", "class_name": "ConnectionWatchDog", "params": ["ChannelHandlerContext"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelActive(ChannelHandlerContext ctx) throws Exception {\n\n        log.info(\"\u5f53\u524d\u94fe\u8def\u5df2\u7ecf\u6fc0\u6d3b\u4e86\uff0c\u91cd\u8fde\u5c1d\u8bd5\u6b21\u6570\u91cd\u65b0\u7f6e\u4e3a0...\");\n        attempts = 0;\n        ctx.fireChannelActive();\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/client/src/main/java/cn/lzj/nacos/client/netty/handler/ConnectionWatchDog.java", "stars": "34", "class_props": {"extends": "ChannelInboundHandlerAdapter", "implements": ["TimerTask", "ChannelHandlerHolder"], "modifiers": ["public", "abstract"]}}, {"id": 40573, "method_name": "channelInactive", "class_name": "ConnectionWatchDog", "params": ["ChannelHandlerContext"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n        //\u6389\u7ebf\u7684channelInactive\u65b9\u6cd5\u662f\u4ece\u5934\u8282\u70b9\u5f80\u5c3e\u8282\u70b9\u7684\u987a\u5e8f\u6765\u6267\u884c\n        log.error(\"\u6389\u7ebf\u4e86...\");\n        if(reconnect){\n            log.error(\"\u94fe\u63a5\u5173\u95ed\uff0c\u5c06\u8fdb\u884c\u91cd\u8fde...\");\n            if(attempts>=5){\n                //\u91cd\u8fde\u4e865\u6b21\u8be5server\u8fd8\u662f\u5931\u8d25\u7684\u8bdd\uff0c\u5c31\u4eceserver\u96c6\u7fa4\u4e2d\u9009\u53d6\u5176\u4e2d\u4e00\u4e2a\u6765\u8fde\u63a5\n                //\u5148\u628a\u8be5server\u4ece\u53ef\u9009\u7684nettyServers\u53bb\u6389\n                NettyClient.nettyServers.remove(NettyClient.nettyServer);\n                String serverIp = NettyClient.getKeyByValue(NettyClient.nettyServer);\n                NettyClient.servers.remove(serverIp);\n                NettyClient.mappingMap.remove(serverIp);\n                Random random=new Random(System.currentTimeMillis());\n                //\u91cd\u65b0\u9009\u53d6\u4e00\u4e2aserver\u6765\u6765\u8fde\u63a5\uff0c\u800c\u4e14\u5728client\u5b58\u7684\u53ef\u7528server\u5217\u8868\u8fd8\u6709server\u7684\u60c5\u51b5\u4e0b\n                if(NettyClient.nettyServers.size()>0){\n                    NettyClient.index=random.nextInt(NettyClient.nettyServers.size());\n                    NettyClient.nettyServer=NettyClient.nettyServers.get(NettyClient.index);\n                    attempts=0;\n                    log.warn(\"\u5c1d\u8bd5\u8fde\u63a5\"+NettyClient.getKeyByValue(NettyClient.nettyServer));\n                }else{\n                    log.error(\"\u6ca1\u6709\u53ef\u7528\u7684server\u53ef\u4ee5\u5c1d\u8bd5\u6765\u8fde\u63a5\uff0c\u8bf7\u901a\u77e5\u670d\u52a1\u5668\u7ba1\u7406\u5458\u6216\u8005\u5c1d\u8bd5\u91cd\u65b0\u542f\u52a8\");\n                }\n            }\n            if (attempts < 12) {\n                //\u91cd\u8fde\u7684\u95f4\u9694\u65f6\u95f4\u4f1a\u8d8a\u6765\u8d8a\u957f\n                //\u6b63\u5e38\u6765\u8bf4\uff0c\u5047\u5982\u91cd\u8fde\u7684server\u90fd\u4e0d\u53ef\u7528\uff0c\u90a3\u4e48\u53ea\u6709\u5bf9NettyClient.nettyServer\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u624d\u4f1a\u7528\u5230attempts\u4e2d\u540e\u9762\u7684\u51e0\u4e2a\u91cd\u8bd5\u65f6\u95f4\n                //\u5176\u4ed6\u90fd\u662f\u57285\u90a3\u91cc\u5c31\u91cd\u65b0\u7f6e0\u4e86\n                int timeout = reconnectGapTime[attempts];\n                timer.newTimeout(this, timeout, TimeUnit.SECONDS);\n                attempts++;\n            }\n        }\n        ctx.fireChannelInactive();\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/client/src/main/java/cn/lzj/nacos/client/netty/handler/ConnectionWatchDog.java", "stars": "34", "class_props": {"extends": "ChannelInboundHandlerAdapter", "implements": ["TimerTask", "ChannelHandlerHolder"], "modifiers": ["public", "abstract"]}}, {"id": 40574, "method_name": "run", "class_name": "ConnectionWatchDog", "params": ["Timeout"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void run(Timeout timeout) throws Exception {\n\n        bootstrap.handler(new ChannelInitializer<SocketChannel>() {\n            @Override\n            protected void initChannel(SocketChannel ch) throws Exception {\n                ch.pipeline().addLast(handlers());\n            }\n        });\n        //\u91cd\u8fde\n        ChannelFuture channelFuture = bootstrap.connect(NettyClient.nettyServer.split(\":\")[0], Integer.parseInt(NettyClient.nettyServer.split(\":\")[1]));\n        channelFuture.addListener(new ConnectionListener()).sync();\n        log.info(\"\u91cd\u65b0\u8fde\u63a5\u4e0a\u4e86\"+NettyClient.getKeyByValue(NettyClient.nettyServer));\n        //\u91cd\u65b0\u8fde\u63a5\u540echannel\u4f1a\u6539\u53d8\n        NettyClient.channel=channelFuture.channel();\n        //System.out.println(\"channel:\"+NettyClient.channel);\n\n        //\u56e0\u4e3a\u9632\u6b62\u53ea\u6709\u4e00\u4e2aserver\u8282\u70b9\uff0c\u6240\u4ee5\u91cd\u65b0\u6ce8\u518c\u670d\u52a1\uff0c\u8981\u53bb\u91cd!!!\n        nacosNamingService.registerInstance(discoveryProperties.getService(), discoveryProperties.getClusterName(),\n                discoveryProperties.getClientIp(), discoveryProperties.getClientPort(), discoveryProperties.getNamespace());\n\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/client/src/main/java/cn/lzj/nacos/client/netty/handler/ConnectionWatchDog.java", "stars": "34", "class_props": {"extends": "ChannelInboundHandlerAdapter", "implements": ["TimerTask", "ChannelHandlerHolder"], "modifiers": ["public", "abstract"]}}, {"id": 40575, "method_name": "init", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void init() {\n            this.originalConfig = super.getPluginJobConf();\n\n            Integer userConfigedFetchSize = this.originalConfig.getInt(Constant.FETCH_SIZE);\n            if (userConfigedFetchSize != null) {\n                LOG.warn(\"\u5bf9 mysqlreader \u4e0d\u9700\u8981\u914d\u7f6e fetchSize, mysqlreader \u5c06\u4f1a\u5ffd\u7565\u8fd9\u9879\u914d\u7f6e. \u5982\u679c\u60a8\u4e0d\u60f3\u518d\u770b\u5230\u6b64\u8b66\u544a,\u8bf7\u53bb\u9664fetchSize \u914d\u7f6e.\");\n            }\n\n            this.originalConfig.set(Constant.FETCH_SIZE, Integer.MIN_VALUE);\n\n            this.commonRdbmsReaderJob = new CommonRdbmsReader.Job(DATABASE_TYPE);\n            this.commonRdbmsReaderJob.init(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40576, "method_name": "preCheck", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void preCheck() {\n            init();\n            this.commonRdbmsReaderJob.preCheck(this.originalConfig, DATABASE_TYPE);\n\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40577, "method_name": "split", "class_name": "Job", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "List<Configuration>", "snippet": "        public List<Configuration> split(int adviceNumber) {\n            return this.commonRdbmsReaderJob.split(this.originalConfig, adviceNumber);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40578, "method_name": "post", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void post() {\n            this.commonRdbmsReaderJob.post(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40579, "method_name": "destroy", "class_name": "Job", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void destroy() {\n            this.commonRdbmsReaderJob.destroy(this.originalConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40580, "method_name": "init", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void init() {\n            this.readerSliceConfig = super.getPluginJobConf();\n            this.commonRdbmsReaderTask = new CommonRdbmsReader.Task(DATABASE_TYPE, super.getTaskGroupId(), super.getTaskId());\n            this.commonRdbmsReaderTask.init(this.readerSliceConfig);\n\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40581, "method_name": "startRead", "class_name": "Task", "params": ["RecordSender"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void startRead(RecordSender recordSender) {\n            int fetchSize = this.readerSliceConfig.getInt(Constant.FETCH_SIZE);\n\n            this.commonRdbmsReaderTask.startRead(this.readerSliceConfig, recordSender,\n                    super.getTaskPluginCollector(), fetchSize);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40582, "method_name": "post", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void post() {\n            this.commonRdbmsReaderTask.post(this.readerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40583, "method_name": "destroy", "class_name": "Task", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void destroy() {\n            this.commonRdbmsReaderTask.destroy(this.readerSliceConfig);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-mysqlreader/src/main/java/com/alibaba/datax/plugin/reader/mysqlreader/MysqlReader.java", "stars": "23", "class_props": {"extends": "Reader", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40584, "method_name": "newInstance", "class_name": "HandshakesFragment", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "HandshakesFragment", "snippet": "\tpublic static HandshakesFragment newInstance() {\n\t\treturn new HandshakesFragment();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/handshakes/HandshakesFragment.java", "stars": "139", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40585, "method_name": "onCreateView", "class_name": "HandshakesFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\tpublic View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container,\n\t\t\t@Nullable Bundle savedInstanceState) {\n\t\treturn inflater.inflate(R.layout.fragment_handshakes, container, false);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/handshakes/HandshakesFragment.java", "stars": "139", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40586, "method_name": "onViewCreated", "class_name": "HandshakesFragment", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\n\t\tsuper.onViewCreated(view, savedInstanceState);\n\n\t\trawHandshakeSwitch = view.findViewById(R.id.raw_handshake_switch);\n\t\thandshakeList = view.findViewById(R.id.handshake_list);\n\n\t\tloadHandshakes(rawHandshakeSwitch.isChecked());\n\n\t\trawHandshakeSwitch.setOnCheckedChangeListener((compoundButton, raw) -> loadHandshakes(raw));\n\n\t\tview.findViewById(R.id.refresh).setOnClickListener((v) -> {\n\t\t\tloadHandshakes(rawHandshakeSwitch.isChecked());\n\t\t});\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/handshakes/HandshakesFragment.java", "stars": "139", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40587, "method_name": "loadHandshakes", "class_name": "HandshakesFragment", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void loadHandshakes(boolean raw) {\n\t\thandshakeList.setText(\"Loading...\");\n\t\tnew Database(getContext()).getHandshakes(response -> {\n\t\t\tStringBuilder stringBuilder = new StringBuilder();\n\t\t\tSimpleDateFormat sdf = new SimpleDateFormat(\"dd.MM HH:mm:ss\");\n\t\t\tif (raw) {\n\t\t\t\tCollections.sort(response, (h1, h2) -> Long.compare(h2.getTimestamp(), h1.getTimestamp()));\n\t\t\t\tfor (Handshake handShake : response) {\n\t\t\t\t\tstringBuilder.append(sdf.format(new Date(handShake.getTimestamp())));\n\t\t\t\t\tstringBuilder.append(\" \");\n\t\t\t\t\tstringBuilder\n\t\t\t\t\t\t\t.append(new String(handShake.getEphId().getData()).substring(0, 10));\n\t\t\t\t\tstringBuilder.append(\"...\");\n\t\t\t\t\tstringBuilder.append(\" TxPowerLevel: \");\n\t\t\t\t\tstringBuilder.append(handShake.getTxPowerLevel());\n\t\t\t\t\tstringBuilder.append(\" RSSI:\");\n\t\t\t\t\tstringBuilder.append(handShake.getRssi());\n\t\t\t\t\tstringBuilder.append(\"\\n\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (HandshakeInterval interval : mergeHandshakes(response)) {\n\t\t\t\t\tstringBuilder.append(sdf.format(new Date(interval.starttime)));\n\t\t\t\t\tstringBuilder.append(\" - \");\n\t\t\t\t\tstringBuilder.append(sdf.format(new Date(interval.endtime)));\n\t\t\t\t\tstringBuilder.append(\"\\n\");\n\t\t\t\t\tstringBuilder.append(interval.identifier);\n\t\t\t\t\tstringBuilder.append(\" Handshakes: \");\n\t\t\t\t\tstringBuilder.append(interval.count);\n\t\t\t\t\tstringBuilder.append(\" / \");\n\t\t\t\t\tstringBuilder.append(interval.expectedCount);\n\t\t\t\t\tstringBuilder.append(\"\\n\\n\");\n\t\t\t\t}\n\t\t\t}\n\t\t\thandshakeList.setText(stringBuilder.toString());\n\t\t});\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/handshakes/HandshakesFragment.java", "stars": "139", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40588, "method_name": "mergeHandshakes", "class_name": "HandshakesFragment", "params": ["List<Handshake>"], "throws": null, "modifiers": ["private"], "return_type": "List<HandshakeInterval>", "snippet": "\tprivate List<HandshakeInterval> mergeHandshakes(List<Handshake> handshakes) {\n\n\t\tHashMap<String, List<Handshake>> groupedHandshakes = new HashMap<>();\n\t\tfor (Handshake handshake : handshakes) {\n\t\t\tbyte[] head = new byte[4];\n\t\t\tfor (int i = 0; i < 4; i++) {\n\t\t\t\thead[i] = handshake.getEphId().getData()[i];\n\t\t\t}\n\t\t\tString identifier = new String(head);\n\t\t\tif (!groupedHandshakes.containsKey(identifier)) {\n\t\t\t\tgroupedHandshakes.put(identifier, new ArrayList<>());\n\t\t\t}\n\t\t\tgroupedHandshakes.get(identifier).add(handshake);\n\t\t}\n\n\t\tlong scanInterval = AppConfigManager.getInstance(getContext()).getScanInterval();\n\t\tlong scanDuration = AppConfigManager.getInstance(getContext()).getScanDuration();\n\t\tList<HandshakeInterval> result = new ArrayList<>();\n\t\tfor (Map.Entry<String, List<Handshake>> entry : groupedHandshakes.entrySet()) {\n\t\t\tCollections.sort(entry.getValue(), (h1, h2) -> Long.compare(h1.getTimestamp(), h2.getTimestamp()));\n\t\t\tint start = 0;\n\t\t\tint end = 1;\n\t\t\twhile (end < entry.getValue().size()) {\n\t\t\t\tif (entry.getValue().get(end).getTimestamp() - entry.getValue().get(end - 1).getTimestamp() >\n\t\t\t\t\t\tMAX_NUMBER_OF_MISSING_HANDSHAKES * scanInterval) {\n\t\t\t\t\tHandshakeInterval interval = new HandshakeInterval();\n\t\t\t\t\tinterval.identifier = entry.getKey();\n\t\t\t\t\tinterval.starttime = entry.getValue().get(start).getTimestamp();\n\t\t\t\t\tinterval.endtime = entry.getValue().get(end - 1).getTimestamp();\n\t\t\t\t\tinterval.count = end - start;\n\t\t\t\t\tinterval.expectedCount =\n\t\t\t\t\t\t\t1 + (int) Math\n\t\t\t\t\t\t\t\t\t.ceil((interval.endtime - interval.starttime) * 1.0 / scanInterval) *\n\t\t\t\t\t\t\t\t\t((int) scanDuration / 5120);\n\t\t\t\t\tresult.add(interval);\n\t\t\t\t\tstart = end;\n\t\t\t\t}\n\t\t\t\tend++;\n\t\t\t}\n\n\t\t\tHandshakeInterval interval = new HandshakeInterval();\n\t\t\tinterval.identifier = entry.getKey();\n\t\t\tinterval.starttime = entry.getValue().get(start).getTimestamp();\n\t\t\tinterval.endtime = entry.getValue().get(end - 1).getTimestamp();\n\t\t\tinterval.count = end - start;\n\t\t\tinterval.expectedCount =\n\t\t\t\t\t1 + (int) Math.ceil((interval.endtime - interval.starttime) * 1.0 / scanInterval) *\n\t\t\t\t\t\t\t((int) scanDuration / 5120);\n\t\t\tresult.add(interval);\n\t\t}\n\n\t\tCollections.sort(result, (i1, i2) -> Long.compare(i2.endtime, i1.endtime));\n\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/handshakes/HandshakesFragment.java", "stars": "139", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40589, "method_name": "euclideanTo", "class_name": "Coord", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double euclideanTo(int x, int y) {\n        return Math.sqrt(sqrEuclideanTo(x, y));\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40590, "method_name": "sqrEuclideanTo", "class_name": "Coord", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "double", "snippet": "    private double sqrEuclideanTo(int x, int y) {\n        return Math.pow(x - this.x, 2) + Math.pow(y - this.y, 2);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40591, "method_name": "hashCode", "class_name": "Coord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n        final int prime = 31;\n        int result = 1;\n        result = prime * result + x;\n        result = prime * result + y;\n        return result;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40592, "method_name": "equals", "class_name": "Coord", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(Object obj) {\n        if (this == obj) return true;\n        if (obj == null) return false;\n        Coord other = (Coord) obj;\n        if (x != other.x) return false;\n        if (y != other.y) return false;\n        return true;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40593, "method_name": "toString", "class_name": "Coord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"(\" + x + \", \" + y + \")\";\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40594, "method_name": "getX", "class_name": "Coord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getX() {\n        return x;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40595, "method_name": "getY", "class_name": "Coord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getY() {\n        return y;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40596, "method_name": "manhattanTo", "class_name": "Coord", "params": ["Coord"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int manhattanTo(Coord other) {\n        return manhattanTo(other.x, other.y);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40597, "method_name": "chebyshevTo", "class_name": "Coord", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int chebyshevTo(int x, int y) {\n        return Math.max(Math.abs(x - this.x), Math.abs(y - this.y));\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40598, "method_name": "manhattanTo", "class_name": "Coord", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int manhattanTo(int x, int y) {\n        return Math.abs(x - this.x) + Math.abs(y - this.y);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40599, "method_name": "add", "class_name": "Coord", "params": ["Coord"], "throws": null, "modifiers": ["public"], "return_type": "Coord", "snippet": "    public Coord add(Coord d) {\n        return new Coord(x + d.x, y + d.y);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40600, "method_name": "subtract", "class_name": "Coord", "params": ["Coord"], "throws": null, "modifiers": ["public"], "return_type": "Coord", "snippet": "    public Coord subtract(Coord d) {\n        return new Coord(x - d.x, y - d.y);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40601, "method_name": "euclideanTo", "class_name": "Coord", "params": ["Coord"], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double euclideanTo(Coord d) {\n        return euclideanTo(d.x, d.y);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40602, "method_name": "getUnitVector", "class_name": "Coord", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Coord", "snippet": "    public Coord getUnitVector() {\n        int newX = this.x == 0 ? 0 : this.x / Math.abs(this.x);\n        int newY = this.y == 0 ? 0 : this.y / Math.abs(this.y);\n        return new Coord(newX, newY);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/spring2020/Coord.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40603, "method_name": "getELFSymbol", "class_name": "ElfSymbolStructure", "params": ["int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "ElfSymbol", "snippet": "    public ElfSymbol getELFSymbol(int index) throws IOException {\n        return new ElfSymbol(parser, offset + index * entrySize, -1).setStringTable(stringTable.getValue());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/net/fornwall/jelf/ElfSymbolStructure.java", "stars": "16", "class_props": {"extends": null, "implements": ["SymbolLocator"], "modifiers": ["public"]}}, {"id": 40604, "method_name": "getELFSymbolByName", "class_name": "ElfSymbolStructure", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "ElfSymbol", "snippet": "    public ElfSymbol getELFSymbolByName(String name) throws IOException {\n        if (hashTable == null) {\n            return null;\n        }\n        return hashTable.getValue().getSymbol(this, name);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/net/fornwall/jelf/ElfSymbolStructure.java", "stars": "16", "class_props": {"extends": null, "implements": ["SymbolLocator"], "modifiers": ["public"]}}, {"id": 40605, "method_name": "run", "class_name": "Producer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        for(int x=0;x<100;x++){\n            if(x%2==0){\n                /**\n                this.msg.setContent(\"\u5b87\u5b99\u5927\u5e05\u54e5\");\n                try {\n                    Thread.sleep(100);  //\u6a21\u62df\u5ef6\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                this.msg.setTitle(\"\u80e1\u5fd7\u8d85\");\n            }else {\n                this.msg.setTitle(\"\u4faf\u5fd7\u521a\");\n                try {\n                    Thread.sleep(100);  //\u6a21\u62df\u5ef6\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                this.msg.setContent(\"\u7325\u7410\u7b2c\u4e00\u4eba\");*/\n                this.msg.set(\"\u80e1\u5fd7\u8d85\",\"\u5b87\u5b99\u5927\u5e05\u54e5\");\n\n            }else {\n                this.msg.set(\"\u4faf\u5fd7\u521a\",\"\u7325\u7410\u7b2c\u4e00\u4eba\");\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/ProducerConsumer.java", "stars": "10", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": []}}, {"id": 40606, "method_name": "run", "class_name": "Consumer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        for(int x=0;x<100;x++){\n            /**\n            try {\n                Thread.sleep(10);  //\u6a21\u62df\u5ef6\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            }\n            System.out.println(this.msg.getTitle()+\"\u662f\u4e00\u4e2a\"+this.msg.getContent());*/\n            System.out.println(this.msg.get());\n        }\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/ProducerConsumer.java", "stars": "10", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": []}}, {"id": 40607, "method_name": "set", "class_name": "Message", "params": ["String", "String"], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "    public synchronized void set(String title,String content){\n\n        if(!this.flag){\n            try {\n                super.wait();\n            }catch (InterruptedException e){\n                e.printStackTrace();\n            }\n        }\n        this.content=content;\n        try {\n            Thread.sleep(100);\n        }catch (InterruptedException e){\n            e.printStackTrace();\n        }\n        this.title=title;\n        this.flag = false;\n        super.notify();\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/ProducerConsumer.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40608, "method_name": "get", "class_name": "Message", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "String", "snippet": "    public synchronized String get(){\n        if(this.flag){\n            try {\n                super.wait();\n            }catch (InterruptedException e){\n                e.printStackTrace();\n            }\n        }\n        try {\n            Thread.sleep(10);\n        }catch (InterruptedException e){\n            e.printStackTrace();\n        }\n        try {\n            return this.title + \"---\" + this.content;\n        }finally {\n            this.flag = true;\n            super.notify();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/ProducerConsumer.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 40609, "method_name": "main", "class_name": "ProducerConsumer", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) throws Exception{\n        Message msg = new Message();\n        new Thread((new Producer(msg))).start();\n        new Thread((new Consumer(msg))).start();\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/ProducerConsumer.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40610, "method_name": "onDraw", "class_name": "ArrayList", "params": ["ScaledResolution"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDraw(ScaledResolution scaledResolution) {\n        super.onDraw(scaledResolution);\n        if (mc.world == null || mc.player == null)\n            return;\n        boolean compensateEffect = effects && ((getY() + getH() / 2) > scaledResolution.getScaledHeight() / 2) && ((getX() + getW() / 2) > scaledResolution.getScaledWidth() / 2) && mc.player.getActivePotionEffects().size() > 0;\n        float compensatedY = 0;\n        if (compensateEffect) {\n            boolean bad = false, good = false;\n            for (PotionEffect effect : mc.player.getActivePotionEffects()) {\n                if (effect.getPotion().isBadEffect()) {\n                    bad = true;\n                } else {\n                    good = true;\n                }\n            }\n            if (good)\n                compensatedY += 25;\n            if (bad)\n                compensatedY += 25;\n        }\n        float y = getY() + (compensateEffect ? compensatedY : 0);\n        sorted.sort(Comparator.comparingDouble(m -> -font.getStringWidth(getLabel(m))));\n        for (Module module : sorted) {\n            if (module.isEnabled() && !module.isHidden()) {\n                font.drawStringWithShadow(getLabel(module), getX() + ((getX() + getW() / 2) > scaledResolution.getScaledWidth() / 2 ? (getW() - font.getStringWidth(getLabel(module))) : 0), y + ((getY() + getH() / 2) > scaledResolution.getScaledHeight() / 2 ? getH() - font.getHeight() : 0), rainbow ? getRainbow(6000, (int) (y * 30), 0.85f): -1);\n                y += ((getY() + getH() / 2) > scaledResolution.getScaledHeight() / 2) ? -(font.getHeight() + 1) : font.getHeight() + 1;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/hudcomponents/ArrayList.java", "stars": "12", "class_props": {"extends": "HudComponent", "implements": null, "modifiers": ["public"]}}, {"id": 40611, "method_name": "getRainbow", "class_name": "ArrayList", "params": ["int", "int", "float"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getRainbow(int speed, int offset,float s) {\n        float hue = (System.currentTimeMillis() + offset) % speed;\n        hue /= speed;\n        return Color.getHSBColor(hue, s, 1f).getRGB();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/hudcomponents/ArrayList.java", "stars": "12", "class_props": {"extends": "HudComponent", "implements": null, "modifiers": ["public"]}}, {"id": 40612, "method_name": "getLabel", "class_name": "ArrayList", "params": ["Module"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLabel(Module module) {\n        StringBuilder string = new StringBuilder((module.getFakeLabel() != null && module.getFakeLabel().equals(\"\")) ? module.getLabel() : module.getFakeLabel());\n        if (module.getSuffix() != null && !module.getSuffix().equals(\"\"))\n            string.append(\" \").append(ChatFormatting.GRAY + module.getSuffix());\n        return string.toString();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/hudcomponents/ArrayList.java", "stars": "12", "class_props": {"extends": "HudComponent", "implements": null, "modifiers": ["public"]}}, {"id": 40613, "method_name": "checkingByDescribe", "class_name": "CheckingController", "params": ["CaseDto"], "throws": null, "modifiers": ["public"], "return_type": "DeferredResult", "snippet": "    public DeferredResult checkingByDescribe(@RequestBody CaseDto describe){\n        return checkingService.checkCaseMoreLikeThis(describe.getDescribe());\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/controller/CheckingController.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40614, "method_name": "insertgroup", "class_name": "Dbadapter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\t public String insertgroup(String gname) \n\t    {\n\t\t db = dbhelper.getWritableDatabase();\n\t        ContentValues initialValues = new ContentValues();\n\t        initialValues.put(\"group_name\",gname);\n\t         db.insert(DB_table, null, initialValues);\n\t         return gname;\n\t    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/gsondemo/src/com/example/gsondemo/Dbadapter.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 40615, "method_name": "onCreate", "class_name": "DatabaseHelper", "params": ["SQLiteDatabase"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t        public void onCreate(SQLiteDatabase db) \n\t        {\n\t            db.execSQL(DATABASE_CREATE);\n\t        }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/gsondemo/src/com/example/gsondemo/Dbadapter.java", "stars": "74", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["static", "private"]}}, {"id": 40616, "method_name": "onUpgrade", "class_name": "DatabaseHelper", "params": ["SQLiteDatabase", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\t\tpublic void onUpgrade(SQLiteDatabase db, int arg1, int arg2) {\n\t\t\t\t// TODO Auto-generated method stub\n\t\t\t\tdb.execSQL(\"DROP TABLE IF EXIST Info\");\n\t\t\t\tonCreate(db);\n\t\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/gsondemo/src/com/example/gsondemo/Dbadapter.java", "stars": "74", "class_props": {"extends": "SQLiteOpenHelper", "implements": null, "modifiers": ["static", "private"]}}, {"id": 40617, "method_name": "getHostId", "class_name": "LocalHostIdSupplier", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getHostId()\n    {\n        return HOST_ID_SUPPLIER.get();\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/utils/LocalHostIdSupplier.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40618, "method_name": "getAzkaban", "class_name": "UserManagerResource", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AzkabanWebServer", "snippet": "  public AzkabanWebServer getAzkaban() {\n    return AzkabanWebServer.getInstance();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/restli/java/azkaban/restli/UserManagerResource.java", "stars": "18", "class_props": {"extends": "ResourceContextHolder", "implements": null, "modifiers": ["public"]}}, {"id": 40619, "method_name": "login", "class_name": "UserManagerResource", "params": ["String", "String"], "throws": ["UserManagerException", "ServletException"], "modifiers": ["public"], "return_type": "String", "snippet": "  public String login(@ActionParam(\"username\") final String username,\n      @ActionParam(\"password\") final String password) throws UserManagerException,\n      ServletException {\n    final String ip = ResourceUtils.getRealClientIpAddr(this.getContext());\n    logger\n        .info(\"Attempting to login for \" + username + \" from ip '\" + ip + \"'\");\n\n    final Session session = createSession(username, password, ip);\n\n    logger.info(\"Session id created for user '\" + username + \"' and ip \" + ip);\n    return session.getSessionId();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/restli/java/azkaban/restli/UserManagerResource.java", "stars": "18", "class_props": {"extends": "ResourceContextHolder", "implements": null, "modifiers": ["public"]}}, {"id": 40620, "method_name": "getUserFromSessionId", "class_name": "UserManagerResource", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "  public User getUserFromSessionId(@ActionParam(\"sessionId\") final String sessionId) {\n    final Session session = getSessionFromSessionId(sessionId);\n    final azkaban.user.User azUser = session.getUser();\n\n    // Fill out the restli object with properties from the Azkaban user\n    final User user = new User();\n    user.setUserId(azUser.getUserId());\n    user.setEmail(azUser.getEmail());\n    return user;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/restli/java/azkaban/restli/UserManagerResource.java", "stars": "18", "class_props": {"extends": "ResourceContextHolder", "implements": null, "modifiers": ["public"]}}, {"id": 40621, "method_name": "createSession", "class_name": "UserManagerResource", "params": ["String", "String", "String"], "throws": ["UserManagerException", "ServletException"], "modifiers": ["private"], "return_type": "Session", "snippet": "  private Session createSession(final String username, final String password, final String ip)\n      throws UserManagerException, ServletException {\n    final UserManager manager = getAzkaban().getTransitionService().getUserManager();\n    final azkaban.user.User user = manager.getUser(username, password);\n\n    final String randomUID = UUID.randomUUID().toString();\n    final Session session = new Session(randomUID, user, ip);\n    getAzkaban().getSessionCache().addSession(session);\n\n    return session;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/restli/java/azkaban/restli/UserManagerResource.java", "stars": "18", "class_props": {"extends": "ResourceContextHolder", "implements": null, "modifiers": ["public"]}}, {"id": 40622, "method_name": "getSessionFromSessionId", "class_name": "UserManagerResource", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Session", "snippet": "  private Session getSessionFromSessionId(final String sessionId) {\n    if (sessionId == null) {\n      return null;\n    }\n\n    return getAzkaban().getSessionCache().getSession(sessionId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/restli/java/azkaban/restli/UserManagerResource.java", "stars": "18", "class_props": {"extends": "ResourceContextHolder", "implements": null, "modifiers": ["public"]}}, {"id": 40623, "method_name": "insertOrUpdate", "class_name": "SqlWrapperUtils", "params": ["String", "List<String>", "List<Object>", "List<Object>", "List<Object>"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String insertOrUpdate(String tableName, List<String> tableColumns, List<Object> valueColumns,\n                                 List<Object> destKeys, List<Object> destvalues) {\n        StringBuilder builder = new StringBuilder();\n        builder.append(DESC_INSERT).append(tableName);\n\n        // \u62fc\u63a5\u5b57\u6bb5\n        StringJoiner paramsStr = new StringJoiner(\"`,`\", \"(`\", \"`)\");\n        tableColumns.forEach(paramsStr::add);\n        builder.append(paramsStr.toString()).append(DESC_VALUES);\n\n        StringJoiner valuesStr = new StringJoiner(\",\", \"(\", \")\");\n        for (Object valueColumn : valueColumns) {\n            StringBuilder valueParamBuilder = new StringBuilder();\n            // \u83b7\u53d6\u5c5e\u6027\u7c7b\u578b\n            String filedType = valueColumn.getClass().getSimpleName();\n\n            // \u5c5e\u6027\u5224\u65ad\n            if (filedType.equals(\"Integer\") || filedType.equals(\"Long\")) {\n                valueParamBuilder.append(valueColumn);\n            } else if (filedType.equals(\"String\") || filedType.equals(\"Boolean\")) {\n                valueParamBuilder.append(\"'\").append(valueColumn).append(\"'\");\n            }\n            valuesStr.add(valueParamBuilder);\n        }\n        // \u62fc\u63a5\u5b57\u6bb5\u503c\n        builder.append(valuesStr.toString()).append(DESC_INSERT_OR_UPDATE);\n\n        StringJoiner kvStr = new StringJoiner(\",\", \"\", \"\");\n        for (int i = 0; i < destKeys.size(); i++) {\n            StringBuilder kvBuilder = new StringBuilder();\n            kvBuilder.append(destKeys.get(i)).append(\"=\");\n            // \u5c5e\u6027\u5224\u65ad\n            Object value = destvalues.get(i);\n            String filedValueType = value.getClass().getSimpleName();\n            // \u5c5e\u6027\u5224\u65ad\n            if (filedValueType.equals(\"Integer\") || filedValueType.equals(\"Long\")) {\n                kvBuilder.append(value);\n            } else if (filedValueType.equals(\"String\") || filedValueType.equals(\"Boolean\")) {\n                kvBuilder.append(\"'\").append(value).append(\"'\");\n            }\n            kvStr.add(kvBuilder);\n        }\n        // \u62fc\u63a5\u9700\u8981\u63d2\u5165\u6216\u8005\u4fee\u6539\u7684\u503c\n        builder.append(kvStr.toString()).append(\";\");\n\n        return builder.toString();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/utils/SqlWrapperUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40624, "method_name": "getWSContractStatusMonitor", "class_name": "WSContractStatusMonitor_Service", "params": [], "throws": null, "modifiers": ["public"], "return_type": "WSContractStatusMonitor", "snippet": "    public WSContractStatusMonitor getWSContractStatusMonitor() {\n        return super.getPort(new QName(\"http://common.status.contract.kernel.bgbilling.bitel.ru/\", \"WSContractStatusMonitor\"), WSContractStatusMonitor.class);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/status51/WSContractStatusMonitor_Service.java", "stars": "12", "class_props": {"extends": "Service", "implements": null, "modifiers": ["public"]}}, {"id": 40625, "method_name": "getWSContractStatusMonitor", "class_name": "WSContractStatusMonitor_Service", "params": ["WebServiceFeature"], "throws": null, "modifiers": ["public"], "return_type": "WSContractStatusMonitor", "snippet": "    public WSContractStatusMonitor getWSContractStatusMonitor(WebServiceFeature... features) {\n        return super.getPort(new QName(\"http://common.status.contract.kernel.bgbilling.bitel.ru/\", \"WSContractStatusMonitor\"), WSContractStatusMonitor.class, features);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/status51/WSContractStatusMonitor_Service.java", "stars": "12", "class_props": {"extends": "Service", "implements": null, "modifiers": ["public"]}}, {"id": 40626, "method_name": "__getWsdlLocation", "class_name": "WSContractStatusMonitor_Service", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "URL", "snippet": "    private static URL __getWsdlLocation() {\n        if (WSCONTRACTSTATUSMONITOR_EXCEPTION!= null) {\n            throw WSCONTRACTSTATUSMONITOR_EXCEPTION;\n        }\n        return WSCONTRACTSTATUSMONITOR_WSDL_LOCATION;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/contract/status51/WSContractStatusMonitor_Service.java", "stars": "12", "class_props": {"extends": "Service", "implements": null, "modifiers": ["public"]}}, {"id": 40627, "method_name": "lMap", "class_name": "Left", "params": ["Function<L,LL>"], "throws": null, "modifiers": ["public"], "return_type": "Either<LL,R>", "snippet": "    public <LL> Either<LL, R> lMap(Function<L, LL> func) {\n      return new Left<>(func.apply(left));\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40628, "method_name": "lFlatMap", "class_name": "Left", "params": ["Function<L,Either>"], "throws": null, "modifiers": ["public"], "return_type": "Either<LL,R>", "snippet": "    public <LL> Either<LL, R> lFlatMap(Function<L, Either<LL, R>> func) {\n      return func.apply(left);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40629, "method_name": "rMap", "class_name": "Left", "params": ["Function<R,RR>"], "throws": null, "modifiers": ["public"], "return_type": "Either<L,RR>", "snippet": "    public <RR> Either<L, RR> rMap(Function<R, RR> func) {\n      return (Either<L, RR>) this;\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40630, "method_name": "rFlatMap", "class_name": "Left", "params": ["Function<R,Either>"], "throws": null, "modifiers": ["public"], "return_type": "Either<L,RR>", "snippet": "    public <RR> Either<L, RR> rFlatMap(Function<R, Either<L, RR>> func) {\n      return (Either<L, RR>) this;\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40631, "method_name": "fold", "class_name": "Left", "params": ["Function<L,A>", "Function<R,A>"], "throws": null, "modifiers": ["public"], "return_type": "A", "snippet": "    public <A> A fold(Function<L, A> leftMap, Function<R, A> rightMap) {\n      return leftMap.apply(left);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40632, "method_name": "isLeft", "class_name": "Left", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLeft() {\n      return true;\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40633, "method_name": "leftOption", "class_name": "Left", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Option<L>", "snippet": "    public Option<L> leftOption() {\n      return Option.some(left);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40634, "method_name": "rightOption", "class_name": "Left", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Option<R>", "snippet": "    public Option<R> rightOption() {\n      return Option.none();\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40635, "method_name": "lMap", "class_name": "Right", "params": ["Function<L,LL>"], "throws": null, "modifiers": ["public"], "return_type": "Either<LL,R>", "snippet": "    public <LL> Either<LL, R> lMap(Function<L, LL> func) {\n      return (Either<LL, R>) this;\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40636, "method_name": "lFlatMap", "class_name": "Right", "params": ["Function<L,Either>"], "throws": null, "modifiers": ["public"], "return_type": "Either<LL,R>", "snippet": "    public <LL> Either<LL, R> lFlatMap(Function<L, Either<LL, R>> func) {\n      return (Either<LL, R>) this;\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40637, "method_name": "rMap", "class_name": "Right", "params": ["Function<R,RR>"], "throws": null, "modifiers": ["public"], "return_type": "Either<L,RR>", "snippet": "    public <RR> Either<L, RR> rMap(Function<R, RR> func) {\n      return new Right<>(func.apply(right));\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40638, "method_name": "rFlatMap", "class_name": "Right", "params": ["Function<R,Either>"], "throws": null, "modifiers": ["public"], "return_type": "Either<L,RR>", "snippet": "    public <RR> Either<L, RR> rFlatMap(Function<R, Either<L, RR>> func) {\n      return func.apply(right);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40639, "method_name": "fold", "class_name": "Right", "params": ["Function<L,A>", "Function<R,A>"], "throws": null, "modifiers": ["public"], "return_type": "A", "snippet": "    public <A> A fold(Function<L, A> leftMap, Function<R, A> rightMap) {\n      return rightMap.apply(right);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40640, "method_name": "isLeft", "class_name": "Right", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLeft() {\n      return false;\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40641, "method_name": "leftOption", "class_name": "Right", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Option<L>", "snippet": "    public Option<L> leftOption() {\n      return Option.none();\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40642, "method_name": "rightOption", "class_name": "Right", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Option<R>", "snippet": "    public Option<R> rightOption() {\n      return Option.some(right);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Either.java", "stars": "11", "class_props": {"extends": null, "implements": ["Either"], "modifiers": []}}, {"id": 40643, "method_name": "getId", "class_name": "LazyObjectBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazy_deserialize/LazyObjectBar.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 40644, "method_name": "setId", "class_name": "LazyObjectBar", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setId(Integer id) {\n    this.id = id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazy_deserialize/LazyObjectBar.java", "stars": "15", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 40645, "method_name": "visitMethodInsn", "class_name": "JroutineMethodAnalyzer", "params": ["int", "String", "String", "String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void visitMethodInsn(int opcodeAndSource, String owner, String name, String descriptor,\n            boolean isInterface) {\n        // maybe it can be ignored, because the api has always been Opcodes.ASM8?\n        if (api < Opcodes.ASM5 && (opcodeAndSource & Opcodes.SOURCE_DEPRECATED) == 0) {\n            super.visitMethodInsn(opcodeAndSource, owner, name, descriptor, isInterface);\n            return;\n        }\n\n        int opcode = opcodeAndSource & ~Opcodes.SOURCE_MASK;\n        MethodInsnNode mn = new MethodInsnNode(opcode, owner, name, descriptor, isInterface);\n        // navigate to the instruction where the object needs to be created\n        if (opcode == INVOKESPECIAL || \"<init>\".equals(name)) {\n            methods.add(mn);\n        }\n\n        // support multiple extension types, which have different degrees of impact on\n        // execution efficiency\n        if (isSuspendableInsn(opcode, name)) {\n            Label label = new Label();\n            super.visitLabel(label);\n            labels.add(label);\n            nodes.add(mn);\n        }\n\n        instructions.add(mn);\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40646, "method_name": "visitEnd", "class_name": "JroutineMethodAnalyzer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void visitEnd() {\n        if (instructions.size() == 0 || labels.size() == 0) {\n            accept(mv);\n            return;\n        }\n\n        operandStackRecorderVar = maxLocals;\n\n        try {\n            HashMap<AbstractInsnNode, MethodInsnNode> promotableVars = null;\n            if ((promotableVars = findPromotableVars()).size() > 0) {\n                promoteVars(promotableVars);\n            }\n\n            //\n            basicAnalyzer = new Analyzer<BasicValue>(new SimpleVerifier()) {\n\n                protected Frame<BasicValue> newFrame(final int nLocals, final int nStack) {\n                    return new MonitoringFrame(nLocals, nStack);\n                }\n\n                @SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n                protected Frame<BasicValue> newFrame(final Frame src) {\n                    return new MonitoringFrame(src);\n                }\n            };\n            basicAnalyzer.analyze(className, this);\n\n            accept(new JroutineMethodAdapter(this));\n        } catch (AnalyzerException e) {\n            logger.error(e.getMessage(), e);\n            e.printStackTrace();\n            accept(mv);\n        }\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40647, "method_name": "getLabelNode", "class_name": "JroutineMethodAnalyzer", "params": ["Label"], "throws": null, "modifiers": ["protected"], "return_type": "LabelNode", "snippet": "    protected LabelNode getLabelNode(Label label) {\n        if (!(label.info instanceof LabelNode)) {\n            label.info = new LabelNode(label);\n        }\n        return (LabelNode) label.info;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40648, "method_name": "findPromotableVars", "class_name": "JroutineMethodAnalyzer", "params": [], "throws": ["AnalyzerException"], "modifiers": ["private"], "return_type": "HashMap<AbstractInsnNode,MethodInsnNode>", "snippet": "    private HashMap<AbstractInsnNode, MethodInsnNode> findPromotableVars() throws AnalyzerException {\n        HashMap<AbstractInsnNode, MethodInsnNode> promotableVars = new HashMap<AbstractInsnNode, MethodInsnNode>();\n\n        Analyzer<SourceValue> sourceAnalyzer = new Analyzer<SourceValue>(new SourceInterpreter());\n        sourceAnalyzer.analyze(className, this);\n\n        Frame<SourceValue>[] frames = sourceAnalyzer.getFrames();\n        for (int i = 0; i < methods.size(); i++) {\n            MethodInsnNode methodInsn = methods.get(i);\n            Frame<SourceValue> frame = frames[instructions.indexOf(methodInsn)];\n            Type[] args = Type.getArgumentTypes(methodInsn.desc);\n\n            SourceValue sourceValue = frame.getStack(frame.getStackSize() - args.length - 1);\n            Set<AbstractInsnNode> insns = sourceValue.insns;\n            for (AbstractInsnNode insn : insns) {\n                if (insn.getOpcode() == NEW) {\n                    promotableVars.put(insn, methodInsn);\n                } else {\n                    if (insn.getOpcode() == DUP) {\n                        AbstractInsnNode prevInsn = insn.getPrevious();\n                        if (prevInsn.getOpcode() == NEW) {\n                            promotableVars.put(prevInsn, methodInsn);\n                        }\n                    } else if (insn.getOpcode() == SWAP) {\n                        AbstractInsnNode insn1 = insn.getPrevious();\n                        AbstractInsnNode insn2 = insn1.getPrevious();\n                        if (insn2.getOpcode() == NEW && insn1.getOpcode() == DUP_X1) {\n                            promotableVars.put(insn2, methodInsn);\n                        }\n                    }\n                }\n            }\n        }\n        return promotableVars;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40649, "method_name": "promoteVars", "class_name": "JroutineMethodAnalyzer", "params": ["HashMap<AbstractInsnNode,MethodInsnNode>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void promoteVars(HashMap<AbstractInsnNode, MethodInsnNode> promotableVars) {\n        int updateMaxStack = 0;\n        for (Map.Entry<AbstractInsnNode, MethodInsnNode> entry : promotableVars.entrySet()) {\n            AbstractInsnNode node1 = entry.getKey();\n            AbstractInsnNode node2 = node1.getNext();\n            AbstractInsnNode node3 = node2.getNext();\n\n            boolean requireDup = false;\n            instructions.remove(node1); // NEW\n            if (node2.getOpcode() == DUP) {\n                instructions.remove(node2); // DUP\n                requireDup = true;\n            } else if (node2.getOpcode() == DUP_X1) {\n                instructions.remove(node2); // DUP_X1\n                instructions.remove(node3); // SWAP\n                requireDup = true;\n            }\n\n            MethodInsnNode mnode = entry.getValue();\n            // FIXME ???\n            AbstractInsnNode mn = mnode;\n\n            int varOffset = operandStackRecorderVar + 1;\n            Type[] args = Type.getArgumentTypes(mnode.desc);\n\n            if (args.length == 0) {\n                InsnList doNew = new InsnList();\n                doNew.add(node1);\n                if (requireDup) {\n                    doNew.add(new InsnNode(DUP));\n                }\n                instructions.insertBefore(mn, doNew);\n                mn = doNew.getLast();\n                continue;\n            }\n\n            if (args.length == 1 && args[0].getSize() == 1) {\n                InsnList doNew = new InsnList();\n                doNew.add(node1);\n                if (requireDup) {\n                    doNew.add(new InsnNode(DUP));\n                    doNew.add(new InsnNode(DUP_X1));\n                    doNew.add(new InsnNode(POP2));\n                    updateMaxStack = updateMaxStack < 2 ? 2 : updateMaxStack;\n                } else {\n                    doNew.add(new InsnNode(SWAP));\n                }\n                instructions.insertBefore(mn, doNew);\n                mn = doNew.getLast();\n                continue;\n            }\n\n            if ((args.length == 1 && args[0].getSize() == 2)\n                    || (args.length == 2 && args[0].getSize() == 1 && args[1].getSize() == 1)) {\n                final InsnList doNew = new InsnList();\n                doNew.add(node1);\n                if (requireDup) {\n                    doNew.add(new InsnNode(DUP));\n                    doNew.add(new InsnNode(DUP2_X2));\n                    doNew.add(new InsnNode(POP2));\n                    updateMaxStack = updateMaxStack < 2 ? 2 : updateMaxStack;\n                } else {\n                    doNew.add(new InsnNode(DUP_X2));\n                    doNew.add(new InsnNode(POP));\n                    updateMaxStack = updateMaxStack < 1 ? 1 : updateMaxStack;\n                }\n                instructions.insertBefore(mn, doNew);\n                mn = doNew.getLast();\n                continue;\n            }\n\n            InsnList doNew = new InsnList();\n            for (int j = args.length - 1; j >= 0; j--) {\n                Type type = args[j];\n\n                doNew.add(new VarInsnNode(type.getOpcode(ISTORE), varOffset));\n                varOffset += type.getSize();\n            }\n            maxLocals = varOffset > maxLocals ? varOffset : maxLocals;\n\n            doNew.add(node1);\n            if (requireDup) {\n                doNew.add(new InsnNode(DUP));\n            }\n\n            for (int j = 0; j < args.length; j++) {\n                Type type = args[j];\n                varOffset -= type.getSize();\n\n                doNew.add(new VarInsnNode(type.getOpcode(ILOAD), varOffset));\n\n                if (type.getSort() == Type.OBJECT || type.getSort() == Type.ARRAY) {\n                    updateMaxStack = updateMaxStack < 1 ? 1 : updateMaxStack;\n\n                    doNew.add(new InsnNode(ACONST_NULL));\n\n                    doNew.add(new VarInsnNode(type.getOpcode(ISTORE), varOffset));\n                }\n            }\n\n            instructions.insertBefore(mn, doNew);\n            mn = doNew.getLast();\n        }\n\n        maxStack += updateMaxStack;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40650, "method_name": "isSuspendableInsn", "class_name": "JroutineMethodAnalyzer", "params": ["int", "String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isSuspendableInsn(int opcode, String name) {\n        if (Configs.getExtensionType() == ExtensionType.METHOD && isMethodInsn(opcode, name)) {\n            return true;\n        }\n        if (Configs.getExtensionType() == ExtensionType.METHOD_AND_LOOP\n                && (isMethodInsn(opcode, name) || isLoopInsn(opcode))) {\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40651, "method_name": "isMethodInsn", "class_name": "JroutineMethodAnalyzer", "params": ["int", "String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isMethodInsn(int opcode, String name) {\n        return opcode == INVOKEINTERFACE || opcode == INVOKEVIRTUAL || opcode == INVOKESTATIC\n                || (opcode == INVOKESPECIAL && !\"<init>\".equals(name));\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40652, "method_name": "isLoopInsn", "class_name": "JroutineMethodAnalyzer", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isLoopInsn(int opcode) {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/main/java/org/coral/jroutine/weave/JroutineMethodAnalyzer.java", "stars": "3", "class_props": {"extends": "MethodNode", "implements": ["Opcodes"], "modifiers": ["public"]}}, {"id": 40653, "method_name": "doTest", "class_name": "MultiSyncTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doTest() {\n//        testTaskSync();\n//        testEventSync();\n//        testPara();\n//        testParaM();\n        tsetSyncUIHybride();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/MultiSyncTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 40654, "method_name": "tsetSyncUIHybride", "class_name": "MultiSyncTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tsetSyncUIHybride() {\n\n        TaskRecorder.deleteRecode(R.id.event_vv);\n\n        getTask(\"A\", 50).dependOn(R.id.event_vv).executeSync();\n        getTask(\"B\", 100).dependOn(R.id.event_vv).executeSync();\n        getTask(\"C\", 150).dependOn(R.id.event_vv).executeSyncUI();\n        getTask(\"D\", 80).dependOn(R.id.event_vv).executeSync();\n        getTask(\"E\", R.id.task_3, 150).dependOn(R.id.event_vv).executeSync();\n        getTask(\"F\", 80).dependOn(R.id.event_vv).executeSync();\n        getTask(\"G\", R.id.task_4, 150).dependOn(R.id.event_vv).executeSyncUI();\n        getTask(\"H\", 80).dependOn(R.id.event_vv).executeSync();\n\n        new Task() {\n\n            @Override\n            public void doTask() {\n                TM.triggerEvent(R.id.event_vv);\n            }\n        }.postAsync();\n\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/MultiSyncTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 40655, "method_name": "testEventSync", "class_name": "MultiSyncTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void testEventSync() {\n\n        int p = 0;\n        while (p < 1) {\n\n            int var = (int) (75 + Math.random() * 10);\n            Task taskA = getTask(\"A\", R.id.task_1, 50);\n            Task taskB = getTask(\"B\", R.id.task_2, 100);\n            Task taskC = getTask(\"C\", R.id.task_3, 150);\n            Task taskD = getTask(\"D\", R.id.task_4, 80);\n\n            // D 1s \u540e\u6267\u884c\n            taskD.postUIDelay(1000);\n\n            //\u4efb\u52a1A \u671f\u671b\u5728\u4efb\u52a1C D \u4e0e \u4e8b\u4ef6vv \u5b8c\u6210\u540e\uff0c\u7acb\u5373\u6267\u884c\n            taskA.dependOn(taskC.getTaskId(), taskD.getTaskId(), R.id.event_vv).executeSync();\n\n\n            // B \u671f\u671b\u518d\u4efb\u52a1D\u5b8c\u6210\u4e0e\u4e8b\u4ef6\u53d1\u751f\u540e\uff0c\u7acb\u5373\u6267\u884c\uff1b\u6216\u8005\u7b49\u5f85 var \u65f6\u95f4\u540e\u6267\u884c\u3002\n            taskB.dependOn(taskD.getTaskId(), R.id.event_vv)\n                    .orDelay(var)\n                    .executeSync();\n\n\n            //C \u671f\u671b\u518d\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u5019\uff0c\u7acb\u5373\u6267\u884c\n            taskC.dependOn(R.id.event_vv)\n                    .executeSync();\n\n\n            //D \u671f\u671b\u518d\u4e8b\u4ef6\u53d1\u751f\u7684\u65f6\u5019\uff0c\u7acb\u5373\u6267\u884c\n            taskD.dependOn(R.id.event_vv).executeSync();\n\n            // \u57281s \u540e\uff0c\u89e6\u53d1\u4efb\u52a1\u6267\u884c\n            new Task() {\n\n                @Override\n                public void doTask() {\n                    loge(\"DemoApp event is triggered !!!! \");\n                    TM.triggerEvent(R.id.event_vv);\n\n                }\n            }.postAsyncDelay(1000);\n\n            p++;\n\n        }\n\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/MultiSyncTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 40656, "method_name": "testPara", "class_name": "MultiSyncTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void testPara() {\n        final Task taskA = getTask(\"A\", 150);\n        final Task taskB = getTask(\"B\", 100);\n        final Task taskC = getTask(\"C\", 150);\n        final Task taskD = getTask(\"D\", 80);\n\n        new ParallelTask()\n                .addSubTask(taskA)\n                .addSubTask(taskB)\n                .addSubTask(taskC)\n                .addSubTask(taskD)\n                .execute();\n\n        log(\"DemoApp run tst papra end\");\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/MultiSyncTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 40657, "method_name": "testTaskSync", "class_name": "MultiSyncTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void testTaskSync() {\n        Task taskA = getTask(\"A\", 80);\n        Task taskB = getTask(\"B\", 190);\n        Task taskC = getTask(\"C\");\n        taskC.postAsync();\n        taskA.dependOn(taskC).executeSync();\n        taskB.dependOn(taskC).executeSync();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/MultiSyncTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 40658, "method_name": "testParaM", "class_name": "MultiSyncTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void testParaM() {\n\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n        getTask(2000).postAsync();\n\n        int p = 0;\n        SumChecker checker = new SumChecker();\n        while (p < 20) {\n            Task taskA = getTask(\"A\", 1).register(checker);\n            Task taskB = getTask(\"B\", time()).register(checker);\n            Task taskC = getTask(\"C\", 790).register(checker);\n            Task taskD = getTask(\"D\", 1000).register(checker);\n            Task taskE = getTask(\"E\", time()).register(checker);\n            Task taskF = getTask(\"F\", 70).register(checker);\n\n\n            new ParallelTask()\n                    .addSubTask(taskA)\n                    .addSubTask(taskB)\n                    .addSubTask(taskC)\n                    .addSubTask(taskD)\n                    .addSubTask(taskE)\n                    .addSubTask(taskF)\n                    .execute();\n\n            checker.verriyfy();\n            Log.d(\"TM_PARA \", \"DONE ----\");\n\n            p++;\n        }\n\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/MultiSyncTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 40659, "method_name": "onCreateView", "class_name": "FragmentResultChangePhone", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_result_change_phone, container, false);\n        ButterKnife.bind(this,rootView);\n\n\n        user = PrefChangePhone.getUser(getActivity());\n\n\n        accountCredentials.setText(\"Phone : \" + user.getPhone()\n                + \"\\nPassword : XXXXX (Password is hidden)\");\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/ChangePhone/FragmentResultChangePhone.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40660, "method_name": "finishButton", "class_name": "FragmentResultChangePhone", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void finishButton()\n    {\n\n        // reset preferences\n        PrefChangePhone.saveUser(null,getActivity());\n\n        getActivity().setResult(10);\n        getActivity().finish();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditProfile/ChangePhone/FragmentResultChangePhone.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40661, "method_name": "getId", "class_name": "SketchwareProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40662, "method_name": "getProjectName", "class_name": "SketchwareProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectName() {\n        return projectName;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40663, "method_name": "getProjectPackage", "class_name": "SketchwareProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectPackage() {\n        return projectPackage;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40664, "method_name": "setId", "class_name": "SketchwareProject", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40665, "method_name": "setProjectName", "class_name": "SketchwareProject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectName(String projectName) {\n        this.projectName = projectName;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40666, "method_name": "setProjectPackage", "class_name": "SketchwareProject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectPackage(String projectPackage) {\n        this.projectPackage = projectPackage;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40667, "method_name": "getIconPath", "class_name": "SketchwareProject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIconPath() {\n        return iconPath;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40668, "method_name": "setIconPath", "class_name": "SketchwareProject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIconPath(String iconPath) {\n        this.iconPath = iconPath;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/item/SketchwareProject.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40669, "method_name": "setBounds", "class_name": "BombardNoSprite", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBounds(int x, int y, int w, int h) {\n        mapX = x;\n        mapY = y;\n        buttonW = w;\n        buttonH = h;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40670, "method_name": "mapX", "class_name": "BombardNoSprite", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int mapX()      { return mapX; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40671, "method_name": "mapY", "class_name": "BombardNoSprite", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int mapY()      { return mapY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40672, "method_name": "mapX", "class_name": "BombardNoSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapX(int i)   { mapX = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40673, "method_name": "mapY", "class_name": "BombardNoSprite", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapY(int i)   { mapY = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40674, "method_name": "reset", "class_name": "BombardNoSprite", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset()       { background = null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40675, "method_name": "parent", "class_name": "BombardNoSprite", "params": ["MapOverlayBombardPrompt"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void parent(MapOverlayBombardPrompt p)  { parent = p; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40676, "method_name": "isSelectableAt", "class_name": "BombardNoSprite", "params": ["GalaxyMapPanel", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSelectableAt(GalaxyMapPanel map, int x, int y) {\n        hovering = x >= mapX\n                    && x <= mapX+buttonW\n                    && y >= mapY()\n                    && y <= mapY()+buttonH;\n\n        return hovering;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40677, "method_name": "draw", "class_name": "BombardNoSprite", "params": ["GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(GalaxyMapPanel map, Graphics2D g) {\n        if (!parent.drawSprites())\n            return;\n        if (background == null) {\n            float[] dist = {0.0f, 0.5f, 1.0f};\n            Point2D yesStart = new Point2D.Float(mapX, 0);\n            Point2D yesEnd = new Point2D.Float(mapX+buttonW, 0);\n            Color[] yesColors = {edgeC, midC, edgeC };\n            background = new LinearGradientPaint(yesStart, yesEnd, dist, yesColors);\n        }\n        int s5 = scaled(5);\n        int s10 = scaled(10);\n        g.setFont(narrowFont(20));\n        String str = text(\"MAIN_BOMBARD_NO\");\n        int sw = g.getFontMetrics().stringWidth(str);\n        g.setPaint(background);\n        g.fillRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        Color c0 = hovering ? SystemPanel.yellowText : Color.white;\n        g.setColor(c0);\n        Stroke prevStr =g.getStroke();\n        g.setStroke(BasePanel.stroke2);\n        g.drawRoundRect(mapX, mapY, buttonW,buttonH,s5,s5);\n        g.setStroke(prevStr);\n        int x2a = mapX+((buttonW-sw)/2);\n        drawBorderedString(g, str, x2a, mapY+buttonH-s10, SystemPanel.textShadowC, c0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40678, "method_name": "click", "class_name": "BombardNoSprite", "params": ["GalaxyMapPanel", "int", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void click(GalaxyMapPanel map, int count, boolean rightClick, boolean click) {\n        if (click)\n            softClick();\n        parent.bombardCancel();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/sprites/BombardNoSprite.java", "stars": "74", "class_props": {"extends": "MapSprite", "implements": null, "modifiers": ["public"]}}, {"id": 40679, "method_name": "setApplicationContext", "class_name": "ApplicationContextRegister", "params": ["ApplicationContext"], "throws": ["BeansException"], "modifiers": ["public"], "return_type": "void", "snippet": "    @Override  public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {\n        logger.debug(\"ApplicationContext registed-->{}\", applicationContext);\n        APPLICATION_CONTEXT = applicationContext;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/config/ApplicationContextRegister.java", "stars": "137", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 40680, "method_name": "getApplicationContext", "class_name": "ApplicationContextRegister", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ApplicationContext", "snippet": "    public static ApplicationContext getApplicationContext() {\n        return APPLICATION_CONTEXT;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/config/ApplicationContextRegister.java", "stars": "137", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 40681, "method_name": "getBean", "class_name": "ApplicationContextRegister", "params": ["Class<T>"], "throws": null, "modifiers": ["public", "static"], "return_type": "T", "snippet": "    public static <T> T getBean(Class<T> type) {\n        return APPLICATION_CONTEXT.getBean(type);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/config/ApplicationContextRegister.java", "stars": "137", "class_props": {"extends": null, "implements": ["ApplicationContextAware"], "modifiers": ["public"]}}, {"id": 40682, "method_name": "getProjects", "class_name": "ProjectUtil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<SketchwareProject>", "snippet": "    public ArrayList<SketchwareProject> getProjects () {\n        // init list with SketchwareProject object\n        ArrayList<SketchwareProject> projects = new ArrayList<>();\n        // init list for list files\n        ArrayList<String> files = new ArrayList<>();\n        // list files\n        FileUtil.listDir(SKETCHWARE_PROJECTS_PATH, files);\n        // adding projects to list\n        for(String file : files) {\n            // decrypting list file and set as HashMap\n            HashMap<String, Object> project = JsonUtil.from(projectDecryptor.decryptListFile(file.concat(\"/project\")));\n            SketchwareProject sketchwareProject = new SketchwareProject();\n            sketchwareProject.setId(Integer.parseInt(Objects.requireNonNull(project.get(\"sc_id\")).toString()));\n            sketchwareProject.setProjectName(Objects.requireNonNull(project.get(\"my_app_name\")).toString());\n            sketchwareProject.setProjectPackage(Objects.requireNonNull(project.get(\"my_sc_pkg_name\")).toString());\n            sketchwareProject.setIconPath(SKETCHWARE_BASE_PATH + \"/resources/icons/\" + project.get(\"sc_id\") + \"/icon.png\");\n            projects.add(sketchwareProject);\n        }\n        return projects;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40683, "method_name": "getProjectBackups", "class_name": "ProjectUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<BackupedProject>", "snippet": "    public ArrayList<BackupedProject> getProjectBackups (String src) {\n        // binding array with projects\n        ArrayList<BackupedProject> projects = new ArrayList<>();\n        // binding array with files in [src]\n        ArrayList<String> files = new ArrayList<>();\n        // list files to [files]\n        FileUtil.listDir(src, files);\n        // perform projects list\n        for(String file : files) {\n            // perform Backuped Projects\n\n            BackupedProject project = JsonUtil.gson.fromJson(FileUtil.readFile(file.concat(\"/config.scfg\")), BackupedProject.class);\n            project.setProject(getProject(project.getConfiguration().getListFilePath()));\n            // perform SketchwareProjectConfiguration\n            project.setConfiguration(project.getConfiguration());\n            projects.add(project);\n        }\n        return projects;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40684, "method_name": "getBackupedProjects", "class_name": "ProjectUtil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<ArrayList>", "snippet": "    public ArrayList<ArrayList<BackupedProject>> getBackupedProjects () {\n        // init array with array\n        ArrayList<ArrayList<BackupedProject>> array = new ArrayList<>();\n        // making array with files\n        ArrayList<String> files = new ArrayList<>();\n        FileUtil.listDir(SKETCHCODE_BACKUP_BASE_PATH, files);\n        // adding all to list\n        for(String file : files) {\n            ArrayList<BackupedProject> backupedProjects = getProjectBackups(file);\n            array.add(backupedProjects);\n        }\n        return array;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40685, "method_name": "backupProject", "class_name": "ProjectUtil", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void backupProject (int projectId) {\n        backupProject(projectId, SKETCHCODE_BACKUP_BASE_PATH);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40686, "method_name": "backupProject", "class_name": "ProjectUtil", "params": ["int", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void backupProject (int projectId, String sourcePath) {\n        SketchwareProjectConfiguration configuration = getConfiguration(projectId);\n        BackupedProject backupData = getBackupConfiguration(projectId, sourcePath);\n        // writing configuration\n        FileUtil.writeFile(sourcePath.concat(\"/\").concat(backupData.getProject().getProjectPackage()).concat(\"/\").concat(String.valueOf(backupData.getTime())).concat(\"/config.scfg\"), new Gson().toJson(backupData));\n        // copying sketchware conf to sourcePath/info\n        FileUtil.copyFile(configuration.getListFilePath(), backupData.getConfiguration().getListFilePath());\n        // copying project\n        copyProject(configuration, backupData.getConfiguration());\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40687, "method_name": "getBackupConfiguration", "class_name": "ProjectUtil", "params": ["int", "String"], "throws": null, "modifiers": ["private"], "return_type": "BackupedProject", "snippet": "    private BackupedProject getBackupConfiguration (int forProject, String sourcePath) {\n        // making configuration\n        BackupedProject configuration = new BackupedProject();\n        // get a sketchware project\n        SketchwareProject sketchwareProject = getSketchwareProject(forProject);\n        // get current time\n        long time = System.currentTimeMillis();\n        // base folder\n        String baseFolder = sourcePath.concat(\"/\").concat(sketchwareProject.getProjectPackage()).concat(\"/\").concat(String.valueOf(time));\n        // set backup conf values\n        configuration.getConfiguration().setId(forProject);\n        configuration.getConfiguration().setBakFolderPath(baseFolder.concat(\"/bak\"));\n        configuration.getConfiguration().setListFilePath(baseFolder.concat(\"/info/project\"));\n        configuration.getConfiguration().setResources(new SketchwareProjectResources(baseFolder.concat(\"/resources/icons\"), baseFolder.concat(\"/resources/images\"),\n                baseFolder.concat(\"/resources/fonts\"), baseFolder.concat(\"/resources/fonts\")));\n        configuration.setTime(time);\n        configuration.setProject(getSketchwareProject(forProject));\n        return configuration;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40688, "method_name": "getSketchwareProject", "class_name": "ProjectUtil", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SketchwareProject", "snippet": "    public SketchwareProject getSketchwareProject (int projectId) {\n        // checking is project exist\n        if(!isProjectExist(projectId))\n            throw new ProjectNotFoundException(projectId);\n\n        // exec getProject() func for get project\n        return getProject(SKETCHWARE_PROJECTS_PATH.concat(\"/\").concat(String.valueOf(projectId)).concat(\"/project\"));\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40689, "method_name": "getProject", "class_name": "ProjectUtil", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "SketchwareProject", "snippet": "    public SketchwareProject getProject (String srcFile) {\n        // checking is file exist, if not throwing exception\n        if(!FileUtil.isExistFile(srcFile))\n            throw new ProjectNotHaveRequiredInfoException(\"failed to access file: \".concat(srcFile).concat(\" file not found.\"));\n        // decrypting project data\n        HashMap<String, Object> project = JsonUtil.from(projectDecryptor.decryptListFile(srcFile));\n        // set values\n        SketchwareProject sketchwareProject = new SketchwareProject();\n        sketchwareProject.setId(Integer.parseInt(Objects.requireNonNull(project.get(\"sc_id\")).toString()));\n        sketchwareProject.setProjectName(Objects.requireNonNull(project.get(\"my_app_name\")).toString());\n        sketchwareProject.setProjectPackage(Objects.requireNonNull(project.get(\"my_sc_pkg_name\")).toString());\n        sketchwareProject.setIconPath(SKETCHWARE_BASE_PATH + \"/resources/icons/\" + project.get(\"sc_id\") + \"/icon.png\");\n        return sketchwareProject;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40690, "method_name": "getDecryptor", "class_name": "ProjectUtil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ProjectDecryptor", "snippet": "    public ProjectDecryptor getDecryptor() {\n        return projectDecryptor;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40691, "method_name": "copyProject", "class_name": "ProjectUtil", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void copyProject (int id, int newId) {\n        SketchwareProjectConfiguration configuration = getConfiguration(id);\n        SketchwareProjectConfiguration newConfiguration = getNewConfiguration(newId);\n        copyProject(configuration, newConfiguration);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40692, "method_name": "getNewConfiguration", "class_name": "ProjectUtil", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SketchwareProjectConfiguration", "snippet": "    public SketchwareProjectConfiguration getNewConfiguration (int id) {\n        SketchwareProjectConfiguration configuration = new SketchwareProjectConfiguration();\n        configuration.setId(id);\n        configuration.setResources(new SketchwareProjectResources(SKETCHWARE_RESOURCES_PATH.concat(\"/icons/\").concat(String.valueOf(id)), SKETCHWARE_RESOURCES_PATH.concat(\"/images/\").concat(String.valueOf(id)), SKETCHWARE_RESOURCES_PATH.concat(\"/fonts/\").concat(String.valueOf(id)), SKETCHWARE_RESOURCES_PATH.concat(\"/sounds/\").concat(String.valueOf(id))));\n        configuration.setListFilePath(SKETCHWARE_PROJECTS_PATH.concat(\"/\").concat(String.valueOf(id)).concat(\"/project\"));\n        configuration.setBakFolderPath(SKETCHWARE_BASE_PATH.concat(\"/bak/\").concat(String.valueOf(id)));\n        return configuration;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40693, "method_name": "nextFreeId", "class_name": "ProjectUtil", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int nextFreeId () {\n        int returnValue = 601;\n        while (true) {\n            if(isProjectExist(returnValue))\n                returnValue++;\n            else return returnValue;\n        }\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40694, "method_name": "duplicateProject", "class_name": "ProjectUtil", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void duplicateProject (int projectId) {\n        copyProject(projectId, nextFreeId());\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40695, "method_name": "copyProject", "class_name": "ProjectUtil", "params": ["SketchwareProjectConfiguration", "SketchwareProjectConfiguration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void copyProject (SketchwareProjectConfiguration configuration, SketchwareProjectConfiguration newConfiguration) {\n        try {\n            // starting copying logic & view data.\n            if (configuration.getBakFolderPath() != null)\n                if (newConfiguration.getBakFolderPath() != null)\n                    CopyManager.copyFolder(new File(configuration.getBakFolderPath()), new File(newConfiguration.getBakFolderPath()));\n                else\n                    throw new ProjectNotHaveRequiredInfoException(\"The configuration has a bak path, but the new Configuration one does not have a specified path for copying.\");\n\n            // copying resources\n            if (configuration.getResources().getIconsPath() != null)\n                if (newConfiguration.getResources().getIconsPath() != null)\n                    CopyManager.copyFolder(new File(configuration.getResources().getIconsPath()), new File(newConfiguration.getResources().getIconsPath()));\n                else\n                    throw new ProjectNotHaveRequiredInfoException(\"The configuration have resources->icons path, but the new Configuration does not have specified path for icons\");\n\n            if (configuration.getResources().getFontsPath() != null)\n                if (newConfiguration.getResources().getFontsPath() != null)\n                    CopyManager.copyFolder(new File(configuration.getResources().getFontsPath()), new File(newConfiguration.getResources().getFontsPath()));\n                else\n                    throw new ProjectNotHaveRequiredInfoException(\"The configuration have resources->fonts path, but the new Configuration does not have specified path for fonts.\");\n\n            if (configuration.getResources().getImagesPath() != null)\n                if (newConfiguration.getResources().getImagesPath() != null)\n                    CopyManager.copyFolder(new File(configuration.getResources().getImagesPath()), new File(newConfiguration.getResources().getImagesPath()));\n                else\n                    throw new ProjectNotHaveRequiredInfoException(\"The configuration have resources->images path, but the new Configuration does not have specified path for images.\");\n\n            if (configuration.getResources().getSoundsPath() != null)\n                if (newConfiguration.getResources().getImagesPath() != null)\n                    CopyManager.copyFolder(new File(configuration.getResources().getSoundsPath()), new File(newConfiguration.getResources().getSoundsPath()));\n                else\n                    throw new ProjectNotHaveRequiredInfoException(\"The configuration have resources->sounds path, but the new Configuration does not have specified path for sounds.\");\n\n\n            if (configuration.getListFilePath() == null)\n                throw new ProjectNotHaveRequiredInfoException(\"configuration does not have a required list file. Maybe you should use validateProject() ?\");\n\n            // checking is configuration exists\n            if(!FileUtil.isExistFile(configuration.getListFilePath()))\n                throw new ProjectNotHaveRequiredInfoException(\"project list file not exist at path: \".concat(configuration.getListFilePath()));\n\n            // get [configuration] info from list file\n            HashMap<String, Object> confListFileInfo = JsonUtil.from(getDecryptor().decryptListFile(configuration.getListFilePath()));\n\n            if (confListFileInfo == null || confListFileInfo.isEmpty())\n                throw new ProjectNotHaveRequiredInfoException(\"configuration have non-exist or bad formatted project list file.\");\n\n            // transforming to new project id\n            confListFileInfo.put(\"sc_id\", String.valueOf(newConfiguration.getId()));\n\n            System.out.println(SKETCHWARE_PROJECTS_PATH.concat(\"/\").concat(String.valueOf(newConfiguration.getId())));\n\n            // making paths\n            FileUtil.makeDir(SKETCHWARE_PROJECTS_PATH.concat(\"/\").concat(String.valueOf(newConfiguration.getId())));\n\n            // writing list info file with new sc_id in new project path\n            getDecryptor().writeEncodedListFile(newConfiguration.getListFilePath() , new Gson().toJson(confListFileInfo));\n            // end\n        } catch (IOException io) {\n            io.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40696, "method_name": "getConfiguration", "class_name": "ProjectUtil", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SketchwareProjectConfiguration", "snippet": "    public SketchwareProjectConfiguration getConfiguration (int sketchwareProjectId) {\n        // checking is project exist\n        if (!isProjectExist(sketchwareProjectId))\n            throw new ProjectNotFoundException(sketchwareProjectId);\n        // making configuration\n        SketchwareProjectConfiguration configuration = new SketchwareProjectConfiguration();\n        configuration.setBakFolderPath(SKETCHWARE_BASE_PATH.concat(\"/bak/\").concat(String.valueOf(sketchwareProjectId)));\n        configuration.setListFilePath(SKETCHWARE_PROJECTS_PATH.concat(\"/\").concat(String.valueOf(sketchwareProjectId)).concat(\"/project\"));\n        configuration.setResources(new SketchwareProjectResources(SKETCHWARE_RESOURCES_PATH.concat(\"/icons/\").concat(String.valueOf(sketchwareProjectId)), SKETCHWARE_RESOURCES_PATH.concat(\"/images/\").concat(String.valueOf(sketchwareProjectId)), SKETCHWARE_RESOURCES_PATH.concat(\"/fonts/\").concat(String.valueOf(sketchwareProjectId)),SKETCHWARE_RESOURCES_PATH.concat(\"/sounds/\").concat(String.valueOf(sketchwareProjectId))));\n        return configuration;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40697, "method_name": "isProjectExist", "class_name": "ProjectUtil", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isProjectExist (int projectId) {\n        // making boolean response variable\n        boolean is = false;\n        // Make list with files from SKETCHWARE_PROJECTS_PATH\n        ArrayList<String> files = new ArrayList<>();\n        FileUtil.listDir(SKETCHWARE_PROJECTS_PATH, files);\n        // checking is exist\n        for (String file : files) {\n            if(Objects.equals(Uri.parse(file).getLastPathSegment(), String.valueOf(projectId))) {\n                is = true;\n            }\n        }\n        return is;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40698, "method_name": "toString", "class_name": "ProjectNotFoundException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return \"Project with input id \" + id + \" not found.\";\n        }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40699, "method_name": "getMessage", "class_name": "ProjectNotFoundException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getMessage() {\n            return toString();\n        }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40700, "method_name": "toString", "class_name": "ProjectNotHaveRequiredInfoException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return \"ProjectNotHaveRequiredInfoException: \" + msg;\n        }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40701, "method_name": "getMessage", "class_name": "ProjectNotHaveRequiredInfoException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getMessage() {\n            return msg;\n        }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40702, "method_name": "decryptListFile", "class_name": "ProjectDecryptor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String decryptListFile(String path) {\n            try {\n                Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n                byte[] arrby = \"sketchwaresecure\".getBytes();\n                // init Cipher for decryption\n                cipher.init(2, new SecretKeySpec(arrby, \"AES\"), new IvParameterSpec(arrby));\n                RandomAccessFile randomAccessFile = new RandomAccessFile(path, \"r\");\n                byte[] arrby2 = new byte[(int) randomAccessFile.length()];\n                randomAccessFile.readFully(arrby2);\n                return new String(cipher.doFinal(arrby2));\n            } catch (Exception e) {\n                e.printStackTrace();\n                throw new ProjectCryptorException(\"failed when trying to get sketchware info from path: \".concat(path));\n            }\n        }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40703, "method_name": "writeEncodedListFile", "class_name": "ProjectDecryptor", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void writeEncodedListFile(String path, String value) {\n            try {\n                Cipher cipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");\n                byte[] arrby = \"sketchwaresecure\".getBytes();\n                // init Cipher for decryption\n                cipher.init(1, new SecretKeySpec(arrby, \"AES\"), new IvParameterSpec(arrby));\n                byte[] arrby2 = cipher.doFinal(value.getBytes());\n                RandomAccessFile randomAccessFile = new RandomAccessFile(path, \"rw\");\n                randomAccessFile.setLength(0L);\n                randomAccessFile.write(arrby2);\n            } catch (Exception e) {\n                throw new ProjectCryptorException(\"failed when trying to write sketchware info to path: \".concat(path).concat(\". Error: \").concat(e.getMessage()));\n            }\n        }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 40704, "method_name": "toString", "class_name": "ProjectCryptorException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "            public String toString() {\n                return \"ProjectCryptorException: \" + msg;\n            }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40705, "method_name": "getMessage", "class_name": "ProjectCryptorException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "            public String getMessage() {\n                return msg;\n            }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/util/ProjectUtil.java", "stars": "4", "class_props": {"extends": "RuntimeException", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40706, "method_name": "onInitialize", "class_name": "FabricNDI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onInitialize() {\n        System.out.println(\"Starting Fabric NDI, loading NDI libraries.\");\n        Devolay.loadLibraries();\n        instance = this;\n        cameras = new ConcurrentHashMap<>();\n        cameraControls = new ConcurrentHashMap<>();\n        cameraEntities = new ConcurrentSet<>();\n        keyBinding = FabricKeyBinding.Builder.create(new Identifier(\"fabricndi\", \"newcamera\"), InputUtil.Type.KEYSYM, GLFW.GLFW_KEY_R, \"NDI\").build();\n        killAll = FabricKeyBinding.Builder.create(new Identifier(\"fabricndi\", \"killall\"), InputUtil.Type.KEYSYM, GLFW.GLFW_KEY_Y, \"NDI\").build();\n        KeyBindingRegistry.INSTANCE.addCategory(\"NDI\");\n        KeyBindingRegistry.INSTANCE.register(keyBinding);\n        KeyBindingRegistry.INSTANCE.register(killAll);\n        ClientTickCallback.EVENT.register(e -> {\n            if(keyBinding.isPressed() && e.world != null && e.player != null){\n                UUID uuid = UUID.randomUUID();\n                CameraEntity armorStandEntity = new CameraEntity(e.world, new GameProfile(uuid, uuid.toString()));\n                armorStandEntity.refreshPositionAndAngles(e.player.getX(), e.player.getY(), e.player.getZ(), e.player.yaw, e.player.pitch);\n                e.world.addEntity(armorStandEntity.getEntityId(), armorStandEntity);\n                keyBinding.setPressed(false);\n                FabricNDI.instance.cameraEntities.add(armorStandEntity);\n            } else if(killAll.isPressed() && e.world != null && e.player != null){\n                for(Entity ent : cameraEntities){\n                    e.world.removeEntity(ent.getEntityId());\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/FabricNDI.java", "stars": "5", "class_props": {"extends": null, "implements": ["ModInitializer"], "modifiers": ["public"]}}, {"id": 40707, "method_name": "getGameRenderHook", "class_name": "FabricNDI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GameRenderHook", "snippet": "    public GameRenderHook getGameRenderHook() {\n        if(gameRenderHook == null)\n            gameRenderHook = new GameRenderHook(\"MC - Player\");\n        return gameRenderHook;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/FabricNDI.java", "stars": "5", "class_props": {"extends": null, "implements": ["ModInitializer"], "modifiers": ["public"]}}, {"id": 40708, "method_name": "main", "class_name": "Demo04File", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        show02();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo01/File/Demo04File.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40709, "method_name": "show02", "class_name": "Demo04File", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show02() {\n        File f1 = new File(\"C:\\\\Users\\\\itcast\\\\IdeaProjects\\\\shung\");\n\n        //\u4e0d\u5b58\u5728,\u5c31\u6ca1\u6709\u5fc5\u8981\u83b7\u53d6\n        if(f1.exists()){\n            System.out.println(f1.isDirectory());\n            System.out.println(f1.isFile());\n        }\n\n        File f2 = new File(\"C:\\\\Users\\\\itcast\\\\IdeaProjects\\\\shungyuan\");\n        if(f2.exists()){\n            System.out.println(f2.isDirectory());//true\n            System.out.println(f2.isFile());//false\n        }\n\n        File f3 = new File(\"C:\\\\Users\\\\itcast\\\\IdeaProjects\\\\shungyuan\\\\shungyuan.iml\");\n        if(f3.exists()){\n            System.out.println(f3.isDirectory());//false\n            System.out.println(f3.isFile());//true\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo01/File/Demo04File.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40710, "method_name": "show01", "class_name": "Demo04File", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show01() {\n        File f1 = new File(\"C:\\\\Users\\\\itcast\\\\IdeaProjects\\\\shungyuan\");\n        System.out.println(f1.exists());//true\n\n        File f2 = new File(\"C:\\\\Users\\\\itcast\\\\IdeaProjects\\\\shung\");\n        System.out.println(f2.exists());//false\n\n        File f3 = new File(\"shungyuan.iml\");//\u76f8\u5bf9\u8def\u5f84 C:\\Users\\itcast\\IdeaProjects\\shungyuan\\shungyuan.iml\n        System.out.println(f3.exists());//true\n\n        File f4 = new File(\"a.txt\");\n        System.out.println(f4.exists());//false\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo01/File/Demo04File.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40711, "method_name": "init", "class_name": "MapOverlaySystemsScouted", "params": ["List<StarSystem>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(List<StarSystem> sys) {\n        parent.hideDisplayPanel();\n        origMapScale = parent.map().scaleY();\n        parent.map().setScale(20);\n        scoutedSystems.clear();\n        scoutedSystems.addAll(sys);\n        showNextSystem();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlaySystemsScouted.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 40712, "method_name": "showNextSystem", "class_name": "MapOverlaySystemsScouted", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showNextSystem() {\n        mask = null;\n        planetImg = null;\n        if (scoutedSystems.isEmpty()) \n            parent.resumeTurn();\n        else {\n            // create an alphabetized list of systems\n            Collections.sort(scoutedSystems, StarSystem.NAME);\n            StarSystem nextSystem = scoutedSystems.get(0);\n            parent.map().recenterMapOn(nextSystem);\n            parent.mapFocus(nextSystem);\n            parent.clickedSprite(nextSystem);\n            parent.repaint();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlaySystemsScouted.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 40713, "method_name": "masksMouseOver", "class_name": "MapOverlaySystemsScouted", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean masksMouseOver(int x, int y)   { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlaySystemsScouted.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 40714, "method_name": "hoveringOverSprite", "class_name": "MapOverlaySystemsScouted", "params": ["Sprite"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hoveringOverSprite(Sprite o) { return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlaySystemsScouted.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 40715, "method_name": "advanceMap", "class_name": "MapOverlaySystemsScouted", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void advanceMap() {\n        if (!scoutedSystems.isEmpty())\n            scoutedSystems.remove(scoutedSystems.get(0));\n        showNextSystem();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlaySystemsScouted.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 40716, "method_name": "paintOverMap", "class_name": "MapOverlaySystemsScouted", "params": ["MainUI", "GalaxyMapPanel", "Graphics2D"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintOverMap(MainUI parent, GalaxyMapPanel ui, Graphics2D g) {\n        if (scoutedSystems.isEmpty())\n            return;\n        StarSystem sys = scoutedSystems.get(0);\n        Empire pl = player();\n\n        int s7 = BasePanel.s7;\n        int s10 = BasePanel.s10;\n        int s15 = BasePanel.s15;\n        int s20 = BasePanel.s20;\n        int s25 = BasePanel.s25;\n        int s30 = BasePanel.s30;\n        int s40 = BasePanel.s40;\n        int s50 = BasePanel.s50;\n        int s60 = BasePanel.s60;\n\n        int w = ui.getWidth();\n        int h = ui.getHeight();\n\n        int bdrW = s7;\n        int boxW = scaled(540);\n        int boxH = scaled(240);\n        int boxH1 = scaled(68);\n\n        int boxX = -s40+(w/2);\n        int boxY = s40+(h-boxH)/2;\n\n        // draw map mask\n        if (mask == null) {\n            int r = s60;\n            int centerX = w*2/5;\n            int centerY = h*2/5;\n            Ellipse2D window = new Ellipse2D.Float();\n            window.setFrame(centerX-r, centerY-r, r+r, r+r);\n            Area st1 = new Area(window);\n            Rectangle blackout  = new Rectangle();\n            blackout.setFrame(0,0,w,h);\n            mask = new Area(blackout);\n            mask.subtract(st1);\n        }\n        g.setColor(maskC);\n        g.fill(mask);\n        // draw border\n        g.setColor(MainUI.paneShadeC);\n        g.fillRect(boxX-bdrW, boxY-bdrW, boxW+bdrW+bdrW, boxH+bdrW+bdrW);\n\n        // draw Box\n        g.setColor(MainUI.paneBackground);\n        g.fillRect(boxX, boxY, boxW, boxH1);\n\n        // draw planet image\n        if (planetImg == null) {\n            if (sys.planet().type().isAsteroids()) {\n                planetImg = newBufferedImage(boxW, boxH-boxH1);\n                Graphics imgG = planetImg.getGraphics();\n                imgG.setColor(Color.black);\n                imgG.fillRect(0, 0, boxW, boxH-boxH1);\n                drawBackgroundStars(imgG, boxW, boxH-boxH1);\n                parent.drawStar((Graphics2D) imgG, sys.starType(), s60, boxW*4/5, (boxH-boxH1)/3);\n                imgG.dispose();\n            }\n            else \n                planetImg = sys.planet().type().panoramaImage();\n        }\n        g.drawImage(planetImg, boxX, boxY+boxH1, boxW, boxH-boxH1, null);\n\n        // draw header info\n        int leftW = boxW * 2/5;\n        String yearStr = displayYearOrTurn();\n        g.setFont(narrowFont(40));\n        int sw = g.getFontMetrics().stringWidth(yearStr);\n        int x0 = boxX+((leftW-sw)/2);\n        drawBorderedString(g, yearStr, 2, x0, boxY+boxH1-s20, SystemPanel.textShadowC, SystemPanel.orangeText);\n\n        String scoutStr = text(\"MAIN_SCOUT_TITLE\");\n        int titleFontSize = scaledFont(g, scoutStr, boxW-leftW-s10, 24, 14);\n        g.setFont(narrowFont(titleFontSize));\n        drawShadowedString(g, scoutStr, 4, boxX+leftW, boxY+boxH1-s40, SystemPanel.textShadowC, Color.white);\n\n        String skipStr = text(\"CLICK_CONTINUE\");\n        g.setColor(Color.darkGray);\n        g.setFont(narrowFont(16));\n        g.drawString(skipStr, boxX+leftW+s30, boxY+boxH1-s20);\n\n        // draw planet info, from bottom up\n        int x1 = boxX+s15;\n        int y1 = boxY+boxH-s10;\n        int lineH = s20;\n        int desiredFont = 18;\n\n        if (pl.sv.isUltraPoor(sys.id)) {\n            g.setColor(SystemPanel.redText);\n            String s1 = text(\"MAIN_SCOUT_ULTRA_POOR_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n        else if (pl.sv.isPoor(sys.id)) {\n            g.setColor(SystemPanel.redText);\n            String s1 = text(\"MAIN_SCOUT_POOR_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n        else if (pl.sv.isRich(sys.id)) {\n            g.setColor(SystemPanel.greenText);\n            String s1 = text(\"MAIN_SCOUT_RICH_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n        else if (pl.sv.isUltraRich(sys.id)) {\n            g.setColor(SystemPanel.greenText);\n            String s1 = text(\"MAIN_SCOUT_ULTRA_RICH_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n\n        if (pl.sv.isOrionArtifact(sys.id)) {\n            g.setColor(SystemPanel.greenText);\n            String s1 = text(\"MAIN_SCOUT_ANCIENTS_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n        else if (pl.sv.isArtifact(sys.id)) {\n            g.setColor(SystemPanel.greenText);\n            String s1 = text(\"MAIN_SCOUT_ARTIFACTS_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n\n        if (pl.isEnvironmentHostile(sys)) {\n            g.setColor(SystemPanel.redText);\n            String s1 = text(\"MAIN_SCOUT_HOSTILE_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n        else if (pl.isEnvironmentFertile(sys)) {\n            g.setColor(SystemPanel.greenText);\n            String s1 = text(\"MAIN_SCOUT_FERTILE_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n        else if (pl.isEnvironmentGaia(sys)) {\n            g.setColor(SystemPanel.greenText);\n            String s1 = text(\"MAIN_SCOUT_GAIA_DESC\");\n            int fontSize = scaledFont(g, s1, boxW-s25, desiredFont, 14);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n\n        // classification line\n        if (sys.planet().type().isAsteroids()) {\n            String s1 = text(\"MAIN_SCOUT_NO_PLANET\");\n            g.setFont(narrowFont(desiredFont+3));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n        else {\n            String s1 = text(\"MAIN_SCOUT_TYPE\", text(sys.planet().type().key()), (int)sys.planet().maxSize());\n            g.setFont(narrowFont(desiredFont+3));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n        }\n\n        if (pl.sv.isColonized(sys.id)) {\n            g.setFont(narrowFont(24));\n            String s1 = pl.sv.descriptiveName(sys.id);\n            int fontSize = scaledFont(g, s1, boxW-x1-s10, 24, 18);\n            g.setFont(narrowFont(fontSize));\n            drawBorderedString(g, s1, 1, x1, y1, Color.black, Color.white);\n            y1 -= lineH;\n            y1 -= scaled(5);\n        }\n        // planet name\n        String sysName = pl.sv.name(sys.id);\n        y1 -= scaled(5);\n        g.setColor(SystemPanel.orangeText);\n        g.setFont(narrowFont(40));\n        drawBorderedString(g, sysName, 1, x1, y1, Color.darkGray, SystemPanel.orangeText);\n\n        parent.addNextTurnControl(clickSprite);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlaySystemsScouted.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 40717, "method_name": "handleKeyPress", "class_name": "MapOverlaySystemsScouted", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean handleKeyPress(KeyEvent e) {\n        switch(e.getKeyCode()) {\n            case KeyEvent.VK_ESCAPE:\n                //\n                softClick();\n                advanceMap();\n                break;\n            default:\n                misClick(); break;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/overlay/MapOverlaySystemsScouted.java", "stars": "74", "class_props": {"extends": "MapOverlay", "implements": null, "modifiers": ["public"]}}, {"id": 40718, "method_name": "execute", "class_name": "LightOffCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute() {\n        // Turns OFF light\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Command%20Pattern/src/Commands/LightOffCommand.java", "stars": "38", "class_props": {"extends": null, "implements": ["ICommand"], "modifiers": ["public"]}}, {"id": 40719, "method_name": "onCreate", "class_name": "ShopDashboardForStaff", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_shop_home_for_staff);\n        ButterKnife.bind(this);\n\n//        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);\n//        setSupportActionBar(toolbar);\n//        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n        setupNotifications();\n\n\n        bindToolbarHeader();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40720, "method_name": "bindToolbarHeader", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindToolbarHeader()\n    {\n        Shop shop = PrefShopAdminHome.getShop(this);\n        shopName.setText(shop.getShopName());\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40721, "method_name": "ordersClick", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void ordersClick()\n    {\n\n            startActivity(new Intent(this, HomeDelivery.class));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40722, "method_name": "ordersPickFromShop", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void ordersPickFromShop()\n    {\n//        startActivity(new Intent(this, OrdersPickFromShop.class));\n        startActivity(new Intent(this, PickFromShopInventory.class));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40723, "method_name": "orderHistory", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void orderHistory()\n    {\n\n        Intent intent = new Intent(this, OrderHistory.class);\n        intent.putExtra(OrdersHistoryFragment.IS_FILTER_BY_SHOP,true);\n\n        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40724, "method_name": "quickStockEditorClick", "class_name": "ShopDashboardForStaff", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void quickStockEditorClick(View view)\n    {\n        startActivity(new Intent(this, QuickStockEditor.class));\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40725, "method_name": "editStockClick", "class_name": "ShopDashboardForStaff", "params": ["View"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void editStockClick(View view)\n    {\n        startActivity(new Intent(this, ItemsInShopByCat.class));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40726, "method_name": "optionItemsByCategory", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void optionItemsByCategory()\n    {\n        startActivity(new Intent(this, ItemsDatabase.class));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40727, "method_name": "optionItemsInStock", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void optionItemsInStock()\n    {\n        startActivity(new Intent(this, ItemsInShop.class));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40728, "method_name": "setupNotifications", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setupNotifications()\n    {\n        Shop shop = PrefShopAdminHome.getShop(this);\n\n        if(shop!=null)\n        {\n            int currentapiVersion = Build.VERSION.SDK_INT;\n\n            if (currentapiVersion >= Build.VERSION_CODES.KITKAT){\n                // Do something for lollipop and above versions\n\n//                Intent intent = new Intent(this, SSEIntentService.class);\n//                intent.putExtra(SSEIntentService.SHOP_ID, shop.getShopID());\n//                startService(intent);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40729, "method_name": "showToastMessage", "class_name": "ShopDashboardForStaff", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message)\n    {\n        Toast.makeText(this,message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40730, "method_name": "headerTutorialsClick", "class_name": "ShopDashboardForStaff", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void headerTutorialsClick()\n    {\n        UtilityFunctions.openURL(\"https://blog.nearbyshops.org/tag/tutorials-for-shop-owners/\",this);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/DashboardShopStaff/ShopDashboardForStaff.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40731, "method_name": "getCount", "class_name": "SelectValueScrollAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return mCount;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueScrollAdapter.java", "stars": "74", "class_props": {"extends": "CardScrollAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 40732, "method_name": "getItem", "class_name": "SelectValueScrollAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {\n        return Integer.valueOf(position);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueScrollAdapter.java", "stars": "74", "class_props": {"extends": "CardScrollAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 40733, "method_name": "getView", "class_name": "SelectValueScrollAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent) {\n        if (convertView == null) {\n            convertView = LayoutInflater.from(mContext).inflate(R.layout.card_select_value, parent);\n        }\n\n        final TextView view = (TextView) convertView.findViewById(R.id.value);\n        view.setText(String.format(\"%02d\", position));\n\n        return setItemOnCard(this, convertView);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueScrollAdapter.java", "stars": "74", "class_props": {"extends": "CardScrollAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 40734, "method_name": "findIdPosition", "class_name": "SelectValueScrollAdapter", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int findIdPosition(Object id) {\n        if (id instanceof Integer) {\n            int idInt = (Integer) id;\n            if (idInt >= 0 && idInt < mCount) {\n                return idInt;\n            }\n        }\n        return AdapterView.INVALID_POSITION;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueScrollAdapter.java", "stars": "74", "class_props": {"extends": "CardScrollAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 40735, "method_name": "findItemPosition", "class_name": "SelectValueScrollAdapter", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int findItemPosition(Object item) {\n        return findIdPosition(item);\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Timer/src/com/google/android/glass/sample/timer/SelectValueScrollAdapter.java", "stars": "74", "class_props": {"extends": "CardScrollAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 40736, "method_name": "getJobId", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobId() {\n    return jobId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40737, "method_name": "setJobId", "class_name": "MapReduceJobState", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setJobId(String jobId) {\n    this.jobId = jobId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40738, "method_name": "getJobName", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobName() {\n    return jobName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40739, "method_name": "setJobName", "class_name": "MapReduceJobState", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setJobName(String jobName) {\n    this.jobName = jobName;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40740, "method_name": "getTrackingURL", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getTrackingURL() {\n    return trackingURL;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40741, "method_name": "setTrackingURL", "class_name": "MapReduceJobState", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setTrackingURL(String trackingURL) {\n    this.trackingURL = trackingURL;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40742, "method_name": "getFailureInfo", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFailureInfo() {\n    return failureInfo;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40743, "method_name": "setFailureInfo", "class_name": "MapReduceJobState", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFailureInfo(String failureInfo) {\n    this.failureInfo = failureInfo;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40744, "method_name": "isComplete", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isComplete() {\n    return isComplete;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40745, "method_name": "setComplete", "class_name": "MapReduceJobState", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setComplete(boolean complete) {\n    isComplete = complete;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40746, "method_name": "isSuccessful", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isSuccessful() {\n    return isSuccessful;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40747, "method_name": "setSuccessful", "class_name": "MapReduceJobState", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSuccessful(boolean successful) {\n    isSuccessful = successful;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40748, "method_name": "getMapProgress", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "  public float getMapProgress() {\n    return mapProgress;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40749, "method_name": "setMapProgress", "class_name": "MapReduceJobState", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setMapProgress(float mapProgress) {\n    this.mapProgress = mapProgress;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40750, "method_name": "getReduceProgress", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "  public float getReduceProgress() {\n    return reduceProgress;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40751, "method_name": "setReduceProgress", "class_name": "MapReduceJobState", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setReduceProgress(float reduceProgress) {\n    this.reduceProgress = reduceProgress;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40752, "method_name": "getTotalMappers", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getTotalMappers() {\n    return totalMappers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40753, "method_name": "setTotalMappers", "class_name": "MapReduceJobState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setTotalMappers(int totalMappers) {\n    this.totalMappers = totalMappers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40754, "method_name": "getTotalReducers", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getTotalReducers() {\n    return totalReducers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40755, "method_name": "setTotalReducers", "class_name": "MapReduceJobState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setTotalReducers(int totalReducers) {\n    this.totalReducers = totalReducers;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40756, "method_name": "getFinishedMappersCount", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getFinishedMappersCount() {\n    return finishedMappersCount;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40757, "method_name": "setFinishedMappersCount", "class_name": "MapReduceJobState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFinishedMappersCount(int finishedMappersCount) {\n    this.finishedMappersCount = finishedMappersCount;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40758, "method_name": "getFinishedReducersCount", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getFinishedReducersCount() {\n    return finishedReducersCount;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40759, "method_name": "setFinishedReducersCount", "class_name": "MapReduceJobState", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFinishedReducersCount(int finishedReducersCount) {\n    this.finishedReducersCount = finishedReducersCount;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40760, "method_name": "getJobStartTime", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getJobStartTime() {\n    return jobStartTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40761, "method_name": "setJobStartTime", "class_name": "MapReduceJobState", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setJobStartTime(long jobStartTime) {\n    this.jobStartTime = jobStartTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40762, "method_name": "getJobLastUpdateTime", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getJobLastUpdateTime() {\n    return jobLastUpdateTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40763, "method_name": "setJobLastUpdateTime", "class_name": "MapReduceJobState", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setJobLastUpdateTime(long jobLastUpdateTime) {\n    this.jobLastUpdateTime = jobLastUpdateTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40764, "method_name": "getCounters", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Counters", "snippet": "  public Counters getCounters() {\n    return this.counters;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40765, "method_name": "setCounters", "class_name": "MapReduceJobState", "params": ["Counters"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCounters(Counters counters) {\n    this.counters = counters;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40766, "method_name": "toJson", "class_name": "MapReduceJobState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    Map<String, Object> jsonObj = new HashMap<String, Object>();\n    jsonObj.put(\"jobId\", jobId);\n    jsonObj.put(\"jobName\", jobName);\n    jsonObj.put(\"trackingURL\", trackingURL);\n    jsonObj.put(\"failureInfo\", failureInfo);\n    jsonObj.put(\"isComplete\", String.valueOf(isComplete));\n    jsonObj.put(\"isSuccessful\", String.valueOf(isSuccessful));\n    jsonObj.put(\"mapProgress\", String.valueOf(mapProgress));\n    jsonObj.put(\"reduceProgress\", String.valueOf(reduceProgress));\n    jsonObj.put(\"jobStartTime\", String.valueOf(jobStartTime));\n    jsonObj.put(\"jobLastUpdateTime\", String.valueOf(jobLastUpdateTime));\n\n    jsonObj.put(\"totalMappers\", String.valueOf(totalMappers));\n    jsonObj.put(\"finishedMappersCount\", String.valueOf(finishedMappersCount));\n\n    jsonObj.put(\"totalReducers\", String.valueOf(totalReducers));\n    jsonObj.put(\"finishedReducersCount\", String.valueOf(finishedReducersCount));\n\n    jsonObj.put(\"counters\", StatsUtils.countersToJson(counters));\n    String countersString =\n        (counters != null) ? counters.makeEscapedCompactString() : \"\";\n    jsonObj.put(\"countersString\", countersString);\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40767, "method_name": "fromJson", "class_name": "MapReduceJobState", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "MapReduceJobState", "snippet": "  public static MapReduceJobState fromJson(Object obj) throws Exception {\n    Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    String jobId = (String) jsonObj.get(\"jobId\");\n    String jobName = (String) jsonObj.get(\"jobName\");\n    String trackingUrl = (String) jsonObj.get(\"trackingURL\");\n    boolean isComplete =\n        Boolean.parseBoolean((String) jsonObj.get(\"isComplete\"));\n    boolean isSuccessful =\n        Boolean.parseBoolean((String) jsonObj.get(\"isSuccessful\"));\n    String failureInfo = (String) jsonObj.get(\"failureInfo\");\n    float mapProgress = Float.parseFloat((String) jsonObj.get(\"mapProgress\"));\n    float reduceProgress =\n        Float.parseFloat((String) jsonObj.get(\"reduceProgress\"));\n    long jobStartTime = Long.parseLong((String) jsonObj.get(\"jobStartTime\"));\n    long jobLastUpdateTime =\n        Long.parseLong((String) jsonObj.get(\"jobLastUpdateTime\"));\n\n    int totalMappers = Integer.parseInt((String) jsonObj.get(\"totalMappers\"));\n    int finishedMappersCount =\n        Integer.parseInt((String) jsonObj.get(\"finishedMappersCount\"));\n\n    int totalReducers = Integer.parseInt((String) jsonObj.get(\"totalReducers\"));\n    int finishedReducersCount =\n        Integer.parseInt((String) jsonObj.get(\"finishedReducersCount\"));\n\n    String countersString = (String) jsonObj.get(\"countersString\");\n    Counters counters = Counters.fromEscapedCompactString(countersString);\n\n    return new MapReduceJobState(jobId, jobName, trackingUrl, failureInfo,\n        isComplete, isSuccessful, mapProgress, reduceProgress, jobStartTime,\n        jobLastUpdateTime, totalMappers, finishedMappersCount, totalReducers,\n        finishedReducersCount, counters);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/MapReduceJobState.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40768, "method_name": "main", "class_name": "Numbers", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\t\tint num1 = Integer.parseInt(args[0]);\n\t\tint num2 = Integer.parseInt(args[1]);\n\t\tint result = num1 * num2;\n\n\t\tSystem.out.println(num1 + \" * \" + num2 + \" = \" + result); \n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day4/Numbers.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40769, "method_name": "get", "class_name": "BaiduTransUtil", "params": ["String", "Map<String,String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String get(String host, Map<String, String> params) {\n        try {\n\n            SSLContext sslcontext = SSLContext.getInstance(\"TLS\");\n            sslcontext.init(null, new TrustManager[] { myX509TrustManager }, null);\n\n            String sendUrl = getUrlWithQueryString(host, params);\n\n\n\n            URL uri = new URL(sendUrl);\n            HttpURLConnection conn = (HttpURLConnection) uri.openConnection();\n            if (conn instanceof HttpsURLConnection) {\n                ((HttpsURLConnection) conn).setSSLSocketFactory(sslcontext.getSocketFactory());\n            }\n\n            conn.setConnectTimeout(SOCKET_TIMEOUT);\n            conn.setRequestMethod(GET);\n            int statusCode = conn.getResponseCode();\n            if (statusCode != HttpURLConnection.HTTP_OK) {\n                System.out.println(\"Http\u9519\u8bef\u7801\uff1a\" + statusCode);\n            }\n\n\n            InputStream is = conn.getInputStream();\n            BufferedReader br = new BufferedReader(new InputStreamReader(is));\n            StringBuilder builder = new StringBuilder();\n            String line = null;\n            while ((line = br.readLine()) != null) {\n                builder.append(line);\n            }\n\n            String text = builder.toString();\n\n            close(br);\n            close(is);\n            conn.disconnect();\n\n            return text;\n        } catch (MalformedURLException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } catch (KeyManagementException e) {\n            e.printStackTrace();\n        } catch (NoSuchAlgorithmException e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/TransUtil/BaiduTransUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40770, "method_name": "getUrlWithQueryString", "class_name": "BaiduTransUtil", "params": ["String", "Map<String,String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getUrlWithQueryString(String url, Map<String, String> params) {\n        if (params == null) {\n            return url;\n        }\n\n        StringBuilder builder = new StringBuilder(url);\n        if (url.contains(\"?\")) {\n            builder.append(\"&\");\n        } else {\n            builder.append(\"?\");\n        }\n\n        int i = 0;\n        for (String key : params.keySet()) {\n            String value = params.get(key);\n            if (value == null) {\n                continue;\n            }\n\n            if (i != 0) {\n                builder.append('&');\n            }\n\n            builder.append(key);\n            builder.append('=');\n            builder.append(encode(value));\n\n            i++;\n        }\n\n        return builder.toString();\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/TransUtil/BaiduTransUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40771, "method_name": "close", "class_name": "BaiduTransUtil", "params": ["Closeable"], "throws": null, "modifiers": ["protected", "static"], "return_type": "void", "snippet": "    protected static void close(Closeable closeable) {\n        if (closeable != null) {\n            try {\n                closeable.close();\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/TransUtil/BaiduTransUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40772, "method_name": "encode", "class_name": "BaiduTransUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String encode(String input) {\n        if (input == null) {\n            return \"\";\n        }\n\n        try {\n            return URLEncoder.encode(input, \"utf-8\");\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n\n        return input;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/TransUtil/BaiduTransUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40773, "method_name": "getTransResult", "class_name": "BaiduTransUtil", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTransResult(String query, String from, String to) {\n        Map<String, String> params = buildParams(query, from, to);\n        return get(TRANS_API_HOST, params);\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/TransUtil/BaiduTransUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40774, "method_name": "buildParams", "class_name": "BaiduTransUtil", "params": ["String", "String", "String"], "throws": null, "modifiers": ["private"], "return_type": "Map<String,String>", "snippet": "    private Map<String, String> buildParams(String query, String from, String to) {\n        Map<String, String> params = new HashMap<String, String>();\n        params.put(\"q\", query);\n        params.put(\"from\", from);\n        params.put(\"to\", to);\n        params.put(\"appid\", appid);\n\n        String salt = String.valueOf(System.currentTimeMillis());\n        params.put(\"salt\", salt);\n\n        String src = appid + query + salt + securityKey;\n        params.put(\"sign\", MD5Util.md5(src));\n        return params;\n    }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/TransUtil/BaiduTransUtil.java", "stars": "151", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40775, "method_name": "run", "class_name": "BaiduTransTask", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n\n        }", "url": "https://raw.githubusercontent.com/fordes123/Subtitles-View/master/src/main/java/org/fordes/subview/util/TransUtil/BaiduTransUtil.java", "stars": "151", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": []}}, {"id": 40776, "method_name": "getRequestMapping", "class_name": "XMLStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRequestMapping() {\n        return requestMapping;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/XMLStatement.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40777, "method_name": "setRequestMapping", "class_name": "XMLStatement", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRequestMapping(String requestMapping) {\n        this.requestMapping = requestMapping;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/XMLStatement.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40778, "method_name": "getStatements", "class_name": "XMLStatement", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Statement>", "snippet": "    public List<Statement> getStatements() {\n        return statements;\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/XMLStatement.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40779, "method_name": "addStatement", "class_name": "XMLStatement", "params": ["List<Statement>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addStatement(List<Statement> statements) {\n        this.statements.addAll(statements);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/XMLStatement.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40780, "method_name": "addValidateStatement", "class_name": "XMLStatement", "params": ["ValidateStatement"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addValidateStatement(ValidateStatement validateStatement) {\n        this.validateStatements.put(validateStatement.getId(), validateStatement);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/XMLStatement.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40781, "method_name": "getValidateStatement", "class_name": "XMLStatement", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ValidateStatement", "snippet": "    public ValidateStatement getValidateStatement(String id) {\n        return this.validateStatements.get(id);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/XMLStatement.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40782, "method_name": "containsValidateStatement", "class_name": "XMLStatement", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean containsValidateStatement(String id) {\n        return this.validateStatements.containsKey(id);\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/session/XMLStatement.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40783, "method_name": "recover", "class_name": "CustomMessageRecover", "params": ["Message", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void recover(Message message, Throwable throwable) {\n        for (RabbitStrategy rabbitStrategy: rabbitStrategies) {\n            //Checks Strategy is suited for exception and message\n            boolean isSuccess = rabbitStrategy.process(message,throwable);\n            if (isSuccess){\n                //Apply suitable strategy\n                rabbitStrategy.recover(message,throwable);\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/recover/CustomMessageRecover.java", "stars": "2", "class_props": {"extends": null, "implements": ["MessageRecoverer"], "modifiers": ["public"]}}, {"id": 40784, "method_name": "main", "class_name": "SystemStudy", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        /**\n         * System.arraycopy \u6570\u7ec4\u62f7\u8d1d\n         * System.currentTimeMillis() \u83b7\u53d6\u5f53\u521d\u65e5\u671f\u65f6\u95f4\u6570\u503c \u64cd\u4f5c\u8017\u65f6\u7edf\u8ba1\n         * System.gc()\n         */\n\n        long start = System.currentTimeMillis();\n        String str = \"\";\n        for(int x=0; x<30000; x++){\n            str+=x;\n        }\n        long end = System.currentTimeMillis();\n        System.out.println(\"\u64cd\u4f5c\u8017\u65f6+\"+ (end-start)+ \"ms\");\n\n        System.gc(); // \u6267\u884c\u4e86runtime\u4e2d\u7684gc  Runtime.getruntime.gc()\n\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/JavaBaseClass/SystemStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40785, "method_name": "onCreate", "class_name": "FundingRecordsActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_funding_record);\n        ButterKnife.bind(this);\n\n        mAdapter = new FundRecordAdapter(this, mList);\n        mRecyclerview.setLayoutManager(new LinearLayoutManager(this));\n        mRecyclerview.setAdapter(mAdapter);\n        getData();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/otc/FundingRecordsActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40786, "method_name": "onClick", "class_name": "FundingRecordsActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n        switch (v.getId()) {\n            default:\n                break;\n            case R.id.back_img:\n                onBackPressed();\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/otc/FundingRecordsActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40787, "method_name": "getData", "class_name": "FundingRecordsActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getData() {\n        for (int i = 0; i < 10; i++) {\n            FundRecordBean ecommendBean = new FundRecordBean();\n            ecommendBean.setNum(100);\n            ecommendBean.setStatus(i);\n            ecommendBean.setMessage(\"\u4e70\u5165\");\n            ecommendBean.setTime(1588685332362L);\n            Date currentTime = new Date(1588685332362L);\n            SimpleDateFormat formatter1 = new SimpleDateFormat(\"yyyy-MM-dd\");\n            String dateStr = formatter1.format(currentTime);\n            ecommendBean.setTitle(dateStr);\n            mList.add(ecommendBean);\n        }\n        mAdapter.setUpdate(mList);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/ui/activity/otc/FundingRecordsActivity.java", "stars": "1", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 40788, "method_name": "initElements", "class_name": "SyringaBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new BlockCustomFlower());\n\t\telements.items.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.DECORATIONS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SyringaBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 40789, "method_name": "clientLoad", "class_name": "SyringaBlock", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\n\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SyringaBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 40790, "method_name": "init", "class_name": "SyringaBlock", "params": ["FMLCommonSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void init(FMLCommonSetupEvent event) {\n\t\tFlowersFeature feature = new DefaultFlowersFeature(BlockClusterFeatureConfig::func_227300_a_) {\n\t\t\t@Override\n\t\t\tpublic BlockState getFlowerToPlace(Random random, BlockPos bp, BlockClusterFeatureConfig fc) {\n\t\t\t\treturn block.getDefaultState();\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic boolean place(IWorld world, ChunkGenerator generator, Random random, BlockPos pos, BlockClusterFeatureConfig config) {\n\t\t\t\tDimensionType dimensionType = world.getDimension().getType();\n\t\t\t\tboolean dimensionCriteria = false;\n\t\t\t\tif (dimensionType == DimensionType.OVERWORLD)\n\t\t\t\t\tdimensionCriteria = true;\n\t\t\t\tif (!dimensionCriteria)\n\t\t\t\t\treturn false;\n\t\t\t\treturn super.place(world, generator, random, pos, config);\n\t\t\t}\n\t\t};\n\t\tfor (Biome biome : ForgeRegistries.BIOMES.getValues()) {\n\t\t\tboolean biomeCriteria = false;\n\t\t\tif (ForgeRegistries.BIOMES.getKey(biome).equals(new ResourceLocation(\"forest\")))\n\t\t\t\tbiomeCriteria = true;\n\t\t\tif (!biomeCriteria)\n\t\t\t\tcontinue;\n\t\t\tbiome.addFeature(GenerationStage.Decoration.VEGETAL_DECORATION,\n\t\t\t\t\tfeature.withConfiguration(\n\t\t\t\t\t\t\t(new BlockClusterFeatureConfig.Builder(new SimpleBlockStateProvider(block.getDefaultState()), new SimpleBlockPlacer()))\n\t\t\t\t\t\t\t\t\t.tries(64).build())\n\t\t\t\t\t\t\t.withPlacement(Placement.COUNT_HEIGHTMAP_32.configure(new FrequencyConfig(1))));\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SyringaBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 40791, "method_name": "getPickBlock", "class_name": "BlockCustomFlower", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(SyringaBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SyringaBlock.java", "stars": "2", "class_props": {"extends": "FlowerBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40792, "method_name": "getDrops", "class_name": "BlockCustomFlower", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SyringaBlock.java", "stars": "2", "class_props": {"extends": "FlowerBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40793, "method_name": "getPlantType", "class_name": "BlockCustomFlower", "params": ["IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "PlantType", "snippet": "\t\tpublic PlantType getPlantType(IBlockReader world, BlockPos pos) {\n\t\t\treturn PlantType.Plains;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/SyringaBlock.java", "stars": "2", "class_props": {"extends": "FlowerBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 40794, "method_name": "apply", "class_name": "Commands", "params": ["Player", "VipType"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void apply(Player player, VipType type) {\n\n        if (!isPresent()) return;\n\n        for (String command : getSection()) {\n            Bukkit.dispatchCommand(Bukkit.getConsoleSender(), Strings.prepareVipTypeMessage(command, player, type));\n        }\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/entity/section/Commands.java", "stars": "2", "class_props": {"extends": "VipSection", "implements": null, "modifiers": ["public"]}}, {"id": 40795, "method_name": "toDistributionMasques", "class_name": "DistributionMasqueUIMapper", "params": ["DistributionMasqueUI", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "List<DistributionMasque>", "snippet": "    public List<DistributionMasque> toDistributionMasques(DistributionMasqueUI distributionMasqueUI, String codePostal, String typeRemettantStr) {\n        IdentiteDemandeurUI identiteDemandeur = distributionMasqueUI.getIdentiteDemandeur();\n        String hashIdentite = identiteDemandeur.getHashIdentite();\n        if (StringUtils.isNotBlank(hashIdentite)) {\n            String hashDemandeur = hashGenerator.hasherAvecPepper(hashIdentite);\n            ModeSaisie modeSaisie = recupererValeurOuNullDepuisEnum(identiteDemandeur.getModeSaisie(), ModeSaisie.class);\n            TypeRemettant typeRemettant = recupererValeurOuNullDepuisEnum(typeRemettantStr, TypeRemettant.class);\n            return recupererMasquesDistribues(distributionMasqueUI, hashDemandeur, identiteDemandeur.getNombrePersonnes(), modeSaisie, codePostal, typeRemettant);\n        }\n        return List.of();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapper.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40796, "method_name": "recupererValeurOuNullDepuisEnum", "class_name": "DistributionMasqueUIMapper", "params": ["String", "Class<E>"], "throws": null, "modifiers": ["private"], "return_type": "E", "snippet": "    private <E extends Enum<E>> E recupererValeurOuNullDepuisEnum(String valeur, Class<E> enumClass) {\n        return StringUtils.isNotBlank(valeur) ? Enum.valueOf(enumClass, valeur) : null;\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapper.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40797, "method_name": "recupererMasquesDistribues", "class_name": "DistributionMasqueUIMapper", "params": ["DistributionMasqueUI", "String", "Integer", "ModeSaisie", "String", "TypeRemettant"], "throws": null, "modifiers": ["private"], "return_type": "List<DistributionMasque>", "snippet": "    private List<DistributionMasque> recupererMasquesDistribues(DistributionMasqueUI distributionMasqueUI, String hashDemandeur, Integer nombrePersonnes, ModeSaisie modeSaisie, String codePostal, TypeRemettant typeRemettant) {\n        List<DistributionMasque> distributionMasques = new ArrayList<>();\n        if (distributionMasqueUI.getNbMasquesAdulteUsageUnique() > 0) {\n            distributionMasques.add(construireDistributionMasque(hashDemandeur, nombrePersonnes, distributionMasqueUI.getNbMasquesAdulteUsageUnique(), modeSaisie, ADULTE_USAGE_UNIQUE, codePostal, typeRemettant));\n        }\n        if (distributionMasqueUI.getNbMasquesAdulteReutilisable() > 0) {\n            distributionMasques.add(construireDistributionMasque(hashDemandeur, nombrePersonnes, distributionMasqueUI.getNbMasquesAdulteReutilisable(), modeSaisie, ADULTE_REUTILISABLE, codePostal, typeRemettant));\n        }\n        if (distributionMasqueUI.getNbMasquesEnfantUsageUnique() > 0) {\n            distributionMasques.add(construireDistributionMasque(hashDemandeur, nombrePersonnes, distributionMasqueUI.getNbMasquesEnfantUsageUnique(), modeSaisie, ENFANT_USAGE_UNIQUE, codePostal, typeRemettant));\n        }\n        if (distributionMasqueUI.getNbMasquesEnfantReutilisable() > 0) {\n            distributionMasques.add(construireDistributionMasque(hashDemandeur, nombrePersonnes, distributionMasqueUI.getNbMasquesEnfantReutilisable(), modeSaisie, ENFANT_REUTILISABLE, codePostal, typeRemettant));\n        }\n        return distributionMasques;\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapper.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40798, "method_name": "construireDistributionMasque", "class_name": "DistributionMasqueUIMapper", "params": ["String", "Integer", "Integer", "ModeSaisie", "TypeMasque", "String", "TypeRemettant"], "throws": null, "modifiers": ["private"], "return_type": "DistributionMasque", "snippet": "    private DistributionMasque construireDistributionMasque(String hashDemandeur, Integer nombrePersonnes, Integer nbMasques, ModeSaisie modeSaisie, TypeMasque typeMasque, String codePostal, TypeRemettant typeRemettant) {\n        return DistributionMasque.builder()\n                .hashDemandeur(hashDemandeur)\n                .nbPersonnes(nombrePersonnes)\n                .nbMasques(nbMasques)\n                .modeSaisie(modeSaisie)\n                .typeMasque(typeMasque)\n                .dateDistribution(LocalDateTime.now(clock))\n                .codePostal(codePostal)\n                .typeRemettant(typeRemettant)\n                .build();\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/data/DistributionMasqueUIMapper.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40799, "method_name": "getId", "class_name": "AbstractJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return this._id;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40800, "method_name": "getProgress", "class_name": "AbstractJob", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "double", "snippet": "  public double getProgress() throws Exception {\n    return this._progress;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40801, "method_name": "setProgress", "class_name": "AbstractJob", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setProgress(final double progress) {\n    this._progress = progress;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40802, "method_name": "cancel", "class_name": "AbstractJob", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancel() throws Exception {\n    throw new RuntimeException(\"Job \" + this._id + \" does not support cancellation!\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40803, "method_name": "getLog", "class_name": "AbstractJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Logger", "snippet": "  public Logger getLog() {\n    return this._log;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40804, "method_name": "debug", "class_name": "AbstractJob", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void debug(final String message) {\n    this._log.debug(message);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40805, "method_name": "debug", "class_name": "AbstractJob", "params": ["String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void debug(final String message, final Throwable t) {\n    this._log.debug(message, t);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40806, "method_name": "info", "class_name": "AbstractJob", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void info(final String message) {\n    this._log.info(message);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40807, "method_name": "info", "class_name": "AbstractJob", "params": ["String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void info(final String message, final Throwable t) {\n    this._log.info(message, t);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40808, "method_name": "warn", "class_name": "AbstractJob", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void warn(final String message) {\n    this._log.warn(message);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40809, "method_name": "warn", "class_name": "AbstractJob", "params": ["String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void warn(final String message, final Throwable t) {\n    this._log.warn(message, t);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40810, "method_name": "error", "class_name": "AbstractJob", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(final String message) {\n    this._log.error(message);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40811, "method_name": "error", "class_name": "AbstractJob", "params": ["String", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void error(final String message, final Throwable t) {\n    this._log.error(message, t);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40812, "method_name": "getJobGeneratedProperties", "class_name": "AbstractJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getJobGeneratedProperties() {\n    return new Props();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40813, "method_name": "run", "class_name": "AbstractJob", "params": [], "throws": ["Exception"], "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "  public abstract void run() throws Exception;\n\n  @Override\n  public boolean isCanceled() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40814, "method_name": "isCanceled", "class_name": "AbstractJob", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCanceled() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/AbstractJob.java", "stars": "18", "class_props": {"extends": null, "implements": ["Job"], "modifiers": ["public", "abstract"]}}, {"id": 40815, "method_name": "getClock", "class_name": "EmulatorEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getClock() {\n        return clock;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/EmulatorEvent.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40816, "method_name": "decreaseClock", "class_name": "EmulatorEvent", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void decreaseClock(long interval) {\n        clock -= interval;\n        if (clock < 0) {\n            clock = 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/EmulatorEvent.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40817, "method_name": "dispatch", "class_name": "EmulatorEvent", "params": ["Computer"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void dispatch(Computer computer);\n}\n\n", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/EmulatorEvent.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40818, "method_name": "getUnknownFields", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "com", "snippet": "  public final com.google.protobuf.UnknownFieldSet\n  getUnknownFields() {\n    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40819, "method_name": "getDescriptor", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "  public static final com.google.protobuf.Descriptors.Descriptor\n      getDescriptor() {\n    return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_descriptor;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40820, "method_name": "internalGetFieldAccessorTable", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n      internalGetFieldAccessorTable() {\n    return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_fieldAccessorTable\n        .ensureFieldAccessorsInitialized(\n            generated.io.grpc.examples.helloworld.HelloReply.class, generated.io.grpc.examples.helloworld.HelloReply.Builder.class);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40821, "method_name": "getMessage", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "  public java.lang.String getMessage() {\n    java.lang.Object ref = message_;\n    if (ref instanceof java.lang.String) {\n      return (java.lang.String) ref;\n    } else {\n      com.google.protobuf.ByteString bs = \n          (com.google.protobuf.ByteString) ref;\n      java.lang.String s = bs.toStringUtf8();\n      message_ = s;\n      return s;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40822, "method_name": "getMessageBytes", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.ByteString\n      getMessageBytes() {\n    java.lang.Object ref = message_;\n    if (ref instanceof java.lang.String) {\n      com.google.protobuf.ByteString b = \n          com.google.protobuf.ByteString.copyFromUtf8(\n              (java.lang.String) ref);\n      message_ = b;\n      return b;\n    } else {\n      return (com.google.protobuf.ByteString) ref;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40823, "method_name": "isInitialized", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "  public final boolean isInitialized() {\n    byte isInitialized = memoizedIsInitialized;\n    if (isInitialized == 1) return true;\n    if (isInitialized == 0) return false;\n\n    memoizedIsInitialized = 1;\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40824, "method_name": "writeTo", "class_name": "HelloReply", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void writeTo(com.google.protobuf.CodedOutputStream output)\n                      throws java.io.IOException {\n    if (!getMessageBytes().isEmpty()) {\n      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40825, "method_name": "getSerializedSize", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSerializedSize() {\n    int size = memoizedSize;\n    if (size != -1) return size;\n\n    size = 0;\n    if (!getMessageBytes().isEmpty()) {\n      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);\n    }\n    memoizedSize = size;\n    return size;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40826, "method_name": "equals", "class_name": "HelloReply", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(final java.lang.Object obj) {\n    if (obj == this) {\n     return true;\n    }\n    if (!(obj instanceof generated.io.grpc.examples.helloworld.HelloReply)) {\n      return super.equals(obj);\n    }\n    generated.io.grpc.examples.helloworld.HelloReply other = (generated.io.grpc.examples.helloworld.HelloReply) obj;\n\n    boolean result = true;\n    result = result && getMessage()\n        .equals(other.getMessage());\n    return result;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40827, "method_name": "hashCode", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    if (memoizedHashCode != 0) {\n      return memoizedHashCode;\n    }\n    int hash = 41;\n    hash = (19 * hash) + getDescriptorForType().hashCode();\n    hash = (37 * hash) + MESSAGE_FIELD_NUMBER;\n    hash = (53 * hash) + getMessage().hashCode();\n    hash = (29 * hash) + unknownFields.hashCode();\n    memoizedHashCode = hash;\n    return hash;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40828, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(\n      com.google.protobuf.ByteString data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40829, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(\n      com.google.protobuf.ByteString data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40830, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(byte[] data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40831, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(\n      byte[] data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40832, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40833, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40834, "method_name": "parseDelimitedFrom", "class_name": "HelloReply", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseDelimitedFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40835, "method_name": "parseDelimitedFrom", "class_name": "HelloReply", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseDelimitedFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40836, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(\n      com.google.protobuf.CodedInputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40837, "method_name": "parseFrom", "class_name": "HelloReply", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply parseFrom(\n      com.google.protobuf.CodedInputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40838, "method_name": "newBuilderForType", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40839, "method_name": "newBuilder", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder() {\n    return DEFAULT_INSTANCE.toBuilder();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40840, "method_name": "newBuilder", "class_name": "HelloReply", "params": ["generated"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder(generated.io.grpc.examples.helloworld.HelloReply prototype) {\n    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40841, "method_name": "toBuilder", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder toBuilder() {\n    return this == DEFAULT_INSTANCE\n        ? new Builder() : new Builder().mergeFrom(this);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40842, "method_name": "newBuilderForType", "class_name": "HelloReply", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "  protected Builder newBuilderForType(\n      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n    Builder builder = new Builder(parent);\n    return builder;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40843, "method_name": "getDefaultInstance", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloReply getDefaultInstance() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40844, "method_name": "parser", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "  public static com.google.protobuf.Parser<HelloReply> parser() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40845, "method_name": "getParserForType", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.Parser<HelloReply> getParserForType() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40846, "method_name": "getDefaultInstanceForType", "class_name": "HelloReply", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "  public generated.io.grpc.examples.helloworld.HelloReply getDefaultInstanceForType() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloReplyOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 40847, "method_name": "getDescriptor", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40848, "method_name": "internalGetFieldAccessorTable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              generated.io.grpc.examples.helloworld.HelloReply.class, generated.io.grpc.examples.helloworld.HelloReply.Builder.class);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40849, "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void maybeForceBuilderInitialization() {\n      if (com.google.protobuf.GeneratedMessageV3\n              .alwaysUseFieldBuilders) {\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40850, "method_name": "clear", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clear() {\n      super.clear();\n      message_ = \"\";\n\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40851, "method_name": "getDescriptorForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Descriptors.Descriptor\n        getDescriptorForType() {\n      return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloReply_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40852, "method_name": "getDefaultInstanceForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.io.grpc.examples.helloworld.HelloReply getDefaultInstanceForType() {\n      return generated.io.grpc.examples.helloworld.HelloReply.getDefaultInstance();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40853, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.io.grpc.examples.helloworld.HelloReply build() {\n      generated.io.grpc.examples.helloworld.HelloReply result = buildPartial();\n      if (!result.isInitialized()) {\n        throw newUninitializedMessageException(result);\n      }\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40854, "method_name": "buildPartial", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.io.grpc.examples.helloworld.HelloReply buildPartial() {\n      generated.io.grpc.examples.helloworld.HelloReply result = new generated.io.grpc.examples.helloworld.HelloReply(this);\n      result.message_ = message_;\n      onBuilt();\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40855, "method_name": "clone", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clone() {\n      return (Builder) super.clone();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40856, "method_name": "setField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.setField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40857, "method_name": "clearField", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearField(\n        com.google.protobuf.Descriptors.FieldDescriptor field) {\n      return (Builder) super.clearField(field);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40858, "method_name": "clearOneof", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearOneof(\n        com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n      return (Builder) super.clearOneof(oneof);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40859, "method_name": "setRepeatedField", "class_name": "Builder", "params": ["com", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        int index, Object value) {\n      return (Builder) super.setRepeatedField(field, index, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40860, "method_name": "addRepeatedField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder addRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.addRepeatedField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40861, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(com.google.protobuf.Message other) {\n      if (other instanceof generated.io.grpc.examples.helloworld.HelloReply) {\n        return mergeFrom((generated.io.grpc.examples.helloworld.HelloReply)other);\n      } else {\n        super.mergeFrom(other);\n        return this;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40862, "method_name": "mergeFrom", "class_name": "Builder", "params": ["generated"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(generated.io.grpc.examples.helloworld.HelloReply other) {\n      if (other == generated.io.grpc.examples.helloworld.HelloReply.getDefaultInstance()) return this;\n      if (!other.getMessage().isEmpty()) {\n        message_ = other.message_;\n        onChanged();\n      }\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40863, "method_name": "isInitialized", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {\n      return true;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40864, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      generated.io.grpc.examples.helloworld.HelloReply parsedMessage = null;\n      try {\n        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n      } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n        parsedMessage = (generated.io.grpc.examples.helloworld.HelloReply) e.getUnfinishedMessage();\n        throw e.unwrapIOException();\n      } finally {\n        if (parsedMessage != null) {\n          mergeFrom(parsedMessage);\n        }\n      }\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40865, "method_name": "getMessage", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.lang.String getMessage() {\n      java.lang.Object ref = message_;\n      if (!(ref instanceof java.lang.String)) {\n        com.google.protobuf.ByteString bs =\n            (com.google.protobuf.ByteString) ref;\n        java.lang.String s = bs.toStringUtf8();\n        message_ = s;\n        return s;\n      } else {\n        return (java.lang.String) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40866, "method_name": "getMessageBytes", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString\n        getMessageBytes() {\n      java.lang.Object ref = message_;\n      if (ref instanceof String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        message_ = b;\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40867, "method_name": "setMessage", "class_name": "Builder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setMessage(\n        java.lang.String value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  \n      message_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40868, "method_name": "clearMessage", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearMessage() {\n      \n      message_ = getDefaultInstance().getMessage();\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40869, "method_name": "setMessageBytes", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setMessageBytes(\n        com.google.protobuf.ByteString value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  checkByteStringIsUtf8(value);\n      \n      message_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40870, "method_name": "setUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder setUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40871, "method_name": "mergeUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder mergeUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloReply.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 40872, "method_name": "onOK", "class_name": "DlgWaste", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onOK() {\n        final float weight = Float.parseFloat(textAreaWeight.getText());\n        try {\n            waste = new Waste(weight);\n        } catch (Exception e) {\n            JOptionPane.showMessageDialog(null, e.getMessage(), \"Waste dialog error\", JOptionPane.ERROR_MESSAGE);\n            waste = null;\n        }\n        setVisible(false);\n\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/view/DlgWaste.java", "stars": "2", "class_props": {"extends": "JDialog", "implements": ["IWoodDialog"], "modifiers": ["public"]}}, {"id": 40873, "method_name": "onCancel", "class_name": "DlgWaste", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onCancel() {\n        waste = null;\n        setVisible(false);\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/view/DlgWaste.java", "stars": "2", "class_props": {"extends": "JDialog", "implements": ["IWoodDialog"], "modifiers": ["public"]}}, {"id": 40874, "method_name": "getObject", "class_name": "DlgWaste", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getObject() {\n        return waste;\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/view/DlgWaste.java", "stars": "2", "class_props": {"extends": "JDialog", "implements": ["IWoodDialog"], "modifiers": ["public"]}}, {"id": 40875, "method_name": "setWoodDirectory", "class_name": "DlgWaste", "params": ["WoodDirectory"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setWoodDirectory(WoodDirectory woodDirectory) {\n\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/view/DlgWaste.java", "stars": "2", "class_props": {"extends": "JDialog", "implements": ["IWoodDialog"], "modifiers": ["public"]}}, {"id": 40876, "method_name": "toString", "class_name": "DlgWaste", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Waste\";\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab7/src/main/java/com/demkom58/lab7/view/DlgWaste.java", "stars": "2", "class_props": {"extends": "JDialog", "implements": ["IWoodDialog"], "modifiers": ["public"]}}, {"id": 40877, "method_name": "main", "class_name": "Demo05File", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        show03();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo01/File/Demo05File.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40878, "method_name": "show03", "class_name": "Demo05File", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show03() {\n        File f1 = new File(\"08_FileAndRecursion\\\\\u65b0\u5efa\u6587\u4ef6\u5939\");\n        boolean b1 = f1.delete();\n        System.out.println(\"b1:\"+b1);\n\n        File f2 = new File(\"08_FileAndRecursion\\\\abc.txt\");\n        System.out.println(f2.delete());\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo01/File/Demo05File.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40879, "method_name": "show02", "class_name": "Demo05File", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show02() {\n        File f1 = new File(\"08_FileAndRecursion\\\\aaa\");\n        boolean b1 = f1.mkdir();\n        System.out.println(\"b1:\"+b1);\n\n        File f2 = new File(\"08_FileAndRecursion\\\\111\\\\222\\\\333\\\\444\");\n        boolean b2 = f2.mkdirs();\n        System.out.println(\"b2:\"+b2);\n\n        File f3 = new File(\"08_FileAndRecursion\\\\abc.txt\");\n        boolean b3 = f3.mkdirs();//\u770b\u7c7b\u578b,\u662f\u4e00\u4e2a\u6587\u4ef6\n        System.out.println(\"b3:\"+b3);\n\n        File f4 = new File(\"08_F\\\\ccc\");\n        boolean b4 = f4.mkdirs();//\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38,\u8def\u5f84\u4e0d\u5b58\u5728,\u4e0d\u4f1a\u521b\u5efa\n        System.out.println(\"b4:\"+b4);\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo01/File/Demo05File.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40880, "method_name": "show01", "class_name": "Demo05File", "params": [], "throws": ["IOException"], "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void show01() throws IOException {\n        File f1 = new File(\"C:\\\\Users\\\\itcast\\\\IdeaProjects\\\\shungyuan\\\\08_FileAndRecursion\\\\1.txt\");\n        boolean b1 = f1.createNewFile();\n        System.out.println(\"b1:\"+b1);\n\n        File f2 = new File(\"08_FileAndRecursion\\\\2.txt\");\n        System.out.println(f2.createNewFile());\n\n        File f3 = new File(\"08_FileAndRecursion\\\\\u65b0\u5efa\u6587\u4ef6\u5939\");\n        System.out.println(f3.createNewFile());//\u4e0d\u8981\u88ab\u540d\u79f0\u8ff7\u7cca,\u8981\u770b\u7c7b\u578b\n\n        File f4 = new File(\"08_FileAndRecursi\\\\3.txt\");\n        System.out.println(f4.createNewFile());//\u8def\u5f84\u4e0d\u5b58\u5728,\u629b\u51faIOException\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/19.%E3%80%90File%E7%B1%BB%E3%80%81%E9%80%92%E5%BD%92%E3%80%91-%E7%AC%94%E8%AE%B0/code/08_FileAndRecursion/src/com/itheima/demo01/File/Demo05File.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 40881, "method_name": "operationComplete", "class_name": "ConnectionListener", "params": ["ChannelFuture"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void operationComplete(ChannelFuture future) throws Exception {\n        boolean successd=future.isSuccess();\n        //\u5982\u679c\u91cd\u8fde\u5931\u8d25\uff0c\u5219\u8c03\u7528ChannelInactive\u65b9\u6cd5\uff0c\u518d\u6b21\u51fa\u53d1\u91cd\u8fde\u4e8b\u4ef6\uff0c\u4e00\u76f4\u5c1d\u8bd512\u6b21\uff0c\u5982\u679c\u5931\u8d25\u5219\u4e0d\u518d\u91cd\u8fde\n        if (!successd) {\n            log.error(\"\u91cd\u8fde\u5931\u8d25...\");\n            future.channel().pipeline().fireChannelInactive();\n        }else{\n            log.info(\"\u91cd\u8fde\u670d\u52a1\u5668\u6210\u529f...\");\n        }\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/client/src/main/java/cn/lzj/nacos/client/netty/ConnectionListener.java", "stars": "34", "class_props": {"extends": null, "implements": ["ChannelFutureListener"], "modifiers": ["public"]}}, {"id": 40882, "method_name": "getName", "class_name": "AzkabanNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return this.name;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40883, "method_name": "getType", "class_name": "AzkabanNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return this.type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40884, "method_name": "getProps", "class_name": "AzkabanNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getProps() {\n    return this.props;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40885, "method_name": "getCondition", "class_name": "AzkabanNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCondition() {\n    return this.condition;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40886, "method_name": "getDependsOn", "class_name": "AzkabanNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getDependsOn() {\n    return this.dependsOn;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/AzkabanNode.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 40887, "method_name": "exec", "class_name": "GBoardList", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String exec(HttpServletRequest req, HttpServletResponse resp) {\n\t\tString view = \"/gBoard/gBoardList.jsp\";\n\t\t// \ud560\uc77c\n\t\tString sid = (String)req.getSession().getAttribute(\"SID\");\n\t\t// \ub370\uc774\ud130\ubca0\uc774\uc2a4\uc791\uc5c5\ud558\uace0 \uacb0\uacfc \ubc1b\uace0\n\t\tGBoardDAO gDAO = new GBoardDAO();\n\t\tArrayList<GBoardVO> list = gDAO.getGList();\n\t\t\n\t\t// \uc791\uc131\ud55c \ubc29\uba85\ub85d \uae00 \uc218 \ubc1b\uae30\n\t\tint cnt = gDAO.getCnt(sid);\n\t\t\n\t\tString avt = gDAO.getAvt(sid);\n\t\t// \uacb0\uacfc \ub118\uaca8\uc8fc\uace0\n\t\treq.setAttribute(\"LIST\", list);\n\t\treq.setAttribute(\"CNT\", cnt);\n\t\treq.setAttribute(\"AVT\", avt);\n\t\t// \ubdf0 \ubd80\ub974\uace0\n\t\treturn view;\n\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/controller/gBoard/GBoardList.java", "stars": "2", "class_props": {"extends": null, "implements": ["ClsController"], "modifiers": ["public"]}}, {"id": 40888, "method_name": "onCreateView", "class_name": "CallFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "  public View onCreateView(\n      LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n    View controlView = inflater.inflate(R.layout.fragment_call, container, false);\n\n    // Create UI controls.\n    contactView = controlView.findViewById(R.id.contact_name_call);\n    ImageButton disconnectButton = controlView.findViewById(R.id.button_call_disconnect);\n    cameraSwitchButton = controlView.findViewById(R.id.button_call_switch_camera);\n    videoScalingButton = controlView.findViewById(R.id.button_call_scaling_mode);\n    toggleMuteButton = controlView.findViewById(R.id.button_call_toggle_mic);\n    captureFormatText = controlView.findViewById(R.id.capture_format_text_call);\n    captureFormatSlider = controlView.findViewById(R.id.capture_format_slider_call);\n\n    // Add buttons click events.\n    disconnectButton.setOnClickListener(new View.OnClickListener() {\n      @Override\n      public void onClick(View view) {\n        callEvents.onCallHangUp();\n      }\n    });\n\n    cameraSwitchButton.setOnClickListener(new View.OnClickListener() {\n      @Override\n      public void onClick(View view) {\n        callEvents.onCameraSwitch();\n      }\n    });\n\n    videoScalingButton.setOnClickListener(new View.OnClickListener() {\n      @Override\n      public void onClick(View view) {\n        if (scalingType == ScalingType.SCALE_ASPECT_FILL) {\n          videoScalingButton.setBackgroundResource(R.drawable.ic_action_full_screen);\n          scalingType = ScalingType.SCALE_ASPECT_FIT;\n        } else {\n          videoScalingButton.setBackgroundResource(R.drawable.ic_action_return_from_full_screen);\n          scalingType = ScalingType.SCALE_ASPECT_FILL;\n        }\n        callEvents.onVideoScalingSwitch(scalingType);\n      }\n    });\n    scalingType = ScalingType.SCALE_ASPECT_FILL;\n\n    toggleMuteButton.setOnClickListener(new View.OnClickListener() {\n      @Override\n      public void onClick(View view) {\n        boolean enabled = callEvents.onToggleMic();\n        toggleMuteButton.setAlpha(enabled ? 1.0f : 0.3f);\n      }\n    });\n\n    return controlView;\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/CallFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40889, "method_name": "onStart", "class_name": "CallFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onStart() {\n    super.onStart();\n\n    boolean captureSliderEnabled = false;\n    Bundle args = getArguments();\n    if (args != null) {\n      String contactName = args.getString(CallActivity.EXTRA_ROOMID);\n      contactView.setText(contactName);\n      videoCallEnabled = args.getBoolean(CallActivity.EXTRA_VIDEO_CALL, true);\n      captureSliderEnabled = videoCallEnabled\n          && args.getBoolean(CallActivity.EXTRA_VIDEO_CAPTUREQUALITYSLIDER_ENABLED, false);\n    }\n    if (!videoCallEnabled) {\n      cameraSwitchButton.setVisibility(View.INVISIBLE);\n    }\n    if (captureSliderEnabled) {\n      captureFormatSlider.setOnSeekBarChangeListener(\n          new CaptureQualityController(captureFormatText, callEvents));\n    } else {\n      captureFormatText.setVisibility(View.GONE);\n      captureFormatSlider.setVisibility(View.GONE);\n    }\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/CallFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40890, "method_name": "onAttach", "class_name": "CallFragment", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onAttach(Activity activity) {\n    super.onAttach(activity);\n    callEvents = (OnCallEvents) activity;\n  }", "url": "https://raw.githubusercontent.com/agent10/androidwebrtcexample/master/app/src/main/java/org/appspot/apprtc/CallFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 40891, "method_name": "registerAllExtensions", "class_name": "FileProto", "params": ["com"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void registerAllExtensions(\n      com.google.protobuf.ExtensionRegistryLite registry) {\n  }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 40892, "method_name": "registerAllExtensions", "class_name": "FileProto", "params": ["com"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void registerAllExtensions(\n      com.google.protobuf.ExtensionRegistry registry) {\n    registerAllExtensions(\n        (com.google.protobuf.ExtensionRegistryLite) registry);\n  }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 40893, "method_name": "getDescriptor", "class_name": "FileProto", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "  public static com.google.protobuf.Descriptors.FileDescriptor\n      getDescriptor() {\n    return descriptor;\n  }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 40894, "method_name": "getUnknownFields", "class_name": "File", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "com", "snippet": "    public final com.google.protobuf.UnknownFieldSet\n    getUnknownFields() {\n      return this.unknownFields;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40895, "method_name": "getDescriptor", "class_name": "File", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return FileProto.internal_static_File_descriptor;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40896, "method_name": "internalGetFieldAccessorTable", "class_name": "File", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return FileProto.internal_static_File_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              FileProto.File.class, FileProto.File.Builder.class);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40897, "method_name": "hasHeader", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasHeader() {\n      return ((bitField0_ & 0x00000001) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40898, "method_name": "getHeader", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "    public FileProto.Header getHeader() {\n      return header_ == null ? FileProto.Header.getDefaultInstance() : header_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40899, "method_name": "getHeaderOrBuilder", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "    public FileProto.HeaderOrBuilder getHeaderOrBuilder() {\n      return header_ == null ? FileProto.Header.getDefaultInstance() : header_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40900, "method_name": "getKeyList", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.util.List<FileProto.Key> getKeyList() {\n      return key_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40901, "method_name": "getKeyOrBuilderList", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.util.List<? extends FileProto.KeyOrBuilder> \n        getKeyOrBuilderList() {\n      return key_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40902, "method_name": "getKeyCount", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getKeyCount() {\n      return key_.size();\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40903, "method_name": "getKey", "class_name": "File", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "    public FileProto.Key getKey(int index) {\n      return key_.get(index);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40904, "method_name": "getKeyOrBuilder", "class_name": "File", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "    public FileProto.KeyOrBuilder getKeyOrBuilder(\n        int index) {\n      return key_.get(index);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40905, "method_name": "isInitialized", "class_name": "File", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {\n      byte isInitialized = memoizedIsInitialized;\n      if (isInitialized == 1) return true;\n      if (isInitialized == 0) return false;\n\n      memoizedIsInitialized = 1;\n      return true;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40906, "method_name": "writeTo", "class_name": "File", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeTo(com.google.protobuf.CodedOutputStream output)\n                        throws java.io.IOException {\n      if (((bitField0_ & 0x00000001) != 0)) {\n        output.writeMessage(1, getHeader());\n      }\n      for (int i = 0; i < key_.size(); i++) {\n        output.writeMessage(2, key_.get(i));\n      }\n      unknownFields.writeTo(output);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40907, "method_name": "getSerializedSize", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSerializedSize() {\n      int size = memoizedSize;\n      if (size != -1) return size;\n\n      size = 0;\n      if (((bitField0_ & 0x00000001) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeMessageSize(1, getHeader());\n      }\n      for (int i = 0; i < key_.size(); i++) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeMessageSize(2, key_.get(i));\n      }\n      size += unknownFields.getSerializedSize();\n      memoizedSize = size;\n      return size;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40908, "method_name": "equals", "class_name": "File", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(final java.lang.Object obj) {\n      if (obj == this) {\n       return true;\n      }\n      if (!(obj instanceof FileProto.File)) {\n        return super.equals(obj);\n      }\n      FileProto.File other = (FileProto.File) obj;\n\n      if (hasHeader() != other.hasHeader()) return false;\n      if (hasHeader()) {\n        if (!getHeader()\n            .equals(other.getHeader())) return false;\n      }\n      if (!getKeyList()\n          .equals(other.getKeyList())) return false;\n      if (!unknownFields.equals(other.unknownFields)) return false;\n      return true;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40909, "method_name": "hashCode", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n      if (memoizedHashCode != 0) {\n        return memoizedHashCode;\n      }\n      int hash = 41;\n      hash = (19 * hash) + getDescriptor().hashCode();\n      if (hasHeader()) {\n        hash = (37 * hash) + HEADER_FIELD_NUMBER;\n        hash = (53 * hash) + getHeader().hashCode();\n      }\n      if (getKeyCount() > 0) {\n        hash = (37 * hash) + KEY_FIELD_NUMBER;\n        hash = (53 * hash) + getKeyList().hashCode();\n      }\n      hash = (29 * hash) + unknownFields.hashCode();\n      memoizedHashCode = hash;\n      return hash;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40910, "method_name": "parseFrom", "class_name": "File", "params": ["java"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        java.nio.ByteBuffer data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40911, "method_name": "parseFrom", "class_name": "File", "params": ["java", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        java.nio.ByteBuffer data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40912, "method_name": "parseFrom", "class_name": "File", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        com.google.protobuf.ByteString data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40913, "method_name": "parseFrom", "class_name": "File", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        com.google.protobuf.ByteString data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40914, "method_name": "parseFrom", "class_name": "File", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(byte[] data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40915, "method_name": "parseFrom", "class_name": "File", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        byte[] data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40916, "method_name": "parseFrom", "class_name": "File", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40917, "method_name": "parseFrom", "class_name": "File", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40918, "method_name": "parseDelimitedFrom", "class_name": "File", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseDelimitedFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40919, "method_name": "parseDelimitedFrom", "class_name": "File", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseDelimitedFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40920, "method_name": "parseFrom", "class_name": "File", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        com.google.protobuf.CodedInputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40921, "method_name": "parseFrom", "class_name": "File", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File parseFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40922, "method_name": "newBuilderForType", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40923, "method_name": "newBuilder", "class_name": "File", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "    public static Builder newBuilder() {\n      return DEFAULT_INSTANCE.toBuilder();\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40924, "method_name": "newBuilder", "class_name": "File", "params": ["FileProto"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "    public static Builder newBuilder(FileProto.File prototype) {\n      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40925, "method_name": "toBuilder", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder toBuilder() {\n      return this == DEFAULT_INSTANCE\n          ? new Builder() : new Builder().mergeFrom(this);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40926, "method_name": "newBuilderForType", "class_name": "File", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "    protected Builder newBuilderForType(\n        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n      Builder builder = new Builder(parent);\n      return builder;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40927, "method_name": "getDefaultInstance", "class_name": "File", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.File getDefaultInstance() {\n      return DEFAULT_INSTANCE;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40928, "method_name": "parser", "class_name": "File", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "    public static com.google.protobuf.Parser<File> parser() {\n      return PARSER;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40929, "method_name": "getParserForType", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Parser<File> getParserForType() {\n      return PARSER;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40930, "method_name": "getDefaultInstanceForType", "class_name": "File", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "    public FileProto.File getDefaultInstanceForType() {\n      return DEFAULT_INSTANCE;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40931, "method_name": "getDescriptor", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "      public static final com.google.protobuf.Descriptors.Descriptor\n          getDescriptor() {\n        return FileProto.internal_static_File_descriptor;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40932, "method_name": "internalGetFieldAccessorTable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n          internalGetFieldAccessorTable() {\n        return FileProto.internal_static_File_fieldAccessorTable\n            .ensureFieldAccessorsInitialized(\n                FileProto.File.class, FileProto.File.Builder.class);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40933, "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "      private void maybeForceBuilderInitialization() {\n        if (com.google.protobuf.GeneratedMessageV3\n                .alwaysUseFieldBuilders) {\n          getHeaderFieldBuilder();\n          getKeyFieldBuilder();\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40934, "method_name": "clear", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clear() {\n        super.clear();\n        if (headerBuilder_ == null) {\n          header_ = null;\n        } else {\n          headerBuilder_.clear();\n        }\n        bitField0_ = (bitField0_ & ~0x00000001);\n        if (keyBuilder_ == null) {\n          key_ = java.util.Collections.emptyList();\n          bitField0_ = (bitField0_ & ~0x00000002);\n        } else {\n          keyBuilder_.clear();\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40935, "method_name": "getDescriptorForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "      public com.google.protobuf.Descriptors.Descriptor\n          getDescriptorForType() {\n        return FileProto.internal_static_File_descriptor;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40936, "method_name": "getDefaultInstanceForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.File getDefaultInstanceForType() {\n        return FileProto.File.getDefaultInstance();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40937, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.File build() {\n        FileProto.File result = buildPartial();\n        if (!result.isInitialized()) {\n          throw newUninitializedMessageException(result);\n        }\n        return result;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40938, "method_name": "buildPartial", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.File buildPartial() {\n        FileProto.File result = new FileProto.File(this);\n        int from_bitField0_ = bitField0_;\n        int to_bitField0_ = 0;\n        if (((from_bitField0_ & 0x00000001) != 0)) {\n          if (headerBuilder_ == null) {\n            result.header_ = header_;\n          } else {\n            result.header_ = headerBuilder_.build();\n          }\n          to_bitField0_ |= 0x00000001;\n        }\n        if (keyBuilder_ == null) {\n          if (((bitField0_ & 0x00000002) != 0)) {\n            key_ = java.util.Collections.unmodifiableList(key_);\n            bitField0_ = (bitField0_ & ~0x00000002);\n          }\n          result.key_ = key_;\n        } else {\n          result.key_ = keyBuilder_.build();\n        }\n        result.bitField0_ = to_bitField0_;\n        onBuilt();\n        return result;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40939, "method_name": "clone", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clone() {\n        return super.clone();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40940, "method_name": "setField", "class_name": "Builder", "params": ["com", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          java.lang.Object value) {\n        return super.setField(field, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40941, "method_name": "clearField", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearField(\n          com.google.protobuf.Descriptors.FieldDescriptor field) {\n        return super.clearField(field);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40942, "method_name": "clearOneof", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearOneof(\n          com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n        return super.clearOneof(oneof);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40943, "method_name": "setRepeatedField", "class_name": "Builder", "params": ["com", "int", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setRepeatedField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          int index, java.lang.Object value) {\n        return super.setRepeatedField(field, index, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40944, "method_name": "addRepeatedField", "class_name": "Builder", "params": ["com", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addRepeatedField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          java.lang.Object value) {\n        return super.addRepeatedField(field, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40945, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(com.google.protobuf.Message other) {\n        if (other instanceof FileProto.File) {\n          return mergeFrom((FileProto.File)other);\n        } else {\n          super.mergeFrom(other);\n          return this;\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40946, "method_name": "mergeFrom", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(FileProto.File other) {\n        if (other == FileProto.File.getDefaultInstance()) return this;\n        if (other.hasHeader()) {\n          mergeHeader(other.getHeader());\n        }\n        if (keyBuilder_ == null) {\n          if (!other.key_.isEmpty()) {\n            if (key_.isEmpty()) {\n              key_ = other.key_;\n              bitField0_ = (bitField0_ & ~0x00000002);\n            } else {\n              ensureKeyIsMutable();\n              key_.addAll(other.key_);\n            }\n            onChanged();\n          }\n        } else {\n          if (!other.key_.isEmpty()) {\n            if (keyBuilder_.isEmpty()) {\n              keyBuilder_.dispose();\n              keyBuilder_ = null;\n              key_ = other.key_;\n              bitField0_ = (bitField0_ & ~0x00000002);\n              keyBuilder_ = \n                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?\n                   getKeyFieldBuilder() : null;\n            } else {\n              keyBuilder_.addAllMessages(other.key_);\n            }\n          }\n        }\n        this.mergeUnknownFields(other.unknownFields);\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40947, "method_name": "isInitialized", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "      public final boolean isInitialized() {\n        return true;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40948, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(\n          com.google.protobuf.CodedInputStream input,\n          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n          throws java.io.IOException {\n        FileProto.File parsedMessage = null;\n        try {\n          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n        } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n          parsedMessage = (FileProto.File) e.getUnfinishedMessage();\n          throw e.unwrapIOException();\n        } finally {\n          if (parsedMessage != null) {\n            mergeFrom(parsedMessage);\n          }\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40949, "method_name": "hasHeader", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasHeader() {\n        return ((bitField0_ & 0x00000001) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40950, "method_name": "getHeader", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Header getHeader() {\n        if (headerBuilder_ == null) {\n          return header_ == null ? FileProto.Header.getDefaultInstance() : header_;\n        } else {\n          return headerBuilder_.getMessage();\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40951, "method_name": "setHeader", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setHeader(FileProto.Header value) {\n        if (headerBuilder_ == null) {\n          if (value == null) {\n            throw new NullPointerException();\n          }\n          header_ = value;\n          onChanged();\n        } else {\n          headerBuilder_.setMessage(value);\n        }\n        bitField0_ |= 0x00000001;\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40952, "method_name": "setHeader", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setHeader(\n          FileProto.Header.Builder builderForValue) {\n        if (headerBuilder_ == null) {\n          header_ = builderForValue.build();\n          onChanged();\n        } else {\n          headerBuilder_.setMessage(builderForValue.build());\n        }\n        bitField0_ |= 0x00000001;\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40953, "method_name": "mergeHeader", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeHeader(FileProto.Header value) {\n        if (headerBuilder_ == null) {\n          if (((bitField0_ & 0x00000001) != 0) &&\n              header_ != null &&\n              header_ != FileProto.Header.getDefaultInstance()) {\n            header_ =\n              FileProto.Header.newBuilder(header_).mergeFrom(value).buildPartial();\n          } else {\n            header_ = value;\n          }\n          onChanged();\n        } else {\n          headerBuilder_.mergeFrom(value);\n        }\n        bitField0_ |= 0x00000001;\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40954, "method_name": "clearHeader", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearHeader() {\n        if (headerBuilder_ == null) {\n          header_ = null;\n          onChanged();\n        } else {\n          headerBuilder_.clear();\n        }\n        bitField0_ = (bitField0_ & ~0x00000001);\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40955, "method_name": "getHeaderBuilder", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Header.Builder getHeaderBuilder() {\n        bitField0_ |= 0x00000001;\n        onChanged();\n        return getHeaderFieldBuilder().getBuilder();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40956, "method_name": "getHeaderOrBuilder", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.HeaderOrBuilder getHeaderOrBuilder() {\n        if (headerBuilder_ != null) {\n          return headerBuilder_.getMessageOrBuilder();\n        } else {\n          return header_ == null ?\n              FileProto.Header.getDefaultInstance() : header_;\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40957, "method_name": "getHeaderFieldBuilder", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "com", "snippet": "      private com.google.protobuf.SingleFieldBuilderV3<\n          FileProto.Header, FileProto.Header.Builder, FileProto.HeaderOrBuilder> \n          getHeaderFieldBuilder() {\n        if (headerBuilder_ == null) {\n          headerBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<\n              FileProto.Header, FileProto.Header.Builder, FileProto.HeaderOrBuilder>(\n                  getHeader(),\n                  getParentForChildren(),\n                  isClean());\n          header_ = null;\n        }\n        return headerBuilder_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40958, "method_name": "ensureKeyIsMutable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "      private void ensureKeyIsMutable() {\n        if (!((bitField0_ & 0x00000002) != 0)) {\n          key_ = new java.util.ArrayList<FileProto.Key>(key_);\n          bitField0_ |= 0x00000002;\n         }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40959, "method_name": "getKeyList", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "      public java.util.List<FileProto.Key> getKeyList() {\n        if (keyBuilder_ == null) {\n          return java.util.Collections.unmodifiableList(key_);\n        } else {\n          return keyBuilder_.getMessageList();\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40960, "method_name": "getKeyCount", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "      public int getKeyCount() {\n        if (keyBuilder_ == null) {\n          return key_.size();\n        } else {\n          return keyBuilder_.getCount();\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40961, "method_name": "getKey", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Key getKey(int index) {\n        if (keyBuilder_ == null) {\n          return key_.get(index);\n        } else {\n          return keyBuilder_.getMessage(index);\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40962, "method_name": "setKey", "class_name": "Builder", "params": ["int", "FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setKey(\n          int index, FileProto.Key value) {\n        if (keyBuilder_ == null) {\n          if (value == null) {\n            throw new NullPointerException();\n          }\n          ensureKeyIsMutable();\n          key_.set(index, value);\n          onChanged();\n        } else {\n          keyBuilder_.setMessage(index, value);\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40963, "method_name": "setKey", "class_name": "Builder", "params": ["int", "FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setKey(\n          int index, FileProto.Key.Builder builderForValue) {\n        if (keyBuilder_ == null) {\n          ensureKeyIsMutable();\n          key_.set(index, builderForValue.build());\n          onChanged();\n        } else {\n          keyBuilder_.setMessage(index, builderForValue.build());\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40964, "method_name": "addKey", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addKey(FileProto.Key value) {\n        if (keyBuilder_ == null) {\n          if (value == null) {\n            throw new NullPointerException();\n          }\n          ensureKeyIsMutable();\n          key_.add(value);\n          onChanged();\n        } else {\n          keyBuilder_.addMessage(value);\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40965, "method_name": "addKey", "class_name": "Builder", "params": ["int", "FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addKey(\n          int index, FileProto.Key value) {\n        if (keyBuilder_ == null) {\n          if (value == null) {\n            throw new NullPointerException();\n          }\n          ensureKeyIsMutable();\n          key_.add(index, value);\n          onChanged();\n        } else {\n          keyBuilder_.addMessage(index, value);\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40966, "method_name": "addKey", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addKey(\n          FileProto.Key.Builder builderForValue) {\n        if (keyBuilder_ == null) {\n          ensureKeyIsMutable();\n          key_.add(builderForValue.build());\n          onChanged();\n        } else {\n          keyBuilder_.addMessage(builderForValue.build());\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40967, "method_name": "addKey", "class_name": "Builder", "params": ["int", "FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addKey(\n          int index, FileProto.Key.Builder builderForValue) {\n        if (keyBuilder_ == null) {\n          ensureKeyIsMutable();\n          key_.add(index, builderForValue.build());\n          onChanged();\n        } else {\n          keyBuilder_.addMessage(index, builderForValue.build());\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40968, "method_name": "addAllKey", "class_name": "Builder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addAllKey(\n          java.lang.Iterable<? extends FileProto.Key> values) {\n        if (keyBuilder_ == null) {\n          ensureKeyIsMutable();\n          com.google.protobuf.AbstractMessageLite.Builder.addAll(\n              values, key_);\n          onChanged();\n        } else {\n          keyBuilder_.addAllMessages(values);\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40969, "method_name": "clearKey", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearKey() {\n        if (keyBuilder_ == null) {\n          key_ = java.util.Collections.emptyList();\n          bitField0_ = (bitField0_ & ~0x00000002);\n          onChanged();\n        } else {\n          keyBuilder_.clear();\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40970, "method_name": "removeKey", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder removeKey(int index) {\n        if (keyBuilder_ == null) {\n          ensureKeyIsMutable();\n          key_.remove(index);\n          onChanged();\n        } else {\n          keyBuilder_.remove(index);\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40971, "method_name": "getKeyBuilder", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Key.Builder getKeyBuilder(\n          int index) {\n        return getKeyFieldBuilder().getBuilder(index);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40972, "method_name": "getKeyOrBuilder", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.KeyOrBuilder getKeyOrBuilder(\n          int index) {\n        if (keyBuilder_ == null) {\n          return key_.get(index);  } else {\n          return keyBuilder_.getMessageOrBuilder(index);\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40973, "method_name": "getKeyOrBuilderList", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "      public java.util.List<? extends FileProto.KeyOrBuilder> \n           getKeyOrBuilderList() {\n        if (keyBuilder_ != null) {\n          return keyBuilder_.getMessageOrBuilderList();\n        } else {\n          return java.util.Collections.unmodifiableList(key_);\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40974, "method_name": "addKeyBuilder", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Key.Builder addKeyBuilder() {\n        return getKeyFieldBuilder().addBuilder(\n            FileProto.Key.getDefaultInstance());\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40975, "method_name": "addKeyBuilder", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Key.Builder addKeyBuilder(\n          int index) {\n        return getKeyFieldBuilder().addBuilder(\n            index, FileProto.Key.getDefaultInstance());\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40976, "method_name": "getKeyBuilderList", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "      public java.util.List<FileProto.Key.Builder> \n           getKeyBuilderList() {\n        return getKeyFieldBuilder().getBuilderList();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40977, "method_name": "getKeyFieldBuilder", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "com", "snippet": "      private com.google.protobuf.RepeatedFieldBuilderV3<\n          FileProto.Key, FileProto.Key.Builder, FileProto.KeyOrBuilder> \n          getKeyFieldBuilder() {\n        if (keyBuilder_ == null) {\n          keyBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<\n              FileProto.Key, FileProto.Key.Builder, FileProto.KeyOrBuilder>(\n                  key_,\n                  ((bitField0_ & 0x00000002) != 0),\n                  getParentForChildren(),\n                  isClean());\n          key_ = null;\n        }\n        return keyBuilder_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40978, "method_name": "setUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "      public final Builder setUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.setUnknownFields(unknownFields);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40979, "method_name": "mergeUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "      public final Builder mergeUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.mergeUnknownFields(unknownFields);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 40980, "method_name": "getUnknownFields", "class_name": "Header", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "com", "snippet": "    public final com.google.protobuf.UnknownFieldSet\n    getUnknownFields() {\n      return this.unknownFields;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40981, "method_name": "getDescriptor", "class_name": "Header", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return FileProto.internal_static_Header_descriptor;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40982, "method_name": "internalGetFieldAccessorTable", "class_name": "Header", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return FileProto.internal_static_Header_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              FileProto.Header.class, FileProto.Header.Builder.class);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40983, "method_name": "hasStartTimestamp", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasStartTimestamp() {\n      return ((bitField0_ & 0x00000001) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40984, "method_name": "getStartTimestamp", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getStartTimestamp() {\n      return startTimestamp_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40985, "method_name": "hasEndTimestamp", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasEndTimestamp() {\n      return ((bitField0_ & 0x00000002) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40986, "method_name": "getEndTimestamp", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getEndTimestamp() {\n      return endTimestamp_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40987, "method_name": "hasRegion", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasRegion() {\n      return ((bitField0_ & 0x00000004) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40988, "method_name": "getRegion", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.lang.String getRegion() {\n      java.lang.Object ref = region_;\n      if (ref instanceof java.lang.String) {\n        return (java.lang.String) ref;\n      } else {\n        com.google.protobuf.ByteString bs = \n            (com.google.protobuf.ByteString) ref;\n        java.lang.String s = bs.toStringUtf8();\n        if (bs.isValidUtf8()) {\n          region_ = s;\n        }\n        return s;\n      }\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40989, "method_name": "getRegionBytes", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString\n        getRegionBytes() {\n      java.lang.Object ref = region_;\n      if (ref instanceof java.lang.String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        region_ = b;\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40990, "method_name": "hasBatchNum", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasBatchNum() {\n      return ((bitField0_ & 0x00000008) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40991, "method_name": "getBatchNum", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBatchNum() {\n      return batchNum_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40992, "method_name": "hasBatchSize", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasBatchSize() {\n      return ((bitField0_ & 0x00000010) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40993, "method_name": "getBatchSize", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getBatchSize() {\n      return batchSize_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40994, "method_name": "isInitialized", "class_name": "Header", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {\n      byte isInitialized = memoizedIsInitialized;\n      if (isInitialized == 1) return true;\n      if (isInitialized == 0) return false;\n\n      memoizedIsInitialized = 1;\n      return true;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40995, "method_name": "writeTo", "class_name": "Header", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeTo(com.google.protobuf.CodedOutputStream output)\n                        throws java.io.IOException {\n      if (((bitField0_ & 0x00000001) != 0)) {\n        output.writeInt64(1, startTimestamp_);\n      }\n      if (((bitField0_ & 0x00000002) != 0)) {\n        output.writeInt64(2, endTimestamp_);\n      }\n      if (((bitField0_ & 0x00000004) != 0)) {\n        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, region_);\n      }\n      if (((bitField0_ & 0x00000008) != 0)) {\n        output.writeInt32(4, batchNum_);\n      }\n      if (((bitField0_ & 0x00000010) != 0)) {\n        output.writeInt32(5, batchSize_);\n      }\n      unknownFields.writeTo(output);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40996, "method_name": "getSerializedSize", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSerializedSize() {\n      int size = memoizedSize;\n      if (size != -1) return size;\n\n      size = 0;\n      if (((bitField0_ & 0x00000001) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeInt64Size(1, startTimestamp_);\n      }\n      if (((bitField0_ & 0x00000002) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeInt64Size(2, endTimestamp_);\n      }\n      if (((bitField0_ & 0x00000004) != 0)) {\n        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, region_);\n      }\n      if (((bitField0_ & 0x00000008) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeInt32Size(4, batchNum_);\n      }\n      if (((bitField0_ & 0x00000010) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeInt32Size(5, batchSize_);\n      }\n      size += unknownFields.getSerializedSize();\n      memoizedSize = size;\n      return size;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40997, "method_name": "equals", "class_name": "Header", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(final java.lang.Object obj) {\n      if (obj == this) {\n       return true;\n      }\n      if (!(obj instanceof FileProto.Header)) {\n        return super.equals(obj);\n      }\n      FileProto.Header other = (FileProto.Header) obj;\n\n      if (hasStartTimestamp() != other.hasStartTimestamp()) return false;\n      if (hasStartTimestamp()) {\n        if (getStartTimestamp()\n            != other.getStartTimestamp()) return false;\n      }\n      if (hasEndTimestamp() != other.hasEndTimestamp()) return false;\n      if (hasEndTimestamp()) {\n        if (getEndTimestamp()\n            != other.getEndTimestamp()) return false;\n      }\n      if (hasRegion() != other.hasRegion()) return false;\n      if (hasRegion()) {\n        if (!getRegion()\n            .equals(other.getRegion())) return false;\n      }\n      if (hasBatchNum() != other.hasBatchNum()) return false;\n      if (hasBatchNum()) {\n        if (getBatchNum()\n            != other.getBatchNum()) return false;\n      }\n      if (hasBatchSize() != other.hasBatchSize()) return false;\n      if (hasBatchSize()) {\n        if (getBatchSize()\n            != other.getBatchSize()) return false;\n      }\n      if (!unknownFields.equals(other.unknownFields)) return false;\n      return true;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40998, "method_name": "hashCode", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n      if (memoizedHashCode != 0) {\n        return memoizedHashCode;\n      }\n      int hash = 41;\n      hash = (19 * hash) + getDescriptor().hashCode();\n      if (hasStartTimestamp()) {\n        hash = (37 * hash) + STARTTIMESTAMP_FIELD_NUMBER;\n        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(\n            getStartTimestamp());\n      }\n      if (hasEndTimestamp()) {\n        hash = (37 * hash) + ENDTIMESTAMP_FIELD_NUMBER;\n        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(\n            getEndTimestamp());\n      }\n      if (hasRegion()) {\n        hash = (37 * hash) + REGION_FIELD_NUMBER;\n        hash = (53 * hash) + getRegion().hashCode();\n      }\n      if (hasBatchNum()) {\n        hash = (37 * hash) + BATCHNUM_FIELD_NUMBER;\n        hash = (53 * hash) + getBatchNum();\n      }\n      if (hasBatchSize()) {\n        hash = (37 * hash) + BATCHSIZE_FIELD_NUMBER;\n        hash = (53 * hash) + getBatchSize();\n      }\n      hash = (29 * hash) + unknownFields.hashCode();\n      memoizedHashCode = hash;\n      return hash;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 40999, "method_name": "parseFrom", "class_name": "Header", "params": ["java"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        java.nio.ByteBuffer data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41000, "method_name": "parseFrom", "class_name": "Header", "params": ["java", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        java.nio.ByteBuffer data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41001, "method_name": "parseFrom", "class_name": "Header", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        com.google.protobuf.ByteString data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41002, "method_name": "parseFrom", "class_name": "Header", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        com.google.protobuf.ByteString data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41003, "method_name": "parseFrom", "class_name": "Header", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(byte[] data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41004, "method_name": "parseFrom", "class_name": "Header", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        byte[] data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41005, "method_name": "parseFrom", "class_name": "Header", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41006, "method_name": "parseFrom", "class_name": "Header", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41007, "method_name": "parseDelimitedFrom", "class_name": "Header", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseDelimitedFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41008, "method_name": "parseDelimitedFrom", "class_name": "Header", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseDelimitedFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41009, "method_name": "parseFrom", "class_name": "Header", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        com.google.protobuf.CodedInputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41010, "method_name": "parseFrom", "class_name": "Header", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header parseFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41011, "method_name": "newBuilderForType", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41012, "method_name": "newBuilder", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "    public static Builder newBuilder() {\n      return DEFAULT_INSTANCE.toBuilder();\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41013, "method_name": "newBuilder", "class_name": "Header", "params": ["FileProto"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "    public static Builder newBuilder(FileProto.Header prototype) {\n      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41014, "method_name": "toBuilder", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder toBuilder() {\n      return this == DEFAULT_INSTANCE\n          ? new Builder() : new Builder().mergeFrom(this);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41015, "method_name": "newBuilderForType", "class_name": "Header", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "    protected Builder newBuilderForType(\n        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n      Builder builder = new Builder(parent);\n      return builder;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41016, "method_name": "getDefaultInstance", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Header getDefaultInstance() {\n      return DEFAULT_INSTANCE;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41017, "method_name": "parser", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "    public static com.google.protobuf.Parser<Header> parser() {\n      return PARSER;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41018, "method_name": "getParserForType", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Parser<Header> getParserForType() {\n      return PARSER;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41019, "method_name": "getDefaultInstanceForType", "class_name": "Header", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "    public FileProto.Header getDefaultInstanceForType() {\n      return DEFAULT_INSTANCE;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["HeaderOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41020, "method_name": "getDescriptor", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "      public static final com.google.protobuf.Descriptors.Descriptor\n          getDescriptor() {\n        return FileProto.internal_static_Header_descriptor;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41021, "method_name": "internalGetFieldAccessorTable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n          internalGetFieldAccessorTable() {\n        return FileProto.internal_static_Header_fieldAccessorTable\n            .ensureFieldAccessorsInitialized(\n                FileProto.Header.class, FileProto.Header.Builder.class);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41022, "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "      private void maybeForceBuilderInitialization() {\n        if (com.google.protobuf.GeneratedMessageV3\n                .alwaysUseFieldBuilders) {\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41023, "method_name": "clear", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clear() {\n        super.clear();\n        startTimestamp_ = 0L;\n        bitField0_ = (bitField0_ & ~0x00000001);\n        endTimestamp_ = 0L;\n        bitField0_ = (bitField0_ & ~0x00000002);\n        region_ = \"\";\n        bitField0_ = (bitField0_ & ~0x00000004);\n        batchNum_ = 0;\n        bitField0_ = (bitField0_ & ~0x00000008);\n        batchSize_ = 0;\n        bitField0_ = (bitField0_ & ~0x00000010);\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41024, "method_name": "getDescriptorForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "      public com.google.protobuf.Descriptors.Descriptor\n          getDescriptorForType() {\n        return FileProto.internal_static_Header_descriptor;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41025, "method_name": "getDefaultInstanceForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Header getDefaultInstanceForType() {\n        return FileProto.Header.getDefaultInstance();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41026, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Header build() {\n        FileProto.Header result = buildPartial();\n        if (!result.isInitialized()) {\n          throw newUninitializedMessageException(result);\n        }\n        return result;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41027, "method_name": "buildPartial", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Header buildPartial() {\n        FileProto.Header result = new FileProto.Header(this);\n        int from_bitField0_ = bitField0_;\n        int to_bitField0_ = 0;\n        if (((from_bitField0_ & 0x00000001) != 0)) {\n          result.startTimestamp_ = startTimestamp_;\n          to_bitField0_ |= 0x00000001;\n        }\n        if (((from_bitField0_ & 0x00000002) != 0)) {\n          result.endTimestamp_ = endTimestamp_;\n          to_bitField0_ |= 0x00000002;\n        }\n        if (((from_bitField0_ & 0x00000004) != 0)) {\n          to_bitField0_ |= 0x00000004;\n        }\n        result.region_ = region_;\n        if (((from_bitField0_ & 0x00000008) != 0)) {\n          result.batchNum_ = batchNum_;\n          to_bitField0_ |= 0x00000008;\n        }\n        if (((from_bitField0_ & 0x00000010) != 0)) {\n          result.batchSize_ = batchSize_;\n          to_bitField0_ |= 0x00000010;\n        }\n        result.bitField0_ = to_bitField0_;\n        onBuilt();\n        return result;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41028, "method_name": "clone", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clone() {\n        return super.clone();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41029, "method_name": "setField", "class_name": "Builder", "params": ["com", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          java.lang.Object value) {\n        return super.setField(field, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41030, "method_name": "clearField", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearField(\n          com.google.protobuf.Descriptors.FieldDescriptor field) {\n        return super.clearField(field);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41031, "method_name": "clearOneof", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearOneof(\n          com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n        return super.clearOneof(oneof);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41032, "method_name": "setRepeatedField", "class_name": "Builder", "params": ["com", "int", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setRepeatedField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          int index, java.lang.Object value) {\n        return super.setRepeatedField(field, index, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41033, "method_name": "addRepeatedField", "class_name": "Builder", "params": ["com", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addRepeatedField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          java.lang.Object value) {\n        return super.addRepeatedField(field, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41034, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(com.google.protobuf.Message other) {\n        if (other instanceof FileProto.Header) {\n          return mergeFrom((FileProto.Header)other);\n        } else {\n          super.mergeFrom(other);\n          return this;\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41035, "method_name": "mergeFrom", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(FileProto.Header other) {\n        if (other == FileProto.Header.getDefaultInstance()) return this;\n        if (other.hasStartTimestamp()) {\n          setStartTimestamp(other.getStartTimestamp());\n        }\n        if (other.hasEndTimestamp()) {\n          setEndTimestamp(other.getEndTimestamp());\n        }\n        if (other.hasRegion()) {\n          bitField0_ |= 0x00000004;\n          region_ = other.region_;\n          onChanged();\n        }\n        if (other.hasBatchNum()) {\n          setBatchNum(other.getBatchNum());\n        }\n        if (other.hasBatchSize()) {\n          setBatchSize(other.getBatchSize());\n        }\n        this.mergeUnknownFields(other.unknownFields);\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41036, "method_name": "isInitialized", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "      public final boolean isInitialized() {\n        return true;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41037, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(\n          com.google.protobuf.CodedInputStream input,\n          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n          throws java.io.IOException {\n        FileProto.Header parsedMessage = null;\n        try {\n          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n        } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n          parsedMessage = (FileProto.Header) e.getUnfinishedMessage();\n          throw e.unwrapIOException();\n        } finally {\n          if (parsedMessage != null) {\n            mergeFrom(parsedMessage);\n          }\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41038, "method_name": "hasStartTimestamp", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasStartTimestamp() {\n        return ((bitField0_ & 0x00000001) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41039, "method_name": "getStartTimestamp", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "      public long getStartTimestamp() {\n        return startTimestamp_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41040, "method_name": "setStartTimestamp", "class_name": "Builder", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setStartTimestamp(long value) {\n        bitField0_ |= 0x00000001;\n        startTimestamp_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41041, "method_name": "clearStartTimestamp", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearStartTimestamp() {\n        bitField0_ = (bitField0_ & ~0x00000001);\n        startTimestamp_ = 0L;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41042, "method_name": "hasEndTimestamp", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasEndTimestamp() {\n        return ((bitField0_ & 0x00000002) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41043, "method_name": "getEndTimestamp", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "      public long getEndTimestamp() {\n        return endTimestamp_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41044, "method_name": "setEndTimestamp", "class_name": "Builder", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setEndTimestamp(long value) {\n        bitField0_ |= 0x00000002;\n        endTimestamp_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41045, "method_name": "clearEndTimestamp", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearEndTimestamp() {\n        bitField0_ = (bitField0_ & ~0x00000002);\n        endTimestamp_ = 0L;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41046, "method_name": "hasRegion", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasRegion() {\n        return ((bitField0_ & 0x00000004) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41047, "method_name": "getRegion", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "      public java.lang.String getRegion() {\n        java.lang.Object ref = region_;\n        if (!(ref instanceof java.lang.String)) {\n          com.google.protobuf.ByteString bs =\n              (com.google.protobuf.ByteString) ref;\n          java.lang.String s = bs.toStringUtf8();\n          if (bs.isValidUtf8()) {\n            region_ = s;\n          }\n          return s;\n        } else {\n          return (java.lang.String) ref;\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41048, "method_name": "getRegionBytes", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "      public com.google.protobuf.ByteString\n          getRegionBytes() {\n        java.lang.Object ref = region_;\n        if (ref instanceof String) {\n          com.google.protobuf.ByteString b = \n              com.google.protobuf.ByteString.copyFromUtf8(\n                  (java.lang.String) ref);\n          region_ = b;\n          return b;\n        } else {\n          return (com.google.protobuf.ByteString) ref;\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41049, "method_name": "setRegion", "class_name": "Builder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setRegion(\n          java.lang.String value) {\n        if (value == null) {\n    throw new NullPointerException();\n  }\n  bitField0_ |= 0x00000004;\n        region_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41050, "method_name": "clearRegion", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearRegion() {\n        bitField0_ = (bitField0_ & ~0x00000004);\n        region_ = getDefaultInstance().getRegion();\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41051, "method_name": "setRegionBytes", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setRegionBytes(\n          com.google.protobuf.ByteString value) {\n        if (value == null) {\n    throw new NullPointerException();\n  }\n  bitField0_ |= 0x00000004;\n        region_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41052, "method_name": "hasBatchNum", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasBatchNum() {\n        return ((bitField0_ & 0x00000008) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41053, "method_name": "getBatchNum", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "      public int getBatchNum() {\n        return batchNum_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41054, "method_name": "setBatchNum", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setBatchNum(int value) {\n        bitField0_ |= 0x00000008;\n        batchNum_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41055, "method_name": "clearBatchNum", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearBatchNum() {\n        bitField0_ = (bitField0_ & ~0x00000008);\n        batchNum_ = 0;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41056, "method_name": "hasBatchSize", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasBatchSize() {\n        return ((bitField0_ & 0x00000010) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41057, "method_name": "getBatchSize", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "      public int getBatchSize() {\n        return batchSize_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41058, "method_name": "setBatchSize", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setBatchSize(int value) {\n        bitField0_ |= 0x00000010;\n        batchSize_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41059, "method_name": "clearBatchSize", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearBatchSize() {\n        bitField0_ = (bitField0_ & ~0x00000010);\n        batchSize_ = 0;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41060, "method_name": "setUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "      public final Builder setUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.setUnknownFields(unknownFields);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41061, "method_name": "mergeUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "      public final Builder mergeUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.mergeUnknownFields(unknownFields);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41062, "method_name": "getUnknownFields", "class_name": "Key", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "com", "snippet": "    public final com.google.protobuf.UnknownFieldSet\n    getUnknownFields() {\n      return this.unknownFields;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41063, "method_name": "getDescriptor", "class_name": "Key", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return FileProto.internal_static_Key_descriptor;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41064, "method_name": "internalGetFieldAccessorTable", "class_name": "Key", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return FileProto.internal_static_Key_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              FileProto.Key.class, FileProto.Key.Builder.class);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41065, "method_name": "hasKeyData", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasKeyData() {\n      return ((bitField0_ & 0x00000001) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41066, "method_name": "getKeyData", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString getKeyData() {\n      return keyData_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41067, "method_name": "hasRollingStartNumber", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasRollingStartNumber() {\n      return ((bitField0_ & 0x00000002) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41068, "method_name": "getRollingStartNumber", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRollingStartNumber() {\n      return rollingStartNumber_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41069, "method_name": "hasRollingPeriod", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasRollingPeriod() {\n      return ((bitField0_ & 0x00000004) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41070, "method_name": "getRollingPeriod", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRollingPeriod() {\n      return rollingPeriod_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41071, "method_name": "hasTransmissionRiskLevel", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasTransmissionRiskLevel() {\n      return ((bitField0_ & 0x00000008) != 0);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41072, "method_name": "getTransmissionRiskLevel", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTransmissionRiskLevel() {\n      return transmissionRiskLevel_;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41073, "method_name": "isInitialized", "class_name": "Key", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {\n      byte isInitialized = memoizedIsInitialized;\n      if (isInitialized == 1) return true;\n      if (isInitialized == 0) return false;\n\n      memoizedIsInitialized = 1;\n      return true;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41074, "method_name": "writeTo", "class_name": "Key", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeTo(com.google.protobuf.CodedOutputStream output)\n                        throws java.io.IOException {\n      if (((bitField0_ & 0x00000001) != 0)) {\n        output.writeBytes(1, keyData_);\n      }\n      if (((bitField0_ & 0x00000002) != 0)) {\n        output.writeUInt32(2, rollingStartNumber_);\n      }\n      if (((bitField0_ & 0x00000004) != 0)) {\n        output.writeUInt32(3, rollingPeriod_);\n      }\n      if (((bitField0_ & 0x00000008) != 0)) {\n        output.writeInt32(4, transmissionRiskLevel_);\n      }\n      unknownFields.writeTo(output);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41075, "method_name": "getSerializedSize", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSerializedSize() {\n      int size = memoizedSize;\n      if (size != -1) return size;\n\n      size = 0;\n      if (((bitField0_ & 0x00000001) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeBytesSize(1, keyData_);\n      }\n      if (((bitField0_ & 0x00000002) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeUInt32Size(2, rollingStartNumber_);\n      }\n      if (((bitField0_ & 0x00000004) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeUInt32Size(3, rollingPeriod_);\n      }\n      if (((bitField0_ & 0x00000008) != 0)) {\n        size += com.google.protobuf.CodedOutputStream\n          .computeInt32Size(4, transmissionRiskLevel_);\n      }\n      size += unknownFields.getSerializedSize();\n      memoizedSize = size;\n      return size;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41076, "method_name": "equals", "class_name": "Key", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(final java.lang.Object obj) {\n      if (obj == this) {\n       return true;\n      }\n      if (!(obj instanceof FileProto.Key)) {\n        return super.equals(obj);\n      }\n      FileProto.Key other = (FileProto.Key) obj;\n\n      if (hasKeyData() != other.hasKeyData()) return false;\n      if (hasKeyData()) {\n        if (!getKeyData()\n            .equals(other.getKeyData())) return false;\n      }\n      if (hasRollingStartNumber() != other.hasRollingStartNumber()) return false;\n      if (hasRollingStartNumber()) {\n        if (getRollingStartNumber()\n            != other.getRollingStartNumber()) return false;\n      }\n      if (hasRollingPeriod() != other.hasRollingPeriod()) return false;\n      if (hasRollingPeriod()) {\n        if (getRollingPeriod()\n            != other.getRollingPeriod()) return false;\n      }\n      if (hasTransmissionRiskLevel() != other.hasTransmissionRiskLevel()) return false;\n      if (hasTransmissionRiskLevel()) {\n        if (getTransmissionRiskLevel()\n            != other.getTransmissionRiskLevel()) return false;\n      }\n      if (!unknownFields.equals(other.unknownFields)) return false;\n      return true;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41077, "method_name": "hashCode", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hashCode() {\n      if (memoizedHashCode != 0) {\n        return memoizedHashCode;\n      }\n      int hash = 41;\n      hash = (19 * hash) + getDescriptor().hashCode();\n      if (hasKeyData()) {\n        hash = (37 * hash) + KEYDATA_FIELD_NUMBER;\n        hash = (53 * hash) + getKeyData().hashCode();\n      }\n      if (hasRollingStartNumber()) {\n        hash = (37 * hash) + ROLLINGSTARTNUMBER_FIELD_NUMBER;\n        hash = (53 * hash) + getRollingStartNumber();\n      }\n      if (hasRollingPeriod()) {\n        hash = (37 * hash) + ROLLINGPERIOD_FIELD_NUMBER;\n        hash = (53 * hash) + getRollingPeriod();\n      }\n      if (hasTransmissionRiskLevel()) {\n        hash = (37 * hash) + TRANSMISSIONRISKLEVEL_FIELD_NUMBER;\n        hash = (53 * hash) + getTransmissionRiskLevel();\n      }\n      hash = (29 * hash) + unknownFields.hashCode();\n      memoizedHashCode = hash;\n      return hash;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41078, "method_name": "parseFrom", "class_name": "Key", "params": ["java"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        java.nio.ByteBuffer data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41079, "method_name": "parseFrom", "class_name": "Key", "params": ["java", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        java.nio.ByteBuffer data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41080, "method_name": "parseFrom", "class_name": "Key", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        com.google.protobuf.ByteString data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41081, "method_name": "parseFrom", "class_name": "Key", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        com.google.protobuf.ByteString data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41082, "method_name": "parseFrom", "class_name": "Key", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(byte[] data)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41083, "method_name": "parseFrom", "class_name": "Key", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        byte[] data,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      return PARSER.parseFrom(data, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41084, "method_name": "parseFrom", "class_name": "Key", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41085, "method_name": "parseFrom", "class_name": "Key", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41086, "method_name": "parseDelimitedFrom", "class_name": "Key", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseDelimitedFrom(java.io.InputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41087, "method_name": "parseDelimitedFrom", "class_name": "Key", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseDelimitedFrom(\n        java.io.InputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41088, "method_name": "parseFrom", "class_name": "Key", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        com.google.protobuf.CodedInputStream input)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41089, "method_name": "parseFrom", "class_name": "Key", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key parseFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      return com.google.protobuf.GeneratedMessageV3\n          .parseWithIOException(PARSER, input, extensionRegistry);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41090, "method_name": "newBuilderForType", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41091, "method_name": "newBuilder", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "    public static Builder newBuilder() {\n      return DEFAULT_INSTANCE.toBuilder();\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41092, "method_name": "newBuilder", "class_name": "Key", "params": ["FileProto"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "    public static Builder newBuilder(FileProto.Key prototype) {\n      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41093, "method_name": "toBuilder", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder toBuilder() {\n      return this == DEFAULT_INSTANCE\n          ? new Builder() : new Builder().mergeFrom(this);\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41094, "method_name": "newBuilderForType", "class_name": "Key", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "    protected Builder newBuilderForType(\n        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n      Builder builder = new Builder(parent);\n      return builder;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41095, "method_name": "getDefaultInstance", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "FileProto", "snippet": "    public static FileProto.Key getDefaultInstance() {\n      return DEFAULT_INSTANCE;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41096, "method_name": "parser", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "    public static com.google.protobuf.Parser<Key> parser() {\n      return PARSER;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41097, "method_name": "getParserForType", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Parser<Key> getParserForType() {\n      return PARSER;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41098, "method_name": "getDefaultInstanceForType", "class_name": "Key", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "    public FileProto.Key getDefaultInstanceForType() {\n      return DEFAULT_INSTANCE;\n    }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["KeyOrBuilder"], "modifiers": ["final", "public", "static"]}}, {"id": 41099, "method_name": "getDescriptor", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "      public static final com.google.protobuf.Descriptors.Descriptor\n          getDescriptor() {\n        return FileProto.internal_static_Key_descriptor;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41100, "method_name": "internalGetFieldAccessorTable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n          internalGetFieldAccessorTable() {\n        return FileProto.internal_static_Key_fieldAccessorTable\n            .ensureFieldAccessorsInitialized(\n                FileProto.Key.class, FileProto.Key.Builder.class);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41101, "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "      private void maybeForceBuilderInitialization() {\n        if (com.google.protobuf.GeneratedMessageV3\n                .alwaysUseFieldBuilders) {\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41102, "method_name": "clear", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clear() {\n        super.clear();\n        keyData_ = com.google.protobuf.ByteString.EMPTY;\n        bitField0_ = (bitField0_ & ~0x00000001);\n        rollingStartNumber_ = 0;\n        bitField0_ = (bitField0_ & ~0x00000002);\n        rollingPeriod_ = 0;\n        bitField0_ = (bitField0_ & ~0x00000004);\n        transmissionRiskLevel_ = 0;\n        bitField0_ = (bitField0_ & ~0x00000008);\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41103, "method_name": "getDescriptorForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "      public com.google.protobuf.Descriptors.Descriptor\n          getDescriptorForType() {\n        return FileProto.internal_static_Key_descriptor;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41104, "method_name": "getDefaultInstanceForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Key getDefaultInstanceForType() {\n        return FileProto.Key.getDefaultInstance();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41105, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Key build() {\n        FileProto.Key result = buildPartial();\n        if (!result.isInitialized()) {\n          throw newUninitializedMessageException(result);\n        }\n        return result;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41106, "method_name": "buildPartial", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FileProto", "snippet": "      public FileProto.Key buildPartial() {\n        FileProto.Key result = new FileProto.Key(this);\n        int from_bitField0_ = bitField0_;\n        int to_bitField0_ = 0;\n        if (((from_bitField0_ & 0x00000001) != 0)) {\n          to_bitField0_ |= 0x00000001;\n        }\n        result.keyData_ = keyData_;\n        if (((from_bitField0_ & 0x00000002) != 0)) {\n          result.rollingStartNumber_ = rollingStartNumber_;\n          to_bitField0_ |= 0x00000002;\n        }\n        if (((from_bitField0_ & 0x00000004) != 0)) {\n          result.rollingPeriod_ = rollingPeriod_;\n          to_bitField0_ |= 0x00000004;\n        }\n        if (((from_bitField0_ & 0x00000008) != 0)) {\n          result.transmissionRiskLevel_ = transmissionRiskLevel_;\n          to_bitField0_ |= 0x00000008;\n        }\n        result.bitField0_ = to_bitField0_;\n        onBuilt();\n        return result;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41107, "method_name": "clone", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clone() {\n        return super.clone();\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41108, "method_name": "setField", "class_name": "Builder", "params": ["com", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          java.lang.Object value) {\n        return super.setField(field, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41109, "method_name": "clearField", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearField(\n          com.google.protobuf.Descriptors.FieldDescriptor field) {\n        return super.clearField(field);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41110, "method_name": "clearOneof", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearOneof(\n          com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n        return super.clearOneof(oneof);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41111, "method_name": "setRepeatedField", "class_name": "Builder", "params": ["com", "int", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setRepeatedField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          int index, java.lang.Object value) {\n        return super.setRepeatedField(field, index, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41112, "method_name": "addRepeatedField", "class_name": "Builder", "params": ["com", "java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder addRepeatedField(\n          com.google.protobuf.Descriptors.FieldDescriptor field,\n          java.lang.Object value) {\n        return super.addRepeatedField(field, value);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41113, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(com.google.protobuf.Message other) {\n        if (other instanceof FileProto.Key) {\n          return mergeFrom((FileProto.Key)other);\n        } else {\n          super.mergeFrom(other);\n          return this;\n        }\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41114, "method_name": "mergeFrom", "class_name": "Builder", "params": ["FileProto"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(FileProto.Key other) {\n        if (other == FileProto.Key.getDefaultInstance()) return this;\n        if (other.hasKeyData()) {\n          setKeyData(other.getKeyData());\n        }\n        if (other.hasRollingStartNumber()) {\n          setRollingStartNumber(other.getRollingStartNumber());\n        }\n        if (other.hasRollingPeriod()) {\n          setRollingPeriod(other.getRollingPeriod());\n        }\n        if (other.hasTransmissionRiskLevel()) {\n          setTransmissionRiskLevel(other.getTransmissionRiskLevel());\n        }\n        this.mergeUnknownFields(other.unknownFields);\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41115, "method_name": "isInitialized", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "      public final boolean isInitialized() {\n        return true;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41116, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder mergeFrom(\n          com.google.protobuf.CodedInputStream input,\n          com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n          throws java.io.IOException {\n        FileProto.Key parsedMessage = null;\n        try {\n          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n        } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n          parsedMessage = (FileProto.Key) e.getUnfinishedMessage();\n          throw e.unwrapIOException();\n        } finally {\n          if (parsedMessage != null) {\n            mergeFrom(parsedMessage);\n          }\n        }\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41117, "method_name": "hasKeyData", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasKeyData() {\n        return ((bitField0_ & 0x00000001) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41118, "method_name": "getKeyData", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "      public com.google.protobuf.ByteString getKeyData() {\n        return keyData_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41119, "method_name": "setKeyData", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setKeyData(com.google.protobuf.ByteString value) {\n        if (value == null) {\n    throw new NullPointerException();\n  }\n  bitField0_ |= 0x00000001;\n        keyData_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41120, "method_name": "clearKeyData", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearKeyData() {\n        bitField0_ = (bitField0_ & ~0x00000001);\n        keyData_ = getDefaultInstance().getKeyData();\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41121, "method_name": "hasRollingStartNumber", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasRollingStartNumber() {\n        return ((bitField0_ & 0x00000002) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41122, "method_name": "getRollingStartNumber", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "      public int getRollingStartNumber() {\n        return rollingStartNumber_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41123, "method_name": "setRollingStartNumber", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setRollingStartNumber(int value) {\n        bitField0_ |= 0x00000002;\n        rollingStartNumber_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41124, "method_name": "clearRollingStartNumber", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearRollingStartNumber() {\n        bitField0_ = (bitField0_ & ~0x00000002);\n        rollingStartNumber_ = 0;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41125, "method_name": "hasRollingPeriod", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasRollingPeriod() {\n        return ((bitField0_ & 0x00000004) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41126, "method_name": "getRollingPeriod", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "      public int getRollingPeriod() {\n        return rollingPeriod_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41127, "method_name": "setRollingPeriod", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setRollingPeriod(int value) {\n        bitField0_ |= 0x00000004;\n        rollingPeriod_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41128, "method_name": "clearRollingPeriod", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearRollingPeriod() {\n        bitField0_ = (bitField0_ & ~0x00000004);\n        rollingPeriod_ = 0;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41129, "method_name": "hasTransmissionRiskLevel", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "      public boolean hasTransmissionRiskLevel() {\n        return ((bitField0_ & 0x00000008) != 0);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41130, "method_name": "getTransmissionRiskLevel", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "      public int getTransmissionRiskLevel() {\n        return transmissionRiskLevel_;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41131, "method_name": "setTransmissionRiskLevel", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder setTransmissionRiskLevel(int value) {\n        bitField0_ |= 0x00000008;\n        transmissionRiskLevel_ = value;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41132, "method_name": "clearTransmissionRiskLevel", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "      public Builder clearTransmissionRiskLevel() {\n        bitField0_ = (bitField0_ & ~0x00000008);\n        transmissionRiskLevel_ = 0;\n        onChanged();\n        return this;\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41133, "method_name": "setUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "      public final Builder setUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.setUnknownFields(unknownFields);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41134, "method_name": "mergeUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "      public final Builder mergeUnknownFields(\n          final com.google.protobuf.UnknownFieldSet unknownFields) {\n        return super.mergeUnknownFields(unknownFields);\n      }", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/gaen/proto/FileProto.java", "stars": "125", "class_props": {"extends": "com", "implements": ["FileProto"], "modifiers": ["final", "public", "static"]}}, {"id": 41135, "method_name": "config", "class_name": "MQTTConfig", "params": ["String", "Integer", "Boolean", "Boolean"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void config(String ip, Integer port, Boolean ssl, Boolean withUserNamePass);\n\n    /**\n     * Default Configuration\n     */\n    protected abstract void config();\n\n\n    public String getIp() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41136, "method_name": "config", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void config();\n\n\n    public String getIp() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41137, "method_name": "getIp", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIp() {\n        return ip;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41138, "method_name": "setIp", "class_name": "MQTTConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIp(String ip) {\n        this.ip = ip;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41139, "method_name": "getQos", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getQos() {\n        return qos;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41140, "method_name": "setQos", "class_name": "MQTTConfig", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setQos(int qos) {\n        this.qos = qos;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41141, "method_name": "getHasSSL", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean getHasSSL() {\n        return hasSSL;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41142, "method_name": "setHasSSL", "class_name": "MQTTConfig", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHasSSL(Boolean hasSSL) {\n        this.hasSSL = hasSSL;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41143, "method_name": "getPort", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getPort() {\n        return port;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41144, "method_name": "setPort", "class_name": "MQTTConfig", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPort(Integer port) {\n        this.port = port;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41145, "method_name": "getUsername", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {\n        return username;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41146, "method_name": "setUsername", "class_name": "MQTTConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsername(String username) {\n        this.username = username;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41147, "method_name": "getPassword", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPassword() {\n        return password;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41148, "method_name": "setPassword", "class_name": "MQTTConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPassword(String password) {\n        this.password = password;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41149, "method_name": "getTCP", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTCP() {\n        return TCP;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41150, "method_name": "setTCP", "class_name": "MQTTConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTCP(String TCP) {\n        this.TCP = TCP;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41151, "method_name": "getSSL", "class_name": "MQTTConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSSL() {\n        return SSL;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41152, "method_name": "setSSL", "class_name": "MQTTConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSSL(String SSL) {\n        this.SSL = SSL;\n    }", "url": "https://raw.githubusercontent.com/gaoyf95/springboot-mqtt/master/src/main/java/com/gaoyf/mqtt/core/MQTTConfig.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41153, "method_name": "onWriteSuccess", "class_name": "BleWriteCallback", "params": ["int", "int", "byte"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onWriteSuccess(int current, int total, byte[] justWrite);\n\n    public abstract void onWriteFailure(BleException exception);\n\n}\n\n", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleWriteCallback.java", "stars": "2", "class_props": {"extends": "BleBaseCallback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41154, "method_name": "onWriteFailure", "class_name": "BleWriteCallback", "params": ["BleException"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void onWriteFailure(BleException exception);\n\n}\n\n", "url": "https://raw.githubusercontent.com/wxw6860/BLEAPP/master/FastBleLib/src/main/java/com/clj/fastble/callback/BleWriteCallback.java", "stars": "2", "class_props": {"extends": "BleBaseCallback", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41155, "method_name": "main", "class_name": "ReverseString", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t\n\t\tString str = \"Welcome To USA\";\n\t\t\n\t\tStringBuffer stb = new StringBuffer(str);\n\t\tStringBuffer reverse = stb.reverse();\n\t\tString rev = reverse.toString();\n\t\t\n\t\tSystem.out.println(\"The reversed String is : \" +rev);\n\t\t\n//\t\tif(rev.equals(str)) {\n//\t\t\tSystem.out.println(\"Yes, Palindrome\");\n//\t\t}\n//\t\telse {\n//\t\t\tSystem.out.println(\"No, Not a Palindrome\");\n\t\t//}\n\n\t}", "url": "https://raw.githubusercontent.com/AvinashDurai/MyCodes/master/javapractice/ReverseString.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41156, "method_name": "hide", "class_name": "Keyboard", "params": ["Context", "View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void hide(Context context, View v) {\n        v.clearFocus();\n        InputMethodManager inputManager =\n                (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n        if (inputManager != null) {\n            inputManager.hideSoftInputFromWindow(v.getWindowToken(), 0);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/util/Keyboard.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41157, "method_name": "show", "class_name": "Keyboard", "params": ["Context", "View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void show(Context context, View v) {\n        new Handler().postDelayed(() -> {\n            v.requestFocus();\n            InputMethodManager inputManager =\n                    (InputMethodManager) context.getSystemService(Context.INPUT_METHOD_SERVICE);\n            if (inputManager != null) {\n                inputManager.showSoftInput(v, 0);\n            }\n        }, 100);\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/util/Keyboard.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41158, "method_name": "getRt_styleURL", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRt_styleURL() {\n        return rt_styleURL;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41159, "method_name": "setRt_styleURL", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_styleURL(String rt_styleURL) {\n        this.rt_styleURL = rt_styleURL;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41160, "method_name": "isRt_login_using_otp_enabled", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isRt_login_using_otp_enabled() {\n        return rt_login_using_otp_enabled;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41161, "method_name": "setRt_login_using_otp_enabled", "class_name": "Market", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_login_using_otp_enabled(boolean rt_login_using_otp_enabled) {\n        this.rt_login_using_otp_enabled = rt_login_using_otp_enabled;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41162, "method_name": "getRt_market_id_for_fcm", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRt_market_id_for_fcm() {\n        return rt_market_id_for_fcm;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41163, "method_name": "setRt_market_id_for_fcm", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_market_id_for_fcm(String rt_market_id_for_fcm) {\n        this.rt_market_id_for_fcm = rt_market_id_for_fcm;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41164, "method_name": "getRt_rating_avg", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getRt_rating_avg() {\n        return rt_rating_avg;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41165, "method_name": "setRt_rating_avg", "class_name": "Market", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_rating_avg(float rt_rating_avg) {\n        this.rt_rating_avg = rt_rating_avg;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41166, "method_name": "getRt_rating_count", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getRt_rating_count() {\n        return rt_rating_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41167, "method_name": "setRt_rating_count", "class_name": "Market", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_rating_count(float rt_rating_count) {\n        this.rt_rating_count = rt_rating_count;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41168, "method_name": "getDescriptionShort", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescriptionShort() {\n        return descriptionShort;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41169, "method_name": "setDescriptionShort", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescriptionShort(String descriptionShort) {\n        this.descriptionShort = descriptionShort;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41170, "method_name": "getDescriptionLong", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescriptionLong() {\n        return descriptionLong;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41171, "method_name": "setDescriptionLong", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDescriptionLong(String descriptionLong) {\n        this.descriptionLong = descriptionLong;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41172, "method_name": "getOfficial", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean getOfficial() {\n        return isOfficial;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41173, "method_name": "setOfficial", "class_name": "Market", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOfficial(Boolean official) {\n        isOfficial = official;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41174, "method_name": "getVerified", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean getVerified() {\n        return isVerified;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41175, "method_name": "setVerified", "class_name": "Market", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVerified(Boolean verified) {\n        isVerified = verified;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41176, "method_name": "getServiceURL", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServiceURL() {\n        return serviceURL;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41177, "method_name": "setServiceURL", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceURL(String serviceURL) {\n        this.serviceURL = serviceURL;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41178, "method_name": "getISOCurrencyCode", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getISOCurrencyCode() {\n        return ISOCurrencyCode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41179, "method_name": "setISOCurrencyCode", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setISOCurrencyCode(String ISOCurrencyCode) {\n        this.ISOCurrencyCode = ISOCurrencyCode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41180, "method_name": "getCreated", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Timestamp", "snippet": "    public Timestamp getCreated() {\n        return created;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41181, "method_name": "setCreated", "class_name": "Market", "params": ["Timestamp"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreated(Timestamp created) {\n        this.created = created;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41182, "method_name": "getUpdated", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Timestamp", "snippet": "    public Timestamp getUpdated() {\n        return updated;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41183, "method_name": "setUpdated", "class_name": "Market", "params": ["Timestamp"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdated(Timestamp updated) {\n        this.updated = updated;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41184, "method_name": "getRt_distance", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "    public Double getRt_distance() {\n        return rt_distance;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41185, "method_name": "setRt_distance", "class_name": "Market", "params": ["Double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_distance(Double rt_distance) {\n        this.rt_distance = rt_distance;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41186, "method_name": "getISOCountryCode", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getISOCountryCode() {\n        return ISOCountryCode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41187, "method_name": "setISOCountryCode", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setISOCountryCode(String ISOCountryCode) {\n        this.ISOCountryCode = ISOCountryCode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41188, "method_name": "getISOLanguageCode", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getISOLanguageCode() {\n        return ISOLanguageCode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41189, "method_name": "setISOLanguageCode", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setISOLanguageCode(String ISOLanguageCode) {\n        this.ISOLanguageCode = ISOLanguageCode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41190, "method_name": "getServiceID", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getServiceID() {\n        return serviceID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41191, "method_name": "setServiceID", "class_name": "Market", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceID(int serviceID) {\n        this.serviceID = serviceID;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41192, "method_name": "getLogoImagePath", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLogoImagePath() {\n        return logoImagePath;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41193, "method_name": "setLogoImagePath", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLogoImagePath(String logoImagePath) {\n        this.logoImagePath = logoImagePath;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41194, "method_name": "getBackdropImagePath", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBackdropImagePath() {\n        return backdropImagePath;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41195, "method_name": "setBackdropImagePath", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBackdropImagePath(String backdropImagePath) {\n        this.backdropImagePath = backdropImagePath;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41196, "method_name": "getServiceName", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getServiceName() {\n        return serviceName;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41197, "method_name": "setServiceName", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceName(String serviceName) {\n        this.serviceName = serviceName;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41198, "method_name": "getHelplineNumber", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getHelplineNumber() {\n        return helplineNumber;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41199, "method_name": "setHelplineNumber", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setHelplineNumber(String helplineNumber) {\n        this.helplineNumber = helplineNumber;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41200, "method_name": "getAddress", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41201, "method_name": "setAddress", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAddress(String address) {\n        this.address = address;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41202, "method_name": "getCity", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCity() {\n        return city;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41203, "method_name": "setCity", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCity(String city) {\n        this.city = city;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41204, "method_name": "getPincode", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getPincode() {\n        return pincode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41205, "method_name": "setPincode", "class_name": "Market", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPincode(Long pincode) {\n        this.pincode = pincode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41206, "method_name": "getLandmark", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLandmark() {\n        return landmark;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41207, "method_name": "setLandmark", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLandmark(String landmark) {\n        this.landmark = landmark;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41208, "method_name": "getState", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getState() {\n        return state;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41209, "method_name": "setState", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setState(String state) {\n        this.state = state;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41210, "method_name": "getCountry", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCountry() {\n        return country;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41211, "method_name": "setCountry", "class_name": "Market", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCountry(String country) {\n        this.country = country;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41212, "method_name": "getServiceType", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getServiceType() {\n        return serviceType;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41213, "method_name": "setServiceType", "class_name": "Market", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceType(Integer serviceType) {\n        this.serviceType = serviceType;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41214, "method_name": "getServiceLevel", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getServiceLevel() {\n        return serviceLevel;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41215, "method_name": "setServiceLevel", "class_name": "Market", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceLevel(Integer serviceLevel) {\n        this.serviceLevel = serviceLevel;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41216, "method_name": "setPincode", "class_name": "Market", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPincode(long pincode) {\n        this.pincode = pincode;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41217, "method_name": "setServiceType", "class_name": "Market", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceType(int serviceType) {\n        this.serviceType = serviceType;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41218, "method_name": "setServiceLevel", "class_name": "Market", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceLevel(int serviceLevel) {\n        this.serviceLevel = serviceLevel;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41219, "method_name": "getLatCenter", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getLatCenter() {\n        return latCenter;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41220, "method_name": "setLatCenter", "class_name": "Market", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLatCenter(double latCenter) {\n        this.latCenter = latCenter;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41221, "method_name": "getLonCenter", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getLonCenter() {\n        return lonCenter;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41222, "method_name": "setLonCenter", "class_name": "Market", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLonCenter(double lonCenter) {\n        this.lonCenter = lonCenter;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41223, "method_name": "getServiceRange", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double getServiceRange() {\n        return serviceRange;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41224, "method_name": "setServiceRange", "class_name": "Market", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setServiceRange(double serviceRange) {\n        this.serviceRange = serviceRange;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41225, "method_name": "isOfficial", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isOfficial() {\n        return isOfficial;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41226, "method_name": "setOfficial", "class_name": "Market", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOfficial(boolean official) {\n        isOfficial = official;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41227, "method_name": "isVerified", "class_name": "Market", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isVerified() {\n        return isVerified;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41228, "method_name": "setVerified", "class_name": "Market", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVerified(boolean verified) {\n        isVerified = verified;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41229, "method_name": "setRt_distance", "class_name": "Market", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRt_distance(double rt_distance) {\n        this.rt_distance = rt_distance;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelMarket/Market.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41230, "method_name": "getInstance", "class_name": "ProjectsManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ProjectsManager", "snippet": "    public static ProjectsManager getInstance() {\n        if (mInstance == null) {\n            mInstance = new ProjectsManager();\n        }\n        return mInstance;\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/manager/ProjectsManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41231, "method_name": "getApi", "class_name": "ProjectsManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Api", "snippet": "    public Api getApi () {\n        return mRetrofit.create(Api.class);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/api/manager/ProjectsManager.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41232, "method_name": "getRequest", "class_name": "HttpServletRequestUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "HttpServletRequest", "snippet": "    public static HttpServletRequest getRequest() {\n        return ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-common/scp-common-core/src/main/java/io/geekidea/cloud/common/core/util/HttpServletRequestUtil.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41233, "method_name": "getWritableDatabase", "class_name": "DatabaseHelper", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "SQLiteDatabase", "snippet": "\tpublic static SQLiteDatabase getWritableDatabase(Context context) {\n\t\treturn DatabaseOpenHelper.getInstance(context).getWritableDatabase();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/calibration/java/org/dpppt/android/sdk/internal/database/DatabaseHelper.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41234, "method_name": "getMsg", "class_name": "GiftListResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMsg() {\n        return msg;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 41235, "method_name": "setMsg", "class_name": "GiftListResult", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMsg(String msg) {\n        this.msg = msg;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 41236, "method_name": "getCode", "class_name": "GiftListResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCode() {\n        return code;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 41237, "method_name": "setCode", "class_name": "GiftListResult", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCode(int code) {\n        this.code = code;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 41238, "method_name": "getData", "class_name": "GiftListResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "GiftData", "snippet": "    public GiftData getData() {\n        return data;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 41239, "method_name": "setData", "class_name": "GiftListResult", "params": ["GiftData"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(GiftData data) {\n        this.data = data;\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 41240, "method_name": "toString", "class_name": "GiftListResult", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"GiftListResult{\" +\n                \"msg='\" + msg + '\\'' +\n                \", code=\" + code +\n                \", data=\" + data +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 41241, "method_name": "getLastTime", "class_name": "GiftData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getLastTime() {\n            return lastTime;\n        }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "static"]}}, {"id": 41242, "method_name": "setLastTime", "class_name": "GiftData", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLastTime(long lastTime) {\n            this.lastTime = lastTime;\n        }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "static"]}}, {"id": 41243, "method_name": "getGifts", "class_name": "GiftData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Gift>", "snippet": "        public ArrayList<Gift> getGifts() {\n            return gifts;\n        }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "static"]}}, {"id": 41244, "method_name": "setGifts", "class_name": "GiftData", "params": ["ArrayList<Gift>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setGifts(ArrayList<Gift> gifts) {\n            this.gifts = gifts;\n        }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "static"]}}, {"id": 41245, "method_name": "toString", "class_name": "GiftData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return \"GiftListResult{\" +\n                    \"lastTime=\" + lastTime +\n                    \", gifts=\" + gifts +\n                    '}';\n        }", "url": "https://raw.githubusercontent.com/pengfeigao/AgoraCallApi/master/call-plugin-api/src/main/java/com/basetools/model/GiftListResult.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public", "static"]}}, {"id": 41246, "method_name": "getProcess", "class_name": "ProcessDoActionEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Process", "snippet": "\tpublic Process getProcess() {\n\t\treturn process;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/process/ProcessDoActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 41247, "method_name": "getActionName", "class_name": "ProcessDoActionEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getActionName() {\n\t\treturn actionName;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/process/ProcessDoActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 41248, "method_name": "getForward", "class_name": "ProcessDoActionEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getForward() {\n\t\treturn forward;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/process/ProcessDoActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 41249, "method_name": "setForward", "class_name": "ProcessDoActionEvent", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setForward(String forward) {\n\t\tthis.forward = forward;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/process/ProcessDoActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 41250, "method_name": "findAll", "class_name": "ReplyService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Reply>", "snippet": "\tpublic List<Reply> findAll() {\n\t\treturn replyDao.findAll();\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41251, "method_name": "findSearch", "class_name": "ReplyService", "params": ["Map", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Page<Reply>", "snippet": "\tpublic Page<Reply> findSearch(Map whereMap, int page, int size) {\n\t\tSpecification<Reply> specification = createSpecification(whereMap);\n\t\tPageRequest pageRequest =  PageRequest.of(page-1, size);\n\t\treturn replyDao.findAll(specification, pageRequest);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41252, "method_name": "findSearch", "class_name": "ReplyService", "params": ["Map"], "throws": null, "modifiers": ["public"], "return_type": "List<Reply>", "snippet": "\tpublic List<Reply> findSearch(Map whereMap) {\n\t\tSpecification<Reply> specification = createSpecification(whereMap);\n\t\treturn replyDao.findAll(specification);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41253, "method_name": "findById", "class_name": "ReplyService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Reply", "snippet": "\tpublic Reply findById(String id) {\n\t\treturn replyDao.findById(id).get();\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41254, "method_name": "add", "class_name": "ReplyService", "params": ["Reply"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void add(Reply reply) {\n\t\treply.setId( idWorker.nextId()+\"\" );\n\t\treplyDao.save(reply);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41255, "method_name": "update", "class_name": "ReplyService", "params": ["Reply"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void update(Reply reply) {\n\t\treplyDao.save(reply);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41256, "method_name": "deleteById", "class_name": "ReplyService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void deleteById(String id) {\n\t\treplyDao.deleteById(id);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41257, "method_name": "createSpecification", "class_name": "ReplyService", "params": ["Map"], "throws": null, "modifiers": ["private"], "return_type": "Specification<Reply>", "snippet": "\tprivate Specification<Reply> createSpecification(Map searchMap) {\n\n\t\treturn new Specification<Reply>() {\n\n\t\t\t@Override\n\t\t\tpublic Predicate toPredicate(Root<Reply> root, CriteriaQuery<?> query, CriteriaBuilder cb) {\n\t\t\t\tList<Predicate> predicateList = new ArrayList<Predicate>();\n                // \u7f16\u53f7\n                if (searchMap.get(\"id\")!=null && !\"\".equals(searchMap.get(\"id\"))) {\n                \tpredicateList.add(cb.like(root.get(\"id\").as(String.class), \"%\"+(String)searchMap.get(\"id\")+\"%\"));\n                }\n                // \u95ee\u9898ID\n                if (searchMap.get(\"problemid\")!=null && !\"\".equals(searchMap.get(\"problemid\"))) {\n                \tpredicateList.add(cb.like(root.get(\"problemid\").as(String.class), \"%\"+(String)searchMap.get(\"problemid\")+\"%\"));\n                }\n                // \u56de\u7b54\u5185\u5bb9\n                if (searchMap.get(\"content\")!=null && !\"\".equals(searchMap.get(\"content\"))) {\n                \tpredicateList.add(cb.like(root.get(\"content\").as(String.class), \"%\"+(String)searchMap.get(\"content\")+\"%\"));\n                }\n                // \u56de\u7b54\u4ebaID\n                if (searchMap.get(\"userid\")!=null && !\"\".equals(searchMap.get(\"userid\"))) {\n                \tpredicateList.add(cb.like(root.get(\"userid\").as(String.class), \"%\"+(String)searchMap.get(\"userid\")+\"%\"));\n                }\n                // \u56de\u7b54\u4eba\u6635\u79f0\n                if (searchMap.get(\"nickname\")!=null && !\"\".equals(searchMap.get(\"nickname\"))) {\n                \tpredicateList.add(cb.like(root.get(\"nickname\").as(String.class), \"%\"+(String)searchMap.get(\"nickname\")+\"%\"));\n                }\n\t\t\t\t\n\t\t\t\treturn cb.and( predicateList.toArray(new Predicate[predicateList.size()]));\n\n\t\t\t}\n\t\t};\n\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_qa/src/main/java/com/tensquare/qa/service/ReplyService.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41258, "method_name": "width", "class_name": "PositionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int width() {\n        return mRight - mLeft;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/model/PositionData.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41259, "method_name": "height", "class_name": "PositionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int height() {\n        return mBottom - mTop;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/model/PositionData.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41260, "method_name": "contentWidth", "class_name": "PositionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int contentWidth() {\n        return mContentRight - mContentLeft;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/model/PositionData.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41261, "method_name": "contentHeight", "class_name": "PositionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int contentHeight() {\n        return mContentBottom - mContentTop;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/model/PositionData.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41262, "method_name": "horizontalCenter", "class_name": "PositionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int horizontalCenter() {\n        return mLeft + width() / 2;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/model/PositionData.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41263, "method_name": "verticalCenter", "class_name": "PositionData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int verticalCenter() {\n        return mTop + height() / 2;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/model/PositionData.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41264, "method_name": "init", "class_name": "GridView", "params": ["Grid", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(Grid gridModel, int cellSize) {\n        group = gem.createBufferedGroup();\n        groupTunnel = gem.createGroup();\n        cells = new HashMap<>();\n\n        width = gridModel.getWidth();\n        height = gridModel.getHeight();\n\n        for (Entry<Coord, Cell> entry : gridModel.getCells().entrySet()) {\n            Coord coord = entry.getKey();\n            Cell cell = entry.getValue();\n            int padding = 0;\n\n            if (cell.getType() == CellType.WALL) {\n                int neighbourCode = getNeighbourCode(coord, gridModel);\n                if (neighbourCode != 255) {\n                    Sprite wall = gem.createSprite()\n                        .setBaseWidth(cellSize - padding)\n                        .setBaseHeight(cellSize - padding)\n                        .setImage(String.valueOf(neighbourCode));\n                    view.setToGridCoordinates(wall, coord);\n                    group.add(wall);\n                    cells.put(coord, wall);\n                }\n            } else if (cell.getType() == CellType.FLOOR) {\n                Sprite floor = gem.createSprite()\n                    .setBaseWidth(cellSize - padding)\n                    .setBaseHeight(cellSize - padding)\n                    .setImage(\"floor\");\n                if (isTunnel(coord)) {\n                    double emptyBorderSize = 100d;\n                    double tileSize = 250d;\n                    double cornerSize = cellSize * emptyBorderSize / tileSize;\n                    Sprite tunnel = view.createTunnelMask(coord, cellSize, padding, cornerSize);\n                    groupTunnel.add(tunnel);\n                    tunnel\n                        .setX((int) (coord.getX() * cellSize + cellSize / 2))\n                        .setY((int) (coord.getY() * cellSize - cornerSize));\n                }\n                view.setToGridCoordinates(floor, coord);\n                group.add(floor);\n                cells.put(coord, floor);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/GridView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41265, "method_name": "isTunnel", "class_name": "GridView", "params": ["Coord"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isTunnel(Coord coord) {\n        return coord.getX() == 0 || coord.getX() == (width - 1);\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/GridView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41266, "method_name": "getNeighbourCode", "class_name": "GridView", "params": ["Coord", "Grid"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getNeighbourCode(Coord coord, Grid gridModel) {\n        int total = 0;\n        for (Entry<Coord, TileMapping> entry : View.NEIGHBOUR_MAP.entrySet()) {\n            Coord delta = entry.getKey();\n            TileMapping mapping = entry.getValue();\n\n            Coord n = coord.add(delta);\n            Cell cell = gridModel.get(n);\n            if (cell.isWall() || !cell.isValid()) {\n                total += mapping.value;\n            }\n        }\n        for (Entry<Coord, TileMapping> entry : View.CORNER_MAP.entrySet()) {\n            Coord delta = entry.getKey();\n            TileMapping mapping = entry.getValue();\n\n            if ((total & mapping.mask) == mapping.mask) {\n                Coord n = coord.add(delta);\n                Cell cell = gridModel.get(n);\n                if (cell.isWall() || !cell.isValid()) {\n                    total += mapping.value;\n                }\n            }\n\n        }\n        return total;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/view/GridView.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41267, "method_name": "getInstalledPlugins", "class_name": "PluginDAO", "params": [], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "\tpublic List<String> getInstalledPlugins()\n\t\tthrows BGException\n\t{\n\t\tList<String> result = new ArrayList<String>();\n\t\t\n\t\tRequest req = new Request();\n\t\treq.setModule( \"installer\" );\n\t\treq.setAction( \"GetInstalledPlugins\" );\n\t\t\n\t\tDocument doc = transferData.postData( req, user );\n\t\tfor( Element el : XMLUtils.selectElements( doc, \"/data/plugin_list/plugin\" ) )\n\t\t{\n\t\t\tresult.add( el.getAttribute( \"id\" ) );\n\t\t}\n\t\t\n\t\treturn result;\t\t\t\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/PluginDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 41268, "method_name": "executeInternal", "class_name": "HelloJob", "params": ["JobExecutionContext"], "throws": ["JobExecutionException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void executeInternal(JobExecutionContext jobExecutionContext) throws JobExecutionException {\n        // \u83b7\u5f97\u4f20\u5165\u7684\u53c2\u6570\n        Object params = jobExecutionContext.getMergedJobDataMap().get(JobConstant.JOB_MAP_KEY);\n        log.info(\"helloJob is running params={}, time:{}\", params, new Date());\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/schedule/job/HelloJob.java", "stars": "10", "class_props": {"extends": "QuartzJobBean", "implements": null, "modifiers": ["public"]}}, {"id": 41269, "method_name": "login", "class_name": "AuthController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String login(){\n        return \"admin/login\";\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/controller/AuthController.java", "stars": "2", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 41270, "method_name": "toLogin", "class_name": "AuthController", "params": ["HttpServletRequest", "HttpServletResponse", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "APIResponse", "snippet": "    public APIResponse toLogin(\n            HttpServletRequest request,\n            HttpServletResponse response,\n            @ApiParam(name = \"username\", value = \"\u7528\u6237\u540d\", required = true)\n            @RequestParam(name = \"username\", required = true)\n            String username,\n            @ApiParam(name = \"password\", value = \"\u5bc6\u7801\", required = true)\n            @RequestParam(name = \"password\", required = true)\n            String password,\n            @ApiParam(name = \"remeber_me\", value = \"\u8bb0\u4f4f\u6211\", required = false)\n            @RequestParam(name = \"remeber_me\", required = false)\n            String remeber_me\n    ){\n\n        String ip= IPKit.getIpAddrByRequest(request); // \u83b7\u53d6ip\u5e76\u8fc7\u6ee4\u767b\u5f55\u65f6\u7f13\u5b58\u7684bug\n        Integer error_count = cache.hget(\"login_error_count\",ip);\n        try {\n            UserDomain userInfo = userService.login(username, password);\n            request.getSession().setAttribute(WebConst.LOGIN_SESSION_KEY, userInfo);\n            if (StringUtils.isNotBlank(remeber_me)) {\n                TaleUtils.setCookie(response, userInfo.getUid());\n            }\n            logService.addLog(LogActions.LOGIN.getAction(), null, request.getRemoteAddr(), userInfo.getUid());\n        } catch (Exception e) {\n            e.getMessage();\n            error_count = null == error_count ? 1 : error_count + 1;\n            if (error_count > 3) {\n                return APIResponse.fail(\"\u60a8\u8f93\u5165\u5bc6\u7801\u5df2\u7ecf\u9519\u8bef\u8d85\u8fc73\u6b21\uff0c\u8bf710\u5206\u949f\u540e\u5c1d\u8bd5\");\n            }\n            cache.hset(\"login_error_count\", ip,error_count, 10 * 60); // \u52a0\u5165ip\u7684\u8fc7\u6ee4\n            String msg = \"\u767b\u5f55\u5931\u8d25\";\n            if (e instanceof BusinessException) {\n                msg = e.getMessage();\n            } else {\n                e.printStackTrace();\n            }\n            return APIResponse.fail(msg);\n        }\n\n        return APIResponse.success();\n\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/controller/AuthController.java", "stars": "2", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 41271, "method_name": "logout", "class_name": "AuthController", "params": ["HttpSession", "HttpServletResponse", "org"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void logout(HttpSession session, HttpServletResponse response, org.apache.catalina.servlet4preview.http.HttpServletRequest request) {\n        session.removeAttribute(WebConst.LOGIN_SESSION_KEY);\n        Cookie cookie = new Cookie(WebConst.USER_IN_COOKIE, \"\");\n        cookie.setValue(null);\n        cookie.setMaxAge(0);// \u7acb\u5373\u9500\u6bc1cookie\n        cookie.setPath(\"/\");\n        response.addCookie(cookie);\n        try {\n            response.sendRedirect(\"/admin/login\");\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/chenval/my-site/master/src/main/java/cn/blog/controller/AuthController.java", "stars": "2", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 41272, "method_name": "onCreateView", "class_name": "UsersListFragment20Mar20", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_users_list, container, false);\n        ButterKnife.bind(this,rootView);\n\n\n        Toolbar toolbar = rootView.findViewById(R.id.toolbar);\n        toolbar.setTitleTextColor(ContextCompat.getColor(getActivity(),R.color.white));\n        toolbar.setTitle(\"Users List\");\n        ((AppCompatActivity)getActivity()).setSupportActionBar(toolbar);\n\n\n\n\n        User user = PrefLogin.getUser(getActivity());\n\n        if(user.getRole()==User.ROLE_SHOP_ADMIN_CODE)\n        {\n            int defaultRole = getActivity().getIntent().getIntExtra(\"default_role\",User.ROLE_SHOP_STAFF_CODE);\n            ViewHolderFilterUsers.saveFilterByRole(getActivity(),defaultRole);\n        }\n\n\n        boolean selectDeliveryGuy = getActivity().getIntent().getBooleanExtra(\"select_delivery_guy\",false);\n\n        if(selectDeliveryGuy)\n        {\n            ViewHolderFilterUsers.saveFilterByRole(getActivity(),User.ROLE_DELIVERY_GUY_SELF_CODE);\n        }\n\n        \n\n        setupSwipeContainer();\n        setupRecyclerView();\n\n        if(savedInstanceState == null)\n        {\n            makeRefreshNetworkCall();\n        }\n\n\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41273, "method_name": "setupSwipeContainer", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupSwipeContainer()\n    {\n\n        if(swipeContainer!=null) {\n\n            swipeContainer.setOnRefreshListener(this);\n            swipeContainer.setColorSchemeResources(\n                    android.R.color.holo_blue_bright,\n                    android.R.color.holo_green_light,\n                    android.R.color.holo_orange_light,\n                    android.R.color.holo_red_light);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41274, "method_name": "setupRecyclerView", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupRecyclerView()\n    {\n\n        listAdapter = new Adapter(dataset,getActivity(),this);\n        recyclerView.setAdapter(listAdapter);\n\n        layoutManager = new GridLayoutManager(getActivity(),1, LinearLayoutManager.VERTICAL,false);\n        recyclerView.setLayoutManager(layoutManager);\n\n        recyclerView.addItemDecoration(new DividerItemDecoration(getActivity(), DividerItemDecoration.VERTICAL));\n\n\n        final DisplayMetrics metrics = new DisplayMetrics();\n        getActivity().getWindowManager().getDefaultDisplay().getMetrics(metrics);\n\n\n        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\n\n\n            @Override\n            public void onScrollStateChanged(RecyclerView recyclerView, int newState) {\n                super.onScrollStateChanged(recyclerView, newState);\n\n\n                if(layoutManager.findLastVisibleItemPosition()==dataset.size())\n                {\n\n                    if(offset + limit > layoutManager.findLastVisibleItemPosition())\n                    {\n                        return;\n                    }\n\n\n                    // trigger fetch next page\n\n                    if((offset + limit)<= item_count)\n                    {\n                        offset = offset + limit;\n\n                        getUsers();\n                    }\n\n\n                }\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41275, "method_name": "onResume", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        isDestroyed = false;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41276, "method_name": "onDestroy", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n        isDestroyed = true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41277, "method_name": "makeRefreshNetworkCall", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void makeRefreshNetworkCall()\n    {\n        swipeContainer.post(new Runnable() {\n            @Override\n            public void run() {\n\n                swipeContainer.setRefreshing(true);\n                onRefresh();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41278, "method_name": "onRefresh", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRefresh() {\n\n        clearDataset = true;\n        getUsers();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41279, "method_name": "getUsers", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getUsers()\n    {\n\n        if(clearDataset)\n        {\n            offset = 0;\n        }\n\n\n\n\n        User user = PrefLogin.getUser(getActivity());\n\n\n\n\n        Integer userRole = null;\n\n        int role = ViewHolderFilterUsers.getFilterByRole(getActivity());\n\n        if(role!=0)\n        {\n            userRole = role;\n        }\n\n\n\n\n        if(user ==null)\n        {\n            swipeContainer.setRefreshing(false);\n            return;\n        }\n\n\n\n\n        Call<UserEndpoint> call = userService.getUsers(\n                PrefLogin.getAuthorizationHeaders(getActivity()),\n                userRole,\n                null, ViewHolderFilterUsers.getSortString(getActivity()),\n                limit, offset,\n                clearDataset,false\n        );\n\n\n\n\n        call.enqueue(new Callback<UserEndpoint>() {\n            @Override\n            public void onResponse(Call<UserEndpoint> call, Response<UserEndpoint> response) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n                if(response.code() == 200 && response.body()!=null) {\n\n\n                    if (clearDataset) {\n                        dataset.clear();\n                        clearDataset = false;\n\n                        item_count = response.body().getItemCount();\n\n\n\n\n                        if(user.getRole()==User.ROLE_ADMIN_CODE || user.getRole()==User.ROLE_STAFF_CODE)\n                        {\n                            dataset.add(new FilterUsers());\n                        }\n\n\n\n                        if(item_count>0)\n                        {\n                            dataset.add(new HeaderTitle(\"Users List : \" + item_count + \" ( Total )\"));\n                        }\n                    }\n\n\n\n                    if(response.body().getResults()!=null)\n                    {\n                        dataset.addAll(response.body().getResults());\n                    }\n\n\n\n//                    showToastMessage(\"Item Count : \" + item_count);\n\n                    if(item_count==0)\n                    {\n                        dataset.add(getEmptyScreen());\n                    }\n\n\n\n                    if(offset + limit >= item_count)\n                    {\n                        listAdapter.setLoadMore(false);\n                    }\n                    else\n                    {\n                        listAdapter.setLoadMore(true);\n                    }\n                }\n\n\n\n                listAdapter.notifyDataSetChanged();\n                swipeContainer.setRefreshing(false);\n            }\n\n            @Override\n            public void onFailure(Call<UserEndpoint> call, Throwable t) {\n\n\n                if(isDestroyed)\n                {\n                    return;\n                }\n\n                swipeContainer.setRefreshing(false);\n\n\n                dataset.clear();\n                dataset.add(EmptyScreenDataFullScreen.getOffline());\n                listAdapter.notifyDataSetChanged();\n\n            }\n        });\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41280, "method_name": "getEmptyScreen", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["private"], "return_type": "EmptyScreenDataFullScreen", "snippet": "    private EmptyScreenDataFullScreen getEmptyScreen()\n    {\n        User user = PrefLogin.getUser(getActivity());\n\n        if(user.getRole()==User.ROLE_SHOP_ADMIN_CODE)\n        {\n            int defaultRole = getActivity().getIntent().getIntExtra(\"default_role\",User.ROLE_SHOP_STAFF_CODE);\n\n            if(defaultRole==User.ROLE_SHOP_STAFF_CODE)\n            {\n                return EmptyScreenDataFullScreen.emptyScreenStaffList();\n            }\n            else if(defaultRole==User.ROLE_DELIVERY_GUY_SELF_CODE)\n            {\n                return EmptyScreenDataFullScreen.emptyScreenDeliveryStaff();\n            }\n\n\n        }\n\n\n        return EmptyScreenDataFullScreen.emptyScreenStaffList();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41281, "method_name": "showToastMessage", "class_name": "UsersListFragment20Mar20", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(getActivity(),message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41282, "method_name": "listItemClick", "class_name": "UsersListFragment20Mar20", "params": ["User", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void listItemClick(User user, int position) {\n\n\n        if(getActivity().getIntent().getBooleanExtra(\"select_delivery_guy\",false))\n        {\n            Intent data = new Intent();\n            data.putExtra(\"delivery_guy_id\",user.getUserID());\n            getActivity().setResult(456,data);\n\n            getActivity().finish();\n        }\n        else\n        {\n            Gson gson = UtilityFunctions.provideGson();\n            String jsonString = gson.toJson(user);\n\n\n\n//            Intent intent = new Intent(getActivity(), EditProfileDelivery.class);\n//            intent.putExtra(\"staff_profile\",jsonString);\n//            intent.putExtra(FragmentEditProfileDelivery.EDIT_MODE_INTENT_KEY, FragmentEditProfileDelivery.MODE_UPDATE);\n//            startActivity(intent);\n\n\n            User loggedInUser = PrefLogin.getUser(getActivity());\n\n            if(loggedInUser.getRole()==User.ROLE_ADMIN_CODE)\n            {\n                Intent intent = new Intent(getActivity(), EditProfile.class);\n                intent.putExtra(\"user_profile\",jsonString);\n                intent.putExtra(FragmentEditProfile.EDIT_MODE_INTENT_KEY, FragmentEditProfile.MODE_UPDATE_BY_ADMIN);\n                startActivity(intent);\n\n            }\n            else if(loggedInUser.getRole()==User.ROLE_SHOP_ADMIN_CODE)\n            {\n\n                if(user.getRole()==User.ROLE_SHOP_STAFF_CODE)\n                {\n                    Intent intent = new Intent(getActivity(), EditShopStaffPermissions.class);\n                    intent.putExtra(EditShopStaffPermissionsFragment.EDIT_MODE_INTENT_KEY, EditShopStaffPermissionsFragment.MODE_UPDATE);\n                    intent.putExtra(EditShopStaffPermissionsFragment.STAFF_ID_INTENT_KEY,user.getUserID());\n                    startActivity(intent);\n                }\n\n            }\n\n\n\n\n//            showToastMessage(\"User Clicked : \" + user.getUserID());\n\n        }\n\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41283, "method_name": "fabClick", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void fabClick()\n    {\n\n        User loggedInUser = PrefLogin.getUser(getActivity());\n\n\n        if(loggedInUser.getRole()==User.ROLE_ADMIN_CODE)\n        {\n\n            showToastMessage(\"Add User Clicked !\");\n\n        }\n        else if(loggedInUser.getRole()==User.ROLE_SHOP_ADMIN_CODE)\n        {\n\n            FragmentManager fm = getChildFragmentManager();\n            AddUserToShopStaffDialog dialog = new AddUserToShopStaffDialog();\n\n\n            int defaultRole = getActivity().getIntent().getIntExtra(\"default_role\",User.ROLE_SHOP_STAFF_CODE);\n            dialog.setSelectedRole(defaultRole);\n\n\n            dialog.show(fm, \"add_user_to_shop_staff\");\n\n        }\n\n\n\n//        PrefrenceSignUp.saveUser(null,getActivity());\n//        Intent intent = new Intent(getActivity(), SignUp.class);\n//        intent.putExtra(\"user_role\", User.ROLE_DELIVERY_GUY_SELF_CODE);\n//        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41284, "method_name": "filtersUpdated", "class_name": "UsersListFragment20Mar20", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void filtersUpdated() {\n        makeRefreshNetworkCall();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Lists/UsersList/Backups/UsersListFragment20Mar20.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": ["SwipeRefreshLayout", "ViewHolderUserProfileItem", "ViewHolderFilterUsers"], "modifiers": ["public"]}}, {"id": 41285, "method_name": "getPageSql", "class_name": "MySQLDialect", "params": ["String", "RequestContext", "long", "long"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPageSql(String sql, RequestContext context, long offset, long limit) {\n        context.addParameter(limit);\n        context.addParameter(offset);\n        return sql + \" limit ?,?\";\n    }", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/dialect/MySQLDialect.java", "stars": "13", "class_props": {"extends": null, "implements": ["Dialect"], "modifiers": ["public"]}}, {"id": 41286, "method_name": "flatten", "class_name": "ArgUtils", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object[] flatten(Object[] array) {\n        final List<Object> list = new ArrayList<Object>();\n        if (array != null) {\n            for (Object o : array) {\n                if (o instanceof Object[]) {\n                    for (Object oR : flatten((Object[]) o)) {\n                        list.add(oR);\n                    }\n                } else {\n                    list.add(o);\n                }\n            }\n        }\n        return list.toArray();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/apachemath/ArgUtils.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41287, "method_name": "onCreate", "class_name": "BaseWithServiceActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        // 0. Inflate the layout for this AppCompatActivity\n        setContentView(R.layout.activity_base);\n        // 0.1 \u6c89\u6d78\u5f0f\u8d70\u8d77\n        if (bIsLightThenDark()) {\n            StatusBarUtil.initWhiteLight(this);\n        } else {\n            StatusBarUtil.initBlackLight(this);\n        }\n        // 0.5 \u8bbe\u7f6e\u6807\u9898\n        String title = setTitle();\n        if (TextUtils.isEmpty(title)){\n            findViewById(R.id.ab_titleRoot).setVisibility(View.GONE);\n        } else {\n            // \u6c89\u6d78\u5f0f\u5904\u7406\n            ScreenUtil.setStatusBarHeightTop(findViewById(R.id.ab_titleRoot));\n            ((TextView)findViewById(R.id.ab_titleTv)).setText(title);\n        }\n        // 1.TODO \u6807\u9898\u76f8\u5173\u64cd\u4f5c\u3001\u6c89\u6d78\u5f0f\u3001\u6253\u5f00\u5206\u4eab\u6309\u94ae\u7b49\n        // 2.Use DataBinding\u521b\u5efa\u5185\u90e8\u5e03\u5c40\uff0c\u6dfb\u52a0\u5185\u5bb9\u5e03\u5c40\n        viewDataBinding = DataBindingUtil.inflate(getLayoutInflater(), setLayout(), null, false);\n        // 2.1 \u8bbe\u7f6e\u7edf\u4e00\u80cc\u666f\uff0c\u65b9\u4fbf\u5207\u6362\u591c\u95f4\u6a21\u5f0f\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n            viewDataBinding.getRoot().setBackgroundColor(getResources().getColor(R.color.page_bg_color, null));\n        } else {\n            viewDataBinding.getRoot().setBackgroundColor(getResources().getColor(R.color.page_bg_color));\n        }\n        // 3.\u6dfb\u52a0\u5185\u5bb9\u5e03\u5c40\n        FrameLayout ab_contentRoot = findViewById(R.id.ab_contentRoot);\n        ab_contentRoot.addView(viewDataBinding.getRoot());\n        // 3. \u7edf\u4e00\u6ce8\u89e3Arouter\n        ARouter.getInstance().inject(this);\n        // \u521d\u59cb\u5316View\u3001\u9002\u914d\u5668\u7b49\u8c03\u7528\n        initLayout(this);\n        // \u7531\u57fa\u7840\u9875\u9762\u521b\u5efa\u8bf7\u6c42\u670d\u52a1\uff0c\u7ba1\u7406\u751f\u547d\u5468\u671f\n        baseControlPresenter = new BaseControlPresenter(this);\n        // \u6570\u636e\u8bf7\u6c42\u8c03\u7528\n        requestData(this);\n        // \u4e8b\u4ef6\u7ed1\u5b9a\n        eventHandler(this);\n        // \u6ce8\u518c\u751f\u547d\u5468\u671f\u76d1\u542c - \u7136\u540e\u505a\u4e00\u4e9b\u7ed1\u5b9a\u3001\u89e3\u7ed1\u3001\u57cb\u70b9\u7b49\u64cd\u4f5c\n        getLifecycle().addObserver(new ActivityObserver(this, getLifecycle()));\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41288, "method_name": "onClick", "class_name": "BaseWithServiceActivity", "params": ["View", "View"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onClick(final View view, final View.OnClickListener listener) {\n        view.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                if (!TimeUtil.isFastDoubleClick()) {\n                    if (null != listener) {\n                        listener.onClick(view);\n                    }\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41289, "method_name": "onDestroy", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDestroy() {\n        super.onDestroy();\n        if (null != baseControlPresenter) {\n            baseControlPresenter.releaseResource();\n            baseControlPresenter = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41290, "method_name": "getViewDataBinding", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "T", "snippet": "    public T getViewDataBinding() {\n        if (null == viewDataBinding) {\n            throw new NullPointerException(\"Not init viewDataBinding!\");\n        }\n        return viewDataBinding;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41291, "method_name": "showDialog", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showDialog() {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41292, "method_name": "disDialog", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disDialog() {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41293, "method_name": "retryDialog", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void retryDialog() {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41294, "method_name": "emptyDialog", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void emptyDialog() {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41295, "method_name": "showToast", "class_name": "BaseWithServiceActivity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void showToast(String msg) {\n        ToastUtil.showTost(msg);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41296, "method_name": "onLoinOut", "class_name": "BaseWithServiceActivity", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLoinOut(String _functionName, Object object) {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41297, "method_name": "onThirdBind", "class_name": "BaseWithServiceActivity", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onThirdBind(String _functionName, int code) {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41298, "method_name": "setBarTitle", "class_name": "BaseWithServiceActivity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBarTitle(String mTitle) {\n        ((TextView)findViewById(R.id.ab_titleTv)).setText(mTitle);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41299, "method_name": "bIsLightThenDark", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean bIsLightThenDark(){             // \u8bbe\u7f6e\u7cfb\u7edf\u72b6\u6001\u680f\u989c\u8272\u662f\u4eae\u8272\u8fd8\u662f\u6697\u8272\n        return true;\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41300, "method_name": "setTitle", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String setTitle(){                       // \u8bbe\u7f6e\u6807\u9898\n        return \"\";\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41301, "method_name": "setLayout", "class_name": "BaseWithServiceActivity", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "int", "snippet": "    public abstract int setLayout();                   // \u8bbe\u7f6e\u5e03\u5c40\n\n    public abstract void initLayout(Context context);  // \u52a8\u6001\u8c03\u6574\u5e03\u5c40\u63a7\u4ef6\u5927\u5c0f\u3001\u95f4\u8ddd\u3001\u521d\u59cb\u9002\u914d\u5668\u7b49\n\n    public abstract void requestData(Context context);  // \u53d1\u8d77\u6570\u636e\u8bf7\u6c42\n\n    public abstract void eventHandler(Context context);  // \u4e8b\u4ef6\u5904\u7406\n    //.....\n}\n", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41302, "method_name": "initLayout", "class_name": "BaseWithServiceActivity", "params": ["Context"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void initLayout(Context context);  // \u52a8\u6001\u8c03\u6574\u5e03\u5c40\u63a7\u4ef6\u5927\u5c0f\u3001\u95f4\u8ddd\u3001\u521d\u59cb\u9002\u914d\u5668\u7b49\n\n    public abstract void requestData(Context context);  // \u53d1\u8d77\u6570\u636e\u8bf7\u6c42\n\n    public abstract void eventHandler(Context context);  // \u4e8b\u4ef6\u5904\u7406\n    //.....\n}\n", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41303, "method_name": "requestData", "class_name": "BaseWithServiceActivity", "params": ["Context"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void requestData(Context context);  // \u53d1\u8d77\u6570\u636e\u8bf7\u6c42\n\n    public abstract void eventHandler(Context context);  // \u4e8b\u4ef6\u5904\u7406\n    //.....\n}\n", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41304, "method_name": "eventHandler", "class_name": "BaseWithServiceActivity", "params": ["Context"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void eventHandler(Context context);  // \u4e8b\u4ef6\u5904\u7406\n    //.....\n}\n", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/page/BaseWithServiceActivity.java", "stars": "14", "class_props": {"extends": "AppCompatActivity", "implements": ["BaseControlContract"], "modifiers": ["public", "abstract"]}}, {"id": 41305, "method_name": "toHexString", "class_name": "DigestServerAuthenticationHelper", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String toHexString(byte b[]) {\n        int pos = 0;\n        char[] c = new char[b.length * 2];\n        for (int i = 0; i < b.length; i++) {\n            c[pos++] = toHex[(b[i] >> 4) & 0x0F];\n            c[pos++] = toHex[b[i] & 0x0f];\n        }\n        return new String(c);\n    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/auth/DigestServerAuthenticationHelper.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41306, "method_name": "generateNonce", "class_name": "DigestServerAuthenticationHelper", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String generateNonce() {\n        // Get the time of day and run MD5 over it.\n        Date date = new Date();\n        long time = date.getTime();\n        Random rand = new Random();\n        long pad = rand.nextLong();\n        String nonceString = (new Long(time)).toString()\n                + (new Long(pad)).toString();\n        byte mdbytes[] = messageDigest.digest(nonceString.getBytes());\n        // Convert the mdbytes array into a hex string.\n        return toHexString(mdbytes);\n    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/auth/DigestServerAuthenticationHelper.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41307, "method_name": "generateChallenge", "class_name": "DigestServerAuthenticationHelper", "params": ["HeaderFactory", "Response", "String"], "throws": null, "modifiers": ["public"], "return_type": "Response", "snippet": "    public Response generateChallenge(HeaderFactory headerFactory, Response response, String realm) {\n        try {\n            WWWAuthenticateHeader proxyAuthenticate = headerFactory\n                    .createWWWAuthenticateHeader(DEFAULT_SCHEME);\n            proxyAuthenticate.setParameter(\"realm\", realm);\n            proxyAuthenticate.setParameter(\"nonce\", generateNonce());\n            proxyAuthenticate.setParameter(\"opaque\", \"\");\n            proxyAuthenticate.setParameter(\"stale\", \"FALSE\");\n            proxyAuthenticate.setParameter(\"algorithm\", DEFAULT_ALGORITHM);\n            response.setHeader(proxyAuthenticate);\n        } catch (Exception ex) {\n            InternalErrorHandler.handleException(ex);\n        }\n        return response;\n    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/auth/DigestServerAuthenticationHelper.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41308, "method_name": "doAuthenticateHashedPassword", "class_name": "DigestServerAuthenticationHelper", "params": ["Request", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean doAuthenticateHashedPassword(Request request, String hashedPassword) {\n    \tAuthorizationHeader authHeader = (AuthorizationHeader) request.getHeader(AuthorizationHeader.NAME);\n        if ( authHeader == null ) return false;\n        String realm = authHeader.getRealm();\n        String username = authHeader.getUsername();\n      \n        if ( username == null || realm == null ) {\n            return false;\n        }\n       \n        String nonce = authHeader.getNonce();\n        URI uri = authHeader.getURI();\n        if (uri == null) {\n            return false;\n        }\n        \n\n      \n        String A2 = request.getMethod().toUpperCase() + \":\" + uri.toString();\n        String HA1 = hashedPassword;\n\n       \n        byte[] mdbytes = messageDigest.digest(A2.getBytes());\n        String HA2 = toHexString(mdbytes);\n      \n        String cnonce = authHeader.getCNonce();\n        String KD = HA1 + \":\" + nonce;\n        if (cnonce != null) {\n            KD += \":\" + cnonce;\n        }\n        KD += \":\" + HA2;\n        mdbytes = messageDigest.digest(KD.getBytes());\n        String mdString = toHexString(mdbytes);\n        String response = authHeader.getResponse();\n       \n\n        return mdString.equals(response);\n    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/auth/DigestServerAuthenticationHelper.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41309, "method_name": "doAuthenticatePlainTextPassword", "class_name": "DigestServerAuthenticationHelper", "params": ["Request", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean doAuthenticatePlainTextPassword(Request request, String pass) {\n    \tAuthorizationHeader authHeader = (AuthorizationHeader) request.getHeader(AuthorizationHeader.NAME);\n        if ( authHeader == null ) return false;\n        String realm = authHeader.getRealm();\n        String username = authHeader.getUsername();\n      \n   \n        if ( username == null || realm == null ) {\n            return false;\n        }\n        \n\n        String nonce = authHeader.getNonce();\n        URI uri = authHeader.getURI();\n        if (uri == null) {\n           return false;\n        }\n        \n\n        String A1 = username + \":\" + realm + \":\" + pass;\n        String A2 = request.getMethod().toUpperCase() + \":\" + uri.toString();\n        byte mdbytes[] = messageDigest.digest(A1.getBytes());\n        String HA1 = toHexString(mdbytes);\n\n       \n        mdbytes = messageDigest.digest(A2.getBytes());\n        String HA2 = toHexString(mdbytes);\n      \n        String cnonce = authHeader.getCNonce();\n        String KD = HA1 + \":\" + nonce;\n        if (cnonce != null) {\n            KD += \":\" + cnonce;\n        }\n        KD += \":\" + HA2;\n        mdbytes = messageDigest.digest(KD.getBytes());\n        String mdString = toHexString(mdbytes);\n        String response = authHeader.getResponse();\n        return mdString.equals(response);\n        \n    }", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/gb28181/auth/DigestServerAuthenticationHelper.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41310, "method_name": "setColumn", "class_name": "BaseJdbcLogger", "params": ["Object", "Object"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void setColumn(Object key, Object value) {\n    columnMap.put(key, value);\n    columnNames.add(key);\n    columnValues.add(value);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41311, "method_name": "getColumn", "class_name": "BaseJdbcLogger", "params": ["Object"], "throws": null, "modifiers": ["protected"], "return_type": "Object", "snippet": "  protected Object getColumn(Object key) {\n    return columnMap.get(key);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41312, "method_name": "getParameterValueString", "class_name": "BaseJdbcLogger", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String getParameterValueString() {\n    List<Object> typeList = new ArrayList<>(columnValues.size());\n    for (Object value : columnValues) {\n      if (value == null) {\n        typeList.add(\"null\");\n      } else {\n        typeList.add(objectValueString(value) + \"(\" + value.getClass().getSimpleName() + \")\");\n      }\n    }\n    final String parameters = typeList.toString();\n    return parameters.substring(1, parameters.length() - 1);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41313, "method_name": "objectValueString", "class_name": "BaseJdbcLogger", "params": ["Object"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String objectValueString(Object value) {\n    if (value instanceof Array) {\n      try {\n        return ArrayUtil.toString(((Array) value).getArray());\n      } catch (SQLException e) {\n        return value.toString();\n      }\n    }\n    return value.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41314, "method_name": "getColumnString", "class_name": "BaseJdbcLogger", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String getColumnString() {\n    return columnNames.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41315, "method_name": "clearColumnInfo", "class_name": "BaseJdbcLogger", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void clearColumnInfo() {\n    columnMap.clear();\n    columnNames.clear();\n    columnValues.clear();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41316, "method_name": "removeBreakingWhitespace", "class_name": "BaseJdbcLogger", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String removeBreakingWhitespace(String original) {\n    StringTokenizer whitespaceStripper = new StringTokenizer(original);\n    StringBuilder builder = new StringBuilder();\n    while (whitespaceStripper.hasMoreTokens()) {\n      builder.append(whitespaceStripper.nextToken());\n      builder.append(\" \");\n    }\n    return builder.toString();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41317, "method_name": "isDebugEnabled", "class_name": "BaseJdbcLogger", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "  protected boolean isDebugEnabled() {\n    return statementLog.isDebugEnabled();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41318, "method_name": "isTraceEnabled", "class_name": "BaseJdbcLogger", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "  protected boolean isTraceEnabled() {\n    return statementLog.isTraceEnabled();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41319, "method_name": "debug", "class_name": "BaseJdbcLogger", "params": ["String", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void debug(String text, boolean input) {\n    if (statementLog.isDebugEnabled()) {\n      statementLog.debug(prefix(input) + text);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41320, "method_name": "trace", "class_name": "BaseJdbcLogger", "params": ["String", "boolean"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void trace(String text, boolean input) {\n    if (statementLog.isTraceEnabled()) {\n      statementLog.trace(prefix(input) + text);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41321, "method_name": "prefix", "class_name": "BaseJdbcLogger", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String prefix(boolean isInput) {\n    char[] buffer = new char[queryStack * 2 + 2];\n    Arrays.fill(buffer, '=');\n    buffer[queryStack * 2 + 1] = ' ';\n    if (isInput) {\n      buffer[queryStack * 2] = '>';\n    } else {\n      buffer[0] = '<';\n    }\n    return new String(buffer);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/logging/jdbc/BaseJdbcLogger.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41322, "method_name": "trans", "class_name": "Network2LocalPicSchedule", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void trans() {\n\n        log.info(\"Network2LocalPicSchedule\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\u3002\");\n\n\n        Integer offset = 0, limit = 100;\n        List<Book> networkPicBooks;\n        do {\n            networkPicBooks = bookService.queryNetworkPicBooks(limit, offset);\n            for (Book book : networkPicBooks) {\n                bookService.updateBookPicToLocal(book.getPicUrl(), book.getId());\n            }\n            offset += limit;\n        } while (networkPicBooks.size() > 0);\n\n\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/core/schedule/Network2LocalPicSchedule.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41323, "method_name": "supports", "class_name": "CommonResultControllerAdvice", "params": ["MethodParameter", "Class<HttpMessageConverter>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean supports(MethodParameter returnType, Class<? extends HttpMessageConverter<?>> converterType) {\n        return AbstractJackson2HttpMessageConverter.class.isAssignableFrom(converterType);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/core/CommonResultControllerAdvice.java", "stars": "1", "class_props": {"extends": null, "implements": ["ResponseBodyAdvice"], "modifiers": ["public"]}}, {"id": 41324, "method_name": "beforeBodyWrite", "class_name": "CommonResultControllerAdvice", "params": ["Object", "MethodParameter", "MediaType", "Class<HttpMessageConverter>", "ServerHttpRequest", "ServerHttpResponse"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object beforeBodyWrite(Object body,\n                                  MethodParameter returnType,\n                                  MediaType contentType,\n                                  Class<? extends HttpMessageConverter<?>> converterType,\n                                  ServerHttpRequest request,\n                                  ServerHttpResponse response) {\n\n        MappingJacksonValue container = getOrCreateContainer(body);\n        // The contain body will never be null\n        beforeBodyWriteInternal(container, contentType, returnType, request, response);\n        return container;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/core/CommonResultControllerAdvice.java", "stars": "1", "class_props": {"extends": null, "implements": ["ResponseBodyAdvice"], "modifiers": ["public"]}}, {"id": 41325, "method_name": "getOrCreateContainer", "class_name": "CommonResultControllerAdvice", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "MappingJacksonValue", "snippet": "    private MappingJacksonValue getOrCreateContainer(Object body) {\n        return (body instanceof MappingJacksonValue ? (MappingJacksonValue) body : new MappingJacksonValue(body));\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/core/CommonResultControllerAdvice.java", "stars": "1", "class_props": {"extends": null, "implements": ["ResponseBodyAdvice"], "modifiers": ["public"]}}, {"id": 41326, "method_name": "beforeBodyWriteInternal", "class_name": "CommonResultControllerAdvice", "params": ["MappingJacksonValue", "MediaType", "MethodParameter", "ServerHttpRequest", "ServerHttpResponse"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void beforeBodyWriteInternal(MappingJacksonValue bodyContainer,\n                                         MediaType contentType,\n                                         MethodParameter returnType,\n                                         ServerHttpRequest request,\n                                         ServerHttpResponse response) {\n        // \u83b7\u53d6\u8fd4\u56de\u503c\n        Object returnBody = bodyContainer.getValue();\n\n        if (returnBody instanceof BaseResponse) {\n            // \u5982\u679c\u662fBaseResponse\u76f4\u63a5\u8fd4\u56de\n            BaseResponse<?> baseResponse = (BaseResponse) returnBody;\n            response.setStatusCode(HttpStatus.resolve(baseResponse.getStatus()));\n            return;\n        }\n\n        // \u5305\u88c5\u8fd4\u56de\n        if (returnBody != null) {\n            BaseResponse<?> baseResponse = BaseResponse.ok(returnBody);\n            bodyContainer.setValue(baseResponse);\n            response.setStatusCode(HttpStatus.valueOf(baseResponse.getStatus()));\n        } else {//controller \u8fd4\u56de void\n            BaseResponse<?> baseResponse = BaseResponse.ok(null);\n            bodyContainer.setValue(baseResponse);\n            response.setStatusCode(HttpStatus.valueOf(baseResponse.getStatus()));\n        }\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/core/CommonResultControllerAdvice.java", "stars": "1", "class_props": {"extends": null, "implements": ["ResponseBodyAdvice"], "modifiers": ["public"]}}, {"id": 41327, "method_name": "range", "class_name": "TechFuelRange", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int range()  { return (int) (session().propulsionBonus() * range); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41328, "method_name": "init", "class_name": "TechFuelRange", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        super.init();\n        techType = Tech.FUEL_RANGE;\n\n        switch(typeSeq) {\n            case 0: range = 3;   break;\n            case 1: range = 4;   break;\n            case 2: range = 5;   break;\n            case 3: range = 6;   break;\n            case 4: range = 7;   break;\n            case 5: range = 8;   break;\n            case 6: range = 9;   break;\n            case 7: range = 10;  break;\n            case 8: range = 99999; \n                    unlimited = true;\n                    break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41329, "method_name": "isFuelRangeTech", "class_name": "TechFuelRange", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isFuelRangeTech()     { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41330, "method_name": "expansionModeFactor", "class_name": "TechFuelRange", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float expansionModeFactor()  { return 3; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41331, "method_name": "providesShipComponent", "class_name": "TechFuelRange", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean providesShipComponent()  { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41332, "method_name": "isObsolete", "class_name": "TechFuelRange", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isObsolete(Empire c) {\n        return range < c.tech().shipRange();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41333, "method_name": "baseValue", "class_name": "TechFuelRange", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseValue(Empire c) { return c.ai().scientist().baseValue(this); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41334, "method_name": "provideBenefits", "class_name": "TechFuelRange", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void provideBenefits(Empire c) {\n        super.provideBenefits(c);\n        if (! isObsolete(c)) \n            c.tech().topFuelRangeTech(this);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechFuelRange.java", "stars": "74", "class_props": {"extends": "Tech", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41335, "method_name": "monodroidAddReference", "class_name": "EditorRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/EditorRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 41336, "method_name": "monodroidClearReferences", "class_name": "EditorRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/EditorRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 41337, "method_name": "onCreate", "class_name": "OrderDetail", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_fragment_container);\n\n\n\n        if(getSupportFragmentManager().findFragmentByTag(FRAGMENT_ORDER_DETAIL)==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .add(R.id.fragment_container,new FragmentOrderDetail(),FRAGMENT_ORDER_DETAIL)\n                    .commit();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DetailScreens/DetailOrder/OrderDetail.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 41338, "method_name": "main", "class_name": "ObjectReferences", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tStringBuilder sbA = new StringBuilder(\"abc\");\n\t\tStringBuilder sbB = sbA;\n\t\t\n\t\tsbB.append(\"d\");\t\n\t\tSystem.out.println(\"sbA: \" + sbA); // abcd\n\t\tSystem.out.println(\"sbB: \" + sbB); // abcd\n\t\t\n\t\tsbA.append(\"ef\");\n\t\tSystem.out.println(\"sbA: \" + sbA); // abcdef\n\t\tSystem.out.println(\"sbB: \" + sbB); // abcdef\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day17/ObjectReferences.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41339, "method_name": "refreshCache", "class_name": "CacheController", "params": ["Byte", "String"], "throws": null, "modifiers": ["public"], "return_type": "ResultBean", "snippet": "    public ResultBean refreshCache(@PathVariable(\"type\") Byte type, @PathVariable(\"pass\") String pass){\n        if(!cacheManagerPass.equals(pass)){\n            return ResultBean.fail(ResponseStatus.PASSWORD_ERROR);\n        }\n        switch (type){\n            case 1:{\n                //\u5237\u65b0\u9996\u9875\u63a8\u8350\u4e66\u7c4d\u7f13\u5b58\n                cacheService.del(CacheKey.INDEX_BOOK_SETTINGS_KEY);\n                bookService.listBookSettingVO();\n                break;\n            }\n            case 2:{\n                //\u5237\u65b0\u9996\u9875\u65b0\u95fb\u7f13\u5b58\n                cacheService.del(CacheKey.INDEX_NEWS_KEY);\n                newsService.listIndexNews();\n                break;\n            }\n            case 3:{\n                //\u5237\u65b0\u9996\u9875\u53cb\u60c5\u94fe\u63a5\n                cacheService.del(CacheKey.INDEX_LINK_KEY);\n                friendLinkService.listIndexLink();\n                break;\n            }\n            default:{\n                break;\n            }\n\n        }\n\n        return ResultBean.ok();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/CacheController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41340, "method_name": "setNonNullParameter", "class_name": "ByteTypeHandler", "params": ["PreparedStatement", "int", "Byte", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Byte parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setByte(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 41341, "method_name": "getNullableResult", "class_name": "ByteTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Byte", "snippet": "  public Byte getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    byte result = rs.getByte(columnName);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 41342, "method_name": "getNullableResult", "class_name": "ByteTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Byte", "snippet": "  public Byte getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    byte result = rs.getByte(columnIndex);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 41343, "method_name": "getNullableResult", "class_name": "ByteTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Byte", "snippet": "  public Byte getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    byte result = cs.getByte(columnIndex);\n    return result == 0 && cs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/ByteTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 41344, "method_name": "image", "class_name": "FastImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BufferedImage", "snippet": "    public BufferedImage image() { \n        if (pixels == null)\n            return null;\n        return new BufferedImage(\n                PROTOTYPE.getColorModel(),\n                Raster.createWritableRaster(\n                        PROTOTYPE.getSampleModel().createCompatibleSampleModel(w, h),\n                        new DataBufferInt(pixels, pixels.length),\n                        new Point()),\n                false,\n                null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41345, "method_name": "image", "class_name": "FastImage", "params": ["Image"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void image(Image img)  { \n        if (img == null)\n            pixels = null;\n        else {\n            w = img.getWidth(null);\n            h = img.getHeight(null);\n            pixels = new int[w*h];\n            try {\n                new PixelGrabber(img, 0, 0, w, h, pixels, 0, w).grabPixels();\n            }\n            catch (InterruptedException localInterruptedException) { }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41346, "method_name": "from", "class_name": "FastImage", "params": ["Image"], "throws": null, "modifiers": ["public", "static"], "return_type": "FastImage", "snippet": "    public static FastImage from(Image img) {\n        return img == null ? null : new FastImage(img);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41347, "method_name": "fromPixels", "class_name": "FastImage", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "FastImage", "snippet": "    public static FastImage fromPixels(int[] px, int w, int h) {\n        return new FastImage(px, w, h);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41348, "method_name": "sized", "class_name": "FastImage", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "FastImage", "snippet": "    public static FastImage sized(int w, int h) {\n        return new FastImage(w,h);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41349, "method_name": "equals", "class_name": "FastImage", "params": ["FastImage"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(FastImage img) {\n        if (img == this)\n            return true;\n        if (img == null)\n            return false;\n        if (getHeight() != img.getHeight())\n            return false;\n        if (getWidth() != img.getWidth())\n            return false;\n        for (int x=0;x<getWidth();x++) {\n            for (int y=0;y<getHeight();y++) {\n                if (getRGB(x, y) != img.getRGB(x,y))\n                        return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41350, "method_name": "copy", "class_name": "FastImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FastImage", "snippet": "    public FastImage copy() {\n        int[] newPx = new int[pixels.length];\n        for (int i=0;i<pixels.length;i++)\n            newPx[i]=pixels[i];\n        return FastImage.fromPixels(newPx, w, h);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41351, "method_name": "fromExplosionImage", "class_name": "FastImage", "params": ["BufferedImage"], "throws": null, "modifiers": ["public", "static"], "return_type": "FastImage", "snippet": "    public static FastImage fromExplosionImage(BufferedImage img) {\n        FastImage fi = new FastImage(img);\n        int w = fi.getWidth();\n        int h = fi.getHeight();\n        for (int x=0;x<w;x++) {\n            for (int y=0;y<h;y++) {\n                int px = fi.getRGB(x, y);\n                int r = px >> 16 & 0xff;\n                int g = px >> 8 & 0xff;\n                int b = px & 0xff;\n                // move blue channel to alpha and set blue to 0\n                int newPx = (b << 24)+(r << 16)+(g << 8)+0;\n                fi.setRGB(x, y, newPx);\n            }\n        }\n        return fi;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41352, "method_name": "fromHeightMap", "class_name": "FastImage", "params": ["PlanetHeightMap"], "throws": null, "modifiers": ["public", "static"], "return_type": "FastImage", "snippet": "    public static FastImage fromHeightMap(PlanetHeightMap map) {\n        int w = map.width();\n        int h = map.height();\n        int[] px = new int[w*h];\n        // convert each byte value (-128 to 127)\n        // to integers representing grayscale (0-255 for r,g,b)\n        for (int x=0;x<w;x++) {\n            for (int y=0;y<h;y++) {\n                int index = indexPosn(x,y,w); // find 1D index \n                int v = map.col(x, y);\n                int alpha = 255;\n                if (v == Byte.MIN_VALUE)\n                    alpha = 0;\n                int pxV = v-Byte.MIN_VALUE;    // convert to 0-255\n                int newPixel = (alpha << 24)+(pxV << 16)+(pxV << 8)+pxV;\n                px[index] = newPixel;\n            }\n        }\n        //System.out.println(\"trans pixels: \"+transPx);\n        return new FastImage(px, w, h);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41353, "method_name": "getWidth", "class_name": "FastImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getWidth()                    { return w; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41354, "method_name": "getHeight", "class_name": "FastImage", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getHeight()                   { return h; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41355, "method_name": "getRGB", "class_name": "FastImage", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getRGB(int x, int y)          { return ((y*w)+x < 0) ? 0 : pixels[(y*w)+x]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41356, "method_name": "getAlpha", "class_name": "FastImage", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAlpha(int x, int y)        { return getRGB(x,y) >> 24 & 0xff;\t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41357, "method_name": "setRGB", "class_name": "FastImage", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRGB(int x, int y, int px) { \n        if ((x < w) && (y < h))\n            pixels[(y*w)+x] = px; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41358, "method_name": "smoothScale", "class_name": "FastImage", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "FastImage", "snippet": "    public FastImage smoothScale(int newW, int newH) {\n        if ((w != newW) || (h != newH))\n            image(image().getScaledInstance(newW, newH, Image.SCALE_SMOOTH));\n        return this;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41359, "method_name": "squishRow", "class_name": "FastImage", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void squishRow(int y, int x0, int x1) {\n        int w = getWidth();\n        int w0 = x1-x0+1;\n        // nothing to squish\n        if (w == w0)\n            return;\n\n        int nullPx = (0 << 24)+(0 << 16)+(0 << 8)+0;\n        // \"squish\" entire row\n        if (x0 < 0) {\n            for (int x=0;x<w;x++)\n                setRGB(x, y, nullPx);\n            return;\n        }\n\n        int removeCount = w - w0;\n        float n = (float) w / removeCount;  \n        // ex: if w=1000 and removeCnt = 30, then skip every n=33.33rd pixel\n\n        // \"squish\" by radiating out from center, removing every nth pixel\n        // radiate from center to left\n        float cnt = n/2;\n        float targetCnt = n;\n        int newX = w/2;\n        for (int x=w/2; x>=0; x--) {\n            if ((cnt >= targetCnt) && (x > 0)) {\n                x--;\n                targetCnt += n;\n            }\n            setRGB(newX,y,getRGB(x,y));\n            newX--;\n            cnt++;\n        }\n        // radiate from center to right\n        cnt = n/2;\n        targetCnt = n;\n        newX = w/2;\n        for (int x=w/2; x<w; x++) {\n            if ((cnt >= targetCnt) && (x<(w-1))) {\n                x++;\n                targetCnt += n;\n            }\n            setRGB(newX,y,getRGB(x,y));\n            newX++;\n            cnt++;\n        }\n\n        // null out px left of x0 and right of x1\n        for (int x=0;x<x0;x++)\n            setRGB(x,y,nullPx);\n        for (int x=x1+1;x<w;x++)\n            setRGB(x,y,nullPx);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41360, "method_name": "clip", "class_name": "FastImage", "params": ["Rectangle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clip(Rectangle r) {\n        if (r == null)\n            return;\n\n        int px = 0;\n        int[] newPixels = new int[r.width * r.height];\n        for (int y=0;y<r.height;y++) {\n            for (int x=0;x<r.width;x++) \n                newPixels[px++] = getRGB(r.x+x, r.y+y);\n        }\n\n        pixels = newPixels;\n        w = r.width;\n        h = r.height;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41361, "method_name": "drawImage", "class_name": "FastImage", "params": ["Image", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawImage(Image img, int x0, int y0) {\n        drawImage(img, x0, y0, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41362, "method_name": "drawImage", "class_name": "FastImage", "params": ["Image", "int", "int", "Rectangle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawImage(Image img, int x0, int y0, Rectangle bounds) {\n        FastImage fImg = FastImage.from(img);\n        fImg.clip(bounds);\n        int x = x0;\n        int y = y0;\n        for (int x1=0;x1<fImg.w;x1++) {\n            for (int y1=0;y1<fImg.h;y1++) \n                setRGB(x+x1,y+y1,fImg.getRGB(x1,y1));\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41363, "method_name": "indexPosn", "class_name": "FastImage", "params": ["int", "int", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "int", "snippet": "    private static int indexPosn(int x, int y, int w0) {\n        return (y * w0) + x;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41364, "method_name": "logImage", "class_name": "FastImage", "params": ["int", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void logImage(int w, int h) {\n        if (!UserPreferences.showMemory())\n            return;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/FastImage.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41365, "method_name": "setOrderByClause", "class_name": "TKMessageConsumedExample", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderByClause(String orderByClause) {\n        this.orderByClause = orderByClause;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41366, "method_name": "getOrderByClause", "class_name": "TKMessageConsumedExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOrderByClause() {\n        return orderByClause;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41367, "method_name": "setDistinct", "class_name": "TKMessageConsumedExample", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDistinct(boolean distinct) {\n        this.distinct = distinct;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41368, "method_name": "isDistinct", "class_name": "TKMessageConsumedExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDistinct() {\n        return distinct;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41369, "method_name": "getOredCriteria", "class_name": "TKMessageConsumedExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criteria>", "snippet": "    public List<Criteria> getOredCriteria() {\n        return oredCriteria;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41370, "method_name": "or", "class_name": "TKMessageConsumedExample", "params": ["Criteria"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void or(Criteria criteria) {\n        oredCriteria.add(criteria);\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41371, "method_name": "or", "class_name": "TKMessageConsumedExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria or() {\n        Criteria criteria = createCriteriaInternal();\n        oredCriteria.add(criteria);\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41372, "method_name": "createCriteria", "class_name": "TKMessageConsumedExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria createCriteria() {\n        Criteria criteria = createCriteriaInternal();\n        if (oredCriteria.size() == 0) {\n            oredCriteria.add(criteria);\n        }\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41373, "method_name": "createCriteriaInternal", "class_name": "TKMessageConsumedExample", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Criteria", "snippet": "    protected Criteria createCriteriaInternal() {\n        Criteria criteria = new Criteria();\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41374, "method_name": "clear", "class_name": "TKMessageConsumedExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n        oredCriteria.clear();\n        orderByClause = null;\n        distinct = false;\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41375, "method_name": "isValid", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isValid() {\n            return criteria.size() > 0;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41376, "method_name": "getAllCriteria", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getAllCriteria() {\n            return criteria;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41377, "method_name": "getCriteria", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getCriteria() {\n            return criteria;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41378, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition) {\n            if (condition == null) {\n                throw new RuntimeException(\"Value for condition cannot be null\");\n            }\n            criteria.add(new Criterion(condition));\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41379, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value, String property) {\n            if (value == null) {\n                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value));\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41380, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String", "Object", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value1, Object value2, String property) {\n            if (value1 == null || value2 == null) {\n                throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value1, value2));\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41381, "method_name": "andMsgIdIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdIsNull() {\n            addCriterion(\"msg_id is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41382, "method_name": "andMsgIdIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdIsNotNull() {\n            addCriterion(\"msg_id is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41383, "method_name": "andMsgIdEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdEqualTo(String value) {\n            addCriterion(\"msg_id =\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41384, "method_name": "andMsgIdNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdNotEqualTo(String value) {\n            addCriterion(\"msg_id <>\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41385, "method_name": "andMsgIdGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdGreaterThan(String value) {\n            addCriterion(\"msg_id >\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41386, "method_name": "andMsgIdGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdGreaterThanOrEqualTo(String value) {\n            addCriterion(\"msg_id >=\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41387, "method_name": "andMsgIdLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdLessThan(String value) {\n            addCriterion(\"msg_id <\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41388, "method_name": "andMsgIdLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdLessThanOrEqualTo(String value) {\n            addCriterion(\"msg_id <=\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41389, "method_name": "andMsgIdLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdLike(String value) {\n            addCriterion(\"msg_id like\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41390, "method_name": "andMsgIdNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdNotLike(String value) {\n            addCriterion(\"msg_id not like\", value, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41391, "method_name": "andMsgIdIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdIn(List<String> values) {\n            addCriterion(\"msg_id in\", values, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41392, "method_name": "andMsgIdNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdNotIn(List<String> values) {\n            addCriterion(\"msg_id not in\", values, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41393, "method_name": "andMsgIdBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdBetween(String value1, String value2) {\n            addCriterion(\"msg_id between\", value1, value2, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41394, "method_name": "andMsgIdNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgIdNotBetween(String value1, String value2) {\n            addCriterion(\"msg_id not between\", value1, value2, \"msgId\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41395, "method_name": "andMsgNameIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameIsNull() {\n            addCriterion(\"msg_name is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41396, "method_name": "andMsgNameIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameIsNotNull() {\n            addCriterion(\"msg_name is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41397, "method_name": "andMsgNameEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameEqualTo(String value) {\n            addCriterion(\"msg_name =\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41398, "method_name": "andMsgNameNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameNotEqualTo(String value) {\n            addCriterion(\"msg_name <>\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41399, "method_name": "andMsgNameGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameGreaterThan(String value) {\n            addCriterion(\"msg_name >\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41400, "method_name": "andMsgNameGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameGreaterThanOrEqualTo(String value) {\n            addCriterion(\"msg_name >=\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41401, "method_name": "andMsgNameLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameLessThan(String value) {\n            addCriterion(\"msg_name <\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41402, "method_name": "andMsgNameLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameLessThanOrEqualTo(String value) {\n            addCriterion(\"msg_name <=\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41403, "method_name": "andMsgNameLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameLike(String value) {\n            addCriterion(\"msg_name like\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41404, "method_name": "andMsgNameNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameNotLike(String value) {\n            addCriterion(\"msg_name not like\", value, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41405, "method_name": "andMsgNameIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameIn(List<String> values) {\n            addCriterion(\"msg_name in\", values, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41406, "method_name": "andMsgNameNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameNotIn(List<String> values) {\n            addCriterion(\"msg_name not in\", values, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41407, "method_name": "andMsgNameBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameBetween(String value1, String value2) {\n            addCriterion(\"msg_name between\", value1, value2, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41408, "method_name": "andMsgNameNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgNameNotBetween(String value1, String value2) {\n            addCriterion(\"msg_name not between\", value1, value2, \"msgName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41409, "method_name": "andTopicIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicIsNull() {\n            addCriterion(\"topic is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41410, "method_name": "andTopicIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicIsNotNull() {\n            addCriterion(\"topic is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41411, "method_name": "andTopicEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicEqualTo(String value) {\n            addCriterion(\"topic =\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41412, "method_name": "andTopicNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicNotEqualTo(String value) {\n            addCriterion(\"topic <>\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41413, "method_name": "andTopicGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicGreaterThan(String value) {\n            addCriterion(\"topic >\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41414, "method_name": "andTopicGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicGreaterThanOrEqualTo(String value) {\n            addCriterion(\"topic >=\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41415, "method_name": "andTopicLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicLessThan(String value) {\n            addCriterion(\"topic <\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41416, "method_name": "andTopicLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicLessThanOrEqualTo(String value) {\n            addCriterion(\"topic <=\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41417, "method_name": "andTopicLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicLike(String value) {\n            addCriterion(\"topic like\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41418, "method_name": "andTopicNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicNotLike(String value) {\n            addCriterion(\"topic not like\", value, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41419, "method_name": "andTopicIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicIn(List<String> values) {\n            addCriterion(\"topic in\", values, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41420, "method_name": "andTopicNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicNotIn(List<String> values) {\n            addCriterion(\"topic not in\", values, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41421, "method_name": "andTopicBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicBetween(String value1, String value2) {\n            addCriterion(\"topic between\", value1, value2, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41422, "method_name": "andTopicNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andTopicNotBetween(String value1, String value2) {\n            addCriterion(\"topic not between\", value1, value2, \"topic\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41423, "method_name": "andQueneNameIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameIsNull() {\n            addCriterion(\"quene_name is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41424, "method_name": "andQueneNameIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameIsNotNull() {\n            addCriterion(\"quene_name is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41425, "method_name": "andQueneNameEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameEqualTo(String value) {\n            addCriterion(\"quene_name =\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41426, "method_name": "andQueneNameNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameNotEqualTo(String value) {\n            addCriterion(\"quene_name <>\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41427, "method_name": "andQueneNameGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameGreaterThan(String value) {\n            addCriterion(\"quene_name >\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41428, "method_name": "andQueneNameGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameGreaterThanOrEqualTo(String value) {\n            addCriterion(\"quene_name >=\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41429, "method_name": "andQueneNameLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameLessThan(String value) {\n            addCriterion(\"quene_name <\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41430, "method_name": "andQueneNameLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameLessThanOrEqualTo(String value) {\n            addCriterion(\"quene_name <=\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41431, "method_name": "andQueneNameLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameLike(String value) {\n            addCriterion(\"quene_name like\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41432, "method_name": "andQueneNameNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameNotLike(String value) {\n            addCriterion(\"quene_name not like\", value, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41433, "method_name": "andQueneNameIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameIn(List<String> values) {\n            addCriterion(\"quene_name in\", values, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41434, "method_name": "andQueneNameNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameNotIn(List<String> values) {\n            addCriterion(\"quene_name not in\", values, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41435, "method_name": "andQueneNameBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameBetween(String value1, String value2) {\n            addCriterion(\"quene_name between\", value1, value2, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41436, "method_name": "andQueneNameNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andQueneNameNotBetween(String value1, String value2) {\n            addCriterion(\"quene_name not between\", value1, value2, \"queneName\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41437, "method_name": "andMsgContentIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentIsNull() {\n            addCriterion(\"msg_content is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41438, "method_name": "andMsgContentIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentIsNotNull() {\n            addCriterion(\"msg_content is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41439, "method_name": "andMsgContentEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentEqualTo(String value) {\n            addCriterion(\"msg_content =\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41440, "method_name": "andMsgContentNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentNotEqualTo(String value) {\n            addCriterion(\"msg_content <>\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41441, "method_name": "andMsgContentGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentGreaterThan(String value) {\n            addCriterion(\"msg_content >\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41442, "method_name": "andMsgContentGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentGreaterThanOrEqualTo(String value) {\n            addCriterion(\"msg_content >=\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41443, "method_name": "andMsgContentLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentLessThan(String value) {\n            addCriterion(\"msg_content <\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41444, "method_name": "andMsgContentLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentLessThanOrEqualTo(String value) {\n            addCriterion(\"msg_content <=\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41445, "method_name": "andMsgContentLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentLike(String value) {\n            addCriterion(\"msg_content like\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41446, "method_name": "andMsgContentNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentNotLike(String value) {\n            addCriterion(\"msg_content not like\", value, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41447, "method_name": "andMsgContentIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentIn(List<String> values) {\n            addCriterion(\"msg_content in\", values, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41448, "method_name": "andMsgContentNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentNotIn(List<String> values) {\n            addCriterion(\"msg_content not in\", values, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41449, "method_name": "andMsgContentBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentBetween(String value1, String value2) {\n            addCriterion(\"msg_content between\", value1, value2, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41450, "method_name": "andMsgContentNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgContentNotBetween(String value1, String value2) {\n            addCriterion(\"msg_content not between\", value1, value2, \"msgContent\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41451, "method_name": "andMsgStatusIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusIsNull() {\n            addCriterion(\"msg_status is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41452, "method_name": "andMsgStatusIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusIsNotNull() {\n            addCriterion(\"msg_status is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41453, "method_name": "andMsgStatusEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusEqualTo(String value) {\n            addCriterion(\"msg_status =\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41454, "method_name": "andMsgStatusNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusNotEqualTo(String value) {\n            addCriterion(\"msg_status <>\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41455, "method_name": "andMsgStatusGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusGreaterThan(String value) {\n            addCriterion(\"msg_status >\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41456, "method_name": "andMsgStatusGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusGreaterThanOrEqualTo(String value) {\n            addCriterion(\"msg_status >=\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41457, "method_name": "andMsgStatusLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusLessThan(String value) {\n            addCriterion(\"msg_status <\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41458, "method_name": "andMsgStatusLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusLessThanOrEqualTo(String value) {\n            addCriterion(\"msg_status <=\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41459, "method_name": "andMsgStatusLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusLike(String value) {\n            addCriterion(\"msg_status like\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41460, "method_name": "andMsgStatusNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusNotLike(String value) {\n            addCriterion(\"msg_status not like\", value, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41461, "method_name": "andMsgStatusIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusIn(List<String> values) {\n            addCriterion(\"msg_status in\", values, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41462, "method_name": "andMsgStatusNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusNotIn(List<String> values) {\n            addCriterion(\"msg_status not in\", values, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41463, "method_name": "andMsgStatusBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusBetween(String value1, String value2) {\n            addCriterion(\"msg_status between\", value1, value2, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41464, "method_name": "andMsgStatusNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgStatusNotBetween(String value1, String value2) {\n            addCriterion(\"msg_status not between\", value1, value2, \"msgStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41465, "method_name": "andMsgDStatusIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusIsNull() {\n            addCriterion(\"msg_d_status is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41466, "method_name": "andMsgDStatusIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusIsNotNull() {\n            addCriterion(\"msg_d_status is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41467, "method_name": "andMsgDStatusEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusEqualTo(String value) {\n            addCriterion(\"msg_d_status =\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41468, "method_name": "andMsgDStatusNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusNotEqualTo(String value) {\n            addCriterion(\"msg_d_status <>\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41469, "method_name": "andMsgDStatusGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusGreaterThan(String value) {\n            addCriterion(\"msg_d_status >\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41470, "method_name": "andMsgDStatusGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusGreaterThanOrEqualTo(String value) {\n            addCriterion(\"msg_d_status >=\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41471, "method_name": "andMsgDStatusLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusLessThan(String value) {\n            addCriterion(\"msg_d_status <\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41472, "method_name": "andMsgDStatusLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusLessThanOrEqualTo(String value) {\n            addCriterion(\"msg_d_status <=\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41473, "method_name": "andMsgDStatusLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusLike(String value) {\n            addCriterion(\"msg_d_status like\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41474, "method_name": "andMsgDStatusNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusNotLike(String value) {\n            addCriterion(\"msg_d_status not like\", value, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41475, "method_name": "andMsgDStatusIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusIn(List<String> values) {\n            addCriterion(\"msg_d_status in\", values, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41476, "method_name": "andMsgDStatusNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusNotIn(List<String> values) {\n            addCriterion(\"msg_d_status not in\", values, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41477, "method_name": "andMsgDStatusBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusBetween(String value1, String value2) {\n            addCriterion(\"msg_d_status between\", value1, value2, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41478, "method_name": "andMsgDStatusNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andMsgDStatusNotBetween(String value1, String value2) {\n            addCriterion(\"msg_d_status not between\", value1, value2, \"msgDStatus\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41479, "method_name": "andRetryCountsIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsIsNull() {\n            addCriterion(\"retry_counts is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41480, "method_name": "andRetryCountsIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsIsNotNull() {\n            addCriterion(\"retry_counts is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41481, "method_name": "andRetryCountsEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsEqualTo(String value) {\n            addCriterion(\"retry_counts =\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41482, "method_name": "andRetryCountsNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsNotEqualTo(String value) {\n            addCriterion(\"retry_counts <>\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41483, "method_name": "andRetryCountsGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsGreaterThan(String value) {\n            addCriterion(\"retry_counts >\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41484, "method_name": "andRetryCountsGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsGreaterThanOrEqualTo(String value) {\n            addCriterion(\"retry_counts >=\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41485, "method_name": "andRetryCountsLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsLessThan(String value) {\n            addCriterion(\"retry_counts <\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41486, "method_name": "andRetryCountsLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsLessThanOrEqualTo(String value) {\n            addCriterion(\"retry_counts <=\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41487, "method_name": "andRetryCountsLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsLike(String value) {\n            addCriterion(\"retry_counts like\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41488, "method_name": "andRetryCountsNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsNotLike(String value) {\n            addCriterion(\"retry_counts not like\", value, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41489, "method_name": "andRetryCountsIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsIn(List<String> values) {\n            addCriterion(\"retry_counts in\", values, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41490, "method_name": "andRetryCountsNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsNotIn(List<String> values) {\n            addCriterion(\"retry_counts not in\", values, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41491, "method_name": "andRetryCountsBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsBetween(String value1, String value2) {\n            addCriterion(\"retry_counts between\", value1, value2, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41492, "method_name": "andRetryCountsNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andRetryCountsNotBetween(String value1, String value2) {\n            addCriterion(\"retry_counts not between\", value1, value2, \"retryCounts\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41493, "method_name": "andCheckUrlIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlIsNull() {\n            addCriterion(\"check_url is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41494, "method_name": "andCheckUrlIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlIsNotNull() {\n            addCriterion(\"check_url is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41495, "method_name": "andCheckUrlEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlEqualTo(String value) {\n            addCriterion(\"check_url =\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41496, "method_name": "andCheckUrlNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlNotEqualTo(String value) {\n            addCriterion(\"check_url <>\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41497, "method_name": "andCheckUrlGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlGreaterThan(String value) {\n            addCriterion(\"check_url >\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41498, "method_name": "andCheckUrlGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlGreaterThanOrEqualTo(String value) {\n            addCriterion(\"check_url >=\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41499, "method_name": "andCheckUrlLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlLessThan(String value) {\n            addCriterion(\"check_url <\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41500, "method_name": "andCheckUrlLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlLessThanOrEqualTo(String value) {\n            addCriterion(\"check_url <=\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41501, "method_name": "andCheckUrlLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlLike(String value) {\n            addCriterion(\"check_url like\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41502, "method_name": "andCheckUrlNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlNotLike(String value) {\n            addCriterion(\"check_url not like\", value, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41503, "method_name": "andCheckUrlIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlIn(List<String> values) {\n            addCriterion(\"check_url in\", values, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41504, "method_name": "andCheckUrlNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlNotIn(List<String> values) {\n            addCriterion(\"check_url not in\", values, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41505, "method_name": "andCheckUrlBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlBetween(String value1, String value2) {\n            addCriterion(\"check_url between\", value1, value2, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41506, "method_name": "andCheckUrlNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckUrlNotBetween(String value1, String value2) {\n            addCriterion(\"check_url not between\", value1, value2, \"checkUrl\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41507, "method_name": "andCheckTimeoutIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutIsNull() {\n            addCriterion(\"check_timeout is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41508, "method_name": "andCheckTimeoutIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutIsNotNull() {\n            addCriterion(\"check_timeout is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41509, "method_name": "andCheckTimeoutEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutEqualTo(String value) {\n            addCriterion(\"check_timeout =\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41510, "method_name": "andCheckTimeoutNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutNotEqualTo(String value) {\n            addCriterion(\"check_timeout <>\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41511, "method_name": "andCheckTimeoutGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutGreaterThan(String value) {\n            addCriterion(\"check_timeout >\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41512, "method_name": "andCheckTimeoutGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutGreaterThanOrEqualTo(String value) {\n            addCriterion(\"check_timeout >=\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41513, "method_name": "andCheckTimeoutLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutLessThan(String value) {\n            addCriterion(\"check_timeout <\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41514, "method_name": "andCheckTimeoutLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutLessThanOrEqualTo(String value) {\n            addCriterion(\"check_timeout <=\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41515, "method_name": "andCheckTimeoutLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutLike(String value) {\n            addCriterion(\"check_timeout like\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41516, "method_name": "andCheckTimeoutNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutNotLike(String value) {\n            addCriterion(\"check_timeout not like\", value, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41517, "method_name": "andCheckTimeoutIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutIn(List<String> values) {\n            addCriterion(\"check_timeout in\", values, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41518, "method_name": "andCheckTimeoutNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutNotIn(List<String> values) {\n            addCriterion(\"check_timeout not in\", values, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41519, "method_name": "andCheckTimeoutBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutBetween(String value1, String value2) {\n            addCriterion(\"check_timeout between\", value1, value2, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41520, "method_name": "andCheckTimeoutNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckTimeoutNotBetween(String value1, String value2) {\n            addCriterion(\"check_timeout not between\", value1, value2, \"checkTimeout\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41521, "method_name": "andCheckDurationIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationIsNull() {\n            addCriterion(\"check_duration is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41522, "method_name": "andCheckDurationIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationIsNotNull() {\n            addCriterion(\"check_duration is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41523, "method_name": "andCheckDurationEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationEqualTo(String value) {\n            addCriterion(\"check_duration =\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41524, "method_name": "andCheckDurationNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationNotEqualTo(String value) {\n            addCriterion(\"check_duration <>\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41525, "method_name": "andCheckDurationGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationGreaterThan(String value) {\n            addCriterion(\"check_duration >\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41526, "method_name": "andCheckDurationGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationGreaterThanOrEqualTo(String value) {\n            addCriterion(\"check_duration >=\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41527, "method_name": "andCheckDurationLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationLessThan(String value) {\n            addCriterion(\"check_duration <\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41528, "method_name": "andCheckDurationLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationLessThanOrEqualTo(String value) {\n            addCriterion(\"check_duration <=\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41529, "method_name": "andCheckDurationLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationLike(String value) {\n            addCriterion(\"check_duration like\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41530, "method_name": "andCheckDurationNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationNotLike(String value) {\n            addCriterion(\"check_duration not like\", value, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41531, "method_name": "andCheckDurationIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationIn(List<String> values) {\n            addCriterion(\"check_duration in\", values, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41532, "method_name": "andCheckDurationNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationNotIn(List<String> values) {\n            addCriterion(\"check_duration not in\", values, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41533, "method_name": "andCheckDurationBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationBetween(String value1, String value2) {\n            addCriterion(\"check_duration between\", value1, value2, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41534, "method_name": "andCheckDurationNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCheckDurationNotBetween(String value1, String value2) {\n            addCriterion(\"check_duration not between\", value1, value2, \"checkDuration\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41535, "method_name": "andCreateMsgUidIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidIsNull() {\n            addCriterion(\"create_msg_uid is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41536, "method_name": "andCreateMsgUidIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidIsNotNull() {\n            addCriterion(\"create_msg_uid is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41537, "method_name": "andCreateMsgUidEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidEqualTo(String value) {\n            addCriterion(\"create_msg_uid =\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41538, "method_name": "andCreateMsgUidNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidNotEqualTo(String value) {\n            addCriterion(\"create_msg_uid <>\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41539, "method_name": "andCreateMsgUidGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidGreaterThan(String value) {\n            addCriterion(\"create_msg_uid >\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41540, "method_name": "andCreateMsgUidGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidGreaterThanOrEqualTo(String value) {\n            addCriterion(\"create_msg_uid >=\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41541, "method_name": "andCreateMsgUidLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidLessThan(String value) {\n            addCriterion(\"create_msg_uid <\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41542, "method_name": "andCreateMsgUidLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidLessThanOrEqualTo(String value) {\n            addCriterion(\"create_msg_uid <=\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41543, "method_name": "andCreateMsgUidLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidLike(String value) {\n            addCriterion(\"create_msg_uid like\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41544, "method_name": "andCreateMsgUidNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidNotLike(String value) {\n            addCriterion(\"create_msg_uid not like\", value, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41545, "method_name": "andCreateMsgUidIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidIn(List<String> values) {\n            addCriterion(\"create_msg_uid in\", values, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41546, "method_name": "andCreateMsgUidNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidNotIn(List<String> values) {\n            addCriterion(\"create_msg_uid not in\", values, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41547, "method_name": "andCreateMsgUidBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidBetween(String value1, String value2) {\n            addCriterion(\"create_msg_uid between\", value1, value2, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41548, "method_name": "andCreateMsgUidNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgUidNotBetween(String value1, String value2) {\n            addCriterion(\"create_msg_uid not between\", value1, value2, \"createMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41549, "method_name": "andCreateMsgTimeIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeIsNull() {\n            addCriterion(\"create_msg_time is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41550, "method_name": "andCreateMsgTimeIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeIsNotNull() {\n            addCriterion(\"create_msg_time is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41551, "method_name": "andCreateMsgTimeEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeEqualTo(Date value) {\n            addCriterion(\"create_msg_time =\", value, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41552, "method_name": "andCreateMsgTimeNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeNotEqualTo(Date value) {\n            addCriterion(\"create_msg_time <>\", value, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41553, "method_name": "andCreateMsgTimeGreaterThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeGreaterThan(Date value) {\n            addCriterion(\"create_msg_time >\", value, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41554, "method_name": "andCreateMsgTimeGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeGreaterThanOrEqualTo(Date value) {\n            addCriterion(\"create_msg_time >=\", value, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41555, "method_name": "andCreateMsgTimeLessThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeLessThan(Date value) {\n            addCriterion(\"create_msg_time <\", value, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41556, "method_name": "andCreateMsgTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeLessThanOrEqualTo(Date value) {\n            addCriterion(\"create_msg_time <=\", value, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41557, "method_name": "andCreateMsgTimeIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeIn(List<Date> values) {\n            addCriterion(\"create_msg_time in\", values, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41558, "method_name": "andCreateMsgTimeNotIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeNotIn(List<Date> values) {\n            addCriterion(\"create_msg_time not in\", values, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41559, "method_name": "andCreateMsgTimeBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeBetween(Date value1, Date value2) {\n            addCriterion(\"create_msg_time between\", value1, value2, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41560, "method_name": "andCreateMsgTimeNotBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andCreateMsgTimeNotBetween(Date value1, Date value2) {\n            addCriterion(\"create_msg_time not between\", value1, value2, \"createMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41561, "method_name": "andUpdateMsgUidIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidIsNull() {\n            addCriterion(\"update_msg_uid is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41562, "method_name": "andUpdateMsgUidIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidIsNotNull() {\n            addCriterion(\"update_msg_uid is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41563, "method_name": "andUpdateMsgUidEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidEqualTo(String value) {\n            addCriterion(\"update_msg_uid =\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41564, "method_name": "andUpdateMsgUidNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidNotEqualTo(String value) {\n            addCriterion(\"update_msg_uid <>\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41565, "method_name": "andUpdateMsgUidGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidGreaterThan(String value) {\n            addCriterion(\"update_msg_uid >\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41566, "method_name": "andUpdateMsgUidGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidGreaterThanOrEqualTo(String value) {\n            addCriterion(\"update_msg_uid >=\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41567, "method_name": "andUpdateMsgUidLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidLessThan(String value) {\n            addCriterion(\"update_msg_uid <\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41568, "method_name": "andUpdateMsgUidLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidLessThanOrEqualTo(String value) {\n            addCriterion(\"update_msg_uid <=\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41569, "method_name": "andUpdateMsgUidLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidLike(String value) {\n            addCriterion(\"update_msg_uid like\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41570, "method_name": "andUpdateMsgUidNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidNotLike(String value) {\n            addCriterion(\"update_msg_uid not like\", value, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41571, "method_name": "andUpdateMsgUidIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidIn(List<String> values) {\n            addCriterion(\"update_msg_uid in\", values, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41572, "method_name": "andUpdateMsgUidNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidNotIn(List<String> values) {\n            addCriterion(\"update_msg_uid not in\", values, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41573, "method_name": "andUpdateMsgUidBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidBetween(String value1, String value2) {\n            addCriterion(\"update_msg_uid between\", value1, value2, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41574, "method_name": "andUpdateMsgUidNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgUidNotBetween(String value1, String value2) {\n            addCriterion(\"update_msg_uid not between\", value1, value2, \"updateMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41575, "method_name": "andUpdateMsgTimeIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeIsNull() {\n            addCriterion(\"update_msg_time is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41576, "method_name": "andUpdateMsgTimeIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeIsNotNull() {\n            addCriterion(\"update_msg_time is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41577, "method_name": "andUpdateMsgTimeEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeEqualTo(Date value) {\n            addCriterion(\"update_msg_time =\", value, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41578, "method_name": "andUpdateMsgTimeNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeNotEqualTo(Date value) {\n            addCriterion(\"update_msg_time <>\", value, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41579, "method_name": "andUpdateMsgTimeGreaterThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeGreaterThan(Date value) {\n            addCriterion(\"update_msg_time >\", value, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41580, "method_name": "andUpdateMsgTimeGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeGreaterThanOrEqualTo(Date value) {\n            addCriterion(\"update_msg_time >=\", value, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41581, "method_name": "andUpdateMsgTimeLessThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeLessThan(Date value) {\n            addCriterion(\"update_msg_time <\", value, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41582, "method_name": "andUpdateMsgTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeLessThanOrEqualTo(Date value) {\n            addCriterion(\"update_msg_time <=\", value, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41583, "method_name": "andUpdateMsgTimeIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeIn(List<Date> values) {\n            addCriterion(\"update_msg_time in\", values, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41584, "method_name": "andUpdateMsgTimeNotIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeNotIn(List<Date> values) {\n            addCriterion(\"update_msg_time not in\", values, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41585, "method_name": "andUpdateMsgTimeBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeBetween(Date value1, Date value2) {\n            addCriterion(\"update_msg_time between\", value1, value2, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41586, "method_name": "andUpdateMsgTimeNotBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andUpdateMsgTimeNotBetween(Date value1, Date value2) {\n            addCriterion(\"update_msg_time not between\", value1, value2, \"updateMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41587, "method_name": "andConfirmMsgTimeIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeIsNull() {\n            addCriterion(\"confirm_msg_time is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41588, "method_name": "andConfirmMsgTimeIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeIsNotNull() {\n            addCriterion(\"confirm_msg_time is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41589, "method_name": "andConfirmMsgTimeEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeEqualTo(Date value) {\n            addCriterion(\"confirm_msg_time =\", value, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41590, "method_name": "andConfirmMsgTimeNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeNotEqualTo(Date value) {\n            addCriterion(\"confirm_msg_time <>\", value, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41591, "method_name": "andConfirmMsgTimeGreaterThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeGreaterThan(Date value) {\n            addCriterion(\"confirm_msg_time >\", value, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41592, "method_name": "andConfirmMsgTimeGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeGreaterThanOrEqualTo(Date value) {\n            addCriterion(\"confirm_msg_time >=\", value, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41593, "method_name": "andConfirmMsgTimeLessThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeLessThan(Date value) {\n            addCriterion(\"confirm_msg_time <\", value, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41594, "method_name": "andConfirmMsgTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeLessThanOrEqualTo(Date value) {\n            addCriterion(\"confirm_msg_time <=\", value, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41595, "method_name": "andConfirmMsgTimeIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeIn(List<Date> values) {\n            addCriterion(\"confirm_msg_time in\", values, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41596, "method_name": "andConfirmMsgTimeNotIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeNotIn(List<Date> values) {\n            addCriterion(\"confirm_msg_time not in\", values, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41597, "method_name": "andConfirmMsgTimeBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeBetween(Date value1, Date value2) {\n            addCriterion(\"confirm_msg_time between\", value1, value2, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41598, "method_name": "andConfirmMsgTimeNotBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andConfirmMsgTimeNotBetween(Date value1, Date value2) {\n            addCriterion(\"confirm_msg_time not between\", value1, value2, \"confirmMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41599, "method_name": "andResendMsgUidIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidIsNull() {\n            addCriterion(\"resend_msg_uid is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41600, "method_name": "andResendMsgUidIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidIsNotNull() {\n            addCriterion(\"resend_msg_uid is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41601, "method_name": "andResendMsgUidEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidEqualTo(String value) {\n            addCriterion(\"resend_msg_uid =\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41602, "method_name": "andResendMsgUidNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidNotEqualTo(String value) {\n            addCriterion(\"resend_msg_uid <>\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41603, "method_name": "andResendMsgUidGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidGreaterThan(String value) {\n            addCriterion(\"resend_msg_uid >\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41604, "method_name": "andResendMsgUidGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidGreaterThanOrEqualTo(String value) {\n            addCriterion(\"resend_msg_uid >=\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41605, "method_name": "andResendMsgUidLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidLessThan(String value) {\n            addCriterion(\"resend_msg_uid <\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41606, "method_name": "andResendMsgUidLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidLessThanOrEqualTo(String value) {\n            addCriterion(\"resend_msg_uid <=\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41607, "method_name": "andResendMsgUidLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidLike(String value) {\n            addCriterion(\"resend_msg_uid like\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41608, "method_name": "andResendMsgUidNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidNotLike(String value) {\n            addCriterion(\"resend_msg_uid not like\", value, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41609, "method_name": "andResendMsgUidIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidIn(List<String> values) {\n            addCriterion(\"resend_msg_uid in\", values, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41610, "method_name": "andResendMsgUidNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidNotIn(List<String> values) {\n            addCriterion(\"resend_msg_uid not in\", values, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41611, "method_name": "andResendMsgUidBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidBetween(String value1, String value2) {\n            addCriterion(\"resend_msg_uid between\", value1, value2, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41612, "method_name": "andResendMsgUidNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgUidNotBetween(String value1, String value2) {\n            addCriterion(\"resend_msg_uid not between\", value1, value2, \"resendMsgUid\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41613, "method_name": "andResendMsgTimeIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeIsNull() {\n            addCriterion(\"resend_msg_time is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41614, "method_name": "andResendMsgTimeIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeIsNotNull() {\n            addCriterion(\"resend_msg_time is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41615, "method_name": "andResendMsgTimeEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeEqualTo(Date value) {\n            addCriterion(\"resend_msg_time =\", value, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41616, "method_name": "andResendMsgTimeNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeNotEqualTo(Date value) {\n            addCriterion(\"resend_msg_time <>\", value, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41617, "method_name": "andResendMsgTimeGreaterThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeGreaterThan(Date value) {\n            addCriterion(\"resend_msg_time >\", value, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41618, "method_name": "andResendMsgTimeGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeGreaterThanOrEqualTo(Date value) {\n            addCriterion(\"resend_msg_time >=\", value, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41619, "method_name": "andResendMsgTimeLessThan", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeLessThan(Date value) {\n            addCriterion(\"resend_msg_time <\", value, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41620, "method_name": "andResendMsgTimeLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeLessThanOrEqualTo(Date value) {\n            addCriterion(\"resend_msg_time <=\", value, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41621, "method_name": "andResendMsgTimeIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeIn(List<Date> values) {\n            addCriterion(\"resend_msg_time in\", values, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41622, "method_name": "andResendMsgTimeNotIn", "class_name": "GeneratedCriteria", "params": ["List<Date>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeNotIn(List<Date> values) {\n            addCriterion(\"resend_msg_time not in\", values, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41623, "method_name": "andResendMsgTimeBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeBetween(Date value1, Date value2) {\n            addCriterion(\"resend_msg_time between\", value1, value2, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41624, "method_name": "andResendMsgTimeNotBetween", "class_name": "GeneratedCriteria", "params": ["Date", "Date"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andResendMsgTimeNotBetween(Date value1, Date value2) {\n            addCriterion(\"resend_msg_time not between\", value1, value2, \"resendMsgTime\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 41625, "method_name": "getCondition", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCondition() {\n            return condition;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41626, "method_name": "getValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getValue() {\n            return value;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41627, "method_name": "getSecondValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getSecondValue() {\n            return secondValue;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41628, "method_name": "isNoValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isNoValue() {\n            return noValue;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41629, "method_name": "isSingleValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSingleValue() {\n            return singleValue;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41630, "method_name": "isBetweenValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isBetweenValue() {\n            return betweenValue;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41631, "method_name": "isListValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isListValue() {\n            return listValue;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41632, "method_name": "getTypeHandler", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTypeHandler() {\n            return typeHandler;\n        }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pojo/src/main/java/com/kingge/rtm/pojo/TKMessageConsumedExample.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 41633, "method_name": "main", "class_name": "SampleDevToolsApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleDevToolsApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-devtools/src/main/java/smoketest/devtools/SampleDevToolsApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41634, "method_name": "onCreate", "class_name": "ShareButtonActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\n\t\tsetContentView(R.layout.main);\n\n\t\t// Welcome Message\n\t\tTextView textview = (TextView) findViewById(R.id.text);\n\t\ttextview.setText(\"Welcome to SocialAuth Demo. Connect any provider and then press Update button to Share Update.\");\n\n\t\t// Create Your Own Share Button\n\t\tButton share = (Button) findViewById(R.id.sharebutton);\n\t\tshare.setText(\"Share\");\n\t\tshare.setTextColor(Color.WHITE);\n\t\tshare.setBackgroundResource(R.drawable.button_gradient);\n\n\t\t// Add it to Library\n\t\tadapter = new SocialAuthAdapter(new ResponseListener());\n\n\t\t// Add providers\n\t\tadapter.addProvider(Provider.FACEBOOK, R.drawable.facebook);\n\t\tadapter.addProvider(Provider.TWITTER, R.drawable.twitter);\n\t\tadapter.addProvider(Provider.LINKEDIN, R.drawable.linkedin);\n\t\tadapter.addProvider(Provider.MYSPACE, R.drawable.myspace);\n\t\tadapter.addProvider(Provider.YAHOO, R.drawable.yahoo);\n\t\tadapter.addProvider(Provider.YAMMER, R.drawable.yammer);\n\t\tadapter.addProvider(Provider.EMAIL, R.drawable.email);\n\t\tadapter.addProvider(Provider.MMS, R.drawable.mms);\n\n\t\t// Providers require setting user call Back url\n\t\tadapter.addCallBack(Provider.TWITTER, \"http://socialauth.in/socialauthdemo/socialAuthSuccessAction.do\");\n\t\tadapter.addCallBack(Provider.YAMMER, \"http://socialauth.in/socialauthdemo/socialAuthSuccessAction.do\");\n\n\t\t// Enable Provider\n\t\tadapter.enable(share);\n\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-button/src/org/brickred/socialshare/ShareButtonActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": null, "modifiers": ["public"]}}, {"id": 41635, "method_name": "onComplete", "class_name": "ResponseListener", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onComplete(Bundle values) {\n\n\t\t\tLog.d(\"ShareButton\", \"Authentication Successful\");\n\n\t\t\t// Get name of provider after authentication\n\t\t\tfinal String providerName = values.getString(SocialAuthAdapter.PROVIDER);\n\t\t\tLog.d(\"ShareButton\", \"Provider Name = \" + providerName);\n\t\t\tToast.makeText(ShareButtonActivity.this, providerName + \" connected\", Toast.LENGTH_LONG).show();\n\n\t\t\tupdate = (Button) findViewById(R.id.update);\n\t\t\tedit = (EditText) findViewById(R.id.editTxt);\n\n\t\t\t// Please avoid sending duplicate message. Social Media Providers\n\t\t\t// block duplicate messages.\n\n\t\t\tupdate.setOnClickListener(new OnClickListener() {\n\n\t\t\t\t@Override\n\t\t\t\tpublic void onClick(View v) {\n\t\t\t\t\tadapter.updateStatus(edit.getText().toString(), new MessageListener(), false);\n\n\t\t\t\t\t// to share on multiple providers\n\t\t\t\t\tadapter.updateStatus(edit.getText().toString(), new MessageListener(), false);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Share via Email Intent\n\t\t\tif (providerName.equalsIgnoreCase(\"share_mail\")) {\n\t\t\t\t// Use your own code here\n\t\t\t\tIntent emailIntent = new Intent(Intent.ACTION_SENDTO, Uri.fromParts(\"mailto\",\n\t\t\t\t\t\t\"vineet.aggarwal@3pillarglobal.com\", null));\n\t\t\t\temailIntent.putExtra(android.content.Intent.EXTRA_SUBJECT, \"Test\");\n\t\t\t\tFile file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM),\n\t\t\t\t\t\t\"image5964402.png\");\n\t\t\t\tUri uri = Uri.fromFile(file);\n\t\t\t\temailIntent.putExtra(Intent.EXTRA_STREAM, uri);\n\t\t\t\tstartActivity(Intent.createChooser(emailIntent, \"Test\"));\n\t\t\t}\n\n\t\t\t// Share via mms intent\n\t\t\tif (providerName.equalsIgnoreCase(\"share_mms\")) {\n\n\t\t\t\t// Use your own code here\n\t\t\t\tFile file = new File(Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_DCIM),\n\t\t\t\t\t\t\"image5964402.png\");\n\t\t\t\tUri uri = Uri.fromFile(file);\n\n\t\t\t\tIntent mmsIntent = new Intent(Intent.ACTION_SEND, uri);\n\t\t\t\tmmsIntent.putExtra(\"sms_body\", \"Test\");\n\t\t\t\tmmsIntent.putExtra(Intent.EXTRA_STREAM, uri);\n\t\t\t\tmmsIntent.setType(\"image/png\");\n\t\t\t\tstartActivity(mmsIntent);\n\t\t\t}\n\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-button/src/org/brickred/socialshare/ShareButtonActivity.java", "stars": "74", "class_props": {"extends": null, "implements": ["DialogListener"], "modifiers": ["final", "private"]}}, {"id": 41636, "method_name": "onError", "class_name": "ResponseListener", "params": ["SocialAuthError"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onError(SocialAuthError error) {\n\t\t\tLog.d(\"ShareButton\", \"Authentication Error: \" + error.getMessage());\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-button/src/org/brickred/socialshare/ShareButtonActivity.java", "stars": "74", "class_props": {"extends": null, "implements": ["DialogListener"], "modifiers": ["final", "private"]}}, {"id": 41637, "method_name": "onCancel", "class_name": "ResponseListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onCancel() {\n\t\t\tLog.d(\"ShareButton\", \"Authentication Cancelled\");\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-button/src/org/brickred/socialshare/ShareButtonActivity.java", "stars": "74", "class_props": {"extends": null, "implements": ["DialogListener"], "modifiers": ["final", "private"]}}, {"id": 41638, "method_name": "onBack", "class_name": "ResponseListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onBack() {\n\t\t\tLog.d(\"Share-Button\", \"Dialog Closed by pressing Back Key\");\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-button/src/org/brickred/socialshare/ShareButtonActivity.java", "stars": "74", "class_props": {"extends": null, "implements": ["DialogListener"], "modifiers": ["final", "private"]}}, {"id": 41639, "method_name": "onExecute", "class_name": "MessageListener", "params": ["String", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onExecute(String provider, Integer t) {\n\t\t\tInteger status = t;\n\t\t\tif (status.intValue() == 200 || status.intValue() == 201 || status.intValue() == 204)\n\t\t\t\tToast.makeText(ShareButtonActivity.this, \"Message posted on \" + provider, Toast.LENGTH_LONG).show();\n\t\t\telse\n\t\t\t\tToast.makeText(ShareButtonActivity.this, \"Message not posted on \" + provider, Toast.LENGTH_LONG).show();\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-button/src/org/brickred/socialshare/ShareButtonActivity.java", "stars": "74", "class_props": {"extends": null, "implements": ["SocialAuthListener"], "modifiers": ["final", "private"]}}, {"id": 41640, "method_name": "onError", "class_name": "MessageListener", "params": ["SocialAuthError"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onError(SocialAuthError e) {\n\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/share-button/src/org/brickred/socialshare/ShareButtonActivity.java", "stars": "74", "class_props": {"extends": null, "implements": ["SocialAuthListener"], "modifiers": ["final", "private"]}}, {"id": 41641, "method_name": "getInstance", "class_name": "DataManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DataManager", "snippet": "    public static DataManager getInstance() {\n        if (dataManager == null) {\n            dataManager = new DataManager();\n        }\n        return dataManager;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Singleton%20Pattern/src/DataManager.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41642, "method_name": "symbol", "class_name": "NoOpWorkspaceService", "params": ["WorkspaceSymbolParams"], "throws": null, "modifiers": ["public"], "return_type": "CompletableFuture<List>", "snippet": "  public CompletableFuture<List<? extends SymbolInformation>> symbol(WorkspaceSymbolParams params) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/NoOpWorkspaceService.java", "stars": "3", "class_props": {"extends": null, "implements": ["WorkspaceService"], "modifiers": []}}, {"id": 41643, "method_name": "didChangeConfiguration", "class_name": "NoOpWorkspaceService", "params": ["DidChangeConfigurationParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didChangeConfiguration(DidChangeConfigurationParams params) {\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/NoOpWorkspaceService.java", "stars": "3", "class_props": {"extends": null, "implements": ["WorkspaceService"], "modifiers": []}}, {"id": 41644, "method_name": "didChangeWatchedFiles", "class_name": "NoOpWorkspaceService", "params": ["DidChangeWatchedFilesParams"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void didChangeWatchedFiles(DidChangeWatchedFilesParams params) {\n  }", "url": "https://raw.githubusercontent.com/valentjn/ltex-ls-old/master/src/main/java/org/bsplines/languagetool_languageserver/NoOpWorkspaceService.java", "stars": "3", "class_props": {"extends": null, "implements": ["WorkspaceService"], "modifiers": []}}, {"id": 41645, "method_name": "report", "class_name": "StandaloneTGContainerCommunicator", "params": ["Communication"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void report(Communication communication) {\n        super.getReporter().reportTGCommunication(super.taskGroupId, communication);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/communicator/taskgroup/StandaloneTGContainerCommunicator.java", "stars": "23", "class_props": {"extends": "AbstractTGContainerCommunicator", "implements": null, "modifiers": ["public"]}}, {"id": 41646, "method_name": "getBlogBaseUrl", "class_name": "OptionServiceImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getBlogBaseUrl() {\n        String serverPort = applicationContext.getEnvironment().getProperty(\"server.port\", \"8080\");\n        String baseUrl;\n        if (StringUtils.hasText(domain)) {\n            baseUrl = String.format(\"http://%s\", domain);\n        } else {\n            baseUrl = String.format(\"http://%s:%s\", IpUtil.getMachineIp(), serverPort);\n        }\n\n        return baseUrl;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/OptionServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["OptionService"], "modifiers": ["public"]}}, {"id": 41647, "method_name": "listOptions", "class_name": "OptionServiceImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "    public Map<String, Object> listOptions() {\n        Map<String, Object> result = new HashMap<>(3);\n        List<Info> infos = infoMapper.selectAll();\n        if (!CollectionUtils.isEmpty(infos)) {\n            Info info = infos.get(0);\n            result.put(\"blog_title\", info.getBlogTitle());\n            result.put(\"seo_keywords\", info.getSeoKeywords());\n            result.put(\"seo_description\", info.getSeoDescription());\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/service/impl/OptionServiceImpl.java", "stars": "1", "class_props": {"extends": null, "implements": ["OptionService"], "modifiers": ["public"]}}, {"id": 41648, "method_name": "apply", "class_name": "MavenRepositoryPlugin", "params": ["Project"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void apply(Project project) {\n\t\tproject.getPlugins().apply(MavenPublishPlugin.class);\n\t\tPublishingExtension publishing = project.getExtensions().getByType(PublishingExtension.class);\n\t\tFile repositoryLocation = new File(project.getBuildDir(), \"maven-repository\");\n\t\tpublishing.getRepositories().maven((mavenRepository) -> {\n\t\t\tmavenRepository.setName(\"project\");\n\t\t\tmavenRepository.setUrl(repositoryLocation.toURI());\n\t\t});\n\t\tproject.getTasks().matching((task) -> task.getName().equals(PUBLISH_TO_PROJECT_REPOSITORY_TASK_NAME))\n\t\t\t\t.all((task) -> setUpProjectRepository(project, task, repositoryLocation));\n\t\tproject.getTasks().matching((task) -> task.getName().equals(\"publishPluginMavenPublicationToProjectRepository\"))\n\t\t\t\t.all((task) -> setUpProjectRepository(project, task, repositoryLocation));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/buildSrc/src/main/java/org/springframework/boot/build/MavenRepositoryPlugin.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Plugin"], "modifiers": ["public"]}}, {"id": 41649, "method_name": "setUpProjectRepository", "class_name": "MavenRepositoryPlugin", "params": ["Project", "Task", "File"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void setUpProjectRepository(Project project, Task publishTask, File repositoryLocation) {\n\t\tpublishTask.doFirst(new CleanAction(repositoryLocation));\n\t\tConfiguration projectRepository = project.getConfigurations().create(MAVEN_REPOSITORY_CONFIGURATION_NAME);\n\t\tproject.getArtifacts().add(projectRepository.getName(), repositoryLocation,\n\t\t\t\t(artifact) -> artifact.builtBy(publishTask));\n\t\tDependencySet target = projectRepository.getDependencies();\n\t\tproject.getPlugins().withType(JavaPlugin.class).all((javaPlugin) -> addMavenRepositoryDependencies(project,\n\t\t\t\tJavaPlugin.IMPLEMENTATION_CONFIGURATION_NAME, target));\n\t\tproject.getPlugins().withType(JavaLibraryPlugin.class)\n\t\t\t\t.all((javaLibraryPlugin) -> addMavenRepositoryDependencies(project, JavaPlugin.API_CONFIGURATION_NAME,\n\t\t\t\t\t\ttarget));\n\t\tproject.getPlugins().withType(JavaPlatformPlugin.class)\n\t\t\t\t.all((javaPlugin) -> addMavenRepositoryDependencies(project, JavaPlatformPlugin.API_CONFIGURATION_NAME,\n\t\t\t\t\t\ttarget));\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/buildSrc/src/main/java/org/springframework/boot/build/MavenRepositoryPlugin.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Plugin"], "modifiers": ["public"]}}, {"id": 41650, "method_name": "addMavenRepositoryDependencies", "class_name": "MavenRepositoryPlugin", "params": ["Project", "String", "DependencySet"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void addMavenRepositoryDependencies(Project project, String sourceConfigurationName, DependencySet target) {\n\t\tproject.getConfigurations().getByName(sourceConfigurationName).getDependencies()\n\t\t\t\t.withType(ProjectDependency.class).all((dependency) -> {\n\t\t\t\t\tMap<String, String> dependencyDescriptor = new HashMap<>();\n\t\t\t\t\tdependencyDescriptor.put(\"path\", dependency.getDependencyProject().getPath());\n\t\t\t\t\tdependencyDescriptor.put(\"configuration\", MAVEN_REPOSITORY_CONFIGURATION_NAME);\n\t\t\t\t\ttarget.add(project.getDependencies().project(dependencyDescriptor));\n\t\t\t\t});\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/buildSrc/src/main/java/org/springframework/boot/build/MavenRepositoryPlugin.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Plugin"], "modifiers": ["public"]}}, {"id": 41651, "method_name": "execute", "class_name": "CleanAction", "params": ["Task"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void execute(Task task) {\n\t\t\ttask.getProject().delete(this.location);\n\t\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/buildSrc/src/main/java/org/springframework/boot/build/MavenRepositoryPlugin.java", "stars": "47572", "class_props": {"extends": null, "implements": ["Action"], "modifiers": ["final", "static", "private"]}}, {"id": 41652, "method_name": "generateKey", "class_name": "MemoryCacheUtil", "params": ["String", "ImageSize"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String generateKey(String imageUri, ImageSize targetSize) {\n\t\treturn new StringBuilder(imageUri).append(URI_AND_SIZE_SEPARATOR).append(targetSize.getWidth()).append(WIDTH_AND_HEIGHT_SEPARATOR).append(targetSize.getHeight()).toString();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/MemoryCacheUtil.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41653, "method_name": "createFuzzyKeyComparator", "class_name": "MemoryCacheUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Comparator<String>", "snippet": "\tpublic static Comparator<String> createFuzzyKeyComparator() {\n\t\treturn new Comparator<String>() {\n\t\t\t@Override\n\t\t\tpublic int compare(String key1, String key2) {\n\t\t\t\tString imageUri1 = key1.substring(0, key1.lastIndexOf(URI_AND_SIZE_SEPARATOR));\n\t\t\t\tString imageUri2 = key2.substring(0, key2.lastIndexOf(URI_AND_SIZE_SEPARATOR));\n\t\t\t\treturn imageUri1.compareTo(imageUri2);\n\t\t\t}\n\t\t};\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/MemoryCacheUtil.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41654, "method_name": "findCachedBitmapsForImageUri", "class_name": "MemoryCacheUtil", "params": ["String", "MemoryCacheAware<String,Bitmap>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Bitmap>", "snippet": "\tpublic static List<Bitmap> findCachedBitmapsForImageUri(String imageUri, MemoryCacheAware<String, Bitmap> memoryCache) {\n\t\tList<Bitmap> values = new ArrayList<Bitmap>();\n\t\tfor (String key : memoryCache.keys()) {\n\t\t\tif (key.startsWith(imageUri)) {\n\t\t\t\tvalues.add(memoryCache.get(key));\n\t\t\t}\n\t\t}\n\t\treturn values;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/MemoryCacheUtil.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41655, "method_name": "findCacheKeysForImageUri", "class_name": "MemoryCacheUtil", "params": ["String", "MemoryCacheAware<String,Bitmap>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "\tpublic static List<String> findCacheKeysForImageUri(String imageUri, MemoryCacheAware<String, Bitmap> memoryCache) {\n\t\tList<String> values = new ArrayList<String>();\n\t\tfor (String key : memoryCache.keys()) {\n\t\t\tif (key.startsWith(imageUri)) {\n\t\t\t\tvalues.add(key);\n\t\t\t}\n\t\t}\n\t\treturn values;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/MemoryCacheUtil.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41656, "method_name": "removeFromCache", "class_name": "MemoryCacheUtil", "params": ["String", "MemoryCacheAware<String,Bitmap>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void removeFromCache(String imageUri, MemoryCacheAware<String, Bitmap> memoryCache) {\n\t\tList<String> keysToRemove = new ArrayList<String>();\n\t\tfor (String key : memoryCache.keys()) {\n\t\t\tif (key.startsWith(imageUri)) {\n\t\t\t\tkeysToRemove.add(key);\n\t\t\t}\n\t\t}\n\t\tfor (String keyToRemove : keysToRemove) {\n\t\t\tmemoryCache.remove(keyToRemove);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/MemoryCacheUtil.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41657, "method_name": "convertSoString", "class_name": "RestUtil", "params": ["Object"], "throws": null, "modifiers": ["protected", "static"], "return_type": "String", "snippet": "\tprotected static String convertSoString(Object object) {\n\t\tif (object instanceof String)\n\t\t\treturn object.toString();\n\t\t\n\t\tif ( canUseGson )\n\t\t\treturn RestUtil.gson.toJson(object);\n\t\t\n\t\t// Oh boy manual json serialization...\n\t\tif ( object instanceof Map || object instanceof List )\n\t\t\treturn serializeJson(object);\n\t\t\n\t\t// Fallback\n\t\treturn object.toString();\n\t}", "url": "https://raw.githubusercontent.com/orange451/JRest/master/src/io/jrest/RestUtil.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41658, "method_name": "serializeJson", "class_name": "RestUtil", "params": ["Object"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String serializeJson(Object object) {\n\t\t\n\t\tif ( object instanceof Map ) {\n\t\t\tString str = \"{\";\n\t\t\tboolean first = true;\n\t\t\tfor (Map.Entry<Object,Object> entry : ((Map<Object, Object>)object).entrySet()) {\n\t\t\t\tif ( !first )\n\t\t\t\t\tstr += \", \";\n\t\t\t\tstr += getSerializedJSONValue(entry.getKey().toString()) + \": \" + getSerializedJSONValue(entry.getValue());\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tstr += \"}\";\n\t\t\treturn str;\n\t\t} else if ( object instanceof List ) {\n\t\t\tString str = \"[\";\n\t\t\tboolean first = true;\n\t\t\tfor (Object obj : (List<Object>)object) {\n\t\t\t\tif ( !first )\n\t\t\t\t\tstr += \", \";\n\t\t\t\tstr += getSerializedJSONValue(obj);\n\t\t\t\tfirst = false;\n\t\t\t}\n\t\t\tstr += \"]\";\n\t\t\treturn str;\n\t\t}\n\t\t\n\t\treturn new String();\n\t}", "url": "https://raw.githubusercontent.com/orange451/JRest/master/src/io/jrest/RestUtil.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41659, "method_name": "getSerializedJSONValue", "class_name": "RestUtil", "params": ["Object"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "\tprivate static String getSerializedJSONValue(Object value) {\n\t\tif ( value == null )\n\t\t\treturn \"null\";\n\t\telse if ( value instanceof List )\n\t\t\treturn serializeJson(value);\n\t\telse if ( value instanceof Map )\n\t\t\treturn serializeJson(value);\n\t\telse if ( value instanceof Number || value instanceof Boolean )\n\t\t\treturn ((Number)value).toString();\n\t\telse if ( value instanceof String )\n\t\t\treturn \"\\\"\" + value.toString() + \"\\\"\";\n\t\t\n\t\t// Cant be serialized\n\t\treturn \"null\";\n\t}", "url": "https://raw.githubusercontent.com/orange451/JRest/master/src/io/jrest/RestUtil.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41660, "method_name": "convertObject", "class_name": "RestUtil", "params": ["String", "T"], "throws": null, "modifiers": ["protected", "static"], "return_type": "T", "snippet": "\tprotected static <T> T convertObject(String bodyString, T type) {\n\t\tif ( bodyString == null || bodyString.length() == 0 )\n\t\t\treturn (T)null;\n\n\t\tClass<?> c = (Class<?>)type;\n\t\t\n\t\tif ( canUseGson ) {\n\t\t\t// Convert to gson tree\n\t\t\tif ( JsonObject.class.isAssignableFrom(c) ) {\n\t\t\t\tType empMapType = new TypeToken<Map<String, Object>>() {}.getType();\n\t\t\t\treturn (T) gson.toJsonTree(gson.fromJson(bodyString, empMapType)).getAsJsonObject();\n\t\t\t}\n\t\t\t\n\t\t\t// json array\n\t\t\tif ( JsonArray.class.isAssignableFrom(c) ) {\n\t\t\t\tType empMapType = new TypeToken<List<Object>>() {}.getType();\n\t\t\t\tObject obj = gson.fromJson(bodyString, empMapType);\n\t\t\t\treturn (T) gson.toJsonTree(obj).getAsJsonArray();\n\t\t\t}\n\t\t\t\n\t\t\t// Convert to map\n\t\t\tif ( Map.class.isAssignableFrom(c) ) {\n\t\t\t\tType empMapType = new TypeToken<Map<String, Object>>() {}.getType();\n\t\t\t\treturn gson.fromJson(bodyString, empMapType);\n\t\t\t}\n\t\t\t\n\t\t\t// Convert to list\n\t\t\tif ( List.class.isAssignableFrom(c) ) {\n\t\t\t\tType empMapType = new TypeToken<List<Object>>() {}.getType();\n\t\t\t\treturn gson.fromJson(bodyString, empMapType);\n\t\t\t}\n\t\t} else {\n\t\t\t// Super ugly hack using Javax Nashorn js library. We can only reliably get Maps or Lists.\n\t        String script = \"Java.asJSONCompatible(\" + bodyString + \")\";\n\t        try {\n\t\t\t\tObject result = engine.eval(script);\n\t\t\t\tif ( result instanceof Map )\n\t\t\t\t\treturn (T)((Map<?, ?>)result);\n\t\t\t\tif ( result instanceof List )\n\t\t\t\t\treturn (T)((List<?>)result);\n\t\t\t} catch (ScriptException e) {\n\t\t\t\tSystem.err.println(\"Failed to parse \" + script);\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Convert to String\n\t\tif ( String.class.isAssignableFrom(c) ) {\n\t\t\treturn (T) bodyString.toString();\n\t\t}\n\t\t\n\t\t// Try to parse DTO as fallback\n\t\tif ( canUseGson ) {\n\t\t\ttry {\n\t\t\t\treturn (T) gson.fromJson(bodyString, c);\n\t\t\t} catch(Exception e) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t} else {\n\t\t\treturn (T) bodyString.toString();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/orange451/JRest/master/src/io/jrest/RestUtil.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41661, "method_name": "readAll", "class_name": "RestUtil", "params": ["InputStream"], "throws": ["IOException"], "modifiers": ["protected", "static"], "return_type": "byte", "snippet": "    protected static byte[] readAll(InputStream inputStream) throws IOException {\n\t\tlong TIMEOUT = System.currentTimeMillis()+2000;\n\t\t\n\t\t// Wait until ready\n\t\tBufferedInputStream bufferedInput = new BufferedInputStream(inputStream);\n\t\twhile(bufferedInput.available() == 0) {\n\t\t\tif ( System.currentTimeMillis() > TIMEOUT ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Ready until empty\n\t\tbyte[] data = new byte[bufferedInput.available()];\n\t\tbufferedInput.read(data);\n\t\treturn data;\n    }", "url": "https://raw.githubusercontent.com/orange451/JRest/master/src/io/jrest/RestUtil.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41662, "method_name": "getkoneksi", "class_name": "koneksi", "params": [], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "Connection", "snippet": "    public static Connection getkoneksi() throws SQLException{\n     try{\n        DriverManager.registerDriver(new com.mysql.jdbc.Driver());\n        con = DriverManager.getConnection(\"jdbc:mysql://localhost/db_bengkel\",\"root\",\"\");       \n    }catch (Exception e){\n         System.out.println(\"Koneksi Gagal\" + e.getMessage());\n    }\n    return con;\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/koneksi.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41663, "method_name": "getLoggedInUser", "class_name": "SecurityHelperService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "    public User getLoggedInUser() {\n        String login = SecurityUtils.getCurrentUserLogin().orElseThrow(MissingAuthorityServiceException::new);\n        return userRepository.findOneByLogin(login).orElseThrow(MissingAuthorityServiceException::new);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/SecurityHelperService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41664, "method_name": "checkAuthority", "class_name": "SecurityHelperService", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkAuthority(Long userId) {\n        User user = getLoggedInUser();\n        if (!user.getId().equals(userId)) {\n            throw new MissingAuthorityServiceException();\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/SecurityHelperService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41665, "method_name": "checkPermission", "class_name": "SecurityHelperService", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkPermission(Long userId) {\n        User user = getLoggedInUser();\n        if (!user.getId().equals(userId)) {\n            throw new MissingPermissionServiceException(\"User has not the permission for this action\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/SecurityHelperService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41666, "method_name": "checkAuthorityByGardenFieldId", "class_name": "SecurityHelperService", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkAuthorityByGardenFieldId(Long gardenFieldId) {\n        User user = getLoggedInUser();\n        GardenField gardenField = gardenFieldRepository.findById(gardenFieldId)\n            .orElseThrow(() -> new GardenFieldUnknownServiceException(\"Unknown Gardenfield\"));\n        if (!user.getId().equals(gardenField.getOwner().getId())) {\n            throw new MissingAuthorityServiceException();\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/SecurityHelperService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41667, "method_name": "checkPermissionByGardenFieldId", "class_name": "SecurityHelperService", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void checkPermissionByGardenFieldId(Long gardenFieldId) {\n        User user = getLoggedInUser();\n        GardenField gardenField = gardenFieldRepository.findById(gardenFieldId)\n            .orElseThrow(() -> new GardenFieldUnknownServiceException(\"Unknown Gardenfield\"));\n        if (!user.getId().equals(gardenField.getOwner().getId())) {\n            throw new MissingPermissionServiceException(\"User has not the permission for the requested gardenfield\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/SecurityHelperService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41668, "method_name": "loggedInUserIsOwnerOfGardenField", "class_name": "SecurityHelperService", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean loggedInUserIsOwnerOfGardenField(Long gardenFieldId) {\n        User user = getLoggedInUser();\n        GardenField gardenField = gardenFieldRepository.findById(gardenFieldId)\n            .orElseThrow(() -> new GardenFieldUnknownServiceException(\"Unknown Gardenfield\"));\n        return user.getId().equals(gardenField.getOwner().getId());\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/SecurityHelperService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41669, "method_name": "main", "class_name": "Solution", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) \n    {\n        Scanner sc = new Scanner(System.in);\n        int n = sc.nextInt();\n        if(n>1&&n<=100)\n        {\n            if(n%2!=0)\n            {\n                System.out.println(\"Weird\");\n            }\n            else\n            {\n                if(n>2&&n<5)\n                {\n                System.out.println(\"Not Weird\");                \n                }\n                else if(n>6&&n<=20)\n                {\n                System.out.println(\"Weird\");\n                }\n                else if(n>20)\n                {\n                System.out.println(\"Not Weird\");                \n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Chitturiarunkrishna/Hackerrank30DaysOfCode/master/Day%203%20-%20Intro%20to%20Conditional%20Statements.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41670, "method_name": "getCache", "class_name": "EhCacheServiceImpl", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Cache", "snippet": "\tprivate Cache getCache(){\n\t\n\t\tCache cache = cacheManager.getCache(\"util_cache\");\n\t\treturn cache;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41671, "method_name": "getCacheManager", "class_name": "EhCacheServiceImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CacheManager", "snippet": "\tpublic  CacheManager getCacheManager() {\n\t\treturn cacheManager;\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41672, "method_name": "get", "class_name": "EhCacheServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String get(String key) {\n\t\tElement element = getCache().get(key);\n\t\treturn element==null?null:(String)element.getObjectValue();\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41673, "method_name": "set", "class_name": "EhCacheServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void set(String key, String value) {\n\t\tElement element = new Element(key, value);\n\t\tCache cache = getCache();\n\t\t//\u4e0d\u8fc7\u671f\n\t\tcache.getCacheConfiguration().setEternal(true);\n\t\tcache.put(element);\n\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41674, "method_name": "set", "class_name": "EhCacheServiceImpl", "params": ["String", "String", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void set(String key, String value, long timeout) {\n\t\tElement element = new Element(key, value);\n\t\telement.setTimeToLive((int) timeout);\n\t\tCache cache = getCache();\n\t\tcache.put(element);\n\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41675, "method_name": "del", "class_name": "EhCacheServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void del(String key) {\n\t\tgetCache().remove(key);\n\n\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41676, "method_name": "contains", "class_name": "EhCacheServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean contains(String key) {\n\t\treturn getCache().isKeyInCache(key);\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41677, "method_name": "expire", "class_name": "EhCacheServiceImpl", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void expire(String key, long timeout) {\n\t\tElement element = getCache().get(key);\n\t\tif (element != null) {\n\t\t\tObject value = element.getValue();\n\t\t\telement = new Element(key, value);\n\t\t\telement.setTimeToLive((int)timeout);\n\t\t\tCache cache = getCache();\n\t\t\tcache.put(element);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41678, "method_name": "getObject", "class_name": "EhCacheServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "\tpublic Object getObject(String key) {\n\t\tElement element = getCache().get(key);\n\t\treturn element==null?null:element.getObjectValue();\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41679, "method_name": "setObject", "class_name": "EhCacheServiceImpl", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setObject(String key, Object value) {\n\t\tElement element = new Element(key, value);\n\t\tCache cache = getCache();\n\t\t//\u4e0d\u8fc7\u671f\n\t\tcache.getCacheConfiguration().setEternal(true);\n\t\tcache.put(element);\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41680, "method_name": "setObject", "class_name": "EhCacheServiceImpl", "params": ["String", "Object", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setObject(String key, Object value, long timeout) {\n\t\tElement element = new Element(key, value);\n\t\telement.setTimeToLive((int) timeout);\n\t\tCache cache = getCache();\n\t\tcache.put(element);\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41681, "method_name": "refresh", "class_name": "EhCacheServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void refresh(String key) {\n\t\tElement element = getCache().get(key);\n\t\tif (element != null) {\n\t\t\tObject value = element.getValue();\n\t\t\tint timeToLive = element.getTimeToLive();\n\t\t\telement = new Element(key, value);\n\t\t\telement.setTimeToLive(timeToLive);\n\t\t\tCache cache = getCache();\n\t\t\tcache.put(element);\n\t\t}\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/core/cache/impl/EhCacheServiceImpl.java", "stars": "137", "class_props": {"extends": null, "implements": ["CacheService"], "modifiers": ["public"]}}, {"id": 41682, "method_name": "user_enters_as_on_page", "class_name": "InputSteps", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void user_enters_as_on_page(String field, String value, String pageName) {\n        BasePage page = PageObjects.getPageObject(pageName);\n        //BasePage page = new Login();\n        if (value.equalsIgnoreCase(\"manager-username\")){\n            value = ConfigurationReader.get(\"manager-username\"); // salesmanager110\n        } else if (value.equalsIgnoreCase(\"manager-password\")){\n            value = ConfigurationReader.get(\"manager-password\"); // salesmanager110\n        }else if (value.equalsIgnoreCase(\"excel\")){\n            value = filterExcelData(field, value);\n        }\n        page.enterValue(field, value); // (username, salesmanager110)\n    }", "url": "https://raw.githubusercontent.com/Skarlet03/office_hour_cucumber_project/master/src/main/java/automationPractice/step_definitions/InputSteps.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41683, "method_name": "user_selects_as_on_page", "class_name": "InputSteps", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void user_selects_as_on_page(String listName, String value, String pageName) {\n        BasePage page = PageObjects.getPageObject(pageName);\n        if (value.equalsIgnoreCase(\"excel\")) {\n            value = filterExcelData(listName, value);\n        }\n        page.selectValue(listName, value);\n    }", "url": "https://raw.githubusercontent.com/Skarlet03/office_hour_cucumber_project/master/src/main/java/automationPractice/step_definitions/InputSteps.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41684, "method_name": "user_enters_following_information_on_page", "class_name": "InputSteps", "params": ["String", "Map<String,List>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void user_enters_following_information_on_page(String pageName, Map<String , List<String>> table) {\n        //Map<String , List<String>> table -> Map <String, String>\n        BasePage page = PageObjects.getPageObject(pageName);\n        System.out.println(table);\n        Map <String, String> dataMap = new LinkedHashMap<>();\n        for (String key:table.keySet()) {\n            String initValue = table.get(key).get(0); //\"excel\"\n            //First Name=[excel]  ==> when I say table.get(\"First Name\") will return [excel] and  .get(0) -> String \"excel\"\n            String value = initValue;\n            if (value.equalsIgnoreCase(\"excel\")) {\n                value = filterExcelData(key, initValue);\n            }\n            //filterExcelData(\"First Name\", \"excel\") => value from excel\n            dataMap.put(key, value); //{First Name = value from excel , .... }\n        }\n        page.enterValue(dataMap);\n    }", "url": "https://raw.githubusercontent.com/Skarlet03/office_hour_cucumber_project/master/src/main/java/automationPractice/step_definitions/InputSteps.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41685, "method_name": "registerComponents", "class_name": "CustomGlideModule", "params": ["Context", "Glide", "Registry"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void registerComponents(Context context, Glide glide, Registry registry) {\n        OkHttpClient client = new OkHttpClient.Builder().dns(Dns.SYSTEM).build();\n        OkHttpUrlLoader.Factory factory = new OkHttpUrlLoader.Factory(client);\n        glide.getRegistry().replace(GlideUrl.class, InputStream.class, factory);\n    }", "url": "https://raw.githubusercontent.com/idanapp/IdanPlusPlus/master/app/src/main/java/com/example/idan/plusplus/Classes/CustomGlideModule.java", "stars": "9", "class_props": {"extends": "AppGlideModule", "implements": null, "modifiers": ["final", "public"]}}, {"id": 41686, "method_name": "exec", "class_name": "GBoardProc", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String exec(HttpServletRequest req, HttpServletResponse resp) {\n\t\tString view = \"/clsProj/gBoard/gBoardList.cls\";\n\t\treq.setAttribute(\"isRedirect\", true);\n\t\tString body = req.getParameter(\"body\");\n\t\tString sid = (String) req.getSession().getAttribute(\"SID\");\n\t\tGBoardDAO gDAO = new GBoardDAO();\n\t\tint cnt = gDAO.addData(sid, body);\n\t\treturn view;\n\t}", "url": "https://raw.githubusercontent.com/increpas-cls2/clsProj/branch/clsProj/src/com/increpas/www/controller/gBoard/GBoardProc.java", "stars": "2", "class_props": {"extends": null, "implements": ["ClsController"], "modifiers": ["public"]}}, {"id": 41687, "method_name": "drawStringWithShadow", "class_name": "CFontRenderer", "params": ["String", "double", "double", "int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float drawStringWithShadow(String text, double x, double y, int color) {\n        float shadowWidth = drawString(text, x + 1D, y + 1D, color, true);\n        return Math.max(shadowWidth, drawString(text, x, y, color, false));\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41688, "method_name": "drawString", "class_name": "CFontRenderer", "params": ["String", "float", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float drawString(String text, float x, float y, int color) {\n        return drawString(text, x, y, color, false);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41689, "method_name": "drawCenteredStringWithShadow", "class_name": "CFontRenderer", "params": ["String", "float", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float drawCenteredStringWithShadow(String text, float x, float y, int color) {\n        return drawStringWithShadow(text, x - getStringWidth(text) / 2, y, color);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41690, "method_name": "drawCenteredString", "class_name": "CFontRenderer", "params": ["String", "float", "float", "int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float drawCenteredString(String text, float x, float y, int color) {\n        return drawString(text, x - getStringWidth(text) / 2, y, color);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41691, "method_name": "drawString", "class_name": "CFontRenderer", "params": ["String", "double", "double", "int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float drawString(String text, double x, double y, int color, boolean shadow) {\n        x -= 1;\n        y -= 2;\n        if (text == null) {\n            return 0.0F;\n        }\n        if (color == 553648127) {\n            color = 16777215;\n        }\n        if ((color & 0xFC000000) == 0) {\n            color |= -16777216;\n        }\n\n        if (shadow) {\n            color = (color & 0xFCFCFC) >> 2 | color & 0xFF000000;\n        }\n\n        CharData[] currentData = this.charData;\n        float alpha = (color >> 24 & 0xFF) / 255.0F;\n        boolean randomCase = false;\n        boolean bold = false;\n        boolean italic = false;\n        boolean strikethrough = false;\n        boolean underline = false;\n        boolean render = true;\n        x *= 2.0D;\n        y *= 2.0D;\n        if (render) {\n            GL11.glPushMatrix();\n            GlStateManager.scale(0.5D, 0.5D, 0.5D);\n            GlStateManager.enableBlend();\n            GlStateManager.blendFunc(770, 771);\n            GlStateManager.color((color >> 16 & 0xFF) / 255.0F, (color >> 8 & 0xFF) / 255.0F, (color & 0xFF) / 255.0F, alpha);\n            int size = text.length();\n            GlStateManager.enableTexture2D();\n            GlStateManager.bindTexture(tex.getGlTextureId());\n            GL11.glBindTexture(GL11.GL_TEXTURE_2D, tex.getGlTextureId());\n            for (int i = 0; i < size; i++) {\n                char character = text.charAt(i);\n                if ((character == '\\u00A7') && (i < size)) {\n                    int colorIndex = 21;\n                    try {\n                        colorIndex = \"0123456789abcdefklmnor\".indexOf(text.charAt(i + 1));\n                    } catch (Exception e) {\n                    }\n                    if (colorIndex < 16) {\n                        bold = false;\n                        italic = false;\n                        randomCase = false;\n                        underline = false;\n                        strikethrough = false;\n                        GlStateManager.bindTexture(tex.getGlTextureId());\n                        // GL11.glBindTexture(GL11.GL_TEXTURE_2D,\n                        // tex.getGlTextureId());\n                        currentData = this.charData;\n                        if ((colorIndex < 0) || (colorIndex > 15)) colorIndex = 15;\n                        if (shadow) colorIndex += 16;\n                        int colorcode = this.colorCode[colorIndex];\n                        GlStateManager.color((colorcode >> 16 & 0xFF) / 255.0F, (colorcode >> 8 & 0xFF) / 255.0F, (colorcode & 0xFF) / 255.0F, alpha);\n                    } else if (colorIndex == 16) randomCase = true;\n                    else if (colorIndex == 17) {\n                        bold = true;\n                        if (italic) {\n                            GlStateManager.bindTexture(texItalicBold.getGlTextureId());\n                            // GL11.glBindTexture(GL11.GL_TEXTURE_2D,\n                            // texItalicBold.getGlTextureId());\n                            currentData = this.boldItalicChars;\n                        } else {\n                            GlStateManager.bindTexture(texBold.getGlTextureId());\n                            // GL11.glBindTexture(GL11.GL_TEXTURE_2D,\n                            // texBold.getGlTextureId());\n                            currentData = this.boldChars;\n                        }\n                    } else if (colorIndex == 18) strikethrough = true;\n                    else if (colorIndex == 19) underline = true;\n                    else if (colorIndex == 20) {\n                        italic = true;\n                        if (bold) {\n                            GlStateManager.bindTexture(texItalicBold.getGlTextureId());\n                            // GL11.glBindTexture(GL11.GL_TEXTURE_2D,\n                            // texItalicBold.getGlTextureId());\n                            currentData = this.boldItalicChars;\n                        } else {\n                            GlStateManager.bindTexture(texItalic.getGlTextureId());\n                            // GL11.glBindTexture(GL11.GL_TEXTURE_2D,\n                            // texItalic.getGlTextureId());\n                            currentData = this.italicChars;\n                        }\n                    } else if (colorIndex == 21) {\n                        bold = false;\n                        italic = false;\n                        randomCase = false;\n                        underline = false;\n                        strikethrough = false;\n                        GlStateManager.color((color >> 16 & 0xFF) / 255.0F, (color >> 8 & 0xFF) / 255.0F, (color & 0xFF) / 255.0F, alpha);\n                        GlStateManager.bindTexture(tex.getGlTextureId());\n                        // GL11.glBindTexture(GL11.GL_TEXTURE_2D,\n                        // tex.getGlTextureId());\n                        currentData = this.charData;\n                    }\n                    i++;\n                } else if ((character < currentData.length) && (character >= 0)) {\n                    GL11.glBegin(4);\n                    drawChar(currentData, character, (float) x, (float) y);\n                    GL11.glEnd();\n                    if (strikethrough)\n                        drawLine(x, y + currentData[character].height / 2, x + currentData[character].width - 8.0D, y + currentData[character].height / 2, 1.0F);\n                    if (underline)\n                        drawLine(x, y + currentData[character].height - 2.0D, x + currentData[character].width - 8.0D, y + currentData[character].height - 2.0D, 1.0F);\n                    x += currentData[character].width - 8 + this.charOffset;\n                }\n            }\n            GL11.glHint(3155, 4352);\n            GL11.glPopMatrix();\n        }\n        return (float) x / 2.0F;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41692, "method_name": "getStringWidth", "class_name": "CFontRenderer", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getStringWidth(String text) {\n        if (text == null) {\n            return 0;\n        }\n        int width = 0;\n        CharData[] currentData = this.charData;\n        boolean bold = false;\n        boolean italic = false;\n        int size = text.length();\n\n        for (int i = 0; i < size; i++) {\n            char character = text.charAt(i);\n            if ((character == '\\u00A7') && (i < size)) {\n                int colorIndex = \"0123456789abcdefklmnor\".indexOf(character);\n                if (colorIndex < 16) {\n                    bold = false;\n                    italic = false;\n                } else if (colorIndex == 17) {\n                    bold = true;\n                    if (italic) currentData = this.boldItalicChars;\n                    else currentData = this.boldChars;\n                } else if (colorIndex == 20) {\n                    italic = true;\n                    if (bold) currentData = this.boldItalicChars;\n                    else currentData = this.italicChars;\n                } else if (colorIndex == 21) {\n                    bold = false;\n                    italic = false;\n                    currentData = this.charData;\n                }\n                i++;\n            } else if ((character < currentData.length) && (character >= 0)) {\n                width += currentData[character].width - 8 + this.charOffset;\n            }\n        }\n\n        return width / 2;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41693, "method_name": "setFont", "class_name": "CFontRenderer", "params": ["Font"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFont(Font font) {\n        super.setFont(font);\n        setupBoldItalicIDs();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41694, "method_name": "setAntiAlias", "class_name": "CFontRenderer", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAntiAlias(boolean antiAlias) {\n        super.setAntiAlias(antiAlias);\n        setupBoldItalicIDs();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41695, "method_name": "setFractionalMetrics", "class_name": "CFontRenderer", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFractionalMetrics(boolean fractionalMetrics) {\n        super.setFractionalMetrics(fractionalMetrics);\n        setupBoldItalicIDs();\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41696, "method_name": "setupBoldItalicIDs", "class_name": "CFontRenderer", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupBoldItalicIDs() {\n        texBold = setupTexture(this.font.deriveFont(1), this.antiAlias, this.fractionalMetrics, this.boldChars);\n        texItalic = setupTexture(this.font.deriveFont(2), this.antiAlias, this.fractionalMetrics, this.italicChars);\n        texItalicBold = setupTexture(this.font.deriveFont(3), this.antiAlias, this.fractionalMetrics, this.boldItalicChars);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41697, "method_name": "drawLine", "class_name": "CFontRenderer", "params": ["double", "double", "double", "double", "float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawLine(double x, double y, double x1, double y1, float width) {\n        GL11.glDisable(GL11.GL_TEXTURE_2D);\n        GL11.glLineWidth(width);\n        GL11.glBegin(1);\n        GL11.glVertex2d(x, y);\n        GL11.glVertex2d(x1, y1);\n        GL11.glEnd();\n        GL11.glEnable(GL11.GL_TEXTURE_2D);\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41698, "method_name": "wrapWords", "class_name": "CFontRenderer", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> wrapWords(String text, double width) {\n        List finalWords = new ArrayList();\n        if (getStringWidth(text) > width) {\n            String[] words = text.split(\" \");\n            String currentWord = \"\";\n            char lastColorCode = 65535;\n\n            for (String word : words) {\n                for (int i = 0; i < word.toCharArray().length; i++) {\n                    char c = word.toCharArray()[i];\n\n                    if ((c == '\\u00A7') && (i < word.toCharArray().length - 1)) {\n                        lastColorCode = word.toCharArray()[(i + 1)];\n                    }\n                }\n                if (getStringWidth(currentWord + word + \" \") < width) {\n                    currentWord = currentWord + word + \" \";\n                } else {\n                    finalWords.add(currentWord);\n                    currentWord = \"\\u00A7\" + lastColorCode + word + \" \";\n                }\n            }\n            if (currentWord.length() > 0) if (getStringWidth(currentWord) < width) {\n                finalWords.add(\"\\u00A7\" + lastColorCode + currentWord + \" \");\n                currentWord = \"\";\n            } else {\n                for (String s : formatString(currentWord, width))\n                    finalWords.add(s);\n            }\n        } else {\n            finalWords.add(text);\n        }\n        return finalWords;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41699, "method_name": "formatString", "class_name": "CFontRenderer", "params": ["String", "double"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> formatString(String string, double width) {\n        List finalWords = new ArrayList();\n        String currentWord = \"\";\n        char lastColorCode = 65535;\n        char[] chars = string.toCharArray();\n        for (int i = 0; i < chars.length; i++) {\n            char c = chars[i];\n\n            if ((c == '\\u00A7') && (i < chars.length - 1)) {\n                lastColorCode = chars[(i + 1)];\n            }\n\n            if (getStringWidth(currentWord + c) < width) {\n                currentWord = currentWord + c;\n            } else {\n                finalWords.add(currentWord);\n                currentWord = \"\\u00A7\" + lastColorCode + String.valueOf(c);\n            }\n        }\n\n        if (currentWord.length() > 0) {\n            finalWords.add(currentWord);\n        }\n\n        return finalWords;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41700, "method_name": "setupMinecraftColorcodes", "class_name": "CFontRenderer", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setupMinecraftColorcodes() {\n        for (int index = 0; index < 32; index++) {\n            int noClue = (index >> 3 & 0x1) * 85;\n            int red = (index >> 2 & 0x1) * 170 + noClue;\n            int green = (index >> 1 & 0x1) * 170 + noClue;\n            int blue = (index >> 0 & 0x1) * 170 + noClue;\n\n            if (index == 6) {\n                red += 85;\n            }\n\n            if (index >= 16) {\n                red /= 4;\n                green /= 4;\n                blue /= 4;\n            }\n\n            this.colorCode[index] = ((red & 0xFF) << 16 | (green & 0xFF) << 8 | blue & 0xFF);\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/font/CFontRenderer.java", "stars": "12", "class_props": {"extends": "CFont", "implements": null, "modifiers": ["public"]}}, {"id": 41701, "method_name": "coinCode", "class_name": "Bch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String coinCode() {\n        return \"BCH\";\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/BCH/Bch.java", "stars": "13", "class_props": {"extends": "Btc", "implements": null, "modifiers": ["public"]}}, {"id": 41702, "method_name": "parseInput", "class_name": "Tx", "params": [], "throws": ["JSONException", "InvalidTransactionException"], "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void parseInput() throws JSONException, InvalidTransactionException {\n            JSONArray inputs = metaData.getJSONArray(\"inputs\");\n            StringBuilder paths = new StringBuilder();\n            for (int i = 0; i < inputs.length(); i++) {\n                JSONObject input = inputs.getJSONObject(i);\n                String path = input.getString(\"ownerKeyPath\");\n                checkHdPath(path, false);\n                paths.append(path).append(SEPARATOR);\n                int index = input.optInt(\"index\");\n                if (index == 0) {\n                    input.put(\"index\", 0);\n                }\n                inputAmount += input.getLong(\"value\");\n            }\n            hdPath = paths.deleteCharAt(paths.length() - 1).toString();\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/BCH/Bch.java", "stars": "13", "class_props": {"extends": "Btc", "implements": null, "modifiers": ["public", "static"]}}, {"id": 41703, "method_name": "derive", "class_name": "Deriver", "params": ["String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String derive(String xPubKey, int changeIndex, int addrIndex) {\n            DeterministicKey address = getAddrDeterministicKey(xPubKey, changeIndex, addrIndex);\n            LegacyAddress addr = LegacyAddress.fromPubKeyHash(MAINNET, address.getPubKeyHash());\n            return addr.toBase58();\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/BCH/Bch.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 41704, "method_name": "derive", "class_name": "Deriver", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String derive(String xPubKey) {\n            return LegacyAddress.fromPubKeyHash(MAINNET,\n                    getDeterministicKey(xPubKey).getPubKeyHash()).toBase58();\n        }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/BCH/Bch.java", "stars": "13", "class_props": {"extends": "AbsDeriver", "implements": null, "modifiers": ["public", "static"]}}, {"id": 41705, "method_name": "isWar", "class_name": "TreatyWar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isWar()                      { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41706, "method_name": "listOrder", "class_name": "TreatyWar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int listOrder()                      { return 2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41707, "method_name": "coloniesStart", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int coloniesStart(Empire e)          { return coloniesStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41708, "method_name": "populationStart", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float populationStart(Empire e)      { return populationStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41709, "method_name": "productionStart", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float productionStart(Empire e)      { return productionStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41710, "method_name": "fleetSizeStart", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float fleetSizeStart(Empire e)       { return fleetSizeStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41711, "method_name": "coloniesNow", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int coloniesNow(Empire e)            { return coloniesNow[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41712, "method_name": "populationNow", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float populationNow(Empire e)        { return populationNow[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41713, "method_name": "productionNow", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float productionNow(Empire e)        { return productionNow[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41714, "method_name": "fleetSizeNow", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float fleetSizeNow(Empire e)         { return fleetSizeNow[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41715, "method_name": "colonyChange", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float colonyChange(Empire e)         { return (float) coloniesNow[index(e)]/coloniesStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41716, "method_name": "populationChange", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float populationChange(Empire e)     { return populationNow[index(e)]/populationStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41717, "method_name": "productionChange", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float productionChange(Empire e)     { return productionNow[index(e)]/productionStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41718, "method_name": "fleetSizeChange", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float fleetSizeChange(Empire e)      { return fleetSizeNow[index(e)]/fleetSizeStart[index(e)]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41719, "method_name": "nextTurn", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn(Empire emp) {\n        // this will be called separately for each empire from their diplomatic\n        // embassy for the other empire\n        coloniesNow[index(emp)] = emp.numColonizedSystems();\n        populationNow[index(emp)] = emp.totalPlanetaryPopulation();     \n        productionNow[index(emp)] = emp.totalPlanetaryProduction();\n        fleetSizeNow[index(emp)] = emp.totalFleetSize();     \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41720, "method_name": "index", "class_name": "TreatyWar", "params": ["Empire"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int index(Empire e)  { return e.id == empire1 ? 0 : 1; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41721, "method_name": "initValues", "class_name": "TreatyWar", "params": ["Empire", "Empire"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initValues(Empire e1, Empire e2) {\n        coloniesStart[0] = coloniesNow[0] = e1.numColonizedSystems();\n        coloniesStart[1] = coloniesNow[1] = e2.numColonizedSystems();\n        \n        populationStart[0] = populationNow[0] = e1.totalPlanetaryPopulation();\n        populationStart[1] = populationNow[1] = e2.totalPlanetaryPopulation();     \n         \n        productionStart[0] = productionNow[0] = e1.totalPlanetaryProduction();\n        productionStart[1] = productionNow[1] = e2.totalPlanetaryProduction();\n       \n        // minimum 1 to avoid potential /0 when going to war with no ships\n        fleetSizeStart[0] = fleetSizeNow[0] = max(1, e1.totalFleetSize());\n        fleetSizeStart[1] = fleetSizeNow[1] = max(1, e2.totalFleetSize());     \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/empires/TreatyWar.java", "stars": "74", "class_props": {"extends": "DiplomaticTreaty", "implements": ["Base"], "modifiers": ["public"]}}, {"id": 41722, "method_name": "getId", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return this.id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41723, "method_name": "setId", "class_name": "DistributeLock", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41724, "method_name": "getRequest_id", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getRequest_id() {\n        return this.request_id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41725, "method_name": "setRequest_id", "class_name": "DistributeLock", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRequest_id(String request_id) {\n        this.request_id = request_id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41726, "method_name": "getLock_resource", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getLock_resource() {\n        return this.lock_resource;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41727, "method_name": "setLock_resource", "class_name": "DistributeLock", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLock_resource(String lock_resource) {\n        this.lock_resource = lock_resource;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41728, "method_name": "getLock_count", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLock_count() {\n        return this.lock_count;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41729, "method_name": "setLock_count", "class_name": "DistributeLock", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLock_count(long lock_count) {\n        this.lock_count = lock_count;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41730, "method_name": "getVersion", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVersion() {\n        return this.version;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41731, "method_name": "setVersion", "class_name": "DistributeLock", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVersion(int version) {\n        this.version = version;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41732, "method_name": "getIp", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getIp() {\n        return this.ip;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41733, "method_name": "setIp", "class_name": "DistributeLock", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIp(String ip) {\n        this.ip = ip;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41734, "method_name": "getTimeout", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getTimeout() {\n        return this.timeout;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41735, "method_name": "setTimeout", "class_name": "DistributeLock", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimeout(long timeout) {\n        this.timeout = timeout;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41736, "method_name": "getCreate_time", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCreate_time() {\n        return this.create_time;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41737, "method_name": "setCreate_time", "class_name": "DistributeLock", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreate_time(long create_time) {\n        this.create_time = create_time;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41738, "method_name": "getUpdate_time", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getUpdate_time() {\n        return this.update_time;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41739, "method_name": "setUpdate_time", "class_name": "DistributeLock", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdate_time(long update_time) {\n        this.update_time = update_time;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41740, "method_name": "toString", "class_name": "DistributeLock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"DistributeLock{\" +\n                \"id=\" + id +\n                \", request_id='\" + request_id + '\\'' +\n                \", lock_resource='\" + lock_resource + '\\'' +\n                \", lock_count=\" + lock_count +\n                \", version=\" + version +\n                \", ip='\" + ip + '\\'' +\n                \", timeout=\" + new Date(timeout) +\n                \", create_time=\" + new Date(create_time) +\n                \", update_time=\" + new Date(update_time) +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/com/webank/wedatasphere/schedulis/common/distributelock/DistributeLock.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41741, "method_name": "inicializar", "class_name": "PesquisaProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void inicializar() {\n\t\tdao = new ProdutoDao();\n\t\tbuscarProdutos();\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41742, "method_name": "buscarProdutos", "class_name": "PesquisaProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void buscarProdutos() {\n\t\tprodutos = dao.buscarTodos();\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41743, "method_name": "excluir", "class_name": "PesquisaProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void excluir() {\n\t\tdao.excluir(produtoSelecionado);\n\t\tbuscarProdutos();\n\n\t\tFacesUtil.addInfoMessage(\"Produto excluido com sucesso\");\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41744, "method_name": "getDao", "class_name": "PesquisaProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ProdutoDao", "snippet": "\tpublic ProdutoDao getDao() {\n\t\treturn dao;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41745, "method_name": "setDao", "class_name": "PesquisaProdutoBean", "params": ["ProdutoDao"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDao(ProdutoDao dao) {\n\t\tthis.dao = dao;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41746, "method_name": "getProdutoSelecionado", "class_name": "PesquisaProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Produto", "snippet": "\tpublic Produto getProdutoSelecionado() {\n\t\treturn produtoSelecionado;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41747, "method_name": "setProdutoSelecionado", "class_name": "PesquisaProdutoBean", "params": ["Produto"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setProdutoSelecionado(Produto produtoSelecionado) {\n\t\tthis.produtoSelecionado = produtoSelecionado;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41748, "method_name": "setProdutos", "class_name": "PesquisaProdutoBean", "params": ["List<Produto>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setProdutos(List<Produto> produtos) {\n\t\tthis.produtos = produtos;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41749, "method_name": "getProdutos", "class_name": "PesquisaProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Produto>", "snippet": "\tpublic List<Produto> getProdutos() {\n\t\treturn produtos;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/PesquisaProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41750, "method_name": "getId", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41751, "method_name": "setId", "class_name": "OrderPay", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41752, "method_name": "getOutTradeNo", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getOutTradeNo() {\n        return outTradeNo;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41753, "method_name": "setOutTradeNo", "class_name": "OrderPay", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOutTradeNo(Long outTradeNo) {\n        this.outTradeNo = outTradeNo;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41754, "method_name": "getTradeNo", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTradeNo() {\n        return tradeNo;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41755, "method_name": "setTradeNo", "class_name": "OrderPay", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTradeNo(String tradeNo) {\n        this.tradeNo = tradeNo == null ? null : tradeNo.trim();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41756, "method_name": "getPayChannel", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getPayChannel() {\n        return payChannel;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41757, "method_name": "setPayChannel", "class_name": "OrderPay", "params": ["Byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPayChannel(Byte payChannel) {\n        this.payChannel = payChannel;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41758, "method_name": "getTotalAmount", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getTotalAmount() {\n        return totalAmount;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41759, "method_name": "setTotalAmount", "class_name": "OrderPay", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTotalAmount(Integer totalAmount) {\n        this.totalAmount = totalAmount;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41760, "method_name": "getUserId", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41761, "method_name": "setUserId", "class_name": "OrderPay", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(Long userId) {\n        this.userId = userId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41762, "method_name": "getPayStatus", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getPayStatus() {\n        return payStatus;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41763, "method_name": "setPayStatus", "class_name": "OrderPay", "params": ["Byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPayStatus(Byte payStatus) {\n        this.payStatus = payStatus;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41764, "method_name": "getCreateTime", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTime() {\n        return createTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41765, "method_name": "setCreateTime", "class_name": "OrderPay", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTime(Date createTime) {\n        this.createTime = createTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41766, "method_name": "getUpdateTime", "class_name": "OrderPay", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getUpdateTime() {\n        return updateTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41767, "method_name": "setUpdateTime", "class_name": "OrderPay", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUpdateTime(Date updateTime) {\n        this.updateTime = updateTime;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-common/src/main/java/com/java2nb/novel/entity/OrderPay.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41768, "method_name": "onCreate", "class_name": "PlaceOrderActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_place_order);\n\n        ButterKnife.bind(this);\n\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n//        getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n        // findViewByID'// STOPSHIP: 11/6/16\n\n        addOrSaveAddress = findViewById(R.id.pickFromSavedAddresses);\n        addOrSaveAddress.setOnClickListener(this);\n\n\n        name = findViewById(R.id.name);\n        deliveryAddressView = findViewById(R.id.deliveryAddress);\n//        city = findViewById(R.id.city);\n//        pincode = findViewById(R.id.pincode);\n//        landmark = findViewById(R.id.landmark);\n        phoneNumber = findViewById(R.id.phoneNumber);\n        addressContainer = findViewById(R.id.selectedDeliveryAddress);\n\n        // Total Fields\n\n\n        subTotal = findViewById(R.id.subTotal);\n        deliveryCharges = findViewById(R.id.deliveryCharges);\n        total = findViewById(R.id.total);\n\n        pickFromShopCheck = findViewById(R.id.radioPickFromShop);\n        homeDelieryCheck = findViewById(R.id.radioHomeDelivery);\n\n\n\n        // Bind View Ends\n\n\n//        cartStats = getIntent().getParcelableExtra(CART_STATS_INTENT_KEY);\n\n        String cartStatsJson = getIntent().getStringExtra(CART_STATS_INTENT_KEY);\n        cartStats = UtilityFunctions.provideGson().fromJson(cartStatsJson, CartStats.class);\n\n\n        if(savedInstanceState!=null)\n        {\n            selectedAddress = savedInstanceState.getParcelable(\"selectedAddress\");\n        }\n\n\n        if(selectedAddress!=null)\n        {\n            addressContainer.setVisibility(View.VISIBLE);\n            bindDataToViews(selectedAddress);\n        }else\n        {\n            addressContainer.setVisibility(View.GONE);\n\n        }\n\n\n\n\n        if(PrefServiceConfig.getServiceName(this)!=null) {\n            serviceName.setVisibility(View.VISIBLE);\n            serviceName.setText(PrefServiceConfig.getServiceName(this));\n        }\n\n\n\n        if(cartStatsFromNetworkCall==null)\n        {\n            makeNetworkCall();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41769, "method_name": "onClick", "class_name": "PlaceOrderActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n\n        Intent intent = new Intent(this, DeliveryAddressActivity.class);\n\n        startActivityForResult(intent,1);\n\n        //startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41770, "method_name": "onActivityResult", "class_name": "PlaceOrderActivity", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\n        super.onActivityResult(requestCode, resultCode, data);\n\n        if(requestCode == 1 && resultCode == 2 && data != null)\n        {\n            String jsonString = data.getStringExtra(\"output\");\n            selectedAddress = UtilityFunctions.provideGson().fromJson(jsonString,DeliveryAddress.class);\n\n//            selectedAddress = data.getParcelableExtra(\"output\");\n\n            if(selectedAddress!=null)\n            {\n                addressContainer.setVisibility(View.VISIBLE);\n\n                addOrSaveAddress.setText(R.string.change_address);\n\n                bindDataToViews(selectedAddress);\n\n            }\n\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41771, "method_name": "bindDataToViews", "class_name": "PlaceOrderActivity", "params": ["DeliveryAddress"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void bindDataToViews(DeliveryAddress deliveryAddress)\n    {\n        if(deliveryAddress != null)\n        {\n            name.setText(deliveryAddress.getName());\n\n            String address  = deliveryAddress.getDeliveryAddress() + \", \"\n                    + deliveryAddress.getCity() + \", \" + deliveryAddress.getPincode();\n\n\n\n            deliveryAddressView.setText(address);\n\n//            city.setText(deliveryAddress.getCity());\n//            pincode.setText(String.valueOf(deliveryAddress.getPincode()));\n//            landmark.setText(deliveryAddress.getLandmark());\n\n            phoneNumber.setText(\"Phone : \" + String.valueOf(deliveryAddress.getPhoneNumber()));\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41772, "method_name": "makeNetworkCall", "class_name": "PlaceOrderActivity", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void makeNetworkCall() {\n\n        if (cartStats == null){\n\n            return;\n        }\n\n\n        Call<List<CartStats>> call = cartStatsService.getCart(\n                PrefLogin.getUser(this).getUserID(),null,\n                cartStats.getShopID(),true,null,null\n        );\n\n\n\n\n        System.out.println(\"Cart ID : \" + cartStats.getCartID());\n\n        call.enqueue(new Callback<List<CartStats>>() {\n            @Override\n            public void onResponse(Call<List<CartStats>> call, Response<List<CartStats>> response) {\n\n\n                if(response!=null)\n                {\n                    cartStatsFromNetworkCall = response.body().get(0);\n                    setTotal();\n                    setRadioCheck();\n                }\n            }\n\n            @Override\n            public void onFailure(Call<List<CartStats>> call, Throwable t) {\n\n                showToastMessage(\"Network connection failed. Check Internet connectivity !\");\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41773, "method_name": "setRadioCheck", "class_name": "PlaceOrderActivity", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setRadioCheck()\n    {\n        if(cartStatsFromNetworkCall!=null)\n        {\n            Shop shop = cartStatsFromNetworkCall.getShop();\n\n            if(shop!=null)\n            {\n                homeDelieryCheck.setEnabled(shop.getHomeDeliveryAvailable());\n                pickFromShopCheck.setEnabled(shop.getPickFromShopAvailable());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41774, "method_name": "setTotal", "class_name": "PlaceOrderActivity", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setTotal()\n    {\n        if(cartStatsFromNetworkCall!=null)\n        {\n\n            freeDeliveryInfo.setText(\"Free delivery is offered above the order of \" + PrefGeneral.getCurrencySymbol(this) + \" \" + cartStatsFromNetworkCall.getShop().getBillAmountForFreeDelivery());\n\n\n            subTotal.setText(\"Item Total: \" + PrefGeneral.getCurrencySymbol(this) + \" \" + UtilityFunctions.refinedStringWithDecimals(cartStats.getCart_Total()));\n            deliveryCharges.setText(\"Delivery Charges : N/A\");\n\n            //total.setText(\"Total : \" + cartStats.getCart_Total()+ );\n\n            if(pickFromShopCheck.isChecked())\n            {\n                total.setText(\"Net Payable : \" + PrefGeneral.getCurrencySymbol(this) + \" \" + String.format( \"%.2f\", cartStats.getCart_Total()));\n                deliveryCharges.setText(\"Delivery Charges : \"+ PrefGeneral.getCurrencySymbol(this) + \" \" + 0);\n            }\n\n\n\n\n\n            if(homeDelieryCheck.isChecked())\n            {\n\n\n                if(cartStatsFromNetworkCall.getCart_Total() < cartStatsFromNetworkCall.getShop().getBillAmountForFreeDelivery())\n                {\n\n                    total.setText(\"Net Payable : \" + PrefGeneral.getCurrencySymbol(this) + \" \" + String.format( \"%.2f\", cartStats.getCart_Total() + cartStats.getShop().getDeliveryCharges()));\n                    deliveryCharges.setText(\"Delivery Charges : \" + PrefGeneral.getCurrencySymbol(this) + \" \" + cartStats.getShop().getDeliveryCharges());\n                }\n                else\n                {\n\n                    deliveryCharges.setText(\"Delivery Charges : Zero \" + \"(Delivery is free above the order of : \" + PrefGeneral.getCurrencySymbol(this) + \" \" + cartStatsFromNetworkCall.getShop().getBillAmountForFreeDelivery() + \" )\");\n                    total.setText(\"Total : \" + PrefGeneral.getCurrencySymbol(this) + \" \" + String.format( \"%.2f\", cartStats.getCart_Total())) ;\n                }\n\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41775, "method_name": "radioCheckClicked", "class_name": "PlaceOrderActivity", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void radioCheckClicked()\n    {\n        setTotal();\n\n\n        if(pickFromShopCheck.isChecked())\n        {\n            addOrSaveAddress.setText(\"Pick Address\");\n            deliveryInstructions.setText(\"You need to pick the order from the shop. \");\n        }\n        else\n        {\n            addOrSaveAddress.setText(\"Pick Delivery Address\");\n            deliveryInstructions.setText(\"Your order will be delivered to your home at your given address.\");\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41776, "method_name": "placeOrderClick", "class_name": "PlaceOrderActivity", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void placeOrderClick()\n    {\n\n        if(!pickFromShopCheck.isChecked() && !homeDelieryCheck.isChecked())\n        {\n            showToastMessage(\"Please select delivery type !\");\n            return;\n        }\n\n\n        if(selectedAddress==null)\n        {\n            showToastMessage(\"Please add/select Delivery Address !\");\n            return;\n        }\n\n\n\n        if(cartStatsFromNetworkCall==null)\n        {\n            showToastMessage(\"Network problem. Try again !\");\n            return;\n        }\n\n\n\n        order.setEndUserID(PrefLogin.getUser(this).getUserID());\n\n        order.setDeliveryAddressID(selectedAddress.getId());\n//        orderPFS.setDeliveryAddressID(selectedAddress.getId());\n\n        if(pickFromShopCheck.isChecked())\n        {\n            order.setPickFromShop(true);\n//            placeOrderPFS();\n        }\n        else if(homeDelieryCheck.isChecked())\n        {\n            order.setPickFromShop(false);\n        }\n\n        placeOrderHD();\n\n\n//        order.setOrderStatus(1);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41777, "method_name": "placeOrderHD", "class_name": "PlaceOrderActivity", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void placeOrderHD()\n    {\n        Call<ResponseBody> call = orderService.postOrder(order,cartStatsFromNetworkCall.getCartID());\n\n\n        placeOrder.setVisibility(View.INVISIBLE);\n        progressBar.setVisibility(View.VISIBLE);\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                placeOrder.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n\n                if(response.code() == 201)\n                {\n                    showToastMessage(\"Successful !\");\n\n\n                    Intent i = new Intent(PlaceOrderActivity.this, Home.class);\n\n                    i.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK| Intent.FLAG_ACTIVITY_CLEAR_TASK);\n\n                    startActivity(i);\n\n                }else\n                {\n                    showToastMessage(\"failed Code : !\" + response.code());\n                }\n\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n\n                placeOrder.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n\n                showToastMessage(\"Network connection Failed !\");\n\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41778, "method_name": "showToastMessage", "class_name": "PlaceOrderActivity", "params": ["String"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void showToastMessage(String message)\n    {\n        Toast.makeText(this,message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Checkout/PlaceOrderActivity.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 41779, "method_name": "onRegister", "class_name": "ThumbIntercept", "params": ["SvcMemory", "int"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer onRegister(SvcMemory svcMemory, int svcNumber) {\n        if (svcNumber < 0 || svcNumber > 0xff) {\n            throw new IllegalStateException(\"service number out of range\");\n        }\n\n        try (Keystone keystone = new Keystone(KeystoneArchitecture.Arm, KeystoneMode.ArmThumb)) {\n            List<String> asm = new ArrayList<>(2);\n            asm.add(\"svc #0x\" + Integer.toHexString(svcNumber));\n            if (isThumb32) {\n                if (\"bl\".equals(insn.mnemonic)) {\n                    asm.add(\"pop {pc}\");\n                } else {\n                    asm.add(\"nop\");\n                }\n            }\n            KeystoneEncoded encoded = keystone.assemble(asm);\n            byte[] code = encoded.getMachineCode();\n            pointer.write(0, code, 0, code.length);\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41780, "method_name": "handle", "class_name": "ThumbIntercept", "params": ["Emulator<?>"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long handle(Emulator<?> emulator) {\n        Unicorn u = emulator.getUnicorn();\n        if (callback != null) {\n            callback.onIntercept(emulator);\n        }\n        eval(u, emulator);\n        return ((Number) u.reg_read(ArmConst.UC_ARM_REG_R0)).intValue();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41781, "method_name": "eval", "class_name": "ThumbIntercept", "params": ["Unicorn", "Emulator<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void eval(Unicorn u, Emulator<?> emulator) {\n        switch (insn.mnemonic) {\n            case \"push\":\n                evalPush(u, emulator);\n                break;\n            case \"mul\":\n            case \"muls\":\n                evalMul(u);\n                break;\n            case \"sub\":\n            case \"subs\":\n                evalSub(u);\n                break;\n            case \"add\":\n                evalAdd(u);\n                break;\n            case \"bl\":\n                evalBL(u, false, emulator);\n                break;\n            case \"blx\":\n                evalBL(u, true, emulator);\n                break;\n            default:\n                throw new UnicornException(insn.mnemonic + \" \" + insn.opStr);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41782, "method_name": "evalBL", "class_name": "ThumbIntercept", "params": ["Unicorn", "boolean", "Emulator<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void evalBL(Unicorn u, boolean x, Emulator<?> emulator) {\n        Pointer sp = UnicornPointer.register(emulator, ArmConst.UC_ARM_REG_SP);\n        try {\n            Pointer pc = UnicornPointer.register(emulator, ArmConst.UC_ARM_REG_PC);\n            u.reg_write(ArmConst.UC_ARM_REG_LR, ((UnicornPointer) pc.share(2)).peer | 1L); // thumb\n            sp = sp.share(-4);\n\n            Arm.OpInfo opInfo = (Arm.OpInfo) this.insn.operands;\n            int off = opInfo.op[0].value.imm;\n            pc = pc.share(off).share(-2);\n            if (!x) {\n                pc = pc.share(1); // thumb\n            }\n            sp.setPointer(0, pc);\n        } finally {\n            u.reg_write(ArmConst.UC_ARM_REG_SP, ((UnicornPointer) sp).peer);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41783, "method_name": "evalAdd", "class_name": "ThumbIntercept", "params": ["Unicorn"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void evalAdd(Unicorn u) {\n        Arm.OpInfo opInfo = (Arm.OpInfo) this.insn.operands;\n        int opCount = opInfo.op.length;\n        if (opCount != 2 && opCount != 3) {\n            throw new UnicornException(\"opCount=\" + opCount);\n        }\n\n        long o1 = ((Number) u.reg_read(opInfo.op[opCount - 2].value.reg)).intValue() & 0xffffffffL;\n        long o2 = getOperandValue(u, opInfo.op[opCount - 1]) & 0xffffffffL;\n        long result = o1 + o2;\n        u.reg_write(opInfo.op[0].value.reg, (int) result);\n        if (opInfo.updateFlags) {\n            Cpsr cpsr = Cpsr.getArm(u);\n            cpsr.setNegative((int) result < 0);\n            cpsr.setZero(result == 0);\n            cpsr.setCarry(result >= 0x100000000L);\n            boolean overflow = ((int) o1 >= 0 && (int) o2 >= 0 && (int) result < 0) || ((int) o1 < 0 && (int) o2 < 0 && (int) result >= 0);\n            cpsr.setOverflow(overflow);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41784, "method_name": "evalSub", "class_name": "ThumbIntercept", "params": ["Unicorn"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void evalSub(Unicorn u) {\n        Arm.OpInfo opInfo = (Arm.OpInfo) this.insn.operands;\n        int opCount = opInfo.op.length;\n        if (opCount != 2 && opCount != 3) {\n            throw new UnicornException(\"opCount=\" + opCount);\n        }\n\n        int o1 = ((Number) u.reg_read(opInfo.op[opCount - 2].value.reg)).intValue();\n        int o2 = getOperandValue(u, opInfo.op[opCount - 1]);\n        int result = o1 - o2;\n        u.reg_write(opInfo.op[0].value.reg, result);\n        if (opInfo.updateFlags) {\n            Cpsr cpsr = Cpsr.getArm(u);\n            cpsr.setNegative(result < 0);\n            cpsr.setZero(result == 0);\n            cpsr.setCarry(result >= 0);\n            boolean overflow = (o1 >= 0 && o2 < 0 && result < 0) || (o1 < 0 && o2 >= 0 && result >= 0);\n            cpsr.setOverflow(overflow);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41785, "method_name": "getOperandValue", "class_name": "ThumbIntercept", "params": ["Unicorn", "Arm"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getOperandValue(Unicorn u, Arm.Operand op) {\n        switch (op.type) {\n            case capstone.Arm_const.ARM_OP_REG:\n                int value = ((Number) u.reg_read(op.value.reg)).intValue();\n                if (op.value.reg == ArmConst.UC_ARM_REG_PC) {\n                    value += 2;\n                }\n                return value;\n            case Arm_const.ARM_OP_IMM:\n                return op.value.imm;\n            default:\n                throw new UnicornException(\"op.type=\" + op.type);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41786, "method_name": "evalMul", "class_name": "ThumbIntercept", "params": ["Unicorn"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void evalMul(Unicorn u) {\n        Arm.OpInfo opInfo = (Arm.OpInfo) this.insn.operands;\n        int opCount = opInfo.op.length;\n        if (opCount != 2 && opCount != 3) {\n            throw new UnicornException(\"opCount=\" + opCount);\n        }\n        long o1 = ((Number) u.reg_read(opInfo.op[opCount - 2].value.reg)).intValue() & 0xffffffffL;\n        long o2 = ((Number) u.reg_read(opInfo.op[opCount - 1].value.reg)).intValue() & 0xffffffffL;\n        int result = (int) (o1 * o2);\n        u.reg_write(opInfo.op[0].value.reg, result);\n        if (opInfo.updateFlags) {\n            Cpsr cpsr = Cpsr.getArm(u);\n            cpsr.setNegative(result < 0);\n            cpsr.setZero(result == 0);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41787, "method_name": "evalPush", "class_name": "ThumbIntercept", "params": ["Unicorn", "Emulator<?>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void evalPush(Unicorn u, Emulator<?> emulator) {\n        Pointer sp = UnicornPointer.register(emulator, ArmConst.UC_ARM_REG_SP);\n        Arm.OpInfo opInfo = (Arm.OpInfo) this.insn.operands;\n        List<Arm.Operand> operandList = new ArrayList<>(opInfo.op.length);\n        Collections.addAll(operandList, opInfo.op);\n        Collections.reverse(operandList);\n        try {\n            for (Arm.Operand operand : operandList) {\n                sp = sp.share(-4);\n                sp.setPointer(0, UnicornPointer.register(emulator, operand.value.reg));\n            }\n        } finally {\n            u.reg_write(ArmConst.UC_ARM_REG_SP, ((UnicornPointer) sp).peer);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/arm/ThumbIntercept.java", "stars": "16", "class_props": {"extends": "ThumbSvc", "implements": null, "modifiers": ["public"]}}, {"id": 41788, "method_name": "onEnable", "class_name": "GodMode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnable() {\n        if (mode.equalsIgnoreCase(\"entity\")) {\n            if (mc.player.getRidingEntity() != null) {\n                this.riding = mc.player.getRidingEntity();\n                mc.player.dismountRidingEntity();\n                mc.world.removeEntity(this.riding);\n                mc.player.setPosition(mc.player.getPosition().getX(), mc.player.getPosition().getY() - 1, mc.player.getPosition().getZ());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/player/GodMode.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 41789, "method_name": "onDisable", "class_name": "GodMode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDisable() {\n        if (mode.equalsIgnoreCase(\"entity\")) {\n            if (this.riding != null) {\n                mc.player.connection.sendPacket(new CPacketUseEntity(this.riding, EnumHand.MAIN_HAND));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/player/GodMode.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 41790, "method_name": "onUpdate", "class_name": "GodMode", "params": ["UpdateEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpdate(UpdateEvent event) {\n        if (mode.equalsIgnoreCase(\"entity\")) {\n            if (this.riding != null) {\n                this.riding.posX = mc.player.posX;\n                this.riding.posY = mc.player.posY;\n                this.riding.posZ = mc.player.posZ;\n                this.riding.rotationYaw = mc.player.rotationYaw;\n                mc.player.connection.sendPacket(new CPacketPlayer.Rotation(mc.player.rotationYaw, mc.player.rotationPitch, true));\n                mc.player.connection.sendPacket(new CPacketInput(mc.player.movementInput.moveForward, mc.player.movementInput.moveStrafe, false, false));\n                mc.player.connection.sendPacket(new CPacketVehicleMove(this.riding));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/player/GodMode.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 41791, "method_name": "onPacket", "class_name": "GodMode", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {\n        if (event.getType().equals(PacketEvent.Type.OUTGOING)) {\n            if (this.mode.equalsIgnoreCase(\"portal\")) {\n                if (event.getPacket() instanceof CPacketConfirmTeleport) {\n                    event.setCancelled(true);\n                }\n            }\n            if (this.mode.equalsIgnoreCase(\"entity\")) {\n                if (event.getPacket() instanceof CPacketUseEntity) {\n                    final CPacketUseEntity packet = (CPacketUseEntity) event.getPacket();\n                    if (this.riding != null) {\n                        final Entity entity = packet.getEntityFromWorld(mc.world);\n                        if (entity != null) {\n                            this.riding.posX = entity.posX;\n                            this.riding.posY = entity.posY;\n                            this.riding.posZ = entity.posZ;\n                            this.riding.rotationYaw = mc.player.rotationYaw;\n                            mc.player.connection.sendPacket(new CPacketPlayer.Rotation(mc.player.rotationYaw, mc.player.rotationPitch, true));\n                            mc.player.connection.sendPacket(new CPacketInput(mc.player.movementInput.moveForward, mc.player.movementInput.moveStrafe, false, false));\n                            mc.player.connection.sendPacket(new CPacketVehicleMove(this.riding));\n                        }\n                    }\n                }\n\n                if (event.getPacket() instanceof CPacketPlayer.Position || event.getPacket() instanceof CPacketPlayer.PositionRotation) {\n                    event.setCancelled(true);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/player/GodMode.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 41792, "method_name": "statusList", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward statusList(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        new StatusDAO(con).searchStatus(new SearchResult<Status>(form));\n\n        return data(con, mapping, form, \"statusList\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41793, "method_name": "statusUseProcess", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward statusUseProcess(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n\n        Integer statusId = Utils.parseInt(form.getParam(\"statusId\"));\n        List<String> containProcess = new ArrayList<String>();\n        Map<Integer, ProcessType> processTypeMap = ProcessTypeCache.getProcessTypeMap();\n\n        for (int i = 0; i < processTypeMap.size(); i++) {\n            ProcessType pType = (ProcessType) processTypeMap.values().toArray()[i];\n\n            if (!pType.isUseParentProperties()) {\n                List<Integer> parameters = pType.getProperties().getStatusIds();\n                if (parameters.contains(statusId)) {\n                    containProcess.add(pType.getTitle());\n                }\n            }\n        }\n\n        form.getResponse().setData(\"containProcess\", containProcess);\n\n        return data(con, mapping, form, \"statusUseProcess\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41794, "method_name": "statusDelete", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward statusDelete(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        new StatusDAO(con).deleteStatus(form.getId());\n\n        ProcessTypeCache.flush(con);\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41795, "method_name": "statusGet", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward statusGet(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        StatusDAO statusDAO = new StatusDAO(con);\n\n        Status status = statusDAO.getStatus(form.getId());\n        if (status != null) {\n            form.getResponse().setData(\"status\", status);\n        }\n\n        return data(con, mapping, form, \"statusUpdate\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41796, "method_name": "statusUpdate", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward statusUpdate(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        StatusDAO statusDAO = new StatusDAO(con);\n\n        Status status = new Status();\n        status.setId(form.getId());\n        status.setTitle(form.getParam(\"title\"));\n        status.setPos(Utils.parseInt(form.getParam(\"pos\")));\n\n        statusDAO.updateStatus(status);\n\n        ProcessTypeCache.flush(con);\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41797, "method_name": "typeList", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward typeList(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        HttpServletRequest request = form.getHttpRequest();\n        ArrayHashMap paramMap = form.getParam();\n        int parentId = Utils.parseInt(paramMap.get(\"parentTypeId\"), 0);\n\n        ProcessTypeDAO processTypeDAO = new ProcessTypeDAO(con);\n        processTypeDAO.searchProcessType(new SearchResult<ProcessType>(form), parentId, null,\n                CommonDAO.getLikePatternSub(form.getParam(\"filter\", \"\")));\n\n        if (parentId >= 0) {\n            request.setAttribute(\"typePath\", ProcessTypeCache.getTypePath(parentId));\n        }\n\n        // \u0441\u043c\u043e\u0442\u0440\u0438\u043c \u0447\u0442\u043e \u043f\u043e\u043c\u0435\u0447\u0435\u043d\u043e\n        int id = Utils.parseInt(paramMap.get(\"markType\"), -1);\n        if (id != -1) {\n            ProcessType type = processTypeDAO.getProcessType(id);\n            if (type != null) {\n                request.setAttribute(\"markTypeString\", type.getTitle());\n            }\n        }\n\n        return data(con, mapping, form, \"typeList\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41798, "method_name": "typeGet", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward typeGet(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        ProcessTypeDAO processTypeDAO = new ProcessTypeDAO(con);\n\n        ProcessType type = processTypeDAO.getProcessType(form.getId());\n        if (type != null) {\n            form.getResponse().setData(\"type\", type);\n        }\n\n        return data(con, mapping, form, \"typeUpdate\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41799, "method_name": "typeUpdate", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward typeUpdate(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        ProcessTypeDAO processTypeDAO = new ProcessTypeDAO(con);\n\n        ProcessType type = new ProcessType();\n        type.setId(form.getId());\n        type.setTitle(form.getParam(\"title\"));\n        type.setParentId(Utils.parseInt(form.getParam(\"parentTypeId\")));\n        type.setUseParentProperties(Utils.parseBoolean(form.getParam(\"useParent\")));\n\n        if (Utils.isBlankString(type.getTitle())) {\n            throw new BGMessageException(\"\u041f\u0443\u0441\u0442\u043e\u0435 \u0438\u043c\u044f.\");\n        }\n        if (!processTypeDAO.checkType(type.getId(), type.getParentId(), type.getTitle())) {\n            throw new BGMessageException(\"\u0422\u0430\u043a\u043e\u0435 \u0438\u043c\u044f \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0442\u043a\u0435.\");\n        }\n\n        processTypeDAO.updateProcessType(type, form.getUserId());\n        ProcessTypeCache.flush(con);\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41800, "method_name": "typeDelete", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward typeDelete(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        ArrayHashMap paramMap = form.getParam();\n        int id = Utils.parseInt(paramMap.get(\"id\"), -1);\n        ProcessTypeDAO typeDAO = new ProcessTypeDAO(con);\n\n        if (!typeDAO.checkProcessTypeForDelete(id)) {\n            throw new BGMessageException(\"\u041d\u0435\u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0442\u0438\u043f, \u043f\u043e\u043a\u0430 \u043e\u043d \u0438\u043c\u0435\u0435\u0442 \u043f\u043e\u0442\u043e\u043c\u043a\u043e\u0432.\");\n        }\n\n        typeDAO.deleteProcessType(id);\n        ProcessTypeCache.flush(con);\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41801, "method_name": "typeInsertMark", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward typeInsertMark(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        ArrayHashMap paramMap = form.getParam();\n        int parentId = Utils.parseInt(paramMap.get(\"parentTypeId\"), 0);\n        int id = Utils.parseInt(paramMap.get(\"markType\"), -1);\n\n        if (id != -1) {\n            ProcessTypeDAO typeDAO = new ProcessTypeDAO(con);\n            ProcessType type = typeDAO.getProcessType(id);\n\n            if (!typeDAO.checkType(0, parentId, type.getTitle())) {\n                throw new BGMessageException(\"\u0422\u0430\u043a\u043e\u0435 \u0438\u043c\u044f \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0432\u0435\u0442\u043a\u0435.\");\n            }\n\n            if (parentId == id) {\n                throw new BGMessageException(\"\u041d\u0435\u043b\u044c\u0437\u044f \u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0435\u0431\u044f.\");\n            }\n\n            type.setParentId(parentId);\n            typeDAO.updateProcessType(type, form.getUserId());\n            ProcessTypeCache.flush(con);\n            paramMap.put(\"markType\", \"0\");\n        }\n        //form.setAction( \"typeList\" );\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41802, "method_name": "typeUsed", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward typeUsed(ActionMapping mapping, DynActionForm form, Connection conSet) throws BGException {\n        int typeId = form.getParamInt(\"typeId\", 0);\n        if (typeId <= 0) {\n            throw new BGIllegalArgumentException();\n        }\n\n        List<String> queueList = ProcessQueueCache.getQueueList().stream().filter(q -> q.getProcessTypeIds().contains(typeId)).map(Queue::getTitle)\n                .collect(Collectors.toList());\n        form.getResponse().setData(\"queueTitleList\", queueList);\n\n        return data(conSet, mapping, form, \"typeUsed\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41803, "method_name": "queueList", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward queueList(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        Set<Integer> queueIds = Utils.toIntegerSet(form.getPermission().get(\"allowedQueueIds\"));\n\n        new QueueDAO(con).searchQueue(new SearchResult<Queue>(form), queueIds, form.getParam(\"filter\"));\n\n        return data(con, mapping, form, \"queueList\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41804, "method_name": "queueGet", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward queueGet(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        HttpServletRequest request = form.getHttpRequest();\n\n        checkAllowedQueueIds(form);\n\n        QueueDAO queueDAO = new QueueDAO(con);\n\n        int id = form.getId();\n\n        Queue queue = queueDAO.getQueue(id);\n        if (queue != null) {\n            queue.setProcessTypeIds(queueDAO.getQueueProcessTypeIds(id));\n            form.getResponse().setData(\"queue\", queue);\n        }\n\n        request.setAttribute(\"typeTreeRoot\", ProcessTypeCache.getTypeTreeRoot());\n\n        return data(con, mapping, form, \"queueUpdate\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41805, "method_name": "queueUpdate", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward queueUpdate(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        checkAllowedQueueIds(form);\n\n        QueueDAO queueDAO = new QueueDAO(con);\n\n        Queue queue = new Queue();\n        queue.setId(form.getId());\n        queue.setTitle(form.getParam(\"title\"));\n        queue.setConfig(form.getParam(\"config\"));\n        queue.setProcessTypeIds(form.getSelectedValues(\"type\"));\n        queue.setLastModify(new LastModify(form.getUserId(), new Date()));\n\n        Queue oldQueue = queueDAO.getQueue(form.getId());\n        checkModifyed(oldQueue == null ? new LastModify() : oldQueue.getLastModify(), form);\n\n        queueDAO.updateQueue(queue, form.getUserId());\n\n        form.getResponse().setData(\"queue\", queue);\n\n        ProcessQueueCache.flush(con);\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41806, "method_name": "queueDelete", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward queueDelete(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        checkAllowedQueueIds(form);\n\n        new QueueDAO(con).delete(form.getId());\n\n        ProcessQueueCache.flush(con);\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41807, "method_name": "properties", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward properties(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        HttpServletRequest request = form.getHttpRequest();\n\n        checkAllowedQueueIds(form);\n\n        ProcessTypeDAO typeDAO = new ProcessTypeDAO(con);\n        ParamDAO paramDAO = new ParamDAO(con, form.getUserId());\n        UserPermsetDAO groupDAO = new UserPermsetDAO(con);\n\n        ProcessType type = typeDAO.getProcessType(form.getId());\n        if (type != null) {\n            form.getResponse().setData(\"properties\", type.getProperties());\n            form.getResponse().setData(\"config\", type.getProperties().getConfig());\n\n            request.setAttribute(\"statusList\", Utils.getObjectList(ProcessTypeCache.getStatusMap(), type.getProperties().getStatusIds()));\n            request.setAttribute(\"processType\", type);\n\n            SearchResult<Permset> groupList = new SearchResult<Permset>();\n            groupDAO.searchPermset(groupList);\n            request.setAttribute(\"groupList\", groupList);\n\n            request.setAttribute(\"parameterList\", paramDAO.getParameterList(Process.OBJECT_TYPE, 0));\n        }\n\n        return data(con, mapping, form, \"typeProperties\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41808, "method_name": "propertiesUpdate", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward propertiesUpdate(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        checkAllowedQueueIds(form);\n\n        ProcessTypeDAO typeDAO = new ProcessTypeDAO(con);\n        ConfigDAO configDao = new ConfigDAO(con);\n\n        ProcessType type = typeDAO.getProcessType(form.getId());\n        if (type != null) {\n            TypeProperties properties = type.getProperties();\n\n            String[] beginGroupArr = form.getParamArray(\"beginGroupRole\");\n            String[] allowedGroupArr = form.getParamArray(\"allowedGroupRole\");\n\n            properties.setCreateStatus(Utils.parseInt(form.getParam(\"create_status\")));\n            properties.setCloseStatusIds(Utils.toIntegerSet(form.getParam(\"close_status\", \"\")));\n            properties.setScriptName(Utils.maskNull(form.getParam(\"script_name\")));\n            properties.setStatusIds(form.getSelectedValuesList(\"status\"));\n            properties.setParameterIds(form.getSelectedValuesList(\"param\"));\n            properties.setAllowedGroups(ProcessGroup.parseStringArray(allowedGroupArr));\n            properties.setConfig(form.getParam(\"config\"));\n            properties.setGroups(ProcessGroup.parseStringArray(beginGroupArr));\n            \n            // \u043f\u0440\u0438 \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0435\u0439 \u0444\u043e\u0440\u043c\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u043e\u0441\u043b\u0435 \u0440\u0435\u0434\u0438\u0440\u0435\u043a\u0442\u0430 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442 \u0444\u043e\u0440\u043c\u0430 \u0431\u0435\u0437 POST \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\n            if (properties.getConfig() == null) {\n                throw new BGException(\"\u041f\u043e\u043f\u044b\u0442\u043a\u0430 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u043f\u0443\u0441\u0442\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438.\");\n            }\n            \n            checkModifyed(properties.getLastModify(), form);\n            \n            Preferences.processIncludes(configDao, properties.getConfig(), true);\n\n            typeDAO.updateTypeProperties(type);\n            ProcessTypeCache.flush(con);\n\n            transactionCheck(mapping, form, con);\n        }\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41809, "method_name": "transactionCheck", "class_name": "ProcessAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["BGException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void transactionCheck(ActionMapping mapping, DynActionForm form, Connection con) throws BGException {\n        checkAllowedQueueIds(form);\n\n        ProcessTypeDAO typeDAO = new ProcessTypeDAO(con);\n\n        ArrayHashMap paramMap = form.getParam();\n\n        String[] matrixParamArray = form.getParamArray(\"matrix\");\n\n        if (matrixParamArray != null) {\n            int id = Utils.parseInt(paramMap.get(\"id\"), -1);\n            if (id > 0) {\n                ProcessType type = typeDAO.getProcessType(id);\n                TypeProperties properties = type.getProperties();\n\n                for (int i = 0; i < matrixParamArray.length; i++) {\n                    String[] paramArray = matrixParamArray[i].split(\"-\");\n\n                    int fromStatus = Utils.parseInt(paramArray[0]);\n                    int toStatus = Utils.parseInt(paramArray[1]);\n                    boolean enable = Utils.parseBoolean(paramArray[2]);\n\n                    TransactionProperties transProp = properties.getTransactionProperties(fromStatus, toStatus);\n                    transProp.setEnable(enable);\n                }\n\n                typeDAO.updateTypeProperties(type);\n                ProcessTypeCache.flush(con);\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41810, "method_name": "checkAllowedQueueIds", "class_name": "ProcessAction", "params": ["DynActionForm"], "throws": ["BGMessageException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkAllowedQueueIds(DynActionForm form) throws BGMessageException {\n        Set<Integer> queueIds = Utils.toIntegerSet(form.getPermission().get(\"allowedQueueIds\"));\n        if (CollectionUtils.isNotEmpty(queueIds) && !queueIds.contains(form.getId())) {\n            throw new BGMessageException(\"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0447\u0435\u0440\u0435\u0434\u044c\u044e \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u0430.\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/ProcessAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 41811, "method_name": "main", "class_name": "Rili", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\n\t{\n\t\tLocalDate date = LocalDate.now();\n\t\tint month = date.getMonthValue();\n\t\tint today = date.getDayOfMonth();\n\t\t\n\t\tdate = date.minusDays(today-1);//Set to start of month\n\t\tDayOfWeek weekday = date.getDayOfWeek();\n\t\tint value = weekday.getValue();//1 = Monday, . . .7 = Sunday\n\t\t\n\t\tSystem.out.println(\"Mon Tue Wed Thu Fri Sat Sun\");\n\t\tfor (int i = 1; i < value; i++)\n\t\t\tSystem.out.print(\"    \");\n\t\twhile (date.getMonthValue() == month)\n\t\t{\n\t\t\tSystem.out.printf(\"%3d\", date.getDayOfMonth());\n\t\t\tif (date.getDayOfMonth() == today)\n\t\t\t\tSystem.out.print(\"*\");\n\t\t\telse\n\t\t\t\tSystem.out.print(\" \");\n\t\t\tdate = date.plusDays(1);\n\t\t\tif (date.getDayOfWeek().getValue() == 1) System.out.println();\n\t\t}\n\t\tif (date.getDayOfWeek().getValue() != 1) System.out.println();\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/Rili.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41812, "method_name": "commence", "class_name": "AjaxAuthenticationEntryPoint", "params": ["HttpServletRequest", "HttpServletResponse", "AuthenticationException"], "throws": ["IOException", "ServletException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void commence(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, AuthenticationException e) throws IOException, ServletException {\n        httpServletResponse.setCharacterEncoding(\"UTF-8\");//\u8bbe\u7f6e\u670d\u52a1\u5668\u7684\u7f16\u7801\uff0c\u9ed8\u8ba4\u662fISO-8859-1\n        httpServletResponse.setContentType(\"application/json; charset = utf-8\");//\u544a\u8bc9\u6d4f\u89c8\u5668\u670d\u52a1\u5668\u7684\u7f16\u7801\u683c\u5f0f\n        httpServletResponse.getWriter().write(new Gson().toJson(ApiResponse.ofStatus(ApiResponseEnum.NOT_LOGIN)));\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/security/ajax_login/AjaxAuthenticationEntryPoint.java", "stars": "3", "class_props": {"extends": null, "implements": ["AuthenticationEntryPoint"], "modifiers": ["public"]}}, {"id": 41813, "method_name": "checkIfValueDuplicate", "class_name": "ListUtil", "params": ["List<String>", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean checkIfValueDuplicate(List<String> aList,\n                                                boolean caseSensitive) {\n        if (null == aList || aList.isEmpty()) {\n            throw DataXException.asDataXException(CommonErrorCode.CONFIG_ERROR,\n                    \"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u6709\u8bef\uff0cList\u4e0d\u80fd\u4e3a\u7a7a.\");\n        }\n\n        try {\n            makeSureNoValueDuplicate(aList, caseSensitive);\n        } catch (Exception e) {\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/ListUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41814, "method_name": "makeSureNoValueDuplicate", "class_name": "ListUtil", "params": ["List<String>", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void makeSureNoValueDuplicate(List<String> aList,\n                                                boolean caseSensitive) {\n        if (null == aList || aList.isEmpty()) {\n            throw new IllegalArgumentException(\"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u6709\u8bef, List\u4e0d\u80fd\u4e3a\u7a7a.\");\n        }\n\n        if (1 == aList.size()) {\n            return;\n        } else {\n            List<String> list = null;\n            if (!caseSensitive) {\n                list = valueToLowerCase(aList);\n            } else {\n                list = new ArrayList<String>(aList);\n            }\n\n            Collections.sort(list);\n\n            for (int i = 0, len = list.size() - 1; i < len; i++) {\n                if (list.get(i).equals(list.get(i + 1))) {\n                    throw DataXException\n                            .asDataXException(\n                                    CommonErrorCode.CONFIG_ERROR,\n                                    String.format(\n                                            \"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u4fe1\u606f\u6709\u8bef, String:[%s] \u4e0d\u5141\u8bb8\u91cd\u590d\u51fa\u73b0\u5728\u5217\u8868\u4e2d: [%s].\",\n                                            list.get(i),\n                                            StringUtils.join(aList, \",\")));\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/ListUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41815, "method_name": "checkIfBInA", "class_name": "ListUtil", "params": ["List<String>", "List<String>", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean checkIfBInA(List<String> aList, List<String> bList,\n                                      boolean caseSensitive) {\n        if (null == aList || aList.isEmpty() || null == bList\n                || bList.isEmpty()) {\n            throw new IllegalArgumentException(\"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u6709\u8bef, List\u4e0d\u80fd\u4e3a\u7a7a.\");\n        }\n\n        try {\n            makeSureBInA(aList, bList, caseSensitive);\n        } catch (Exception e) {\n            return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/ListUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41816, "method_name": "makeSureBInA", "class_name": "ListUtil", "params": ["List<String>", "List<String>", "boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void makeSureBInA(List<String> aList, List<String> bList,\n                                    boolean caseSensitive) {\n        if (null == aList || aList.isEmpty() || null == bList\n                || bList.isEmpty()) {\n            throw new IllegalArgumentException(\"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u6709\u8bef, List\u4e0d\u80fd\u4e3a\u7a7a.\");\n        }\n\n        List<String> all = null;\n        List<String> part = null;\n\n        if (!caseSensitive) {\n            all = valueToLowerCase(aList);\n            part = valueToLowerCase(bList);\n        } else {\n            all = new ArrayList<String>(aList);\n            part = new ArrayList<String>(bList);\n        }\n\n        for (String oneValue : part) {\n            if (!all.contains(oneValue)) {\n                throw DataXException\n                        .asDataXException(\n                                CommonErrorCode.CONFIG_ERROR,\n                                String.format(\n                                        \"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u4fe1\u606f\u6709\u8bef, String:[%s] \u4e0d\u5b58\u5728\u4e8e\u5217\u8868\u4e2d:[%s].\",\n                                        oneValue, StringUtils.join(aList, \",\")));\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/ListUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41817, "method_name": "checkIfValueSame", "class_name": "ListUtil", "params": ["List<Boolean>"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean checkIfValueSame(List<Boolean> aList) {\n        if (null == aList || aList.isEmpty()) {\n            throw new IllegalArgumentException(\"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u6709\u8bef, List\u4e0d\u80fd\u4e3a\u7a7a.\");\n        }\n\n        if (1 == aList.size()) {\n            return true;\n        } else {\n            Boolean firstValue = aList.get(0);\n            for (int i = 1, len = aList.size(); i < len; i++) {\n                if (firstValue.booleanValue() != aList.get(i).booleanValue()) {\n                    return false;\n                }\n            }\n            return true;\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/ListUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41818, "method_name": "valueToLowerCase", "class_name": "ListUtil", "params": ["List<String>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<String>", "snippet": "    public static List<String> valueToLowerCase(List<String> aList) {\n        if (null == aList || aList.isEmpty()) {\n            throw new IllegalArgumentException(\"\u60a8\u63d0\u4f9b\u7684\u4f5c\u4e1a\u914d\u7f6e\u6709\u8bef, List\u4e0d\u80fd\u4e3a\u7a7a.\");\n        }\n        List<String> result = new ArrayList<String>(aList.size());\n        for (String oneValue : aList) {\n            result.add(null != oneValue ? oneValue.toLowerCase() : null);\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/common/util/ListUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 41819, "method_name": "getName", "class_name": "ServletCookie", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName()\n  {\n    return cookie.getName();\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletCookie.java", "stars": "10", "class_props": {"extends": null, "implements": ["Cookie"], "modifiers": ["public"]}}, {"id": 41820, "method_name": "getValue", "class_name": "ServletCookie", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getValue()\n  {\n    return cookie.getValue();\n  }", "url": "https://raw.githubusercontent.com/GuntherRademacher/rr/master/src/main/java/de/bottlecaps/webapp/servlet/ServletCookie.java", "stars": "10", "class_props": {"extends": null, "implements": ["Cookie"], "modifiers": ["public"]}}, {"id": 41821, "method_name": "main", "class_name": "LocaleStudy", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        Locale loc = new Locale(\"en\",\"US\");\n        Locale myloc = Locale.getDefault();\n        System.out.println(myloc.toString());\n        ResourceBundle resource = ResourceBundle.getBundle(\"javaSenior.Messages\",loc);\n        ResourceBundle resource1 = ResourceBundle.getBundle(\"javaSenior.Messages\");\n        String val = resource.getString(\"info\");\n        String val1 = resource1.getString(\"info\");\n        System.out.println(MessageFormat.format(val,\"hzc\"));\n        System.out.println(val1);\n}", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/LocaleStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41822, "method_name": "getUnknownFields", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "com", "snippet": "  public final com.google.protobuf.UnknownFieldSet\n  getUnknownFields() {\n    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41823, "method_name": "getDescriptor", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "  public static final com.google.protobuf.Descriptors.Descriptor\n      getDescriptor() {\n    return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_descriptor;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41824, "method_name": "internalGetFieldAccessorTable", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n      internalGetFieldAccessorTable() {\n    return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_fieldAccessorTable\n        .ensureFieldAccessorsInitialized(\n            generated.io.grpc.examples.helloworld.HelloRequest.class, generated.io.grpc.examples.helloworld.HelloRequest.Builder.class);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41825, "method_name": "getName", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "  public java.lang.String getName() {\n    java.lang.Object ref = name_;\n    if (ref instanceof java.lang.String) {\n      return (java.lang.String) ref;\n    } else {\n      com.google.protobuf.ByteString bs = \n          (com.google.protobuf.ByteString) ref;\n      java.lang.String s = bs.toStringUtf8();\n      name_ = s;\n      return s;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41826, "method_name": "getNameBytes", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.ByteString\n      getNameBytes() {\n    java.lang.Object ref = name_;\n    if (ref instanceof java.lang.String) {\n      com.google.protobuf.ByteString b = \n          com.google.protobuf.ByteString.copyFromUtf8(\n              (java.lang.String) ref);\n      name_ = b;\n      return b;\n    } else {\n      return (com.google.protobuf.ByteString) ref;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41827, "method_name": "isInitialized", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "  public final boolean isInitialized() {\n    byte isInitialized = memoizedIsInitialized;\n    if (isInitialized == 1) return true;\n    if (isInitialized == 0) return false;\n\n    memoizedIsInitialized = 1;\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41828, "method_name": "writeTo", "class_name": "HelloRequest", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void writeTo(com.google.protobuf.CodedOutputStream output)\n                      throws java.io.IOException {\n    if (!getNameBytes().isEmpty()) {\n      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, name_);\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41829, "method_name": "getSerializedSize", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSerializedSize() {\n    int size = memoizedSize;\n    if (size != -1) return size;\n\n    size = 0;\n    if (!getNameBytes().isEmpty()) {\n      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, name_);\n    }\n    memoizedSize = size;\n    return size;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41830, "method_name": "equals", "class_name": "HelloRequest", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(final java.lang.Object obj) {\n    if (obj == this) {\n     return true;\n    }\n    if (!(obj instanceof generated.io.grpc.examples.helloworld.HelloRequest)) {\n      return super.equals(obj);\n    }\n    generated.io.grpc.examples.helloworld.HelloRequest other = (generated.io.grpc.examples.helloworld.HelloRequest) obj;\n\n    boolean result = true;\n    result = result && getName()\n        .equals(other.getName());\n    return result;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41831, "method_name": "hashCode", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    if (memoizedHashCode != 0) {\n      return memoizedHashCode;\n    }\n    int hash = 41;\n    hash = (19 * hash) + getDescriptorForType().hashCode();\n    hash = (37 * hash) + NAME_FIELD_NUMBER;\n    hash = (53 * hash) + getName().hashCode();\n    hash = (29 * hash) + unknownFields.hashCode();\n    memoizedHashCode = hash;\n    return hash;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41832, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(\n      com.google.protobuf.ByteString data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41833, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(\n      com.google.protobuf.ByteString data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41834, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(byte[] data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41835, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(\n      byte[] data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41836, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41837, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41838, "method_name": "parseDelimitedFrom", "class_name": "HelloRequest", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseDelimitedFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41839, "method_name": "parseDelimitedFrom", "class_name": "HelloRequest", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseDelimitedFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41840, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(\n      com.google.protobuf.CodedInputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41841, "method_name": "parseFrom", "class_name": "HelloRequest", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest parseFrom(\n      com.google.protobuf.CodedInputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41842, "method_name": "newBuilderForType", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41843, "method_name": "newBuilder", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder() {\n    return DEFAULT_INSTANCE.toBuilder();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41844, "method_name": "newBuilder", "class_name": "HelloRequest", "params": ["generated"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder(generated.io.grpc.examples.helloworld.HelloRequest prototype) {\n    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41845, "method_name": "toBuilder", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder toBuilder() {\n    return this == DEFAULT_INSTANCE\n        ? new Builder() : new Builder().mergeFrom(this);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41846, "method_name": "newBuilderForType", "class_name": "HelloRequest", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "  protected Builder newBuilderForType(\n      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n    Builder builder = new Builder(parent);\n    return builder;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41847, "method_name": "getDefaultInstance", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.io.grpc.examples.helloworld.HelloRequest getDefaultInstance() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41848, "method_name": "parser", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "  public static com.google.protobuf.Parser<HelloRequest> parser() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41849, "method_name": "getParserForType", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.Parser<HelloRequest> getParserForType() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41850, "method_name": "getDefaultInstanceForType", "class_name": "HelloRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "  public generated.io.grpc.examples.helloworld.HelloRequest getDefaultInstanceForType() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["HelloRequestOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 41851, "method_name": "getDescriptor", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41852, "method_name": "internalGetFieldAccessorTable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              generated.io.grpc.examples.helloworld.HelloRequest.class, generated.io.grpc.examples.helloworld.HelloRequest.Builder.class);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41853, "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void maybeForceBuilderInitialization() {\n      if (com.google.protobuf.GeneratedMessageV3\n              .alwaysUseFieldBuilders) {\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41854, "method_name": "clear", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clear() {\n      super.clear();\n      name_ = \"\";\n\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41855, "method_name": "getDescriptorForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Descriptors.Descriptor\n        getDescriptorForType() {\n      return generated.io.grpc.examples.helloworld.HelloWorldProto.internal_static_helloworld_HelloRequest_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41856, "method_name": "getDefaultInstanceForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.io.grpc.examples.helloworld.HelloRequest getDefaultInstanceForType() {\n      return generated.io.grpc.examples.helloworld.HelloRequest.getDefaultInstance();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41857, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.io.grpc.examples.helloworld.HelloRequest build() {\n      generated.io.grpc.examples.helloworld.HelloRequest result = buildPartial();\n      if (!result.isInitialized()) {\n        throw newUninitializedMessageException(result);\n      }\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41858, "method_name": "buildPartial", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.io.grpc.examples.helloworld.HelloRequest buildPartial() {\n      generated.io.grpc.examples.helloworld.HelloRequest result = new generated.io.grpc.examples.helloworld.HelloRequest(this);\n      result.name_ = name_;\n      onBuilt();\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41859, "method_name": "clone", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clone() {\n      return (Builder) super.clone();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41860, "method_name": "setField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.setField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41861, "method_name": "clearField", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearField(\n        com.google.protobuf.Descriptors.FieldDescriptor field) {\n      return (Builder) super.clearField(field);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41862, "method_name": "clearOneof", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearOneof(\n        com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n      return (Builder) super.clearOneof(oneof);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41863, "method_name": "setRepeatedField", "class_name": "Builder", "params": ["com", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        int index, Object value) {\n      return (Builder) super.setRepeatedField(field, index, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41864, "method_name": "addRepeatedField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder addRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.addRepeatedField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41865, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(com.google.protobuf.Message other) {\n      if (other instanceof generated.io.grpc.examples.helloworld.HelloRequest) {\n        return mergeFrom((generated.io.grpc.examples.helloworld.HelloRequest)other);\n      } else {\n        super.mergeFrom(other);\n        return this;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41866, "method_name": "mergeFrom", "class_name": "Builder", "params": ["generated"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(generated.io.grpc.examples.helloworld.HelloRequest other) {\n      if (other == generated.io.grpc.examples.helloworld.HelloRequest.getDefaultInstance()) return this;\n      if (!other.getName().isEmpty()) {\n        name_ = other.name_;\n        onChanged();\n      }\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41867, "method_name": "isInitialized", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {\n      return true;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41868, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      generated.io.grpc.examples.helloworld.HelloRequest parsedMessage = null;\n      try {\n        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n      } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n        parsedMessage = (generated.io.grpc.examples.helloworld.HelloRequest) e.getUnfinishedMessage();\n        throw e.unwrapIOException();\n      } finally {\n        if (parsedMessage != null) {\n          mergeFrom(parsedMessage);\n        }\n      }\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41869, "method_name": "getName", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.lang.String getName() {\n      java.lang.Object ref = name_;\n      if (!(ref instanceof java.lang.String)) {\n        com.google.protobuf.ByteString bs =\n            (com.google.protobuf.ByteString) ref;\n        java.lang.String s = bs.toStringUtf8();\n        name_ = s;\n        return s;\n      } else {\n        return (java.lang.String) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41870, "method_name": "getNameBytes", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString\n        getNameBytes() {\n      java.lang.Object ref = name_;\n      if (ref instanceof String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        name_ = b;\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41871, "method_name": "setName", "class_name": "Builder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setName(\n        java.lang.String value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  \n      name_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41872, "method_name": "clearName", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearName() {\n      \n      name_ = getDefaultInstance().getName();\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41873, "method_name": "setNameBytes", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setNameBytes(\n        com.google.protobuf.ByteString value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  checkByteStringIsUtf8(value);\n      \n      name_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41874, "method_name": "setUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder setUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41875, "method_name": "mergeUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder mergeUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/io/grpc/examples/helloworld/HelloRequest.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 41876, "method_name": "main", "class_name": "BreakAString", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t//            012345\n\t\tString str = \"hello\";\n\t\t\n\t\tint len = str.length(); // 5\n\t\tint index = 0;\n\t\twhile(index < len) {\n\t\t\t//                              5\n\t\t\tSystem.out.println(str.charAt(index));\n\t\t\tindex++;\n\t\t}\n\n\t\t/**\n\t\t * b\n\t\t * r\n\t\t * e\n\t\t * a\n\t\t * k\n\t\t * d\n\t\t * o\n\t\t * w\n\t\t * n\n\t\t */\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day13/BreakAString.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41877, "method_name": "main", "class_name": "PyramidReverse", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t//                01234567891011\n\t\tString pyramid = \"############\";\n\t\t\n\t\t/* ############\n\t\t * ###########\n\t\t * ##########\n\t\t * #########\n\t\t * ########\n\t\t * #######\n\t\t * ######\n\t\t * #####\n\t\t * ####\n\t\t * ###\n\t\t * ##\n\t\t * #\n\t\t */\n\t\t\n//\t\t System.out.println(pyramid.substring(0, pyramid.length() - 0));\n//\t\t System.out.println(pyramid.substring(0, pyramid.length() - 1));\n//\t\t System.out.println(pyramid.substring(0, pyramid.length() - 2));\n//\t\t System.out.println(pyramid.substring(0, pyramid.length() - 3));\n//\t\t System.out.println(pyramid.substring(0, pyramid.length() - 4));\n//\t\t System.out.println(pyramid.substring(0, pyramid.length() - 5));\n\t\t \n\t\t for(int i = 0; i < pyramid.length(); i++) {\n\t\t\t System.out.println(pyramid.substring(0, pyramid.length() - i));\n\t\t }\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day15/PyramidReverse.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41878, "method_name": "onCreateView", "class_name": "SlideshowFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(@NonNull LayoutInflater inflater,\n                             ViewGroup container, Bundle savedInstanceState) {\n        slideshowViewModel =\n                ViewModelProviders.of(this).get(SlideshowViewModel.class);\n        View root = inflater.inflate(R.layout.fragment_slideshow, container, false);\n        final TextView textView = root.findViewById(R.id.text_slideshow);\n        slideshowViewModel.getText().observe(getViewLifecycleOwner(), new Observer<String>() {\n            @Override\n            public void onChanged(@Nullable String s) {\n                textView.setText(s);\n            }\n        });\n        return root;\n    }", "url": "https://raw.githubusercontent.com/dahilu/BeautyOverview/master/app/src/main/java/com/example/beautyoverview/ui/slideshow/SlideshowFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 41879, "method_name": "valueChanged", "class_name": "MechProjectListener", "params": ["ListSelectionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void valueChanged(ListSelectionEvent e) {\n        String path= ProjectViewer.mechString+\"\\\\\"+ GUI.pvv4.elementAt(GUI.pvl4.getSelectedIndex()).toString();\n        File file=new File(path);\n        StringBuilder result = new StringBuilder();\n        BufferedReader bf= null;\n        System.out.println(path);\n        try {\n            bf = new BufferedReader(new FileReader(file));\n            String s;\n            BufferedReader bf1=new BufferedReader(new FileReader(file));\n            String s1;\n            while((s1 = bf1.readLine())!=null){\n                result.append(System.lineSeparator()+s1);\n            }\n            bf.close();\n            GUI.jt1.setText(result.toString());\n        } catch (IOException ex) {\n            ex.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/4156/MindustryModMaker/master/src/Listener/MechProjectListener.java", "stars": "2", "class_props": {"extends": null, "implements": ["ListSelectionListener"], "modifiers": ["public"]}}, {"id": 41880, "method_name": "getChildren", "class_name": "IdTitleTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitleTree>", "snippet": "    public List<IdTitleTree> getChildren() {\n        return children;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41881, "method_name": "setChildren", "class_name": "IdTitleTree", "params": ["List<IdTitleTree>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChildren(List<IdTitleTree> children) {\n        this.children = children;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41882, "method_name": "getParentId", "class_name": "IdTitleTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getParentId() {\n        return parentId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41883, "method_name": "setParentId", "class_name": "IdTitleTree", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParentId(String parentId) {\n        this.parentId = parentId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41884, "method_name": "getChild", "class_name": "IdTitleTree", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "IdTitleTree", "snippet": "    public IdTitleTree getChild(String id) {\n        return getChild(this, id);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41885, "method_name": "addChild", "class_name": "IdTitleTree", "params": ["IdTitleTree"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addChild(IdTitleTree child) {\n        children.add(child);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41886, "method_name": "getChild", "class_name": "IdTitleTree", "params": ["IdTitleTree", "String"], "throws": null, "modifiers": ["private"], "return_type": "IdTitleTree", "snippet": "    private IdTitleTree getChild(IdTitleTree root, String id) {\n        for (IdTitleTree child : root.getChildren()) {\n            if (id.equals(child.getId())) {\n                return child;\n            }\n            IdTitleTree ch = getChild(child, id);\n            if (ch != null) {\n                return ch;\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41887, "method_name": "getId", "class_name": "IdTitleTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41888, "method_name": "setId", "class_name": "IdTitleTree", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(String id) {\n        this.id = id;\n\n        ids = new ArrayList<>();\n        for (String idPart : id.split(\"\\\\.\")) {\n            ids.add(Utils.parseInt(idPart));\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41889, "method_name": "getTitle", "class_name": "IdTitleTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41890, "method_name": "setTitle", "class_name": "IdTitleTree", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41891, "method_name": "getIds", "class_name": "IdTitleTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> getIds() {\n        return ids;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/IdTitleTree.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41892, "method_name": "getWorkType", "class_name": "CallboardCache", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "WorkType", "snippet": "    public static WorkType getWorkType(int id) {\n        return holder.getInstance().workTypeMap.get(id);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/CallboardCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 41893, "method_name": "getWorkTypeMap", "class_name": "CallboardCache", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Map<Integer,WorkType>", "snippet": "    public static Map<Integer, WorkType> getWorkTypeMap() {\n        return holder.getInstance().workTypeMap;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/CallboardCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 41894, "method_name": "flush", "class_name": "CallboardCache", "params": ["Connection"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void flush(Connection con) {\n        holder.flush(con);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/CallboardCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 41895, "method_name": "newInstance", "class_name": "CallboardCache", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "CallboardCache", "snippet": "    protected CallboardCache newInstance() {\n        CallboardCache result = new CallboardCache();\n\n        Connection con = Setup.getSetup().getDBConnectionFromPool();\n        try {\n            WorkTypeDAO typeDao = new WorkTypeDAO(con);\n\n            result.workTypeMap = typeDao.getWorkTypeMap();\n        } catch (Exception ex) {\n            log.error(ex.getMessage(), ex);\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/cache/CallboardCache.java", "stars": "12", "class_props": {"extends": "Cache", "implements": null, "modifiers": ["public"]}}, {"id": 41896, "method_name": "getHomeList", "class_name": "HomeModelRespository", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getHomeList(int page) {\n        if (null == baseControlPresenter) {\n            throw new NullPointerException(\"\u8bf7\u6c42\u670d\u52a1\u672a\u521b\u5efa!\");\n        }\n        baseControlPresenter.requestData(\"/article/list/\" + page + \"/json\",\n                new TypeCallBack<HomeBean>() {},  null, true);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/modules/module_main/src/main/java/com/hl/modules_main/model/respository/HomeModelRespository.java", "stars": "14", "class_props": {"extends": null, "implements": ["IHomeModel"], "modifiers": ["public"]}}, {"id": 41897, "method_name": "setInstance", "class_name": "AbstractReflection", "params": ["AbstractReflection"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "void", "snippet": "\tpublic synchronized static void setInstance (AbstractReflection abstractReflection) {\n\t\tinstance = abstractReflection;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41898, "method_name": "getInstance", "class_name": "AbstractReflection", "params": [], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "AbstractReflection", "snippet": "\tpublic synchronized static AbstractReflection getInstance () {\n\t\treturn instance;\n\t}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41899, "method_name": "getField", "class_name": "AbstractReflection", "params": ["Object", "String"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Object", "snippet": "\tpublic abstract Object getField (Object obj, String name);\n\n\t/** Returns an opaque handle to the method with the given name best matching the signature implied by the given arguments, or\n\t * null if the method could not be found. If obj is an instance of Class, the matching static method is returned. If the name\n\t * is null and the object is a {@link FunctionalInterface}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41900, "method_name": "getMethod", "class_name": "AbstractReflection", "params": ["Object", "String", "Object"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Object", "snippet": "\tpublic abstract Object getMethod (Object obj, String name, Object... arguments);\n\t\n\tpublic abstract Object getExtensionMethod (Object obj, String name,Object ... arguments);\n\t\n\tpublic abstract void registerExtensionClass(Class<?> target,Class<?> clazz);\n\n\t/** Returns the value of the field from the object. The field must have been previously retrieved via\n\t * {@link #getField(Object, String)}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41901, "method_name": "getExtensionMethod", "class_name": "AbstractReflection", "params": ["Object", "String", "Object"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Object", "snippet": "\tpublic abstract Object getExtensionMethod (Object obj, String name,Object ... arguments);\n\t\n\tpublic abstract void registerExtensionClass(Class<?> target,Class<?> clazz);\n\n\t/** Returns the value of the field from the object. The field must have been previously retrieved via\n\t * {@link #getField(Object, String)}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41902, "method_name": "registerExtensionClass", "class_name": "AbstractReflection", "params": ["Class<?>", "Class<?>"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "\tpublic abstract void registerExtensionClass(Class<?> target,Class<?> clazz);\n\n\t/** Returns the value of the field from the object. The field must have been previously retrieved via\n\t * {@link #getField(Object, String)}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41903, "method_name": "getFieldValue", "class_name": "AbstractReflection", "params": ["Object", "Object"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Object", "snippet": "\tpublic abstract Object getFieldValue (Object obj, Object field);\n\n\t/** Calls the method on the object with the given arguments. The method must have been previously retrieved via\n\t * {@link #getMethod(Object, String, Object...)}", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41904, "method_name": "callMethod", "class_name": "AbstractReflection", "params": ["Object", "Object", "Object"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "Object", "snippet": "\tpublic abstract Object callMethod (Object obj, Object method, Object... arguments);\n}\n\n", "url": "https://raw.githubusercontent.com/javamxd/ssssssss/master/src/main/java/org/ssssssss/expression/interpreter/AbstractReflection.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 41905, "method_name": "name", "class_name": "CombatStackSpaceAmoeba", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String name()                { return text(\"SPACE_AMOEBA\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41906, "method_name": "isMonster", "class_name": "CombatStackSpaceAmoeba", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isMonster()          { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41907, "method_name": "isArmed", "class_name": "CombatStackSpaceAmoeba", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isArmed()            { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41908, "method_name": "beginTurn", "class_name": "CombatStackSpaceAmoeba", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void beginTurn() {\n        super.beginTurn();\n        // ok, we are splitting\n        if ((maxHits - hits) >= DAMAGE_FOR_SPLIT) {\n            float newMaxHits = (maxHits - DAMAGE_FOR_SPLIT) / 2;\n            hits = maxHits = newMaxHits;\n            ((AmoebaShipCaptain)captain).splitAmoeba(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41909, "method_name": "hostileTo", "class_name": "CombatStackSpaceAmoeba", "params": ["CombatStack", "StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hostileTo(CombatStack st, StarSystem sys)      { return !(st instanceof CombatStackSpaceAmoeba); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41910, "method_name": "canEat", "class_name": "CombatStackSpaceAmoeba", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canEat(CombatStack st)  { return (st instanceof CombatStackShip) || (st instanceof CombatStackColony); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41911, "method_name": "ignoreRepulsors", "class_name": "CombatStackSpaceAmoeba", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean ignoreRepulsors()    { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41912, "method_name": "canAttack", "class_name": "CombatStackSpaceAmoeba", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canAttack(CombatStack target)  { \n        if (target.destroyed()) \n            return false;\n        if (target.isColony() && !target.isArmed())\n            return false;\n        return (x == target.x) && (y == target.y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41913, "method_name": "selectBestWeapon", "class_name": "CombatStackSpaceAmoeba", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean selectBestWeapon(CombatStack target)       { return canAttack(target); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41914, "method_name": "fireWeapon", "class_name": "CombatStackSpaceAmoeba", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fireWeapon(CombatStack target)  { \n        if ((x == target.x) && (y == target.y)) \n            eatShips(target);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41915, "method_name": "eatShips", "class_name": "CombatStackSpaceAmoeba", "params": ["CombatStack"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void eatShips(CombatStack st) {\n        if (st == null)\n            return;\n        if (!st.isShip() && !st.isColony())\n            return;\n        \n        // only eats ships\n        if (st.isShip()) {\n            st.drawFadeOut(.025f);\n            st.mgr.destroyStack(st); \n        }\n        else if (st.isColony()) {\n            CombatStackColony cStack = (CombatStackColony) st;\n            st.mgr.destroyStack(st);\n            RandomEventSpaceAmoeba.monster.destroyColony(st.mgr.system());\n            cStack.colonyDestroyed = true;\n        }\n\n        st.num = 0;\n\n        // stop and enjoy the meal\n        move = 0;\n        if (st.mgr.ui != null)\n            st.mgr.ui.paintAllImmediately();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41916, "method_name": "endTurn", "class_name": "CombatStackSpaceAmoeba", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void endTurn() {\n        super.endTurn();\n            \n\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41917, "method_name": "moveTo", "class_name": "CombatStackSpaceAmoeba", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean moveTo(int x1, int y1) {\n        CombatStack potentialFood = mgr.stackAt(x1, y1);\n        boolean stillAlive = super.moveTo(x1, y1);\n        \n        // if we made it successfully to the new dest\n        // and there happens to be a ship here, eat it\n        if (stillAlive) \n            eatShips(potentialFood);\n        return stillAlive;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41918, "method_name": "takeDamage", "class_name": "CombatStackSpaceAmoeba", "params": ["float", "float"], "throws": null, "modifiers": ["protected"], "return_type": "float", "snippet": "    protected float takeDamage(float damage, float shieldAdj) {\n        if (inStasis)\n            return 0;\n        attacked = true;\n\n        // max damage that will trigger a split\n        float maxDamage = hits+DAMAGE_FOR_SPLIT-maxHits;\n        float actualDamage = min(maxDamage, damage);\n        hits -= actualDamage;\n        \n        // if we are on smallest form and are reduced < 0, we are dead\n        if (hits <= 0) {\n            num = 0;\n            mgr.destroyStack(this);\n            return damage;\n        }\n        \n        return actualDamage; \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/combat/CombatStackSpaceAmoeba.java", "stars": "74", "class_props": {"extends": "CombatStack", "implements": null, "modifiers": ["public"]}}, {"id": 41919, "method_name": "send", "class_name": "SSDPClient", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void send(String data) throws IOException {\n        DatagramPacket dp = new DatagramPacket(data.getBytes(), data.length(), multicastGroup);\n\n        datagramSocket.send(dp);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/discovery/provider/ssdp/SSDPClient.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41920, "method_name": "responseReceive", "class_name": "SSDPClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "DatagramPacket", "snippet": "    public DatagramPacket responseReceive() throws IOException {\n        byte[] buf = new byte[1024];\n        DatagramPacket dp = new DatagramPacket(buf, buf.length);\n\n        datagramSocket.receive(dp);\n\n        return dp;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/discovery/provider/ssdp/SSDPClient.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41921, "method_name": "multicastReceive", "class_name": "SSDPClient", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "DatagramPacket", "snippet": "    public DatagramPacket multicastReceive() throws IOException {\n        byte[] buf = new byte[1024];\n        DatagramPacket dp = new DatagramPacket(buf, buf.length);\n\n        multicastSocket.receive(dp);\n\n        return dp;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/discovery/provider/ssdp/SSDPClient.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41922, "method_name": "isConnected", "class_name": "SSDPClient", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isConnected() {\n        return datagramSocket != null && multicastSocket != null && datagramSocket.isConnected() && multicastSocket.isConnected();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/discovery/provider/ssdp/SSDPClient.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41923, "method_name": "close", "class_name": "SSDPClient", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void close() {\n        if (multicastSocket != null) {\n            try {\n                multicastSocket.leaveGroup(multicastGroup, networkInterface);\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n            multicastSocket.close();\n        }\n\n        if (datagramSocket != null) {\n            datagramSocket.disconnect();\n            datagramSocket.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/discovery/provider/ssdp/SSDPClient.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41924, "method_name": "setTimeout", "class_name": "SSDPClient", "params": ["int"], "throws": ["SocketException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimeout(int timeout) throws SocketException {\n        this.timeout = timeout;\n        datagramSocket.setSoTimeout(this.timeout);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/discovery/provider/ssdp/SSDPClient.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41925, "method_name": "getSSDPSearchMessage", "class_name": "SSDPClient", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String getSSDPSearchMessage(String ST) {\n        StringBuilder sb = new StringBuilder();\n\n        sb.append(MSEARCH + NEWLINE);\n        sb.append(\"HOST: \" + MULTICAST_ADDRESS + \":\" + PORT + NEWLINE);\n        sb.append(\"MAN: \\\"ssdp:discover\\\"\" + NEWLINE);\n        sb.append(\"ST: \").append(ST).append(NEWLINE);\n        sb.append(\"MX: \").append(MX).append(NEWLINE);\n        if (ST.contains(\"udap\")) {\n            sb.append(\"USER-AGENT: UDAP/2.0\" + NEWLINE);\n        }\n        sb.append(NEWLINE);\n\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/discovery/provider/ssdp/SSDPClient.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41926, "method_name": "onCreateViewHolder", "class_name": "BackupedProjectsAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "BackupedProjectsAdapter", "snippet": "    public BackupedProjectsAdapter.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View view = inflater.inflate(R.layout.projects_manager_item_project, parent, false);\n        return new BackupedProjectsAdapter.ViewHolder(view);\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/BackupedProjectsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 41927, "method_name": "onBindViewHolder", "class_name": "BackupedProjectsAdapter", "params": ["BackupedProjectsAdapter", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(@NotNull BackupedProjectsAdapter.ViewHolder holder, int position) {\n        if (data.size() != 0) {\n            int lastPos = data.get(position).size() - 1;\n            holder.title.setText(data.get(position).get(lastPos).getProject().getProjectName());\n            holder.subtitle.setText(data.get(position).get(lastPos).getProject().getProjectPackage().concat(\" (\")\n                    .concat(activity.getString(R.string.title_backups_count).concat(\": \").concat(String.valueOf(data.get(position).size())).concat(\")\")));\n            GlideUtil.set(new File(data.get(position).get(lastPos).getProject().getIconPath()), holder.icon, activity);\n            holder.itemView.setOnClickListener(v -> {\n                // init view for dialog (recyclerView)\n                RecyclerView recyclerView = new RecyclerView(activity);\n                recyclerView.setLayoutManager(new LinearLayoutManager(activity));\n                recyclerView.setAdapter(new BackupsProjectAdapter(data.get(position), activity));\n                recyclerView.setNestedScrollingEnabled(false);\n                new AppBottomDialog.Builder(activity)\n                        .setTitle(R.string.title_choose_project_backup_version)\n                        .setTheme(AppBottomDialogUtil.getThemeSettings(activity))\n                        .setContentView(recyclerView)\n                        .show();\n            });\n        } else {\n            holder.title.setText(\"No info\");\n            holder.subtitle.setText(\"No info\");\n            holder.icon.setImageDrawable(activity.getDrawable(R.mipmap.ic_launcher));\n        }\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/BackupedProjectsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 41928, "method_name": "getItemCount", "class_name": "BackupedProjectsAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return data.size();\n    }", "url": "https://raw.githubusercontent.com/justneon33/Sketchcode/master/app/src/main/java/com/sketch/code/two/adapter/recyclerview/BackupedProjectsAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 41929, "method_name": "statusMessage", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String statusMessage()               { return text(\"SYSTEMS_STATUS_COMET\",str(turnsNeeded-turnCount)); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41930, "method_name": "systemKey", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String systemKey()                   { return \"MAIN_PLANET_EVENT_COMET\"; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41931, "method_name": "goodEvent", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean goodEvent()    \t\t{ return false; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41932, "method_name": "repeatable", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean repeatable()    \t\t{ return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41933, "method_name": "notificationText", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String notificationText()    {\n        String s1 = text(\"EVENT_COMET\");\n        s1 = s1.replace(\"[system]\", galaxy().empire(empId).sv.name(sysId));\n        s1 = s1.replace(\"[years]\", str((int)Math.ceil(turnsNeeded-turnCount)));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41934, "method_name": "trigger", "class_name": "RandomEventComet", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void trigger(Empire emp) {\n        List<StarSystem> allSystems = emp.allColonizedSystems();\n        StarSystem targetSystem = random(allSystems);\n        targetSystem.eventKey(systemKey());\n\n        empId = emp.id;\n        sysId = targetSystem.id;\n\n        turnsNeeded = roll(10,15);\n        cometHP = 40*turnsNeeded;\n        galaxy().events().addActiveEvent(this);\n        if (player().knowsOf(empId))\n            GNNNotification.notifyRandomEvent(notificationText(), \"GNN_Event_Comet\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41935, "method_name": "nextTurn", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextTurn() {\n        battleComet();\n\n        StarSystem sys = galaxy().system(sysId);\n        empId = id(sys.empire()); // sometimes system empire changes\n        \n        if (cometHP <= 0) {\n            cometDestroyed();\n            return;\n        }\n\n        turnCount++;\n        if (turnCount == turnsNeeded) {\n            destroyColony();\n            return;\n        }\n\n        if ((turnCount % 5 == 0) && (player().id == empId))\n            GNNNotification.notifyRandomEvent(continuingText(), \"GNN_Event_Comet\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41936, "method_name": "battleComet", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void battleComet() {\n        StarSystem targetSystem = galaxy().system(sysId);\n        List<ShipFleet> fleets = targetSystem.orbitingFleets();\n        for (ShipFleet fl: fleets) {\n            if (fl.isArmed() && fl.empire().alliedWith(empId))\n                inflictDmgFromFleet(fl);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41937, "method_name": "inflictDmgFromFleet", "class_name": "RandomEventComet", "params": ["ShipFleet"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void inflictDmgFromFleet(ShipFleet fl) {\n        float dmgInflicted = 0.0f;\n        Empire empire = galaxy().empire(empId);\n        for (int i = 0; i< ShipDesignLab.MAX_DESIGNS; i++) {\n            if (fl.num(i) > 0) {\n                int size = empire.shipLab().design(i).size();\n                float weight = pow(5, size);\n                dmgInflicted += (fl.num(i)*weight);\n            }\n        }\n        cometHP = max(0, cometHP -dmgInflicted);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41938, "method_name": "continuingText", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String continuingText() {\n        String s1 = text(\"EVENT_COMET_2\");\n        s1 = s1.replace(\"[system]\", galaxy().empire(empId).sv.name(sysId));\n        s1 = s1.replace(\"[years]\", str((int)Math.ceil(turnsNeeded-turnCount)));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41939, "method_name": "goodEndText", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String goodEndText() {\n        String s1 = text(\"EVENT_COMET_3\");\n        s1 = s1.replace(\"[system]\", galaxy().empire(empId).sv.name(sysId));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41940, "method_name": "badEndText", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String badEndText() {\n        String s1 = text(\"EVENT_COMET_4\");\n        s1 = s1.replace(\"[system]\", galaxy().empire(empId).sv.name(sysId));\n        s1 = galaxy().empire(empId).replaceTokens(s1, \"target\");\n        return s1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41941, "method_name": "cometDestroyed", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cometDestroyed() {\n        galaxy().events().removeActiveEvent(this);\n        StarSystem sys = galaxy().system(sysId);\n        sys.clearEvent();\n        \n        session().removePendingNotification(\"GNN_Event_Comet\");\n        if (player().knowsOf(empId)) \n            GNNNotification.notifyRandomEvent(goodEndText(), \"GNN_Event_Comet\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41942, "method_name": "destroyColony", "class_name": "RandomEventComet", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void destroyColony() {\n        galaxy().events().removeActiveEvent(this);\n        StarSystem sys = galaxy().system(sysId);       \n        sys.addEvent(new SystemRandomEvent(\"SYSEVENT_COMET\"));\n        sys.clearEvent();\n        sys.planet().sufferImpactEvent(); // destroys colony, downgrades planet type to Barren\n        if (player().knowsOf(empId)) \n            GNNNotification.notifyRandomEvent(badEndText(), \"GNN_Event_Comet\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/events/RandomEventComet.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable", "RandomEvent"], "modifiers": ["public"]}}, {"id": 41943, "method_name": "onItemLongClick", "class_name": "CellAdapter", "params": ["android", "android", "int", "long"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onItemLongClick (android.widget.AdapterView p0, android.view.View p1, int p2, long p3)\n\t{\n\t\treturn n_onItemLongClick (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41944, "method_name": "n_onItemLongClick", "class_name": "CellAdapter", "params": ["android", "android", "int", "long"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onItemLongClick (android.widget.AdapterView p0, android.view.View p1, int p2, long p3);\n\n\n\tpublic boolean onActionItemClicked (android.view.ActionMode p0, android.view.MenuItem p1)\n\t{\n\t\treturn n_onActionItemClicked (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41945, "method_name": "onActionItemClicked", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onActionItemClicked (android.view.ActionMode p0, android.view.MenuItem p1)\n\t{\n\t\treturn n_onActionItemClicked (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41946, "method_name": "n_onActionItemClicked", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onActionItemClicked (android.view.ActionMode p0, android.view.MenuItem p1);\n\n\n\tpublic boolean onCreateActionMode (android.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onCreateActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41947, "method_name": "onCreateActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onCreateActionMode (android.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onCreateActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41948, "method_name": "n_onCreateActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onCreateActionMode (android.view.ActionMode p0, android.view.Menu p1);\n\n\n\tpublic void onDestroyActionMode (android.view.ActionMode p0)\n\t{\n\t\tn_onDestroyActionMode (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41949, "method_name": "onDestroyActionMode", "class_name": "CellAdapter", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDestroyActionMode (android.view.ActionMode p0)\n\t{\n\t\tn_onDestroyActionMode (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41950, "method_name": "n_onDestroyActionMode", "class_name": "CellAdapter", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDestroyActionMode (android.view.ActionMode p0);\n\n\n\tpublic boolean onPrepareActionMode (android.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onPrepareActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41951, "method_name": "onPrepareActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onPrepareActionMode (android.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onPrepareActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41952, "method_name": "n_onPrepareActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onPrepareActionMode (android.view.ActionMode p0, android.view.Menu p1);\n\n\n\tpublic void onItemClick (android.widget.AdapterView p0, android.view.View p1, int p2, long p3)\n\t{\n\t\tn_onItemClick (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41953, "method_name": "onItemClick", "class_name": "CellAdapter", "params": ["android", "android", "int", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onItemClick (android.widget.AdapterView p0, android.view.View p1, int p2, long p3)\n\t{\n\t\tn_onItemClick (p0, p1, p2, p3);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41954, "method_name": "n_onItemClick", "class_name": "CellAdapter", "params": ["android", "android", "int", "long"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onItemClick (android.widget.AdapterView p0, android.view.View p1, int p2, long p3);\n\n\n\tpublic boolean onActionItemClicked (android.support.v7.view.ActionMode p0, android.view.MenuItem p1)\n\t{\n\t\treturn n_onActionItemClicked (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41955, "method_name": "onActionItemClicked", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onActionItemClicked (android.support.v7.view.ActionMode p0, android.view.MenuItem p1)\n\t{\n\t\treturn n_onActionItemClicked (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41956, "method_name": "n_onActionItemClicked", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onActionItemClicked (android.support.v7.view.ActionMode p0, android.view.MenuItem p1);\n\n\n\tpublic boolean onCreateActionMode (android.support.v7.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onCreateActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41957, "method_name": "onCreateActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onCreateActionMode (android.support.v7.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onCreateActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41958, "method_name": "n_onCreateActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onCreateActionMode (android.support.v7.view.ActionMode p0, android.view.Menu p1);\n\n\n\tpublic void onDestroyActionMode (android.support.v7.view.ActionMode p0)\n\t{\n\t\tn_onDestroyActionMode (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41959, "method_name": "onDestroyActionMode", "class_name": "CellAdapter", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDestroyActionMode (android.support.v7.view.ActionMode p0)\n\t{\n\t\tn_onDestroyActionMode (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41960, "method_name": "n_onDestroyActionMode", "class_name": "CellAdapter", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDestroyActionMode (android.support.v7.view.ActionMode p0);\n\n\n\tpublic boolean onPrepareActionMode (android.support.v7.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onPrepareActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41961, "method_name": "onPrepareActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onPrepareActionMode (android.support.v7.view.ActionMode p0, android.view.Menu p1)\n\t{\n\t\treturn n_onPrepareActionMode (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41962, "method_name": "n_onPrepareActionMode", "class_name": "CellAdapter", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_onPrepareActionMode (android.support.v7.view.ActionMode p0, android.view.Menu p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41963, "method_name": "monodroidAddReference", "class_name": "CellAdapter", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41964, "method_name": "monodroidClearReferences", "class_name": "CellAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/CellAdapter.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono", "android", "android", "android", "android"], "modifiers": ["public", "abstract"]}}, {"id": 41965, "method_name": "onCreatePreferences", "class_name": "MainPreferenceFragment", "params": ["Bundle", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreatePreferences(Bundle savedInstanceState, String rootKey) {\n\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41966, "method_name": "onAttach", "class_name": "MainPreferenceFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(@NonNull Context context) {\n        super.onAttach(context);\n        mActivity = (AppCompatActivity) context;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41967, "method_name": "onCreate", "class_name": "MainPreferenceFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        getPreferenceManager().setSharedPreferencesName(SHARED_PREFERENCES_KEY);\n        addPreferencesFromResource(R.xml.main_preference);\n        SimplePreference whiteListPreference = findPreference(SETTING_WHITE_LIST);\n        if (!FeatureFlags.ENABLE_WHITE_LIST && whiteListPreference != null) {\n            getPreferenceScreen().removePreference(whiteListPreference);\n        }\n        viewModel = ViewModelProviders.of(mActivity).get(UpdatingViewModel.class);\n        subscribeUpdateChecking();\n        fingerprintPreference = findPreference(SETTING_FINGERPRINT);\n        if (!FingerprintKit.isHardwareDetected(mActivity)) {\n            getPreferenceScreen().removePreference(fingerprintPreference);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41968, "method_name": "onResume", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n        versionPreference = findPreference(SETTING_VERSION);\n        if (versionPreference != null) {\n            versionPreference.setTitle(getString(R.string.version) + getAppVersion(mActivity));\n        }\n\n        switchPreference = findPreference(SETTING_PATTERN_UNLOCK);\n        if (switchPreference != null) {\n            switchPreference.setChecked(Utilities.isPatternUnlock(mActivity));\n\n        }\n\n        Looper.getMainLooper().getQueue().addIdleHandler(() -> {\n\n            if (!Utilities.hasUserClickPatternLock(mActivity)) {\n                patternBadgeView = BadgeFactory.create(mActivity)\n                        .setWidthAndHeight(10, 10)\n                        .setBadgeBackground(Color.RED)\n                        .setBadgeGravity(Gravity.END | Gravity.TOP)\n                        .setShape(BadgeView.SHAPE_CIRCLE)\n                        .setSpace(10, 0)\n                        .bind(switchPreference.getViewHolder().findViewById(android.R.id.title));\n            }\n\n            if (fingerprintPreference != null\n                    && !Utilities.hasUserClickFingerprint(mActivity)) {\n                fingerprintBadgeView = BadgeFactory.create(mActivity)\n                        .setWidthAndHeight(10, 10)\n                        .setBadgeBackground(Color.RED)\n                        .setBadgeGravity(Gravity.END | Gravity.TOP)\n                        .setShape(BadgeView.SHAPE_CIRCLE)\n                        .setSpace(10, 0)\n                        .bind(fingerprintPreference.getViewHolder().findViewById(android.R.id.title));\n            }\n            return false;\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41969, "method_name": "subscribeUpdateChecking", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void subscribeUpdateChecking() {\n        viewModel.getUpdateManifest().observe(this, updateManifest -> {\n            manifest = updateManifest;\n            updateVersionPreference();\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41970, "method_name": "update", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void update() {\n        new UpdatingHelper(mActivity,true);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41971, "method_name": "restartApplication", "class_name": "MainPreferenceFragment", "params": ["AppCompatActivity"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void restartApplication(AppCompatActivity activity) {\n        final Intent intent = ((Context) activity).getPackageManager().getLaunchIntentForPackage(((Context) activity).getPackageName());\n        Objects.requireNonNull(intent).addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);\n        activity.startActivity(intent);\n        android.os.Process.killProcess(android.os.Process.myPid());\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41972, "method_name": "updateVersionPreference", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateVersionPreference() {\n        versionPreference = findPreference(SETTING_VERSION);\n        if (versionPreference != null) {\n            versionPreference.setRemindText(manifest != null ? getString(R.string.updatable) : \"\");\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41973, "method_name": "getAppVersion", "class_name": "MainPreferenceFragment", "params": ["Context"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getAppVersion(Context context) {\n        String version = \"\";\n        try {\n            PackageInfo info = context.getPackageManager().getPackageInfo(context.getPackageName(), 0);\n            version = info.versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            e.printStackTrace();\n        }\n\n        return version;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41974, "method_name": "onPreferenceTreeClick", "class_name": "MainPreferenceFragment", "params": ["Preference"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onPreferenceTreeClick(Preference preference) {\n        switch (preference.getKey()) {\n            case SETTING_CHANGE_PWD:\n                handleChangePassword();\n                break;\n            case SETTING_PATTERN_UNLOCK:\n                if (patternBadgeView != null) {\n                    Utilities.setUserClickPatternLock(mActivity);\n                    patternBadgeView.unbind();\n                    patternBadgeView = null;\n                    ((MainActivity) mActivity).updateBadge();\n                }\n                handleSwitchPatternUnlock();\n                break;\n            case SETTING_FINGERPRINT:\n                if (fingerprintBadgeView != null) {\n                    Utilities.setUserClickFingerprint(mActivity);\n                    fingerprintBadgeView.unbind();\n                    fingerprintBadgeView = null;\n                    ((MainActivity) mActivity).updateBadge();\n                }\n                handleFingerprintSetting();\n                break;\n            case SETTING_SYSTEM:\n                Navigation.findNavController(Objects.requireNonNull(getView()))\n                        .navigate(R.id.action_to_systemSettingFragment);\n                break;\n            case SETTING_WHITE_LIST:\n                Navigation.findNavController(Objects.requireNonNull(getView()))\n                        .navigate(R.id.action_settingFragment_to_whiteListFragment);\n                break;\n            case SETTING_MNEMONIC_ENTRY:\n                handleCreateVault();\n                break;\n            case SETTING_PASSPHRASE:\n                handlePassphrase();\n                break;\n            case SETTING_SAFETY_INSTRUCTION:\n                navigateToLicense(\"safety_instruction.html\", preference.getTitle().toString());\n                break;\n            case SETTING_LICENSE:\n                navigateToLicense(\"license.html\", preference.getTitle().toString());\n                break;\n            case SETTING_PRIVACY_POLICY:\n                navigateToLicense(\"privacy_policy.html\", preference.getTitle().toString());\n                break;\n            case SETTING_FACTORY_RESET:\n                handleFactoryReset();\n                break;\n            case SETTING_VERSION:\n                if (manifest == null) {\n                    Navigation.findNavController(Objects.requireNonNull(getView()))\n                            .navigate(R.id.action_to_versionFragment);\n                } else {\n                    update();\n                }\n                break;\n            default:\n                break;\n        }\n        return super.onPreferenceTreeClick(preference);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41975, "method_name": "handlePassphrase", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handlePassphrase() {\n        AuthenticateModal.show(mActivity, getString(R.string.password_modal_title), \"\",\n                token -> Navigation.findNavController(Objects.requireNonNull(getView()))\n                        .navigate(R.id.action_settingFragment_to_passphraseFragment,\n                                Bundle.forPair(PASSWORD, token.password)),\n                forgetPassword);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41976, "method_name": "handleFingerprintSetting", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleFingerprintSetting() {\n        AuthenticateModal.show(mActivity, getString(R.string.password_modal_title),\n                \"\",\n                password -> {\n                    int navId;\n                    FingerprintKit fpKit = new FingerprintKit(mActivity);\n                    if (fpKit.hasEnrolledFingerprint()) {\n                        navId = R.id.action_to_fingerprintSettingFragment;\n                    } else {\n                        navId = R.id.action_to_fingerprintGuideFragment;\n                    }\n\n                    Navigation.findNavController(Objects.requireNonNull(getView()))\n                            .navigate(navId, Bundle.forPair(PASSWORD, password.password));\n                },\n                forgetPassword\n        );\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41977, "method_name": "handleCreateVault", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleCreateVault() {\n        AuthenticateModal.show(mActivity, getString(R.string.password_modal_title), \"\",\n                password -> {\n                    Intent intent = new Intent(mActivity, SetupVaultActivity.class);\n                    intent.putExtra(IS_SETUP_VAULT, false);\n                    intent.putExtra(PASSWORD,password.password);\n                    startActivity(intent);\n                }, forgetPassword);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41978, "method_name": "handleFactoryReset", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleFactoryReset() {\n        ModalDialog dialog = ModalDialog.newInstance();\n        CommonModalBinding binding = DataBindingUtil.inflate(LayoutInflater.from(mActivity),\n                R.layout.common_modal,null,false);\n        dialog.setBinding(binding);\n        binding.title.setText(R.string.factory_reset_title);\n        binding.subTitle.setText(R.string.factory_reset_warning);\n        binding.confirm.setText(R.string.confirm);\n        binding.close.setOnClickListener(v->dialog.dismiss());\n        binding.confirm.setOnClickListener(v-> {\n            dialog.dismiss();\n            AuthenticateModal.show(mActivity, getString(R.string.password_modal_title),\n                    \"\", token -> reset(mActivity), forgetPassword);\n        });\n        dialog.show(mActivity.getSupportFragmentManager(),\"\");\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41979, "method_name": "reset", "class_name": "MainPreferenceFragment", "params": ["AppCompatActivity"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void reset(AppCompatActivity activity) {\n        ProgressModalDialog dialog = ProgressModalDialog.newInstance();\n        dialog.show(Objects.requireNonNull(activity.getSupportFragmentManager()), \"\");\n        Executors.newSingleThreadExecutor().execute(() -> {\n            try {\n                new ResetCallable().call();\n                DataCleaner.cleanApplicationData(activity);\n                removeAllFingerprint(activity);\n                LocalePicker.updateLocale(Locale.SIMPLIFIED_CHINESE);\n            } catch (Exception ignored) {\n            } finally {\n                DataCleaner.cleanApplicationData(activity);\n                restartApplication(activity);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41980, "method_name": "removeAllFingerprint", "class_name": "MainPreferenceFragment", "params": ["AppCompatActivity"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removeAllFingerprint(AppCompatActivity activity) {\n        if (!FingerprintKit.isHardwareDetected(activity)) {\n            return;\n        }\n        FingerprintKit fpKit = new FingerprintKit(activity);\n        if (FingerprintKit.isHardwareDetected(activity)) {\n            List<Fingerprint> fingerprints = fpKit.getEnrolledFingerprints();\n            fingerprints.forEach(f -> {\n                fpKit.removeFingerprint(f, null);\n                try {\n                    Thread.sleep(1000);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41981, "method_name": "handleChangePassword", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleChangePassword() {\n        AuthenticateModal.show(mActivity, getString(R.string.password_modal_title), \"\", password -> {\n            Bundle data = new Bundle();\n            data.putString(PASSWORD, password.password);\n            Navigation.findNavController(Objects.requireNonNull(getView()))\n                    .navigate(R.id.action_to_change_password, data);\n        }, forgetPassword);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41982, "method_name": "handleSwitchPatternUnlock", "class_name": "MainPreferenceFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleSwitchPatternUnlock() {\n        if (switchPreference.isChecked()) {\n            switchPreference.setChecked(false);\n            Utilities.clearPatternUnlock(mActivity);\n        } else {\n            AuthenticateModal.show(mActivity, getString(R.string.password_modal_title), \"\", token ->\n                    Navigation.findNavController(Objects.requireNonNull(getView()))\n                            .navigate(R.id.action_to_setPatternUnlock), forgetPassword);\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41983, "method_name": "navigateToLicense", "class_name": "MainPreferenceFragment", "params": ["String", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void navigateToLicense(String url, String title) {\n        Bundle data = new Bundle();\n        data.putString(KEY_URL, url);\n        data.putString(KEY_TITLE, title);\n        Navigation.findNavController(Objects.requireNonNull(getView()))\n                .navigate(R.id.action_to_licenseFragment, data);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/ui/fragment/setting/MainPreferenceFragment.java", "stars": "13", "class_props": {"extends": "PreferenceFragmentCompat", "implements": null, "modifiers": ["public"]}}, {"id": 41984, "method_name": "execute", "class_name": "BackToCheckTimer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute() {\n        log.info(\"\u3010BackToCheckTimer\u3011\u5f00\u59cb\u6267\u884c\u3002\u3002\u3002\u3002\");\n//        System.out.println(\"\u3010BackToCheckTimer\u3011\u5f00\u59cb\u6267\u884c\u3002\u3002\u3002\u3002\");\n        int size = backToCheckService.handlerAllUnconfirmedMsg();\n//        System.out.println(\"\u3010BackToCheckTimer\u3011\u6267\u884c\u7ed3\u675f\u3002\u3002\u3002\u3002\");\n        log.info(\"\u3010BackToCheckTimer\u3011\u6267\u884c\u7ed3\u675f\u3002\u3002\u3002\u3002 \" );\n    }", "url": "https://raw.githubusercontent.com/JeremyKinge/rtm/master/rtm-pcm/src/main/java/com/kingge/rtm/pcm/tasks/BackToCheckTimer.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 41985, "method_name": "startWindowFullscreen", "class_name": "MediaCodecVideo", "params": ["Context", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "GSYBaseVideoPlayer", "snippet": "    public GSYBaseVideoPlayer startWindowFullscreen(Context context, boolean actionBar, boolean statusBar) {\n        return super.startWindowFullscreen(context, actionBar, statusBar);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 41986, "method_name": "onSurfaceAvailable", "class_name": "MediaCodecVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceAvailable(Surface surface) {\n        super.onSurfaceAvailable(surface);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 41987, "method_name": "onSurfaceDestroyed", "class_name": "MediaCodecVideo", "params": ["Surface"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onSurfaceDestroyed(Surface surface) {\n        //\u6e05\u7a7a\u91ca\u653e\n        //setDisplay(null);\n        //\u540c\u4e00\u6d88\u606f\u961f\u5217\u4e2d\u53bbrelease\n        //releaseSurface(surface);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 41988, "method_name": "addTextureView", "class_name": "MediaCodecVideo", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addTextureView() {\n        mTextureView = new MediaCodecRenderView();\n        mTextureView.addView(getContext(), mTextureViewContainer, mRotate, this, this, mEffectFilter, mMatrixGL, mRenderer, mMode);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecVideo.java", "stars": "2", "class_props": {"extends": "StandardGSYVideoPlayer", "implements": null, "modifiers": ["public"]}}, {"id": 41989, "method_name": "initComponents", "class_name": "MainFrame", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {\n\n        jScrollPane1 = new javax.swing.JScrollPane();\n        receiveTextArea = new javax.swing.JTextArea();\n        jScrollPane2 = new javax.swing.JScrollPane();\n        sendTextArea = new javax.swing.JTextArea();\n        sendButton = new javax.swing.JButton();\n        usernameTextArea = new javax.swing.JTextField();\n        jLabel1 = new javax.swing.JLabel();\n        enableServer = new javax.swing.JRadioButton();\n        jSeparator1 = new javax.swing.JSeparator();\n        jSeparator2 = new javax.swing.JSeparator();\n        serverIpAddress = new javax.swing.JTextField();\n        jLabel2 = new javax.swing.JLabel();\n        connectButton = new javax.swing.JButton();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n\n        receiveTextArea.setColumns(20);\n        receiveTextArea.setRows(5);\n        jScrollPane1.setViewportView(receiveTextArea);\n\n        sendTextArea.setColumns(20);\n        sendTextArea.setRows(5);\n        jScrollPane2.setViewportView(sendTextArea);\n\n        sendButton.setText(\"Send\");\n        sendButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                sendButtonActionPerformed(evt);\n            }\n        });\n\n        jLabel1.setText(\"                    Username:\");\n\n        enableServer.setText(\"Enable Server\");\n        enableServer.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                enableServerActionPerformed(evt);\n            }\n        });\n\n        serverIpAddress.setText(\"192.168.0.100\");\n\n        jLabel2.setText(\"Server IP Address:\");\n\n        connectButton.setText(\"Connect\");\n        connectButton.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                connectButtonActionPerformed(evt);\n            }\n        });\n\n        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());\n        getContentPane().setLayout(layout);\n        layout.setHorizontalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)\n                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 507, Short.MAX_VALUE)\n                    .addComponent(jScrollPane1))\n                .addGap(18, 18, Short.MAX_VALUE)\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)\n                    .addComponent(usernameTextArea)\n                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)\n                    .addComponent(enableServer)\n                    .addComponent(jSeparator1)\n                    .addComponent(jSeparator2)\n                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)\n                    .addComponent(serverIpAddress, javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addComponent(connectButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))\n                .addContainerGap())\n            .addGroup(layout.createSequentialGroup()\n                .addGap(208, 208, 208)\n                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap(431, Short.MAX_VALUE))\n        );\n        layout.setVerticalGroup(\n            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)\n            .addGroup(layout.createSequentialGroup()\n                .addContainerGap()\n                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)\n                        .addComponent(usernameTextArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(12, 12, 12)\n                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(enableServer)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(jLabel2)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(serverIpAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addGap(18, 18, 18)\n                        .addComponent(connectButton)\n                        .addGap(132, 132, 132))\n                    .addGroup(layout.createSequentialGroup()\n                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)\n                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)\n                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)))\n                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)\n                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)\n                .addContainerGap())\n        );\n\n        pack();\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41990, "method_name": "enableServerActionPerformed", "class_name": "MainFrame", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void enableServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enableServerActionPerformed\n        // TODO add your handling code here:\n        if(enableServer.isSelected()) //verify if the enableServer radio button is selected. Use isSelected method to find out that the button is selected or not. The fuction returns true if the radio button is selected.\n        {\n            //if the radio button is selected -> enter in the server mode\n            receiveTextArea.setText(\"Waiting for remote user...\"); //inform user that you are in the server mode and you are waiting another person to connect\n            serverIpAddress.setEditable(false); //make serverIpAddress text area non editable (if you are in the server mode you must not be able to enter the server ip address)\n            connectButton.setEnabled(false); //disable connectButton (if you are in the server mode you must not be able to connect to a server, the application runs as a server)\n            this.isServer = true;  //set isServer to true, this global variable will be used in the run method to start the server mode.\n        }\n        else //if you are in the client mode or if you want to connect to the server\n        {\n            receiveTextArea.setText(\"\");  //clear any message from the receiveTextArea\n            serverIpAddress.setEditable(true); //enable client mode, make serverIpAddress text area editable in order to enter the server ip address\n            connectButton.setEnabled(true); //enable the connectButton in order to connect to the server\n            this.isServer = false; //set isServer to false, this global variable will be used in the run method to start the server mode or the client mode\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41991, "method_name": "connectButtonActionPerformed", "class_name": "MainFrame", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void connectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectButtonActionPerformed\n        // TODO add your handling code here:\n        connectToServer = true; //set the connectToServer to true in order to enter in initializaClientMode\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41992, "method_name": "sendButtonActionPerformed", "class_name": "MainFrame", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed\n        // TODO add your handling code here:\n        String message = sendTextArea.getText(); //get the written message\n        message = localUsername + \": \" + message; //append the username \n        try\n        {\n            out.write(message); // write the message\n            out.newLine(); //write a new line, on the other side the reading is done using readLine method, so you must add a new line. \n            out.flush(); //flush the stream\n            sendTextArea.setText(\"\"); //clear sendTextArea after the message was sent\n            String allText = receiveTextArea.getText(); \n            allText = allText + \"\\n\" + message;\n            receiveTextArea.setText(allText); //add the message to your receiveTextArea, you want to see what have you sent.\n        }\n        catch(Exception e)\n        {\n            disconnect(); //if the message cannot be send, execute disconnect\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41993, "method_name": "run", "class_name": "MainFrame", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run()\n    {\n        while(!isClosed) //run application until the user closes it.\n        {\n            sleep(100); //add a small timeout to free up the processor to do other things.\n            if(isServer) //if server mode (variable is set in the enableServerActionPerformed method, when the enableServer radio button is selected)\n            {\n                initializeServerMode(); //initialize the server mode\n            }\n            if(connectToServer) //if the connect button was pressed, then the application is trying to connect to the server\n            {\n                System.out.println(\"1. connect to  server\");\n                initializeClientMode(); \n                System.out.println(\"connect to  server\");//initialize the client mode\n                //readIncomingMessages(); //read all incoming messages\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41994, "method_name": "initializeServerMode", "class_name": "MainFrame", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initializeServerMode()\n    {\n        try\n        {\n            System.out.println(\"in server\");\n            server = new ServerSocket(portNumber); //create the scoket object\n            client = server.accept(); //wait for a connection\n            \n            System.out.println(\"connected\");\n            out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream())); //create the outputstream\n            in = new BufferedReader(new InputStreamReader(client.getInputStream())); //create the inputstream\n     \n            //the first thing the application will do after the client is connected is to exchange the user names.\n            //1. server will wait for the client username\n            remoteUsername = in.readLine(); // read the remote username and store it in the remoteUsername global variable\n       \n            //2. server will send his username;\n            localUsername = usernameTextArea.getText(); //get the username from the text area\n            localUsername = localUsername.trim(); //remove white spaces from the username String\n            if(localUsername.length() == 0) //if no username was entered in the text area, create a default username\n            {\n                localUsername = \"Server\"; //the default username is \"Server\"\n            }\n            out.write(localUsername); // send the username\n            out.newLine(); // add a new line (in the file transfer application we have used PrintWriter.println() method which enters automatically a new line character)\n                           // on the client side and also for the server side we have used readLine() method to read the username String, so the method is waiting for a line (text + new line character))\n            out.flush();\n\n            //after exchanging the names\n            //1. Inform user that the romote user is connected and print its name in the receive text area;\n            receiveTextArea.setText(\"User: \" + remoteUsername + \" is connected! You can start the chat conversation\");\n            //2. Enable send button in order to send a new messages\n            sendButton.setEnabled(true);\n            //3. deactivate enable server radio button. User should not be able to change the connection mode after the connection was established\n            enableServer.setEnabled(false);\n            \n            readIncomingMessages(); //read all incoming messages\n        }\n        catch(BindException e1)\n        {\n            receiveTextArea.setText(\"Port \" + portNumber + \" is used by another application!\");\n        }\n        catch(Exception e)\n        {\n            System.out.println(\"server error!\" + e.toString());\n            //System.exit(1);\n            disconnect();\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41995, "method_name": "initializeClientMode", "class_name": "MainFrame", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initializeClientMode()\n    {\n        try\n        {\n            System.out.println(\"client tries connect to server\");\n            //String ip = serverIpAddress.getText(); //get the server ip address from the serverIpAddress text area\n            client = new Socket(\"127.0.0.1\", portNumber); //try to connect to the server\n            System.out.println(\"client connected to server\");\n            out = new BufferedWriter(new OutputStreamWriter(client.getOutputStream())); //create the outputstream\n            in = new BufferedReader(new InputStreamReader(client.getInputStream())); //create the inputstream\n     \n            //the first thing the application will do after the client is connected is to exchange the user names.\n            //1. sent the local username to the server\n            localUsername = usernameTextArea.getText(); //get the username from the text area\n            if(localUsername.length() == 0) //if no username was entered in the text area, create a default username\n            {\n                localUsername = \"Client\"; //the default username is \"Server\"\n            }\n\n            localUsername = localUsername.trim(); //remove white spaces from the username String\n            out.write(localUsername); //send the username\n            out.newLine(); //add a new line\n            out.flush(); //flush\n      \n            //2. client is waiting to receive the server username\n            remoteUsername = in.readLine(); // read the remote username and store it in the remoteUsername global variable\n                  \n            \n            //after exchanging the names:\n            \n            //1. Inform user that the romote user is connected and print it's name in the receive text area;\n            receiveTextArea.setText(\"User: \" + remoteUsername + \" is connected! You can start the chat conversation\");\n            //2. Enable send button in order to send a new messages\n            sendButton.setEnabled(true);\n            //3. deactivate enableServer radio button, User should not be able to change the connection mode after the connection was established.\n            // you have to close the connection in order to change the mode.\n            enableServer.setEnabled(false);\n            //4. deactivate the connect button\n            connectButton.setEnabled(false);\n            \n            readIncomingMessages(); //read all incoming messages\n        }\n        catch(UnknownHostException e2)\n        {\n            receiveTextArea.setText(\"the IP address of the host could not be determined!\");\n        }\n        catch(ConnectException e1)\n        {\n            receiveTextArea.setText(\"Server is unreachable!\");\n        }\n        catch(Exception e)\n        {\n            //if the ip address is not correct please \n            System.out.println(\"client error!\" + e.toString());\n            disconnect();\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41996, "method_name": "readIncomingMessages", "class_name": "MainFrame", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readIncomingMessages()\n    {\n        try\n        {\n            while(true)\n            {\n                String message = in.readLine(); //read a message from the connection\n                String allText = receiveTextArea.getText(); //get all the text \n                allText = allText + \"\\n\" + message; //append the new message\n                receiveTextArea.setText(allText); //add all text\n            }\n        }\n        catch(Exception e)\n        {\n            System.out.println(e.toString() + \"in readIncomingMessages\");\n            disconnect(); //if an error occurs, close the connection\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41997, "method_name": "disconnect", "class_name": "MainFrame", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disconnect()\n    {\n        try\n        {\n            String allText = receiveTextArea.getText(); //get all the text \n            allText = allText + \"\\n\" + this.remoteUsername + \" has been disconected! \\nThe connection is closed.\"; //info message\n            receiveTextArea.setText(allText);\n            if(isServer) //if server mode (variable is set in the enableServerActionPerformed server method, when the enableServer radio button is selected)\n            {\n                /*\n                    verify the inputstream is not null. There are some cases when InputStream could be null.\n                    Eg: In the server mode if the application is closed when it is waiting for a connection, the accept method will not\n                    return a socket object and the inputstream could not be created because we don't have a socket object.]\n                    In this case we have a null inputestream object and if we try to close a null inputstream an error is thrown.\n                */\n                if(in != null) \n                {\n                    in.close(); //close the inputstream\n                }\n                if(out != null)\n                {\n                    out.close(); //close the outputstream\n                }\n                if(client != null) \n                {\n                    client.close();\n                }\n                if(server != null)\n                {\n                    server.close();\n                }\n                enableServer.setEnabled(true); // enable connection mode button\n                enableServer.setSelected(false);\n                serverIpAddress.setEditable(true); \n                connectButton.setEnabled(true); \n                sendButton.setEnabled(false); // disable send button\n                isServer = false; //no more in the server mode\n            }\n            if(connectToServer)\n            {\n                if(in != null)\n                {\n                    in.close(); //close the inputstream\n                }\n                if(out != null)\n                {\n                    out.close(); //close the outputstream\n                }\n                if(client != null)\n                {\n                    client.close(); //close the client socket\n                }\n                enableServer.setEnabled(true);\n                enableServer.setSelected(false);\n                serverIpAddress.setEditable(true); \n                connectButton.setEnabled(true); \n                sendButton.setEnabled(false);\n                connectToServer = false;  //no more in the client mode\n            }\n        }\n        catch(Exception e)\n        {\n            System.out.println(\"in disconnect\" + e.toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41998, "method_name": "sleep", "class_name": "MainFrame", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sleep(int milliseconds)\n    {\n        try\n        {\n            Thread.sleep(milliseconds);\n        }\n        catch(Exception e)\n        {\n            System.exit(1);\n        }\n    }", "url": "https://raw.githubusercontent.com/itarunbisht/ReadMeTransfer/master/MainFrame.java", "stars": "1", "class_props": {"extends": "javax", "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 41999, "method_name": "init", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        user = new User();\n        user.setLogin(DEFAULT_LOGIN);\n        user.setPassword(RandomStringUtils.random(60));\n        user.setActivated(true);\n        user.setEmail(\"johndoe@localhost\");\n        user.setFirstName(\"john\");\n        user.setLastName(\"doe\");\n        user.setLangKey(\"en\");\n\n        userDto = new UserDTO(user);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42000, "method_name": "usersToUserDTOsShouldMapOnlyNonNullUsers", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void usersToUserDTOsShouldMapOnlyNonNullUsers() {\n        List<User> users = new ArrayList<>();\n        users.add(user);\n        users.add(null);\n\n        List<UserDTO> userDTOS = userMapper.usersToUserDTOs(users);\n\n        assertThat(userDTOS).isNotEmpty();\n        assertThat(userDTOS).size().isEqualTo(1);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42001, "method_name": "userDTOsToUsersShouldMapOnlyNonNullUsers", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersShouldMapOnlyNonNullUsers() {\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n        usersDto.add(null);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42002, "method_name": "userDTOsToUsersWithAuthoritiesStringShouldMapToUsersWithAuthoritiesDomain", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersWithAuthoritiesStringShouldMapToUsersWithAuthoritiesDomain() {\n        Set<String> authoritiesAsString = new HashSet<>();\n        authoritiesAsString.add(\"ADMIN\");\n        userDto.setAuthorities(authoritiesAsString);\n\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n        assertThat(users.get(0).getAuthorities()).isNotNull();\n        assertThat(users.get(0).getAuthorities()).isNotEmpty();\n        assertThat(users.get(0).getAuthorities().iterator().next().getName()).isEqualTo(\"ADMIN\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42003, "method_name": "userDTOsToUsersMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOsToUsersMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities() {\n        userDto.setAuthorities(null);\n\n        List<UserDTO> usersDto = new ArrayList<>();\n        usersDto.add(userDto);\n\n        List<User> users = userMapper.userDTOsToUsers(usersDto);\n\n        assertThat(users).isNotEmpty();\n        assertThat(users).size().isEqualTo(1);\n        assertThat(users.get(0).getAuthorities()).isNotNull();\n        assertThat(users.get(0).getAuthorities()).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42004, "method_name": "userDTOToUserMapWithAuthoritiesStringShouldReturnUserWithAuthorities", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithAuthoritiesStringShouldReturnUserWithAuthorities() {\n        Set<String> authoritiesAsString = new HashSet<>();\n        authoritiesAsString.add(\"ADMIN\");\n        userDto.setAuthorities(authoritiesAsString);\n\n        User user = userMapper.userDTOToUser(userDto);\n\n        assertThat(user).isNotNull();\n        assertThat(user.getAuthorities()).isNotNull();\n        assertThat(user.getAuthorities()).isNotEmpty();\n        assertThat(user.getAuthorities().iterator().next().getName()).isEqualTo(\"ADMIN\");\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42005, "method_name": "userDTOToUserMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithNullAuthoritiesStringShouldReturnUserWithEmptyAuthorities() {\n        userDto.setAuthorities(null);\n\n        User user = userMapper.userDTOToUser(userDto);\n\n        assertThat(user).isNotNull();\n        assertThat(user.getAuthorities()).isNotNull();\n        assertThat(user.getAuthorities()).isEmpty();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42006, "method_name": "userDTOToUserMapWithNullUserShouldReturnNull", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void userDTOToUserMapWithNullUserShouldReturnNull() {\n        assertThat(userMapper.userDTOToUser(null)).isNull();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42007, "method_name": "testUserFromId", "class_name": "UserMapperIT", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testUserFromId() {\n        assertThat(userMapper.userFromId(DEFAULT_ID).getId()).isEqualTo(DEFAULT_ID);\n        assertThat(userMapper.userFromId(null)).isNull();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/test/java/com/gardle/service/mapper/UserMapperIT.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42008, "method_name": "toJdbcConnectionString", "class_name": "BigQueryConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toJdbcConnectionString() {\n    final String prjId = checkNotNull(this.projectId, \"Missing project ID.\");\n    final String emailAddr = checkNotNull(this.email, \"Missing service account email address.\");\n    checkNotNull(this.jsonKey, \"Missing service account JSON key\");\n    String keyPath = null;\n    try {\n      keyPath = getOauthPrivateKeyPath();\n    } catch (final IOException e) {\n      // This will cause an error in auth, no need to do anything here...\n      logger.warn(\"Unable to write BigQuery authentication key\", e);\n    }\n\n    // Setup the parameters required to connect to BigQuery\n    final Map<String, String> attributes = new HashMap<>();\n    attributes.put(\"ProjectId\", prjId);\n    attributes.put(\"OAuthServiceAcctEmail\", emailAddr);\n    attributes.put(\"OAuthPvtKeyPath\", keyPath);\n    // Service-account based auth\n    attributes.put(\"OAuthType\", \"0\");\n    // Allow result sets larger than 128MB\n    attributes.put(\"AllowLargeResults\", \"1\");\n    // Use modern BQ SQL dialect\n    attributes.put(\"QueryDialect\", \"SQL\");\n    // Check if we have a custom KMS key, use it if provided\n    if (this.customerKmsKeyName != null && !this.customerKmsKeyName.isEmpty()) {\n      attributes.put(\"KMSKeyName\", this.customerKmsKeyName);\n    }\n\n    // Compile the final connection string\n    final String connectAttribs = attributes.entrySet().stream().map(e -> e.getKey()+\"=\"+e.getValue()).collect(joining(\";\"));\n    return String.format(\"jdbc:bigquery://https://www.googleapis.com/bigquery/v2:443;%s;\", connectAttribs);\n  }", "url": "https://raw.githubusercontent.com/panoramichq/dremio-bigquery-connector/master/src/main/java/com/dremio/exec/store/jdbc/conf/BigQueryConf.java", "stars": "2", "class_props": {"extends": "AbstractArpConf", "implements": null, "modifiers": ["public"]}}, {"id": 42009, "method_name": "toPluginConfig", "class_name": "BigQueryConf", "params": ["SabotContext"], "throws": null, "modifiers": ["public"], "return_type": "Config", "snippet": "  public Config toPluginConfig(final SabotContext context) {\n    logger.info(\"Connecting to BigQuery\");\n    return JdbcStoragePlugin.Config.newBuilder()\n        .withDialect(getDialect())\n        .withFetchSize(fetchSize)\n        .withDatasourceFactory(this::newDataSource)\n        .clearHiddenSchemas()\n        .addHiddenSchema(\"SYSTEM\")\n        .build();\n  }", "url": "https://raw.githubusercontent.com/panoramichq/dremio-bigquery-connector/master/src/main/java/com/dremio/exec/store/jdbc/conf/BigQueryConf.java", "stars": "2", "class_props": {"extends": "AbstractArpConf", "implements": null, "modifiers": ["public"]}}, {"id": 42010, "method_name": "getOauthPrivateKeyPath", "class_name": "BigQueryConf", "params": [], "throws": ["IOException"], "modifiers": ["private"], "return_type": "String", "snippet": "  private String getOauthPrivateKeyPath() throws IOException {\n    final File temp = File.createTempFile(\"bqk\", \".json\");\n    temp.deleteOnExit();\n    final BufferedWriter bw = new BufferedWriter(new FileWriter(temp));\n    bw.write(this.jsonKey);\n    bw.close();\n    return temp.getAbsolutePath();\n  }", "url": "https://raw.githubusercontent.com/panoramichq/dremio-bigquery-connector/master/src/main/java/com/dremio/exec/store/jdbc/conf/BigQueryConf.java", "stars": "2", "class_props": {"extends": "AbstractArpConf", "implements": null, "modifiers": ["public"]}}, {"id": 42011, "method_name": "newDataSource", "class_name": "BigQueryConf", "params": [], "throws": null, "modifiers": ["private"], "return_type": "CloseableDataSource", "snippet": "  private CloseableDataSource newDataSource() {\n    final Properties properties = new Properties();\n    return DataSources.newGenericConnectionPoolDataSource(DRIVER,\n        toJdbcConnectionString(), null, null, properties,\n        DataSources.CommitMode.DRIVER_SPECIFIED_COMMIT_MODE);\n  }", "url": "https://raw.githubusercontent.com/panoramichq/dremio-bigquery-connector/master/src/main/java/com/dremio/exec/store/jdbc/conf/BigQueryConf.java", "stars": "2", "class_props": {"extends": "AbstractArpConf", "implements": null, "modifiers": ["public"]}}, {"id": 42012, "method_name": "getDialect", "class_name": "BigQueryConf", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArpDialect", "snippet": "  public ArpDialect getDialect() {\n    return ARP_DIALECT;\n  }", "url": "https://raw.githubusercontent.com/panoramichq/dremio-bigquery-connector/master/src/main/java/com/dremio/exec/store/jdbc/conf/BigQueryConf.java", "stars": "2", "class_props": {"extends": "AbstractArpConf", "implements": null, "modifiers": ["public"]}}, {"id": 42013, "method_name": "getDialectSingleton", "class_name": "BigQueryConf", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ArpDialect", "snippet": "  public static ArpDialect getDialectSingleton() {\n    return ARP_DIALECT;\n  }", "url": "https://raw.githubusercontent.com/panoramichq/dremio-bigquery-connector/master/src/main/java/com/dremio/exec/store/jdbc/conf/BigQueryConf.java", "stars": "2", "class_props": {"extends": "AbstractArpConf", "implements": null, "modifiers": ["public"]}}, {"id": 42014, "method_name": "init", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        measureHelper = new MeasureHelper(this, this);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42015, "method_name": "onMeasure", "class_name": "MediaCodecTextureView", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        measureHelper.prepareMeasure(widthMeasureSpec, heightMeasureSpec, (int) getRotation());\n        setMeasuredDimension(measureHelper.getMeasuredWidth(), measureHelper.getMeasuredHeight());\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42016, "method_name": "onSurfaceTextureAvailable", "class_name": "MediaCodecTextureView", "params": ["SurfaceTexture", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceTextureAvailable(SurfaceTexture texture, int width, int height) {\n        if (mSaveTexture == null) {\n            mSaveTexture = texture;\n            mSurface = new Surface(texture);\n            if (mIGSYSurfaceListener != null) {\n                mIGSYSurfaceListener.onSurfaceAvailable(mSurface);\n            }\n        } else {\n            setSurfaceTexture(mSaveTexture);\n            if (mIGSYSurfaceListener != null) {\n                mIGSYSurfaceListener.onSurfaceAvailable(mSurface);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42017, "method_name": "onSurfaceTextureSizeChanged", "class_name": "MediaCodecTextureView", "params": ["SurfaceTexture", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceTextureSizeChanged(SurfaceTexture surface, int width, int height) {\n        if (mIGSYSurfaceListener != null) {\n            mIGSYSurfaceListener.onSurfaceSizeChanged(mSurface, width, height);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42018, "method_name": "onSurfaceTextureDestroyed", "class_name": "MediaCodecTextureView", "params": ["SurfaceTexture"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onSurfaceTextureDestroyed(SurfaceTexture surface) {\n        //\u6e05\u7a7a\u91ca\u653e\n        if (mIGSYSurfaceListener != null) {\n            mIGSYSurfaceListener.onSurfaceDestroyed(mSurface);\n        }\n        return (mSaveTexture == null);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42019, "method_name": "onSurfaceTextureUpdated", "class_name": "MediaCodecTextureView", "params": ["SurfaceTexture"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSurfaceTextureUpdated(SurfaceTexture surface) {\n        //\u5982\u679c\u64ad\u653e\u7684\u662f\u6682\u505c\u5168\u5c4f\u4e86\n        if (mIGSYSurfaceListener != null) {\n            mIGSYSurfaceListener.onSurfaceUpdated(mSurface);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42020, "method_name": "getIGSYSurfaceListener", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IGSYSurfaceListener", "snippet": "    public IGSYSurfaceListener getIGSYSurfaceListener() {\n        return mIGSYSurfaceListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42021, "method_name": "setIGSYSurfaceListener", "class_name": "MediaCodecTextureView", "params": ["IGSYSurfaceListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIGSYSurfaceListener(IGSYSurfaceListener surfaceListener) {\n        setSurfaceTextureListener(this);\n        mIGSYSurfaceListener = surfaceListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42022, "method_name": "getSizeH", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSizeH() {\n        return getHeight();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42023, "method_name": "getSizeW", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSizeW() {\n        return getWidth();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42024, "method_name": "initCover", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Bitmap", "snippet": "    public Bitmap initCover() {\n        Bitmap bitmap = Bitmap.createBitmap(\n                getSizeW(), getSizeH(), Bitmap.Config.RGB_565);\n        return getBitmap(bitmap);\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42025, "method_name": "initCoverHigh", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Bitmap", "snippet": "    public Bitmap initCoverHigh() {\n        Bitmap bitmap = Bitmap.createBitmap(\n                getSizeW(), getSizeH(), Bitmap.Config.ARGB_8888);\n        return getBitmap(bitmap);\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42026, "method_name": "taskShotPic", "class_name": "MediaCodecTextureView", "params": ["GSYVideoShotListener", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void taskShotPic(GSYVideoShotListener gsyVideoShotListener, boolean shotHigh) {\n        if (shotHigh) {\n            gsyVideoShotListener.getBitmap(initCoverHigh());\n        } else {\n            gsyVideoShotListener.getBitmap(initCover());\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42027, "method_name": "saveFrame", "class_name": "MediaCodecTextureView", "params": ["File", "boolean", "GSYVideoShotSaveListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveFrame(final File file, final boolean high, final GSYVideoShotSaveListener gsyVideoShotSaveListener) {\n        GSYVideoShotListener gsyVideoShotListener = new GSYVideoShotListener() {\n            @Override\n            public void getBitmap(Bitmap bitmap) {\n                if (bitmap == null) {\n                    gsyVideoShotSaveListener.result(false, file);\n                } else {\n                    FileUtils.saveBitmap(bitmap, file);\n                    gsyVideoShotSaveListener.result(true, file);\n                }\n            }\n        };\n        if (high) {\n            gsyVideoShotListener.getBitmap(initCoverHigh());\n        } else {\n            gsyVideoShotListener.getBitmap(initCover());\n        }\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42028, "method_name": "getRenderView", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getRenderView() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42029, "method_name": "onRenderResume", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRenderResume() {\n        Debuger.printfLog(getClass().getSimpleName() + \" not support onRenderResume now\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42030, "method_name": "onRenderPause", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRenderPause() {\n        Debuger.printfLog(getClass().getSimpleName() + \" not support onRenderPause now\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42031, "method_name": "releaseRenderAll", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void releaseRenderAll() {\n        Debuger.printfLog(getClass().getSimpleName() + \" not support releaseRenderAll now\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42032, "method_name": "setRenderMode", "class_name": "MediaCodecTextureView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRenderMode(int mode) {\n        Debuger.printfLog(getClass().getSimpleName() + \" not support setRenderMode now\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42033, "method_name": "setRenderTransform", "class_name": "MediaCodecTextureView", "params": ["Matrix"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRenderTransform(Matrix transform) {\n        setTransform(transform);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42034, "method_name": "setGLRenderer", "class_name": "MediaCodecTextureView", "params": ["GSYVideoGLViewBaseRender"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGLRenderer(GSYVideoGLViewBaseRender renderer) {\n        Debuger.printfLog(getClass().getSimpleName() + \" not support setGLRenderer now\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42035, "method_name": "setGLMVPMatrix", "class_name": "MediaCodecTextureView", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGLMVPMatrix(float[] MVPMatrix) {\n        Debuger.printfLog(getClass().getSimpleName() + \" not support setGLMVPMatrix now\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42036, "method_name": "setGLEffectFilter", "class_name": "MediaCodecTextureView", "params": ["GSYVideoGLView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGLEffectFilter(GSYVideoGLView.ShaderInterface effectFilter) {\n        Debuger.printfLog(getClass().getSimpleName() + \" not support setGLEffectFilter now\");\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42037, "method_name": "setVideoParamsListener", "class_name": "MediaCodecTextureView", "params": ["MeasureHelper"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setVideoParamsListener(MeasureHelper.MeasureFormVideoParamsListener listener) {\n        mVideoParamsListener = listener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42038, "method_name": "getCurrentVideoWidth", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCurrentVideoWidth() {\n        if (mVideoParamsListener != null) {\n            return mVideoParamsListener.getCurrentVideoWidth();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42039, "method_name": "getCurrentVideoHeight", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCurrentVideoHeight() {\n        if (mVideoParamsListener != null) {\n            return mVideoParamsListener.getCurrentVideoHeight();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42040, "method_name": "getVideoSarNum", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarNum() {\n        if (mVideoParamsListener != null) {\n            return mVideoParamsListener.getVideoSarNum();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42041, "method_name": "getVideoSarDen", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getVideoSarDen() {\n        if (mVideoParamsListener != null) {\n            return mVideoParamsListener.getVideoSarDen();\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42042, "method_name": "release", "class_name": "MediaCodecTextureView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        mSaveTexture = null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42043, "method_name": "addTextureView", "class_name": "MediaCodecTextureView", "params": ["Context", "ViewGroup", "int", "IGSYSurfaceListener", "MeasureHelper"], "throws": null, "modifiers": ["public", "static"], "return_type": "MediaCodecTextureView", "snippet": "    public static MediaCodecTextureView addTextureView(Context context, ViewGroup textureViewContainer, int rotate,\n                                                       final IGSYSurfaceListener gsySurfaceListener,\n                                                       final MeasureHelper.MeasureFormVideoParamsListener videoParamsListener) {\n        if (textureViewContainer.getChildCount() > 0) {\n            textureViewContainer.removeAllViews();\n        }\n        MediaCodecTextureView gsyTextureView = new MediaCodecTextureView(context);\n        gsyTextureView.setIGSYSurfaceListener(gsySurfaceListener);\n        gsyTextureView.setVideoParamsListener(videoParamsListener);\n        gsyTextureView.setRotation(rotate);\n        GSYRenderView.addToParent(textureViewContainer, gsyTextureView);\n        return gsyTextureView;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/mediacodec/MediaCodecTextureView.java", "stars": "2", "class_props": {"extends": "TextureView", "implements": ["TextureView", "IGSYRenderView", "MeasureHelper"], "modifiers": ["public"]}}, {"id": 42044, "method_name": "getClient", "class_name": "BaseProvider", "params": [], "throws": null, "modifiers": ["private"], "return_type": "OkHttpClient", "snippet": "    private OkHttpClient getClient() {\n        return client;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/BaseProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42045, "method_name": "enqueue", "class_name": "BaseProvider", "params": ["Request", "Callback"], "throws": null, "modifiers": ["protected"], "return_type": "Call", "snippet": "    protected Call enqueue(Request request, Callback requestCallback) {\n        request = request.newBuilder()\n                .tag(getClass())\n                .build();\n\n        Call call = getClient().newCall(request);\n        if (requestCallback != null) {\n            call.enqueue(requestCallback);\n        }\n        return call;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/BaseProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42046, "method_name": "cancel", "class_name": "BaseProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancel() {\n        final Dispatcher dispatcher = client.dispatcher();\n\n        dispatcher.executorService().execute(new Runnable() {\n            @Override\n            public void run() {\n                if (dispatcher.queuedCallsCount() > 0) {\n                    for (Call call : dispatcher.queuedCalls()) {\n                        if (getClass().equals(call.request().tag())) {\n                            call.cancel();\n                        }\n                    }\n                }\n\n                if (dispatcher.runningCallsCount() > 0) {\n                    for (Call call : dispatcher.runningCalls()) {\n                        if (getClass().equals(call.request().tag())) {\n                            call.cancel();\n                        }\n                    }\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/BaseProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42047, "method_name": "buildQuery", "class_name": "BaseProvider", "params": ["List<AbstractMap>"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String buildQuery(List<AbstractMap.SimpleEntry<String, String>> valuePairs) {\n        StringBuilder stringBuilder = new StringBuilder();\n\n        try {\n            for (int i = 0; i < valuePairs.size(); i++) {\n                AbstractMap.SimpleEntry<String, String> pair = valuePairs.get(i);\n                stringBuilder.append(URLEncoder.encode(pair.getKey(), \"utf-8\"));\n                stringBuilder.append(\"=\");\n                stringBuilder.append(URLEncoder.encode(pair.getValue(), \"utf-8\"));\n                if (i + 1 != valuePairs.size()) stringBuilder.append(\"&\");\n            }\n        } catch (UnsupportedEncodingException e) {\n            e.printStackTrace();\n        }\n\n\n        return stringBuilder.toString();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/BaseProvider.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42048, "method_name": "getTypeMap", "class_name": "ContractTypesConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<Integer,ContractType>", "snippet": "\tpublic Map<Integer, ContractType> getTypeMap()\n\t{\n\t\treturn typeMap;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ContractTypesConfig.java", "stars": "12", "class_props": {"extends": "Config", "implements": null, "modifiers": ["public"]}}, {"id": 42049, "method_name": "onCreateViewHolder", "class_name": "MediaGridAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {\n        View v;\n        switch (viewType) {\n            case LOADING:\n                v = LayoutInflater.from(parent.getContext()).inflate(R.layout.media_griditem_loading, parent, false);\n                return new MediaGridAdapter.LoadingHolder(v);\n            case NORMAL:\n            default:\n                v = LayoutInflater.from(parent.getContext()).inflate(R.layout.media_griditem, parent, false);\n                return new MediaGridAdapter.ViewHolder(v);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42050, "method_name": "onBindViewHolder", "class_name": "MediaGridAdapter", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(final RecyclerView.ViewHolder viewHolder, int position) {\n        @Px int doubleMargin = margin * 2;\n        @Px int topMargin = (position < columns) ? margin * 2 : margin;\n\n        GridLayoutManager.LayoutParams layoutParams = (GridLayoutManager.LayoutParams) viewHolder.itemView.getLayoutParams();\n        layoutParams.height = itemHeight;\n        layoutParams.width = itemWidth;\n        int mod = LocaleUtils.currentLocaleIsRTL() ? 1 : 0;\n        if (position % columns == mod) {\n            viewHolder.itemView.setPadding(doubleMargin, topMargin, margin, margin);\n        } else if (position % columns == columns - 1) {\n            viewHolder.itemView.setPadding(margin, topMargin, doubleMargin, margin);\n        } else {\n            viewHolder.itemView.setPadding(margin, topMargin, margin, margin);\n        }\n        viewHolder.itemView.setLayoutParams(layoutParams);\n\n        if (getItemViewType(position) == NORMAL) {\n            final ViewHolder videoViewHolder = (ViewHolder) viewHolder;\n            final OverviewItem overviewItem = getItem(position);\n            Media item = overviewItem.media;\n\n            videoViewHolder.title.setText(item.title);\n            videoViewHolder.year.setText(item.year);\n\n            if (item.image != null && !item.image.equals(\"\")) {\n                Picasso.get().cancelRequest(videoViewHolder.coverImage);\n                Picasso.get().load(item.image)\n                        .resize(itemWidth, itemHeight)\n                        .transform(DrawGradient.getInstance())\n                        .into(videoViewHolder.coverImage);\n            }\n        }\n\n        // Here you apply the animation when the view is bound\n        setAnimation(viewHolder.itemView, position);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42051, "method_name": "onViewDetachedFromWindow", "class_name": "MediaGridAdapter", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewDetachedFromWindow(final RecyclerView.ViewHolder holder)\n    {\n        clearAnimation(holder.itemView);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42052, "method_name": "getItemCount", "class_name": "MediaGridAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return mItems.size();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42053, "method_name": "getItemViewType", "class_name": "MediaGridAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n        if (getItem(position).isLoadingItem) {\n            return LOADING;\n        }\n        return NORMAL;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42054, "method_name": "getItem", "class_name": "MediaGridAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "OverviewItem", "snippet": "    public OverviewItem getItem(int position) {\n        if (position < 0 || mItems.size() <= position) return null;\n        return mItems.get(position);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42055, "method_name": "setOnItemClickListener", "class_name": "MediaGridAdapter", "params": ["MediaGridAdapter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnItemClickListener(MediaGridAdapter.OnItemClickListener listener) {\n        mItemClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42056, "method_name": "removeLoading", "class_name": "MediaGridAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeLoading() {\n        if (getItemCount() <= 0) return;\n        OverviewItem item = mItems.get(getItemCount() - 1);\n        if (item.isLoadingItem) {\n            mItems.remove(getItemCount() - 1);\n            notifyDataSetChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42057, "method_name": "addLoading", "class_name": "MediaGridAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addLoading() {\n        OverviewItem item = null;\n        if (getItemCount() != 0) {\n            item = mItems.get(getItemCount() - 1);\n        }\n\n        if (getItemCount() == 0 || (item != null && !item.isLoadingItem)) {\n            mItems.add(new OverviewItem(true));\n            notifyDataSetChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42058, "method_name": "isLoading", "class_name": "MediaGridAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLoading() {\n        return getItemCount() > 0 && getItemViewType(getItemCount() - 1) == LOADING;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42059, "method_name": "setItems", "class_name": "MediaGridAdapter", "params": ["ArrayList<Media>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItems(ArrayList<Media> items) {\n        // Clear items\n        mItems.clear();\n        // Add new items, if available\n        if (null != items) {\n            for (Media item : items) {\n                mItems.add(new OverviewItem(item));\n            }\n        }\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42060, "method_name": "addItem", "class_name": "MediaGridAdapter", "params": ["Media"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addItem(Media media) {\n        mItems.add(new OverviewItem(media));\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42061, "method_name": "clearItems", "class_name": "MediaGridAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearItems() {\n        mItems.clear();\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42062, "method_name": "resetItemAnimationLastPosition", "class_name": "MediaGridAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void resetItemAnimationLastPosition() {\n        lastPosition = -1;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42063, "method_name": "setAnimation", "class_name": "MediaGridAdapter", "params": ["View", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setAnimation(View viewToAnimate, int position) {\n        if (position > lastPosition) {\n            Animation animation = AnimationUtils.loadAnimation(mContext, R.anim.item_animation_fall_down);\n            // animation.setDuration((int) (animation.getDuration() + ((position % (columns * columns)) * animation.getDuration() * 0.1f)));\n            viewToAnimate.startAnimation(animation);\n            lastPosition = position;\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42064, "method_name": "clearAnimation", "class_name": "MediaGridAdapter", "params": ["View"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clearAnimation(View viewToAnimate) {\n        if (viewToAnimate.getAnimation() != null) {\n            if (!viewToAnimate.getAnimation().hasEnded()) {\n                viewToAnimate.clearAnimation();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42065, "method_name": "getInstance", "class_name": "DrawGradient", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Transformation", "snippet": "        public static Transformation getInstance() {\n            if (instance == null) {\n                instance = new DrawGradient();\n            }\n            return instance;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": null, "implements": ["Transformation"], "modifiers": ["static", "private"]}}, {"id": 42066, "method_name": "transform", "class_name": "DrawGradient", "params": ["Bitmap"], "throws": null, "modifiers": ["public"], "return_type": "Bitmap", "snippet": "        public Bitmap transform(Bitmap src) {\n            // Code borrowed from https://stackoverflow.com/questions/23657811/how-to-mask-bitmap-with-lineargradient-shader-properly\n            int w = src.getWidth();\n            int h = src.getHeight();\n            Bitmap overlay = Bitmap.createBitmap(w, h, Bitmap.Config.ARGB_8888);\n            Canvas canvas = new Canvas(overlay);\n\n            canvas.drawBitmap(src, 0, 0, null);\n            src.recycle();\n\n            Paint paint = new Paint();\n            float gradientHeight = h / 2f;\n            LinearGradient shader = new LinearGradient(0, h - gradientHeight, 0, h, 0xFFFFFFFF, 0x00FFFFFF, Shader.TileMode.CLAMP);\n            paint.setShader(shader);\n            paint.setXfermode(new PorterDuffXfermode(PorterDuff.Mode.DST_IN));\n            canvas.drawRect(0, h - gradientHeight, w, h, paint);\n            return overlay;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": null, "implements": ["Transformation"], "modifiers": ["static", "private"]}}, {"id": 42067, "method_name": "key", "class_name": "DrawGradient", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String key() {\n            return \"gradient()\";\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": null, "implements": ["Transformation"], "modifiers": ["static", "private"]}}, {"id": 42068, "method_name": "getCoverImage", "class_name": "ViewHolder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ImageView", "snippet": "        public ImageView getCoverImage() {\n            return coverImage;\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": ["View"], "modifiers": ["public"]}}, {"id": 42069, "method_name": "onClick", "class_name": "ViewHolder", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onClick(View view) {\n            if (mItemClickListener != null) {\n                int position = getLayoutPosition();\n                Media item = getItem(position).media;\n                mItemClickListener.onItemClick(view, item, position);\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/adapters/MediaGridAdapter.java", "stars": "4", "class_props": {"extends": "RecyclerView", "implements": ["View"], "modifiers": ["public"]}}, {"id": 42070, "method_name": "onCreateView", "class_name": "BeamPlayerFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        return mRootView = inflater.inflate(R.layout.fragment_beamplayer, container, false);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42071, "method_name": "onViewCreated", "class_name": "BeamPlayerFragment", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(View v, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(v, savedInstanceState);\n        ButterKnife.bind(this, v);\n\n        mToolbar.getBackground().setAlpha(0);\n        mToolbar.setNavigationIcon(R.drawable.abc_ic_clear_material);\n        mButterSeekBar.setOnSeekBarChangeListener(mSeekBarChangeListener);\n        mVolumeBar.setOnSeekBarChangeListener(mVolumeBarChangeListener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42072, "method_name": "onActivityCreated", "class_name": "BeamPlayerFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(@Nullable Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n        mActivity = (BeamPlayerActivity) getActivity();\n        mActivity.setSupportActionBar(mToolbar);\n\n        mLoadingDialog = LoadingBeamingDialogFragment.newInstance();\n        mLoadingDialog.setOnCancelListener(new DialogInterface.OnCancelListener() {\n            @Override\n            public void onCancel(DialogInterface dialogInterface) {\n                closePlayer();\n            }\n        });\n        mLoadingDialog.show(getChildFragmentManager(), \"overlay_fragment\");\n\n        mResumePosition = mActivity.getResumePosition();\n\n        mStreamInfo = mActivity.getInfo();\n        int paletteColor = mStreamInfo.getPaletteColor();\n\n        if (paletteColor == -1) {\n            paletteColor = getResources().getColor(R.color.primary);\n        }\n\n        LayerDrawable progressDrawable;\n        LayerDrawable volumeDrawable;\n        if (!VersionUtils.isLollipop()) {\n            progressDrawable = (LayerDrawable) getResources().getDrawable(R.drawable.scrubber_progress_horizontal_bigtrack);\n            volumeDrawable = (LayerDrawable) getResources().getDrawable(R.drawable.scrubber_progress_horizontal);\n        } else {\n            if (mVolumeBar.getProgressDrawable() instanceof StateListDrawable) {\n                StateListDrawable stateListDrawable = (StateListDrawable) mVolumeBar.getProgressDrawable();\n                volumeDrawable = (LayerDrawable) stateListDrawable.getCurrent();\n            } else {\n                volumeDrawable = (LayerDrawable) mVolumeBar.getProgressDrawable();\n            }\n\n            progressDrawable = (LayerDrawable) getResources().getDrawable(R.drawable.progress_horizontal_material);\n        }\n\n        if(volumeDrawable == null) {\n            volumeDrawable = (LayerDrawable) progressDrawable.mutate();\n        }\n\n        progressDrawable.findDrawableByLayerId(android.R.id.background).setColorFilter(getResources().getColor(R.color.beamplayer_seekbar_track), PorterDuff.Mode.SRC_IN);\n        progressDrawable.findDrawableByLayerId(android.R.id.progress).setColorFilter(paletteColor, PorterDuff.Mode.SRC_IN);\n        progressDrawable.findDrawableByLayerId(android.R.id.secondaryProgress).setColorFilter(paletteColor, PorterDuff.Mode.SRC_IN);\n\n        volumeDrawable.findDrawableByLayerId(android.R.id.background).setColorFilter(getResources().getColor(R.color.beamplayer_seekbar_track), PorterDuff.Mode.SRC_IN);\n        volumeDrawable.findDrawableByLayerId(android.R.id.progress).setColorFilter(paletteColor, PorterDuff.Mode.SRC_IN);\n        volumeDrawable.findDrawableByLayerId(android.R.id.secondaryProgress).setColorFilter(paletteColor, PorterDuff.Mode.SRC_IN);\n\n        mButterSeekBar.setProgressDrawable(progressDrawable);\n        mButterSeekBar.getThumbDrawable().setColorFilter(paletteColor, PorterDuff.Mode.SRC_IN);\n\n        mVolumeBar.setProgressDrawable(volumeDrawable);\n        mVolumeBar.getThumbDrawable().setColorFilter(paletteColor, PorterDuff.Mode.SRC_IN);\n\n        if (!VersionUtils.isJellyBean()) {\n            mPlayButton.setBackgroundDrawable(PixelUtils.changeDrawableColor(mPlayButton.getContext(), R.drawable.play_button_circle, paletteColor));\n        } else {\n            mPlayButton.setBackground(PixelUtils.changeDrawableColor(mPlayButton.getContext(), R.drawable.play_button_circle, paletteColor));\n        }\n\n        if (mStreamInfo.getImageUrl() != null && !mStreamInfo.getImageUrl().equals(\"\")) {\n            Picasso.get().load(mStreamInfo.getImageUrl())\n                .into(mCoverImage, new Callback() {\n                    @Override\n                    public void onSuccess() {\n                        AnimUtils.fadeIn(mCoverImage);\n                    }\n\n                    @Override\n                    public void onError(Exception e) {\n\n                    }\n                });\n        }\n\n        mActivity.getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n        mActivity.getSupportActionBar().setTitle(\"\");\n\n        try {\n            if (!mBeamManager.getConnectedDevice().hasCapability(MediaControl.Position) || !mBeamManager.getConnectedDevice().hasCapability(MediaControl.Seek) || !mBeamManager.getConnectedDevice().hasCapability(MediaControl.Duration)) {\n                mHasSeekControl = false;\n                mButterSeekBar.setVisibility(View.INVISIBLE);\n            }\n\n            if (!mBeamManager.getConnectedDevice().hasCapability(VolumeControl.Volume_Get) || !mBeamManager.getConnectedDevice().hasCapability(VolumeControl.Volume_Set) || !mBeamManager.getConnectedDevice().hasCapability(VolumeControl.Volume_Subscribe)) {\n                mHasVolumeControl = false;\n                mPanel.setEnabled(false);\n                mPanel.setTouchEnabled(false);\n            }\n\n            if (!mBeamManager.getConnectedDevice().hasCapability(MediaControl.Pause)) {\n                mPlayButton.setEnabled(false);\n            }\n\n            startVideo();\n        } catch (Exception e) {\n            Snackbar.make(mRootView, R.string.unknown_error, Snackbar.LENGTH_SHORT).show();\n            getActivity().finish();\n        }\n\n        Intent intent = new Intent( getActivity(), BeamPlayerNotificationService.class );\n        intent.setAction(mIsPlaying ? BeamPlayerNotificationService.ACTION_PLAY : BeamPlayerNotificationService.ACTION_PAUSE);\n        getActivity().startService(intent);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42073, "method_name": "onResume", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        super.onResume();\n\n        BeamManager.getInstance(getActivity()).addDeviceListener(mDeviceListener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42074, "method_name": "onPause", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        super.onPause();\n\n        BeamManager manager = BeamManager.getInstance(getActivity());\n\n        manager.removeDeviceListener(mDeviceListener);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42075, "method_name": "onDestroy", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        super.onDestroy();\n\n        Intent intent = new Intent( getActivity(), BeamPlayerNotificationService.class );\n        getActivity().stopService(intent);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42076, "method_name": "startVideo", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startVideo() {\n        mBeamManager.playVideo(mStreamInfo, new MediaPlayer.LaunchListener() {\n            @Override\n            public void onSuccess(MediaPlayer.MediaLaunchObject object) {\n                mMediaControl = object.mediaControl;\n\n                mMediaControl.subscribePlayState(mPlayStateListener);\n                mMediaControl.getPlayState(mPlayStateListener);\n\n                if (mHasVolumeControl) {\n                    mVolumeControl = BeamManager.getInstance(getActivity()).getVolumeControl();\n                    mVolumeControl.subscribeVolume(mVolumeListener);\n                    mVolumeControl.getVolume(mVolumeListener);\n                }\n\n                if (mHasSeekControl) {\n                    startUpdating();\n                    mMediaControl.getDuration(mDurationListener);\n                }\n\n                if(mResumePosition > 0) {\n                    mMediaControl.seek(mResumePosition, null);\n                }\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Timber.e(error.getCause(), error.getMessage());\n                if (mRetries > 2 && !isDetached()) {\n                    if (mLoadingDialog.isVisible() && !getActivity().isFinishing()) {\n                        mLoadingDialog.dismiss();\n                    }\n\n                    OptionDialogFragment.show(mActivity, getChildFragmentManager(), R.string.unknown_error, R.string.beaming_failed, android.R.string.yes, android.R.string.no, new OptionDialogFragment.Listener() {\n                        @Override\n                        public void onSelectionPositive() {\n                            startVideo();\n                        }\n\n                        @Override\n                        public void onSelectionNegative() {\n                            closePlayer();\n                        }\n                    });\n\n                    return;\n                }\n\n                startVideo();\n                mRetries++;\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42077, "method_name": "playPauseClick", "class_name": "BeamPlayerFragment", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playPauseClick(View v) {\n        if(mMediaControl == null) return;\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n            @Override\n            public void onSuccess(Object object) {\n                mMediaControl.getPlayState(mPlayStateListener);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                mMediaControl.getPlayState(mPlayStateListener);\n            }\n        };\n\n        if (mIsPlaying) {\n            mIsPlaying = false;\n            mMediaControl.pause(responseListener);\n        } else {\n            mIsPlaying = true;\n            mMediaControl.play(responseListener);\n        }\n\n        mPlayButton.setImageResource(mIsPlaying ? R.drawable.ic_av_pause : R.drawable.ic_av_play);\n        mPlayButton.setContentDescription(mIsPlaying ? getString(R.string.pause) : getString(R.string.play));\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42078, "method_name": "forwardClick", "class_name": "BeamPlayerFragment", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void forwardClick(View v) {\n        int newProgress = mButterSeekBar.getProgress() + 10000;\n        if (newProgress > mTotalTimeDuration) newProgress = (int) mTotalTimeDuration;\n        mMediaControl.seek(newProgress, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42079, "method_name": "backwardClick", "class_name": "BeamPlayerFragment", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void backwardClick(View v) {\n        int newProgress = mButterSeekBar.getProgress() - 10000;\n        if (newProgress < 0) newProgress = 0;\n        mMediaControl.seek(newProgress, null);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42080, "method_name": "startUpdating", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startUpdating() {\n        mTask = mExecutor.scheduleAtFixedRate(mPositionRunnable, 0, REFRESH_INTERVAL_MS, TimeUnit.MILLISECONDS);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42081, "method_name": "stopUpdating", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void stopUpdating() {\n        if (mTask != null) {\n            mTask.cancel(false);\n        }\n        if (mExecutor != null) {\n            for (Runnable r : mExecutor.getQueue()) {\n                mExecutor.remove(r);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42082, "method_name": "closePlayer", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void closePlayer() {\n        if (mActivity != null && mActivity.getService() != null) {\n            mActivity.getService().stopStreaming();\n        }\n        mBeamManager.stopVideo();\n        getActivity().finish();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42083, "method_name": "onStreamStarted", "class_name": "BeamPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStarted(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42084, "method_name": "onStreamPrepared", "class_name": "BeamPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamPrepared(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42085, "method_name": "onStreamError", "class_name": "BeamPlayerFragment", "params": ["Torrent", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamError(Torrent torrent, Exception e) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42086, "method_name": "onStreamReady", "class_name": "BeamPlayerFragment", "params": ["Torrent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamReady(Torrent torrent) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42087, "method_name": "onServerReady", "class_name": "BeamPlayerFragment", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onServerReady(String url) { }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42088, "method_name": "onStreamProgress", "class_name": "BeamPlayerFragment", "params": ["Torrent", "StreamStatus"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamProgress(Torrent torrent, StreamStatus status) {\n        mDownloadProgress = mTotalTimeDuration / 100 * status.progress;\n        mButterSeekBar.setSecondaryProgress(0); // hack to make the secondary progress appear on Android 5.0\n        mButterSeekBar.setSecondaryProgress(mDownloadProgress.intValue());\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42089, "method_name": "onStreamStopped", "class_name": "BeamPlayerFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStreamStopped() {}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/BeamPlayerFragment.java", "stars": "4", "class_props": {"extends": "Fragment", "implements": ["TorrentServerListener"], "modifiers": ["public"]}}, {"id": 42090, "method_name": "getMemory", "class_name": "AbstractHardware", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MemorySystem", "snippet": "    public MemorySystem getMemory() {\n        return memory;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42091, "method_name": "setDisplay", "class_name": "AbstractHardware", "params": ["AbstractDisplay"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDisplay(AbstractDisplay display) {\n        this.display = display;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42092, "method_name": "getDisplay", "class_name": "AbstractHardware", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractDisplay", "snippet": "    public AbstractDisplay getDisplay() {\n        return display;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42093, "method_name": "getSoundProcessor", "class_name": "AbstractHardware", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractSoundProcessor", "snippet": "    public AbstractSoundProcessor getSoundProcessor() {\n        return soundProcessor;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42094, "method_name": "setSoundProcessor", "class_name": "AbstractHardware", "params": ["AbstractSoundProcessor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSoundProcessor(AbstractSoundProcessor sound) {\n        this.soundProcessor = sound;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42095, "method_name": "getKeyboard", "class_name": "AbstractHardware", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AbstractKeyboard", "snippet": "    public AbstractKeyboard getKeyboard() {\n        return keyboard;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42096, "method_name": "setKeyboard", "class_name": "AbstractHardware", "params": ["AbstractKeyboard"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setKeyboard(AbstractKeyboard keyboard) {\n        this.keyboard = keyboard;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42097, "method_name": "getGamepad", "class_name": "AbstractHardware", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Gamepad", "snippet": "    public Gamepad getGamepad() {\n        return gamepad;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42098, "method_name": "setGamepad", "class_name": "AbstractHardware", "params": ["Gamepad"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setGamepad(Gamepad gamepad) {\n        this.gamepad = gamepad;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42099, "method_name": "getApplication", "class_name": "AbstractHardware", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Application", "snippet": "    public Application getApplication() {\n        return application;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42100, "method_name": "setApplication", "class_name": "AbstractHardware", "params": ["Application"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setApplication(Application application) {\n        this.application = application;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42101, "method_name": "saveState", "class_name": "AbstractHardware", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveState(StateSet ss) {\n        for (Addressable m : memory.getMemories()) {\n            if (m instanceof StateSavable) {\n                ((StateSavable)m).saveState(ss);\n            }\n        }\n        display.saveState(ss);\n        soundProcessor.saveState(ss);\n        keyboard.saveState(ss);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42102, "method_name": "loadState", "class_name": "AbstractHardware", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadState(StateSet ss) {\n        for (Addressable m : memory.getMemories()) {\n            if (m instanceof StateSavable) {\n                ((StateSavable)m).loadState(ss);\n            }\n        }\n        display.loadState(ss);\n        soundProcessor.loadState(ss);\n        keyboard.loadState(ss);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/AbstractHardware.java", "stars": "4", "class_props": {"extends": null, "implements": ["StateSavable"], "modifiers": ["public"]}}, {"id": 42103, "method_name": "onCreate", "class_name": "ChangeLanguageActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_change_language);\n\n        title           = findViewById(R.id.title);\n        back            = findViewById(R.id.back);\n        checkIndoneisa  = findViewById(R.id.checkIndonesia);\n        checkEnglish    = findViewById(R.id.checkEnglish);\n        layoutIndonesia = findViewById(R.id.layoutIndonesia);\n        layoutEnglish   = findViewById(R.id.layoutEnglish);\n        indonesiaText   = findViewById(R.id.indonesiaText);\n        englishText     = findViewById(R.id.englishText);\n\n        title.setTypeface(FontUtils.loadFontFromAssets(this, Constant.FONT_BOLD));\n        indonesiaText.setTypeface(FontUtils.loadFontFromAssets(this, Constant.FONT_BOLD));\n        englishText.setTypeface(FontUtils.loadFontFromAssets(this, Constant.FONT_BOLD));\n\n        back.setOnClickListener(this);\n        layoutIndonesia.setOnClickListener(this);\n        layoutEnglish.setOnClickListener(this);\n\n        SharedPreferences mSettings = PreferenceManager.getDefaultSharedPreferences(this);\n        String lang= mSettings.getString(\"lang\", \"en\");\n        if(lang.equals(Constant.INDONESIA)){\n            checkIndoneisa.setVisibility(View.VISIBLE);\n        }else if(lang.equals(Constant.ENGLISH)){\n            checkEnglish.setVisibility(View.VISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/Activity/ChangeLanguageActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 42104, "method_name": "onClick", "class_name": "ChangeLanguageActivity", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onClick(View v) {\n        if(v.getId() == R.id.back){\n            finish();\n        }else if(v.getId() == R.id.layoutIndonesia){\n            changeLanguage(Constant.INDONESIA);\n        }else if(v.getId() == R.id.layoutEnglish){\n            changeLanguage(Constant.ENGLISH);\n        }\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/Activity/ChangeLanguageActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 42105, "method_name": "changeLanguage", "class_name": "ChangeLanguageActivity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changeLanguage(String language){\n        if(language == Constant.INDONESIA){\n            checkIndoneisa.setVisibility(View.VISIBLE);\n            checkEnglish.setVisibility(View.GONE);\n        }else if(language == Constant.ENGLISH){\n            checkIndoneisa.setVisibility(View.GONE);\n            checkEnglish.setVisibility(View.VISIBLE);\n        }\n        Utility.setLocale(language, getBaseContext(), this);\n        Intent refresh = new Intent(this, MainActivity.class);\n        finish();\n       startActivity(refresh);\n    }", "url": "https://raw.githubusercontent.com/fadhilahramadhan/Android_Covid19Stats/master/app/src/main/java/fadhilah/ramadhan/covid19stats/Activity/ChangeLanguageActivity.java", "stars": "2", "class_props": {"extends": "AppCompatActivity", "implements": ["View"], "modifiers": ["public"]}}, {"id": 42106, "method_name": "main", "class_name": "FloatingNumber", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\t\tfloat num = 4.5F;\n\t\tfloat num2 = 6.132423F;\n\t\tfloat num3 = 9.99F;\n\n\t\tdouble d = 14223.99;\n\n\t\td = d * 4;\n\t\tSystem.out.println(d);\n\n\t\tdouble d1 = 1.5;\n\t\tString res = \"Value is \" + d1;\n\t\tSystem.out.println(res);\n\n\t\tdouble d2 = 5.3;\n\t\t//String res1 = \"Result \" + (d2 + 4);\n\t\t//            \"Result 9.3\"\n\t\tString res1 = \"Result \" + (d2 + 4);\n\n\t\tSystem.out.println(res1); // 9.3\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day3/FloatingNumber.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42107, "method_name": "getActivatedMode", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getActivatedMode() {\n        return activatedMode;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42108, "method_name": "setActivatedMode", "class_name": "ContractTariffOption", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setActivatedMode(int value) {\n        this.activatedMode = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42109, "method_name": "getActivatedTime", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getActivatedTime() {\n        return activatedTime;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42110, "method_name": "setActivatedTime", "class_name": "ContractTariffOption", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setActivatedTime(String value) {\n        this.activatedTime = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42111, "method_name": "getChargeId", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getChargeId() {\n        return chargeId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42112, "method_name": "setChargeId", "class_name": "ContractTariffOption", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChargeId(int value) {\n        this.chargeId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42113, "method_name": "getContractId", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getContractId() {\n        return contractId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42114, "method_name": "setContractId", "class_name": "ContractTariffOption", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setContractId(int value) {\n        this.contractId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42115, "method_name": "getDeactivatedTime", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDeactivatedTime() {\n        return deactivatedTime;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42116, "method_name": "setDeactivatedTime", "class_name": "ContractTariffOption", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDeactivatedTime(String value) {\n        this.deactivatedTime = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42117, "method_name": "getOptionId", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOptionId() {\n        return optionId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42118, "method_name": "setOptionId", "class_name": "ContractTariffOption", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOptionId(int value) {\n        this.optionId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42119, "method_name": "getOptionTitle", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOptionTitle() {\n        return optionTitle;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42120, "method_name": "setOptionTitle", "class_name": "ContractTariffOption", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOptionTitle(String value) {\n        this.optionTitle = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42121, "method_name": "getSumma", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getSumma() {\n        return summa;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42122, "method_name": "setSumma", "class_name": "ContractTariffOption", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSumma(BigDecimal value) {\n        this.summa = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42123, "method_name": "getTimeFrom", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTimeFrom() {\n        return timeFrom;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42124, "method_name": "setTimeFrom", "class_name": "ContractTariffOption", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimeFrom(String value) {\n        this.timeFrom = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42125, "method_name": "getTimeTo", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTimeTo() {\n        return timeTo;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42126, "method_name": "setTimeTo", "class_name": "ContractTariffOption", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimeTo(String value) {\n        this.timeTo = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42127, "method_name": "getUserId", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42128, "method_name": "setUserId", "class_name": "ContractTariffOption", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(int value) {\n        this.userId = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42129, "method_name": "getUserTitle", "class_name": "ContractTariffOption", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUserTitle() {\n        return userTitle;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42130, "method_name": "setUserTitle", "class_name": "ContractTariffOption", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserTitle(String value) {\n        this.userTitle = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/ContractTariffOption.java", "stars": "12", "class_props": {"extends": "Id", "implements": null, "modifiers": ["public"]}}, {"id": 42131, "method_name": "getStatus", "class_name": "BadRequestException", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpStatus", "snippet": "    public HttpStatus getStatus() {\n        return HttpStatus.BAD_REQUEST;\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/exception/BadRequestException.java", "stars": "1", "class_props": {"extends": "BaseException", "implements": null, "modifiers": ["public"]}}, {"id": 42132, "method_name": "channelActive", "class_name": "StatusChannelHandler", "params": ["ChannelHandlerContext"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelActive(ChannelHandlerContext ctx) throws Exception {\n        super.channelActive(ctx);\n        eventListener.connectSuccess();\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/handler/StatusChannelHandler.java", "stars": "23", "class_props": {"extends": "ChannelInboundHandlerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42133, "method_name": "exceptionCaught", "class_name": "StatusChannelHandler", "params": ["ChannelHandlerContext", "Throwable"], "throws": ["AuthException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void exceptionCaught(ChannelHandlerContext ctx, Throwable cause) throws AuthException {\n        eventListener.connectionException(cause);\n        if (cause.getCause() instanceof AuthError){\n            throw  new AuthException(new AuthError(\"auth failure\"));\n        }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/handler/StatusChannelHandler.java", "stars": "23", "class_props": {"extends": "ChannelInboundHandlerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42134, "method_name": "channelInactive", "class_name": "StatusChannelHandler", "params": ["ChannelHandlerContext"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void channelInactive(ChannelHandlerContext ctx) throws Exception {\n        super.channelInactive(ctx);\n        connectionBrokenListener.connectionBroken();\n        eventListener.connectionBroken();\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/handler/StatusChannelHandler.java", "stars": "23", "class_props": {"extends": "ChannelInboundHandlerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42135, "method_name": "onCreate", "class_name": "LiveWallpaper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate()\n\t{\n\t\tsuper.onCreate();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "WallpaperService", "implements": null, "modifiers": ["public"]}}, {"id": 42136, "method_name": "onDestroy", "class_name": "LiveWallpaper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDestroy()\n\t{\n\t\tsuper.onDestroy();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "WallpaperService", "implements": null, "modifiers": ["public"]}}, {"id": 42137, "method_name": "onCreateEngine", "class_name": "LiveWallpaper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Engine", "snippet": "\tpublic Engine onCreateEngine()\n\t{\n\t\treturn new TestPatternEngine();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "WallpaperService", "implements": null, "modifiers": ["public"]}}, {"id": 42138, "method_name": "onSharedPreferenceChanged", "class_name": "TestPatternEngine", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onSharedPreferenceChanged(SharedPreferences prefs,\n\t\t\t\tString key)\n\t\t{\n\t\t\tmShape = prefs.getString(\"livewallpaper_testpattern\", \"smpte\");\n\t\t\tmMotion = prefs.getBoolean(\"livewallpaper_movement\", true);\n\t\t\treadColors();\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42139, "method_name": "readColors", "class_name": "TestPatternEngine", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\t\tprivate void readColors()\n\t\t{\n\n\t\t\tint pid = getResources().getIdentifier(mShape + \"colors\", \"array\", getPackageName());\n\n\t\t\trectColor = getResources().getIntArray(pid);\n\t\t\tmRectCount = rectColor.length;\n\t\t\tmColorRectangles = new Rect[mRectCount];\n\n\t\t\tSystem.out.println(\"mRectCount \"+mRectCount);\n\t\t\tinitFrameParams();\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42140, "method_name": "onCreate", "class_name": "TestPatternEngine", "params": ["SurfaceHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onCreate(SurfaceHolder surfaceHolder)\n\t\t{\n\t\t\tsuper.onCreate(surfaceHolder);\n\t\t\tsetTouchEventsEnabled(true);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42141, "method_name": "onDestroy", "class_name": "TestPatternEngine", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onDestroy()\n\t\t{\n\t\t\tsuper.onDestroy();\n\t\t\tmHandler.removeCallbacks(mDrawPattern);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42142, "method_name": "onVisibilityChanged", "class_name": "TestPatternEngine", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onVisibilityChanged(boolean visible)\n\t\t{\n\t\t\tmVisible = visible;\n\t\t\tif (visible)\n\t\t\t{\n\t\t\t\tdrawFrame();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmHandler.removeCallbacks(mDrawPattern);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42143, "method_name": "onSurfaceChanged", "class_name": "TestPatternEngine", "params": ["SurfaceHolder", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onSurfaceChanged(SurfaceHolder holder, int format,\n\t\t\t\tint width, int height)\n\t\t{\n\t\t\tsuper.onSurfaceChanged(holder, format, width, height);\n\n\t\t\tinitFrameParams();\n\n\t\t\tdrawFrame();\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42144, "method_name": "onSurfaceCreated", "class_name": "TestPatternEngine", "params": ["SurfaceHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onSurfaceCreated(SurfaceHolder holder)\n\t\t{\n\t\t\tsuper.onSurfaceCreated(holder);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42145, "method_name": "onSurfaceDestroyed", "class_name": "TestPatternEngine", "params": ["SurfaceHolder"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onSurfaceDestroyed(SurfaceHolder holder)\n\t\t{\n\t\t\tsuper.onSurfaceDestroyed(holder);\n\t\t\tmVisible = false;\n\t\t\tmHandler.removeCallbacks(mDrawPattern);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42146, "method_name": "onOffsetsChanged", "class_name": "TestPatternEngine", "params": ["float", "float", "float", "float", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onOffsetsChanged(float xOffset, float yOffset, float xStep,\n\t\t\t\tfloat yStep, int xPixels, int yPixels)\n\t\t{\n\n\t\t\tdrawFrame();\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42147, "method_name": "onTouchEvent", "class_name": "TestPatternEngine", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void onTouchEvent(MotionEvent event)\n\t\t{\n\t\t\tif (event.getAction() == MotionEvent.ACTION_MOVE)\n\t\t\t{\n\t\t\t\tmTouchX = event.getX();\n\t\t\t\tmTouchY = event.getY();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tmTouchX = -1;\n\t\t\t\tmTouchY = -1;\n\t\t\t}\n\t\t\tsuper.onTouchEvent(event);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42148, "method_name": "drawFrame", "class_name": "TestPatternEngine", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\t\tvoid drawFrame()\n\t\t{\n\t\t\tfinal SurfaceHolder holder = getSurfaceHolder();\n\n\t\t\tCanvas c = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tc = holder.lockCanvas();\n\t\t\t\tif (c != null)\n\t\t\t\t{\n\t\t\t\t\t// draw something\n\t\t\t\t\tdrawPattern(c);\n\t\t\t\t\tdrawTouchPoint(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tif (c != null)\n\t\t\t\t\tholder.unlockCanvasAndPost(c);\n\t\t\t}\n\n\t\t\tmHandler.removeCallbacks(mDrawPattern);\n\t\t\tif (mVisible)\n\t\t\t{\n\t\t\t\tmHandler.postDelayed(mDrawPattern, 1000 / 25);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42149, "method_name": "drawPattern", "class_name": "TestPatternEngine", "params": ["Canvas"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\t\tvoid drawPattern(Canvas c)\n\t\t{\n\t\t\tc.save();\n\t\t\tc.drawColor(0xff000000);\n\n\t\t\tPaint paint = new Paint();\n\t\t\tif (mMotion)\n\t\t\t{\n\t\t\t\tmFrameCounter++;\n\t\t\t\tif (mHorizontal)\n\t\t\t\t{\n\t\t\t\t\tint right;\n\t\t\t\t\tint left;\n\t\t\t\t\tif (mFrameCounter > mRectFrame.right)\n\t\t\t\t\t\tmFrameCounter = 0;\n\t\t\t\t\t\n\t\t\t\t\tfor (int i = 0; i < mRectCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tpaint.setColor(rectColor[i]);\n\n\t\t\t\t\t\tright = mColorRectangles[i].right + mFrameCounter;\n\t\t\t\t\t\tleft = mColorRectangles[i].left + mFrameCounter;\n\n\t\t\t\t\t\tif(right > mRectFrame.right)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.drawRect(left - mRectFrame.right, mColorRectangles[i].top, right - mRectFrame.right, mColorRectangles[i].bottom, paint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(left < mRectFrame.right)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.drawRect(left, mColorRectangles[i].top, right, mColorRectangles[i].bottom, paint);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(mShape.compareToIgnoreCase(\"smpte\") == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\tright =mGradientRect.right + mFrameCounter;\n\t\t\t\t\t\tleft = mGradientRect.left + mFrameCounter;\n\t\t\t\t\t\tif(right > mRectFrame.right)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmGradient.setBounds(left - mRectFrame.right, mGradientRect.top, right - mRectFrame.right, mGradientRect.bottom);\n\t\t\t\t\t\t\tmGradient.draw(c);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(left < mRectFrame.right)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmGradient.setBounds(left, mGradientRect.top, right, mGradientRect.bottom);\n\t\t\t\t\t\t\tmGradient.draw(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\tint top;\n\t\t\t\t\tint bottom;\n\t\t\t\t\tif (mFrameCounter > mRectFrame.bottom)\n\t\t\t\t\t\tmFrameCounter = 0;\n\n\t\t\t\t\t\n\t\t\t\t\tfor (int i = 0; i < mRectCount; i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tpaint.setColor(rectColor[i]);\n\n\t\t\t\t\t\ttop = mColorRectangles[i].top + mFrameCounter;\n\t\t\t\t\t\tbottom = mColorRectangles[i].bottom + mFrameCounter;\n\n\t\t\t\t\t\tif(bottom > mRectFrame.bottom)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.drawRect(mColorRectangles[i].left, top - mRectFrame.bottom, mColorRectangles[i].right, bottom - mRectFrame.bottom, paint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(top < mRectFrame.bottom)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tc.drawRect(mColorRectangles[i].left, top, mColorRectangles[i].right, bottom, paint);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif(mShape.compareToIgnoreCase(\"smpte\") == 0)\n\t\t\t\t\t{\n\t\t\t\t\t\ttop = mGradientRect.top + mFrameCounter;\n\t\t\t\t\t\tbottom = mGradientRect.bottom + mFrameCounter;\n\n\t\t\t\t\t\tif(bottom > mRectFrame.bottom)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmGradient.setBounds(mGradientRect.left, top - mRectFrame.bottom, mGradientRect.right, bottom - mRectFrame.bottom);\n\t\t\t\t\t\t\tmGradient.draw(c);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif(top < mRectFrame.bottom)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmGradient.setBounds(mGradientRect.left, top, mGradientRect.right, bottom);\n\t\t\t\t\t\t\tmGradient.draw(c);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tfor (int i = 0; i < mRectCount; i++)\n\t\t\t\t{\n\t\t\t\t\tpaint.setColor(rectColor[i]);\n\t\t\t\t\tc.drawRect(mColorRectangles[i], paint);\n\t\t\t\t}\n\n\t\t\t\tif(mShape.compareToIgnoreCase(\"smpte\") == 0)\n\t\t\t\t{\n\t\t\t\t\tmGradient.setBounds(mGradientRect);\n\t\t\t\t\tmGradient.draw(c);\n\t\t\t\t}\n\t\t\t}\n\t\t\tc.restore();\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42150, "method_name": "drawTouchPoint", "class_name": "TestPatternEngine", "params": ["Canvas"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\t\tvoid drawTouchPoint(Canvas c)\n\t\t{\n\t\t\tif (mTouchX >= 0 && mTouchY >= 0)\n\t\t\t{\n\t\t\t\tc.drawCircle(mTouchX, mTouchY, 80, mPaint);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42151, "method_name": "initFrameParams", "class_name": "TestPatternEngine", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\t\tvoid initFrameParams()\n\t\t{\n\t\t\tDisplayMetrics metrics = new DisplayMetrics();\n\t\t\tDisplay display = ((WindowManager) getSystemService(WINDOW_SERVICE)).getDefaultDisplay();\n\t\t\tdisplay.getMetrics(metrics);\n\n\t\t\tmRectFrame = new Rect(0, 0, metrics.widthPixels, metrics.heightPixels);\n\n\t\t\t\n\t\t\tint rotation = display.getOrientation();\n\t\t\tif(rotation == Surface.ROTATION_0 || rotation == Surface.ROTATION_180)\n\t\t\t\tmHorizontal = false;\n\t\t\telse\n\t\t\t\tmHorizontal = true;\n\n\t\t\tSystem.out.println(\"mHorizontal \"+mHorizontal);\n\t\t\tSystem.out.println(\"mShape \"+mShape);\n\t\t\tif(mShape.compareToIgnoreCase(\"smpte\") == 0)\n\t\t\t{\n\t\t\t\tSystem.out.println(\"mShape == smpte\");\n\t\t\t\n\t\t\t\tCreateSmpte();\n\t\t\t}\n\t\t\telse if(mShape.compareToIgnoreCase(\"bars\") == 0)\n\t\t\t{\n\t\t\t\tSystem.out.println(\"mShape == bars\");\n\t\t\t\tCreateBars();\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tSystem.out.println(\"mShape == ebu\");\n\t\t\t\tCreateEbu();\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42152, "method_name": "CreateSmpte", "class_name": "TestPatternEngine", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\t\tprivate void CreateSmpte()\n\t\t{\n\t\t\tif(mHorizontal)\n\t\t\t{\n\t\t\t\tint topHeight = mRectFrame.bottom * 7 / 12;\n\t\t\t\tint bottomHeight = mRectFrame.bottom * 3 / 4;\n\t\t\t\tint wideColumnWidth = mRectFrame.right / 8;\n\t\t\t\tint narrowColumnWidth = mRectFrame.right * 3 / 28;\n\n\t\t\t\tmColorRectangles[0] = new Rect(0, 0, wideColumnWidth, topHeight);\n\t\t\t\tfor (int i = 1; i < 8; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[i - 1].right, 0, mColorRectangles[i - 1].right + narrowColumnWidth, topHeight);\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[8] = new Rect(mColorRectangles[7].right, 0, mRectFrame.right, topHeight);\n\n\t\t\t\tfor (int i = 0; i < 2; i++)\n\t\t\t\t{\n\t\t\t\t\tint middleTop = mRectFrame.bottom * (7 + i) / 12;\n\t\t\t\t\tint middleBottom = mRectFrame.bottom * (8 + i) / 12;\n\t\t\t\t\tmColorRectangles[i + 9] = new Rect(0, middleTop, wideColumnWidth, middleBottom);\n\t\t\t\t\tmColorRectangles[i + 11] = new Rect(wideColumnWidth, middleTop, narrowColumnWidth + wideColumnWidth, middleBottom);\n\t\t\t\t\tmColorRectangles[i + 13] = new Rect(narrowColumnWidth * 7 + wideColumnWidth, middleTop, mRectFrame.right, middleBottom);\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[15] = new Rect(narrowColumnWidth + wideColumnWidth, topHeight, narrowColumnWidth * 7 + wideColumnWidth, mRectFrame.bottom * 8 / 12);\n\n\t\t\t\tmGradientRect = new Rect(mColorRectangles[15].left, mColorRectangles[15].bottom, mColorRectangles[15].right, mRectFrame.bottom * 9 / 12);\n\t\t\t\tmGradient = new GradientDrawable(Orientation.LEFT_RIGHT, new int[] { 0xff050505, 0xfffdfdfd });\n\t\t\t\tmGradient.setBounds(mGradientRect);\n\n\t\t\t\tmColorRectangles[16] = new Rect(0, bottomHeight, wideColumnWidth, mRectFrame.right);\n\t\t\t\tmColorRectangles[17] = new Rect(mColorRectangles[16].right, bottomHeight, mRectFrame.right * 9 / 56 + mColorRectangles[16].right, mRectFrame.bottom);\n\t\t\t\tmColorRectangles[18] = new Rect(mColorRectangles[17].right, bottomHeight, mRectFrame.right * 3 / 14 + mColorRectangles[17].right, mRectFrame.bottom);\n\t\t\t\tmColorRectangles[19] = new Rect(mColorRectangles[18].right, bottomHeight, mRectFrame.right * 45 / 448 + mColorRectangles[18].right, mRectFrame.bottom);\n\t\t\t\tfor (int i = 20; i < 25; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[i - 1].right, bottomHeight, mRectFrame.right * 15 / 448 + mColorRectangles[i - 1].right, mRectFrame.right);\n\t\t\t\t}\n\t\t\t\tmColorRectangles[25] = new Rect(mColorRectangles[24].right, bottomHeight, narrowColumnWidth + mColorRectangles[24].right, mRectFrame.bottom);\n\t\t\t\tmColorRectangles[26] = new Rect(mColorRectangles[25].right, bottomHeight, mRectFrame.right, mRectFrame.bottom);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint topHeight = mRectFrame.right * 5 / 12;\n\t\t\t\tint bottomHeight = mRectFrame.right / 4;\n\t\t\t\tint wideColumnWidth = mRectFrame.bottom / 8;\n\t\t\t\tint narrowColumnWidth = mRectFrame.bottom * 3 / 28;\n\n\t\t\t\tmColorRectangles[0] = new Rect(topHeight, 0, mRectFrame.bottom, wideColumnWidth);\n\n\t\t\t\tfor (int i = 1; i < 8; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(topHeight, mColorRectangles[i - 1].bottom, mRectFrame.right, narrowColumnWidth + mColorRectangles[i - 1].bottom);\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[8] = new Rect(topHeight, mColorRectangles[7].bottom, mRectFrame.right, mRectFrame.bottom);\n\n\t\t\t\tfor (int i = 0; i < 2; i++)\n\t\t\t\t{\n\t\t\t\t\tint middleLeft = mRectFrame.right * (4 - i) / 12;\n\t\t\t\t\tint middleRight = mRectFrame.right * (5 - i) / 12;\n\t\t\t\t\tmColorRectangles[i + 9] = new Rect(middleLeft, 0, middleRight, wideColumnWidth);\n\t\t\t\t\tmColorRectangles[i + 11] = new Rect(middleLeft, wideColumnWidth, middleRight, narrowColumnWidth + wideColumnWidth);\n\t\t\t\t\tmColorRectangles[i + 13] = new Rect(middleLeft, narrowColumnWidth * 7 + wideColumnWidth, middleRight, mRectFrame.bottom);\n\t\t\t\t}\n\t\t\t\tmColorRectangles[15] = new Rect(mRectFrame.right * 4 / 12, narrowColumnWidth + wideColumnWidth, mRectFrame.right * 5 / 12, narrowColumnWidth * 7 + wideColumnWidth);\n\n\t\t\t\tmGradientRect = new Rect(mRectFrame.right * 3 / 12, mColorRectangles[15].top, mColorRectangles[15].left, mColorRectangles[15].bottom);\n\t\t\t\tmGradient = new GradientDrawable(Orientation.TOP_BOTTOM, new int[] { 0xff050505, 0xfffdfdfd });\n\t\t\t\tmGradient.setBounds(mGradientRect);\n\n\t\t\t\tmColorRectangles[16] = new Rect(0, 0, bottomHeight, wideColumnWidth);\n\t\t\t\tmColorRectangles[17] = new Rect(0, mColorRectangles[16].bottom, bottomHeight, mRectFrame.bottom * 9 / 56 + mColorRectangles[16].bottom);\n\t\t\t\tmColorRectangles[18] = new Rect(0, mColorRectangles[17].bottom, bottomHeight, mRectFrame.bottom * 3 / 14 + mColorRectangles[17].bottom);\n\t\t\t\tmColorRectangles[19] = new Rect(0, mColorRectangles[18].bottom, bottomHeight, mRectFrame.bottom * 45 / 448 + mColorRectangles[18].bottom);\n\t\t\t\tfor (int i = 20; i < 25; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(0, mColorRectangles[i - 1].bottom, bottomHeight, mRectFrame.bottom * 15 / 448 + mColorRectangles[i - 1].bottom);\n\t\t\t\t}\n\t\t\t\tmColorRectangles[25] = new Rect(0, mColorRectangles[24].bottom, bottomHeight, narrowColumnWidth + mColorRectangles[24].bottom);\n\t\t\t\tmColorRectangles[26] = new Rect(0, mColorRectangles[25].bottom, bottomHeight, mRectFrame.bottom);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42153, "method_name": "CreateBars", "class_name": "TestPatternEngine", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\t\tprivate void CreateBars()\n\t\t{\n\t\t\tif(mHorizontal)\n\t\t\t{\n\t\t\t\tint narrowColumnWidth = mRectFrame.right / 7;\n\t\t\t\tint wideColumnWidth = mRectFrame.right * 5 / 28;\n\t\t\t\tint narrowestColumnWidth = mRectFrame.right / 21;\n\t\t\t\t\n\t\t\t\tint topColumnHeight = mRectFrame.bottom *2/3;\n\t\t\t\tint middleColumnHeight = mRectFrame.bottom /12;\n\t\t\t\t\n\t\t\t\tmColorRectangles[0] = new Rect(0, 0, narrowColumnWidth, topColumnHeight);\t\t\n\t\t\t\tfor (int i = 1; i < 7; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[i - 1].right, 0, mColorRectangles[i - 1].right + narrowColumnWidth, topColumnHeight);\t\t\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[7] = new Rect(0, mColorRectangles[0].bottom, narrowColumnWidth, mColorRectangles[0].bottom + middleColumnHeight);\t\t\n\t\t\t\tfor (int i = 8; i < 14; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[i - 1].right, mColorRectangles[7].top, mColorRectangles[i - 1].right + narrowColumnWidth, mColorRectangles[7].bottom);\t\t\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[14] = new Rect(0, mColorRectangles[7].bottom, wideColumnWidth, mRectFrame.bottom);\t\t\n\t\t\t\tfor (int i = 15; i < 18; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[i - 1].right, mColorRectangles[14].top, mColorRectangles[i - 1].right + wideColumnWidth, mRectFrame.bottom);\t\t\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[18] = new Rect(mColorRectangles[17].right, mColorRectangles[17].top, mColorRectangles[17].right + narrowestColumnWidth, mRectFrame.bottom);\t\t\n\t\t\t\tfor (int i = 19; i < 21; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[i - 1].right, mColorRectangles[14].top, mColorRectangles[i - 1].right + narrowestColumnWidth, mRectFrame.bottom);\t\t\n\t\t\t\t}\n\t\t\t\tmColorRectangles[21] = new Rect(mColorRectangles[20].right, mColorRectangles[17].top, mColorRectangles[6].right, mRectFrame.bottom);\t\t\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint narrowColumnWidth = mRectFrame.bottom / 7;\n\t\t\t\tint wideColumnWidth = mRectFrame.bottom * 5 / 28;\n\t\t\t\tint narrowestColumnWidth = mRectFrame.bottom / 21;\n\t\t\t\t\n\t\t\t\tint topColumnHeight = mRectFrame.right /3;\n\t\t\t\tint middleColumnHeight = mRectFrame.right /12;\n\t\t\t\t\n\t\t\t\tmColorRectangles[0] = new Rect(topColumnHeight, 0, mRectFrame.right, narrowColumnWidth);\t\t\n\t\t\t\tfor (int i = 1; i < 7; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(topColumnHeight, mColorRectangles[i - 1].bottom, mRectFrame.right, mColorRectangles[i - 1].bottom + narrowColumnWidth);\t\t\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[7] = new Rect(mColorRectangles[0].left + middleColumnHeight, 0, mColorRectangles[0].left, narrowColumnWidth);\t\t\n\t\t\t\tfor (int i = 8; i < 14; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[7].left, mColorRectangles[i - 1].bottom, mColorRectangles[7].right, mColorRectangles[i - 1].bottom + narrowColumnWidth);\t\t\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[14] = new Rect(0, 0, mColorRectangles[7].right,  wideColumnWidth);\t\t\n\t\t\t\tfor (int i = 15; i < 18; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(0, mColorRectangles[i - 1].bottom, mColorRectangles[7].right, mColorRectangles[i - 1].bottom + wideColumnWidth);\t\t\n\t\t\t\t}\n\n\t\t\t\tmColorRectangles[18] = new Rect(0, mColorRectangles[17].bottom, mColorRectangles[7].right, mColorRectangles[17].bottom + narrowestColumnWidth);\t\t\n\t\t\t\tfor (int i = 19; i < 21; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(0, mColorRectangles[i - 1].bottom, mColorRectangles[7].right, mColorRectangles[i - 1].bottom + narrowestColumnWidth);\t\t\n\t\t\t\t}\n\t\t\t\tmColorRectangles[21] = new Rect(0, mColorRectangles[20].bottom, mColorRectangles[7].right, mRectFrame.bottom);\t\t\n\t\t\t\t\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42154, "method_name": "CreateEbu", "class_name": "TestPatternEngine", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\t\tprivate void CreateEbu()\n\t\t{\n\t\t\tif(mHorizontal)\n\t\t\t{\n\t\t\t\tint narrowColumnWidth = mRectFrame.right / 8;\n\n\t\t\t\tmColorRectangles[0] = new Rect(0, 0, narrowColumnWidth, mRectFrame.bottom);\t\t\n\t\t\t\tfor (int i = 1; i < 8; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(mColorRectangles[i - 1].right, 0, mColorRectangles[i - 1].right + narrowColumnWidth, mRectFrame.bottom);\t\t\n\t\t\t\t}\n\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tint narrowColumnWidth = mRectFrame.bottom / 8;\n\n\n\t\t\t\tmColorRectangles[0] = new Rect(0, 0, mRectFrame.right, narrowColumnWidth);\n\t\t\t\tfor (int i = 1; i < 8; i++)\n\t\t\t\t{\n\t\t\t\t\tmColorRectangles[i] = new Rect(0, mColorRectangles[i - 1].bottom, mRectFrame.right, narrowColumnWidth + mColorRectangles[i - 1].bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/LiveWallpaper/src/ca/jvsh/livewallpaper/LiveWallpaper.java", "stars": "74", "class_props": {"extends": "Engine", "implements": ["SharedPreferences"], "modifiers": []}}, {"id": 42155, "method_name": "newInstance", "class_name": "DatePickerFragmentDialog", "params": ["long", "long"], "throws": null, "modifiers": ["public", "static"], "return_type": "DatePickerFragmentDialog", "snippet": "\tpublic static DatePickerFragmentDialog newInstance(long minDate, long selectedDate) {\n\t\tBundle args = new Bundle();\n\t\targs.putLong(ARG_MIN_DATE, minDate);\n\t\targs.putLong(ARG_SELECTED_DATE, selectedDate);\n\t\tDatePickerFragmentDialog fragment = new DatePickerFragmentDialog();\n\t\tfragment.setArguments(args);\n\t\treturn fragment;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/util/DatePickerFragmentDialog.java", "stars": "139", "class_props": {"extends": "DialogFragment", "implements": ["DatePickerDialog"], "modifiers": ["public"]}}, {"id": 42156, "method_name": "onCreateDialog", "class_name": "DatePickerFragmentDialog", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "\tpublic Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n\n\t\tfinal Calendar c = Calendar.getInstance();\n\t\tlong now = c.getTimeInMillis();\n\n\t\tc.setTimeInMillis(getArguments().getLong(ARG_SELECTED_DATE, 0));\n\n\t\tint selectedDay = c.get(Calendar.DAY_OF_MONTH);\n\t\tint selectedMonth = c.get(Calendar.MONTH);\n\t\tint selectedYear = c.get(Calendar.YEAR);\n\t\tDatePickerDialog dialog = new DatePickerDialog(getActivity(), this, selectedYear, selectedMonth, selectedDay);\n\n\t\tdialog.getDatePicker().setMinDate(getArguments().getLong(ARG_MIN_DATE, c.getTimeInMillis()));\n\t\tdialog.getDatePicker().setMaxDate(now);\n\t\treturn dialog;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/util/DatePickerFragmentDialog.java", "stars": "139", "class_props": {"extends": "DialogFragment", "implements": ["DatePickerDialog"], "modifiers": ["public"]}}, {"id": 42157, "method_name": "onDateSet", "class_name": "DatePickerFragmentDialog", "params": ["DatePicker", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDateSet(DatePicker view, int year, int month, int dayOfMonth) {\n\t\tCalendar selectedDate = Calendar.getInstance();\n\t\tselectedDate.set(year, month, dayOfMonth);\n\t\tIntent result = new Intent();\n\t\tresult.putExtra(RESULT_EXTRA_DATE_MILLIS, selectedDate.getTimeInMillis());\n\t\tgetTargetFragment().onActivityResult(getTargetRequestCode(), Activity.RESULT_OK, result);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/calibration-app/app/src/main/java/org/dpppt/android/calibration/util/DatePickerFragmentDialog.java", "stars": "139", "class_props": {"extends": "DialogFragment", "implements": ["DatePickerDialog"], "modifiers": ["public"]}}, {"id": 42158, "method_name": "main", "class_name": "HighestFrequency", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tScanner sc = new Scanner(System.in);\n\t\tint arr[] = {0,0,0,0,0};\n\t\tint count = 1;\n\t\tint num = 0;\n\t\tint max = 0;\n\t\tfor(int i = 0;i < arr.length;i++) {\n\t\t\tarr[i] = sc.nextInt();\n\t\t}\n\t\tArrays.sort(arr);\n\t\tfor(int i = 0;i < arr.length; i++) {\n\t\t\tcount = 1;\n\t\t\tfor(int j = i+1; j < arr.length; j++) {\n\t\t\t\tif(arr[i] == arr[j] && num!=arr[i]) {\n\t\t\t\t\tcount= count+1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(count > max) {\n\t\t\t\tmax = count;\n\t\t\t\tnum = arr[i];\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(\"most frequent nnumber is \"+num+\" frequency is \"+max);\n\t\tsc.close();\n\t}", "url": "https://raw.githubusercontent.com/likith22/java-programs/master/HighestFrequency.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42159, "method_name": "seDeconnecter", "class_name": "DeconnexionController", "params": ["HttpServletResponse", "HttpSession"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String seDeconnecter(HttpServletResponse httpServletResponse, HttpSession session) {\n        httpServletResponse.addCookie(creerCookieInvalide(NOM_COOKIE_CODE_POSTAL_REMETTANT));\n        httpServletResponse.addCookie(creerCookieInvalide(NOM_COOKIE_TYPE_REMETTANT));\n        return \"redirect:/\";\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DeconnexionController.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42160, "method_name": "creerCookieInvalide", "class_name": "DeconnexionController", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Cookie", "snippet": "    private Cookie creerCookieInvalide(String nomCookie) {\n        Cookie cookie = new Cookie(nomCookie, \"\");\n        cookie.setMaxAge(0);\n        return cookie;\n    }", "url": "https://raw.githubusercontent.com/LAB-MI/remise-masques-covid-19/master/src/main/java/fr/gouv/interieur/dmgp/remettant/application/ui/DeconnexionController.java", "stars": "5", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42161, "method_name": "getId", "class_name": "Channel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getId() {\t\t\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/pojo/Channel.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42162, "method_name": "setId", "class_name": "Channel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(String id) {\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/pojo/Channel.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42163, "method_name": "getName", "class_name": "Channel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getName() {\t\t\n\t\treturn name;\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/pojo/Channel.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42164, "method_name": "setName", "class_name": "Channel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setName(String name) {\n\t\tthis.name = name;\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/pojo/Channel.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42165, "method_name": "getState", "class_name": "Channel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getState() {\t\t\n\t\treturn state;\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/pojo/Channel.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42166, "method_name": "setState", "class_name": "Channel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setState(String state) {\n\t\tthis.state = state;\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/pojo/Channel.java", "stars": "34", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42167, "method_name": "main", "class_name": "Solution", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) \n    {\n        Scanner in = new Scanner(System.in);\n        int n = in.nextInt();\n        int arr[] = new int[n];\n        for (int i = 0; i < n; i++) \n        {\n            arr[i] = in.nextInt();\n        }\n        int numSwaps = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n - 1; j++) {\n                if (arr[j] > arr[j + 1]) {\n                    int tmp = arr[j];\n                    arr[j] = arr[j + 1];\n                    arr[j + 1] = tmp;\n                    numSwaps++;\n                }\n            }\n            if (numSwaps == 0) {\n                break;\n            }\n        }\n         System.out.println(\"Array is sorted in \" + numSwaps + \" swaps.\");\n        System.out.println(\"First Element: \" + arr[0]);\n        System.out.println(\"Last Element: \" + arr[arr.length - 1]);\n    }", "url": "https://raw.githubusercontent.com/Chitturiarunkrishna/Hackerrank30DaysOfCode/master/Day%2020%20-%20Sorting.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42168, "method_name": "unicodeToString", "class_name": "Unicode", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String unicodeToString(String unicode){\n        if(StringUtils.isEmpty(unicode)){\n            return null;\n        }\n        StringBuilder sb = new StringBuilder();\n        int i = -1;\n        int pos = 0;\n        while((i = unicode.indexOf(\"\\\\u\", pos)) != -1){\n            sb.append(unicode.substring(pos, i));\n            if(i + 5 < unicode.length()){\n                pos = i + 6;\n                sb.append((char)Integer.parseInt(unicode.substring(i + 2, i + 6), 16));\n            }\n        }\n        sb.append(unicode.substring(pos));\n        return sb.toString();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/util/Unicode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42169, "method_name": "stringToUnicode", "class_name": "Unicode", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String stringToUnicode(String string){\n        if(StringUtils.isEmpty(string)){\n            return null;\n        }\n        char[] bytes = string.toCharArray();\n        StringBuilder unicode = new StringBuilder();\n        for(int i = 0; i < bytes.length; i++){\n            String hexString = Integer.toHexString(bytes[i]);\n            unicode.append(\"\\\\u\");\n            if(hexString.length() < 4){\n                unicode.append(\"0000\", hexString.length(), 4);\n            }\n            unicode.append(hexString);\n        }\n        return unicode.toString();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/common/src/main/java/com/webank/wedatasphere/exchangis/common/util/Unicode.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42170, "method_name": "of", "class_name": "Bored", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "Bored", "snippet": "    private static Bored of() {\n        return BoredHolder.INSTANCE;\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/Bored.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 42171, "method_name": "env", "class_name": "Bored", "params": ["Environment"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void env(Environment env) {\n        Bored.of().env = env;\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/Bored.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 42172, "method_name": "env", "class_name": "Bored", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Environment", "snippet": "    public static Environment env() {\n        return Bored.of().env;\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/Bored.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 42173, "method_name": "main", "class_name": "Bored", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] commands) {\n        CommandExecute.start(commands);\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/Bored.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 42174, "method_name": "main", "class_name": "CheckBoxes", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\t\n\t\tSystem.setProperty(ChromeDriverService.CHROME_DRIVER_SILENT_OUTPUT_PROPERTY, \"true\");\n\n\t\t// System.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"drivers/chromedriver.exe\");\n\t\tWebDriver driver = new ChromeDriver();\n\t\tString url = \"https://www.seleniumeasy.com/test/basic-checkbox-demo.html\";\n\t\tdriver.get(url);\n\t\t\n\t\tList<WebElement> checkboxes=driver.findElements(By.xpath(\"//input[@class='cb1-element']\"));\n\t\t\n\t\tfor(WebElement list: checkboxes) {\n\t\t\tlist.click();\n\t\t\tThread.sleep(2000);\n\t\t}\n\t\t\n\t\tdriver.quit();\n\t}", "url": "https://raw.githubusercontent.com/fadimedibi/SeleniumTurkish/master/src/com/class4/CheckBoxes.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42175, "method_name": "size", "class_name": "JSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int size() {\n        return map.size();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42176, "method_name": "isEmpty", "class_name": "JSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEmpty() {\n        return map.isEmpty();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42177, "method_name": "containsKey", "class_name": "JSONObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean containsKey(Object key) {\n        return map.containsKey(key);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42178, "method_name": "containsValue", "class_name": "JSONObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean containsValue(Object value) {\n        return map.containsValue(value);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42179, "method_name": "get", "class_name": "JSONObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object get(Object key) {\n        return map.get(key);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42180, "method_name": "put", "class_name": "JSONObject", "params": ["String", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object put(String key, Object value) {\n        return map.put(key, value);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42181, "method_name": "remove", "class_name": "JSONObject", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object remove(Object key) {\n        return map.remove(key);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42182, "method_name": "putAll", "class_name": "JSONObject", "params": ["Map<String,?>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putAll(Map<? extends String, ?> m) {\n        map.putAll(m);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42183, "method_name": "clear", "class_name": "JSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n        map.clear();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42184, "method_name": "keySet", "class_name": "JSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> keySet() {\n        return map.keySet();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42185, "method_name": "values", "class_name": "JSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<Object>", "snippet": "    public Collection<Object> values() {\n        return map.values();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42186, "method_name": "entrySet", "class_name": "JSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<Entry>", "snippet": "    public Set<Entry<String, Object>> entrySet() {\n        return map.entrySet();\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42187, "method_name": "get", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object get(String key) {\n        return map.get(key);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42188, "method_name": "getString", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof String)) {\n            throw new JSONTypeException(\"Type of value is not String\");\n        }\n\n        return (String) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42189, "method_name": "getLong", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getLong(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Long)) {\n            throw new JSONTypeException(\"Type of value is not Long\");\n        }\n\n        return (Long) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42190, "method_name": "getInteger", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getInteger(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Integer)) {\n            throw new JSONTypeException(\"Type of value is not Integer\");\n        }\n\n        return (Integer) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42191, "method_name": "getShort", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Short", "snippet": "    public Short getShort(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Short)) {\n            throw new JSONTypeException(\"Type of value is not Short\");\n        }\n\n        return (Short) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42192, "method_name": "getByte", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Byte", "snippet": "    public Byte getByte(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Byte)) {\n            throw new JSONTypeException(\"Type of value is not Byte\");\n        }\n\n        return (Byte) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42193, "method_name": "getCharacter", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Character", "snippet": "    public Character getCharacter(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Character)) {\n            throw new JSONTypeException(\"Type of value is not Character\");\n        }\n\n        return (Character) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42194, "method_name": "getDouble", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Double", "snippet": "    public Double getDouble(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Double)) {\n            throw new JSONTypeException(\"Type of value is not Double\");\n        }\n\n        return (Double) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42195, "method_name": "getFloat", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float getFloat(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Float)) {\n            throw new JSONTypeException(\"Type of value is not Float\");\n        }\n\n        return (Float) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42196, "method_name": "getBoolean", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean getBoolean(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof Boolean)) {\n            throw new JSONTypeException(\"Type of value is not Boolean\");\n        }\n\n        return (Boolean) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42197, "method_name": "getJSONObject", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject getJSONObject(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof JSONObject)) {\n            throw new JSONTypeException(\"Type of value is not JSONObject\");\n        }\n\n        return (JSONObject) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42198, "method_name": "getJSONArray", "class_name": "JSONObject", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "JSONArray", "snippet": "    public JSONArray getJSONArray(String key) {\n        Object obj = map.get(key);\n        if (!(obj instanceof JSONArray)) {\n            throw new JSONTypeException(\"Type of value is not JSONArray\");\n        }\n\n        return (JSONArray) obj;\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42199, "method_name": "toString", "class_name": "JSONObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return JSON.toJSONString(this);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42200, "method_name": "toString", "class_name": "JSONObject", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString(int indent) {\n        return JSON.toJSONString(this, indent);\n    }", "url": "https://raw.githubusercontent.com/Virjid/Kartingjson/master/src/main/java/me/virjid/karting/json/model/JSONObject.java", "stars": "2", "class_props": {"extends": null, "implements": ["Map", "Serializable"], "modifiers": ["public"]}}, {"id": 42201, "method_name": "getUpdateManifest", "class_name": "UpdatingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MutableLiveData<UpdateManifest>", "snippet": "    public MutableLiveData<UpdateManifest> getUpdateManifest() {\n        return updateManifest;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/UpdatingViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 42202, "method_name": "getUpdatingState", "class_name": "UpdatingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MutableLiveData<UpdatingState>", "snippet": "    public MutableLiveData<UpdatingState> getUpdatingState() {\n        return updatingState;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/UpdatingViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 42203, "method_name": "checkUpdate", "class_name": "UpdatingViewModel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkUpdate() {\n        AppExecutors.getInstance().diskIO().execute(() -> {\n            final Storage storage = Storage.createByEnvironment(mContext);\n            if (storage == null) {\n                return;\n            }\n            try {\n                UpdateManifest manifest = new Checking(storage).call();\n                updateManifest.postValue(manifest);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/UpdatingViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 42204, "method_name": "doUpdate", "class_name": "UpdatingViewModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doUpdate(String password) {\n        AppExecutors.getInstance().diskIO().execute(() -> {\n            final Storage storage = Storage.createByEnvironment(mContext);\n            if (storage == null) {\n                return;\n            }\n            UpdateManifest manifest = updateManifest.getValue();\n\n            if (manifest == null) {\n                return;\n            }\n            try {\n                updatingState.postValue(UpdatingState.UPDATING);\n                final boolean success = new Updating(storage, mContext, manifest, password).call();\n\n                if (success) {\n                    updatingState.postValue(UpdatingState.UPDATING_SUCCESS);\n                } else {\n                    updatingState.postValue(UpdatingState.UPDATING_FAILED);\n                }\n\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n\n        });\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/viewmodel/UpdatingViewModel.java", "stars": "13", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 42205, "method_name": "setUp", "class_name": "MumlaSQLTestCase", "params": [], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setUp() throws Exception {\n        super.setUp();\n        mDatabaseName = UUID.randomUUID().toString() + \".db\";\n        mDatabase = new MumlaSQLiteDatabase(getContext(), mDatabaseName);\n        mDatabase.open();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/androidTest/java/se/lublin/mumla/test/MumlaSQLTestCase.java", "stars": "9", "class_props": {"extends": "AndroidTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 42206, "method_name": "tearDown", "class_name": "MumlaSQLTestCase", "params": [], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void tearDown() throws Exception {\n        super.tearDown();\n        mDatabase.close();\n        getContext().deleteDatabase(mDatabaseName);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/androidTest/java/se/lublin/mumla/test/MumlaSQLTestCase.java", "stars": "9", "class_props": {"extends": "AndroidTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 42207, "method_name": "testFavourite", "class_name": "MumlaSQLTestCase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testFavourite() {\n\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/androidTest/java/se/lublin/mumla/test/MumlaSQLTestCase.java", "stars": "9", "class_props": {"extends": "AndroidTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 42208, "method_name": "testLocalMuteIgnore", "class_name": "MumlaSQLTestCase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testLocalMuteIgnore() {\n        long server = 5;\n        int userId = 1;\n\n        // Test ignore duplicate constraint\n        for (int i = 0; i < 2; i++) {\n            mDatabase.addLocalMutedUser(server, userId);\n            mDatabase.addLocalIgnoredUser(server, userId);\n            assertEquals(1, mDatabase.getLocalMutedUsers(server).size());\n            assertEquals(1, mDatabase.getLocalIgnoredUsers(server).size());\n            assertEquals(userId, (int)mDatabase.getLocalMutedUsers(server).get(0));\n            assertEquals(userId, (int)mDatabase.getLocalIgnoredUsers(server).get(0));\n        }\n        mDatabase.removeLocalMutedUser(server, userId);\n        mDatabase.removeLocalIgnoredUser(server, userId);\n        assertEquals(0, mDatabase.getLocalMutedUsers(server).size());\n        assertEquals(0, mDatabase.getLocalIgnoredUsers(server).size());\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/androidTest/java/se/lublin/mumla/test/MumlaSQLTestCase.java", "stars": "9", "class_props": {"extends": "AndroidTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 42209, "method_name": "initCommunicator", "class_name": "TaskGroupContainer", "params": ["Configuration"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initCommunicator(Configuration configuration) {\n        super.setContainerCommunicator(new StandaloneTGContainerCommunicator(configuration));\n\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42210, "method_name": "getJobId", "class_name": "TaskGroupContainer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getJobId() {\n        return jobId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42211, "method_name": "getTaskGroupId", "class_name": "TaskGroupContainer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTaskGroupId() {\n        return taskGroupId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42212, "method_name": "start", "class_name": "TaskGroupContainer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n        try {\n            /**\n             * \u72b6\u6001check\u65f6\u95f4\u95f4\u9694\uff0c\u8f83\u77ed\uff0c\u53ef\u4ee5\u628a\u4efb\u52a1\u53ca\u65f6\u5206\u53d1\u5230\u5bf9\u5e94channel\u4e2d\n             */\n            int sleepIntervalInMillSec = this.configuration.getInt(\n                    CoreConstant.DATAX_CORE_CONTAINER_TASKGROUP_SLEEPINTERVAL, 100);\n            /**\n             * \u72b6\u6001\u6c47\u62a5\u65f6\u95f4\u95f4\u9694\uff0c\u7a0d\u957f\uff0c\u907f\u514d\u5927\u91cf\u6c47\u62a5\n             */\n            long reportIntervalInMillSec = this.configuration.getLong(\n                    CoreConstant.DATAX_CORE_CONTAINER_TASKGROUP_REPORTINTERVAL,\n                    10000);\n            /**\n             * 2\u5206\u949f\u6c47\u62a5\u4e00\u6b21\u6027\u80fd\u7edf\u8ba1\n             */\n\n            // \u83b7\u53d6channel\u6570\u76ee\n            int channelNumber = this.configuration.getInt(\n                    CoreConstant.DATAX_CORE_CONTAINER_TASKGROUP_CHANNEL);\n\n            int taskMaxRetryTimes = this.configuration.getInt(\n                    CoreConstant.DATAX_CORE_CONTAINER_TASK_FAILOVER_MAXRETRYTIMES, 1);\n\n            long taskRetryIntervalInMsec = this.configuration.getLong(\n                    CoreConstant.DATAX_CORE_CONTAINER_TASK_FAILOVER_RETRYINTERVALINMSEC, 10000);\n\n            long taskMaxWaitInMsec = this.configuration.getLong(CoreConstant.DATAX_CORE_CONTAINER_TASK_FAILOVER_MAXWAITINMSEC, 60000);\n\n            List<Configuration> taskConfigs = this.configuration\n                    .getListConfiguration(CoreConstant.DATAX_JOB_CONTENT);\n\n            if (LOG.isDebugEnabled()) {\n                LOG.debug(\"taskGroup[{}]'s task configs[{}]\", this.taskGroupId,\n                        JSON.toJSONString(taskConfigs));\n            }\n\n            int taskCountInThisTaskGroup = taskConfigs.size();\n            LOG.info(String.format(\n                    \"taskGroupId=[%d] start [%d] channels for [%d] tasks.\",\n                    this.taskGroupId, channelNumber, taskCountInThisTaskGroup));\n\n            this.containerCommunicator.registerCommunication(taskConfigs);\n\n            runTasks = new CopyOnWriteArrayList<>();\n            //taskId\u4e0etask\u914d\u7f6e\n            Map<Integer, Configuration> taskConfigMap = buildTaskConfigMap(taskConfigs);\n            //\u5f85\u8fd0\u884ctask\u5217\u8868\n            List<Configuration> taskQueue = buildRemainTasks(taskConfigs);\n            //taskId\u4e0e\u4e0a\u6b21\u5931\u8d25\u5b9e\u4f8b\n            Map<Integer, TaskExecutor> taskFailedExecutorMap = new HashMap<>(8);\n            //\u4efb\u52a1\u5f00\u59cb\u65f6\u95f4\n            Map<Integer, Long> taskStartTimeMap = new HashMap<>(8);\n\n            long lastReportTimeStamp = 0;\n            Communication lastTaskGroupContainerCommunication = new Communication();\n\n            while (!isShutdown) {\n                //1.\u5224\u65adtask\u72b6\u6001\n                boolean failedOrKilled = false;\n                Map<Integer, Communication> communicationMap = containerCommunicator.getCommunicationMap();\n                for (Map.Entry<Integer, Communication> entry : communicationMap.entrySet()) {\n                    Integer taskId = entry.getKey();\n                    Communication taskCommunication = entry.getValue();\n                    if (!taskCommunication.isFinished()) {\n                        continue;\n                    }\n                    TaskExecutor taskExecutor = removeTask(runTasks, taskId);\n\n                    //\u4e0a\u9762\u4ecerunTasks\u91cc\u79fb\u9664\u4e86\uff0c\u56e0\u6b64\u5bf9\u5e94\u5728monitor\u91cc\u79fb\u9664\n                    taskMonitor.removeTask(taskId);\n\n                    //\u5931\u8d25\uff0c\u770btask\u662f\u5426\u652f\u6301failover\uff0c\u91cd\u8bd5\u6b21\u6570\u672a\u8d85\u8fc7\u6700\u5927\u9650\u5236\n                    if (taskCommunication.getState() == State.FAILED) {\n                        taskFailedExecutorMap.put(taskId, taskExecutor);\n                        if (null != taskExecutor &&\n                                taskExecutor.supportFailOver() && taskExecutor.getAttemptCount() < taskMaxRetryTimes) {\n                            taskExecutor.shutdown(); //\u5173\u95ed\u8001\u7684executor\n                            //\u5c06task\u7684\u72b6\u6001\u91cd\u7f6e\n                            containerCommunicator.resetCommunication(taskId);\n                            Configuration taskConfig = taskConfigMap.get(taskId);\n                            //\u91cd\u65b0\u52a0\u5165\u4efb\u52a1\u5217\u8868\n                            taskQueue.add(taskConfig);\n                        } else {\n                            failedOrKilled = true;\n                            break;\n                        }\n                    } else if (taskCommunication.getState() == State.KILLED) {\n                        failedOrKilled = true;\n                        break;\n                    } else if (taskCommunication.getState() == State.SUCCEEDED) {\n                        Long taskStartTime = taskStartTimeMap.get(taskId);\n                        if (taskStartTime != null) {\n                            Long usedTime = System.currentTimeMillis() - taskStartTime;\n                            LOG.info(\"taskGroup[{}] taskId[{}] is successed, used[{}]ms\",\n                                    this.taskGroupId, taskId, usedTime);\n                            //usedTime*1000*1000 \u8f6c\u6362\u6210PerfRecord\u8bb0\u5f55\u7684ns\uff0c\u8fd9\u91cc\u4e3b\u8981\u662f\u7b80\u5355\u767b\u8bb0\uff0c\u8fdb\u884c\u6700\u957f\u4efb\u52a1\u7684\u6253\u5370\u3002\u56e0\u6b64\u589e\u52a0\u7279\u5b9a\u9759\u6001\u65b9\u6cd5\n                            PerfRecord.addPerfRecord(taskGroupId, taskId, PerfRecord.PHASE.TASK_TOTAL, taskStartTime, usedTime * 1000L * 1000L);\n                            taskStartTimeMap.remove(taskId);\n                            taskConfigMap.remove(taskId);\n                        }\n                    }\n                }\n\n                // 2.\u53d1\u73b0\u8be5taskGroup\u4e0btaskExecutor\u7684\u603b\u72b6\u6001\u5931\u8d25\u5219\u6c47\u62a5\u9519\u8bef\n                if (failedOrKilled) {\n                    lastTaskGroupContainerCommunication = reportTaskGroupCommunication(\n                            lastTaskGroupContainerCommunication, taskCountInThisTaskGroup);\n\n                    throw DataXException.asDataXException(\n                            FrameworkErrorCode.PLUGIN_RUNTIME_ERROR, lastTaskGroupContainerCommunication.getThrowable());\n                }\n\n                //3.\u6709\u4efb\u52a1\u672a\u6267\u884c\uff0c\u4e14\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6570\u5c0f\u4e8e\u6700\u5927\u901a\u9053\u9650\u5236\n                Iterator<Configuration> iterator = taskQueue.iterator();\n                while (iterator.hasNext() && null != runTasks && runTasks.size() < channelNumber) {\n                    Configuration taskConfig = iterator.next();\n                    Integer taskId = taskConfig.getInt(CoreConstant.TASK_ID);\n                    int attemptCount = 1;\n                    TaskExecutor lastExecutor = taskFailedExecutorMap.get(taskId);\n                    if (lastExecutor != null) {\n                        attemptCount = lastExecutor.getAttemptCount() + 1;\n                        long now = System.currentTimeMillis();\n                        long failedTime = lastExecutor.getTimeStamp();\n                        //\u672a\u5230\u7b49\u5f85\u65f6\u95f4\uff0c\u7ee7\u7eed\u7559\u5728\u961f\u5217\n                        if (now - failedTime < taskRetryIntervalInMsec) {\n                            continue;\n                        }\n                        //\u4e0a\u6b21\u5931\u8d25\u7684task\u4ecd\u672a\u7ed3\u675f\n                        if (!lastExecutor.isShutdown()) {\n                            if (now - failedTime > taskMaxWaitInMsec) {\n                                markCommunicationFailed(taskId);\n                                reportTaskGroupCommunication(lastTaskGroupContainerCommunication, taskCountInThisTaskGroup);\n                                throw DataXException.asDataXException(CommonErrorCode.WAIT_TIME_EXCEED, \"task failover\u7b49\u5f85\u8d85\u65f6\");\n                            } else {\n                                lastExecutor.shutdown(); //\u518d\u6b21\u5c1d\u8bd5\u5173\u95ed\n                                continue;\n                            }\n                        } else {\n                            LOG.info(\"taskGroup[{}] taskId[{}] attemptCount[{}] has already shutdown\",\n                                    this.taskGroupId, taskId, lastExecutor.getAttemptCount());\n                        }\n                    }\n                    Configuration taskConfigForRun = taskMaxRetryTimes > 1 ? taskConfig.clone() : taskConfig;\n                    TaskExecutor taskExecutor = new TaskExecutor(taskConfigForRun, attemptCount);\n                    taskStartTimeMap.put(taskId, System.currentTimeMillis());\n                    iterator.remove();\n                    //first to add into the list of running task, then start\n                    runTasks.add(taskExecutor);\n                    taskExecutor.doStart();\n                    //\u4e0a\u9762\uff0c\u589e\u52a0task\u5230runTasks\u5217\u8868\uff0c\u56e0\u6b64\u5728monitor\u91cc\u6ce8\u518c\u3002\n                    taskMonitor.registerTask(taskId, this.containerCommunicator.getCommunication(taskId));\n\n                    taskFailedExecutorMap.remove(taskId);\n                    LOG.info(\"taskGroup[{}] taskId[{}] attemptCount[{}] is started\",\n                            this.taskGroupId, taskId, attemptCount);\n                }\n                //4.\u4efb\u52a1\u5217\u8868\u4e3a\u7a7a\uff0cexecutor\u5df2\u7ed3\u675f, \u641c\u96c6\u72b6\u6001\u4e3asuccess--->\u6210\u529f\n                if (taskQueue.isEmpty() && isAllTaskDone(runTasks) && containerCommunicator.collectState() == State.SUCCEEDED) {\n                    // \u6210\u529f\u7684\u60c5\u51b5\u4e0b\uff0c\u4e5f\u9700\u8981\u6c47\u62a5\u4e00\u6b21\u3002\u5426\u5219\u5728\u4efb\u52a1\u7ed3\u675f\u975e\u5e38\u5feb\u7684\u60c5\u51b5\u4e0b\uff0c\u91c7\u96c6\u7684\u4fe1\u606f\u5c06\u4f1a\u4e0d\u51c6\u786e\n                    lastTaskGroupContainerCommunication = reportTaskGroupCommunication(\n                            lastTaskGroupContainerCommunication, taskCountInThisTaskGroup);\n\n                    LOG.info(\"taskGroup[{}] completed it's tasks.\", this.taskGroupId);\n                    break;\n                }\n                // 5.\u5982\u679c\u5f53\u524d\u65f6\u95f4\u5df2\u7ecf\u8d85\u51fa\u6c47\u62a5\u65f6\u95f4\u7684interval\uff0c\u90a3\u4e48\u6211\u4eec\u9700\u8981\u9a6c\u4e0a\u6c47\u62a5\n                long now = System.currentTimeMillis();\n                if (now - lastReportTimeStamp > reportIntervalInMillSec) {\n                    lastTaskGroupContainerCommunication = reportTaskGroupCommunication(\n                            lastTaskGroupContainerCommunication, taskCountInThisTaskGroup);\n\n                    lastReportTimeStamp = now;\n\n                    //taskMonitor\u5bf9\u4e8e\u6b63\u5728\u8fd0\u884c\u7684task\uff0c\u6bcfreportIntervalInMillSec\u8fdb\u884c\u68c0\u67e5\n                    for (TaskExecutor taskExecutor : runTasks) {\n                        taskMonitor.report(taskExecutor.getTaskId(), this.containerCommunicator.getCommunication(taskExecutor.getTaskId()));\n                    }\n\n                }\n\n                Thread.sleep(sleepIntervalInMillSec);\n            }\n\n            //6.\u6700\u540e\u8fd8\u8981\u6c47\u62a5\u4e00\u6b21\n            reportTaskGroupCommunication(lastTaskGroupContainerCommunication, taskCountInThisTaskGroup);\n\n\n        } catch (Throwable e) {\n            Communication nowTaskGroupContainerCommunication = this.containerCommunicator.collect();\n\n            if (nowTaskGroupContainerCommunication.getThrowable() == null) {\n                nowTaskGroupContainerCommunication.setThrowable(e);\n            }\n            nowTaskGroupContainerCommunication.setState(State.FAILED);\n            this.containerCommunicator.report(nowTaskGroupContainerCommunication);\n\n            throw DataXException.asDataXException(\n                    FrameworkErrorCode.RUNTIME_ERROR, e);\n        } finally {\n            if (!PerfTrace.getInstance().isJob()) {\n                //\u6700\u540e\u6253\u5370cpu\u7684\u5e73\u5747\u6d88\u8017\uff0cGC\u7684\u7edf\u8ba1\n                VMInfo vmInfo = VMInfo.getVmInfo();\n                if (vmInfo != null) {\n                    vmInfo.getDelta(false);\n                    LOG.info(vmInfo.totalString());\n                }\n\n                LOG.info(PerfTrace.getInstance().summarizeNoException());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42213, "method_name": "shutdown", "class_name": "TaskGroupContainer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void shutdown() {\n        isShutdown = true;\n        if(null != runTasks && !runTasks.isEmpty()){\n            runTasks.forEach(taskExecutor -> {\n                taskExecutor.shutdown();\n                runTasks.remove(taskExecutor);\n            });\n            if(runTasks.size() > 0){\n                //maybe have new task executors\n                runTasks.forEach(TaskExecutor::shutdown);\n                runTasks.clear();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42214, "method_name": "adjustSpeed", "class_name": "TaskGroupContainer", "params": ["long", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void adjustSpeed(long byteSpeed, long recordSpeed){\n        //first to update configuration\n        configuration.set(CoreConstant.DATAX_CORE_TRANSPORT_CHANNEL_SPEED_BYTE, byteSpeed);\n        configuration.set(CoreConstant.DATAX_CORE_TRANSPORT_CHANNEL_SPEED_RECORD, recordSpeed);\n        //adjust dynamically\n        runTasks.forEach(runTask -> runTask.adjustChannelSpeed(byteSpeed, recordSpeed));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42215, "method_name": "buildTaskConfigMap", "class_name": "TaskGroupContainer", "params": ["List<Configuration>"], "throws": null, "modifiers": ["private"], "return_type": "Map<Integer,Configuration>", "snippet": "    private Map<Integer, Configuration> buildTaskConfigMap(List<Configuration> configurations) {\n        Map<Integer, Configuration> map = new HashMap<>();\n        for (Configuration taskConfig : configurations) {\n            int taskId = taskConfig.getInt(CoreConstant.TASK_ID);\n            map.put(taskId, taskConfig);\n        }\n        return map;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42216, "method_name": "buildRemainTasks", "class_name": "TaskGroupContainer", "params": ["List<Configuration>"], "throws": null, "modifiers": ["private"], "return_type": "List<Configuration>", "snippet": "    private List<Configuration> buildRemainTasks(List<Configuration> configurations) {\n        List<Configuration> remainTasks = new LinkedList<>();\n        for (Configuration taskConfig : configurations) {\n            remainTasks.add(taskConfig);\n        }\n        return remainTasks;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42217, "method_name": "removeTask", "class_name": "TaskGroupContainer", "params": ["List<TaskExecutor>", "int"], "throws": null, "modifiers": ["private"], "return_type": "TaskExecutor", "snippet": "    private TaskExecutor removeTask(List<TaskExecutor> taskList, int taskId) {\n        for(TaskExecutor taskExecutor : taskList){\n            if(taskExecutor.getTaskId() == taskId){\n                taskList.remove(taskExecutor);\n                return taskExecutor;\n            }\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42218, "method_name": "isAllTaskDone", "class_name": "TaskGroupContainer", "params": ["List<TaskExecutor>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isAllTaskDone(List<TaskExecutor> taskList) {\n        for (TaskExecutor taskExecutor : taskList) {\n            if (!taskExecutor.isTaskFinished()) {\n                return false;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42219, "method_name": "reportTaskGroupCommunication", "class_name": "TaskGroupContainer", "params": ["Communication", "int"], "throws": null, "modifiers": ["private"], "return_type": "Communication", "snippet": "    private Communication reportTaskGroupCommunication(Communication lastTaskGroupContainerCommunication, int taskCount) {\n        Communication nowTaskGroupContainerCommunication = this.containerCommunicator.collect();\n        nowTaskGroupContainerCommunication.setTimestamp(System.currentTimeMillis());\n        Communication reportCommunication = CommunicationTool.getReportCommunication(nowTaskGroupContainerCommunication,\n                lastTaskGroupContainerCommunication, taskCount);\n        //mark the number of channel running\n        reportCommunication.setLongCounter(CommunicationTool.CHANNEL_RUNNING, runTasks.size());\n        this.containerCommunicator.report(reportCommunication);\n        return reportCommunication;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42220, "method_name": "markCommunicationFailed", "class_name": "TaskGroupContainer", "params": ["Integer"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void markCommunicationFailed(Integer taskId) {\n        Communication communication = containerCommunicator.getCommunication(taskId);\n        communication.setState(State.FAILED);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": "AbstractContainer", "implements": null, "modifiers": ["public"]}}, {"id": 42221, "method_name": "doStart", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void doStart() {\n            //Run writer threads\n            this.writerThreads.forEach(Thread::start);\n\n            this.writerThreads.forEach(writerThread ->{\n                if(!writerThread.isAlive() || this.taskCommunication.getState() == State.FAILED){\n                    throw DataXException.asDataXException(FrameworkErrorCode.RUNTIME_ERROR,\n                            this.taskCommunication.getThrowable());\n                }\n            });\n\n            //Run reader thread\n            this.readerThread.start();\n\n            // \u8fd9\u91ccreader\u53ef\u80fd\u5f88\u5feb\u7ed3\u675f\n            if (!this.readerThread.isAlive() && this.taskCommunication.getState() == State.FAILED) {\n                // \u8fd9\u91cc\u6709\u53ef\u80fd\u51fa\u73b0Reader\u7ebf\u4e0a\u542f\u52a8\u5373\u6302\u60c5\u51b5 \u5bf9\u4e8e\u8fd9\u7c7b\u60c5\u51b5 \u9700\u8981\u7acb\u523b\u629b\u51fa\u5f02\u5e38\n                throw DataXException.asDataXException(\n                        FrameworkErrorCode.RUNTIME_ERROR,\n                        this.taskCommunication.getThrowable());\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42222, "method_name": "generateRunner", "class_name": "TaskExecutor", "params": ["PluginType", "String", "Configuration"], "throws": null, "modifiers": ["private"], "return_type": "AbstractRunner", "snippet": "        private AbstractRunner generateRunner(PluginType pluginType, String pluginName, Configuration taskConf) {\n            return generateRunner(pluginType, pluginName, taskConf, null);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42223, "method_name": "generateRunner", "class_name": "TaskExecutor", "params": ["PluginType", "String", "Configuration", "List<TransformerExecution>"], "throws": null, "modifiers": ["private"], "return_type": "AbstractRunner", "snippet": "        private AbstractRunner generateRunner(PluginType pluginType, String pluginName, Configuration taskConf, List<TransformerExecution> transformerInfoExecs) {\n            AbstractRunner newRunner = null;\n            TaskPluginCollector pluginCollector;\n\n            switch (pluginType) {\n                case READER:\n                    newRunner = LoadUtil.loadPluginRunner(pluginType, pluginName);\n                    newRunner.setJobConf(taskConf);\n                    if(null != transportType && transportType.equals(TransportType.STREAM)){\n                        ChannelOutput outputStream = new ChannelOutput(streamChannel);\n                        ((ReaderRunner)newRunner).setChannelOutput(outputStream);\n                    }else {\n                        pluginCollector = ClassUtil.instantiate(\n                                taskCollectorClass, AbstractTaskPluginCollector.class,\n                                configuration, this.taskCommunication,\n                                PluginType.READER);\n\n                        RecordSender recordSender;\n                        if (transformerInfoExecs != null && transformerInfoExecs.size() > 0) {\n                            recordSender = new BufferedRecordTransformerExchanger(taskGroupId, this.taskId, this.recordChannel, this.taskCommunication, pluginCollector, transformerInfoExecs);\n                        } else {\n                            recordSender = new BufferedRecordExchanger(this.recordChannel, pluginCollector);\n                        }\n                        /**\n                         * \u8bbe\u7f6etaskPlugin\u7684collector\uff0c\u7528\u6765\u5904\u7406\u810f\u6570\u636e\u548cjob/task\u901a\u4fe1\n                         */\n                        newRunner.setTaskPluginCollector(pluginCollector);\n                        ((ReaderRunner) newRunner).setRecordSender(recordSender);\n                    }\n                    break;\n                case WRITER:\n                    newRunner = LoadUtil.loadPluginRunner(pluginType, pluginName);\n                    newRunner.setJobConf(taskConf);\n                    if(null != transportType && transportType.equals(TransportType.STREAM)){\n                        ChannelInput inputStream = new ChannelInput(streamChannel);\n                        ((WriterRunner)newRunner).setChannelInput(inputStream);\n                        //Increase consumer\n                        streamChannel.incConsumer();\n                    }else {\n                        pluginCollector  = ClassUtil.instantiate(\n                                taskCollectorClass, AbstractTaskPluginCollector.class,\n                                configuration, this.taskCommunication,\n                                PluginType.WRITER);\n                        ((WriterRunner) newRunner).setRecordReceiver(new BufferedRecordExchanger(\n                                this.recordChannel, pluginCollector));\n                        /**\n                         * \u8bbe\u7f6etaskPlugin\u7684collector\uff0c\u7528\u6765\u5904\u7406\u810f\u6570\u636e\u548cjob/task\u901a\u4fe1\n                         */\n                        newRunner.setTaskPluginCollector(pluginCollector);\n                        //Increase consumer\n                        this.recordChannel.incConsumer();\n                    }\n                    break;\n                default:\n                    throw DataXException.asDataXException(FrameworkErrorCode.ARGUMENT_ERROR, \"Cant generateRunner for:\" + pluginType);\n            }\n\n            newRunner.setTaskGroupId(taskGroupId);\n            newRunner.setTaskId(this.taskId);\n            newRunner.setRunnerCommunication(this.taskCommunication);\n\n            return newRunner;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42224, "method_name": "isTaskFinished", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "        private boolean isTaskFinished() {\n            // \u5982\u679creader \u6216 writer\u6ca1\u6709\u5b8c\u6210\u5de5\u4f5c\uff0c\u90a3\u4e48\u76f4\u63a5\u8fd4\u56de\u5de5\u4f5c\u6ca1\u6709\u5b8c\u6210\n            if (readerThread.isAlive()) {\n                return false;\n            }\n            for(Thread writerThread : writerThreads){\n                if(writerThread.isAlive()){\n                    return false;\n                }\n            }\n            return taskCommunication != null && taskCommunication.isFinished();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42225, "method_name": "getTaskId", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "        private int getTaskId() {\n            return taskId;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42226, "method_name": "getTimeStamp", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "        private long getTimeStamp() {\n            return taskCommunication.getTimestamp();\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42227, "method_name": "getAttemptCount", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "        private int getAttemptCount() {\n            return attemptCount;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42228, "method_name": "supportFailOver", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "        private boolean supportFailOver() {\n            for(WriterRunner runner : writerRunners){\n                if(!runner.supportFailOver()){\n                    return false;\n                }\n            }\n            return true;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42229, "method_name": "adjustChannelSpeed", "class_name": "TaskExecutor", "params": ["long", "long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void adjustChannelSpeed(long byteSpeed, long dataSpeed){\n            this.recordChannel.adjustRateLimit(byteSpeed, dataSpeed);\n            this.streamChannel.adjustRateLimit(byteSpeed, dataSpeed);\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42230, "method_name": "shutdown", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void shutdown() {\n            writerRunners.forEach(WriterRunner::shutdown);\n            readerRunner.shutdown();\n            writerThreads.forEach(writerThread -> {\n                if(writerThread.isAlive()){\n                    writerThread.interrupt();\n                }\n            });\n            if (readerThread.isAlive()) {\n                readerThread.interrupt();\n            }\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42231, "method_name": "isShutdown", "class_name": "TaskExecutor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "        private boolean isShutdown() {\n            if(readerThread.isAlive()){\n                return false;\n            }\n            for(Thread writerThread : writerThreads){\n                if(writerThread.isAlive()){\n                   return false;\n                }\n            }\n            return true;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/taskgroup/TaskGroupContainer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42232, "method_name": "toString", "class_name": "Data", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString()\n        {\n            return \"Data{\"\n                    + \"count=\" + count\n                    + \", samplingStats=\" + samplingStats\n                    + \", rateStats=\" + rateStats\n                    + \", rateUnit='\" + rateUnit + '\\''\n                    + \", durationUnit='\" + durationUnit + '\\''\n                    + '}';\n        }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/insights/metrics/Timer.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 42233, "method_name": "call", "class_name": "GetMessageCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String call() {\n        try {\n\n            final Packet packet = new Packet.Builder(CONSTANTS.METHODS.GET_MESSAGE)\n                    .build();\n            final Callable<Packet> callable = new BlockingCallable(packet);\n            final Packet result = callable.call();\n            final Payload payload = result.getPayload(CONSTANTS.TAGS.MESSAGE);\n\n            if (payload != null) {\n                return payload.toHex();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/callables/GetMessageCallable.java", "stars": "13", "class_props": {"extends": null, "implements": ["Callable"], "modifiers": ["public"]}}, {"id": 42234, "method_name": "getName", "class_name": "FlowTriggerDependency", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getName() {\n    return this.name;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowTriggerDependency.java", "stars": "18", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42235, "method_name": "getType", "class_name": "FlowTriggerDependency", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return this.type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowTriggerDependency.java", "stars": "18", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42236, "method_name": "getProps", "class_name": "FlowTriggerDependency", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "  public Map<String, String> getProps() {\n    return this.props;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowTriggerDependency.java", "stars": "18", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42237, "method_name": "toString", "class_name": "FlowTriggerDependency", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"FlowTriggerDependency{\" +\n        \"name='\" + this.name + '\\'' +\n        \", type='\" + this.type + '\\'' +\n        \", props=\" + this.props +\n        '}';\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/project/FlowTriggerDependency.java", "stars": "18", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42238, "method_name": "getDiscovery", "class_name": "DiscoveryRepository", "params": ["ResponseCallback<ApplicationsList>", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void getDiscovery(@NonNull ResponseCallback<ApplicationsList> responseCallback, boolean dev) {\n\t\t//TODO caching for no network connection\n\n\t\tCall<ApplicationsList> call = dev ? discoveryService.getDiscoveryDev() : discoveryService.getDiscovery();\n\t\tcall.enqueue(new Callback<ApplicationsList>() {\n\n\t\t\t@Override\n\t\t\tpublic void onResponse(@NonNull Call<ApplicationsList> call, @NonNull Response<ApplicationsList> response) {\n\t\t\t\tif (response.isSuccessful()) {\n\t\t\t\t\tresponseCallback.onSuccess(response.body());\n\t\t\t\t} else {\n\t\t\t\t\tonFailure(call, new StatusCodeException(response.raw()));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@Override\n\t\t\tpublic void onFailure(@NonNull Call<ApplicationsList> call, @NonNull Throwable throwable) {\n\t\t\t\tresponseCallback.onError(throwable);\n\t\t\t}\n\t\t});\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/backend/DiscoveryRepository.java", "stars": "139", "class_props": {"extends": null, "implements": ["Repository"], "modifiers": ["public"]}}, {"id": 42239, "method_name": "getDiscoverySync", "class_name": "DiscoveryRepository", "params": ["boolean"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "ApplicationsList", "snippet": "\tpublic ApplicationsList getDiscoverySync(boolean dev) throws IOException {\n\t\treturn (dev ? discoveryService.getDiscoveryDev() : discoveryService.getDiscovery()).execute().body();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/backend/DiscoveryRepository.java", "stars": "139", "class_props": {"extends": null, "implements": ["Repository"], "modifiers": ["public"]}}, {"id": 42240, "method_name": "getDao", "class_name": "UserInfoServiceImpl", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "IBaseDao<UserInfo>", "snippet": "    protected IBaseDao<UserInfo> getDao() {\n        return userInfoDao;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42241, "method_name": "add", "class_name": "UserInfoServiceImpl", "params": ["UserInfo"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean add(UserInfo userInfo) {\n        //Encrypt password\n        if(StringUtils.isNotBlank(userInfo.getPassword())){\n            userInfo.setPassword(CryptoUtils.md5(userInfo.getPassword(), userInfo.getUserName(), 2));\n        }\n        return super.add(userInfo);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42242, "method_name": "sync", "class_name": "UserInfoServiceImpl", "params": ["UserInfo"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sync(UserInfo userInfo){\n        boolean exist = userInfoDao.selectByUsername(userInfo.getUserName()) != null;\n        if(!exist) {\n            userInfoDao.insertOrUpdateOne(userInfo);\n        }else{\n            userInfoDao.update(userInfo);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42243, "method_name": "selectByUsername", "class_name": "UserInfoServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UserInfo", "snippet": "    public UserInfo selectByUsername(String userName){\n        return userInfoDao.selectByUsername(userName);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42244, "method_name": "selectDetailByUsername", "class_name": "UserInfoServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "UserInfo", "snippet": "    public UserInfo selectDetailByUsername(String userName) {\n        return userInfoDao.selectDetailByUsername(userName);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42245, "method_name": "findExecUserPage", "class_name": "UserInfoServiceImpl", "params": ["Integer", "PageQuery"], "throws": null, "modifiers": ["public"], "return_type": "PageList<ExecUser>", "snippet": "    public PageList<ExecUser> findExecUserPage(Integer appUserId, PageQuery query) {\n        Long count = userExecUserDao.count(appUserId);\n        int currentPage = query.getPage();\n        int pageSize = query.getPageSize();\n        PageList<ExecUser> page = new PageList<>(new Paginator(currentPage, pageSize, count.intValue()));\n        int offset = currentPage > 0 ? (currentPage - 1) * pageSize : 0;\n        List<ExecUser> result = userExecUserDao.findPageByAppUserId(appUserId, query, new RowBounds(offset, pageSize));\n        page.setData(result);\n        return page;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42246, "method_name": "bindExecUser", "class_name": "UserInfoServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void bindExecUser(String appUser, String execUser) {\n        UserExecUser userExecUser = new UserExecUser(appUser, execUser);\n        userExecUserDao.addOne(userExecUser);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42247, "method_name": "unbindExecNode", "class_name": "UserInfoServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unbindExecNode(String appUser, String execUser) {\n        UserExecUser userExecUser = new UserExecUser(appUser, execUser);\n        userExecUserDao.deleteOne(userExecUser);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42248, "method_name": "findExecNodePage", "class_name": "UserInfoServiceImpl", "params": ["Integer", "PageQuery"], "throws": null, "modifiers": ["public"], "return_type": "PageList<ExecutorNode>", "snippet": "    public PageList<ExecutorNode> findExecNodePage(Integer appUserId, PageQuery query) {\n        Long count = userExecNodeDao.count(appUserId);\n        int currentPage = query.getPage();\n        int pageSize = query.getPageSize();\n        PageList<ExecutorNode> page = new PageList<>(new Paginator(currentPage, pageSize, count.intValue()));\n        int offset = currentPage > 0 ? (currentPage - 1) * pageSize : 0;\n        List<ExecutorNode> result = userExecNodeDao.findPageByUserId(appUserId, query, new RowBounds(offset, pageSize));\n        page.setData(result);\n        return page;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42249, "method_name": "bindExecNode", "class_name": "UserInfoServiceImpl", "params": ["String", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void bindExecNode(String appUser, Integer nodeId) {\n        UserExecNode userExecNode = new UserExecNode(appUser, nodeId);\n        userExecNodeDao.addOne(userExecNode);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42250, "method_name": "unbindExecNode", "class_name": "UserInfoServiceImpl", "params": ["String", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unbindExecNode(String appUser, Integer nodeId) {\n        UserExecNode userExecNode = new UserExecNode(appUser, nodeId);\n        userExecNodeDao.deleteOne(userExecNode);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42251, "method_name": "hasBoundExecUser", "class_name": "UserInfoServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasBoundExecUser(String appUser) {\n        Integer result = userExecUserDao.existsAppUser(appUser);\n        return result != null && result > 0;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42252, "method_name": "hasBoundExecNode", "class_name": "UserInfoServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasBoundExecNode(String appUser) {\n        Integer result = userExecNodeDao.existsAppUser(appUser);\n        return result != null && result > 0;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42253, "method_name": "resetPassword", "class_name": "UserInfoServiceImpl", "params": ["Integer", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean resetPassword(Integer id, String password) {\n        UserInfo userInfo = userInfoDao.selectOne(id);\n        if(null != userInfo) {\n            String userName = userInfo.getUserName();\n            String encryptedPassword = CryptoUtils.md5(password, userName, 2);\n            int affect = userInfoDao.resetPassword(id, encryptedPassword);\n            return affect > 0;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/user/service/impl/UserInfoServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["UserInfoService"], "modifiers": ["public"]}}, {"id": 42254, "method_name": "processMessage", "class_name": "Consumer", "params": ["SampleMessage"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid processMessage(SampleMessage message) {\n\t\tthis.messages.add(message);\n\t\tSystem.out.println(\"Received sample message [\" + message + \"]\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-kafka/src/main/java/smoketest/kafka/Consumer.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42255, "method_name": "getMessages", "class_name": "Consumer", "params": [], "throws": null, "modifiers": [], "return_type": "List<SampleMessage>", "snippet": "\tList<SampleMessage> getMessages() {\n\t\treturn this.messages;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-kafka/src/main/java/smoketest/kafka/Consumer.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42256, "method_name": "setLeftText", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftText(@StringRes int id) {\n        return setLeftText(getResources().getString(id));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42257, "method_name": "setLeftText", "class_name": "SettingBar", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftText(CharSequence text) {\n        mLeftView.setText(text);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42258, "method_name": "getLeftText", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CharSequence", "snippet": "    public CharSequence getLeftText() {\n        return mLeftView.getText();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42259, "method_name": "setLeftHint", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftHint(@StringRes int id) {\n        return setLeftHint(getResources().getString(id));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42260, "method_name": "setLeftHint", "class_name": "SettingBar", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftHint(CharSequence hint) {\n        mLeftView.setHint(hint);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42261, "method_name": "setRightText", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightText(@StringRes int id) {\n        setRightText(getResources().getString(id));\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42262, "method_name": "setRightText", "class_name": "SettingBar", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightText(CharSequence text) {\n        mRightView.setText(text);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42263, "method_name": "getRightText", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CharSequence", "snippet": "    public CharSequence getRightText() {\n        return mRightView.getText();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42264, "method_name": "setRightHint", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightHint(@StringRes int id) {\n        return setRightHint(getResources().getString(id));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42265, "method_name": "setRightHint", "class_name": "SettingBar", "params": ["CharSequence"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightHint(CharSequence hint) {\n        mRightView.setHint(hint);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42266, "method_name": "setLeftIcon", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftIcon(@DrawableRes int id) {\n        setLeftIcon(ContextCompat.getDrawable(getContext(), id));\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42267, "method_name": "setLeftIcon", "class_name": "SettingBar", "params": ["Drawable"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftIcon(Drawable drawable) {\n        mLeftView.setCompoundDrawablesWithIntrinsicBounds(drawable, null, null, null);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42268, "method_name": "getLeftIcon", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Drawable", "snippet": "    public Drawable getLeftIcon() {\n        return mLeftView.getCompoundDrawables()[0];\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42269, "method_name": "setRightIcon", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightIcon(@DrawableRes int id) {\n        setRightIcon(ContextCompat.getDrawable(getContext(), id));\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42270, "method_name": "setRightIcon", "class_name": "SettingBar", "params": ["Drawable"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightIcon(Drawable drawable) {\n        mRightView.setCompoundDrawablesWithIntrinsicBounds(null, null, drawable, null);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42271, "method_name": "getRightIcon", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Drawable", "snippet": "    public Drawable getRightIcon() {\n        return mRightView.getCompoundDrawables()[2];\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42272, "method_name": "setLeftColor", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftColor(@ColorInt int color) {\n        mLeftView.setTextColor(color);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42273, "method_name": "setRightColor", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightColor(@ColorInt int color) {\n        mRightView.setTextColor(color);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42274, "method_name": "setLeftSize", "class_name": "SettingBar", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLeftSize(int unit, float size) {\n        mLeftView.setTextSize(unit, size);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42275, "method_name": "setRightSize", "class_name": "SettingBar", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setRightSize(int unit, float size) {\n        mRightView.setTextSize(unit, size);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42276, "method_name": "setLineVisible", "class_name": "SettingBar", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLineVisible(boolean visible) {\n        mLineView.setVisibility(visible ? VISIBLE : GONE);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42277, "method_name": "setLineColor", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLineColor(@ColorInt int color) {\n        return setLineDrawable(new ColorDrawable(color));\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42278, "method_name": "setLineDrawable", "class_name": "SettingBar", "params": ["Drawable"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLineDrawable(Drawable drawable) {\n        mLineView.setBackground(drawable);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42279, "method_name": "setLineSize", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLineSize(int size) {\n        ViewGroup.LayoutParams layoutParams = mLineView.getLayoutParams();\n        layoutParams.height = size;\n        mLineView.setLayoutParams(layoutParams);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42280, "method_name": "setLineMargin", "class_name": "SettingBar", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "SettingBar", "snippet": "    public SettingBar setLineMargin(int margin) {\n        FrameLayout.LayoutParams params = (FrameLayout.LayoutParams) mLineView.getLayoutParams();\n        params.leftMargin = margin;\n        params.rightMargin = margin;\n        mLineView.setLayoutParams(params);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42281, "method_name": "getMainLayout", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LinearLayout", "snippet": "    public LinearLayout getMainLayout() {\n        return mMainLayout;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42282, "method_name": "getLeftView", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TextView", "snippet": "    public TextView getLeftView() {\n        return mLeftView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42283, "method_name": "getRightView", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TextView", "snippet": "    public TextView getRightView() {\n        return mRightView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42284, "method_name": "getLineView", "class_name": "SettingBar", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getLineView() {\n        return mLineView;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/layout/SettingBar.java", "stars": "1", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42285, "method_name": "kosongkan_foam", "class_name": "tb_biaya", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void kosongkan_foam(){\n    txtKodeKonsumen.setEditable(true);\n    cbKodeMontir.setSelectedItem(this);  \n    txtKodeKonsumen.setText(null);\n    txtKodeMobil.setText(null);\n    txtKodeTransaksi.setText(null);\n    txtTanggalTransaksi.setText(null);\n    txtTotalTransaksi.setText(null);\n}", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42286, "method_name": "tampilkan_data", "class_name": "tb_biaya", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "private void tampilkan_data(){\n        \n        DefaultTableModel model = new DefaultTableModel();\n        model.addColumn(\"No.\");\n        model.addColumn(\"Kode Montir\");\n        model.addColumn(\"Kode Konsumen\");\n        model.addColumn(\"Kode Mobil\");\n        model.addColumn(\"Kode Transaksi\");\n        model.addColumn(\"Tanggal Transaksi\");\n        model.addColumn(\"Total Transaksi\");\n        \n        try{\n            int no = 1;\n            String sql = \"SELECT * FROM tb_biaya\";\n            java.sql.Connection conn = (Connection)koneksi.getkoneksi();\n            java.sql.Statement stm = conn.createStatement();\n            java.sql.ResultSet res = stm.executeQuery(sql);\n            \n            while(res.next()){\n                model.addRow(new Object[]{no++,res.getString(1),res.getString(2),res.getString(3),res.getString(4),res.getString(5),res.getString(6)});\n            }\n            tabelBiaya.setModel(model);\n        }catch (SQLException e){\n            System.out.println(\"Error : \" + e.getMessage());\n        }\n        \n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42287, "method_name": "initComponents", "class_name": "tb_biaya", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initComponents() {\n\n        jLabel1 = new javax.swing.JLabel();\n        jLabel3 = new javax.swing.JLabel();\n        jLabel4 = new javax.swing.JLabel();\n        jLabel5 = new javax.swing.JLabel();\n        jLabel6 = new javax.swing.JLabel();\n        jLabel7 = new javax.swing.JLabel();\n        jLabel8 = new javax.swing.JLabel();\n        jScrollPane1 = new javax.swing.JScrollPane();\n        tabelBiaya = new javax.swing.JTable();\n        txtKodeKonsumen = new javax.swing.JTextField();\n        txtKodeMobil = new javax.swing.JTextField();\n        txtKodeTransaksi = new javax.swing.JTextField();\n        txtTanggalTransaksi = new javax.swing.JTextField();\n        txtTotalTransaksi = new javax.swing.JTextField();\n        btSimpan = new javax.swing.JButton();\n        btHapus = new javax.swing.JButton();\n        btEdit = new javax.swing.JButton();\n        btKeluar = new javax.swing.JButton();\n        cbKodeMontir = new javax.swing.JComboBox<String>();\n        btTambah = new javax.swing.JButton();\n\n        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);\n        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());\n\n        jLabel1.setFont(new java.awt.Font(\"Tahoma\", 0, 36)); // NOI18N\n        jLabel1.setText(\"BIAYA\");\n        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(268, 28, -1, -1));\n\n        jLabel3.setText(\"Kode Montir\");\n        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 96, -1, -1));\n\n        jLabel4.setText(\"Kode Konsumen\");\n        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 131, -1, -1));\n\n        jLabel5.setText(\"Kode Mobil\");\n        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 169, -1, -1));\n\n        jLabel6.setText(\"Kode Transaksi\");\n        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 207, -1, -1));\n\n        jLabel7.setText(\"Tanggal Transaksi\");\n        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 245, -1, -1));\n\n        jLabel8.setText(\"Total Transaksi\");\n        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 283, -1, -1));\n\n        tabelBiaya.setModel(new javax.swing.table.DefaultTableModel(\n            new Object [][] {\n                {null, null, null, null},\n                {null, null, null, null},\n                {null, null, null, null},\n                {null, null, null, null}\n            },\n            new String [] {\n                \"Title 1\", \"Title 2\", \"Title 3\", \"Title 4\"\n            }\n        ));\n        tabelBiaya.addMouseListener(new java.awt.event.MouseAdapter() {\n            public void mouseClicked(java.awt.event.MouseEvent evt) {\n                tabelBiayaMouseClicked(evt);\n            }\n        });\n        jScrollPane1.setViewportView(tabelBiaya);\n\n        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 374, 436, 104));\n\n        txtKodeKonsumen.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                txtKodeKonsumenActionPerformed(evt);\n            }\n        });\n        getContentPane().add(txtKodeKonsumen, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 128, 319, -1));\n        getContentPane().add(txtKodeMobil, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 166, 319, -1));\n        getContentPane().add(txtKodeTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 204, 319, -1));\n        getContentPane().add(txtTanggalTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 242, 319, -1));\n        getContentPane().add(txtTotalTransaksi, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 280, 319, -1));\n\n        btSimpan.setText(\"Simpan\");\n        btSimpan.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btSimpanActionPerformed(evt);\n            }\n        });\n        getContentPane().add(btSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(242, 333, -1, -1));\n\n        btHapus.setText(\"Hapus\");\n        btHapus.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btHapusActionPerformed(evt);\n            }\n        });\n        getContentPane().add(btHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(396, 333, -1, -1));\n\n        btEdit.setText(\"Edit\");\n        btEdit.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btEditActionPerformed(evt);\n            }\n        });\n        getContentPane().add(btEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(327, 333, -1, -1));\n\n        btKeluar.setText(\"Keluar\");\n        btKeluar.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btKeluarActionPerformed(evt);\n            }\n        });\n        getContentPane().add(btKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(477, 333, -1, -1));\n\n        cbKodeMontir.setModel(new javax.swing.DefaultComboBoxModel(new String[] { \"M007\", \"M067\", \"M069\", \"M076\" }));\n        getContentPane().add(cbKodeMontir, new org.netbeans.lib.awtextra.AbsoluteConstraints(172, 90, -1, -1));\n\n        btTambah.setText(\"Tambah\");\n        btTambah.addActionListener(new java.awt.event.ActionListener() {\n            public void actionPerformed(java.awt.event.ActionEvent evt) {\n                btTambahActionPerformed(evt);\n            }\n        });\n        getContentPane().add(btTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 333, -1, -1));\n\n        pack();\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42288, "method_name": "btKeluarActionPerformed", "class_name": "tb_biaya", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void btKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btKeluarActionPerformed\n        // TODO add your handling code here:\n        System.exit(0);\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42289, "method_name": "btTambahActionPerformed", "class_name": "tb_biaya", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void btTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btTambahActionPerformed\n        // TODO add your handling code here:\n        kosongkan_foam();\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42290, "method_name": "btSimpanActionPerformed", "class_name": "tb_biaya", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void btSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSimpanActionPerformed\n        // TODO add your handling code here:\n        try{\n            String sql = \"INSERT INTO tb_biaya VALUES ('\"+cbKodeMontir.getSelectedItem()+\"','\"+txtKodeKonsumen.getText()+\"','\"+txtKodeMobil.getText()+\"','\"+txtKodeTransaksi.getText()+\"','\"+txtTanggalTransaksi.getText()+\"','\"+txtTotalTransaksi.getText()+\"')\";\n            java.sql.Connection conn = (Connection)koneksi.getkoneksi();\n            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);\n            pstm.execute();\n            JOptionPane.showMessageDialog(null,\"Simpan data berhasil..\");\n            tampilkan_data();\n            kosongkan_foam();\n        }catch (HeadlessException | SQLException e){\n            JOptionPane.showMessageDialog(this,e.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42291, "method_name": "btEditActionPerformed", "class_name": "tb_biaya", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void btEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditActionPerformed\n        // TODO add your handling code here:\n        try{\n            String sql = \"UPDATE tb_biaya SET kode_montir='\"+cbKodeMontir.getSelectedItem()+\"',kode_konsumen='\"+txtKodeKonsumen.getText()+\"',kode_mobil='\"+txtKodeMobil.getText()+\"',kode_transaksi='\"+txtKodeTransaksi.getText()+\"',tgl_transaksi='\"+txtTanggalTransaksi.getText()+\"',total_transaksi='\"+txtTotalTransaksi.getText()+\"' WHERE kode_konsumen = '\"+txtKodeKonsumen.getText()+\"'\";\n            java.sql.Connection conn = (Connection)koneksi.getkoneksi();\n            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);\n            pstm.execute();\n            JOptionPane.showMessageDialog(null,\"Edit data berhasil..\");\n            tampilkan_data();\n            kosongkan_foam();\n        }catch(HeadlessException | SQLException e){\n            JOptionPane.showMessageDialog(this,e.getMessage());\n        }\n        \n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42292, "method_name": "tabelBiayaMouseClicked", "class_name": "tb_biaya", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tabelBiayaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBiayaMouseClicked\n        // TODO add your handling code here:\n        int baris = tabelBiaya.rowAtPoint(evt.getPoint());\n        String jab = tabelBiaya.getValueAt(baris, 1).toString();\n        cbKodeMontir.setSelectedItem(jab);\n        \n        String ksmn = tabelBiaya.getValueAt(baris, 2).toString();\n        txtKodeKonsumen.setText(ksmn);\n        \n        String mobil = tabelBiaya.getValueAt(baris, 3).toString();\n        txtKodeMobil.setText(mobil);\n        \n        String kdtr = tabelBiaya.getValueAt(baris, 4).toString();\n        txtKodeTransaksi.setText(kdtr);\n        \n        String tgltr = tabelBiaya.getValueAt(baris, 5).toString();\n        txtTanggalTransaksi.setText(tgltr);\n        \n        String ttr = tabelBiaya.getValueAt(baris, 6).toString();\n        txtTotalTransaksi.setText(ttr);\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42293, "method_name": "btHapusActionPerformed", "class_name": "tb_biaya", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void btHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btHapusActionPerformed\n        // TODO add your handling code here:\n        try{\n            String sql = \"DELETE FROM tb_biaya WHERE kode_konsumen = '\"+txtKodeKonsumen.getText()+\"'\";\n            java.sql.Connection conn = (Connection)koneksi.getkoneksi();\n            java.sql.PreparedStatement pstm = conn.prepareStatement(sql);\n            pstm.execute();\n            JOptionPane.showMessageDialog(null,\"HAPUS data berhasil..\");\n            tampilkan_data();\n            kosongkan_foam();\n        }catch(HeadlessException | SQLException e){\n            JOptionPane.showMessageDialog(this,e.getMessage());\n        }\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42294, "method_name": "txtKodeKonsumenActionPerformed", "class_name": "tb_biaya", "params": ["java"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void txtKodeKonsumenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKodeKonsumenActionPerformed\n        // TODO add your handling code here:\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42295, "method_name": "main", "class_name": "tb_biaya", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) {\n        /* Set the Nimbus look and feel */\n        //<editor-fold defaultstate=\"collapsed\" desc=\" Look and feel setting code (optional) \">\n        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.\n         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html \n         */\n        try {\n            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {\n                if (\"Nimbus\".equals(info.getName())) {\n                    javax.swing.UIManager.setLookAndFeel(info.getClassName());\n                    break;\n                }\n            }\n        } catch (ClassNotFoundException ex) {\n            java.util.logging.Logger.getLogger(tb_biaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (InstantiationException ex) {\n            java.util.logging.Logger.getLogger(tb_biaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (IllegalAccessException ex) {\n            java.util.logging.Logger.getLogger(tb_biaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        } catch (javax.swing.UnsupportedLookAndFeelException ex) {\n            java.util.logging.Logger.getLogger(tb_biaya.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);\n        }\n        //</editor-fold>\n\n        /* Create and display the form */\n        java.awt.EventQueue.invokeLater(new Runnable() {\n            public void run() {\n                new tb_biaya().setVisible(true);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/heridho118140173/TUBES-PBO-MASTER/master/TUBES-PBO-master/Bengkel1/src/tb_biaya.java", "stars": "2", "class_props": {"extends": "javax", "implements": null, "modifiers": ["public"]}}, {"id": 42296, "method_name": "prePrintBannerText", "class_name": "NettyServerBanner", "params": ["PrintStream", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void prePrintBannerText(PrintStream printStream, String bannerText, String bannerFont) {\n    printStream.println(BananaUtils.bananaify(Const.BANNER_TEXT, bannerFont));\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyServerBanner.java", "stars": "3", "class_props": {"extends": "BannerTemplate", "implements": null, "modifiers": ["public"]}}, {"id": 42297, "method_name": "setUpPadding", "class_name": "NettyServerBanner", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String setUpPadding(Integer strapLineSize) {\n    final StringBuilder padding = new StringBuilder();\n    while (padding.length() < strapLineSize - (Const.CRISPY_VERSION.length() + Const.CRISPY_FRAMEWORK.length())) {\n      padding.append(Const.SPACE);\n    }\n    return padding.toString();\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyServerBanner.java", "stars": "3", "class_props": {"extends": "BannerTemplate", "implements": null, "modifiers": ["public"]}}, {"id": 42298, "method_name": "printTextAndVersion", "class_name": "NettyServerBanner", "params": ["PrintStream", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void printTextAndVersion(PrintStream printStream, String padding) {\n    printStream.println(AnsiOutput.toString(AnsiColor.GREEN, Const.CRISPY_FRAMEWORK,\n            AnsiColor.RESET, padding, Const.CRISPY_VERSION));\n    printStream.println();\n  }", "url": "https://raw.githubusercontent.com/everknwon/netty-monitor/master/src/main/java/io/netty/monitor/NettyServerBanner.java", "stars": "3", "class_props": {"extends": "BannerTemplate", "implements": null, "modifiers": ["public"]}}, {"id": 42299, "method_name": "filter", "class_name": "PublicServerAdapter", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void filter(String queryName, String queryCountry) {\n        clear();\n\n        for(PublicServer server : mUnfilteredServers) {\n            String serverName = server.getName() != null ? server.getName().toUpperCase(Locale.US) : \"\";\n            String serverCountry = server.getCountry() != null ? server.getCountry().toUpperCase(Locale.US) : \"\";\n\n            if(serverName.contains(queryName) && serverCountry.contains(queryCountry))\n                add(server);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/servers/PublicServerAdapter.java", "stars": "9", "class_props": {"extends": "ServerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42300, "method_name": "getView", "class_name": "PublicServerAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View v, ViewGroup parent) {\n        View view = super.getView(position, v, parent);\n\n        final PublicServer server = getItem(position);\n\n        TextView locationText = (TextView) view.findViewById(R.id.server_row_location);\n        locationText.setText(server.getCountry());\n\n        return view;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/servers/PublicServerAdapter.java", "stars": "9", "class_props": {"extends": "ServerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42301, "method_name": "getPopupMenuResource", "class_name": "PublicServerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getPopupMenuResource() {\n        return R.menu.popup_public_server;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/servers/PublicServerAdapter.java", "stars": "9", "class_props": {"extends": "ServerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42302, "method_name": "onPopupItemClick", "class_name": "PublicServerAdapter", "params": ["Server", "MenuItem"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onPopupItemClick(Server server, MenuItem menuItem) {\n        switch (menuItem.getItemId()) {\n            case R.id.menu_server_favourite:\n                mListener.favouriteServer(server);\n                return true;\n            default:\n                return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/servers/PublicServerAdapter.java", "stars": "9", "class_props": {"extends": "ServerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42303, "method_name": "getId", "class_name": "Usuario", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "\tpublic Long getId() {\n\t\treturn id;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42304, "method_name": "setId", "class_name": "Usuario", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setId(Long id) {\n\t\tthis.id = id;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42305, "method_name": "getNome", "class_name": "Usuario", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getNome() {\n\t\treturn nome;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42306, "method_name": "setNome", "class_name": "Usuario", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setNome(String nome) {\n\t\tthis.nome = nome;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42307, "method_name": "getEmail", "class_name": "Usuario", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getEmail() {\n\t\treturn email;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42308, "method_name": "setEmail", "class_name": "Usuario", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42309, "method_name": "getSenha", "class_name": "Usuario", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getSenha() {\n\t\treturn senha;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42310, "method_name": "setSenha", "class_name": "Usuario", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setSenha(String senha) {\n\t\tthis.senha = senha;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42311, "method_name": "getConfirmacaoSenha", "class_name": "Usuario", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getConfirmacaoSenha() {\n\t\treturn confirmacaoSenha;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42312, "method_name": "setConfirmacaoSenha", "class_name": "Usuario", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setConfirmacaoSenha(String confirmacaoSenha) {\n\t\tthis.confirmacaoSenha = confirmacaoSenha;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42313, "method_name": "getAtivo", "class_name": "Usuario", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getAtivo() {\n\t\treturn ativo;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42314, "method_name": "setAtivo", "class_name": "Usuario", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAtivo(int ativo) {\n\t\tthis.ativo = ativo;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42315, "method_name": "hashCode", "class_name": "Usuario", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int hashCode() {\n\t\tfinal int prime = 31;\n\t\tint result = 1;\n\t\tresult = prime * result + ((id == null) ? 0 : id.hashCode());\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42316, "method_name": "equals", "class_name": "Usuario", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean equals(Object obj) {\n\t\tif (this == obj)\n\t\t\treturn true;\n\t\tif (obj == null)\n\t\t\treturn false;\n\t\tif (getClass() != obj.getClass())\n\t\t\treturn false;\n\t\tUsuario other = (Usuario) obj;\n\t\tif (id == null) {\n\t\t\tif (other.id != null)\n\t\t\t\treturn false;\n\t\t} else if (!id.equals(other.id))\n\t\t\treturn false;\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/model/Usuario.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42317, "method_name": "getChannelList", "class_name": "ModelUtils", "params": ["IChannel"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<IChannel>", "snippet": "    public static List<IChannel> getChannelList(IChannel channel) {\n        LinkedList<IChannel> channels = new LinkedList<IChannel>();\n        getChannelList(channel, channels);\n        return channels;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/util/ModelUtils.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42318, "method_name": "getChannelList", "class_name": "ModelUtils", "params": ["IChannel", "List<IChannel>"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void getChannelList(IChannel channel, List<IChannel> channels) {\n        channels.add(channel);\n        for (IChannel subc : channel.getSubchannels()) {\n            if (subc != null) {\n                getChannelList(subc, channels);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/util/ModelUtils.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42319, "method_name": "description", "class_name": "GameAlert", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "String", "snippet": "    public abstract String description();\n}\n\n", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/notifications/GameAlert.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public", "abstract"]}}, {"id": 42320, "method_name": "getList", "class_name": "OpenSubsProvider", "params": ["Movie", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getList(final Movie movie, final Callback callback) {\n        login(new XMLRPCCallback() {\n            @Override\n            public void onResponse(long id, Object result) {\n                Map<String, Object> response = (Map<String, Object>) result;\n                String token = (String) response.get(\"token\");\n\n                if (token != null && !token.isEmpty()) {\n                    search(movie, token, new XMLRPCCallback() {\n                        @Override\n                        public void onResponse(long id, Object result) {\n                            Map<String, Integer[]> scoreMap = new HashMap<>();\n                            Map<String, String> subsMap = new HashMap<>();\n                            Map<String, Object> subData = (Map<String, Object>) result;\n                            if (subData != null && subData.get(\"data\") != null && subData.get(\"data\") instanceof Object[]) {\n                                Object[] dataList = (Object[]) subData.get(\"data\");\n                                for (Object dataItem : dataList) {\n                                    Map<String, String> item = (Map<String, String>) dataItem;\n                                    if (!item.get(\"SubFormat\").equals(\"srt\")) {\n                                        continue;\n                                    }\n\n                                    // imdb & year check\n                                    if (Integer.parseInt(item.get(\"IDMovieImdb\")) != Integer.parseInt(movie.imdbId.replace(\"tt\", \"\"))) {\n                                        continue;\n                                    }\n                                    if (!item.get(\"MovieYear\").equals(movie.year)) {\n                                        continue;\n                                    }\n\n                                    String url = item.get(\"SubDownloadLink\").replace(\".gz\", \".srt\");\n                                    String lang = item.get(\"ISO639\").replace(\"pb\", \"pt-br\");\n                                    int downloads = Integer.parseInt(item.get(\"SubDownloadsCnt\"));\n                                    int score = 0;\n\n                                    if (item.get(\"MatchedBy\").equals(\"tag\")) {\n                                        score += 50;\n                                    }\n                                    if (item.get(\"UserRank\").equals(\"trusted\")) {\n                                        score += 100;\n                                    }\n                                    if (!subsMap.containsKey(lang)) {\n                                        subsMap.put(lang, url);\n                                        scoreMap.put(lang, new Integer[]{score, downloads});\n                                    } else if (score > scoreMap.get(lang)[0] || (score == scoreMap.get(lang)[0] && downloads > scoreMap.get(lang)[1])) {\n                                        subsMap.put(lang, url);\n                                        scoreMap.put(lang, new Integer[]{score, downloads});\n                                    }\n                                }\n\n                                callback.onSuccess(subsMap);\n                            } else {\n\n                                callback.onFailure(new XMLRPCException(\"No subs found\"));\n                                removeCall(id);\n                            }\n                        }\n\n                        @Override\n                        public void onError(long id, XMLRPCException error) {\n\n\n                            callback.onFailure(error);\n                            removeCall(id);\n                        }\n\n                        @Override\n                        public void onServerError(long id, XMLRPCServerException error) {\n\n                            callback.onFailure(error);\n                            removeCall(id);\n                        }\n                    });\n                } else {\n                    callback.onFailure(new XMLRPCException(\"Token not correct\"));\n                }\n            }\n\n            @Override\n            public void onError(long id, XMLRPCException error) {\n                callback.onFailure(error);\n                removeCall(id);\n            }\n\n            @Override\n            public void onServerError(long id, XMLRPCServerException error) {\n                callback.onFailure(error);\n                removeCall(id);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/subs/open/OpenSubsProvider.java", "stars": "4", "class_props": {"extends": "SubsProvider", "implements": null, "modifiers": ["public"]}}, {"id": 42321, "method_name": "getList", "class_name": "OpenSubsProvider", "params": ["Episode", "Callback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getList(final Episode episode, final Callback callback) {\n        login(new XMLRPCCallback() {\n            @Override\n            public void onResponse(long id, Object result) {\n                Map<String, Object> response = (Map<String, Object>) result;\n                String token = (String) response.get(\"token\");\n\n                final String episodeStr = Integer.toString(episode.episode);\n                final String seasonStr = Integer.toString(episode.season);\n\n                if (token != null && !token.isEmpty()) {\n                    search(episode, token, new XMLRPCCallback() {\n                        @Override\n                        public void onResponse(long id, Object result) {\n                            Map<String, Map<String, String>> returnMap = new HashMap<>();\n                            Map<String, Integer[]> scoreMap = new HashMap<>();\n                            Map<String, String> episodeMap = new HashMap<>();\n                            Map<String, Object> subData = (Map<String, Object>) result;\n                            if (subData != null && subData.get(\"data\") != null && subData.get(\"data\") instanceof Object[]) {\n                                Object[] dataList = (Object[]) subData.get(\"data\");\n                                for (Object dataItem : dataList) {\n                                    Map<String, String> item = (Map<String, String>) dataItem;\n                                    if (!item.get(\"SubFormat\").equals(\"srt\")) {\n                                        continue;\n                                    }\n\n                                    // episode check\n                                    if (Integer.parseInt(item.get(\"SeriesIMDBParent\")) != Integer.parseInt(episode.imdbId.replace(\"tt\", \"\"))) {\n                                        continue;\n                                    }\n                                    if (!item.get(\"SeriesSeason\").equals(seasonStr)) {\n                                        continue;\n                                    }\n                                    if (!item.get(\"SeriesEpisode\").equals(episodeStr)) {\n                                        continue;\n                                    }\n\n                                    String url = item.get(\"SubDownloadLink\").replace(\".gz\", \".srt\");\n                                    String lang = item.get(\"ISO639\").replace(\"pb\", \"pt-br\");\n                                    int downloads = Integer.parseInt(item.get(\"SubDownloadsCnt\"));\n                                    int score = 0;\n\n                                    if (item.get(\"MatchedBy\").equals(\"tag\")) {\n                                        score += 50;\n                                    }\n                                    if (item.get(\"UserRank\").equals(\"trusted\")) {\n                                        score += 100;\n                                    }\n                                    if (!episodeMap.containsKey(lang)) {\n                                        episodeMap.put(lang, url);\n                                        scoreMap.put(lang, new Integer[]{score, downloads});\n                                    } else if (score > scoreMap.get(lang)[0] || (score == scoreMap.get(lang)[0] && downloads > scoreMap.get(lang)[1])) {\n                                        episodeMap.put(lang, url);\n                                        scoreMap.put(lang, new Integer[]{score, downloads});\n                                    }\n                                }\n                                returnMap.put(episode.videoId, episodeMap);\n                                callback.onSuccess(returnMap.get(episode.videoId));\n                            } else {\n                                callback.onFailure(new XMLRPCException(\"No subs found\"));\n                                removeCall(id);\n                            }\n                        }\n\n                        @Override\n                        public void onError(long id, XMLRPCException error) {\n\n\n                            callback.onFailure(error);\n                            removeCall(id);\n                        }\n\n                        @Override\n                        public void onServerError(long id, XMLRPCServerException error) {\n\n\n                            callback.onFailure(error);\n                            removeCall(id);\n                        }\n                    });\n                } else {\n\n\n                    callback.onFailure(new XMLRPCException(\"Token not correct\"));\n                }\n            }\n\n            @Override\n            public void onError(long id, XMLRPCException error) {\n\n                callback.onFailure(error);\n                removeCall(id);\n            }\n\n            @Override\n            public void onServerError(long id, XMLRPCServerException error) {\n\n\n                callback.onFailure(error);\n                removeCall(id);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/subs/open/OpenSubsProvider.java", "stars": "4", "class_props": {"extends": "SubsProvider", "implements": null, "modifiers": ["public"]}}, {"id": 42322, "method_name": "cancel", "class_name": "OpenSubsProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancel() {\n        super.cancel();\n\n        synchronized (ongoingCalls) {\n            for (Long ongoingCall : ongoingCalls) {\n                client.cancel(ongoingCall);\n            }\n            ongoingCalls.clear();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/subs/open/OpenSubsProvider.java", "stars": "4", "class_props": {"extends": "SubsProvider", "implements": null, "modifiers": ["public"]}}, {"id": 42323, "method_name": "removeCall", "class_name": "OpenSubsProvider", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void removeCall(long callId) {\n        synchronized (ongoingCalls) {\n            ongoingCalls.remove(callId);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/subs/open/OpenSubsProvider.java", "stars": "4", "class_props": {"extends": "SubsProvider", "implements": null, "modifiers": ["public"]}}, {"id": 42324, "method_name": "login", "class_name": "OpenSubsProvider", "params": ["XMLRPCCallback"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void login(XMLRPCCallback callback) {\n        long callId = client.callAsync(callback, \"LogIn\", \"\", \"\", \"en\", USER_AGENT);\n        synchronized (ongoingCalls) {\n            ongoingCalls.add(callId);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/subs/open/OpenSubsProvider.java", "stars": "4", "class_props": {"extends": "SubsProvider", "implements": null, "modifiers": ["public"]}}, {"id": 42325, "method_name": "search", "class_name": "OpenSubsProvider", "params": ["Episode", "String", "XMLRPCCallback"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void search(Episode episode, String token, XMLRPCCallback callback) {\n        Map<String, String> option = new HashMap<>();\n        option.put(\"imdbid\", episode.imdbId.replace(\"tt\", \"\"));\n        option.put(\"season\", String.format(Locale.US, \"%d\", episode.season));\n        option.put(\"episode\", String.format(Locale.US, \"%d\", episode.episode));\n        option.put(\"sublanguageid\", \"all\");\n        long callId = client.callAsync(callback, \"SearchSubtitles\", token, new Object[]{option});\n        synchronized (ongoingCalls) {\n            ongoingCalls.add(callId);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/subs/open/OpenSubsProvider.java", "stars": "4", "class_props": {"extends": "SubsProvider", "implements": null, "modifiers": ["public"]}}, {"id": 42326, "method_name": "search", "class_name": "OpenSubsProvider", "params": ["Movie", "String", "XMLRPCCallback"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void search(Movie movie, String token, XMLRPCCallback callback) {\n        Map<String, String> option = new HashMap<>();\n        option.put(\"imdbid\", movie.imdbId.replace(\"tt\", \"\"));\n        option.put(\"sublanguageid\", \"all\");\n        long callId = client.callAsync(callback, \"SearchSubtitles\", token, new Object[]{option});\n        synchronized (ongoingCalls) {\n            ongoingCalls.add(callId);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/base/src/main/java/butter/droid/base/providers/subs/open/OpenSubsProvider.java", "stars": "4", "class_props": {"extends": "SubsProvider", "implements": null, "modifiers": ["public"]}}, {"id": 42327, "method_name": "initElements", "class_name": "MossySettWallBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.DECORATIONS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 42328, "method_name": "clientLoad", "class_name": "MossySettWallBlock", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\n\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 42329, "method_name": "func_220113_a", "class_name": "CustomBlock", "params": ["BlockState", "boolean", "Direction"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "\t\tprivate boolean func_220113_a(BlockState state, boolean checkattach, Direction face) {\n\t\t\tboolean flag = state.getBlock() instanceof WallBlock\n\t\t\t\t\t|| state.getBlock() instanceof FenceGateBlock && FenceGateBlock.isParallel(state, face);\n\t\t\treturn !cannotAttach(state.getBlock()) && checkattach || flag;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "WallBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 42330, "method_name": "getStateForPlacement", "class_name": "CustomBlock", "params": ["BlockItemUseContext"], "throws": null, "modifiers": ["public"], "return_type": "BlockState", "snippet": "\t\tpublic BlockState getStateForPlacement(BlockItemUseContext context) {\n\t\t\tIWorldReader iworldreader = context.getWorld();\n\t\t\tBlockPos blockpos = context.getPos();\n\t\t\tIFluidState ifluidstate = context.getWorld().getFluidState(context.getPos());\n\t\t\tBlockPos blockpos1 = blockpos.north();\n\t\t\tBlockPos blockpos2 = blockpos.east();\n\t\t\tBlockPos blockpos3 = blockpos.south();\n\t\t\tBlockPos blockpos4 = blockpos.west();\n\t\t\tBlockState blockstate = iworldreader.getBlockState(blockpos1);\n\t\t\tBlockState blockstate1 = iworldreader.getBlockState(blockpos2);\n\t\t\tBlockState blockstate2 = iworldreader.getBlockState(blockpos3);\n\t\t\tBlockState blockstate3 = iworldreader.getBlockState(blockpos4);\n\t\t\tboolean flag = this.func_220113_a(blockstate, blockstate.isSolidSide(iworldreader, blockpos1, Direction.SOUTH), Direction.SOUTH);\n\t\t\tboolean flag1 = this.func_220113_a(blockstate1, blockstate1.isSolidSide(iworldreader, blockpos2, Direction.WEST), Direction.WEST);\n\t\t\tboolean flag2 = this.func_220113_a(blockstate2, blockstate2.isSolidSide(iworldreader, blockpos3, Direction.NORTH), Direction.NORTH);\n\t\t\tboolean flag3 = this.func_220113_a(blockstate3, blockstate3.isSolidSide(iworldreader, blockpos4, Direction.EAST), Direction.EAST);\n\t\t\tboolean flag4 = (!flag || flag1 || !flag2 || flag3) && (flag || !flag1 || flag2 || !flag3);\n\t\t\treturn this.getDefaultState().with(UP, Boolean.valueOf(flag4 || !iworldreader.isAirBlock(blockpos.up())))\n\t\t\t\t\t.with(NORTH, Boolean.valueOf(flag)).with(EAST, Boolean.valueOf(flag1)).with(SOUTH, Boolean.valueOf(flag2))\n\t\t\t\t\t.with(WEST, Boolean.valueOf(flag3)).with(WATERLOGGED, Boolean.valueOf(ifluidstate.getFluid() == Fluids.WATER));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "WallBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 42331, "method_name": "updatePostPlacement", "class_name": "CustomBlock", "params": ["BlockState", "Direction", "BlockState", "IWorld", "BlockPos", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "BlockState", "snippet": "\t\tpublic BlockState updatePostPlacement(BlockState stateIn, Direction facing, BlockState facingState, IWorld worldIn, BlockPos currentPos,\n\t\t\t\tBlockPos facingPos) {\n\t\t\tif (stateIn.get(WATERLOGGED)) {\n\t\t\t\tworldIn.getPendingFluidTicks().scheduleTick(currentPos, Fluids.WATER, Fluids.WATER.getTickRate(worldIn));\n\t\t\t}\n\t\t\tif (facing == Direction.DOWN) {\n\t\t\t\treturn super.updatePostPlacement(stateIn, facing, facingState, worldIn, currentPos, facingPos);\n\t\t\t} else {\n\t\t\t\tDirection direction = facing.getOpposite();\n\t\t\t\tboolean flag = facing == Direction.NORTH\n\t\t\t\t\t\t? this.func_220113_a(facingState, facingState.isSolidSide(worldIn, facingPos, direction), direction)\n\t\t\t\t\t\t: stateIn.get(NORTH);\n\t\t\t\tboolean flag1 = facing == Direction.EAST\n\t\t\t\t\t\t? this.func_220113_a(facingState, facingState.isSolidSide(worldIn, facingPos, direction), direction)\n\t\t\t\t\t\t: stateIn.get(EAST);\n\t\t\t\tboolean flag2 = facing == Direction.SOUTH\n\t\t\t\t\t\t? this.func_220113_a(facingState, facingState.isSolidSide(worldIn, facingPos, direction), direction)\n\t\t\t\t\t\t: stateIn.get(SOUTH);\n\t\t\t\tboolean flag3 = facing == Direction.WEST\n\t\t\t\t\t\t? this.func_220113_a(facingState, facingState.isSolidSide(worldIn, facingPos, direction), direction)\n\t\t\t\t\t\t: stateIn.get(WEST);\n\t\t\t\tboolean flag4 = (!flag || flag1 || !flag2 || flag3) && (flag || !flag1 || flag2 || !flag3);\n\t\t\t\treturn stateIn.with(UP, Boolean.valueOf(flag4 || !worldIn.isAirBlock(currentPos.up()))).with(NORTH, Boolean.valueOf(flag))\n\t\t\t\t\t\t.with(EAST, Boolean.valueOf(flag1)).with(SOUTH, Boolean.valueOf(flag2)).with(WEST, Boolean.valueOf(flag3));\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "WallBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 42332, "method_name": "isNormalCube", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isNormalCube(BlockState state, IBlockReader worldIn, BlockPos pos) {\n\t\t\treturn false;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "WallBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 42333, "method_name": "propagatesSkylightDown", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean propagatesSkylightDown(BlockState state, IBlockReader reader, BlockPos pos) {\n\t\t\treturn true;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "WallBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 42334, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/MossySettWallBlock.java", "stars": "2", "class_props": {"extends": "WallBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 42335, "method_name": "getResults", "class_name": "ShopEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ArrayList<Shop>", "snippet": "    public ArrayList<Shop> getResults() {\n        return results;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42336, "method_name": "setResults", "class_name": "ShopEndPoint", "params": ["ArrayList<Shop>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResults(ArrayList<Shop> results) {\n        this.results = results;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42337, "method_name": "getItemCount", "class_name": "ShopEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemCount() {\n        return itemCount;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42338, "method_name": "setItemCount", "class_name": "ShopEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemCount(Integer itemCount) {\n        this.itemCount = itemCount;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42339, "method_name": "getOffset", "class_name": "ShopEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getOffset() {\n        return offset;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42340, "method_name": "setOffset", "class_name": "ShopEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOffset(Integer offset) {\n        this.offset = offset;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42341, "method_name": "getLimit", "class_name": "ShopEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getLimit() {\n        return limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42342, "method_name": "setLimit", "class_name": "ShopEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLimit(Integer limit) {\n        this.limit = limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42343, "method_name": "getMax_limit", "class_name": "ShopEndPoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getMax_limit() {\n        return max_limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42344, "method_name": "setMax_limit", "class_name": "ShopEndPoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMax_limit(Integer max_limit) {\n        this.max_limit = max_limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopEndPoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42345, "method_name": "getPositionForSection", "class_name": "GroupedListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getPositionForSection (int p0)\n\t{\n\t\treturn n_getPositionForSection (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42346, "method_name": "n_getPositionForSection", "class_name": "GroupedListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getPositionForSection (int p0);\n\n\n\tpublic int getSectionForPosition (int p0)\n\t{\n\t\treturn n_getSectionForPosition (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42347, "method_name": "getSectionForPosition", "class_name": "GroupedListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getSectionForPosition (int p0)\n\t{\n\t\treturn n_getSectionForPosition (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42348, "method_name": "n_getSectionForPosition", "class_name": "GroupedListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getSectionForPosition (int p0);\n\n\n\tpublic java.lang.Object[] getSections ()\n\t{\n\t\treturn n_getSections ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42349, "method_name": "getSections", "class_name": "GroupedListViewAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "\tpublic java.lang.Object[] getSections ()\n\t{\n\t\treturn n_getSections ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42350, "method_name": "n_getSections", "class_name": "GroupedListViewAdapter", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "java", "snippet": "\tprivate native java.lang.Object[] n_getSections ();\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42351, "method_name": "monodroidAddReference", "class_name": "GroupedListViewAdapter", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42352, "method_name": "monodroidClearReferences", "class_name": "GroupedListViewAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/GroupedListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42353, "method_name": "toString", "class_name": "AST_Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"AST_Node{\" +\n                \"name='\" + name + '\\'' +\n                \", value='\" + value + '\\'' +\n                \", children=\" + children +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/nikhilbghodke/Simplex/master/src/com/github/nikhilbghodke/parser/AST_Node.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42354, "method_name": "lock", "class_name": "HdfsUserGroupInfoLock", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void lock(){\n        globallock.lock();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/utils/HdfsUserGroupInfoLock.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42355, "method_name": "unlock", "class_name": "HdfsUserGroupInfoLock", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void unlock(){\n        globallock.unlock();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/utils/HdfsUserGroupInfoLock.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42356, "method_name": "run", "class_name": "ChiHuo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        //\u4f7f\u7528\u6b7b\u5faa\u73af,\u8ba9\u5403\u8d27\u4e00\u76f4\u5403\u5305\u5b50\n        while (true){\n            //\u5fc5\u987b\u540c\u65f6\u540c\u6b65\u6280\u672f\u4fdd\u8bc1\u4e24\u4e2a\u7ebf\u7a0b\u53ea\u80fd\u6709\u4e00\u4e2a\u5728\u6267\u884c\n            synchronized (bz){\n                //\u5bf9\u5305\u5b50\u7684\u72b6\u6001\u8fdb\u884c\u5224\u65ad\n                if(bz.flag==false){\n                    //\u5403\u8d27\u8c03\u7528wait\u65b9\u6cd5\u8fdb\u5165\u7b49\u5f85\u72b6\u6001\n                    try {\n                        bz.wait();\n                    } catch (InterruptedException e) {\n                        e.printStackTrace();\n                    }\n                }\n\n                //\u88ab\u5524\u9192\u4e4b\u540e\u6267\u884c\u7684\u4ee3\u7801,\u5403\u5305\u5b50\n                System.out.println(\"\u5403\u8d27\u6b63\u5728\u5403:\"+bz.pi+bz.xian+\"\u7684\u5305\u5b50\");\n                //\u5403\u8d27\u5403\u5b8c\u5305\u5b50\n                //\u4fee\u6539\u5305\u5b50\u7684\u72b6\u6001\u4e3afalse\u6ca1\u6709\n                bz.flag = false;\n                //\u5403\u8d27\u5524\u9192\u5305\u5b50\u94fa\u7ebf\u7a0b,\u751f\u4ea7\u5305\u5b50\n                bz.notify();\n                System.out.println(\"\u5403\u8d27\u5df2\u7ecf\u628a:\"+bz.pi+bz.xian+\"\u7684\u5305\u5b50\u5403\u5b8c\u4e86,\u5305\u5b50\u94fa\u5f00\u59cb\u751f\u4ea7\u5305\u5b50\");\n                System.out.println(\"----------------------------------------------------\");\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/18.%E3%80%90%E7%BA%BF%E7%A8%8B%E6%B1%A0%E3%80%81Lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%91-%E7%AC%94%E8%AE%B0/code/07_ThreadAndLambda/src/com/itheima/demo01/WaitAndNotify/ChiHuo.java", "stars": "2", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 42357, "method_name": "get", "class_name": "BeanWrapper", "params": ["PropertyTokenizer"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object get(PropertyTokenizer prop) {\n    if (prop.getIndex() != null) {\n      Object collection = resolveCollection(prop, object);\n      return getCollectionValue(prop, collection);\n    } else {\n      return getBeanProperty(prop, object);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42358, "method_name": "set", "class_name": "BeanWrapper", "params": ["PropertyTokenizer", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void set(PropertyTokenizer prop, Object value) {\n    if (prop.getIndex() != null) {\n      Object collection = resolveCollection(prop, object);\n      setCollectionValue(prop, collection, value);\n    } else {\n      setBeanProperty(prop, object, value);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42359, "method_name": "findProperty", "class_name": "BeanWrapper", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String findProperty(String name, boolean useCamelCaseMapping) {\n    return metaClass.findProperty(name, useCamelCaseMapping);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42360, "method_name": "getGetterNames", "class_name": "BeanWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getGetterNames() {\n    return metaClass.getGetterNames();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42361, "method_name": "getSetterNames", "class_name": "BeanWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String[] getSetterNames() {\n    return metaClass.getSetterNames();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42362, "method_name": "getSetterType", "class_name": "BeanWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getSetterType(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return metaClass.getSetterType(name);\n      } else {\n        return metaValue.getSetterType(prop.getChildren());\n      }\n    } else {\n      return metaClass.getSetterType(name);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42363, "method_name": "getGetterType", "class_name": "BeanWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Class<?>", "snippet": "  public Class<?> getGetterType(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n      if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n        return metaClass.getGetterType(name);\n      } else {\n        return metaValue.getGetterType(prop.getChildren());\n      }\n    } else {\n      return metaClass.getGetterType(name);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42364, "method_name": "hasSetter", "class_name": "BeanWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasSetter(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      if (metaClass.hasSetter(prop.getIndexedName())) {\n        MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n        if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n          return metaClass.hasSetter(name);\n        } else {\n          return metaValue.hasSetter(prop.getChildren());\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return metaClass.hasSetter(name);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42365, "method_name": "hasGetter", "class_name": "BeanWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean hasGetter(String name) {\n    PropertyTokenizer prop = new PropertyTokenizer(name);\n    if (prop.hasNext()) {\n      if (metaClass.hasGetter(prop.getIndexedName())) {\n        MetaObject metaValue = metaObject.metaObjectForProperty(prop.getIndexedName());\n        if (metaValue == SystemMetaObject.NULL_META_OBJECT) {\n          return metaClass.hasGetter(name);\n        } else {\n          return metaValue.hasGetter(prop.getChildren());\n        }\n      } else {\n        return false;\n      }\n    } else {\n      return metaClass.hasGetter(name);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42366, "method_name": "instantiatePropertyValue", "class_name": "BeanWrapper", "params": ["String", "PropertyTokenizer", "ObjectFactory"], "throws": null, "modifiers": ["public"], "return_type": "MetaObject", "snippet": "  public MetaObject instantiatePropertyValue(String name, PropertyTokenizer prop, ObjectFactory objectFactory) {\n    MetaObject metaValue;\n    Class<?> type = getSetterType(prop.getName());\n    try {\n      Object newObject = objectFactory.create(type);\n      metaValue = MetaObject.forObject(newObject, metaObject.getObjectFactory(), metaObject.getObjectWrapperFactory(), metaObject.getReflectorFactory());\n      set(prop, newObject);\n    } catch (Exception e) {\n      throw new ReflectionException(\"Cannot set value of property '\" + name + \"' because '\" + name + \"' is null and cannot be instantiated on instance of \" + type.getName() + \". Cause:\" + e.toString(), e);\n    }\n    return metaValue;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42367, "method_name": "getBeanProperty", "class_name": "BeanWrapper", "params": ["PropertyTokenizer", "Object"], "throws": null, "modifiers": ["private"], "return_type": "Object", "snippet": "  private Object getBeanProperty(PropertyTokenizer prop, Object object) {\n    try {\n      Invoker method = metaClass.getGetInvoker(prop.getName());\n      try {\n        return method.invoke(object, NO_ARGUMENTS);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not get property '\" + prop.getName() + \"' from \" + object.getClass() + \".  Cause: \" + t.toString(), t);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42368, "method_name": "setBeanProperty", "class_name": "BeanWrapper", "params": ["PropertyTokenizer", "Object", "Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setBeanProperty(PropertyTokenizer prop, Object object, Object value) {\n    try {\n      Invoker method = metaClass.getSetInvoker(prop.getName());\n      Object[] params = {value};\n      try {\n        method.invoke(object, params);\n      } catch (Throwable t) {\n        throw ExceptionUtil.unwrapThrowable(t);\n      }\n    } catch (Throwable t) {\n      throw new ReflectionException(\"Could not set property '\" + prop.getName() + \"' of '\" + object.getClass() + \"' with value '\" + value + \"' Cause: \" + t.toString(), t);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42369, "method_name": "isCollection", "class_name": "BeanWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean isCollection() {\n    return false;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42370, "method_name": "add", "class_name": "BeanWrapper", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void add(Object element) {\n    throw new UnsupportedOperationException();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42371, "method_name": "addAll", "class_name": "BeanWrapper", "params": ["List<E>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public <E> void addAll(List<E> list) {\n    throw new UnsupportedOperationException();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/reflection/wrapper/BeanWrapper.java", "stars": "15", "class_props": {"extends": "BaseWrapper", "implements": null, "modifiers": ["public"]}}, {"id": 42372, "method_name": "length", "class_name": "IntArray", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int length() {\n        return value.length;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/array/IntArray.java", "stars": "16", "class_props": {"extends": "BaseArray", "implements": ["PrimitiveArray"], "modifiers": ["public"]}}, {"id": 42373, "method_name": "setValue", "class_name": "IntArray", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(int[] value) {\n        super.value = value;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/array/IntArray.java", "stars": "16", "class_props": {"extends": "BaseArray", "implements": ["PrimitiveArray"], "modifiers": ["public"]}}, {"id": 42374, "method_name": "setData", "class_name": "IntArray", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(int start, int[] data) {\n        System.arraycopy(data, 0, value, start, data.length);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/array/IntArray.java", "stars": "16", "class_props": {"extends": "BaseArray", "implements": ["PrimitiveArray"], "modifiers": ["public"]}}, {"id": 42375, "method_name": "_GetArrayCritical", "class_name": "IntArray", "params": ["Emulator<?>", "Pointer"], "throws": null, "modifiers": ["public"], "return_type": "UnicornPointer", "snippet": "    public UnicornPointer _GetArrayCritical(Emulator<?> emulator, Pointer isCopy) {\n        if (isCopy != null) {\n            isCopy.setInt(0, VM.JNI_TRUE);\n        }\n        UnicornPointer pointer = this.allocateMemoryBlock(emulator, value.length * 4);\n        pointer.write(0, value, 0, value.length);\n        return pointer;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/array/IntArray.java", "stars": "16", "class_props": {"extends": "BaseArray", "implements": ["PrimitiveArray"], "modifiers": ["public"]}}, {"id": 42376, "method_name": "_ReleaseArrayCritical", "class_name": "IntArray", "params": ["Pointer", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void _ReleaseArrayCritical(Pointer elems, int mode) {\n        switch (mode) {\n            case VM.JNI_COMMIT:\n                this.setValue(elems.getIntArray(0, this.value.length));\n                break;\n            case 0:\n                this.setValue(elems.getIntArray(0, this.value.length));\n            case VM.JNI_ABORT:\n                this.freeMemoryBlock(elems);\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/array/IntArray.java", "stars": "16", "class_props": {"extends": "BaseArray", "implements": ["PrimitiveArray"], "modifiers": ["public"]}}, {"id": 42377, "method_name": "main", "class_name": "LxApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(LxApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/lixiangwudi/service/master/src/main/java/com/example/lx/LxApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42378, "method_name": "main", "class_name": "Demo03Writer", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException {\n        FileWriter fw = new FileWriter(\"09_IOAndProperties\\\\f.txt\");\n        char[] cs = {'a','b','c','d','e'};\n        //void write(char[] cbuf)\u5199\u5165\u5b57\u7b26\u6570\u7ec4\u3002\n        fw.write(cs);//abcde\n\n        //void write(char[] cbuf, int off, int len)\u5199\u5165\u5b57\u7b26\u6570\u7ec4\u7684\u67d0\u4e00\u90e8\u5206,off\u6570\u7ec4\u7684\u5f00\u59cb\u7d22\u5f15,len\u5199\u7684\u5b57\u7b26\u4e2a\u6570\u3002\n        fw.write(cs,1,3);//bcd\n\n        //void write(String str)\u5199\u5165\u5b57\u7b26\u4e32\u3002\n        fw.write(\"\u4f20\u667a\u64ad\u5ba2\");//\u4f20\u667a\u64ad\u5ba2\n\n        //void write(String str, int off, int len) \u5199\u5165\u5b57\u7b26\u4e32\u7684\u67d0\u4e00\u90e8\u5206,off\u5b57\u7b26\u4e32\u7684\u5f00\u59cb\u7d22\u5f15,len\u5199\u7684\u5b57\u7b26\u4e2a\u6570\u3002\n        fw.write(\"\u9ed1\u9a6c\u7a0b\u5e8f\u5458\",2,3);//\u7a0b\u5e8f\u5458\n\n        fw.close();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/20.%E3%80%90%E5%AD%97%E8%8A%82%E6%B5%81%E3%80%81%E5%AD%97%E7%AC%A6%E6%B5%81%E3%80%91-%E7%AC%94%E8%AE%B0/code/09_IOAndProperties/src/com/itheima/Demo05Writer/Demo03Writer.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42379, "method_name": "smallSum", "class_name": "Code02_SmallSum", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int smallSum(int[] arr) {\n\t\tif (arr == null || arr.length < 2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn process(arr, 0, arr.length - 1);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42380, "method_name": "process", "class_name": "Code02_SmallSum", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int process(int[] arr, int l, int r) {\n\t\tif (l == r) {\n\t\t\treturn 0;\n\t\t}\n\t\t// l < r\n\t\tint mid = l + ((r - l) >> 1);\n\t\treturn \n\t\t\t\tprocess(arr, l, mid) \n\t\t\t\t+ \n\t\t\t\tprocess(arr, mid + 1, r) \n\t\t\t\t+ \n\t\t\t\tmerge(arr, l, mid, r);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42381, "method_name": "merge", "class_name": "Code02_SmallSum", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int merge(int[] arr, int L, int m, int r) {\n\t\tint[] help = new int[r - L + 1];\n\t\tint i = 0;\n\t\tint p1 = L;\n\t\tint p2 = m + 1;\n\t\tint res = 0;\n\t\twhile (p1 <= m && p2 <= r) {\n\t\t\tres += arr[p1] < arr[p2] ? (r - p2 + 1) * arr[p1] : 0;\n\t\t\thelp[i++] = arr[p1] < arr[p2] ? arr[p1++] : arr[p2++];\n\t\t}\n\t\twhile (p1 <= m) {\n\t\t\thelp[i++] = arr[p1++];\n\t\t}\n\t\twhile (p2 <= r) {\n\t\t\thelp[i++] = arr[p2++];\n\t\t}\n\t\tfor (i = 0; i < help.length; i++) {\n\t\t\tarr[L + i] = help[i];\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42382, "method_name": "comparator", "class_name": "Code02_SmallSum", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int comparator(int[] arr) {\n\t\tif (arr == null || arr.length < 2) {\n\t\t\treturn 0;\n\t\t}\n\t\tint res = 0;\n\t\tfor (int i = 1; i < arr.length; i++) {\n\t\t\tfor (int j = 0; j < i; j++) {\n\t\t\t\tres += arr[j] < arr[i] ? arr[j] : 0;\n\t\t\t}\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42383, "method_name": "generateRandomArray", "class_name": "Code02_SmallSum", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int[] generateRandomArray(int maxSize, int maxValue) {\n\t\tint[] arr = new int[(int) ((maxSize + 1) * Math.random())];\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tarr[i] = (int) ((maxValue + 1) * Math.random()) - (int) (maxValue * Math.random());\n\t\t}\n\t\treturn arr;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42384, "method_name": "copyArray", "class_name": "Code02_SmallSum", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int[] copyArray(int[] arr) {\n\t\tif (arr == null) {\n\t\t\treturn null;\n\t\t}\n\t\tint[] res = new int[arr.length];\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tres[i] = arr[i];\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42385, "method_name": "isEqual", "class_name": "Code02_SmallSum", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isEqual(int[] arr1, int[] arr2) {\n\t\tif ((arr1 == null && arr2 != null) || (arr1 != null && arr2 == null)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (arr1 == null && arr2 == null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (arr1.length != arr2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (int i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] != arr2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42386, "method_name": "printArray", "class_name": "Code02_SmallSum", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void printArray(int[] arr) {\n\t\tif (arr == null) {\n\t\t\treturn;\n\t\t}\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42387, "method_name": "main", "class_name": "Code02_SmallSum", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint testTime = 500000;\n\t\tint maxSize = 100;\n\t\tint maxValue = 100;\n\t\tboolean succeed = true;\n\t\tfor (int i = 0; i < testTime; i++) {\n\t\t\tint[] arr1 = generateRandomArray(maxSize, maxValue);\n\t\t\tint[] arr2 = copyArray(arr1);\n\t\t\tif (smallSum(arr1) != comparator(arr2)) {\n\t\t\t\tsucceed = false;\n\t\t\t\tprintArray(arr1);\n\t\t\t\tprintArray(arr2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(succeed ? \"Nice!\" : \"Fucking fucked!\");\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class03/Code02_SmallSum.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42388, "method_name": "getDirSizeInByte", "class_name": "ProjectDirectoryMetadata", "params": [], "throws": null, "modifiers": [], "return_type": "Long", "snippet": "  Long getDirSizeInByte() {\n    return this.dirSizeInByte;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42389, "method_name": "setDirSizeInByte", "class_name": "ProjectDirectoryMetadata", "params": ["Long"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void setDirSizeInByte(final Long dirSize) {\n    this.dirSizeInByte = dirSize;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42390, "method_name": "getProjectId", "class_name": "ProjectDirectoryMetadata", "params": [], "throws": null, "modifiers": [], "return_type": "int", "snippet": "  int getProjectId() {\n    return this.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42391, "method_name": "getVersion", "class_name": "ProjectDirectoryMetadata", "params": [], "throws": null, "modifiers": [], "return_type": "int", "snippet": "  int getVersion() {\n    return this.version;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42392, "method_name": "getInstalledDir", "class_name": "ProjectDirectoryMetadata", "params": [], "throws": null, "modifiers": [], "return_type": "File", "snippet": "  File getInstalledDir() {\n    return this.installedDir;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42393, "method_name": "setInstalledDir", "class_name": "ProjectDirectoryMetadata", "params": ["File"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void setInstalledDir(final File installedDir) {\n    this.installedDir = installedDir;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42394, "method_name": "toString", "class_name": "ProjectDirectoryMetadata", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"ProjectVersion{\" +\n        \"projectId=\" + this.projectId +\n        \", version=\" + this.version +\n        \", installedDir=\" + this.installedDir +\n        \", dirSizeInByte=\" + this.dirSizeInByte +\n        \", lastAccessTime=\" + this.lastAccessTime +\n        '}';\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42395, "method_name": "getLastAccessTime", "class_name": "ProjectDirectoryMetadata", "params": [], "throws": null, "modifiers": [], "return_type": "FileTime", "snippet": "  FileTime getLastAccessTime() {\n    return this.lastAccessTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42396, "method_name": "setLastAccessTime", "class_name": "ProjectDirectoryMetadata", "params": ["FileTime"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void setLastAccessTime(final FileTime lastAccessTime) {\n    this.lastAccessTime = lastAccessTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/ProjectDirectoryMetadata.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42397, "method_name": "getModuleId", "class_name": "BillingModuleDAO", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "\tprotected int getModuleId()\n    {\n        return moduleId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BillingModuleDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 42398, "method_name": "setModuleId", "class_name": "BillingModuleDAO", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void setModuleId( int moduleId )\n    {\n        this.moduleId = moduleId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/dao/BillingModuleDAO.java", "stars": "12", "class_props": {"extends": "BillingDAO", "implements": null, "modifiers": ["public"]}}, {"id": 42399, "method_name": "search", "class_name": "MessageTypeSearchCall", "params": ["DynActionForm", "ConnectionSet", "Message", "Set<CommonObjectLink>"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void search(DynActionForm form, ConnectionSet conSet, Message message, Set<CommonObjectLink> result)\n            throws BGException {\n        String numberFrom = ru.bgcrm.dao.message.MessageTypeSearchCall.preprocessNumber(message, phonePreprocessJexl);\n\n        if (log.isDebugEnabled()) {\n            log.debug(\"Search by numberFrom: \" + numberFrom);\n        }\n\n        DBInfo dbInfo = DBInfoManager.getDbInfo(billingId);\n        if (dbInfo == null) {\n            log.warn(\"Billing not found: \" + billingId);\n            return;\n        }\n\n        for (String command : commands) {\n            if (command.startsWith(\"contractByComment:\")) {\n                //new ContractDAO( form.getUser(), billingId ).searchContractByTitleComment( searchResult, null, comment, searchOptions )\n            } else if (command.startsWith(\"contractByPhoneParam:\")) {\n                String paramIds = StringUtils.substringAfter(command, \":\");\n\n                SearchResult<Contract> searchResult = new SearchResult<Contract>();\n                new ContractDAO(form.getUser(), billingId).searchContractByPhoneParam(searchResult, null,\n                        Utils.toIntegerSet(paramIds), numberFrom);\n\n                for (Contract contract : searchResult.getList()) {\n                    result.add(new CommonObjectLink(0, Contract.OBJECT_TYPE + \":\" + contract.getBillingId(),\n                            contract.getId(), contract.getTitle(), contract.getComment()));\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/dao/MessageTypeSearchCall.java", "stars": "12", "class_props": {"extends": "MessageTypeSearchBilling", "implements": null, "modifiers": ["public"]}}, {"id": 42400, "method_name": "inicializar", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void inicializar() {\n\t\tproduto = new Produto();\n\t\tprodutoDao = new ProdutoDao();\n\t\t\n\t\tcategoriaDao = new CategoriaDao();\n\t\t\n\t\tcategorias = categoriaDao.buscarTodos();\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42401, "method_name": "categoriaSelecionada", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void categoriaSelecionada() {\n\t\tFacesUtil.addInfoMessage(\"categoria selecionada\");\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42402, "method_name": "salvar", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void salvar() {\n\t\tSystem.out.println(\"Salvando a categoria: \" + produto.getNome());\n\t\tprodutoDao.salvar(produto);\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42403, "method_name": "getProduto", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Produto", "snippet": "\tpublic Produto getProduto() {\n\t\treturn produto;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42404, "method_name": "setProduto", "class_name": "CadastroProdutoBean", "params": ["Produto"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setProduto(Produto produto) {\n\t\tthis.produto = produto;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42405, "method_name": "getProdutoDao", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ProdutoDao", "snippet": "\tpublic ProdutoDao getProdutoDao() {\n\t\treturn produtoDao;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42406, "method_name": "setProdutoDao", "class_name": "CadastroProdutoBean", "params": ["ProdutoDao"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setProdutoDao(ProdutoDao produtoDao) {\n\t\tthis.produtoDao = produtoDao;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42407, "method_name": "getCategoriaDao", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CategoriaDao", "snippet": "\tpublic CategoriaDao getCategoriaDao() {\n\t\treturn categoriaDao;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42408, "method_name": "setCategoriaDao", "class_name": "CadastroProdutoBean", "params": ["CategoriaDao"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCategoriaDao(CategoriaDao categoriaDao) {\n\t\tthis.categoriaDao = categoriaDao;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42409, "method_name": "getCategorias", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Categoria>", "snippet": "\tpublic List<Categoria> getCategorias() {\n\t\treturn categorias;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42410, "method_name": "setCategorias", "class_name": "CadastroProdutoBean", "params": ["List<Categoria>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCategorias(List<Categoria> categorias) {\n\t\tthis.categorias = categorias;\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42411, "method_name": "getForma", "class_name": "CadastroProdutoBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FormaPagamento", "snippet": "\tpublic FormaPagamento[] getForma() {\n\t\treturn FormaPagamento.values();\n\n\t}", "url": "https://raw.githubusercontent.com/emanoel2712/MeusPedidos/master/src/main/java/br/senac/sc/meuspedidos/bean/CadastroProdutoBean.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42412, "method_name": "fillTypes", "class_name": "WebCustomUserTaskJsonConverter", "params": ["Map<String,Class>", "Map<Class,Class>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void fillTypes(Map<String, Class<? extends BaseBpmnJsonConverter>> convertersToBpmnMap,\n                                 Map<Class<? extends BaseElement>, Class<? extends BaseBpmnJsonConverter>> convertersToJsonMap) {\n        \n        fillJsonTypes(convertersToBpmnMap);\n        fillBpmnTypes(convertersToJsonMap);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/WebCustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42413, "method_name": "fillJsonTypes", "class_name": "WebCustomUserTaskJsonConverter", "params": ["Map<String,Class>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void fillJsonTypes(Map<String, Class<? extends BaseBpmnJsonConverter>> convertersToBpmnMap) {\n        convertersToBpmnMap.put(STENCIL_TASK_USER, WebCustomUserTaskJsonConverter.class);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/WebCustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42414, "method_name": "fillBpmnTypes", "class_name": "WebCustomUserTaskJsonConverter", "params": ["Map<Class,Class>"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void fillBpmnTypes(Map<Class<? extends BaseElement>, Class<? extends BaseBpmnJsonConverter>> convertersToJsonMap) {\n        convertersToJsonMap.put(UserTask.class, WebCustomUserTaskJsonConverter.class);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/WebCustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42415, "method_name": "convertToBpmnModel", "class_name": "WebCustomUserTaskJsonConverter", "params": ["JsonNode", "JsonNode", "ActivityProcessor", "BaseElement", "Map<String,JsonNode>", "BpmnModel"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void convertToBpmnModel(JsonNode elementNode, JsonNode modelNode, ActivityProcessor processor, BaseElement parentElement,\n                                   Map<String, JsonNode> shapeMap, BpmnModel bpmnModel) {\n        \n        this.processor = processor;\n        this.model = bpmnModel;\n        \n        BaseElement baseElement = convertJsonToElement(elementNode, modelNode, shapeMap);\n        baseElement.setId(BpmnJsonConverterUtil.getElementId(elementNode));\n        \n        if (baseElement instanceof FlowElement) {\n            FlowElement flowElement = (FlowElement) baseElement;\n            flowElement.setName(getPropertyValueAsString(PROPERTY_NAME, elementNode));\n            flowElement.setDocumentation(getPropertyValueAsString(PROPERTY_DOCUMENTATION, elementNode));\n            \n            BpmnJsonConverterUtil.convertJsonToListeners(elementNode, flowElement);\n            \n            if (baseElement instanceof Activity) {\n                Activity activity = (Activity) baseElement;\n                activity.setAsynchronous(getPropertyValueAsBoolean(PROPERTY_ASYNCHRONOUS, elementNode));\n                activity.setNotExclusive(!getPropertyValueAsBoolean(PROPERTY_EXCLUSIVE, elementNode));\n                \n            } else if (baseElement instanceof Gateway) {\n                // \u7f51\u5173\u6d41\u7a0b\u987a\u5e8f\u8bbe\u7f6e\n                JsonNode flowOrderNode = getProperty(PROPERTY_SEQUENCEFLOW_ORDER, elementNode);\n                if (flowOrderNode != null) {\n                    flowOrderNode = BpmnJsonConverterUtil.validateIfNodeIsTextual(flowOrderNode);\n                    JsonNode orderArray = flowOrderNode.get(\"sequenceFlowOrder\");\n                    if (orderArray != null && orderArray.size() > 0) {\n                        for (JsonNode orderNode : orderArray) {\n                            ExtensionElement orderElement = new ExtensionElement();\n                            orderElement.setName(\"EDITOR_FLOW_ORDER\");\n                            orderElement.setElementText(orderNode.asText());\n                            flowElement.addExtensionElement(orderElement);\n                        }\n                    }\n                }\n            }\n        }\n        \n        if (baseElement instanceof FlowElement) {\n            FlowElement flowElement = (FlowElement) baseElement;\n            if (flowElement instanceof SequenceFlow) {\n                ExtensionElement idExtensionElement = new ExtensionElement();\n                idExtensionElement.setName(\"EDITOR_RESOURCEID\");\n                idExtensionElement.setElementText(elementNode.get(EDITOR_SHAPE_ID).asText());\n                flowElement.addExtensionElement(idExtensionElement);\n            }\n            \n            if (parentElement instanceof Process) {\n                ((Process) parentElement).addFlowElement(flowElement);\n                \n            } else if (parentElement instanceof SubProcess) {\n                ((SubProcess) parentElement).addFlowElement(flowElement);\n                \n            } else if (parentElement instanceof Lane) {\n                Lane lane = (Lane) parentElement;\n                lane.getFlowReferences().add(flowElement.getId());\n                lane.getParentProcess().addFlowElement(flowElement);\n            }\n            \n        } else if (baseElement instanceof Artifact) {\n            Artifact artifact = (Artifact) baseElement;\n            if (parentElement instanceof Process) {\n                ((Process) parentElement).addArtifact(artifact);\n                \n            } else if (parentElement instanceof SubProcess) {\n                ((SubProcess) parentElement).addArtifact(artifact);\n                \n            } else if (parentElement instanceof Lane) {\n                Lane lane = (Lane) parentElement;\n                lane.getFlowReferences().add(artifact.getId());\n                lane.getParentProcess().addArtifact(artifact);\n            }\n        }\n        \n        if (StringUtils.isNotEmpty(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_CONDITION, elementNode))) {\n            ExtensionAttribute extensionAttribute4 = new ExtensionAttribute();\n            extensionAttribute4.setName(\"multiinstance_condition\");\n            extensionAttribute4.setValue(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_CONDITION, elementNode));\n            baseElement.addAttribute(extensionAttribute4);\n        }\n        \n        \n        if (StringUtils.isNotEmpty(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_TYPE, elementNode))) {\n            ExtensionAttribute extensionAttribute = new ExtensionAttribute();\n            extensionAttribute.setName(\"multiinstance_type\");\n            extensionAttribute.setValue(getPropertyValueAsString(PROPERTY_MULTIINSTANCE_TYPE, elementNode));\n            baseElement.addAttribute(extensionAttribute);\n        }\n        \n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/WebCustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42416, "method_name": "convertElementToJson", "class_name": "WebCustomUserTaskJsonConverter", "params": ["ObjectNode", "BaseElement"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void convertElementToJson(ObjectNode propertiesNode, BaseElement baseElement) {\n        UserTask userTask = (UserTask) baseElement;\n        String assignee = userTask.getAssignee();\n        String owner = userTask.getOwner();\n        \n        if (StringUtils.isNotEmpty(assignee) || StringUtils.isNotEmpty(owner) || CollectionUtils.isNotEmpty(userTask.getCandidateUsers()) ||\n                CollectionUtils.isNotEmpty(userTask.getCandidateGroups())) {\n            \n            ObjectNode assignmentNode = objectMapper.createObjectNode();\n            ObjectNode assignmentValuesNode = objectMapper.createObjectNode();\n            \n            if (StringUtils.isNotEmpty(assignee)) {\n                assignmentValuesNode.put(PROPERTY_USERTASK_ASSIGNEE, assignee);\n            }\n            \n            if (StringUtils.isNotEmpty(owner)) {\n                assignmentValuesNode.put(PROPERTY_USERTASK_OWNER, owner);\n            }\n            \n            if (CollectionUtils.isNotEmpty(userTask.getCandidateUsers())) {\n                ArrayNode candidateArrayNode = objectMapper.createArrayNode();\n                for (String candidateUser : userTask.getCandidateUsers()) {\n                    ObjectNode candidateNode = objectMapper.createObjectNode();\n                    candidateNode.put(\"value\", candidateUser);\n                    candidateArrayNode.add(candidateNode);\n                }\n                // candidateUsers\u5904\u7406\n                assignmentValuesNode.put(PROPERTY_USERTASK_CANDIDATE_USERS, candidateArrayNode);\n            }\n            \n            if (CollectionUtils.isNotEmpty(userTask.getCandidateGroups())) {\n                ArrayNode candidateArrayNode = objectMapper.createArrayNode();\n                for (String candidateGroup : userTask.getCandidateGroups()) {\n                    ObjectNode candidateNode = objectMapper.createObjectNode();\n                    candidateNode.put(\"value\", candidateGroup);\n                    candidateArrayNode.add(candidateNode);\n                }\n                assignmentValuesNode.put(PROPERTY_USERTASK_CANDIDATE_GROUPS, candidateArrayNode);\n            }\n            \n            assignmentNode.put(\"assignment\", assignmentValuesNode);\n            propertiesNode.put(PROPERTY_USERTASK_ASSIGNMENT, assignmentNode);\n        }\n        \n        if (userTask.getPriority() != null) {\n            setPropertyValue(PROPERTY_USERTASK_PRIORITY, userTask.getPriority().toString(), propertiesNode);\n        }\n        \n        if (StringUtils.isNotEmpty(userTask.getFormKey())) {\n            setPropertyValue(PROPERTY_FORMKEY, userTask.getFormKey(), propertiesNode);\n        }\n        \n        setPropertyValue(PROPERTY_USERTASK_DUEDATE, userTask.getDueDate(), propertiesNode);\n        setPropertyValue(PROPERTY_USERTASK_CATEGORY, userTask.getCategory(), propertiesNode);\n        // \u6dfb\u52a0\u7528\u6237\u4efb\u52a1\u7684\u81ea\u5b9a\u4e49\u5c5e\u6027  start\n        if (userTask.getAttributes().get(\"multiinstance_type\") != null && !\"\".equals(userTask.getAttributes().get(\"multiinstance_type\").get(0).getValue())) {\n            setPropertyValue(PROPERTY_MULTIINSTANCE_TYPE, userTask.getAttributes().get(\"multiinstance_type\").get(0).getValue(), propertiesNode);\n        }\n        \n        if (userTask.getAttributes().get(\"multiinstance_condition\") != null && !\"\".equals(userTask.getAttributes().get(\"multiinstance_condition\").get(0).getValue())) {\n            setPropertyValue(PROPERTY_MULTIINSTANCE_CONDITION, userTask.getAttributes().get(\"multiinstance_condition\").get(0).getValue(), propertiesNode);\n        }\n        \n        // \u6dfb\u52a0\u9ed8\u8ba4\u6d41\u7a0b\u5c5e\u6027\n        if (StringUtils.isNotEmpty(userTask.getDefaultFlow())) {\n            setPropertyValue(\"default\", userTask.getDefaultFlow(), propertiesNode);\n        }\n        // end\n        addFormProperties(userTask.getFormProperties(), propertiesNode);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/WebCustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42417, "method_name": "convertJsonToElement", "class_name": "WebCustomUserTaskJsonConverter", "params": ["JsonNode", "JsonNode", "Map<String,JsonNode>"], "throws": null, "modifiers": ["protected"], "return_type": "FlowElement", "snippet": "    protected FlowElement convertJsonToElement(JsonNode elementNode, JsonNode modelNode, Map<String, JsonNode> shapeMap) {\n        UserTask task = new UserTask();\n        task.setPriority(getPropertyValueAsString(PROPERTY_USERTASK_PRIORITY, elementNode));\n        String formKey = getPropertyValueAsString(PROPERTY_FORMKEY, elementNode);\n        String name = getPropertyValueAsString(PROPERTY_NAME, elementNode);\n        if (StringUtils.isNotEmpty(formKey)) {\n            task.setFormKey(formKey);\n        } else {\n            LOG.error(name + \"\u6ca1\u6709\u914d\u7f6e\u8868\u5355\");\n        }\n        task.setDueDate(getPropertyValueAsString(PROPERTY_USERTASK_DUEDATE, elementNode));\n        task.setCategory(getPropertyValueAsString(PROPERTY_USERTASK_CATEGORY, elementNode));\n        // \u8bbe\u7f6e\u4efb\u52a1\u6d3e\u9063\n        JsonNode assignmentNode = getProperty(PROPERTY_USERTASK_ASSIGNMENT, elementNode);\n        if (assignmentNode != null) {\n            JsonNode assignmentDefNode = assignmentNode.get(\"assignment\");\n            if (assignmentDefNode != null) {\n                List<String> list = getValueAsList(PROPERTY_USERTASK_CANDIDATE_GROUPS, assignmentDefNode);\n                task.setCandidateGroups(list);\n            }\n        \n        }\n        \n        // \u6dfb\u52a0\u9ed8\u8ba4\u6d41\u7a0b\u5c5e\u6027\n        if (StringUtils.isNotEmpty(getPropertyValueAsString(\"default\", elementNode))) {\n            task.setDefaultFlow(getPropertyValueAsString(\"default\", elementNode));\n        }\n        \n        convertJsonToFormProperties(elementNode, task);\n        return task;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/WebCustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42418, "method_name": "getStencilId", "class_name": "WebCustomUserTaskJsonConverter", "params": ["BaseElement"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getStencilId(BaseElement baseElement) {\n        return STENCIL_TASK_USER;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/WebCustomUserTaskJsonConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnJsonConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42419, "method_name": "onDraw", "class_name": "Practice11GetFontSpacingView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        // \u4f7f\u7528 Paint.getFontSpacing() \u6765\u83b7\u53d6\u63a8\u8350\u7684\u884c\u8ddd\n        float spacing = paint.getFontSpacing();\n\n        canvas.drawText(text, 50, 100, paint);\n\n        canvas.drawText(text, 50, 100 + spacing, paint);\n\n        canvas.drawText(text, 50, 100 + spacing * 2, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson3/Practice11GetFontSpacingView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 42420, "method_name": "setNonNullParameter", "class_name": "IntegerTypeHandler", "params": ["PreparedStatement", "int", "Integer", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Integer parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setInt(i, parameter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/IntegerTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 42421, "method_name": "getNullableResult", "class_name": "IntegerTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    int result = rs.getInt(columnName);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/IntegerTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 42422, "method_name": "getNullableResult", "class_name": "IntegerTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    int result = rs.getInt(columnIndex);\n    return result == 0 && rs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/IntegerTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 42423, "method_name": "getNullableResult", "class_name": "IntegerTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Integer", "snippet": "  public Integer getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    int result = cs.getInt(columnIndex);\n    return result == 0 && cs.wasNull() ? null : result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/IntegerTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 42424, "method_name": "addArg", "class_name": "AzkabanProcessBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder addArg(final String... command) {\n    for (final String c : command) {\n      this.cmd.add(c);\n    }\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42425, "method_name": "setWorkingDir", "class_name": "AzkabanProcessBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setWorkingDir(final String dir) {\n    this.workingDir = dir;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42426, "method_name": "setJobName", "class_name": "AzkabanProcessBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setJobName(String jobName){\n    this.jobName = jobName;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42427, "method_name": "getWorkingDir", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getWorkingDir() {\n    return this.workingDir;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42428, "method_name": "setWorkingDir", "class_name": "AzkabanProcessBuilder", "params": ["File"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setWorkingDir(final File f) {\n    return setWorkingDir(f.getAbsolutePath());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42429, "method_name": "addEnv", "class_name": "AzkabanProcessBuilder", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder addEnv(final String variable, final String value) {\n    this.env.put(variable, value);\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42430, "method_name": "getEnv", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,String>", "snippet": "  public Map<String, String> getEnv() {\n    return this.env;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42431, "method_name": "setEnv", "class_name": "AzkabanProcessBuilder", "params": ["Map<String,String>"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setEnv(final Map<String, String> m) {\n    this.env = m;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42432, "method_name": "getStdErrorSnippetSize", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getStdErrorSnippetSize() {\n    return this.stdErrSnippetSize;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42433, "method_name": "setStdErrorSnippetSize", "class_name": "AzkabanProcessBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setStdErrorSnippetSize(final int size) {\n    this.stdErrSnippetSize = size;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42434, "method_name": "getStdOutSnippetSize", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getStdOutSnippetSize() {\n    return this.stdOutSnippetSize;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42435, "method_name": "setStdOutSnippetSize", "class_name": "AzkabanProcessBuilder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setStdOutSnippetSize(final int size) {\n    this.stdOutSnippetSize = size;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42436, "method_name": "setLogger", "class_name": "AzkabanProcessBuilder", "params": ["Logger"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setLogger(final Logger logger) {\n    this.logger = logger;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42437, "method_name": "build", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcess", "snippet": "  public AzkabanProcess build() {\n    if (this.isExecuteAsUser) {\n      return new AzkabanProcess(this.cmd, this.env, this.workingDir, this.logger,\n          this.executeAsUserBinaryPath, this.effectiveUser, this.jobName);\n    } else {\n      return new AzkabanProcess(this.cmd, this.env, this.workingDir, this.logger);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42438, "method_name": "getCommand", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getCommand() {\n    return this.cmd;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42439, "method_name": "getCommandString", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getCommandString() {\n    return Joiner.on(\" \").join(getCommand());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42440, "method_name": "toString", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"ProcessBuilder(cmd = \" + Joiner.on(\" \").join(this.cmd) + \", env = \"\n        + this.env + \", cwd = \" + this.workingDir + \")\";\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42441, "method_name": "enableExecuteAsUser", "class_name": "AzkabanProcessBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder enableExecuteAsUser() {\n    this.isExecuteAsUser = true;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42442, "method_name": "setExecuteAsUserBinaryPath", "class_name": "AzkabanProcessBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setExecuteAsUserBinaryPath(final String executeAsUserBinaryPath) {\n    this.executeAsUserBinaryPath = executeAsUserBinaryPath;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42443, "method_name": "setEffectiveUser", "class_name": "AzkabanProcessBuilder", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "AzkabanProcessBuilder", "snippet": "  public AzkabanProcessBuilder setEffectiveUser(final String effectiveUser) {\n    this.effectiveUser = effectiveUser;\n    return this;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/jobExecutor/utils/process/AzkabanProcessBuilder.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42444, "method_name": "getFrames", "class_name": "SpriteSheet", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BufferedImage", "snippet": "\tpublic BufferedImage[] getFrames() {\n\t\treturn images;\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/SpriteSheet.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42445, "method_name": "crop", "class_name": "SpriteSheet", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "BufferedImage", "snippet": "\tprivate BufferedImage crop(int x, int y, int width, int height){\n\t\treturn sheet.getSubimage(x, y, width, height);\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/SpriteSheet.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42446, "method_name": "run", "class_name": "LoopDecompile", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        PrintStream var10000;\n        String s;\n        boolean var10001;\n        Object o;\n        OperandStackRecoder recorder;\n        label40: {\n            Object var10002;\n            String var4;\n            label44: {\n                if ((recorder = OperandStackRecoder.get()) != null && recorder.isRestoring) {\n                    switch (recorder.popInt()) {\n                    case 0:\n//                        this = (Loop) recorder.popObject();\n                        break;\n                    case 1:\n                        o = (Object) recorder.popObject();\n                        s = (String) recorder.popObject();\n//                        this = (Loop) recorder.popObject();\n                        var10000 = (PrintStream) recorder.popObject();\n                        var4 = (String) recorder.popReference();\n                        var10002 = null;\n                        break label44;\n                    case 2:\n                        o = (Object) recorder.popObject();\n                        s = (String) recorder.popObject();\n//                        this = (Loop) recorder.popObject();\n                        var10000 = (PrintStream) recorder.popReference();\n                        var10001 = false;\n                        /*    */ break label40;\n                    /*    */ }\n                    /*    */ }\n                /*    */\n                /* 7 */ test();\n                if (recorder != null && recorder.isCapturing) {\n                    recorder.pushReference(this);\n                    recorder.pushObject(this);\n                    recorder.pushInt(0);\n                    return;\n                }\n                /* 8 */ s = new String();\n                /* 9 */ o = new Object();\n                /* 10 */ var10000 = System.out;\n                var4 = s;\n                var10002 = o;\n            }\n            var10001 = var4.equals(var10002);\n            if (recorder != null && recorder.isCapturing) {\n                recorder.pushObject(var10000);\n                recorder.pushReference(this);\n                recorder.pushObject(this);\n                recorder.pushObject(s);\n                recorder.pushObject(o);\n                recorder.pushInt(1);\n                return;\n            }\n        }\n        var10000.println(var10001);\n        if (recorder != null && recorder.isCapturing) {\n            recorder.pushReference(this);\n            recorder.pushObject(this);\n            recorder.pushObject(s);\n            recorder.pushObject(o);\n            recorder.pushInt(2);\n        }\n        /* 11 */ }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/test/java/org/coral/jroutine/weave/rewrite/LoopDecompile.java", "stars": "3", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 42447, "method_name": "test", "class_name": "LoopDecompile", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    /*    */ private static void test() {\n        /* 16 */ }", "url": "https://raw.githubusercontent.com/jroutine/jroutine/master/src/test/java/org/coral/jroutine/weave/rewrite/LoopDecompile.java", "stars": "3", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 42448, "method_name": "run", "class_name": "CommandProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        try {\n            final Setup setup = Setup.getSetup();\n\n            Config config = setup.getConfig(Config.class);\n\n            MailConfig mailConfig = config.getMailConfig();\n            if (!mailConfig.check()) {\n                log.error(\"Mail config is not configured!\");\n                return;\n            }\n\n            Session session = mailConfig.getSmtpSession(Setup.getSetup());\n\n            Store store = mailConfig.getImapStore();\n            try {\n                Folder incomingFolder = store.getFolder(\"INBOX\");\n                incomingFolder.open(Folder.READ_WRITE);\n\n                javax.mail.Message[] messages = incomingFolder.getMessages();\n\n                incomingFolder.fetch(messages, MailConfig.FETCH_PROFILE);\n\n                for (javax.mail.Message message : messages) {\n                    try {\n                        String from = ((InternetAddress) message.getFrom()[0]).getAddress();\n                        String subject = message.getSubject();\n                        String text = (String) message.getContent();\n\n                        log.info(\"Processing: \" + message.getSubject() + \"; from: \" + from);\n\n                        if (\"STATE\".equals(subject)) {\n                            Connection conSlave = setup.getConnectionPool().getDBSlaveConnectionFromPool();\n                            try {\n                                sendDispatchStateList(conSlave, config, session, from);\n                            } finally {\n                                SQLUtils.closeConnection(conSlave);\n                            }\n                        } else if (subject.endsWith(\"SUBSCRIBE\")) {\n                            Set<Integer> deltaIds = Utils.toIntegerSet(StringUtils.substringBefore(text, \"\\n\").trim());\n\n                            Connection con = setup.getDBConnectionFromPool();\n                            try {\n                                DispatchDAO dispatchDao = new DispatchDAO(con);\n                                \n                                Set<Integer> dispatchIds = dispatchDao.accountSubsriptionList(from).stream()\n                                        .map(Dispatch::getId).collect(Collectors.toSet());\n                                \n                                if (subject.startsWith(\"UN\"))\n                                    dispatchIds.removeAll(deltaIds);\n                                else\n                                    dispatchIds.addAll(deltaIds);\n                                                                \n                                dispatchDao.accountSubsriptionUpdate(from, dispatchIds);\n                                \n                                sendDispatchStateList(con, config, session, from);\n                                \n                                con.commit();\n                            } finally {\n                                SQLUtils.closeConnection(con);\n                            }\n                        }\n                    } catch (Exception e) {\n                        log.error(e.getMessage(), e);\n                    }\n\n                    message.setFlag(Flags.Flag.DELETED, true);\n                }\n\n                incomingFolder.close(true);\n            } finally {\n                store.close();\n            }\n        } catch (Exception e) {\n            log.error(e.getMessage(), e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/dispatch/CommandProcessor.java", "stars": "12", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 42449, "method_name": "sendDispatchStateList", "class_name": "CommandProcessor", "params": ["Connection", "Config", "Session", "String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void sendDispatchStateList(Connection con, Config config, Session session, String email)\n            throws Exception {\n        DispatchDAO dispatchDao = new DispatchDAO(con);\n        List<Dispatch> dispatchList = dispatchDao.dispatchList(null);\n        Set<Integer> subscriptions = dispatchDao.accountSubsriptionList(email).stream()\n                .map(Dispatch::getId).collect(Collectors.toSet());\n                \n        String encoding = MailMsg.getParamMailEncoding(Setup.getSetup());\n        Transport transport = null;\n\n        try {\n            transport = session.getTransport();\n            transport.connect();\n            \n            StringBuilder body = new StringBuilder(200);\n            for (Dispatch dispatch : dispatchList) {\n                body.append(\"<html><body><div>\");\n                body.append(dispatch.getTitle());\n                body.append(\" \");\n                if (subscriptions.contains(dispatch.getId()))\n                    body.append(\"<b><a href=\\\"mailto:\" + config.getMailConfig().getFrom() + \"?subject=UNSUBSCRIBE&body=\" + dispatch.getId() + \"\\\">\u043e\u0442\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f</a></b>\");\n                else\n                    body.append(\"<a href=\\\"mailto:\" + config.getMailConfig().getFrom() + \"?subject=SUBSCRIBE&body=\" + dispatch.getId() + \"\\\">\u043f\u043e\u0434\u043f\u0438\u0441\u0430\u0442\u044c\u0441\u044f</a>\");\n                body.append(\"</div></body></html>\");\n            }\n\n            MimeMessage msg = new MimeMessage(session);\n            msg.setFrom(new InternetAddress(config.getMailConfig().getFrom()));\n            msg.setSubject(\"\u0421\u0442\u0430\u0442\u0443\u0441 \u043f\u043e\u0434\u043f\u0438\u0441\u043e\u043a\", encoding);\n            msg.setContent(body.toString(),  \"text/html;charset=\" + encoding);\n            msg.setRecipients(RecipientType.TO, email);\n\n            transport.sendMessage(msg, msg.getAllRecipients());\n        } finally {\n            if (transport != null) {\n                transport.close();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/dispatch/CommandProcessor.java", "stars": "12", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 42450, "method_name": "getProjectId", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getProjectId() {\n    return this.projectId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42451, "method_name": "getExecId", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getExecId() {\n    return this.execId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42452, "method_name": "getVersion", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getVersion() {\n    return this.version;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42453, "method_name": "getFlowId", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getFlowId() {\n    return this.flowId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42454, "method_name": "getImmediateFlowId", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getImmediateFlowId() {\n    return this.immediateFlowId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42455, "method_name": "getJobId", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobId() {\n    return this.jobId;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42456, "method_name": "getStartTime", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getStartTime() {\n    return this.startTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42457, "method_name": "getEndTime", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getEndTime() {\n    return this.endTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42458, "method_name": "getStatus", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Status", "snippet": "  public Status getStatus() {\n    return this.status;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42459, "method_name": "getAttempt", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getAttempt() {\n    return this.attempt;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42460, "method_name": "getParsedFlowId", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Pair>", "snippet": "  public List<Pair<String, String>> getParsedFlowId() {\n    return this.jobPath;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42461, "method_name": "parseFlowId", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parseFlowId() {\n    this.jobPath = new ArrayList<>();\n    // parsing pattern: flowRootName[,embeddedFlowName:embeddedFlowPath]*\n    final String[] flowPairs = this.flowId.split(\",\");\n\n    for (final String flowPair : flowPairs) {\n      // splitting each embeddedFlowName:embeddedFlowPath pair by the first occurrence of ':'\n      // only because embeddedFlowPath also uses ':' as delimiter.\n      // Ex: \"embeddedFlow3:rootFlow:embeddedFlow1:embeddedFlow2:embeddedFlow3\" will result in\n      // [\"embeddedFlow3\", \"rootFlow:embeddedFlow1:embeddedFlow2:embeddedFlow3\"]\n      final String[] pairSplit = flowPair.split(\":\", 2);\n      final Pair<String, String> pair;\n      if (pairSplit.length == 1) {\n        pair = new Pair<>(pairSplit[0], pairSplit[0]);\n      } else {\n        pair = new Pair<>(pairSplit[0], pairSplit[1]);\n      }\n\n      this.jobPath.add(pair);\n    }\n\n    this.immediateFlowId = this.jobPath.get(this.jobPath.size() - 1).getSecond();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42462, "method_name": "getJobIdPath", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getJobIdPath() {\n    // Skip the first one because it's always just the root.\n    String path = \"\";\n    for (int i = 1; i < this.jobPath.size(); ++i) {\n      final Pair<String, String> pair = this.jobPath.get(i);\n      path += pair.getFirst() + \":\";\n    }\n\n    path += this.jobId;\n    return path;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42463, "method_name": "toObject", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Object>", "snippet": "  public Map<String, Object> toObject() {\n    final HashMap<String, Object> map = new HashMap<>();\n    map.put(\"execId\", this.execId);\n    map.put(\"version\", this.version);\n    map.put(\"flowId\", this.flowId);\n    map.put(\"jobId\", this.jobId);\n    map.put(\"startTime\", this.startTime);\n    map.put(\"endTime\", this.endTime);\n    map.put(\"status\", this.status.toString());\n    map.put(\"attempt\", this.attempt);\n\n    return map;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42464, "method_name": "setRunDate", "class_name": "ExecutableJobInfo", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setRunDate(long runDate) {\n    this.runDate = runDate;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42465, "method_name": "getRunDate", "class_name": "ExecutableJobInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getRunDate() {\n    return runDate;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutableJobInfo.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42466, "method_name": "getAppContext", "class_name": "TVButterApplication", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "TVButterApplication", "snippet": "    public static TVButterApplication getAppContext() {\n        return (TVButterApplication) ButterApplication.getAppContext();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/TVButterApplication.java", "stars": "4", "class_props": {"extends": "ButterApplication", "implements": null, "modifiers": ["public"]}}, {"id": 42467, "method_name": "attachBaseContext", "class_name": "TVButterApplication", "params": ["Context"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void attachBaseContext(Context base) {\n        super.attachBaseContext(base);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/TVButterApplication.java", "stars": "4", "class_props": {"extends": "ButterApplication", "implements": null, "modifiers": ["public"]}}, {"id": 42468, "method_name": "onCreate", "class_name": "TVButterApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {\n        component = DaggerApplicationComponent.builder()\n                .baseApplicationModule(new BaseApplicationModule(this))\n                .build();\n        component.inject(this);\n        super.onCreate();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/TVButterApplication.java", "stars": "4", "class_props": {"extends": "ButterApplication", "implements": null, "modifiers": ["public"]}}, {"id": 42469, "method_name": "updateAvailable", "class_name": "TVButterApplication", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateAvailable(String filePath) {\n        if(!VersionUtils.isAndroidTV()) {\n            super.updateAvailable(filePath);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/TVButterApplication.java", "stars": "4", "class_props": {"extends": "ButterApplication", "implements": null, "modifiers": ["public"]}}, {"id": 42470, "method_name": "getComponent", "class_name": "TVButterApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ApplicationComponent", "snippet": "    public ApplicationComponent getComponent() {\n        return component;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/TVButterApplication.java", "stars": "4", "class_props": {"extends": "ButterApplication", "implements": null, "modifiers": ["public"]}}, {"id": 42471, "method_name": "compile", "class_name": "OrExpression", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t\tsuper.compile(c);\n\t\tc.code.add(GVM.OR);\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/OrExpression.java", "stars": "17", "class_props": {"extends": "TwoArgumentExpression", "implements": null, "modifiers": ["public"]}}, {"id": 42472, "method_name": "scrollHeadByMove", "class_name": "AnimProcessor", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scrollHeadByMove(float moveY) {\n        float offsetY = decelerateInterpolator.getInterpolation(moveY / cp.getMaxHeadHeight() / 2) * moveY / 2;\n\n        //\u7981\u6b62\u4e0b\u62c9\u5237\u65b0\u65f6\u4e0b\u62c9\u4e0d\u663e\u793a\u5934\u90e8\n        if (cp.isPureScrollModeOn() || (!cp.enableRefresh() && !cp.isOverScrollTopShow())) {\n            if (cp.getHeader().getVisibility() != GONE) {\n                cp.getHeader().setVisibility(GONE);\n            }\n        } else {\n            if (cp.getHeader().getVisibility() != VISIBLE) {\n                cp.getHeader().setVisibility(VISIBLE);\n            }\n        }\n\n        if (scrollHeadLocked && cp.isEnableKeepIView()) {\n            cp.getHeader().setTranslationY(offsetY - cp.getHeader().getLayoutParams().height);\n        } else {\n            cp.getHeader().setTranslationY(0);\n            cp.getHeader().getLayoutParams().height = (int) Math.abs(offsetY);\n            cp.getHeader().requestLayout();\n            cp.onPullingDown(offsetY);\n        }\n\n        if (!cp.isOpenFloatRefresh()) {\n            cp.getTargetView().setTranslationY(offsetY);\n            translateExHead((int) offsetY);\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42473, "method_name": "scrollBottomByMove", "class_name": "AnimProcessor", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void scrollBottomByMove(float moveY) {\n        float offsetY = decelerateInterpolator.getInterpolation(moveY / cp.getMaxBottomHeight() / 2) * moveY / 2;\n\n        if (cp.isPureScrollModeOn() || (!cp.enableLoadmore() && !cp.isOverScrollBottomShow())) {\n            if (cp.getFooter().getVisibility() != GONE) {\n                cp.getFooter().setVisibility(GONE);\n            }\n        } else {\n            if (cp.getFooter().getVisibility() != VISIBLE) {\n                cp.getFooter().setVisibility(VISIBLE);\n            }\n        }\n\n        if (scrollBottomLocked && cp.isEnableKeepIView()) {\n            cp.getFooter().setTranslationY(cp.getFooter().getLayoutParams().height - offsetY);\n        } else {\n            cp.getFooter().setTranslationY(0);\n            cp.getFooter().getLayoutParams().height = (int) Math.abs(offsetY);\n            cp.getFooter().requestLayout();\n            cp.onPullingUp(-offsetY);\n        }\n\n        cp.getTargetView().setTranslationY(-offsetY);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42474, "method_name": "dealPullDownRelease", "class_name": "AnimProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dealPullDownRelease() {\n        if (!cp.isPureScrollModeOn() && cp.enableRefresh() && getVisibleHeadHeight() >= cp.getHeadHeight() - cp.getTouchSlop()) {\n            animHeadToRefresh();\n        } else {\n            animHeadBack(false);\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42475, "method_name": "dealPullUpRelease", "class_name": "AnimProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dealPullUpRelease() {\n        if (!cp.isPureScrollModeOn() && cp.enableLoadmore() && getVisibleFootHeight() >= cp.getBottomHeight() - cp.getTouchSlop()) {\n            animBottomToLoad();\n        } else {\n            animBottomBack(false);\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42476, "method_name": "getVisibleHeadHeight", "class_name": "AnimProcessor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getVisibleHeadHeight() {\n        LogUtil.i(\"header translationY:\" + cp.getHeader().getTranslationY() + \",Visible head height:\" + (cp.getHeader().getLayoutParams().height + cp.getHeader().getTranslationY()));\n        return (int) (cp.getHeader().getLayoutParams().height + cp.getHeader().getTranslationY());\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42477, "method_name": "getVisibleFootHeight", "class_name": "AnimProcessor", "params": [], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int getVisibleFootHeight() {\n        LogUtil.i(\"footer translationY:\" + cp.getFooter().getTranslationY() + \"\");\n        return (int) (cp.getFooter().getLayoutParams().height - cp.getFooter().getTranslationY());\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42478, "method_name": "transHeader", "class_name": "AnimProcessor", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void transHeader(float offsetY) {\n        cp.getHeader().setTranslationY(offsetY - cp.getHeader().getLayoutParams().height);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42479, "method_name": "transFooter", "class_name": "AnimProcessor", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void transFooter(float offsetY) {\n        cp.getFooter().setTranslationY(cp.getFooter().getLayoutParams().height - offsetY);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42480, "method_name": "animHeadToRefresh", "class_name": "AnimProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animHeadToRefresh() {\n        LogUtil.i(\"animHeadToRefresh:\");\n        isAnimHeadToRefresh = true;\n        animLayoutByTime(getVisibleHeadHeight(), cp.getHeadHeight(), animHeadUpListener, new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n\n                isAnimHeadToRefresh = false;\n\n                if (cp.getHeader().getVisibility() != VISIBLE) {\n                    cp.getHeader().setVisibility(VISIBLE);\n                }\n\n                cp.setRefreshVisible(true);\n                if (cp.isEnableKeepIView()) {\n                    if (!scrollHeadLocked) {\n                        cp.setRefreshing(true);\n                        cp.onRefresh();\n                        scrollHeadLocked = true;\n                    }\n                } else {\n                    cp.setRefreshing(true);\n                    cp.onRefresh();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42481, "method_name": "animHeadBack", "class_name": "AnimProcessor", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animHeadBack(final boolean isFinishRefresh) {\n        LogUtil.i(\"animHeadBack\uff1afinishRefresh?->\" + isFinishRefresh);\n        isAnimHeadBack = true;\n        if (isFinishRefresh && scrollHeadLocked && cp.isEnableKeepIView()) {\n            cp.setPrepareFinishRefresh(true);\n        }\n        animLayoutByTime(getVisibleHeadHeight(), 0, animHeadUpListener, new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                isAnimHeadBack = false;\n                cp.setRefreshVisible(false);\n                if (isFinishRefresh && scrollHeadLocked && cp.isEnableKeepIView()) {\n                    cp.getHeader().getLayoutParams().height = 0;\n                    cp.getHeader().requestLayout();\n                    cp.getHeader().setTranslationY(0);\n                    scrollHeadLocked = false;\n                    cp.setRefreshing(false);\n                    cp.resetHeaderView();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42482, "method_name": "animBottomToLoad", "class_name": "AnimProcessor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animBottomToLoad() {\n        LogUtil.i(\"animBottomToLoad\");\n        isAnimBottomToLoad = true;\n        animLayoutByTime(getVisibleFootHeight(), cp.getBottomHeight(), animBottomUpListener, new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                isAnimBottomToLoad = false;\n\n                if (cp.getFooter().getVisibility() != VISIBLE) {\n                    cp.getFooter().setVisibility(VISIBLE);\n                }\n\n                cp.setLoadVisible(true);\n                if (cp.isEnableKeepIView()) {\n                    if (!scrollBottomLocked) {\n                        cp.setLoadingMore(true);\n                        cp.onLoadMore();\n                        scrollBottomLocked = true;\n                    }\n                } else {\n                    cp.setLoadingMore(true);\n                    cp.onLoadMore();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42483, "method_name": "animBottomBack", "class_name": "AnimProcessor", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animBottomBack(final boolean isFinishLoading) {\n        LogUtil.i(\"animBottomBack\uff1afinishLoading?->\" + isFinishLoading);\n        isAnimBottomBack = true;\n        if (isFinishLoading && scrollBottomLocked && cp.isEnableKeepIView()) {\n            cp.setPrepareFinishLoadMore(true);\n        }\n        animLayoutByTime(getVisibleFootHeight(), 0, new AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator animation) {\n                int height = (int) animation.getAnimatedValue();\n                //\u5217\u8868\u4e2d\u52a0\u8f7d\u5230\u5185\u5bb9\u65f6\u6eda\u52a8List\n                if (!ScrollingUtil.isViewToBottom(cp.getTargetView(), cp.getTouchSlop())) {\n                    int dy = getVisibleFootHeight() - height;\n                    //\u53ef\u4ee5\u8ba9TargetView\u6eda\u52a8dy\u9ad8\u5ea6\uff0c\u4f46\u8fd9\u6837\u4e24\u4e2a\u65b9\u5411\u4e0a\u6eda\u52a8\u611f\u89c9\u753b\u9762\u95ea\u70c1\uff0c\u6539\u4e3ady/2\u662f\u4e3a\u4e86\u6d88\u9664\u95ea\u70c1\n                    if (dy > 0) {\n                        if (cp.getTargetView() instanceof RecyclerView)\n                            ScrollingUtil.scrollAViewBy(cp.getTargetView(), dy);\n                        else ScrollingUtil.scrollAViewBy(cp.getTargetView(), dy / 2);\n                    }\n                }\n\n                //decorate the AnimatorUpdateListener\n                animBottomUpListener.onAnimationUpdate(animation);\n            }\n        }, new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                isAnimBottomBack = false;\n\n                cp.setLoadVisible(false);\n                if (isFinishLoading) {\n                    if (scrollBottomLocked && cp.isEnableKeepIView()) {\n                        cp.getFooter().getLayoutParams().height = 0;\n                        cp.getFooter().requestLayout();\n                        cp.getFooter().setTranslationY(0);\n                        scrollBottomLocked = false;\n                        cp.resetBottomView();\n                        cp.setLoadingMore(false);\n                    }\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42484, "method_name": "animHeadHideByVy", "class_name": "AnimProcessor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animHeadHideByVy(int vy) {\n        if (isAnimHeadHide) return;\n        isAnimHeadHide = true;\n        LogUtil.i(\"animHeadHideByVy\uff1avy->\" + vy);\n        vy = Math.abs(vy);\n        if (vy < 5000) vy = 8000;\n        animLayoutByTime(getVisibleHeadHeight(), 0, 5 * Math.abs(getVisibleHeadHeight() * 1000 / vy), animHeadUpListener, new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                isAnimHeadHide = false;\n                cp.setRefreshVisible(false);\n                if (!cp.isEnableKeepIView()) {\n                    cp.setRefreshing(false);\n                    cp.onRefreshCanceled();\n                    cp.resetHeaderView();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42485, "method_name": "animBottomHideByVy", "class_name": "AnimProcessor", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animBottomHideByVy(int vy) {\n        LogUtil.i(\"animBottomHideByVy\uff1avy->\" + vy);\n        if (isAnimBottomHide) return;\n        isAnimBottomHide = true;\n        vy = Math.abs(vy);\n        if (vy < 5000) vy = 8000;\n        animLayoutByTime(getVisibleFootHeight(), 0, 5 * getVisibleFootHeight() * 1000 / vy, animBottomUpListener, new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                isAnimBottomHide = false;\n                cp.setLoadVisible(false);\n                if (!cp.isEnableKeepIView()) {\n                    cp.setLoadingMore(false);\n                    cp.onLoadmoreCanceled();\n                    cp.resetBottomView();\n                }\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42486, "method_name": "animOverScrollTop", "class_name": "AnimProcessor", "params": ["float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animOverScrollTop(float vy, int computeTimes) {\n        LogUtil.i(\"animOverScrollTop\uff1avy->\" + vy + \",computeTimes->\" + computeTimes);\n        if (isOverScrollTopLocked) return;\n        isOverScrollTopLocked = true;\n        isAnimOsTop = true;\n        cp.setStatePTD();\n        int oh = (int) Math.abs(vy / computeTimes / 2);\n        final int overHeight = oh > cp.getOsHeight() ? cp.getOsHeight() : oh;\n        final int time = overHeight <= 50 ? 115 : (int) (0.3 * overHeight + 100);\n        animLayoutByTime(getVisibleHeadHeight(), overHeight, time, overScrollTopUpListener, new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                if (scrollHeadLocked && cp.isEnableKeepIView() && cp.showRefreshingWhenOverScroll()) {\n                    animHeadToRefresh();\n                    isAnimOsTop = false;\n                    isOverScrollTopLocked = false;\n                    return;\n                }\n                animLayoutByTime(overHeight, 0, 2 * time, overScrollTopUpListener, new AnimatorListenerAdapter() {\n                    @Override\n                    public void onAnimationEnd(Animator animation) {\n                        isAnimOsTop = false;\n                        isOverScrollTopLocked = false;\n                    }\n                });\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42487, "method_name": "animOverScrollBottom", "class_name": "AnimProcessor", "params": ["float", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animOverScrollBottom(float vy, int computeTimes) {\n        LogUtil.i(\"animOverScrollBottom\uff1avy->\" + vy + \",computeTimes->\" + computeTimes);\n        if (isOverScrollBottomLocked) return;\n        cp.setStatePBU();\n        int oh = (int) Math.abs(vy / computeTimes / 2);\n        final int overHeight = oh > cp.getOsHeight() ? cp.getOsHeight() : oh;\n        final int time = overHeight <= 50 ? 115 : (int) (0.3 * overHeight + 100);\n        if (!scrollBottomLocked && cp.autoLoadMore()) {\n            cp.startLoadMore();\n        } else {\n            isOverScrollBottomLocked = true;\n            isAnimOsBottom = true;\n            animLayoutByTime(0, overHeight, time, overScrollBottomUpListener, new AnimatorListenerAdapter() {\n                @Override\n                public void onAnimationEnd(Animator animation) {\n                    if (scrollBottomLocked && cp.isEnableKeepIView() && cp.showLoadingWhenOverScroll()) {\n                        animBottomToLoad();\n                        isAnimOsBottom = false;\n                        isOverScrollBottomLocked = false;\n                        return;\n                    }\n                    animLayoutByTime(overHeight, 0, 2 * time, overScrollBottomUpListener, new AnimatorListenerAdapter() {\n                        @Override\n                        public void onAnimationEnd(Animator animation) {\n                            isAnimOsBottom = false;\n                            isOverScrollBottomLocked = false;\n                        }\n                    });\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42488, "method_name": "translateExHead", "class_name": "AnimProcessor", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void translateExHead(int offsetY) {\n        if (!cp.isExHeadLocked()) cp.getExHead().setTranslationY(offsetY);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42489, "method_name": "animLayoutByTime", "class_name": "AnimProcessor", "params": ["int", "int", "long", "AnimatorUpdateListener", "AnimatorListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animLayoutByTime(int start, int end, long time, AnimatorUpdateListener listener, AnimatorListener animatorListener) {\n        ValueAnimator va = ValueAnimator.ofInt(start, end);\n        va.setInterpolator(new DecelerateInterpolator());\n        va.addUpdateListener(listener);\n        va.addListener(animatorListener);\n        va.setDuration(time);\n        va.start();\n//        offerToQueue(va);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42490, "method_name": "animLayoutByTime", "class_name": "AnimProcessor", "params": ["int", "int", "long", "AnimatorUpdateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animLayoutByTime(int start, int end, long time, AnimatorUpdateListener listener) {\n        ValueAnimator va = ValueAnimator.ofInt(start, end);\n        va.setInterpolator(new DecelerateInterpolator());\n        va.addUpdateListener(listener);\n        va.setDuration(time);\n        va.start();\n//        offerToQueue(va);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42491, "method_name": "animLayoutByTime", "class_name": "AnimProcessor", "params": ["int", "int", "AnimatorUpdateListener", "AnimatorListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animLayoutByTime(int start, int end, AnimatorUpdateListener listener, AnimatorListener animatorListener) {\n        ValueAnimator va = ValueAnimator.ofInt(start, end);\n        va.setInterpolator(new DecelerateInterpolator());\n        va.addUpdateListener(listener);\n        va.addListener(animatorListener);\n        va.setDuration((int) (Math.abs(start - end) * animFraction));\n        va.start();\n//        offerToQueue(va);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42492, "method_name": "offerToQueue", "class_name": "AnimProcessor", "params": ["Animator"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void offerToQueue(Animator animator) {\n        if (animator == null) return;\n        if (animQueue == null) {\n            animQueue = new LinkedList<>();\n        }\n        animQueue.offer(animator);\n\n        System.out.println(\"Current Animators\uff1a\" + animQueue.size());\n\n        animator.addListener(new AnimatorListenerAdapter() {\n            long startTime = 0;\n\n            @Override\n            public void onAnimationStart(Animator animation) {\n                startTime = System.currentTimeMillis();\n            }\n\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                animQueue.poll();\n                if (animQueue.size() > 0) {\n                    animQueue.getFirst().start();\n                }\n                System.out.println(\"Anim end\uff1astart time->\" + startTime + \",elapsed time->\" + (System.currentTimeMillis() - startTime));\n            }\n        });\n        if (animQueue.size() == 1) {\n            animator.start();\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/processor/AnimProcessor.java", "stars": "9", "class_props": {"extends": null, "implements": ["IAnimRefresh", "IAnimOverScroll"], "modifiers": ["public"]}}, {"id": 42493, "method_name": "toPublish", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toPublish() {\n        return \"publish\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42494, "method_name": "toSuggest", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toSuggest() {\n        return \"suggest\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42495, "method_name": "toMain", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toMain() {\n        return \"main\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42496, "method_name": "toMessages", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toMessages() {\n        return \"messages\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42497, "method_name": "toMyCircle", "class_name": "GotoController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toMyCircle(String user_name) {\n        User user = us.getUserByUserName(user_name);\n        User userOnline = (User) session.getAttribute(\"onlineUser\");\n        if(user.getUser_name().equals(userOnline.getUser_name())){\n            return \"my_home\";\n        }\n        session.setAttribute(\"otherUser\",user);\n        return \"other_home\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42498, "method_name": "toMyHome", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toMyHome() {\n        return \"my_home\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42499, "method_name": "toFileStore", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toFileStore() {\n        return \"file_store\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42500, "method_name": "toTags", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toTags() {\n        return \"add_tag\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42501, "method_name": "toArticles", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toArticles() {\n        return \"my_articles\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42502, "method_name": "toUpdateTag", "class_name": "GotoController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toUpdateTag(String name) {\n        request.setAttribute(\"tagName\",name);\n        return \"update_tag\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42503, "method_name": "toUpdateInfo", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toUpdateInfo() {\n        return \"update_info\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42504, "method_name": "toLogout", "class_name": "GotoController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toLogout() {\n        //\u6e05\u7a7a\u6574\u4e2asession\u57df\n        request.getSession().invalidate();\n        return \"redirect:login.jsp\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42505, "method_name": "toEdit", "class_name": "GotoController", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toEdit(int article_id){\n        Article article = as.getMyArticleById(article_id);\n        request.setAttribute(\"articleToEdit\",article);\n        return \"edit_article\";\n    }", "url": "https://raw.githubusercontent.com/373675032/Molihub/master/src/controller/GotoController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42506, "method_name": "start", "class_name": "QuartzScheduler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void start() {\n    try {\n      this.scheduler.start();\n    } catch (final SchedulerException e) {\n      logger.error(\"Error starting Quartz scheduler: \", e);\n    }\n    logger.info(\"Quartz Scheduler started.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42507, "method_name": "cleanup", "class_name": "QuartzScheduler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void cleanup() {\n    logger.info(\"Cleaning up schedules in scheduler\");\n    try {\n      this.scheduler.clear();\n    } catch (final SchedulerException e) {\n      logger.error(\"Exception clearing scheduler: \", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42508, "method_name": "pause", "class_name": "QuartzScheduler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void pause() {\n    logger.info(\"pausing all schedules in Quartz\");\n    try {\n      this.scheduler.pauseAll();\n    } catch (final SchedulerException e) {\n      logger.error(\"Exception pausing scheduler: \", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42509, "method_name": "resume", "class_name": "QuartzScheduler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void resume() {\n    logger.info(\"resuming all schedules in Quartz\");\n    try {\n      this.scheduler.resumeAll();\n    } catch (final SchedulerException e) {\n      logger.error(\"Exception resuming scheduler: \", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42510, "method_name": "shutdown", "class_name": "QuartzScheduler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {\n    logger.info(\"Shutting down scheduler\");\n    try {\n      this.scheduler.shutdown();\n    } catch (final SchedulerException e) {\n      logger.error(\"Exception shutting down scheduler: \", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42511, "method_name": "checkJobExistence", "class_name": "QuartzScheduler", "params": ["String", "String"], "throws": ["SchedulerException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void checkJobExistence(final String jobName, final String groupName)\n      throws SchedulerException {\n    if (!ifJobExist(jobName, groupName)) {\n      throw new SchedulerException(String.format(\"can not find job with job name: %s and group \"\n          + \"name %s: in quartz.\", jobName, groupName));\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42512, "method_name": "pauseJob", "class_name": "QuartzScheduler", "params": ["String", "String"], "throws": ["SchedulerException"], "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void pauseJob(final String jobName, final String groupName)\n      throws SchedulerException {\n    checkJobExistence(jobName, groupName);\n    this.scheduler.pauseJob(new JobKey(jobName, groupName));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42513, "method_name": "isJobPaused", "class_name": "QuartzScheduler", "params": ["String", "String"], "throws": ["SchedulerException"], "modifiers": ["synchronized", "public"], "return_type": "boolean", "snippet": "  public synchronized boolean isJobPaused(final String jobName, final String groupName)\n      throws SchedulerException {\n    final JobKey jobKey = new JobKey(jobName, groupName);\n    final JobDetail jobDetail = this.scheduler.getJobDetail(jobKey);\n    final List<? extends Trigger> triggers = this.scheduler.getTriggersOfJob(jobDetail.getKey());\n    for (final Trigger trigger : triggers) {\n      final TriggerState triggerState = this.scheduler.getTriggerState(trigger.getKey());\n      if (TriggerState.PAUSED.equals(triggerState)) {\n        return true;\n      }\n    }\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42514, "method_name": "resumeJob", "class_name": "QuartzScheduler", "params": ["String", "String"], "throws": ["SchedulerException"], "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void resumeJob(final String jobName, final String groupName)\n      throws SchedulerException {\n    checkJobExistence(jobName, groupName);\n    this.scheduler.resumeJob(new JobKey(jobName, groupName));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42515, "method_name": "unregisterJob", "class_name": "QuartzScheduler", "params": ["String", "String"], "throws": ["SchedulerException"], "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void unregisterJob(final String jobName, final String groupName) throws\n      SchedulerException {\n    checkJobExistence(jobName, groupName);\n    this.scheduler.deleteJob(new JobKey(jobName, groupName));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42516, "method_name": "registerJob", "class_name": "QuartzScheduler", "params": ["String", "QuartzJobDescription"], "throws": ["SchedulerException"], "modifiers": ["synchronized", "public"], "return_type": "void", "snippet": "  public synchronized void registerJob(final String cronExpression, final QuartzJobDescription\n      jobDescription)\n      throws SchedulerException {\n\n    requireNonNull(jobDescription, \"jobDescription is null\");\n\n    if (ifJobExist(jobDescription.getJobName(), jobDescription.getGroupName())) {\n      throw new SchedulerException(String.format(\"can not register existing job with job name: \"\n          + \"%s and group name: %s\", jobDescription.getJobName(), jobDescription.getGroupName()));\n    }\n\n    if (!CronExpression.isValidExpression(cronExpression)) {\n      throw new SchedulerException(\n          \"The cron expression string <\" + cronExpression + \"> is not valid.\");\n    }\n\n    // TODO kunkun-tang: we will modify this when we start supporting multi schedules per flow.\n    final JobDetail job = JobBuilder.newJob(jobDescription.getJobClass())\n        .withIdentity(jobDescription.getJobName(), jobDescription.getGroupName()).build();\n\n    // Add external dependencies to Job Data Map.\n    job.getJobDataMap().putAll(jobDescription.getContextMap());\n\n    // TODO kunkun-tang: Need management code to deal with different misfire policy\n    final Trigger trigger = TriggerBuilder\n        .newTrigger()\n        .withSchedule(\n            CronScheduleBuilder.cronSchedule(cronExpression)\n                .withMisfireHandlingInstructionFireAndProceed()\n//            .withMisfireHandlingInstructionDoNothing()\n//            .withMisfireHandlingInstructionIgnoreMisfires()\n        )\n        .build();\n\n    this.scheduler.scheduleJob(job, trigger);\n    logger.info(\"Quartz Schedule with jobDetail \" + job.getDescription() + \" is registered.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42517, "method_name": "ifJobExist", "class_name": "QuartzScheduler", "params": ["String", "String"], "throws": ["SchedulerException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean ifJobExist(final String jobName, final String groupName)\n      throws SchedulerException {\n    return this.scheduler.getJobDetail(new JobKey(jobName, groupName)) != null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42518, "method_name": "getScheduler", "class_name": "QuartzScheduler", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Scheduler", "snippet": "  public Scheduler getScheduler() {\n    return this.scheduler;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/scheduler/QuartzScheduler.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42519, "method_name": "flush", "class_name": "DBInfoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void flush()\n    {\n    \t// \u0437\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u043a \u0411\u0414\n    \tif( instance != null )\n    \t{\n    \t\tfor( DBInfo dbInfo : instance.getDbInfoList() )\n    \t\t{\n    \t\t\tdbInfo.getConnectionPool().close();\n    \t\t}\n    \t}\n    \tinstance = null;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/DBInfoManager.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42520, "method_name": "getInstance", "class_name": "DBInfoManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DBInfoManager", "snippet": "    public static DBInfoManager getInstance()\n    {\n        if ( instance == null )\n        {\n            instance = new DBInfoManager( Setup.getSetup() );\n        }\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/DBInfoManager.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42521, "method_name": "getDbInfo", "class_name": "DBInfoManager", "params": ["String"], "throws": ["BGException"], "modifiers": ["public", "static"], "return_type": "DBInfo", "snippet": "    public static DBInfo getDbInfo( String billingId )\n    \tthrows BGException\n    {\n    \tDBInfo dbInfo = DBInfoManager.getInstance().getDbInfoMap().get( billingId );\n    \tif( dbInfo == null )\n    \t{\n    \t\tthrow new BGException( \"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0431\u0438\u043b\u043b\u0438\u043d\u0433: \" + billingId );\n    \t}\n    \treturn dbInfo;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/DBInfoManager.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42522, "method_name": "getDbInfoList", "class_name": "DBInfoManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DBInfo>", "snippet": "\tpublic List<DBInfo> getDbInfoList()\n    {\n    \treturn dbInfoList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/DBInfoManager.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42523, "method_name": "getDbInfoMap", "class_name": "DBInfoManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,DBInfo>", "snippet": "\tpublic Map<String, DBInfo> getDbInfoMap()\n    {\n    \treturn dbInfoMap;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/DBInfoManager.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42524, "method_name": "visit", "class_name": "ClassWriter", "params": ["int", "int", "String", "String", "String", "String"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visit(\n      final int version,\n      final int access,\n      final String name,\n      final String signature,\n      final String superName,\n      final String[] interfaces) {\n    this.version = version;\n    this.accessFlags = access;\n    this.thisClass = symbolTable.setMajorVersionAndClassName(version & 0xFFFF, name);\n    if (signature != null) {\n      this.signatureIndex = symbolTable.addConstantUtf8(signature);\n    }\n    this.superClass = superName == null ? 0 : symbolTable.addConstantClass(superName).index;\n    if (interfaces != null && interfaces.length > 0) {\n      interfaceCount = interfaces.length;\n      this.interfaces = new int[interfaceCount];\n      for (int i = 0; i < interfaceCount; ++i) {\n        this.interfaces[i] = symbolTable.addConstantClass(interfaces[i]).index;\n      }\n    }\n    if (compute == MethodWriter.COMPUTE_MAX_STACK_AND_LOCAL && (version & 0xFFFF) >= Opcodes.V1_7) {\n      compute = MethodWriter.COMPUTE_MAX_STACK_AND_LOCAL_FROM_FRAMES;\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42525, "method_name": "visitSource", "class_name": "ClassWriter", "params": ["String", "String"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitSource(final String file, final String debug) {\n    if (file != null) {\n      sourceFileIndex = symbolTable.addConstantUtf8(file);\n    }\n    if (debug != null) {\n      debugExtension = new ByteVector().encodeUtf8(debug, 0, Integer.MAX_VALUE);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42526, "method_name": "visitModule", "class_name": "ClassWriter", "params": ["String", "int", "String"], "throws": null, "modifiers": ["final", "public"], "return_type": "ModuleVisitor", "snippet": "  public final ModuleVisitor visitModule(\n      final String name, final int access, final String version) {\n    return moduleWriter =\n        new ModuleWriter(\n            symbolTable,\n            symbolTable.addConstantModule(name).index,\n            access,\n            version == null ? 0 : symbolTable.addConstantUtf8(version));\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42527, "method_name": "visitNestHost", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitNestHost(final String nestHost) {\n    nestHostClassIndex = symbolTable.addConstantClass(nestHost).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42528, "method_name": "visitOuterClass", "class_name": "ClassWriter", "params": ["String", "String", "String"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitOuterClass(\n      final String owner, final String name, final String descriptor) {\n    enclosingClassIndex = symbolTable.addConstantClass(owner).index;\n    if (name != null && descriptor != null) {\n      enclosingMethodIndex = symbolTable.addConstantNameAndType(name, descriptor);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42529, "method_name": "visitAnnotation", "class_name": "ClassWriter", "params": ["String", "boolean"], "throws": null, "modifiers": ["final", "public"], "return_type": "AnnotationVisitor", "snippet": "  public final AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible) {\n    if (visible) {\n      return lastRuntimeVisibleAnnotation =\n          AnnotationWriter.create(symbolTable, descriptor, lastRuntimeVisibleAnnotation);\n    } else {\n      return lastRuntimeInvisibleAnnotation =\n          AnnotationWriter.create(symbolTable, descriptor, lastRuntimeInvisibleAnnotation);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42530, "method_name": "visitTypeAnnotation", "class_name": "ClassWriter", "params": ["int", "TypePath", "String", "boolean"], "throws": null, "modifiers": ["final", "public"], "return_type": "AnnotationVisitor", "snippet": "  public final AnnotationVisitor visitTypeAnnotation(\n      final int typeRef, final TypePath typePath, final String descriptor, final boolean visible) {\n    if (visible) {\n      return lastRuntimeVisibleTypeAnnotation =\n          AnnotationWriter.create(\n              symbolTable, typeRef, typePath, descriptor, lastRuntimeVisibleTypeAnnotation);\n    } else {\n      return lastRuntimeInvisibleTypeAnnotation =\n          AnnotationWriter.create(\n              symbolTable, typeRef, typePath, descriptor, lastRuntimeInvisibleTypeAnnotation);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42531, "method_name": "visitAttribute", "class_name": "ClassWriter", "params": ["Attribute"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitAttribute(final Attribute attribute) {\n    // Store the attributes in the <i>reverse</i> order of their visit by this method.\n    attribute.nextAttribute = firstAttribute;\n    firstAttribute = attribute;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42532, "method_name": "visitNestMember", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitNestMember(final String nestMember) {\n    if (nestMemberClasses == null) {\n      nestMemberClasses = new ByteVector();\n    }\n    ++numberOfNestMemberClasses;\n    nestMemberClasses.putShort(symbolTable.addConstantClass(nestMember).index);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42533, "method_name": "visitPermittedSubtypeExperimental", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitPermittedSubtypeExperimental(final String permittedSubtype) {\n    if (permittedSubtypeClasses == null) {\n      permittedSubtypeClasses = new ByteVector();\n    }\n    ++numberOfPermittedSubtypeClasses;\n    permittedSubtypeClasses.putShort(symbolTable.addConstantClass(permittedSubtype).index);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42534, "method_name": "visitInnerClass", "class_name": "ClassWriter", "params": ["String", "String", "String", "int"], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitInnerClass(\n      final String name, final String outerName, final String innerName, final int access) {\n    if (innerClasses == null) {\n      innerClasses = new ByteVector();\n    }\n    // Section 4.7.6 of the JVMS states \"Every CONSTANT_Class_info entry in the constant_pool table\n    // which represents a class or interface C that is not a package member must have exactly one\n    // corresponding entry in the classes array\". To avoid duplicates we keep track in the info\n    // field of the Symbol of each CONSTANT_Class_info entry C whether an inner class entry has\n    // already been added for C. If so, we store the index of this inner class entry (plus one) in\n    // the info field. This trick allows duplicate detection in O(1) time.\n    Symbol nameSymbol = symbolTable.addConstantClass(name);\n    if (nameSymbol.info == 0) {\n      ++numberOfInnerClasses;\n      innerClasses.putShort(nameSymbol.index);\n      innerClasses.putShort(outerName == null ? 0 : symbolTable.addConstantClass(outerName).index);\n      innerClasses.putShort(innerName == null ? 0 : symbolTable.addConstantUtf8(innerName));\n      innerClasses.putShort(access);\n      nameSymbol.info = numberOfInnerClasses;\n    }\n    // Else, compare the inner classes entry nameSymbol.info - 1 with the arguments of this method\n    // and throw an exception if there is a difference?\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42535, "method_name": "visitRecordComponent", "class_name": "ClassWriter", "params": ["String", "String", "String"], "throws": null, "modifiers": ["final", "public"], "return_type": "RecordComponentVisitor", "snippet": "  public final RecordComponentVisitor visitRecordComponent(\n      final String name, final String descriptor, final String signature) {\n    RecordComponentWriter recordComponentWriter =\n        new RecordComponentWriter(symbolTable, name, descriptor, signature);\n    if (firstRecordComponent == null) {\n      firstRecordComponent = recordComponentWriter;\n    } else {\n      lastRecordComponent.delegate = recordComponentWriter;\n    }\n    return lastRecordComponent = recordComponentWriter;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42536, "method_name": "visitField", "class_name": "ClassWriter", "params": ["int", "String", "String", "String", "Object"], "throws": null, "modifiers": ["final", "public"], "return_type": "FieldVisitor", "snippet": "  public final FieldVisitor visitField(\n      final int access,\n      final String name,\n      final String descriptor,\n      final String signature,\n      final Object value) {\n    FieldWriter fieldWriter =\n        new FieldWriter(symbolTable, access, name, descriptor, signature, value);\n    if (firstField == null) {\n      firstField = fieldWriter;\n    } else {\n      lastField.fv = fieldWriter;\n    }\n    return lastField = fieldWriter;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42537, "method_name": "visitMethod", "class_name": "ClassWriter", "params": ["int", "String", "String", "String", "String"], "throws": null, "modifiers": ["final", "public"], "return_type": "MethodVisitor", "snippet": "  public final MethodVisitor visitMethod(\n      final int access,\n      final String name,\n      final String descriptor,\n      final String signature,\n      final String[] exceptions) {\n    MethodWriter methodWriter =\n        new MethodWriter(symbolTable, access, name, descriptor, signature, exceptions, compute);\n    if (firstMethod == null) {\n      firstMethod = methodWriter;\n    } else {\n      lastMethod.mv = methodWriter;\n    }\n    return lastMethod = methodWriter;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42538, "method_name": "visitEnd", "class_name": "ClassWriter", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "void", "snippet": "  public final void visitEnd() {\n    // Nothing to do.\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42539, "method_name": "toByteArray", "class_name": "ClassWriter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "  public byte[] toByteArray() {\n    // First step: compute the size in bytes of the ClassFile structure.\n    // The magic field uses 4 bytes, 10 mandatory fields (minor_version, major_version,\n    // constant_pool_count, access_flags, this_class, super_class, interfaces_count, fields_count,\n    // methods_count and attributes_count) use 2 bytes each, and each interface uses 2 bytes too.\n    int size = 24 + 2 * interfaceCount;\n    int fieldsCount = 0;\n    FieldWriter fieldWriter = firstField;\n    while (fieldWriter != null) {\n      ++fieldsCount;\n      size += fieldWriter.computeFieldInfoSize();\n      fieldWriter = (FieldWriter) fieldWriter.fv;\n    }\n    int methodsCount = 0;\n    MethodWriter methodWriter = firstMethod;\n    while (methodWriter != null) {\n      ++methodsCount;\n      size += methodWriter.computeMethodInfoSize();\n      methodWriter = (MethodWriter) methodWriter.mv;\n    }\n\n    // For ease of reference, we use here the same attribute order as in Section 4.7 of the JVMS.\n    int attributesCount = 0;\n    if (innerClasses != null) {\n      ++attributesCount;\n      size += 8 + innerClasses.length;\n      symbolTable.addConstantUtf8(Constants.INNER_CLASSES);\n    }\n    if (enclosingClassIndex != 0) {\n      ++attributesCount;\n      size += 10;\n      symbolTable.addConstantUtf8(Constants.ENCLOSING_METHOD);\n    }\n    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && (version & 0xFFFF) < Opcodes.V1_5) {\n      ++attributesCount;\n      size += 6;\n      symbolTable.addConstantUtf8(Constants.SYNTHETIC);\n    }\n    if (signatureIndex != 0) {\n      ++attributesCount;\n      size += 8;\n      symbolTable.addConstantUtf8(Constants.SIGNATURE);\n    }\n    if (sourceFileIndex != 0) {\n      ++attributesCount;\n      size += 8;\n      symbolTable.addConstantUtf8(Constants.SOURCE_FILE);\n    }\n    if (debugExtension != null) {\n      ++attributesCount;\n      size += 6 + debugExtension.length;\n      symbolTable.addConstantUtf8(Constants.SOURCE_DEBUG_EXTENSION);\n    }\n    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n      ++attributesCount;\n      size += 6;\n      symbolTable.addConstantUtf8(Constants.DEPRECATED);\n    }\n    if (lastRuntimeVisibleAnnotation != null) {\n      ++attributesCount;\n      size +=\n          lastRuntimeVisibleAnnotation.computeAnnotationsSize(\n              Constants.RUNTIME_VISIBLE_ANNOTATIONS);\n    }\n    if (lastRuntimeInvisibleAnnotation != null) {\n      ++attributesCount;\n      size +=\n          lastRuntimeInvisibleAnnotation.computeAnnotationsSize(\n              Constants.RUNTIME_INVISIBLE_ANNOTATIONS);\n    }\n    if (lastRuntimeVisibleTypeAnnotation != null) {\n      ++attributesCount;\n      size +=\n          lastRuntimeVisibleTypeAnnotation.computeAnnotationsSize(\n              Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS);\n    }\n    if (lastRuntimeInvisibleTypeAnnotation != null) {\n      ++attributesCount;\n      size +=\n          lastRuntimeInvisibleTypeAnnotation.computeAnnotationsSize(\n              Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS);\n    }\n    if (symbolTable.computeBootstrapMethodsSize() > 0) {\n      ++attributesCount;\n      size += symbolTable.computeBootstrapMethodsSize();\n    }\n    if (moduleWriter != null) {\n      attributesCount += moduleWriter.getAttributeCount();\n      size += moduleWriter.computeAttributesSize();\n    }\n    if (nestHostClassIndex != 0) {\n      ++attributesCount;\n      size += 8;\n      symbolTable.addConstantUtf8(Constants.NEST_HOST);\n    }\n    if (nestMemberClasses != null) {\n      ++attributesCount;\n      size += 8 + nestMemberClasses.length;\n      symbolTable.addConstantUtf8(Constants.NEST_MEMBERS);\n    }\n    if (permittedSubtypeClasses != null) {\n      ++attributesCount;\n      size += 8 + permittedSubtypeClasses.length;\n      symbolTable.addConstantUtf8(Constants.PERMITTED_SUBTYPES);\n    }\n    int recordComponentCount = 0;\n    int recordSize = 0;\n    if ((accessFlags & Opcodes.ACC_RECORD) != 0 || firstRecordComponent != null) {\n      RecordComponentWriter recordComponentWriter = firstRecordComponent;\n      while (recordComponentWriter != null) {\n        ++recordComponentCount;\n        recordSize += recordComponentWriter.computeRecordComponentInfoSize();\n        recordComponentWriter = (RecordComponentWriter) recordComponentWriter.delegate;\n      }\n      ++attributesCount;\n      size += 8 + recordSize;\n      symbolTable.addConstantUtf8(Constants.RECORD);\n    }\n    if (firstAttribute != null) {\n      attributesCount += firstAttribute.getAttributeCount();\n      size += firstAttribute.computeAttributesSize(symbolTable);\n    }\n    // IMPORTANT: this must be the last part of the ClassFile size computation, because the previous\n    // statements can add attribute names to the constant pool, thereby changing its size!\n    size += symbolTable.getConstantPoolLength();\n    int constantPoolCount = symbolTable.getConstantPoolCount();\n    if (constantPoolCount > 0xFFFF) {\n      throw new ClassTooLargeException(symbolTable.getClassName(), constantPoolCount);\n    }\n\n    // Second step: allocate a ByteVector of the correct size (in order to avoid any array copy in\n    // dynamic resizes) and fill it with the ClassFile content.\n    ByteVector result = new ByteVector(size);\n    result.putInt(0xCAFEBABE).putInt(version);\n    symbolTable.putConstantPool(result);\n    int mask = (version & 0xFFFF) < Opcodes.V1_5 ? Opcodes.ACC_SYNTHETIC : 0;\n    result.putShort(accessFlags & ~mask).putShort(thisClass).putShort(superClass);\n    result.putShort(interfaceCount);\n    for (int i = 0; i < interfaceCount; ++i) {\n      result.putShort(interfaces[i]);\n    }\n    result.putShort(fieldsCount);\n    fieldWriter = firstField;\n    while (fieldWriter != null) {\n      fieldWriter.putFieldInfo(result);\n      fieldWriter = (FieldWriter) fieldWriter.fv;\n    }\n    result.putShort(methodsCount);\n    boolean hasFrames = false;\n    boolean hasAsmInstructions = false;\n    methodWriter = firstMethod;\n    while (methodWriter != null) {\n      hasFrames |= methodWriter.hasFrames();\n      hasAsmInstructions |= methodWriter.hasAsmInstructions();\n      methodWriter.putMethodInfo(result);\n      methodWriter = (MethodWriter) methodWriter.mv;\n    }\n    // For ease of reference, we use here the same attribute order as in Section 4.7 of the JVMS.\n    result.putShort(attributesCount);\n    if (innerClasses != null) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.INNER_CLASSES))\n          .putInt(innerClasses.length + 2)\n          .putShort(numberOfInnerClasses)\n          .putByteArray(innerClasses.data, 0, innerClasses.length);\n    }\n    if (enclosingClassIndex != 0) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.ENCLOSING_METHOD))\n          .putInt(4)\n          .putShort(enclosingClassIndex)\n          .putShort(enclosingMethodIndex);\n    }\n    if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && (version & 0xFFFF) < Opcodes.V1_5) {\n      result.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n    }\n    if (signatureIndex != 0) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE))\n          .putInt(2)\n          .putShort(signatureIndex);\n    }\n    if (sourceFileIndex != 0) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.SOURCE_FILE))\n          .putInt(2)\n          .putShort(sourceFileIndex);\n    }\n    if (debugExtension != null) {\n      int length = debugExtension.length;\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.SOURCE_DEBUG_EXTENSION))\n          .putInt(length)\n          .putByteArray(debugExtension.data, 0, length);\n    }\n    if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n      result.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0);\n    }\n    AnnotationWriter.putAnnotations(\n        symbolTable,\n        lastRuntimeVisibleAnnotation,\n        lastRuntimeInvisibleAnnotation,\n        lastRuntimeVisibleTypeAnnotation,\n        lastRuntimeInvisibleTypeAnnotation,\n        result);\n    symbolTable.putBootstrapMethods(result);\n    if (moduleWriter != null) {\n      moduleWriter.putAttributes(result);\n    }\n    if (nestHostClassIndex != 0) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.NEST_HOST))\n          .putInt(2)\n          .putShort(nestHostClassIndex);\n    }\n    if (nestMemberClasses != null) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.NEST_MEMBERS))\n          .putInt(nestMemberClasses.length + 2)\n          .putShort(numberOfNestMemberClasses)\n          .putByteArray(nestMemberClasses.data, 0, nestMemberClasses.length);\n    }\n    if (permittedSubtypeClasses != null) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.PERMITTED_SUBTYPES))\n          .putInt(permittedSubtypeClasses.length + 2)\n          .putShort(numberOfPermittedSubtypeClasses)\n          .putByteArray(permittedSubtypeClasses.data, 0, permittedSubtypeClasses.length);\n    }\n    if ((accessFlags & Opcodes.ACC_RECORD) != 0 || firstRecordComponent != null) {\n      result\n          .putShort(symbolTable.addConstantUtf8(Constants.RECORD))\n          .putInt(recordSize + 2)\n          .putShort(recordComponentCount);\n      RecordComponentWriter recordComponentWriter = firstRecordComponent;\n      while (recordComponentWriter != null) {\n        recordComponentWriter.putRecordComponentInfo(result);\n        recordComponentWriter = (RecordComponentWriter) recordComponentWriter.delegate;\n      }\n    }\n    if (firstAttribute != null) {\n      firstAttribute.putAttributes(symbolTable, result);\n    }\n\n    // Third step: replace the ASM specific instructions, if any.\n    if (hasAsmInstructions) {\n      return replaceAsmInstructions(result.data, hasFrames);\n    } else {\n      return result.data;\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42540, "method_name": "replaceAsmInstructions", "class_name": "ClassWriter", "params": ["byte", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "  private byte[] replaceAsmInstructions(final byte[] classFile, final boolean hasFrames) {\n    final Attribute[] attributes = getAttributePrototypes();\n    firstField = null;\n    lastField = null;\n    firstMethod = null;\n    lastMethod = null;\n    lastRuntimeVisibleAnnotation = null;\n    lastRuntimeInvisibleAnnotation = null;\n    lastRuntimeVisibleTypeAnnotation = null;\n    lastRuntimeInvisibleTypeAnnotation = null;\n    moduleWriter = null;\n    nestHostClassIndex = 0;\n    numberOfNestMemberClasses = 0;\n    nestMemberClasses = null;\n    numberOfPermittedSubtypeClasses = 0;\n    permittedSubtypeClasses = null;\n    firstRecordComponent = null;\n    lastRecordComponent = null;\n    firstAttribute = null;\n    compute = hasFrames ? MethodWriter.COMPUTE_INSERTED_FRAMES : MethodWriter.COMPUTE_NOTHING;\n    new ClassReader(classFile, 0, /* checkClassVersion = */ false)\n        .accept(\n            this,\n            attributes,\n            (hasFrames ? ClassReader.EXPAND_FRAMES : 0) | ClassReader.EXPAND_ASM_INSNS);\n    return toByteArray();\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42541, "method_name": "getAttributePrototypes", "class_name": "ClassWriter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Attribute", "snippet": "  private Attribute[] getAttributePrototypes() {\n    Attribute.Set attributePrototypes = new Attribute.Set();\n    attributePrototypes.addAttributes(firstAttribute);\n    FieldWriter fieldWriter = firstField;\n    while (fieldWriter != null) {\n      fieldWriter.collectAttributePrototypes(attributePrototypes);\n      fieldWriter = (FieldWriter) fieldWriter.fv;\n    }\n    MethodWriter methodWriter = firstMethod;\n    while (methodWriter != null) {\n      methodWriter.collectAttributePrototypes(attributePrototypes);\n      methodWriter = (MethodWriter) methodWriter.mv;\n    }\n    RecordComponentWriter recordComponentWriter = firstRecordComponent;\n    while (recordComponentWriter != null) {\n      recordComponentWriter.collectAttributePrototypes(attributePrototypes);\n      recordComponentWriter = (RecordComponentWriter) recordComponentWriter.delegate;\n    }\n    return attributePrototypes.toArray();\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42542, "method_name": "newConst", "class_name": "ClassWriter", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newConst(final Object value) {\n    return symbolTable.addConstant(value).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42543, "method_name": "newUTF8", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newUTF8(final String value) {\n    return symbolTable.addConstantUtf8(value);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42544, "method_name": "newClass", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newClass(final String value) {\n    return symbolTable.addConstantClass(value).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42545, "method_name": "newMethodType", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newMethodType(final String methodDescriptor) {\n    return symbolTable.addConstantMethodType(methodDescriptor).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42546, "method_name": "newModule", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newModule(final String moduleName) {\n    return symbolTable.addConstantModule(moduleName).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42547, "method_name": "newPackage", "class_name": "ClassWriter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newPackage(final String packageName) {\n    return symbolTable.addConstantPackage(packageName).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42548, "method_name": "newHandle", "class_name": "ClassWriter", "params": ["int", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newHandle(\n      final int tag, final String owner, final String name, final String descriptor) {\n    return newHandle(tag, owner, name, descriptor, tag == Opcodes.H_INVOKEINTERFACE);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42549, "method_name": "newHandle", "class_name": "ClassWriter", "params": ["int", "String", "String", "String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newHandle(\n      final int tag,\n      final String owner,\n      final String name,\n      final String descriptor,\n      final boolean isInterface) {\n    return symbolTable.addConstantMethodHandle(tag, owner, name, descriptor, isInterface).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42550, "method_name": "newConstantDynamic", "class_name": "ClassWriter", "params": ["String", "String", "Handle", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newConstantDynamic(\n      final String name,\n      final String descriptor,\n      final Handle bootstrapMethodHandle,\n      final Object... bootstrapMethodArguments) {\n    return symbolTable.addConstantDynamic(\n            name, descriptor, bootstrapMethodHandle, bootstrapMethodArguments)\n        .index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42551, "method_name": "newInvokeDynamic", "class_name": "ClassWriter", "params": ["String", "String", "Handle", "Object"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newInvokeDynamic(\n      final String name,\n      final String descriptor,\n      final Handle bootstrapMethodHandle,\n      final Object... bootstrapMethodArguments) {\n    return symbolTable.addConstantInvokeDynamic(\n            name, descriptor, bootstrapMethodHandle, bootstrapMethodArguments)\n        .index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42552, "method_name": "newField", "class_name": "ClassWriter", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newField(final String owner, final String name, final String descriptor) {\n    return symbolTable.addConstantFieldref(owner, name, descriptor).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42553, "method_name": "newMethod", "class_name": "ClassWriter", "params": ["String", "String", "String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newMethod(\n      final String owner, final String name, final String descriptor, final boolean isInterface) {\n    return symbolTable.addConstantMethodref(owner, name, descriptor, isInterface).index;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42554, "method_name": "newNameType", "class_name": "ClassWriter", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int newNameType(final String name, final String descriptor) {\n    return symbolTable.addConstantNameAndType(name, descriptor);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42555, "method_name": "getCommonSuperClass", "class_name": "ClassWriter", "params": ["String", "String"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String getCommonSuperClass(final String type1, final String type2) {\n    ClassLoader classLoader = getClassLoader();\n    Class<?> class1;\n    try {\n      class1 = Class.forName(type1.replace('/', '.'), false, classLoader);\n    } catch (ClassNotFoundException e) {\n      throw new TypeNotPresentException(type1, e);\n    }\n    Class<?> class2;\n    try {\n      class2 = Class.forName(type2.replace('/', '.'), false, classLoader);\n    } catch (ClassNotFoundException e) {\n      throw new TypeNotPresentException(type2, e);\n    }\n    if (class1.isAssignableFrom(class2)) {\n      return type1;\n    }\n    if (class2.isAssignableFrom(class1)) {\n      return type2;\n    }\n    if (class1.isInterface() || class2.isInterface()) {\n      return \"java/lang/Object\";\n    } else {\n      do {\n        class1 = class1.getSuperclass();\n      } while (!class1.isAssignableFrom(class2));\n      return class1.getName().replace('.', '/');\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42556, "method_name": "getClassLoader", "class_name": "ClassWriter", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "ClassLoader", "snippet": "  protected ClassLoader getClassLoader() {\n    return getClass().getClassLoader();\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/ClassWriter.java", "stars": "97", "class_props": {"extends": "ClassVisitor", "implements": null, "modifiers": ["public"]}}, {"id": 42557, "method_name": "onActivityResult", "class_name": "VoiceRecognizerModule", "params": ["Activity", "int", "int", "Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResult(Activity activity, final int requestCode, final int resultCode, final Intent data) {\n        if (requestCode == REQUEST_VOICE_RECOGNIZER_CODE) {\n            if (resultCode == Activity.RESULT_OK && null != data) {\n                ArrayList<String> result = data.getStringArrayListExtra(RecognizerIntent.EXTRA_RESULTS);\n                mPickerPromise.resolve(result.get(0).toString());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/farshidshahmoradi1996/react-native-voice-recognizer/master/android/src/main/java/com/reactlibrary/VoiceRecognizerModule.java", "stars": "11", "class_props": {"extends": "ReactContextBaseJavaModule", "implements": ["ActivityEventListener"], "modifiers": ["public"]}}, {"id": 42558, "method_name": "getName", "class_name": "VoiceRecognizerModule", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return \"VoiceRecognizer\";\n    }", "url": "https://raw.githubusercontent.com/farshidshahmoradi1996/react-native-voice-recognizer/master/android/src/main/java/com/reactlibrary/VoiceRecognizerModule.java", "stars": "11", "class_props": {"extends": "ReactContextBaseJavaModule", "implements": ["ActivityEventListener"], "modifiers": ["public"]}}, {"id": 42559, "method_name": "onNewIntent", "class_name": "VoiceRecognizerModule", "params": ["Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onNewIntent(Intent intent) {\n\n    }", "url": "https://raw.githubusercontent.com/farshidshahmoradi1996/react-native-voice-recognizer/master/android/src/main/java/com/reactlibrary/VoiceRecognizerModule.java", "stars": "11", "class_props": {"extends": "ReactContextBaseJavaModule", "implements": ["ActivityEventListener"], "modifiers": ["public"]}}, {"id": 42560, "method_name": "requestVoice", "class_name": "VoiceRecognizerModule", "params": ["String", "String", "Promise"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void requestVoice(final String language, final String prompt, final Promise promise) {\n        mPickerPromise = promise;\n        try {\n            Activity currentActivity = getCurrentActivity();\n            Intent intent = new Intent(RecognizerIntent.ACTION_RECOGNIZE_SPEECH);\n            intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_MODEL, language);\n            intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE, language);\n            intent.putExtra(RecognizerIntent.EXTRA_LANGUAGE_PREFERENCE, language);\n            intent.putExtra(RecognizerIntent.EXTRA_ONLY_RETURN_LANGUAGE_PREFERENCE, language);\n            intent.putExtra(RecognizerIntent.EXTRA_PROMPT, prompt);\n            currentActivity.startActivityForResult(intent, REQUEST_VOICE_RECOGNIZER_CODE);\n\n        } catch (Exception e) {\n            mPickerPromise.reject(\"ERROR\", e);\n            mPickerPromise = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/farshidshahmoradi1996/react-native-voice-recognizer/master/android/src/main/java/com/reactlibrary/VoiceRecognizerModule.java", "stars": "11", "class_props": {"extends": "ReactContextBaseJavaModule", "implements": ["ActivityEventListener"], "modifiers": ["public"]}}, {"id": 42561, "method_name": "main", "class_name": "Palindrome_1", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tString str = \"malayalam\";\n\t\t\n\t\tStringBuffer stb = new StringBuffer(str);\n\t\tStringBuffer reverse = stb.reverse();\n\t\t\n\t\tString rev = reverse.toString();\n\t\tSystem.out.println(rev);\n\t\t\n\t\tif(rev.equals(str)) {\n\t\t\tSystem.out.println(\"Yes, Palindrome\");\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(\"No, Not a Palindrome\");\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/AvinashDurai/MyCodes/master/javapractice/Palindrome_1.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42562, "method_name": "measureWidth", "class_name": "SquareDelegate", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int measureWidth(int widthMeasureSpec, int heightMeasureSpec) {\n\n        int widthSpecMode = View.MeasureSpec.getMode(widthMeasureSpec);\n        int widthSpecSize = View.MeasureSpec.getSize(widthMeasureSpec);\n\n        int heightSpecMode = View.MeasureSpec.getMode(heightMeasureSpec);\n        int heightSpecSize = View.MeasureSpec.getSize(heightMeasureSpec);\n\n        // \u5982\u679c\u5f53\u524d\u5bbd\u5ea6\u4e0d\u662f\u5199\u6b7b\u7684\n        if (widthSpecMode != View.MeasureSpec.EXACTLY) {\n            // \u5982\u679c\u5f53\u524d\u9ad8\u5ea6\u4e0d\u662f\u5199\u6b7b\u7684\n            if (heightSpecMode != View.MeasureSpec.EXACTLY) {\n                // \u5bf9\u6bd4\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u8fd4\u56de\u6700\u5927\u503c\u7684\u90a3\u4e2a\n                return View.MeasureSpec.makeMeasureSpec(Math.max(widthSpecSize, heightSpecSize), View.MeasureSpec.EXACTLY);\n            } else {\n                // \u5982\u679c\u5df2\u7ecf\u5b9a\u6b7b\u4e86\u9ad8\u5ea6\uff0c\u800c\u5bbd\u5ea6\u6ca1\u6709\u5199\u6b7b\uff0c\u5219\u4f7f\u7528\u9ad8\u5ea6\u4ee3\u66ff\u5bbd\u5ea6\n                return heightMeasureSpec;\n            }\n        } else {\n            // \u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5df2\u7ecf\u5199\u6b7b\uff0c\u8fd9\u91cc\u4e0d\u505a\u4efb\u4f55\u5904\u7406\n            return widthMeasureSpec;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/square/SquareDelegate.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 42563, "method_name": "measureHeight", "class_name": "SquareDelegate", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int measureHeight(int widthMeasureSpec, int heightMeasureSpec) {\n\n        int widthSpecMode = View.MeasureSpec.getMode(widthMeasureSpec);\n        int widthSpecSize = View.MeasureSpec.getSize(widthMeasureSpec);\n\n        int heightSpecMode = View.MeasureSpec.getMode(heightMeasureSpec);\n        int heightSpecSize = View.MeasureSpec.getSize(heightMeasureSpec);\n\n        // \u5982\u679c\u5f53\u524d\u9ad8\u5ea6\u4e0d\u662f\u5199\u6b7b\u7684\n        if (heightSpecMode != View.MeasureSpec.EXACTLY) {\n            // \u5982\u679c\u5f53\u524d\u5bbd\u5ea6\u4e0d\u662f\u5199\u6b7b\u7684\n            if (widthSpecMode != View.MeasureSpec.EXACTLY) {\n                // \u5bf9\u6bd4\u9ad8\u5ea6\u548c\u5bbd\u5ea6\uff0c\u8fd4\u56de\u6700\u5927\u503c\u7684\u90a3\u4e2a\n                return View.MeasureSpec.makeMeasureSpec(Math.max(widthSpecSize, heightSpecSize), View.MeasureSpec.EXACTLY);\n            } else {\n                // \u5982\u679c\u5df2\u7ecf\u5b9a\u6b7b\u4e86\u5bbd\u5ea6\uff0c\u800c\u9ad8\u5ea6\u6ca1\u6709\u5199\u6b7b\uff0c\u5219\u4f7f\u7528\u9ad8\u5ea6\u4ee3\u66ff\u5bbd\u5ea6\n                return widthMeasureSpec;\n            }\n        } else {\n            // \u5bbd\u5ea6\u548c\u9ad8\u5ea6\u5df2\u7ecf\u5199\u6b7b\uff0c\u8fd9\u91cc\u4e0d\u505a\u4efb\u4f55\u5904\u7406\n            return heightMeasureSpec;\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/square/SquareDelegate.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 42564, "method_name": "getUser", "class_name": "UserSessionClosedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "User", "snippet": "\tpublic User getUser() {\n\t\treturn user;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/authentication/UserSessionClosedEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 42565, "method_name": "getHttpSessionEvent", "class_name": "UserSessionClosedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpSessionEvent", "snippet": "\tpublic HttpSessionEvent getHttpSessionEvent() {\n\t\treturn httpSessionEvent;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/authentication/UserSessionClosedEvent.java", "stars": "12", "class_props": {"extends": null, "implements": ["Event"], "modifiers": ["public"]}}, {"id": 42566, "method_name": "onDraw", "class_name": "Practice09SetTextScaleXView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        paint.setTextScaleX(1);\n        canvas.drawText(text, 100, 150, paint);\n        paint.setTextScaleX(0.8f);\n        canvas.drawText(text, 100, 230, paint);\n        paint.setTextScaleX(1.2f);\n        canvas.drawText(text, 100, 310, paint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson3/Practice09SetTextScaleXView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 42567, "method_name": "langShade", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color langShade()               { return langShade[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42568, "method_name": "titleColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color titleColor()              { return titleColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42569, "method_name": "titleShade", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color titleShade()              { return titleShade[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42570, "method_name": "setupShade", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color setupShade()              { return setupShade[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42571, "method_name": "setupFrame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color setupFrame()              { return setupFrame[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42572, "method_name": "labelColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color labelColor()              { return labelColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42573, "method_name": "paneBackgroundColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color paneBackgroundColor()     { return paneBackgroundColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42574, "method_name": "buttonTextColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color buttonTextColor()         { return buttonTextColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42575, "method_name": "disabledTextColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color disabledTextColor()       { return disabledTextColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42576, "method_name": "textColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color textColor()               { return textColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42577, "method_name": "textHoverColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color textHoverColor()          { return textHoverColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42578, "method_name": "textSelectedColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color textSelectedColor()       { return textSelectedColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42579, "method_name": "textShade", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color textShade()               { return textShade[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42580, "method_name": "saveGameBackgroundColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color saveGameBackgroundColor() { return saveGameBackgroundColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42581, "method_name": "raceEdgeColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color raceEdgeColor()           { return raceEdgeColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42582, "method_name": "raceCenterColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color raceCenterColor()         { return raceCenterColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42583, "method_name": "buttonBackgroundColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color buttonBackgroundColor()   { return buttonBackgroundColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42584, "method_name": "borderBrightColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color borderBrightColor()       { return borderBrightColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42585, "method_name": "borderMidColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color borderMidColor()          { return borderMidColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42586, "method_name": "borderDarkColor", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color borderDarkColor()         { return borderDarkColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42587, "method_name": "loadHoverBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color loadHoverBackground()     { return loadHoverBackgroundColor[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42588, "method_name": "loadListMask", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Color", "snippet": "    public static Color loadListMask()            { return loadListMask[opt()]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42589, "method_name": "loadBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LinearGradientPaint", "snippet": "    public static LinearGradientPaint loadBackground() {\n        if (loadBackground == null) {\n            loadBackground = new LinearGradientPaint[2];\n            Point2D start = new Point2D.Float(RotPUI.scaledSize(350), 0);\n            Point2D end = new Point2D.Float(RotPUI.scaledSize(879), 0);\n            float[] dist = {0.0f, 0.4f, 0.6f, 1.0f};\n            Color edge0 = new Color(113,74,49);\n            Color mid0 = new Color(188,123,81);\n            Color[] colors0 = {edge0, mid0,  mid0, edge0 };\n            loadBackground[0] = new LinearGradientPaint(start, end, dist, colors0);\n            Color edge1 = new Color(41,44,43);\n            Color mid1 = new Color(88,97,96);\n            Color[] colors1 = {edge1, mid1, mid1, edge1 };\n            loadBackground[1] = new LinearGradientPaint(start, end, dist, colors1);\n        }\n        return loadBackground[opt()];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42590, "method_name": "buttonLeftBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LinearGradientPaint", "snippet": "    public static LinearGradientPaint buttonLeftBackground() {\n        if (buttonLeftBackground == null) {\n            buttonLeftBackground = new LinearGradientPaint[2];\n            Point2D start = new Point2D.Float(RotPUI.scaledSize(710), 0);\n            Point2D end = new Point2D.Float(RotPUI.scaledSize(930), 0);\n            float[] dist = {0.0f, 0.5f, 0.51f, 1.0f};\n            Color edge0 = new Color(113,74,49);\n            Color mid0 = new Color(188,123,81);\n            Color[] colors0 = {edge0, mid0,  mid0, edge0 };\n            buttonLeftBackground[0] = new LinearGradientPaint(start, end, dist, colors0);\n            Color edge1 = new Color(41,44,43);\n            Color mid1 = new Color(88,97,96);\n            Color[] colors1 = {edge1, mid1, mid1, edge1 };\n            buttonLeftBackground[1] = new LinearGradientPaint(start, end, dist, colors1);\n        }\n        return buttonLeftBackground[opt()];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42591, "method_name": "buttonRightBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LinearGradientPaint", "snippet": "    public static LinearGradientPaint buttonRightBackground() {\n        if (buttonRightBackground == null) {\n            buttonRightBackground = new LinearGradientPaint[2];\n            Point2D start = new Point2D.Float(RotPUI.scaledSize(950), 0);\n            Point2D end = new Point2D.Float(RotPUI.scaledSize(1170), 0);\n            float[] dist = {0.0f, 0.3f, 0.7f, 1.0f};\n            Color edge0 = new Color(113,74,49);\n            Color mid0 = new Color(188,123,81);\n            Color[] colors0 = {edge0, mid0,  mid0, edge0 };\n            buttonRightBackground[0] = new LinearGradientPaint(start, end, dist, colors0);\n            Color edge1 = new Color(41,44,43);\n            Color mid1 = new Color(88,97,96);\n            Color[] colors1 = {edge1, mid1, mid1, edge1 };\n            buttonRightBackground[1] = new LinearGradientPaint(start, end, dist, colors1);\n        }\n        return buttonRightBackground[opt()];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42592, "method_name": "raceLeftBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LinearGradientPaint", "snippet": "    public static LinearGradientPaint raceLeftBackground() {\n        if (raceLeftBackground == null) {\n            raceLeftBackground = new LinearGradientPaint[2];\n            Point2D start = new Point2D.Float(RotPUI.scaledSize(220), 0);\n            Point2D end = new Point2D.Float(RotPUI.scaledSize(420), 0);\n            float[] dist = {0.0f, 0.4f, 0.6f, 1.0f};\n            Color edge0 = new Color(113,74,49);\n            Color mid0 = new Color(188,123,81);\n            Color[] colors0 = {edge0, mid0,  mid0, edge0 };\n            raceLeftBackground[0] = new LinearGradientPaint(start, end, dist, colors0);\n            Color edge1 = new Color(51,56,55);\n            Color mid1 = new Color(100,111,110);\n            Color[] colors1 = {edge1, mid1, mid1, edge1 };\n            raceLeftBackground[1] = new LinearGradientPaint(start, end, dist, colors1);\n        }\n        return raceLeftBackground[opt()];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42593, "method_name": "raceRightBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LinearGradientPaint", "snippet": "    public static LinearGradientPaint raceRightBackground() {\n        if (raceRightBackground == null) {\n            raceRightBackground = new LinearGradientPaint[2];\n            Point2D start = new Point2D.Float(RotPUI.scaledSize(815), 0);\n            Point2D end = new Point2D.Float(RotPUI.scaledSize(1015), 0);\n            float[] dist = {0.0f, 0.3f, 0.7f, 1.0f};\n            Color edge0 = new Color(113,74,49);\n            Color mid0 = new Color(188,123,81);\n            Color[] colors0 = {edge0, mid0,  mid0, edge0 };\n            raceRightBackground[0] = new LinearGradientPaint(start, end, dist, colors0);\n            Color edge1 = new Color(51,56,55);\n            Color mid1 = new Color(100,111,110);\n            Color[] colors1 = {edge1, mid1, mid1, edge1 };\n            raceRightBackground[1] = new LinearGradientPaint(start, end, dist, colors1);\n        }\n        return raceRightBackground[opt()];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42594, "method_name": "galaxySetupBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LinearGradientPaint", "snippet": "    public static LinearGradientPaint galaxySetupBackground() {\n        if (galaxySetupBackground == null) {\n            galaxySetupBackground = new LinearGradientPaint[2];\n            Point2D start = new Point2D.Float(RotPUI.scaledSize(685), 0);\n            Point2D end = new Point2D.Float(RotPUI.scaledSize(1150), 0);\n            float[] dist = {0.0f, 0.3f, 0.7f, 1.0f};\n            Color edge0 = new Color(113,74,49);\n            Color mid0 = new Color(188,123,81);\n            Color[] colors0 = {edge0, mid0,  mid0, edge0 };\n            galaxySetupBackground[0] = new LinearGradientPaint(start, end, dist, colors0);\n            Color edge1 = new Color(51,56,55);\n            Color mid1 = new Color(100,111,110);\n            Color[] colors1 = {edge1, mid1, mid1, edge1 };\n            galaxySetupBackground[1] = new LinearGradientPaint(start, end, dist, colors1);\n        }\n        return galaxySetupBackground[opt()];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42595, "method_name": "opponentsSetupBackground", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LinearGradientPaint", "snippet": "    public static LinearGradientPaint opponentsSetupBackground() {\n        if (opponentsSetupBackground == null) {\n            opponentsSetupBackground = new LinearGradientPaint[2];\n            Point2D start = new Point2D.Float(RotPUI.scaledSize(80), 0);\n            Point2D end = new Point2D.Float(RotPUI.scaledSize(585), 0);\n            float[] dist = {0.0f, 0.3f, 0.7f, 1.0f};\n            Color edge0 = new Color(113,74,49);\n            Color mid0 = new Color(188,123,81);\n            Color[] colors0 = {edge0, mid0,  mid0, edge0 };\n            opponentsSetupBackground[0] = new LinearGradientPaint(start, end, dist, colors0);\n            Color edge1 = new Color(51,56,55);\n            Color mid1 = new Color(100,111,110);\n            Color[] colors1 = {edge1, mid1, mid1, edge1 };\n            opponentsSetupBackground[1] = new LinearGradientPaint(start, end, dist, colors1);\n        }\n        return opponentsSetupBackground[opt()];\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42596, "method_name": "setupBorder", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Border", "snippet": "    public static Border setupBorder() {\n        if (setupBorder == null)\n            setupBorder = new ThickBevelBorder(12, 1, borderBrightColor(), borderMidColor(), borderDarkColor());\n        return setupBorder;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42597, "method_name": "saveGameBorder", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Border", "snippet": "    public static Border saveGameBorder() {\n        if (saveGameBorder == null)\n            saveGameBorder = new ThickBevelBorder(6, 1, borderBrightColor(), borderMidColor(), borderDarkColor());\n        return saveGameBorder;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42598, "method_name": "saveListBorder", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Border", "snippet": "    public static Border saveListBorder() {\n        if (saveListBorder == null)\n            saveListBorder = new ThickBevelBorder(12, 1, borderBrightColor(), borderMidColor(), borderDarkColor());\n        return saveListBorder;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42599, "method_name": "buttonBorder", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Border", "snippet": "    public static Border buttonBorder() {\n        if (buttonBorder == null)\n            buttonBorder = new ThickBevelBorder(6, 1, borderBrightColor(), borderMidColor(), borderDarkColor());\n        return buttonBorder;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42600, "method_name": "background", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Image", "snippet": "    public static Image background() { return ImageManager.current().image(backImg[opt()]); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42601, "method_name": "opt", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int opt()     {\n        if (opt < 0)\n            opt = (int)(backImg.length*Math.random());\n        return opt;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42602, "method_name": "initModel", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initModel() {\n        setOpaque(false);\n        addMouseListener(this);\n        addMouseWheelListener(this);\n        addMouseMotionListener(this);\n        languagePanel.setVisible(false);\n        add(languagePanel);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42603, "method_name": "setTextValues", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setTextValues() {\n        discussText.displayText(text(\"GAME_DISCUSS_ONLINE\"));\n        continueText.displayText(text(\"GAME_MENU_CONTINUE\"));\n        newGameText.displayText(text(\"GAME_MENU_NEW_GAME\"));\n        loadGameText.displayText(text(\"GAME_MENU_LOAD_GAME\"));\n        saveGameText.displayText(text(\"GAME_MENU_SAVE_GAME\"));\n        exitText.displayText(text(\"GAME_MENU_EXIT\"));\n        restartText.displayText(text(\"GAME_MENU_RESTART\"));\n\n        soundsText.displayText(soundsStr());\n        soundsText.hoverText(soundsHoverStr());\n        musicText.displayText(musicStr());\n        texturesText.displayText(texturesStr());\n        graphicsText.displayText(graphicsLevelStr());\n        graphicsText.hoverText(graphicsLevelHoverStr());\n        shrinkText.displayText(text(\"GAME_SHRINK\"));\n        enlargeText.displayText(text(\"GAME_ENLARGE\"));\n        memoryText.displayText(memoryStr());\n        developerText.displayText(text(\"CREDITS_DEVELOPER\"));\n        artistText.displayText(text(\"CREDITS_ILLUSTRATOR\"));\n        graphicDsnrText.displayText(text(\"CREDITS_GRAPHIC_DESIGN\"));\n        writerText.displayText(text(\"CREDITS_WRITER\"));\n        soundText.displayText(text(\"CREDITS_SOUND\"));\n        translatorText.displayText(text(\"CREDITS_TRANSLATOR\"));\n        versionText.displayText(text(\"GAME_VERSION\", str(Rotp.releaseId)));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42604, "method_name": "drawMemory", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean drawMemory()       { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42605, "method_name": "ambienceSoundKey", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String ambienceSoundKey() { return canContinue() ? super.ambienceSoundKey() : AMBIENCE_KEY; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42606, "method_name": "paintComponent", "class_name": "GameUI", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics g0) {\n        super.paintComponent(g0);\n        Graphics2D g = (Graphics2D) g0;\n        int w = getWidth();\n\n        Image back = background();\n        int imgW = back.getWidth(null);\n        int imgH = back.getHeight(null);\n        g.drawImage(back, 0, 0, getWidth(), getHeight(), 0, 0, imgW, imgH, this);\n\n        String titleStr1 = text(\"GAME_TITLE_LINE_1\");\n        String titleStr2 = text(\"GAME_TITLE_LINE_2\");\n        String titleStr3 = text(\"GAME_TITLE_LINE_3\");\n\n        int bigFont = scaledLogoFont(g, titleStr1+titleStr3, w*3/4, 80, 65);\n        int smallFont = scaledLogoFont(g, titleStr2, w*3/20, 60, 40);\n        g.setFont(logoFont(bigFont));\n        int sw1a = g.getFontMetrics().stringWidth(titleStr1);\n        g.setFont(logoFont(smallFont));\n        int sw1b = g.getFontMetrics().stringWidth(titleStr2);\n        g.setFont(logoFont(bigFont));\n        int sw1c = g.getFontMetrics().stringWidth(titleStr3);\n        int sw1Title = sw1a+sw1b+sw1c+s40;\n        int x1Left = (w-sw1Title)/2;\n        if (hideText) {\n            g.setFont(logoFont(bigFont));\n            drawShadowedString(g, titleStr1, 2, 0, 10, (w-sw1a)/2, scaled(250), logoShade[opt()], logoFore[opt()]);\n            g.setFont(logoFont(smallFont));\n            drawShadowedString(g, titleStr2, 1, 0, 5, (w-sw1b)/2, scaled(330), logoShade[opt()], logoFore[opt()]);\n            g.setFont(logoFont(bigFont));\n            drawShadowedString(g, titleStr3, 2, 0, 10, (w-sw1c)/2, scaled(430), logoShade[opt()], logoFore[opt()]);\n        }\n        else {\n            g.setFont(logoFont(bigFont));\n            drawShadowedString(g, titleStr1, 2, 0, 10, x1Left, scaled(200), logoShade[opt()], logoFore[opt()]);\n            g.setFont(logoFont(smallFont));\n            drawShadowedString(g, titleStr2, 1, 0, 5, x1Left+sw1a+s20, scaled(200), logoShade[opt()], logoFore[opt()]);\n            g.setFont(logoFont(bigFont));\n            drawShadowedString(g, titleStr3, 2, 0, 10, x1Left+sw1a+sw1b+s40, scaled(200), logoShade[opt()], logoFore[opt()]);\n        }\n\n        if (hideText)\n            return;\n\n        int lw = languagePanel.w;\n        int lh = languagePanel.h;\n        languagePanel.setBounds(w-lw-s15,s15,lw,lh);\n\n        Image img = image(\"LANGUAGE_ICON\");\n        g.drawImage(img, w-s55, s15, s40, s40, this);\n        languageBox.setBounds(w-s55, s15, s40, s40);\n\n        String langText = LanguageManager.current().selectedLanguageName();\n        g.setFont(narrowFont(24));\n        int langSW = g.getFontMetrics().stringWidth(langText);\n        int langX = w-s55-langSW-s10;\n        g.setColor(logoFore[opt()]);\n        drawShadowedString(g, langText, 2, langX, s40, logoShade[opt()], logoFore[opt()]);\n\n        discussText.disabled(false);\n        if (LanguageManager.current().currentLangDir().equals(\"en\"))\n            discussText.drawCentered(g);\n\n        if (canRestart()) {\n            continueText.reset();\n            newGameText.reset();\n            loadGameText.reset();\n            saveGameText.reset();\n            exitText.reset();\n            restartText.disabled(false);\n            restartText.drawCentered(g);\n        }\n        else {\n            restartText.reset();\n            continueText.disabled(!canContinue());\n            continueText.drawCentered(g);\n            newGameText.disabled(!canNewGame());\n            newGameText.drawCentered(g);\n            loadGameText.disabled(!canLoadGame());\n            loadGameText.drawCentered(g);\n            saveGameText.disabled(!canSaveGame());\n            saveGameText.drawCentered(g);\n            exitText.disabled(!canExit());\n            exitText.drawCentered(g);\n        }\n        \n        // draw version at bottom right, then go up for other vals\n        developerText.draw(g);\n        artistText.draw(g);\n        graphicDsnrText.draw(g);\n        writerText.draw(g);\n        soundText.draw(g);\n        translatorText.draw(g);\n        versionText.drawCentered(g);\n        memoryText.draw(g);\n        texturesText.draw(g);\n        shrinkText.draw(g);\n        enlargeText.draw(g);\n        graphicsText.draw(g);\n        musicText.draw(g);\n        soundsText.draw(g);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42607, "method_name": "canContinue", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canContinue()    { return session().status().inProgress() || session().hasRecentSession(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42608, "method_name": "canNewGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canNewGame()     { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42609, "method_name": "canLoadGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canLoadGame()    { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42610, "method_name": "canSaveGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canSaveGame()    { return session().status().inProgress(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42611, "method_name": "canExit", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canExit()        { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42612, "method_name": "canRestart", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean canRestart()     { return UserPreferences.screenSizePct() != startingScale; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42613, "method_name": "rescaleMenuOptions", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void rescaleMenuOptions() {\n        restartText.rescale();\n        continueText.rescale();\n        newGameText.rescale();\n        loadGameText.rescale();\n        saveGameText.rescale();\n        exitText.rescale();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42614, "method_name": "keyReleased", "class_name": "GameUI", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyReleased(KeyEvent e) {\n        int k = e.getKeyCode();\n        switch (k) {\n            case KeyEvent.VK_Z:  hideText = false; repaint(); return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42615, "method_name": "keyPressed", "class_name": "GameUI", "params": ["KeyEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void keyPressed(KeyEvent e) {\n        int k = e.getKeyCode();\n        switch (k) {\n            case KeyEvent.VK_MINUS:\n                if ((e.getModifiers() & KeyEvent.CTRL_MASK) != 0)\n                    shrinkFrame(); \n                return;\n            case KeyEvent.VK_EQUALS: \n                if ((e.getModifiers() & KeyEvent.CTRL_MASK) != 0)\n                    expandFrame(); \n                return;\n            case KeyEvent.VK_Z:  hideText = true; repaint(); return;\n            case KeyEvent.VK_C:  continueGame(); return;\n            case KeyEvent.VK_N:  newGame();      return;\n            case KeyEvent.VK_L:  loadGame();     return;\n            case KeyEvent.VK_S:  saveGame();     return;\n            case KeyEvent.VK_E:  exitGame();     return;\n            case KeyEvent.VK_ESCAPE:\n                if (canContinue())\n                    continueGame();\n                else\n                    exitGame();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42616, "method_name": "shrinkFrame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void shrinkFrame() {\n       if (UserPreferences.shrinkFrame()) {\n            Rotp.setFrameSize();\n            rescaleMenuOptions();\n            UserPreferences.save();\n            repaint();\n       }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42617, "method_name": "expandFrame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void expandFrame() {\n       if (UserPreferences.expandFrame()) {\n            Rotp.setFrameSize();\n            rescaleMenuOptions();\n            UserPreferences.save();\n            repaint();\n       }    \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42618, "method_name": "openRedditPage", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void openRedditPage() {\n        try {\n            buttonClick();\n            Desktop.getDesktop().browse(new URL(\"http://www.reddit.com/r/rotp\").toURI());\n        } catch (IOException | URISyntaxException e) {}\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42619, "method_name": "continueGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void continueGame() {\n        if (canContinue()) {\n            buttonClick();\n            if (!session().status().inProgress())\n                session().loadRecentSession(true);\n            RotPUI.instance().selectMainPanel();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42620, "method_name": "newGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void newGame() {\n        if (canNewGame()) {\n            buttonClick();\n            RotPUI.instance().selectSetupRacePanel();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42621, "method_name": "loadGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadGame() {\n        if (canLoadGame()) {\n            buttonClick();\n            RotPUI.instance().selectLoadGamePanel();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42622, "method_name": "saveGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveGame() {\n        if (canSaveGame()) {\n            buttonClick();\n            RotPUI.instance().selectSaveGamePanel();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42623, "method_name": "exitGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void exitGame() {\n        if (canExit()) {\n            buttonClick();\n            GameSession.instance().exit();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42624, "method_name": "restartGame", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void restartGame() {\n        Rotp.restart();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42625, "method_name": "texturesStr", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String texturesStr() {\n        if (UserPreferences.textures())\n            return text(\"GAME_TEXTURES_ON\")+\"     \";\n        else\n            return text(\"GAME_TEXTURES_OFF\")+\"     \";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42626, "method_name": "graphicsLevelStr", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String graphicsLevelStr() {\n        UserPreferences.GraphicsSetting graphics = UserPreferences.graphicsLevel();\n        switch(graphics) {\n            case NORMAL: return text(\"GAME_GRAPHICS_NORMAL\")+\"     \";\n            case MEDIUM: return text(\"GAME_GRAPHICS_MEDIUM\")+\"     \";\n            case LOW:    return text(\"GAME_GRAPHICS_LOW\")+\"     \";\n        }\n        return text(\"GAME_GRAPHICS_NORMAL\")+\"     \";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42627, "method_name": "graphicsLevelHoverStr", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String graphicsLevelHoverStr() {\n        UserPreferences.GraphicsSetting graphics = UserPreferences.graphicsLevel();\n        switch(graphics) {\n            case NORMAL: return text(\"GAME_GRAPHICS_NORMAL\")+\"     \";\n            case MEDIUM: return text(\"GAME_GRAPHICS_MEDIUM_HOVER\")+\"     \";\n            case LOW:    return text(\"GAME_GRAPHICS_LOW_HOVER\")+\"     \";\n        }\n        return graphicsLevelStr();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42628, "method_name": "soundsStr", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String soundsStr() {\n        if (SoundManager.current().disabled())\n            return text(\"GAME_SOUNDS_DISABLED\", \"\");\n        else if (SoundManager.current().playSounds())\n            return text(\"GAME_SOUNDS_ON\", str(SoundManager.soundLevel()));\n        else\n            return text(\"GAME_SOUNDS_OFF\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42629, "method_name": "soundsHoverStr", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String soundsHoverStr() {\n        if (SoundManager.current().disabled())\n            return text(\"GAME_SOUNDS_DISABLED\", SoundManager.errorString);\n        else \n            return soundsStr();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42630, "method_name": "musicStr", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String musicStr() {\n        return SoundManager.current().playMusic() ? text(\"GAME_MUSIC_ON\",str(SoundManager.musicLevel())) : text(\"GAME_MUSIC_OFF\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42631, "method_name": "memoryStr", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String memoryStr() {\n        return UserPreferences.showMemory() ? text(\"GAME_MEMORY_SHOW\") : text(\"GAME_MEMORY_HIDE\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42632, "method_name": "selectLanguage", "class_name": "GameUI", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void selectLanguage(int i) {\n        softClick();\n        LanguageManager.current().selectLanguage(i);\n        UserPreferences.save();\n        setTextValues();\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42633, "method_name": "toggleMemory", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void toggleMemory() {\n        softClick();\n        UserPreferences.toggleMemory();\n        memoryText.repaint(memoryStr());\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42634, "method_name": "scrollSounds", "class_name": "GameUI", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void scrollSounds(boolean up) {\n        if (up)\n            SoundManager.current().increaseSoundLevel();\n        else\n            SoundManager.current().decreaseSoundLevel();\n        soundsText.repaint(soundsStr(), soundsHoverStr());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42635, "method_name": "toggleSounds", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void toggleSounds() {\n        softClick();\n        SoundManager.current().toggleSounds();\n        soundsText.repaint(soundsStr(), soundsHoverStr());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42636, "method_name": "scrollMusic", "class_name": "GameUI", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void scrollMusic(boolean up) {\n        if (up)\n            SoundManager.current().increaseMusicLevel();\n        else\n            SoundManager.current().decreaseMusicLevel();\n        musicText.repaint(musicStr());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42637, "method_name": "toggleMusic", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void toggleMusic() {\n        softClick();\n        SoundManager.current().toggleMusic();\n        musicText.repaint(musicStr());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42638, "method_name": "toggleTextures", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void toggleTextures() {\n        softClick();\n        UserPreferences.toggleTextures();\n        texturesText.repaint(texturesStr());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42639, "method_name": "toggleGraphicsLevel", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void toggleGraphicsLevel() {\n        if (AnimationManager.current().animationsDisabled())\n            misClick();\n        else {\n            softClick();\n            UserPreferences.toggleGraphicsLevel();\n            graphicsText.repaint(graphicsLevelStr(), graphicsLevelHoverStr());\n            repaint();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42640, "method_name": "playAmbience", "class_name": "GameUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playAmbience() {\n        // in case playing ambience causes a sound error\n        super.playAmbience();\n        setTextValues();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42641, "method_name": "mouseClicked", "class_name": "GameUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42642, "method_name": "mouseEntered", "class_name": "GameUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseEntered(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42643, "method_name": "mouseExited", "class_name": "GameUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseExited(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42644, "method_name": "mousePressed", "class_name": "GameUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mousePressed(MouseEvent e) {\n        mouseDepressed = true;\n        if (hoverBox != null)\n            hoverBox.mousePressed();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42645, "method_name": "mouseReleased", "class_name": "GameUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased(MouseEvent e) {\n        if (e.getButton() > 3)\n            return;\n        int x = e.getX();\n        int y = e.getY();\n        if (hoverBox != null)\n            hoverBox.mouseReleased();\n        mouseDepressed = false;\n\n        if (discussText.contains(x,y))\n            openRedditPage();\n        else if (continueText.contains(x,y))\n            continueGame();\n        else if (newGameText.contains(x,y))\n            newGame();\n        else if (loadGameText.contains(x,y))\n            loadGame();\n        else if (saveGameText.contains(x,y))\n            saveGame();\n        else if (exitText.contains(x,y))\n            exitGame();\n        else if (restartText.contains(x,y))\n            restartGame();\n        else if (soundsText.contains(x,y))\n            toggleSounds();\n        else if (musicText.contains(x,y))\n            toggleMusic();\n        else if (texturesText.contains(x,y))\n            toggleTextures();\n        else if (graphicsText.contains(x,y))\n            toggleGraphicsLevel();\n        else if (shrinkText.contains(x,y))\n            shrinkFrame();\n        else if (enlargeText.contains(x,y))\n            expandFrame();\n        else if (memoryText.contains(x,y))\n            toggleMemory();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42646, "method_name": "mouseDragged", "class_name": "GameUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseDragged(MouseEvent e) {\n        mouseMoved(e);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42647, "method_name": "mouseMoved", "class_name": "GameUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseMoved(MouseEvent e) {\n        int x = e.getX();\n        int y = e.getY();\n\n        if (hideText)\n            return;\n\n        BaseText newHover = null;\n        if (languageBox.contains(x,y))\n            languagePanel.setVisible(true);\n        else if (discussText.contains(x,y))\n            newHover = discussText;\n        else if (canContinue() && continueText.contains(x,y))\n            newHover = continueText;\n        else if (canNewGame() && newGameText.contains(x,y))\n            newHover = newGameText;\n        else if (canLoadGame() && loadGameText.contains(x,y))\n            newHover = loadGameText;\n        else if (canSaveGame() && saveGameText.contains(x,y))\n            newHover = saveGameText;\n        else if (canExit() && exitText.contains(x,y))\n            newHover = exitText;\n        else if (canRestart() && restartText.contains(x,y))\n            newHover = restartText;\n        else if (soundsText.contains(x,y))\n            newHover = soundsText;\n        else if (musicText.contains(x,y))\n            newHover = musicText;\n        else if (texturesText.contains(x,y))\n            newHover = texturesText;\n        else if (graphicsText.contains(x,y))\n            newHover = graphicsText;\n        else if (shrinkText.contains(x,y))\n            newHover = shrinkText;\n        else if (enlargeText.contains(x,y))\n            newHover = enlargeText;\n        else if (memoryText.contains(x,y))\n            newHover = memoryText;\n\n        if (hoverBox != newHover) {\n            if (hoverBox != null)\n                hoverBox.mouseExit();\n            hoverBox = newHover;\n            if (hoverBox != null) {\n                if (mouseDepressed)\n                    hoverBox.mousePressed();\n                else\n                    hoverBox.mouseEnter();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42648, "method_name": "mouseWheelMoved", "class_name": "GameUI", "params": ["MouseWheelEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseWheelMoved(MouseWheelEvent e) {\n        boolean up = e.getWheelRotation() < 0;\n        if (hoverBox == soundsText)\n            scrollSounds(up);\n        else if (hoverBox == musicText)\n            scrollMusic(up);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener", "ActionListener"], "modifiers": ["public"]}}, {"id": 42649, "method_name": "init", "class_name": "GameLanguagePane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            names = LanguageManager.current().languageNames();\n            w = scaled(100);\n            h = s45+(s20*names.size());\n            lang = new Rectangle[names.size()];\n            for (int i=0;i<lang.length;i++)\n                lang[i] = new Rectangle();\n            addMouseListener(this);\n            addMouseMotionListener(this);\n            setOpaque(false);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42650, "method_name": "paintComponent", "class_name": "GameLanguagePane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g0) {\n            Graphics2D g = (Graphics2D) g0;\n            super.paintComponent(g);\n            int w = getWidth();\n            int h = getHeight();\n            g.setColor(langShade());\n            int topM = s35;\n            int lineH = s20;\n            g.fillRoundRect(0,topM,w,h-topM,s10,s10);\n            int y0 = topM;\n            g.setFont(narrowFont(18));\n            for (int i=0; i<names.size(); i++) {\n                String name = names.get(i);\n                Color c0 = hoverBox == lang[i] ? Color.yellow : Color.white;\n                g.setColor(c0);\n                y0 += lineH;\n                int sw = g.getFontMetrics().stringWidth(name);\n                g.drawString(name, w-sw-s10, y0);\n                lang[i].setBounds(w-sw-s10, y0-lineH, sw+s5, lineH);\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42651, "method_name": "mouseClicked", "class_name": "GameLanguagePane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseClicked(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42652, "method_name": "mousePressed", "class_name": "GameLanguagePane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mousePressed(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42653, "method_name": "mouseReleased", "class_name": "GameLanguagePane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseReleased(MouseEvent e) {\n            for (int i=0;i<lang.length;i++) {\n                if (hoverBox == lang[i]) {\n                    selectLanguage(i);\n                    break;\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42654, "method_name": "mouseEntered", "class_name": "GameLanguagePane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseEntered(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42655, "method_name": "mouseExited", "class_name": "GameLanguagePane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseExited(MouseEvent e) {\n            hoverBox = null;\n            setVisible(false);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42656, "method_name": "mouseDragged", "class_name": "GameLanguagePane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseDragged(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42657, "method_name": "mouseMoved", "class_name": "GameLanguagePane", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void mouseMoved(MouseEvent e) {\n            int x = e.getX();\n            int y = e.getY();\n            Rectangle prevHover = hoverBox;\n            hoverBox = null;\n            for (Rectangle box: lang) {\n                if (box.contains(x,y)) {\n                    hoverBox = box;\n                    break;\n                }\n            }\n\n            if (hoverBox != prevHover)\n                repaint();\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/game/GameUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 42658, "method_name": "setStopOnError", "class_name": "ScriptRunner", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setStopOnError(boolean stopOnError) {\n    this.stopOnError = stopOnError;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42659, "method_name": "setThrowWarning", "class_name": "ScriptRunner", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setThrowWarning(boolean throwWarning) {\n    this.throwWarning = throwWarning;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42660, "method_name": "setAutoCommit", "class_name": "ScriptRunner", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setAutoCommit(boolean autoCommit) {\n    this.autoCommit = autoCommit;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42661, "method_name": "setSendFullScript", "class_name": "ScriptRunner", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setSendFullScript(boolean sendFullScript) {\n    this.sendFullScript = sendFullScript;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42662, "method_name": "setRemoveCRs", "class_name": "ScriptRunner", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setRemoveCRs(boolean removeCRs) {\n    this.removeCRs = removeCRs;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42663, "method_name": "setEscapeProcessing", "class_name": "ScriptRunner", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setEscapeProcessing(boolean escapeProcessing) {\n    this.escapeProcessing = escapeProcessing;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42664, "method_name": "setLogWriter", "class_name": "ScriptRunner", "params": ["PrintWriter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLogWriter(PrintWriter logWriter) {\n    this.logWriter = logWriter;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42665, "method_name": "setErrorLogWriter", "class_name": "ScriptRunner", "params": ["PrintWriter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setErrorLogWriter(PrintWriter errorLogWriter) {\n    this.errorLogWriter = errorLogWriter;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42666, "method_name": "setDelimiter", "class_name": "ScriptRunner", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setDelimiter(String delimiter) {\n    this.delimiter = delimiter;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42667, "method_name": "setFullLineDelimiter", "class_name": "ScriptRunner", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setFullLineDelimiter(boolean fullLineDelimiter) {\n    this.fullLineDelimiter = fullLineDelimiter;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42668, "method_name": "runScript", "class_name": "ScriptRunner", "params": ["Reader"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void runScript(Reader reader) {\n    setAutoCommit();\n\n    try {\n      if (sendFullScript) {\n        executeFullScript(reader);\n      } else {\n        executeLineByLine(reader);\n      }\n    } finally {\n      rollbackConnection();\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42669, "method_name": "executeFullScript", "class_name": "ScriptRunner", "params": ["Reader"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void executeFullScript(Reader reader) {\n    StringBuilder script = new StringBuilder();\n    try {\n      BufferedReader lineReader = new BufferedReader(reader);\n      String line;\n      while ((line = lineReader.readLine()) != null) {\n        script.append(line);\n        script.append(LINE_SEPARATOR);\n      }\n      String command = script.toString();\n      println(command);\n      executeStatement(command);\n      commitConnection();\n    } catch (Exception e) {\n      String message = \"Error executing: \" + script + \".  Cause: \" + e;\n      printlnError(message);\n      throw new RuntimeSqlException(message, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42670, "method_name": "executeLineByLine", "class_name": "ScriptRunner", "params": ["Reader"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void executeLineByLine(Reader reader) {\n    StringBuilder command = new StringBuilder();\n    try {\n      BufferedReader lineReader = new BufferedReader(reader);\n      String line;\n      while ((line = lineReader.readLine()) != null) {\n        handleLine(command, line);\n      }\n      commitConnection();\n      checkForMissingLineTerminator(command);\n    } catch (Exception e) {\n      String message = \"Error executing: \" + command + \".  Cause: \" + e;\n      printlnError(message);\n      throw new RuntimeSqlException(message, e);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42671, "method_name": "closeConnection", "class_name": "ScriptRunner", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void closeConnection() {\n    try {\n      connection.close();\n    } catch (Exception e) {\n      // ignore\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42672, "method_name": "setAutoCommit", "class_name": "ScriptRunner", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void setAutoCommit() {\n    try {\n      if (autoCommit != connection.getAutoCommit()) {\n        connection.setAutoCommit(autoCommit);\n      }\n    } catch (Throwable t) {\n      throw new RuntimeSqlException(\"Could not set AutoCommit to \" + autoCommit + \". Cause: \" + t, t);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42673, "method_name": "commitConnection", "class_name": "ScriptRunner", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void commitConnection() {\n    try {\n      if (!connection.getAutoCommit()) {\n        connection.commit();\n      }\n    } catch (Throwable t) {\n      throw new RuntimeSqlException(\"Could not commit transaction. Cause: \" + t, t);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42674, "method_name": "rollbackConnection", "class_name": "ScriptRunner", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void rollbackConnection() {\n    try {\n      if (!connection.getAutoCommit()) {\n        connection.rollback();\n      }\n    } catch (Throwable t) {\n      // ignore\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42675, "method_name": "checkForMissingLineTerminator", "class_name": "ScriptRunner", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void checkForMissingLineTerminator(StringBuilder command) {\n    if (command != null && command.toString().trim().length() > 0) {\n      throw new RuntimeSqlException(\"Line missing end-of-line terminator (\" + delimiter + \") => \" + command);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42676, "method_name": "handleLine", "class_name": "ScriptRunner", "params": ["StringBuilder", "String"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void handleLine(StringBuilder command, String line) throws SQLException {\n    String trimmedLine = line.trim();\n    if (lineIsComment(trimmedLine)) {\n      Matcher matcher = DELIMITER_PATTERN.matcher(trimmedLine);\n      if (matcher.find()) {\n        delimiter = matcher.group(5);\n      }\n      println(trimmedLine);\n    } else if (commandReadyToExecute(trimmedLine)) {\n      command.append(line.substring(0, line.lastIndexOf(delimiter)));\n      command.append(LINE_SEPARATOR);\n      println(command);\n      executeStatement(command.toString());\n      command.setLength(0);\n    } else if (trimmedLine.length() > 0) {\n      command.append(line);\n      command.append(LINE_SEPARATOR);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42677, "method_name": "lineIsComment", "class_name": "ScriptRunner", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean lineIsComment(String trimmedLine) {\n    return trimmedLine.startsWith(\"//\") || trimmedLine.startsWith(\"--\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42678, "method_name": "commandReadyToExecute", "class_name": "ScriptRunner", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean commandReadyToExecute(String trimmedLine) {\n    // issue #561 remove anything after the delimiter\n    return !fullLineDelimiter && trimmedLine.contains(delimiter) || fullLineDelimiter && trimmedLine.equals(delimiter);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42679, "method_name": "executeStatement", "class_name": "ScriptRunner", "params": ["String"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void executeStatement(String command) throws SQLException {\n    Statement statement = connection.createStatement();\n    try {\n      statement.setEscapeProcessing(escapeProcessing);\n      String sql = command;\n      if (removeCRs) {\n        sql = sql.replace(\"\\r\\n\", \"\\n\");\n      }\n      try {\n        boolean hasResults = statement.execute(sql);\n        while (!(!hasResults && statement.getUpdateCount() == -1)) {\n          checkWarnings(statement);\n          printResults(statement, hasResults);\n          hasResults = statement.getMoreResults();\n        }\n      } catch (SQLWarning e) {\n        throw e;\n      } catch (SQLException e) {\n        if (stopOnError) {\n          throw e;\n        } else {\n          String message = \"Error executing: \" + command + \".  Cause: \" + e;\n          printlnError(message);\n        }\n      }\n    } finally {\n      try {\n        statement.close();\n      } catch (Exception ignored) {\n        // Ignore to workaround a bug in some connection pools\n        // (Does anyone know the details of the bug?)\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42680, "method_name": "checkWarnings", "class_name": "ScriptRunner", "params": ["Statement"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void checkWarnings(Statement statement) throws SQLException {\n    if (!throwWarning) {\n      return;\n    }\n    // In Oracle, CREATE PROCEDURE, FUNCTION, etc. returns warning\n    // instead of throwing exception if there is compilation error.\n    SQLWarning warning = statement.getWarnings();\n    if (warning != null) {\n      throw warning;\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42681, "method_name": "printResults", "class_name": "ScriptRunner", "params": ["Statement", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void printResults(Statement statement, boolean hasResults) {\n    if (!hasResults) {\n      return;\n    }\n    try (ResultSet rs = statement.getResultSet()) {\n      ResultSetMetaData md = rs.getMetaData();\n      int cols = md.getColumnCount();\n      for (int i = 0; i < cols; i++) {\n        String name = md.getColumnLabel(i + 1);\n        print(name + \"\\t\");\n      }\n      println(\"\");\n      while (rs.next()) {\n        for (int i = 0; i < cols; i++) {\n          String value = rs.getString(i + 1);\n          print(value + \"\\t\");\n        }\n        println(\"\");\n      }\n    } catch (SQLException e) {\n      printlnError(\"Error printing results: \" + e.getMessage());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42682, "method_name": "print", "class_name": "ScriptRunner", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void print(Object o) {\n    if (logWriter != null) {\n      logWriter.print(o);\n      logWriter.flush();\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42683, "method_name": "println", "class_name": "ScriptRunner", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void println(Object o) {\n    if (logWriter != null) {\n      logWriter.println(o);\n      logWriter.flush();\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42684, "method_name": "printlnError", "class_name": "ScriptRunner", "params": ["Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void printlnError(Object o) {\n    if (errorLogWriter != null) {\n      errorLogWriter.println(o);\n      errorLogWriter.flush();\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/jdbc/ScriptRunner.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42685, "method_name": "getRetrofitClient", "class_name": "RetrofitClient", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Retrofit", "snippet": "    public  static Retrofit getRetrofitClient()\n    {\n        return new Retrofit.Builder().baseUrl(BASE_URL).addConverterFactory(GsonConverterFactory.create()).build();\n    }", "url": "https://raw.githubusercontent.com/RzTutul/Covid-19/master/app/src/main/java/com/example/covid19/helper/RetrofitClient.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42686, "method_name": "index", "class_name": "JobCodeController", "params": ["HttpServletRequest", "Model", "int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String index(HttpServletRequest request, Model model, int jobId) {\n\t\tXxlJobInfo jobInfo = xxlJobInfoDao.loadById(jobId);\n\t\tList<XxlJobLogGlue> jobLogGlues = xxlJobLogGlueDao.findByJobId(jobId);\n\n\t\tif (jobInfo == null) {\n\t\t\tthrow new RuntimeException(I18nUtil.getString(\"jobinfo_glue_jobid_unvalid\"));\n\t\t}\n\t\tif (GlueTypeEnum.BEAN == GlueTypeEnum.match(jobInfo.getGlueType())) {\n\t\t\tthrow new RuntimeException(I18nUtil.getString(\"jobinfo_glue_gluetype_unvalid\"));\n\t\t}\n\n\t\t// valid permission\n\t\tJobInfoController.validPermission(request, jobInfo.getJobGroup());\n\n\t\t// Glue\u7c7b\u578b-\u5b57\u5178\n\t\tmodel.addAttribute(\"GlueTypeEnum\", GlueTypeEnum.values());\n\n\t\tmodel.addAttribute(\"jobInfo\", jobInfo);\n\t\tmodel.addAttribute(\"jobLogGlues\", jobLogGlues);\n\t\treturn \"jobcode/jobcode.index\";\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/JobCodeController.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42687, "method_name": "save", "class_name": "JobCodeController", "params": ["Model", "int", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "\tpublic ReturnT<String> save(Model model, int id, String glueSource, String glueRemark) {\n\t\t// valid\n\t\tif (glueRemark==null) {\n\t\t\treturn new ReturnT<String>(500, (I18nUtil.getString(\"system_please_input\") + I18nUtil.getString(\"jobinfo_glue_remark\")) );\n\t\t}\n\t\tif (glueRemark.length()<4 || glueRemark.length()>100) {\n\t\t\treturn new ReturnT<String>(500, I18nUtil.getString(\"jobinfo_glue_remark_limit\"));\n\t\t}\n\t\tXxlJobInfo exists_jobInfo = xxlJobInfoDao.loadById(id);\n\t\tif (exists_jobInfo == null) {\n\t\t\treturn new ReturnT<String>(500, I18nUtil.getString(\"jobinfo_glue_jobid_unvalid\"));\n\t\t}\n\t\t\n\t\t// update new code\n\t\texists_jobInfo.setGlueSource(glueSource);\n\t\texists_jobInfo.setGlueRemark(glueRemark);\n\t\texists_jobInfo.setGlueUpdatetime(new Date());\n\n\t\texists_jobInfo.setUpdateTime(new Date());\n\t\txxlJobInfoDao.update(exists_jobInfo);\n\n\t\t// log old code\n\t\tXxlJobLogGlue xxlJobLogGlue = new XxlJobLogGlue();\n\t\txxlJobLogGlue.setJobId(exists_jobInfo.getId());\n\t\txxlJobLogGlue.setGlueType(exists_jobInfo.getGlueType());\n\t\txxlJobLogGlue.setGlueSource(glueSource);\n\t\txxlJobLogGlue.setGlueRemark(glueRemark);\n\n\t\txxlJobLogGlue.setAddTime(new Date());\n\t\txxlJobLogGlue.setUpdateTime(new Date());\n\t\txxlJobLogGlueDao.save(xxlJobLogGlue);\n\n\t\t// remove code backup more than 30\n\t\txxlJobLogGlueDao.removeOld(exists_jobInfo.getId(), 30);\n\n\t\treturn ReturnT.SUCCESS;\n\t}", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/controller/JobCodeController.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42688, "method_name": "main", "class_name": "ArticleApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(ArticleApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/ArticleApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42689, "method_name": "idWorker", "class_name": "ArticleApplication", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IdWorker", "snippet": "\tpublic IdWorker idWorker(){\n\t\treturn new IdWorker(1, 1);\n\t}", "url": "https://raw.githubusercontent.com/1127140426/tensquare/master/tensquare_article/src/main/java/com/tensquare/article/ArticleApplication.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42690, "method_name": "compile", "class_name": "TwoArgumentExpression", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t\tlhs.compile(c);\n\t\trhs.compile(c);\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/TwoArgumentExpression.java", "stars": "17", "class_props": {"extends": "Expression", "implements": null, "modifiers": ["public"]}}, {"id": 42691, "method_name": "getLhs", "class_name": "TwoArgumentExpression", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Expression", "snippet": "\tpublic Expression getLhs() {\n\t\treturn lhs;\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/TwoArgumentExpression.java", "stars": "17", "class_props": {"extends": "Expression", "implements": null, "modifiers": ["public"]}}, {"id": 42692, "method_name": "getRhs", "class_name": "TwoArgumentExpression", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Expression", "snippet": "\tpublic Expression getRhs() {\n\t\treturn rhs;\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/TwoArgumentExpression.java", "stars": "17", "class_props": {"extends": "Expression", "implements": null, "modifiers": ["public"]}}, {"id": 42693, "method_name": "getPetAndRoom", "class_name": "ColumnPrefixAutoMappingTest", "params": ["SqlSession"], "throws": null, "modifiers": ["protected"], "return_type": "List<Pet>", "snippet": "  protected List<Pet> getPetAndRoom(SqlSession sqlSession) {\n    List<Pet> pets = sqlSession.selectList(\"org.apache.ibatis.submitted.column_prefix.MapperAutoMapping.selectPets\");\n    return pets;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/column_prefix/ColumnPrefixAutoMappingTest.java", "stars": "15", "class_props": {"extends": "ColumnPrefixTest", "implements": null, "modifiers": []}}, {"id": 42694, "method_name": "getPersons", "class_name": "ColumnPrefixAutoMappingTest", "params": ["SqlSession"], "throws": null, "modifiers": ["protected"], "return_type": "List<Person>", "snippet": "  protected List<Person> getPersons(SqlSession sqlSession) {\n    List<Person> list = sqlSession\n        .selectList(\"org.apache.ibatis.submitted.column_prefix.MapperAutoMapping.selectPersons\");\n    return list;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/column_prefix/ColumnPrefixAutoMappingTest.java", "stars": "15", "class_props": {"extends": "ColumnPrefixTest", "implements": null, "modifiers": []}}, {"id": 42695, "method_name": "getConfigPath", "class_name": "ColumnPrefixAutoMappingTest", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "  protected String getConfigPath() {\n    return \"org/apache/ibatis/submitted/column_prefix/ConfigAutoMapping.xml\";\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/column_prefix/ColumnPrefixAutoMappingTest.java", "stars": "15", "class_props": {"extends": "ColumnPrefixTest", "implements": null, "modifiers": []}}, {"id": 42696, "method_name": "testCaseInsensitivity", "class_name": "ColumnPrefixAutoMappingTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testCaseInsensitivity() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      Brand brand = sqlSession.selectOne(\"org.apache.ibatis.submitted.column_prefix.MapperAutoMapping.selectBrandWithProducts\", 1);\n      assertEquals(Integer.valueOf(1), brand.getId());\n      assertEquals(2, brand.getProducts().size());\n      assertEquals(Integer.valueOf(10), brand.getProducts().get(0).getId());\n      assertEquals(\"alpha\", brand.getProducts().get(0).getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/column_prefix/ColumnPrefixAutoMappingTest.java", "stars": "15", "class_props": {"extends": "ColumnPrefixTest", "implements": null, "modifiers": []}}, {"id": 42697, "method_name": "setUp", "class_name": "BaseJdbcLoggerTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void setUp() {\n    logger = new BaseJdbcLogger(log, 1) {\n    };\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/logging/jdbc/BaseJdbcLoggerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42698, "method_name": "shouldDescribePrimitiveArrayParameter", "class_name": "BaseJdbcLoggerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldDescribePrimitiveArrayParameter() throws Exception {\n    logger.setColumn(\"1\", array);\n    when(array.getArray()).thenReturn(new int[] { 1, 2, 3 });\n    assertThat(logger.getParameterValueString()).startsWith(\"[1, 2, 3]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/logging/jdbc/BaseJdbcLoggerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42699, "method_name": "shouldDescribeObjectArrayParameter", "class_name": "BaseJdbcLoggerTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldDescribeObjectArrayParameter() throws Exception {\n    logger.setColumn(\"1\", array);\n    when(array.getArray()).thenReturn(new String[] { \"one\", \"two\", \"three\" });\n    assertThat(logger.getParameterValueString()).startsWith(\"[one, two, three]\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/logging/jdbc/BaseJdbcLoggerTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42700, "method_name": "navigateTo", "class_name": "BasePage", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void navigateTo(String component) {\n        String locator = \"//a[text() = '\" + component + \"']\";\n        wait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(locator))).click();\n    }", "url": "https://raw.githubusercontent.com/CybertekSchool/CucumberWebOrdersFall2019/master/src/test/java/com/weborders/pages/BasePage.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42701, "method_name": "main", "class_name": "JavaIdentifiers", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String args[]) {\n\t\tString str = \"Apple\";\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day3/JavaIdentifiers.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42702, "method_name": "getFutureWithTimeout", "class_name": "TaskToFutureAdapter", "params": ["Task<T>", "long", "TimeUnit", "ScheduledExecutorService"], "throws": null, "modifiers": ["public", "static"], "return_type": "ListenableFuture<T>", "snippet": "  public static <T> ListenableFuture<T> getFutureWithTimeout(\n      Task<T> task, long timeout, TimeUnit timeUnit, ScheduledExecutorService executor) {\n    return FluentFuture.<T>from(\n        CallbackToFutureAdapter.getFuture(\n            completer -> {\n              task.addOnCompleteListener(\n                  executor,\n                  completed -> {\n                    try {\n                      if (completed.isCanceled()) {\n                        completer.setCancelled();\n                      } else if (completed.getException() != null) {\n                        completer.setException(completed.getException());\n                      } else {\n                        completer.set(completed.getResult());\n                      }\n                    } catch (Exception ex) {\n                      completer.setException(ex);\n                    }\n                  });\n              return \"GmsCoreTask\";\n            }))\n        .withTimeout(timeout, timeUnit, executor);\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/common/src/main/java/com/google/android/apps/exposurenotification/common/TaskToFutureAdapter.java", "stars": "205", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42703, "method_name": "touch", "class_name": "LruDiskUsage", "params": ["File"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void touch(File file) throws IOException {\n        workerThread.submit(new TouchCallable(file));\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/file/LruDiskUsage.java", "stars": "2", "class_props": {"extends": null, "implements": ["DiskUsage"], "modifiers": ["public", "abstract"]}}, {"id": 42704, "method_name": "touchInBackground", "class_name": "LruDiskUsage", "params": ["File"], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void touchInBackground(File file) throws IOException {\n        Files.setLastModifiedNow(file);\n        List<File> files = Files.getLruListFiles(file.getParentFile());\n        trim(files);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/file/LruDiskUsage.java", "stars": "2", "class_props": {"extends": null, "implements": ["DiskUsage"], "modifiers": ["public", "abstract"]}}, {"id": 42705, "method_name": "accept", "class_name": "LruDiskUsage", "params": ["File", "long", "int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "boolean", "snippet": "    protected abstract boolean accept(File file, long totalSize, int totalCount);\n\n    private void trim(List<File> files) {\n        long totalSize = countTotalSize(files);\n        int totalCount = files.size();\n        for (File file : files) {\n            boolean accepted = accept(file, totalSize, totalCount);\n            if (!accepted) {\n                long fileSize = file.length();\n                boolean deleted = file.delete();\n                if (deleted) {\n                    totalCount--;\n                    totalSize -= fileSize;\n                    HttpProxyCacheDebuger.printfLog(\"Cache file \" + file + \" is deleted because it exceeds cache limit\");\n                } else {\n                    HttpProxyCacheDebuger.printfError(\"Error deleting file \" + file + \" for trimming cache\");\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/file/LruDiskUsage.java", "stars": "2", "class_props": {"extends": null, "implements": ["DiskUsage"], "modifiers": ["public", "abstract"]}}, {"id": 42706, "method_name": "trim", "class_name": "LruDiskUsage", "params": ["List<File>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void trim(List<File> files) {\n        long totalSize = countTotalSize(files);\n        int totalCount = files.size();\n        for (File file : files) {\n            boolean accepted = accept(file, totalSize, totalCount);\n            if (!accepted) {\n                long fileSize = file.length();\n                boolean deleted = file.delete();\n                if (deleted) {\n                    totalCount--;\n                    totalSize -= fileSize;\n                    HttpProxyCacheDebuger.printfLog(\"Cache file \" + file + \" is deleted because it exceeds cache limit\");\n                } else {\n                    HttpProxyCacheDebuger.printfError(\"Error deleting file \" + file + \" for trimming cache\");\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/file/LruDiskUsage.java", "stars": "2", "class_props": {"extends": null, "implements": ["DiskUsage"], "modifiers": ["public", "abstract"]}}, {"id": 42707, "method_name": "countTotalSize", "class_name": "LruDiskUsage", "params": ["List<File>"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long countTotalSize(List<File> files) {\n        long totalSize = 0;\n        for (File file : files) {\n            totalSize += file.length();\n        }\n        return totalSize;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/file/LruDiskUsage.java", "stars": "2", "class_props": {"extends": null, "implements": ["DiskUsage"], "modifiers": ["public", "abstract"]}}, {"id": 42708, "method_name": "call", "class_name": "TouchCallable", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "Void", "snippet": "        public Void call() throws Exception {\n            touchInBackground(file);\n            return null;\n        }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/file/LruDiskUsage.java", "stars": "2", "class_props": {"extends": null, "implements": ["Callable"], "modifiers": ["private"]}}, {"id": 42709, "method_name": "create", "class_name": "ViewHolderRoleDashboardSDS", "params": ["ViewGroup", "Context", "Fragment"], "throws": null, "modifiers": ["public", "static"], "return_type": "ViewHolderRoleDashboardSDS", "snippet": "    public static ViewHolderRoleDashboardSDS create(ViewGroup parent, Context context, Fragment fragment)\n    {\n\n        View view = LayoutInflater.from(parent.getContext())\n                .inflate(R.layout.list_item_role_dashboard_sds,parent,false);\n        return new ViewHolderRoleDashboardSDS(view,context,fragment);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderUserProfile/ViewHolderRoleDashboardSDS.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42710, "method_name": "dashboardClick", "class_name": "ViewHolderRoleDashboardSDS", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dashboardClick()\n    {\n\n        User user = PrefLoginGlobal.getUser(context);\n\n        if(user==null)\n        {\n            return;\n        }\n\n        if(user.getRole()==User.ROLE_ADMIN_CODE)\n        {\n            Intent intent = new Intent(context, SDSAdminDashboard.class);\n            context.startActivity(intent);\n        }\n        else if(user.getRole()==User.ROLE_STAFF_CODE)\n        {\n\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderUserProfile/ViewHolderRoleDashboardSDS.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42711, "method_name": "bindDashboard", "class_name": "ViewHolderRoleDashboardSDS", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void bindDashboard()\n    {\n        User user = PrefLoginGlobal.getUser(context);\n\n        if(user==null)\n        {\n            return;\n        }\n\n\n        if(user.getRole()==User.ROLE_ADMIN_CODE)\n        {\n            dashboardName.setText(\"Super Admin Dashboard\");\n            dashboardDescription.setText(\"Press here to access the Admin dashboard !\");\n        }\n        else if(user.getRole()==User.ROLE_STAFF_CODE)\n        {\n            dashboardName.setText(\"Shop Staff Dashboard\");\n            dashboardDescription.setText(\"Press here to access shop dashboard !\");\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderUserProfile/ViewHolderRoleDashboardSDS.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42712, "method_name": "listItemClick", "class_name": "ViewHolderRoleDashboardSDS", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void listItemClick()\n    {\n        ((ListItemClick)fragment).listItemClick();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderUserProfile/ViewHolderRoleDashboardSDS.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42713, "method_name": "showToastMessage", "class_name": "ViewHolderRoleDashboardSDS", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(context,message, Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/ViewHolders/ViewHolderUserProfile/ViewHolderRoleDashboardSDS.java", "stars": "10", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 42714, "method_name": "getDefaultClassLoader", "class_name": "Resources", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ClassLoader", "snippet": "  public static ClassLoader getDefaultClassLoader() {\n    return classLoaderWrapper.defaultClassLoader;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42715, "method_name": "setDefaultClassLoader", "class_name": "Resources", "params": ["ClassLoader"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setDefaultClassLoader(ClassLoader defaultClassLoader) {\n    classLoaderWrapper.defaultClassLoader = defaultClassLoader;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42716, "method_name": "getResourceURL", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "URL", "snippet": "  public static URL getResourceURL(String resource) throws IOException {\n      // issue #625\n      return getResourceURL(null, resource);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42717, "method_name": "getResourceURL", "class_name": "Resources", "params": ["ClassLoader", "String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "URL", "snippet": "  public static URL getResourceURL(ClassLoader loader, String resource) throws IOException {\n    URL url = classLoaderWrapper.getResourceAsURL(resource, loader);\n    if (url == null) {\n      throw new IOException(\"Could not find resource \" + resource);\n    }\n    return url;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42718, "method_name": "getResourceAsStream", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "InputStream", "snippet": "  public static InputStream getResourceAsStream(String resource) throws IOException {\n    return getResourceAsStream(null, resource);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42719, "method_name": "getResourceAsStream", "class_name": "Resources", "params": ["ClassLoader", "String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "InputStream", "snippet": "  public static InputStream getResourceAsStream(ClassLoader loader, String resource) throws IOException {\n    InputStream in = classLoaderWrapper.getResourceAsStream(resource, loader);\n    if (in == null) {\n      throw new IOException(\"Could not find resource \" + resource);\n    }\n    return in;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42720, "method_name": "getResourceAsProperties", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties getResourceAsProperties(String resource) throws IOException {\n    Properties props = new Properties();\n    try (InputStream in = getResourceAsStream(resource)) {\n      props.load(in);\n    }\n    return props;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42721, "method_name": "getResourceAsProperties", "class_name": "Resources", "params": ["ClassLoader", "String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties getResourceAsProperties(ClassLoader loader, String resource) throws IOException {\n    Properties props = new Properties();\n    try (InputStream in = getResourceAsStream(loader, resource)) {\n      props.load(in);\n    }\n    return props;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42722, "method_name": "getResourceAsReader", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "Reader", "snippet": "  public static Reader getResourceAsReader(String resource) throws IOException {\n    Reader reader;\n    if (charset == null) {\n      reader = new InputStreamReader(getResourceAsStream(resource));\n    } else {\n      reader = new InputStreamReader(getResourceAsStream(resource), charset);\n    }\n    return reader;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42723, "method_name": "getResourceAsReader", "class_name": "Resources", "params": ["ClassLoader", "String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "Reader", "snippet": "  public static Reader getResourceAsReader(ClassLoader loader, String resource) throws IOException {\n    Reader reader;\n    if (charset == null) {\n      reader = new InputStreamReader(getResourceAsStream(loader, resource));\n    } else {\n      reader = new InputStreamReader(getResourceAsStream(loader, resource), charset);\n    }\n    return reader;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42724, "method_name": "getResourceAsFile", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "File", "snippet": "  public static File getResourceAsFile(String resource) throws IOException {\n    return new File(getResourceURL(resource).getFile());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42725, "method_name": "getResourceAsFile", "class_name": "Resources", "params": ["ClassLoader", "String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "File", "snippet": "  public static File getResourceAsFile(ClassLoader loader, String resource) throws IOException {\n    return new File(getResourceURL(loader, resource).getFile());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42726, "method_name": "getUrlAsStream", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "InputStream", "snippet": "  public static InputStream getUrlAsStream(String urlString) throws IOException {\n    URL url = new URL(urlString);\n    URLConnection conn = url.openConnection();\n    return conn.getInputStream();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42727, "method_name": "getUrlAsReader", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "Reader", "snippet": "  public static Reader getUrlAsReader(String urlString) throws IOException {\n    Reader reader;\n    if (charset == null) {\n      reader = new InputStreamReader(getUrlAsStream(urlString));\n    } else {\n      reader = new InputStreamReader(getUrlAsStream(urlString), charset);\n    }\n    return reader;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42728, "method_name": "getUrlAsProperties", "class_name": "Resources", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "Properties", "snippet": "  public static Properties getUrlAsProperties(String urlString) throws IOException {\n    Properties props = new Properties();\n    try (InputStream in = getUrlAsStream(urlString)) {\n      props.load(in);\n    }\n    return props;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42729, "method_name": "classForName", "class_name": "Resources", "params": ["String"], "throws": ["ClassNotFoundException"], "modifiers": ["public", "static"], "return_type": "Class<?>", "snippet": "  public static Class<?> classForName(String className) throws ClassNotFoundException {\n    return classLoaderWrapper.classForName(className);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42730, "method_name": "getCharset", "class_name": "Resources", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Charset", "snippet": "  public static Charset getCharset() {\n    return charset;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42731, "method_name": "setCharset", "class_name": "Resources", "params": ["Charset"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void setCharset(Charset charset) {\n    Resources.charset = charset;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/io/Resources.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42732, "method_name": "assignWeapon", "class_name": "Terrorist", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void assignWeapon(String weapon) {\n        this.weapon = weapon;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Flyweight%20Pattern/src/Terrorist.java", "stars": "38", "class_props": {"extends": null, "implements": ["IPlayer"], "modifiers": ["public"]}}, {"id": 42733, "method_name": "toString", "class_name": "Terrorist", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"Terrorist{\" +\n                \"task='\" + task + '\\'' +\n                \", weapon='\" + weapon + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Flyweight%20Pattern/src/Terrorist.java", "stars": "38", "class_props": {"extends": null, "implements": ["IPlayer"], "modifiers": ["public"]}}, {"id": 42734, "method_name": "setPersonSectionVisible", "class_name": "SearchPanel", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setPersonSectionVisible(Boolean show) {\n\t\tpersonName.setVisible(show);\n\t\tpersonNameInput.setVisible(show);\n\t\tpersonNameInput.setText(\"\");\n\n\t\tpersonProfession.setVisible(show);\n\t\tprofessionDropDown.setVisible(show);\n\t\tprofessionDropDown.setSelectedItem(\"\");\n\n\t\tpersonBirth.setVisible(show);\n\t\tbirthYearMin.setVisible(show);\n\t\tbirthYearMin.setText(\"\");\n\t\tbirthAnd.setVisible(show);\n\t\tbirthYearMax.setVisible(show);\n\t\tbirthYearMax.setText(\"\");\n\n\t\tpersonDeath.setVisible(show);\n\t\tdeathYearMin.setVisible(show);\n\t\tdeathYearMin.setText(\"\");\n\t\tdeathAnd.setVisible(show);\n\t\tdeathYearMax.setVisible(show);\n\t\tdeathYearMax.setText(\"\");\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/SearchPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 42735, "method_name": "setTitleSectionVisible", "class_name": "SearchPanel", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTitleSectionVisible(Boolean show) {\n\t\ttitleName.setVisible(show);\n\t\ttitleNameInput.setVisible(show);\n\t\ttitleNameInput.setText(\"\");\n\n\t\ttitleType.setVisible(show);\n\t\ttypeDropDown.setVisible(show);\n\t\ttypeDropDown.setSelectedItem(\"\");\n\n\t\ttitleAdult.setVisible(show);\n\t\tadultDropDown.setVisible(show);\n\t\tadultDropDown.setSelectedItem(\"\");\n\n\t\ttitleStart.setVisible(show);\n\t\tstartYearMin.setVisible(show);\n\t\tstartYearMin.setText(\"\");\n\t\tstartYearAnd.setVisible(show);\n\t\tstartYearMax.setVisible(show);\n\t\tstartYearMax.setText(\"\");\n\n\t\ttitleEnd.setVisible(show);\n\t\tendYearMin.setVisible(show);\n\t\tendYearMin.setText(\"\");\n\t\tendYearAnd.setVisible(show);\n\t\tendYearMax.setVisible(show);\n\t\tendYearMax.setText(\"\");\n\n\t\ttitleRating.setVisible(show);\n\t\tratingMin.setVisible(show);\n\t\tratingMin.setText(\"\");\n\t\tratingAnd.setVisible(show);\n\t\tratingMax.setVisible(show);\n\t\tratingMax.setText(\"\");\n\n\t\ttitleRuntime.setVisible(show);\n\t\truntimeMin.setVisible(show);\n\t\truntimeMin.setText(\"\");\n\t\truntimeAnd.setVisible(show);\n\t\truntimeMax.setVisible(show);\n\t\truntimeMax.setText(\"\");\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/SearchPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 42736, "method_name": "setEpisodeSectionVisible", "class_name": "SearchPanel", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setEpisodeSectionVisible(Boolean show) {\n\t\tseasonText.setVisible(show);\n\t\tseasonInput.setVisible(show);\n\t\tseasonInput.setText(\"\");\n\n\t\tepisodeText.setVisible(show);\n\t\tepisodeInput.setVisible(show);\n\t\tepisodeInput.setText(\"\");\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/SearchPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 42737, "method_name": "setJobSectionVisible", "class_name": "SearchPanel", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setJobSectionVisible(Boolean show) {\n\t\tcharacterText.setVisible(show);\n\n\t\tcharacterInput.setVisible(show);\n\t\tcharacterInput.setText(\"\");\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/SearchPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 42738, "method_name": "setOutputFileVisible", "class_name": "SearchPanel", "params": ["Boolean", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setOutputFileVisible(Boolean show, Integer numResults) {\n\t\tresults.setText(\"\");\n\t\toutputLabel\n\t\t\t\t.setText(\"Search returned \" + numResults + \" results. Please enter a filename to send the results to:\");\n\t\toutputLabel.setVisible(show);\n\t\toutputFile.setVisible(show);\n\t\toutputButton.setVisible(show);\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/SearchPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 42739, "method_name": "writeFile", "class_name": "SearchPanel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void writeFile() {\n\t\ttry {\n\t\t\tFileManager fManager = new FileManager(outputFile.getText());\n\t\t\tfManager.writeToFile(finalResults);\n\t\t\tfManager.close();\n\t\t\toutputDone.setVisible(true);\n\t\t} catch (IOException e) {\n\t\t\toutputLabel.setText(\"Output failed! There was an exception writing to the specified file\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/SearchPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 42740, "method_name": "actionPerformed", "class_name": "SearchPanel", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void actionPerformed(ActionEvent e) {\n\t\t// check if the source of the UI event was the search button\n\t\tif (e.getSource() == searchButton) {\n\t\t\tresults.setText(\"Collecting results, please wait...\");\n\t\t\t// Execute query in a new thread to show status text\n\t\t\tThread t = new Thread() {\n\t\t\t\t@Override\n\t\t\t\tpublic void run() {\n\t\t\t\t\t// Initialize query and filter variables to be used in the database manager\n\t\t\t\t\t// functions\n\t\t\t\t\tString name = ((personNameInput.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: personNameInput.getText().toLowerCase().trim());\n\t\t\t\t\tString title = ((titleNameInput.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: titleNameInput.getText().toLowerCase().trim());\n\t\t\t\t\tString profession = ((professionDropDown.getItemAt(professionDropDown.getSelectedIndex())\n\t\t\t\t\t\t\t.equals(\"\")) ? null\n\t\t\t\t\t\t\t\t\t: professionDropDown.getItemAt(professionDropDown.getSelectedIndex())\n\t\t\t\t\t\t\t\t\t\t\t.toLowerCase());\n\t\t\t\t\tInteger minBirthYear = ((birthYearMin.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(birthYearMin.getText().trim()));\n\t\t\t\t\tInteger maxBirthYear = ((birthYearMax.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(birthYearMax.getText().trim()));\n\t\t\t\t\tInteger minDeathYear = ((deathYearMin.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(deathYearMin.getText().trim()));\n\t\t\t\t\tInteger maxDeathYear = ((deathYearMax.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(deathYearMax.getText().trim()));\n\t\t\t\t\tString type = ((typeDropDown.getItemAt(typeDropDown.getSelectedIndex()) == \"\") ? null\n\t\t\t\t\t\t\t: typeDropDown.getItemAt(typeDropDown.getSelectedIndex()));\n\n\t\t\t\t\t// Genre compatibility added in back-end, no UI support ATM\n\t\t\t\t\t// String genre = ((genreInput.getText().trim().equals(\"\")) ? null :\n\t\t\t\t\t// genreInput.getText().trim());\n\t\t\t\t\tString genre = null;\n\n\t\t\t\t\tInteger minStartYear = ((startYearMin.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(startYearMin.getText().trim()));\n\t\t\t\t\tInteger maxStartYear = ((startYearMax.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(startYearMax.getText().trim()));\n\t\t\t\t\tInteger minEndYear = ((endYearMin.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(endYearMin.getText().trim()));\n\t\t\t\t\tInteger maxEndYear = ((endYearMax.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(endYearMax.getText().trim()));\n\t\t\t\t\tInteger minRuntime = ((runtimeMin.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(runtimeMin.getText().trim()));\n\t\t\t\t\tInteger maxRuntime = ((runtimeMax.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(runtimeMax.getText().trim()));\n\t\t\t\t\tDouble minRating = ((ratingMin.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Double.parseDouble(ratingMin.getText().trim()));\n\t\t\t\t\tDouble maxRating = ((ratingMax.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Double.parseDouble(ratingMax.getText().trim()));\n\t\t\t\t\tBoolean adult = ((adultDropDown.getItemAt(adultDropDown.getSelectedIndex()).trim().equals(\"\"))\n\t\t\t\t\t\t\t? null\n\t\t\t\t\t\t\t: Boolean.parseBoolean(\n\t\t\t\t\t\t\t\t\tadultDropDown.getItemAt(adultDropDown.getSelectedIndex()).toLowerCase().trim()));\n\t\t\t\t\tInteger season = ((seasonInput.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(seasonInput.getText().trim()));\n\t\t\t\t\tInteger episode = ((episodeInput.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: Integer.parseInt(episodeInput.getText().trim()));\n\t\t\t\t\tString character = ((characterInput.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t: characterInput.getText().toLowerCase().trim());\n\n\t\t\t\t\tif (pGenInfo) {\n\t\t\t\t\t\t// print all info about the people who fit the given criteria\n\t\t\t\t\t\tArrayList<Person> people = manager.getPersonInfo(name, profession, minBirthYear, maxBirthYear,\n\t\t\t\t\t\t\t\tminDeathYear, maxDeathYear, false);\n\n\t\t\t\t\t\tString return_val = \"\";\n\t\t\t\t\t\tfor (Person person : people) {\n\t\t\t\t\t\t\treturn_val += manager.getPersonString(person, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!return_val.equals(\"\")) {\n\t\t\t\t\t\t\tif (people.size() > 5) {\n\t\t\t\t\t\t\t\t// show output to file result if there are too many people returned\n\t\t\t\t\t\t\t\tfinalResults = return_val;\n\t\t\t\t\t\t\t\tsetOutputFileVisible(true, people.size());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresults.setText(\"No results!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (pRelTitles) {\n\t\t\t\t\t\t// prints all the titles a given person worked on that fit the given criteria\n\t\t\t\t\t\t// for people and titles\n\t\t\t\t\t\tArrayList<Title> titles = manager.getPersonTitles(name, title, profession, minBirthYear,\n\t\t\t\t\t\t\t\tmaxBirthYear, minDeathYear, maxDeathYear, type, genre, minStartYear, maxStartYear,\n\t\t\t\t\t\t\t\tminEndYear, maxEndYear, minRuntime, maxRuntime, minRating, maxRating, adult);\n\n\t\t\t\t\t\tString return_val = \"\";\n\t\t\t\t\t\tfor (Title t : titles) {\n\t\t\t\t\t\t\treturn_val += manager.getTitleString(t, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!return_val.equals(\"\")) {\n\t\t\t\t\t\t\tif (titles.size() > 5) {\n\t\t\t\t\t\t\t\t// show output to file result if there are too many titles returned\n\t\t\t\t\t\t\t\tfinalResults = return_val;\n\t\t\t\t\t\t\t\tsetOutputFileVisible(true, titles.size());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresults.setText(\"No results!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (pJobs) {\n\t\t\t\t\t\t// print out info about jobs worked on by a particular person\n\t\t\t\t\t\tArrayList<Person> people = manager.getPersonInfo(name, profession, minBirthYear, maxBirthYear,\n\t\t\t\t\t\t\t\tminDeathYear, maxDeathYear, true);\n\n\t\t\t\t\t\tArrayList<Job> jobs = new ArrayList<Job>();\n\t\t\t\t\t\tfor (Person person : people) {\n\t\t\t\t\t\t\tjobs.addAll(manager.personJobSearch(person, type, genre, minStartYear, maxStartYear,\n\t\t\t\t\t\t\t\t\tminEndYear, maxEndYear, minRuntime, maxRuntime, minRating, maxRating, adult, null,\n\t\t\t\t\t\t\t\t\tcharacter, false));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tString return_val = \"\";\n\t\t\t\t\t\tfor (Job job : jobs) {\n\t\t\t\t\t\t\treturn_val += manager.getJobString(job);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!return_val.equals(\"\")) {\n\t\t\t\t\t\t\tif (jobs.size() > 5) {\n\t\t\t\t\t\t\t\t// show output to file result if there are too many jobs returned\n\t\t\t\t\t\t\t\tfinalResults = return_val;\n\t\t\t\t\t\t\t\tsetOutputFileVisible(true, jobs.size());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresults.setText(\"No results!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (tGenInfo) {\n\t\t\t\t\t\t// print all info about titles that fit the given criteria\n\t\t\t\t\t\tArrayList<Title> titles = manager.getTitleInfo(title, type, genre, minStartYear, maxStartYear,\n\t\t\t\t\t\t\t\tminEndYear, maxEndYear, minRuntime, maxRuntime, minRating, maxRating, adult);\n\n\t\t\t\t\t\tString return_val = \"\";\n\n\t\t\t\t\t\tif (titles == null) {\n\t\t\t\t\t\t\treturn_val = \"Enter search criteria\";\n\t\t\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tfor (Title titleName : titles) {\n\t\t\t\t\t\t\t\treturn_val += manager.getTitleString(titleName, true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (!return_val.equals(\"\")) {\n\t\t\t\t\t\t\t\tif (titles.size() > 5) {\n\t\t\t\t\t\t\t\t\t// show output to file result if there are too many titles returned\n\t\t\t\t\t\t\t\t\tfinalResults = return_val;\n\t\t\t\t\t\t\t\t\tsetOutputFileVisible(true, titles.size());\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresults.setText(\"No results!\");\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (tRelPeople) {\n\t\t\t\t\t\t// print all info about jobs worked on the given title by the given person\n\t\t\t\t\t\tArrayList<Title> titles = manager.getTitleInfo(title, type, genre, minStartYear, maxStartYear,\n\t\t\t\t\t\t\t\tminEndYear, maxEndYear, minRuntime, maxRuntime, minRating, maxRating, adult);\n\n\t\t\t\t\t\tArrayList<Job> jobs = new ArrayList<Job>();\n\t\t\t\t\t\tArrayList<Job> tempJobs = new ArrayList<Job>();\n\t\t\t\t\t\tfor (Title t : titles) {\n\t\t\t\t\t\t\ttempJobs.addAll(manager.titleCastSearch(t, profession, minBirthYear, maxBirthYear,\n\t\t\t\t\t\t\t\t\tminDeathYear, maxDeathYear, null, character));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (Job job : tempJobs) {\n\t\t\t\t\t\t\tif (name != null) {\n\t\t\t\t\t\t\t\tif (job.getPerson().getName().trim().toLowerCase().equals(name)) {\n\t\t\t\t\t\t\t\t\tjobs.add(job);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjobs.add(job);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// add every job to the string we will print\n\t\t\t\t\t\tString return_val = \"\";\n\t\t\t\t\t\tfor (Job job : jobs) {\n\t\t\t\t\t\t\treturn_val += manager.getJobString(job);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// if there were results found\n\t\t\t\t\t\tif (!return_val.equals(\"\")) {\n\t\t\t\t\t\t\tif (jobs.size() > 5) {\n\t\t\t\t\t\t\t\t// show output to file result if there are too many jobs returned\n\t\t\t\t\t\t\t\tfinalResults = return_val;\n\t\t\t\t\t\t\t\tsetOutputFileVisible(true, jobs.size());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresults.setText(\"No results!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (tEpisodes) {\n\t\t\t\t\t\t// print out info about episodes with the given ep. number/season and title\n\t\t\t\t\t\t// filters\n\t\t\t\t\t\tArrayList<Title> titles = manager.getTitleEpisodeInfo(title, genre, minStartYear, maxStartYear,\n\t\t\t\t\t\t\t\tminEndYear, maxEndYear, minRuntime, maxRuntime, minRating, maxRating, adult, season,\n\t\t\t\t\t\t\t\tepisode);\n\n\t\t\t\t\t\tString return_val = \"\";\n\t\t\t\t\t\tfor (Title titleName : titles) {\n\t\t\t\t\t\t\treturn_val += manager.getTitleString(titleName, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!return_val.equals(\"\")) {\n\t\t\t\t\t\t\tif (titles.size() > 5) {\n\t\t\t\t\t\t\t\t// show output to file result if there are too many titles returned\n\t\t\t\t\t\t\t\tfinalResults = return_val;\n\t\t\t\t\t\t\t\tsetOutputFileVisible(true, titles.size());\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresults.setText(return_val);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresults.setText(\"No results!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tt.start();\n\t\t} else if (e.getSource() == outputButton) {\n\t\t\t// send results to file\n\t\t\twriteFile();\n\t\t}\n\t\t// if it was the search drop down\n\t\telse if (e.getSource() == searchDropDown) {\n\t\t\t// clear options for want to know\n\t\t\tif (searchDropDown.getSelectedItem() == \"People\") {\n\t\t\t\tnoSearch = false;\n\n\t\t\t\tpSearch = true;\n\t\t\t\tpGenInfo = true;\n\t\t\t\tpRelTitles = false;\n\t\t\t\tpJobs = false;\n\n\t\t\t\ttSearch = false;\n\t\t\t\ttGenInfo = false;\n\t\t\t\ttRelPeople = false;\n\t\t\t\ttEpisodes = false;\n\n\t\t\t\twantDropDown.removeAllItems();\n\t\t\t\t// add the new options\n\t\t\t\twantDropDown.addItem(\"General Information\");\n\t\t\t\twantDropDown.addItem(\"Related Titles\");\n\t\t\t\twantDropDown.addItem(\"Job Search\");\n\t\t\t\t// make it editable if not already\n\t\t\t} else if (searchDropDown.getSelectedItem() == \"Titles\") {\n\t\t\t\tnoSearch = false;\n\n\t\t\t\tpSearch = false;\n\t\t\t\tpGenInfo = false;\n\t\t\t\tpRelTitles = false;\n\t\t\t\tpJobs = false;\n\n\t\t\t\ttSearch = true;\n\t\t\t\ttGenInfo = true;\n\t\t\t\ttRelPeople = false;\n\t\t\t\ttEpisodes = false;\n\n\t\t\t\t// clear all other things\n\n\t\t\t\twantDropDown.removeAllItems();\n\t\t\t\twantDropDown.addItem(\"General Information\");\n\t\t\t\twantDropDown.addItem(\"Cast Search\");\n\t\t\t\twantDropDown.addItem(\"Episode Search\");\n\t\t\t} else {\n\t\t\t\tnoSearch = true;\n\n\t\t\t\tpSearch = false;\n\t\t\t\tpGenInfo = false;\n\t\t\t\tpRelTitles = false;\n\t\t\t\tpJobs = false;\n\n\t\t\t\ttSearch = false;\n\t\t\t\ttGenInfo = false;\n\t\t\t\ttRelPeople = false;\n\t\t\t\ttEpisodes = false;\n\n\t\t\t\t// picked the \"\" in search\n\t\t\t\t// clear all other things\n\t\t\t\tresults.setText(\"\");\n\t\t\t\tsetPersonSectionVisible(false);\n\t\t\t\tsetTitleSectionVisible(false);\n\t\t\t\tsetEpisodeSectionVisible(false);\n\t\t\t\tsetJobSectionVisible(false);\n\t\t\t\tsearchButton.setVisible(false);\n\t\t\t\toutputDone.setVisible(false);\n\t\t\t\tsetOutputFileVisible(false, 0);\n\n\t\t\t\twantDropDown.removeAllItems();\n\t\t\t}\n\t\t} else if (e.getSource() == wantDropDown) {\n\t\t\tif (searchDropDown.getSelectedItem() == \"People\") {\n\t\t\t\tfilter.setVisible(true);\n\n\t\t\t\t// set of filters for search by\n\t\t\t\tthis.add(personName);\n\t\t\t\tpersonName.setBounds(20, 110, 120, 20);\n\t\t\t\tthis.add(personNameInput);\n\t\t\t\tpersonNameInput.setBounds(120, 110, 380, 20);\n\n\t\t\t\tthis.add(personProfession);\n\t\t\t\tpersonProfession.setBounds(20, 140, 120, 20);\n\t\t\t\tthis.add(professionDropDown);\n\t\t\t\tprofessionDropDown.setBounds(120, 140, 120, 20);\n\n\t\t\t\tthis.add(personBirth);\n\t\t\t\tpersonBirth.setBounds(260, 140, 150, 20);\n\t\t\t\tthis.add(birthYearMin);\n\t\t\t\tbirthYearMin.setBounds(380, 140, 40, 20);\n\t\t\t\tthis.add(birthAnd);\n\t\t\t\tbirthAnd.setBounds(430, 140, 40, 20);\n\t\t\t\tthis.add(birthYearMax);\n\t\t\t\tbirthYearMax.setBounds(460, 140, 40, 20);\n\n\t\t\t\tthis.add(characterText);\n\t\t\t\tcharacterText.setBounds(20, 170, 120, 20);\n\t\t\t\tthis.add(characterInput);\n\t\t\t\tcharacterInput.setBounds(120, 170, 120, 20);\n\n\t\t\t\tthis.add(personDeath);\n\t\t\t\tpersonDeath.setBounds(260, 170, 150, 20);\n\t\t\t\tthis.add(deathYearMin);\n\t\t\t\tdeathYearMin.setBounds(380, 170, 40, 20);\n\t\t\t\tthis.add(deathAnd);\n\t\t\t\tdeathAnd.setBounds(430, 170, 40, 20);\n\t\t\t\tthis.add(deathYearMax);\n\t\t\t\tdeathYearMax.setBounds(460, 170, 40, 20);\n\n\t\t\t\t// specify title filters\n\t\t\t\tthis.add(titleName);\n\t\t\t\ttitleName.setBounds(20, 220, 120, 20);\n\t\t\t\tthis.add(titleNameInput);\n\t\t\t\ttitleNameInput.setBounds(120, 220, 380, 20);\n\n\t\t\t\tthis.add(titleType);\n\t\t\t\ttitleType.setBounds(20, 250, 120, 20);\n\t\t\t\tthis.add(typeDropDown);\n\t\t\t\ttypeDropDown.setBounds(120, 250, 120, 20);\n\n\t\t\t\tthis.add(titleAdult);\n\t\t\t\ttitleAdult.setBounds(20, 280, 120, 20);\n\t\t\t\tthis.add(adultDropDown);\n\t\t\t\tadultDropDown.setBounds(120, 280, 120, 20);\n\n\t\t\t\tthis.add(titleRating);\n\t\t\t\ttitleRating.setBounds(20, 310, 150, 20);\n\t\t\t\tthis.add(ratingMin);\n\t\t\t\tratingMin.setBounds(120, 310, 40, 20);\n\t\t\t\tthis.add(ratingAnd);\n\t\t\t\tratingAnd.setBounds(170, 310, 40, 20);\n\t\t\t\tthis.add(ratingMax);\n\t\t\t\tratingMax.setBounds(200, 310, 40, 20);\n\n\t\t\t\tthis.add(titleStart);\n\t\t\t\ttitleStart.setBounds(260, 250, 150, 20);\n\t\t\t\tthis.add(startYearMin);\n\t\t\t\tstartYearMin.setBounds(380, 250, 40, 20);\n\t\t\t\tthis.add(startYearAnd);\n\t\t\t\tstartYearAnd.setBounds(430, 250, 40, 20);\n\t\t\t\tthis.add(startYearMax);\n\t\t\t\tstartYearMax.setBounds(460, 250, 40, 20);\n\n\t\t\t\tthis.add(titleEnd);\n\t\t\t\ttitleEnd.setBounds(260, 280, 150, 20);\n\t\t\t\tthis.add(endYearMin);\n\t\t\t\tendYearMin.setBounds(380, 280, 40, 20);\n\t\t\t\tthis.add(endYearAnd);\n\t\t\t\tendYearAnd.setBounds(430, 280, 40, 20);\n\t\t\t\tthis.add(endYearMax);\n\t\t\t\tendYearMax.setBounds(460, 280, 40, 20);\n\n\t\t\t\tthis.add(titleRuntime);\n\t\t\t\ttitleRuntime.setBounds(260, 310, 150, 20);\n\t\t\t\tthis.add(runtimeMin);\n\t\t\t\truntimeMin.setBounds(380, 310, 40, 20);\n\t\t\t\tthis.add(runtimeAnd);\n\t\t\t\truntimeAnd.setBounds(430, 310, 40, 20);\n\t\t\t\tthis.add(runtimeMax);\n\t\t\t\truntimeMax.setBounds(460, 310, 40, 20);\n\n\t\t\t\tthis.add(searchButton);\n\n\t\t\t\tif (wantDropDown.getSelectedItem() == \"General Information\") {\n\t\t\t\t\tpGenInfo = true;\n\t\t\t\t\tpRelTitles = false;\n\t\t\t\t\tpJobs = false;\n\n\t\t\t\t\tsearchButton.setBounds(240, 210, 80, 20);\n\t\t\t\t\tresults.setText(\"\");\n\t\t\t\t\tsetPersonSectionVisible(true);\n\t\t\t\t\tsetTitleSectionVisible(false);\n\t\t\t\t\tsetEpisodeSectionVisible(false);\n\t\t\t\t\tsetJobSectionVisible(false);\n\t\t\t\t\toutputDone.setVisible(false);\n\t\t\t\t\tsetOutputFileVisible(false, 0);\n\t\t\t\t\tsearchButton.setVisible(true);\n\t\t\t\t}\n\n\t\t\t\telse if (wantDropDown.getSelectedItem() == \"Related Titles\") {\n\t\t\t\t\tpGenInfo = false;\n\t\t\t\t\tpRelTitles = true;\n\t\t\t\t\tpJobs = false;\n\n\t\t\t\t\tsearchButton.setBounds(240, 350, 80, 20);\n\t\t\t\t\tresults.setText(\"\");\n\t\t\t\t\tsetPersonSectionVisible(true);\n\t\t\t\t\tsetTitleSectionVisible(true);\n\t\t\t\t\tsetEpisodeSectionVisible(false);\n\t\t\t\t\tsetJobSectionVisible(false);\n\t\t\t\t\toutputDone.setVisible(false);\n\t\t\t\t\tsetOutputFileVisible(false, 0);\n\t\t\t\t\tsearchButton.setVisible(true);\n\n\t\t\t\t} else if (wantDropDown.getSelectedItem() == \"Job Search\") {\n\t\t\t\t\tpGenInfo = false;\n\t\t\t\t\tpRelTitles = false;\n\t\t\t\t\tpJobs = true;\n\n\t\t\t\t\tsearchButton.setBounds(240, 210, 80, 20);\n\t\t\t\t\tresults.setText(\"\");\n\t\t\t\t\tsetPersonSectionVisible(true);\n\t\t\t\t\tsetTitleSectionVisible(false);\n\t\t\t\t\tsetEpisodeSectionVisible(false);\n\t\t\t\t\tsetJobSectionVisible(true);\n\t\t\t\t\toutputDone.setVisible(false);\n\t\t\t\t\tsetOutputFileVisible(false, 0);\n\t\t\t\t\tsearchButton.setVisible(true);\n\n\t\t\t\t}\n\t\t\t} else if (searchDropDown.getSelectedItem() == \"Titles\") {\n\t\t\t\tfilter.setVisible(true);\n\n\t\t\t\tthis.add(titleName);\n\t\t\t\ttitleName.setBounds(20, 110, 120, 20);\n\t\t\t\tthis.add(titleNameInput);\n\t\t\t\ttitleNameInput.setBounds(120, 110, 380, 20);\n\n\t\t\t\tthis.add(titleType);\n\t\t\t\ttitleType.setBounds(20, 140, 120, 20);\n\t\t\t\tthis.add(typeDropDown);\n\t\t\t\ttypeDropDown.setBounds(120, 140, 120, 20);\n\n\t\t\t\tthis.add(titleAdult);\n\t\t\t\ttitleAdult.setBounds(20, 170, 120, 20);\n\t\t\t\tthis.add(adultDropDown);\n\t\t\t\tadultDropDown.setBounds(120, 170, 120, 20);\n\n\t\t\t\tthis.add(titleRating);\n\t\t\t\ttitleRating.setBounds(20, 200, 150, 20);\n\t\t\t\tthis.add(ratingMin);\n\t\t\t\tratingMin.setBounds(120, 200, 40, 20);\n\t\t\t\tthis.add(ratingAnd);\n\t\t\t\tratingAnd.setBounds(170, 200, 40, 20);\n\t\t\t\tthis.add(ratingMax);\n\t\t\t\tratingMax.setBounds(200, 200, 40, 20);\n\n\t\t\t\tthis.add(titleStart);\n\t\t\t\ttitleStart.setBounds(260, 140, 150, 20);\n\t\t\t\tthis.add(startYearMin);\n\t\t\t\tstartYearMin.setBounds(380, 140, 40, 20);\n\t\t\t\tthis.add(startYearAnd);\n\t\t\t\tstartYearAnd.setBounds(430, 140, 40, 20);\n\t\t\t\tthis.add(startYearMax);\n\t\t\t\tstartYearMax.setBounds(460, 140, 40, 20);\n\n\t\t\t\tthis.add(titleEnd);\n\t\t\t\ttitleEnd.setBounds(260, 170, 150, 20);\n\t\t\t\tthis.add(endYearMin);\n\t\t\t\tendYearMin.setBounds(380, 170, 40, 20);\n\t\t\t\tthis.add(endYearAnd);\n\t\t\t\tendYearAnd.setBounds(430, 170, 40, 20);\n\t\t\t\tthis.add(endYearMax);\n\t\t\t\tendYearMax.setBounds(460, 170, 40, 20);\n\n\t\t\t\tthis.add(titleRuntime);\n\t\t\t\ttitleRuntime.setBounds(260, 200, 150, 20);\n\t\t\t\tthis.add(runtimeMin);\n\t\t\t\truntimeMin.setBounds(380, 200, 40, 20);\n\t\t\t\tthis.add(runtimeAnd);\n\t\t\t\truntimeAnd.setBounds(430, 200, 40, 20);\n\t\t\t\tthis.add(runtimeMax);\n\t\t\t\truntimeMax.setBounds(460, 200, 40, 20);\n\n\t\t\t\tthis.add(personName);\n\t\t\t\tpersonName.setBounds(20, 240, 120, 20);\n\t\t\t\tthis.add(personNameInput);\n\t\t\t\tpersonNameInput.setBounds(120, 240, 380, 20);\n\n\t\t\t\tthis.add(personBirth);\n\t\t\t\tpersonBirth.setBounds(260, 270, 150, 20);\n\t\t\t\tthis.add(birthYearMin);\n\t\t\t\tbirthYearMin.setBounds(380, 270, 40, 20);\n\t\t\t\tthis.add(birthAnd);\n\t\t\t\tbirthAnd.setBounds(430, 270, 40, 20);\n\t\t\t\tthis.add(birthYearMax);\n\t\t\t\tbirthYearMax.setBounds(460, 270, 40, 20);\n\n\t\t\t\tthis.add(personDeath);\n\t\t\t\tpersonDeath.setBounds(260, 300, 150, 20);\n\t\t\t\tthis.add(deathYearMin);\n\t\t\t\tdeathYearMin.setBounds(380, 300, 40, 20);\n\t\t\t\tthis.add(deathAnd);\n\t\t\t\tdeathAnd.setBounds(430, 300, 40, 20);\n\t\t\t\tthis.add(deathYearMax);\n\t\t\t\tdeathYearMax.setBounds(460, 300, 40, 20);\n\n\t\t\t\tthis.add(personProfession);\n\t\t\t\tpersonProfession.setBounds(20, 270, 120, 20);\n\t\t\t\tthis.add(professionDropDown);\n\t\t\t\tprofessionDropDown.setBounds(120, 270, 120, 20);\n\n\t\t\t\tthis.add(characterText);\n\t\t\t\tcharacterText.setBounds(20, 300, 120, 20);\n\t\t\t\tthis.add(characterInput);\n\t\t\t\tcharacterInput.setBounds(120, 300, 120, 20);\n\n\t\t\t\tthis.add(seasonText);\n\t\t\t\tseasonText.setBounds(20, 240, 120, 20);\n\t\t\t\tthis.add(seasonInput);\n\t\t\t\tseasonInput.setBounds(120, 240, 120, 20);\n\n\t\t\t\tthis.add(episodeText);\n\t\t\t\tepisodeText.setBounds(260, 240, 120, 20);\n\t\t\t\tthis.add(episodeInput);\n\t\t\t\tepisodeInput.setBounds(380, 240, 120, 20);\n\n\t\t\t\tthis.add(searchButton);\n\n\t\t\t\tif (wantDropDown.getSelectedItem() == \"General Information\") {\n\t\t\t\t\ttGenInfo = true;\n\t\t\t\t\ttRelPeople = false;\n\t\t\t\t\ttEpisodes = false;\n\n\t\t\t\t\tsearchButton.setBounds(240, 240, 80, 20);\n\t\t\t\t\tresults.setText(\"\");\n\t\t\t\t\tsetEpisodeSectionVisible(false);\n\t\t\t\t\tsetPersonSectionVisible(false);\n\t\t\t\t\tsetTitleSectionVisible(true);\n\t\t\t\t\tsetJobSectionVisible(false);\n\t\t\t\t\toutputDone.setVisible(false);\n\t\t\t\t\tsetOutputFileVisible(false, 0);\n\t\t\t\t\tsearchButton.setVisible(true);\n\n\t\t\t\t} else if (wantDropDown.getSelectedItem() == \"Cast Search\") {\n\t\t\t\t\ttGenInfo = false;\n\t\t\t\t\ttRelPeople = true;\n\t\t\t\t\ttEpisodes = false;\n\n\t\t\t\t\tsearchButton.setBounds(240, 340, 80, 20);\n\t\t\t\t\tresults.setText(\"\");\n\t\t\t\t\tsetEpisodeSectionVisible(false);\n\t\t\t\t\tsetPersonSectionVisible(true);\n\t\t\t\t\tsetTitleSectionVisible(true);\n\t\t\t\t\tsetJobSectionVisible(true);\n\t\t\t\t\toutputDone.setVisible(false);\n\t\t\t\t\tsetOutputFileVisible(false, 0);\n\t\t\t\t\tsearchButton.setVisible(true);\n\n\t\t\t\t} else if (wantDropDown.getSelectedItem() == \"Episode Search\") {\n\t\t\t\t\ttGenInfo = false;\n\t\t\t\t\ttRelPeople = false;\n\t\t\t\t\ttEpisodes = true;\n\n\t\t\t\t\tsearchButton.setBounds(240, 280, 80, 20);\n\t\t\t\t\tresults.setText(\"\");\n\t\t\t\t\tsetEpisodeSectionVisible(true);\n\t\t\t\t\tsetPersonSectionVisible(false);\n\t\t\t\t\tsetTitleSectionVisible(true);\n\t\t\t\t\tsetJobSectionVisible(false);\n\t\t\t\t\toutputDone.setVisible(false);\n\t\t\t\t\tsetOutputFileVisible(false, 0);\n\n\t\t\t\t\ttitleType.setVisible(false);\n\t\t\t\t\ttypeDropDown.setVisible(false);\n\t\t\t\t\ttypeDropDown.setSelectedItem(\"\");\n\n\t\t\t\t\tsearchButton.setVisible(true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/SearchPanel.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 42741, "method_name": "main", "class_name": "Inputdemo", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t//\u521b\u5efaScanner\u5bf9\u8c61\uff0c\u63a5\u53d7\u4ece\u63a7\u5236\u53f0\u8f93\u5165\n\t\tScanner input=new Scanner(System.in);\n\t\t//\u63a5\u53d7String\u7c7b\u578b\n\t\tString str=input.next();\n\t\t//\u8f93\u51fa\u7ed3\u679c\n\t\tSystem.out.println(str);\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/Inputdemo.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42742, "method_name": "getProcessor", "class_name": "ProcessMarkedActionEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Processor", "snippet": "\tpublic Processor getProcessor()\n\t{\n\t\treturn processor;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/ProcessMarkedActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 42743, "method_name": "getProcessIds", "class_name": "ProcessMarkedActionEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "\tpublic List<Integer> getProcessIds()\n\t{\n\t\treturn processIds;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/ProcessMarkedActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 42744, "method_name": "isStreamResponse", "class_name": "ProcessMarkedActionEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isStreamResponse()\n\t{\n\t\treturn streamResponse;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/ProcessMarkedActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 42745, "method_name": "setStreamResponse", "class_name": "ProcessMarkedActionEvent", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setStreamResponse( boolean streamResponse )\n\t{\n\t\tthis.streamResponse = streamResponse;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/ProcessMarkedActionEvent.java", "stars": "12", "class_props": {"extends": "UserEvent", "implements": null, "modifiers": ["public"]}}, {"id": 42746, "method_name": "setScrimsShown", "class_name": "XCollapsingToolbarLayout", "params": ["boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScrimsShown(boolean shown, boolean animate) {\n        super.setScrimsShown(shown, true);\n        // \u5224\u65ad\u6e10\u53d8\u72b6\u6001\u662f\u5426\u6539\u53d8\u4e86\n        if (isScrimsShown != shown) {\n            // \u5982\u679c\u662f\u5c31\u8bb0\u5f55\u5e76\u4e14\u56de\u8c03\u76d1\u542c\u5668\n            isScrimsShown = shown;\n            if (mListener != null) {\n                mListener.onScrimsStateChange(this, isScrimsShown);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/XCollapsingToolbarLayout.java", "stars": "1", "class_props": {"extends": "CollapsingToolbarLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42747, "method_name": "isScrimsShown", "class_name": "XCollapsingToolbarLayout", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isScrimsShown() {\n        return isScrimsShown;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/XCollapsingToolbarLayout.java", "stars": "1", "class_props": {"extends": "CollapsingToolbarLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42748, "method_name": "setOnScrimsListener", "class_name": "XCollapsingToolbarLayout", "params": ["OnScrimsListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnScrimsListener(OnScrimsListener listener) {\n        mListener = listener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/widget/XCollapsingToolbarLayout.java", "stars": "1", "class_props": {"extends": "CollapsingToolbarLayout", "implements": null, "modifiers": ["final", "public"]}}, {"id": 42749, "method_name": "getType", "class_name": "FailReason", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FailType", "snippet": "\tpublic FailType getType() {\n\t\treturn type;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/FailReason.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42750, "method_name": "getCause", "class_name": "FailReason", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Throwable", "snippet": "\tpublic Throwable getCause() {\n\t\treturn cause;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/FailReason.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42751, "method_name": "fazRetirada", "class_name": "CaixaEletronico", "params": ["int"], "throws": null, "modifiers": ["static"], "return_type": "void", "snippet": "\tstatic void fazRetirada(int valor) {\n\t\t\n\t\t//Testa se o valor \u00e9 v\u00e1lido, isto \u00e9, se \u00e9 maior que 0\n\t\tif (valor >= 0) {\n\t\t\t\n\t\t\t/*\n\t\t\tDivide o valor de retirada pelo valor da c\u00e9dula para saber quantas c\u00e9dulas ser\u00e3o necess\u00e1rias,\n\t\t\tarmazena, e utiliza o resto da opera\u00e7\u00e3o anterior para realizar a pr\u00f3xima divis\u00e3o.\n\t\t\t\n\t\t\tEx: 127 \n\t\t\t127 / 50 == 2\n\t\t\t127 % 50 == 27 \n\t\t\t27 / 10 == 2\n\t\t\t27 % 10 == 7\n\t\t\t7 / 5 == 1\n\t\t\t7 % 5 == 2\n\t\t\t2 / 1 == 2\n\t\t\t2 % 1 == 0\n\t\t\t*/\n\n\t\t\tn50 = (valor / 50);\n\t\t\tint resto50 = (valor % 50);\n\n\t\t\tn10 = (resto50 /10);\n\t\t\tint resto10 = (resto50 % 10);\n\n\t\t\tn5 = (resto10 / 5);\n\t\t\tint resto5 = (resto10 % 5);\n\n\t\t\tn1 = (resto5);\n\n        } else {\n\n\t\t\tn50 = -1;\n            n10 = -1;\n            n5 = -1;\n\t\t\tn1 = -1;\n\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/raulmel1o/epIP/master/ep1/CaixaEletronico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42752, "method_name": "main", "class_name": "CaixaEletronico", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// Exemplo de teste:\n\t\tfazRetirada(0);\n\t\tSystem.out.println(\"Notas de 50: \"+n50);\n\t\tSystem.out.println(\"Notas de 10: \"+n10);\n\t\tSystem.out.println(\"Notas de 5:  \"+n5);\n\t\tSystem.out.println(\"Notas de 1:  \"+n1);\n\t}", "url": "https://raw.githubusercontent.com/raulmel1o/epIP/master/ep1/CaixaEletronico.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42753, "method_name": "main", "class_name": "SampleRSocketApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSpringApplication.run(SampleRSocketApplication.class, args);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-rsocket/src/main/java/smoketest/rsocket/SampleRSocketApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42754, "method_name": "getArg0", "class_name": "GetContractObjects", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getArg0() {\n        return arg0;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/GetContractObjects.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42755, "method_name": "setArg0", "class_name": "GetContractObjects", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg0(int value) {\n        this.arg0 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/GetContractObjects.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42756, "method_name": "isArg1", "class_name": "GetContractObjects", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isArg1() {\n        return arg1;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/GetContractObjects.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42757, "method_name": "setArg1", "class_name": "GetContractObjects", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg1(boolean value) {\n        this.arg1 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/GetContractObjects.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42758, "method_name": "Update", "class_name": "Animation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void Update(){\n\t\ttimer += System.currentTimeMillis() - lastTime;\n\t\tlastTime = System.currentTimeMillis();\n\t\t\n\t\tif(timer > speed){\n\t\t\tindex++;\n\t\t\ttimer = 0;\n\t\t\tif(index >= frames.length)\n\t\t\t\tindex = 0;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Animation.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42759, "method_name": "getAnimationName", "class_name": "Animation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getAnimationName() {\n\t\treturn name;\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Animation.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42760, "method_name": "getCurrentFrame", "class_name": "Animation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BufferedImage", "snippet": "\tpublic BufferedImage getCurrentFrame(){\n\t\treturn frames[index];\n\t}", "url": "https://raw.githubusercontent.com/jabo-bernardo/Kree-Java/master/src/dev/jabo/kree/Animation.java", "stars": "33", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42761, "method_name": "create", "class_name": "OrderServiceImplTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void create() {\n        OrderDTO orderDTO = new OrderDTO();\n        orderDTO.setBuyerName(\"\u5f20\u4e09\");\n        orderDTO.setBuyerPhone(\"13678787878\");\n        orderDTO.setBuyerAddress(\"\u5e7f\u4e1c\u7701\u6df1\u5733\u5e02\u7f57\u6e56\u533a\u79d1\u6280\u8def123\u53f7456\u5ba4\");\n        orderDTO.setSpecsId(1);\n        orderDTO.setPhoneQuantity(1);\n\n        OrderDTO result = orderService.create(orderDTO);\n        System.out.println(result);\n    }", "url": "https://raw.githubusercontent.com/southwind9801/phone_store_demo_springboot/master/src/test/java/com/southwind/phone_store_demo/service/impl/OrderServiceImplTest.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42762, "method_name": "findDetail", "class_name": "OrderServiceImplTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void findDetail(){\n        OrderDetailVO orderDetailVO = orderService.findOrderDetailByOrderId(\"1586492591082686753\");\n        int id = 10;\n    }", "url": "https://raw.githubusercontent.com/southwind9801/phone_store_demo_springboot/master/src/test/java/com/southwind/phone_store_demo/service/impl/OrderServiceImplTest.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42763, "method_name": "pay", "class_name": "OrderServiceImplTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void pay(){\n        System.out.println(orderService.pay(\"1586492591082686753\"));\n    }", "url": "https://raw.githubusercontent.com/southwind9801/phone_store_demo_springboot/master/src/test/java/com/southwind/phone_store_demo/service/impl/OrderServiceImplTest.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42764, "method_name": "getTimerTask", "class_name": "TimeBasedReportingMetric", "params": [], "throws": null, "modifiers": ["private"], "return_type": "TimerTask", "snippet": "  private TimerTask getTimerTask() {\n    final TimeBasedReportingMetric<T> lockObject = this;\n    final TimerTask recurringReporting = new TimerTask() {\n      @Override\n      public void run() {\n        synchronized (lockObject) {\n          preTrackingEventMethod();\n          notifyManager();\n          postTrackingEventMethod();\n        }\n      }\n    };\n    return recurringReporting;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/metric/TimeBasedReportingMetric.java", "stars": "18", "class_props": {"extends": "AbstractMetric", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42765, "method_name": "updateInterval", "class_name": "TimeBasedReportingMetric", "params": ["long"], "throws": ["MetricException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void updateInterval(final long interval) throws MetricException {\n    if (!isValidInterval(interval)) {\n      throw new MetricException(\"Invalid interval: Cannot update timer\");\n    }\n    logger.debug(String\n        .format(\"Updating tracking interval to %d milisecond for %s metric\", interval, getName()));\n    this.timer.cancel();\n    this.timer = new Timer();\n    this.timer.schedule(getTimerTask(), interval, interval);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/metric/TimeBasedReportingMetric.java", "stars": "18", "class_props": {"extends": "AbstractMetric", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42766, "method_name": "isValidInterval", "class_name": "TimeBasedReportingMetric", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isValidInterval(final long interval) {\n    return interval >= this.MIN_MILLISEC_INTERVAL && interval <= this.MAX_MILLISEC_INTERVAL;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/metric/TimeBasedReportingMetric.java", "stars": "18", "class_props": {"extends": "AbstractMetric", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42767, "method_name": "preTrackingEventMethod", "class_name": "TimeBasedReportingMetric", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "  protected abstract void preTrackingEventMethod();\n\n  /**\n   * This method is responsible for making any post processing after tracking\n   */\n  protected abstract void postTrackingEventMethod();\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/metric/TimeBasedReportingMetric.java", "stars": "18", "class_props": {"extends": "AbstractMetric", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42768, "method_name": "postTrackingEventMethod", "class_name": "TimeBasedReportingMetric", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "  protected abstract void postTrackingEventMethod();\n\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/metric/TimeBasedReportingMetric.java", "stars": "18", "class_props": {"extends": "AbstractMetric", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42769, "method_name": "configure", "class_name": "OAuth2Config", "params": ["ClientDetailsServiceConfigurer"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void configure(ClientDetailsServiceConfigurer clients) throws Exception {\n\t\tclients.inMemory()\n\t\t\t.withClient(\"cloudsimpleservice\")\n\t\t\t.secret(\"mysecret\")\n\t\t\t.authorizedGrantTypes(\n\t\t\t\t\"refesh_token\",\n\t\t\t\t\"password\",\n\t\t\t\t\"client_credentials\")\n\t\t\t.scopes(\"webclient\", \"mobileclient\");\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-auth-service/src/main/java/com/iiht/stock/auth/security/OAuth2Config.java", "stars": "2", "class_props": {"extends": "AuthorizationServerConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42770, "method_name": "configure", "class_name": "OAuth2Config", "params": ["AuthorizationServerSecurityConfigurer"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void configure(AuthorizationServerSecurityConfigurer security) throws Exception {\n\t\tsecurity.tokenKeyAccess(\"permitAll()\")\n\t\t\t\t.checkTokenAccess(\"isAuthenticated()\");\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-auth-service/src/main/java/com/iiht/stock/auth/security/OAuth2Config.java", "stars": "2", "class_props": {"extends": "AuthorizationServerConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42771, "method_name": "configure", "class_name": "OAuth2Config", "params": ["AuthorizationServerEndpointsConfigurer"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void configure(AuthorizationServerEndpointsConfigurer endpoints) throws Exception {\n\t\tendpoints\n\t\t\t.authenticationManager(authenticationManager)\n\t\t\t.userDetailsService(userDetailsService);\n\t}", "url": "https://raw.githubusercontent.com/bruinli28/stockmarket/master/cloud-auth-service/src/main/java/com/iiht/stock/auth/security/OAuth2Config.java", "stars": "2", "class_props": {"extends": "AuthorizationServerConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 42772, "method_name": "updateSender", "class_name": "NDIThread", "params": ["DevolaySender"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateSender(DevolaySender sender){\n        this.sender.get().close();\n        this.sender.set(sender);\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 42773, "method_name": "updateVideoFrame", "class_name": "NDIThread", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateVideoFrame(int width, int height){\n        this.width.set(width);\n        this.height.set(height);\n        DevolayVideoFrame videoFrame1 = videoFrame.get();\n        videoFrame1.setResolution(width, height);\n        videoFrame1.setLineStride(width * 4);\n        videoFrame.set(videoFrame1);\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 42774, "method_name": "setByteBuffer", "class_name": "NDIThread", "params": ["ByteBuffer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setByteBuffer(ByteBuffer buffer){\n        this.byteBuffer.set(buffer);\n        this.needsFrame.set(false);\n        this.hasFlipped.set(false);\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 42775, "method_name": "getNeedsFrame", "class_name": "NDIThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "AtomicBoolean", "snippet": "    public AtomicBoolean getNeedsFrame(){\n        return needsFrame;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 42776, "method_name": "end", "class_name": "NDIThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void end(){\n        this.running = false;\n        videoFrame.get().close();\n        sender.get().close();\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 42777, "method_name": "run", "class_name": "NDIThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        int frameCounter = 0;\n        long fpsPeriod = System.currentTimeMillis();\n        long lastFrame = System.currentTimeMillis();\n        float amountofTime = (1f / 30f) * 1000;\n        while(running) {\n            long timeSinceLastFrame = System.currentTimeMillis() - lastFrame;\n            if(timeSinceLastFrame < amountofTime){\n                try {\n                    Thread.sleep((long) (amountofTime - timeSinceLastFrame));\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                continue;\n            }\n            if(sender.get().getConnectionCount(0) < 1){\n                try {\n                    Thread.sleep(500);\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n                continue;\n            }\n            if(needsFrame.get()){\n                continue;\n            }\n            DevolayVideoFrame frame = videoFrame.get();\n            ByteBuffer buffer = byteBuffer.get();\n            frame.setData(buffer);\n            this.sender.get().sendVideoFrame(frame);\n            needsFrame.set(true);\n            lastFrame = System.currentTimeMillis();\n            if(frameCounter % 30 == 29) {\n                long timeSpent = System.currentTimeMillis() - fpsPeriod;\n                System.out.println(\"Sent 30 frames. Average FPS: \" + 30f / (timeSpent / 1000f));\n                fpsPeriod = System.currentTimeMillis();\n            }\n\n            frameCounter++;\n        }\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/threads/NDIThread.java", "stars": "5", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["public"]}}, {"id": 42778, "method_name": "onCreate", "class_name": "UserProfile", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_user_profile);\n\n        fullName =findViewById(R.id.full_name_profile);\n        email =findViewById(R.id.email_profile);\n        phoneNo =findViewById(R.id.phone_no_profile);\n        password =findViewById(R.id.password_profile);\n        fullNameLabel = findViewById(R.id.fullname_field);\n        usernameLabel = findViewById(R.id.username_field);\n\n        reference = FirebaseDatabase.getInstance().getReference(\"users\");\n\n        // show all Data\n        showAllUserData();\n\n\n    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/UserProfile.java", "stars": "3", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 42779, "method_name": "showAllUserData", "class_name": "UserProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showAllUserData() {\n\n        Intent intent = getIntent();\n         user_username = intent.getStringExtra(\"username\");\n         user_name = intent.getStringExtra(\"name\");\n         user_email = intent.getStringExtra(\"email\");\n         user_phoneNo = intent.getStringExtra(\"phoneNo\");\n         user_password = intent.getStringExtra(\"password\");\n\n        fullNameLabel.setText(user_name);\n        usernameLabel.setText(user_username);\n        fullName.getEditText().setText(user_name);\n        email.getEditText().setText(user_email);\n        phoneNo.getEditText().setText(user_phoneNo);\n        password.getEditText().setText(user_password);\n\n    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/UserProfile.java", "stars": "3", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 42780, "method_name": "update", "class_name": "UserProfile", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void update(View view){\n\n        if(isNameChanged() || isPasswordChanged()  ){\n            Toast.makeText(this, \"Data has been updated\", Toast.LENGTH_LONG).show();\n\n        }\n        else Toast.makeText(this,\"Data is same and cannot be updated\",Toast.LENGTH_LONG).show();\n\n    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/UserProfile.java", "stars": "3", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 42781, "method_name": "isPasswordChanged", "class_name": "UserProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private Boolean isPasswordChanged(){\n        if(!user_password.equals(password.getEditText().getText().toString()))\n        {\n            reference.child(user_username).child(\"password\").setValue(password.getEditText().getText().toString());\n            user_password=password.getEditText().getText().toString();\n            return true;\n        }else{\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/UserProfile.java", "stars": "3", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 42782, "method_name": "isNameChanged", "class_name": "UserProfile", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "    private  Boolean isNameChanged(){\n        if(!user_name.equals(fullName.getEditText().getText().toString())){\n            reference.child(user_username).child(\"name\").setValue(fullName.getEditText().getText().toString());\n            user_name=fullName.getEditText().getText().toString();\n            return true;\n        }else{\n            return false;\n\n    }\n\n\n}", "url": "https://raw.githubusercontent.com/yashjoshi007/HouseRent/master/app/src/main/java/com/example/houserent/UserProfile.java", "stars": "3", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 42783, "method_name": "getGateId", "class_name": "ContractGate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getGateId()\n\t{\n\t\treturn gateId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/ipn/ContractGate.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public"]}}, {"id": 42784, "method_name": "getTypeId", "class_name": "ContractGate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getTypeId()\n\t{\n\t\treturn typeId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/ipn/ContractGate.java", "stars": "12", "class_props": {"extends": "IdTitle", "implements": null, "modifiers": ["public"]}}, {"id": 42785, "method_name": "getFieldOrder", "class_name": "MachPortTypeReply", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"NDR\", \"retCode\", \"ptype\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/MachPortTypeReply.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 42786, "method_name": "onDraw", "class_name": "Practice08MatrixScaleView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        int bitmapWidth = bitmap.getWidth();\n        int bitmapHeight = bitmap.getHeight();\n\n        canvas.save();\n        matrix.reset();\n        matrix.postScale(1.3f, 1.3f, point1.x + bitmapWidth / 2, point1.y + bitmapHeight / 2);\n        canvas.concat(matrix);\n        canvas.drawBitmap(bitmap, point1.x, point1.y, paint);\n        canvas.restore();\n\n        canvas.save();\n        matrix.reset();\n        matrix.postScale(0.6f, 1.6f, point2.x + bitmapWidth / 2, point2.y + bitmapHeight / 2);\n        canvas.concat(matrix);\n        canvas.drawBitmap(bitmap, point2.x, point2.y, paint);\n        canvas.restore();\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson4/Practice08MatrixScaleView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 42787, "method_name": "getType", "class_name": "LdcInsnNode", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getType() {\n    return LDC_INSN;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/tree/LdcInsnNode.java", "stars": "97", "class_props": {"extends": "AbstractInsnNode", "implements": null, "modifiers": ["public"]}}, {"id": 42788, "method_name": "accept", "class_name": "LdcInsnNode", "params": ["MethodVisitor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void accept(final MethodVisitor methodVisitor) {\n    methodVisitor.visitLdcInsn(cst);\n    acceptAnnotations(methodVisitor);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/tree/LdcInsnNode.java", "stars": "97", "class_props": {"extends": "AbstractInsnNode", "implements": null, "modifiers": ["public"]}}, {"id": 42789, "method_name": "clone", "class_name": "LdcInsnNode", "params": ["Map<LabelNode,LabelNode>"], "throws": null, "modifiers": ["public"], "return_type": "AbstractInsnNode", "snippet": "  public AbstractInsnNode clone(final Map<LabelNode, LabelNode> clonedLabels) {\n    return new LdcInsnNode(cst).cloneAnnotations(this);\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/tree/LdcInsnNode.java", "stars": "97", "class_props": {"extends": "AbstractInsnNode", "implements": null, "modifiers": ["public"]}}, {"id": 42790, "method_name": "initCombat", "class_name": "SpaceAmoeba", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void initCombat() {\n        combatStacks().clear();\n        addCombatStack(new CombatStackSpaceAmoeba());       \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceAmoeba.java", "stars": "74", "class_props": {"extends": "SpaceMonster", "implements": null, "modifiers": ["public"]}}, {"id": 42791, "method_name": "destroyColony", "class_name": "SpaceAmoeba", "params": ["StarSystem"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void destroyColony(StarSystem sys) {\n        Colony col = sys.colony();\n        if (col != null) {\n            sys.empire().lastAttacker(monster);\n            sys.planet().degradeToType(PlanetType.BARREN);\n            float prevFact = col.industry().factories();\n            col.industry().factories(prevFact*0.1f);\n            sys.planet().resetWaste();\n            col.destroy();\n        }        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/SpaceAmoeba.java", "stars": "74", "class_props": {"extends": "SpaceMonster", "implements": null, "modifiers": ["public"]}}, {"id": 42792, "method_name": "haveNodeIdsPermission", "class_name": "ExecNodeInfoServiceImpl", "params": ["String", "List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean haveNodeIdsPermission(String appUser, List<Integer> execNodeIds) {\n        execNodeIds = execNodeIds.stream().map(String::valueOf)\n                .distinct()\n                .map(Integer::valueOf).collect(Collectors.toList());\n        List<ExecutorNode> nodes = userExecNodeDao.getExecNodeByUserAndIds(appUser, execNodeIds);\n        List<Integer> nodeIds = nodes.stream().map(ExecutorNode::getId).distinct().collect(Collectors.toList());\n        if(nodeIds.size() < execNodeIds.size()){\n            List<Integer> copyExecNodeIds = new ArrayList<>(execNodeIds);\n            copyExecNodeIds.removeAll(nodeIds);\n            int defaultNodes = execNodeDao.countDefaultByIds(copyExecNodeIds);\n            return defaultNodes == copyExecNodeIds.size();\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42793, "method_name": "haveNodeNamesPermission", "class_name": "ExecNodeInfoServiceImpl", "params": ["String", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Pair<List,Boolean>", "snippet": "    public Pair<List<ExecutorNode>, Boolean> haveNodeNamesPermission(String appUser, List<String> execNodeNames) {\n        execNodeNames = execNodeNames.stream().distinct().collect(Collectors.toList());\n        List<ExecutorNode> nodes = userExecNodeDao.getExecNodeByUserAndNames(appUser, execNodeNames);\n        List<String> nodeNames = nodes.stream().map(ExecutorNode::getAddress).distinct().collect(Collectors.toList());\n        if(nodeNames.size() < execNodeNames.size()){\n            List<String> copyExecNodeNames = new ArrayList<>(execNodeNames);\n            copyExecNodeNames.removeAll(nodeNames);\n            int defaultNodes = execNodeDao.countDefaultByNames(copyExecNodeNames);\n            return new MutablePair<>(nodes, defaultNodes == copyExecNodeNames.size());\n        }\n        return new MutablePair<>(nodes,true);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42794, "method_name": "getExecNodeByUserAndNames", "class_name": "ExecNodeInfoServiceImpl", "params": ["String", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "List<ExecutorNode>", "snippet": "    public List<ExecutorNode> getExecNodeByUserAndNames(String appUser, List<String> execNodeNames) {\n        return userExecNodeDao.getExecNodeByUserAndNames(appUser, execNodeNames);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42795, "method_name": "getExecNodesByAppUser", "class_name": "ExecNodeInfoServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<ExecutorNode>", "snippet": "    public List<ExecutorNode> getExecNodesByAppUser(String appUser) {\n        return  userExecNodeDao.getExecNodeByUser(appUser);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42796, "method_name": "getExecNodesByAppUserAndTab", "class_name": "ExecNodeInfoServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "List<ExecutorNode>", "snippet": "    public List<ExecutorNode> getExecNodesByAppUserAndTab(String appUser, String tabName) {\n        return userExecNodeDao.getExecNodeByUserAndTab(appUser, tabName);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42797, "method_name": "getExecNodeUser", "class_name": "ExecNodeInfoServiceImpl", "params": ["Integer", "String"], "throws": null, "modifiers": ["public"], "return_type": "ExecNodeUser", "snippet": "    public ExecNodeUser getExecNodeUser(Integer nodeId, String execUser) {\n        return execNodeUserDao.selectOne(nodeId, execUser);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42798, "method_name": "bindExecNodeAndUsers", "class_name": "ExecNodeInfoServiceImpl", "params": ["ExecNodeUserBind"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int bindExecNodeAndUsers(ExecNodeUserBind bind) {\n        Integer nodeId = bind.getNodeId();\n        ExecutorNode node = execNodeDao.selectOne(nodeId);\n        if(null != node && !bind.getExecUserList().isEmpty()) {\n            String address = node.getAddress();\n            List<ExecUser> execUserList =  bind.getExecUserList();\n            ExecNodeUserBind.BindOpType opType = bind.getOpType();\n            ExecNodeInfoService execNodeInfoService = (ExecNodeInfoService)AopContext.currentProxy();\n            execNodeInfoService.bindExecNodeAndUsers(nodeId, execUserList);\n            if(opType == ExecNodeUserBind.BindOpType.BIND_RELATE){\n                AtomicInteger count = new AtomicInteger();\n                execUserList.forEach(execUser -> {\n                    try {\n                        ExecNodeUser execNodeUser = execNodeUserDao.selectOne(nodeId, execUser.getExecUser());\n                        if (execNodeInfoService.relateExecNodeAndUser(address, execNodeUser)) {\n                            count.getAndIncrement();\n                        }\n                    }catch(Exception e){\n                        LOG.error(e.getMessage(), e);\n                    }\n                });\n                return count.get();\n            }else{\n                return execUserList.size();\n            }\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42799, "method_name": "bindAndRelateExecNodesAndUser", "class_name": "ExecNodeInfoServiceImpl", "params": ["List<Integer>", "List<String>", "ExecUser"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int bindAndRelateExecNodesAndUser(List<Integer> nodeIds, List<String> nodeNames, ExecUser execUser) {\n        List<ExecNodeUser> execNodeUsers = new ArrayList<>();\n        nodeIds.forEach(nodeId -> {\n            ExecNodeUser execNodeUser = new ExecNodeUser();\n            execNodeUser.setExecNodeId(nodeId);\n            execNodeUser.setExecUser(execUser.getExecUser());\n            execNodeUser.setUpdateTime(Calendar.getInstance().getTime());\n            execNodeUsers.add(execNodeUser);\n        });\n        execNodeUserDao.insertBatch(execNodeUsers);\n        ExecNodeInfoService execNodeInfoService = (ExecNodeInfoService)AopContext.currentProxy();\n        AtomicInteger count = new AtomicInteger();\n        for(int i = 0 ; i < nodeIds.size(); i ++){\n            Integer nodeId = nodeIds.get(i);\n            String nodeName = nodeNames.size() > i ? nodeNames.get(i) : \"\";\n            try {\n                ExecNodeUser execNodeUser = execNodeUserDao.selectOne(nodeId, execUser.getExecUser());\n                if (execNodeInfoService.relateExecNodeAndUser(nodeName, execNodeUser)) {\n                    count.getAndIncrement();\n                }\n            }catch(Exception e){\n                LOG.error(e.getMessage(), e);\n            }\n        }\n        return count.get();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42800, "method_name": "bindExecNodeAndUsers", "class_name": "ExecNodeInfoServiceImpl", "params": ["Integer", "List<ExecUser>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void bindExecNodeAndUsers(Integer nodeId, List<ExecUser> execUsers) {\n        List<ExecNodeUser> execNodeUsers = new ArrayList<>();\n        execUsers.forEach(execUser -> {\n            ExecNodeUser execNodeUser = new ExecNodeUser();\n            execNodeUser.setExecNodeId(nodeId);\n            execNodeUser.setExecUser(execUser.getExecUser());\n            execNodeUser.setUpdateTime(Calendar.getInstance().getTime());\n            execNodeUsers.add(execNodeUser);\n        });\n        execNodeUserDao.insertBatch(execNodeUsers);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42801, "method_name": "unBindExecNodeAndUser", "class_name": "ExecNodeInfoServiceImpl", "params": ["ExecNodeUser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void unBindExecNodeAndUser(ExecNodeUser execNodeUser) {\n        ExecutorNode node = execNodeDao.selectOne(execNodeUser.getExecNodeId());\n        String address = null == node?null : node.getAddress();\n        if(StringUtils.isNotBlank(address)){\n            if(execNodeUser.getUid() != null) {\n                int result = execNodeUserDao.markDelete(execNodeUser.getExecNodeId(), execNodeUser.getExecUser());\n                if (result > 0) {\n                    try {\n                        Response<String> response = executeService.deleteSysUser(address, execNodeUser.getExecUser());\n                        if (response.getCode() != 0) {\n                            LOG.info(\"Fail to delete system user in executor, message: \" + response.getMessage());\n                        }\n                    } catch (Exception e) {\n                        LOG.error(\"Error to delete system user in executor\", e);\n                    }\n                }\n            }else{\n                execNodeUserDao.delete(execNodeUser.getExecNodeId(), execNodeUser.getExecUser());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42802, "method_name": "relateExecNodeAndUser", "class_name": "ExecNodeInfoServiceImpl", "params": ["String", "ExecNodeUser"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean relateExecNodeAndUser(String address, ExecNodeUser execNodeUser) {\n        boolean result = false;\n        if(StringUtils.isBlank(address)){\n            ExecutorNode node = execNodeDao.selectOne(execNodeUser.getExecNodeId());\n            address = null == node?address : node.getAddress();\n        }\n        if(StringUtils.isNotBlank(address)){\n            String execUser = execNodeUser.getExecUser();\n            Long uid = (long) (null == execNodeUser.getUid() ? -1 : execNodeUser.getUid());\n            String userType = execNodeUser.getUserType();\n            if(uid < 0){\n                Pair<String, Long> pair = uidGenerator.generate(execNodeUser.getExecNodeId(), execUser);\n                userType = pair.getLeft();\n                uid = pair.getRight();\n            }\n            try {\n                Response<ExecSysUser> response = executeService\n                        .createSysUser(address, execUser, Math.toIntExact(uid), PlatformUidGenerator.DEFAULT_EXEC_USER_GROUP_ID);\n                if (response.getCode() == 0) {\n                    ExecSysUser sysUser = response.getData();\n                    execNodeUser.setUserType(userType);\n                    execNodeUser.setUid(sysUser.getUid());\n                    execNodeUser.setGid(sysUser.getGid());\n                    execNodeUser.setRelationState(1);\n                    result = true;\n                } else {\n                    execNodeUser.setRelationState(2);\n                    LOG.error(\"Fail to associate executive user: \" + execUser + \", response msg:\" + response.getMessage());\n                }\n            }catch(Exception e){\n                execNodeUser.setRelationState(2);\n                LOG.error(\"Fail to associate executive user: \" + execUser + \", error msg:\" + e.getMessage());\n            }\n            execNodeUserDao.updateOne(execNodeUser);\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42803, "method_name": "notRelateExecNodeAndUser", "class_name": "ExecNodeInfoServiceImpl", "params": ["ExecNodeUser"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean notRelateExecNodeAndUser(ExecNodeUser execNodeUser) {\n        execNodeUser.setRelationState(0);\n        execNodeUserDao.updateOne(execNodeUser);\n        return true;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42804, "method_name": "findExecNodeUserPage", "class_name": "ExecNodeInfoServiceImpl", "params": ["ExecNodeUserQuery"], "throws": null, "modifiers": ["public"], "return_type": "PageList<ExecNodeUser>", "snippet": "    public PageList<ExecNodeUser> findExecNodeUserPage(ExecNodeUserQuery query) {\n        Long count = execNodeUserDao.count(query);\n        int currentPage = query.getPage();\n        int pageSize = query.getPageSize();\n        PageList<ExecNodeUser> page = new PageList<>(new Paginator(currentPage, pageSize, count.intValue()));\n        int offset = currentPage > 0 ? (currentPage - 1) * pageSize : 0;\n        List<ExecNodeUser> result = execNodeUserDao.findPage(query, new RowBounds(offset, pageSize));\n        page.setData(result);\n        return page;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42805, "method_name": "selectExecNode", "class_name": "ExecNodeInfoServiceImpl", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "ExecutorNode", "snippet": "    public ExecutorNode selectExecNode(Integer nodeId) {\n        return execNodeDao.selectOne(nodeId);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42806, "method_name": "attachTab", "class_name": "ExecNodeInfoServiceImpl", "params": ["ExecNodeTabRelation"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void attachTab(ExecNodeTabRelation relation) {\n        List<Integer> tabIds = relation.getTabIds();\n        if(tabIds.isEmpty() && !relation.getTabNames().isEmpty()) {\n            tabIds = tabDao.getTabIdsByNameList(relation.getTabNames());\n        }\n        if(!tabIds.isEmpty()){\n            List<Integer> oldTabIds = execNodeTabDao.getTabIdsByExecNode(relation.getNodeId());\n            List<Integer> removeTabIds = new ArrayList<>(oldTabIds);\n            removeTabIds.removeAll(tabIds);\n            if (!removeTabIds.isEmpty()) {\n                //delete\n                execNodeTabDao.deleteBatch(relation.getNodeId(), removeTabIds);\n            }\n            tabIds.removeAll(oldTabIds);\n            if (!tabIds.isEmpty()) {\n                //add\n                List<TabEntity> tabEntities = tabDao.getTabsByIds(tabIds);\n                List<ExecNodeTab> attachTabs = new ArrayList<>();\n                tabEntities.forEach(tabEntity -> attachTabs.add(new ExecNodeTab(relation.getNodeId(), tabEntity.getId(), tabEntity.getName())));\n                execNodeTabDao.insertBatch(attachTabs);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42807, "method_name": "getExecNodeUserList", "class_name": "ExecNodeInfoServiceImpl", "params": ["List<Integer>", "String"], "throws": null, "modifiers": ["public"], "return_type": "List<ExecNodeUser>", "snippet": "    public List<ExecNodeUser> getExecNodeUserList(List<Integer> execNodes, String execUser) {\n        return execNodeUserDao.listByExecNodeIdsAndUser(execNodes, execUser);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42808, "method_name": "deleteNode", "class_name": "ExecNodeInfoServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deleteNode(Long id) {\n        ExecutorNode node = execNodeDao.selectOne(id);\n        //Delete relation of node and executive user\n        execNodeUserDao.deleteByNodeId(node.getId());\n        //Delete relation of node and app user\n        userExecNodeDao.deleteByNodeId(node.getId());\n        execNodeDao.delete(Collections.singletonList(id));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42809, "method_name": "changeDefault", "class_name": "ExecNodeInfoServiceImpl", "params": ["Integer", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean changeDefault(Integer nodeId, boolean value) {\n        return execNodeDao.updateDefault(nodeId, value) > 0;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42810, "method_name": "getDefaultNodeListByTab", "class_name": "ExecNodeInfoServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "List<ExecutorNode>", "snippet": "    public List<ExecutorNode> getDefaultNodeListByTab(String tabName) {\n        return execNodeDao.getDefaultNodesByTab(tabName);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/exec/service/impl/ExecNodeInfoServiceImpl.java", "stars": "23", "class_props": {"extends": null, "implements": ["ExecNodeInfoService"], "modifiers": ["public"]}}, {"id": 42811, "method_name": "init", "class_name": "UnexploredSystemPanel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        initModel();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 42812, "method_name": "topPane", "class_name": "UnexploredSystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel topPane() { return null; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 42813, "method_name": "bottomPane", "class_name": "UnexploredSystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel bottomPane() {\n        return new SystemRangePane(this);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 42814, "method_name": "detailPane", "class_name": "UnexploredSystemPanel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "BasePanel", "snippet": "    protected BasePanel detailPane() {\n        return new UnexploredDetailPane(parentSpritePanel);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "SystemPanel", "implements": null, "modifiers": ["public"]}}, {"id": 42815, "method_name": "init", "class_name": "UnexploredDetailPane", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "        private void init() {\n            setOpaque(true);\n            setBackground(Color.black);\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["public"]}}, {"id": 42816, "method_name": "starBackgroundC", "class_name": "UnexploredDetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Color", "snippet": "        public Color starBackgroundC()  { return SystemPanel.starBackgroundC; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["public"]}}, {"id": 42817, "method_name": "hasStarBackground", "class_name": "UnexploredDetailPane", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean hasStarBackground()     { return true; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["public"]}}, {"id": 42818, "method_name": "paintComponent", "class_name": "UnexploredDetailPane", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void paintComponent(Graphics g) {\n            StarSystem sys = parent.systemViewToDisplay();\n            if (sys == null)\n                return;\n\n            super.paintComponent(g);\n            int h = getHeight();\n\n            Graphics2D g2 = (Graphics2D) g;\n            drawStar(g2, sys.starType(), s40, getWidth()/2, getHeight()/2);\n\n            g.setFont(narrowFont(36));\n            String label = text(\"MAIN_UNEXPLORED_SYSTEM\");\n            drawBorderedString(g, label, 2, s25, s42, Color.black, SystemPanel.orangeText);\n\n            g.setFont(narrowFont(16));\n            g.setColor(grayText);\n            List<String> descLines =  wrappedLines(g, text(sys.starType().description()), getWidth()-s12);\n\n            int ydelta = s18;\n            int y0=h-s8-(ydelta*(descLines.size()-1));\n            for (String line: descLines) {\n                g.drawString(line, s8, y0);\n                y0 += ydelta;\n            }\n        }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/main/UnexploredSystemPanel.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": null, "modifiers": ["public"]}}, {"id": 42819, "method_name": "getUserId", "class_name": "UserToken", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42820, "method_name": "setUserId", "class_name": "UserToken", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(Long userId) {\n        this.userId = userId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42821, "method_name": "getUsername", "class_name": "UserToken", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUsername() {\n        return username;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42822, "method_name": "setUsername", "class_name": "UserToken", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUsername(String username) {\n        this.username = username;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42823, "method_name": "getName", "class_name": "UserToken", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42824, "method_name": "setName", "class_name": "UserToken", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42825, "method_name": "getPassword", "class_name": "UserToken", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPassword() {\n        return password;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42826, "method_name": "setPassword", "class_name": "UserToken", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPassword(String password) {\n        this.password = password;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42827, "method_name": "getDeptId", "class_name": "UserToken", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Long", "snippet": "    public Long getDeptId() {\n        return deptId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42828, "method_name": "setDeptId", "class_name": "UserToken", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDeptId(Long deptId) {\n        this.deptId = deptId;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/domain/UserToken.java", "stars": "137", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42829, "method_name": "getBpmnElementType", "class_name": "UserTaskXMLConverter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Class<BaseElement>", "snippet": "    public Class<? extends BaseElement> getBpmnElementType() {\n        return UserTask.class;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42830, "method_name": "getXMLElementName", "class_name": "UserTaskXMLConverter", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getXMLElementName() {\n        return ELEMENT_TASK_USER;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42831, "method_name": "convertXMLToElement", "class_name": "UserTaskXMLConverter", "params": ["XMLStreamReader", "BpmnModel"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "BaseElement", "snippet": "    protected BaseElement convertXMLToElement(XMLStreamReader xtr,\n                                              BpmnModel model) throws Exception {\n        String formKey = xtr.getAttributeValue(null, ATTRIBUTE_FORM_FORMKEY);\n        UserTask userTask = null;\n        if (StringUtils.isNotEmpty(formKey)) {\n            if (model.getUserTaskFormTypes() != null\n                    && model.getUserTaskFormTypes().contains(formKey)) {\n                userTask = new AlfrescoUserTask();\n            }\n        }\n        if (userTask == null) {\n            userTask = new UserTask();\n        }\n        BpmnXMLUtil.addXMLLocation(userTask, xtr);\n        userTask\n                .setDueDate(xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_DUEDATE));\n        userTask\n                .setCategory(xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_CATEGORY));\n        userTask.setFormKey(formKey);\n        userTask\n                .setAssignee(xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_ASSIGNEE));\n        userTask.setOwner(xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_OWNER));\n        userTask\n                .setPriority(xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_PRIORITY));\n        \n        if (StringUtils.isNotEmpty(\n                xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_CANDIDATEUSERS))) {\n            String expression = xtr.getAttributeValue(null,\n                    ATTRIBUTE_TASK_USER_CANDIDATEUSERS);\n            userTask.getCandidateUsers().addAll(parseDelimitedList(expression));\n        }\n        \n        if (StringUtils.isNotEmpty(\n                xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_CANDIDATEGROUPS))) {\n            String expression = xtr.getAttributeValue(null,\n                    ATTRIBUTE_TASK_USER_CANDIDATEGROUPS);\n            userTask.getCandidateGroups().addAll(parseDelimitedList(expression));\n        }\n        \n        userTask.setExtensionId(\n                xtr.getAttributeValue(null, ATTRIBUTE_TASK_SERVICE_EXTENSIONID));\n        \n        if (StringUtils.isNotEmpty(\n                xtr.getAttributeValue(null, ATTRIBUTE_TASK_USER_SKIP_EXPRESSION))) {\n            String expression = xtr.getAttributeValue(null,\n                    ATTRIBUTE_TASK_USER_SKIP_EXPRESSION);\n            userTask.setSkipExpression(expression);\n        }\n        // \u5168\u90e8\u7684\u5c5e\u6027\u90fd\u5728\u8fd9\u91cc\n        BpmnXMLUtil.addCustomAttributes(xtr, userTask, defaultElementAttributes,\n                defaultActivityAttributes, defaultUserTaskAttributes);\n        \n        parseChildElements(getXMLElementName(), userTask, childParserMap, model,\n                xtr);\n        \n        return userTask;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42832, "method_name": "writeAdditionalAttributes", "class_name": "UserTaskXMLConverter", "params": ["BaseElement", "BpmnModel", "XMLStreamWriter"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void writeAdditionalAttributes(BaseElement element, BpmnModel model,\n                                             XMLStreamWriter xtw) throws Exception {\n        UserTask userTask = (UserTask) element;\n        writeQualifiedAttribute(ATTRIBUTE_TASK_USER_ASSIGNEE,\n                userTask.getAssignee(), xtw);\n        writeQualifiedAttribute(ATTRIBUTE_TASK_USER_OWNER, userTask.getOwner(),\n                xtw);\n        writeQualifiedAttribute(ATTRIBUTE_TASK_USER_CANDIDATEUSERS,\n                convertToDelimitedString(userTask.getCandidateUsers()), xtw);\n        writeQualifiedAttribute(ATTRIBUTE_TASK_USER_CANDIDATEGROUPS,\n                convertToDelimitedString(userTask.getCandidateGroups()), xtw);\n        writeQualifiedAttribute(ATTRIBUTE_TASK_USER_DUEDATE, userTask.getDueDate(),\n                xtw);\n        writeQualifiedAttribute(ATTRIBUTE_TASK_USER_CATEGORY,\n                userTask.getCategory(), xtw);\n        writeQualifiedAttribute(ATTRIBUTE_FORM_FORMKEY, userTask.getFormKey(), xtw);\n        if (userTask.getPriority() != null) {\n            writeQualifiedAttribute(ATTRIBUTE_TASK_USER_PRIORITY,\n                    userTask.getPriority().toString(), xtw);\n        }\n        if (StringUtils.isNotEmpty(userTask.getExtensionId())) {\n            writeQualifiedAttribute(ATTRIBUTE_TASK_SERVICE_EXTENSIONID,\n                    userTask.getExtensionId(), xtw);\n        }\n        if (userTask.getSkipExpression() != null) {\n            writeQualifiedAttribute(ATTRIBUTE_TASK_USER_SKIP_EXPRESSION,\n                    userTask.getSkipExpression(), xtw);\n        }\n        // write custom attributes\n        BpmnXMLUtil.writeCustomAttributes(userTask.getAttributes().values(), xtw,\n                defaultElementAttributes, defaultActivityAttributes,\n                defaultUserTaskAttributes);\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42833, "method_name": "writeExtensionChildElements", "class_name": "UserTaskXMLConverter", "params": ["BaseElement", "boolean", "XMLStreamWriter"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean writeExtensionChildElements(BaseElement element,\n                                                  boolean didWriteExtensionStartElement, XMLStreamWriter xtw)\n            throws Exception {\n        UserTask userTask = (UserTask) element;\n        didWriteExtensionStartElement = writeFormProperties(userTask,\n                didWriteExtensionStartElement, xtw);\n        didWriteExtensionStartElement = writeCustomIdentities(element,\n                didWriteExtensionStartElement, xtw);\n        if (!userTask.getCustomProperties().isEmpty()) {\n            for (CustomProperty customProperty : userTask.getCustomProperties()) {\n                \n                if (StringUtils.isEmpty(customProperty.getSimpleValue())) {\n                    continue;\n                }\n                \n                if (!didWriteExtensionStartElement) {\n                    xtw.writeStartElement(ELEMENT_EXTENSIONS);\n                    didWriteExtensionStartElement = true;\n                }\n                xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX,\n                        customProperty.getName(), ACTIVITI_EXTENSIONS_NAMESPACE);\n                xtw.writeCharacters(customProperty.getSimpleValue());\n                xtw.writeEndElement();\n            }\n        }\n        return didWriteExtensionStartElement;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42834, "method_name": "writeCustomIdentities", "class_name": "UserTaskXMLConverter", "params": ["BaseElement", "boolean", "XMLStreamWriter"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean writeCustomIdentities(BaseElement element,\n                                            boolean didWriteExtensionStartElement, XMLStreamWriter xtw)\n            throws Exception {\n        UserTask userTask = (UserTask) element;\n        if (userTask.getCustomUserIdentityLinks().isEmpty()\n                && userTask.getCustomGroupIdentityLinks().isEmpty()) {\n            return didWriteExtensionStartElement;\n        }\n        \n        if (!didWriteExtensionStartElement) {\n            xtw.writeStartElement(ELEMENT_EXTENSIONS);\n            didWriteExtensionStartElement = true;\n        }\n        Set<String> identityLinkTypes = new HashSet<String>();\n        identityLinkTypes.addAll(userTask.getCustomUserIdentityLinks().keySet());\n        identityLinkTypes.addAll(userTask.getCustomGroupIdentityLinks().keySet());\n        for (String identityType : identityLinkTypes) {\n            writeCustomIdentities(userTask, identityType,\n                    userTask.getCustomUserIdentityLinks().get(identityType),\n                    userTask.getCustomGroupIdentityLinks().get(identityType), xtw);\n        }\n        \n        return didWriteExtensionStartElement;\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42835, "method_name": "writeCustomIdentities", "class_name": "UserTaskXMLConverter", "params": ["UserTask", "String", "Set<String>", "Set<String>", "XMLStreamWriter"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void writeCustomIdentities(UserTask userTask, String identityType,\n                                         Set<String> users, Set<String> groups, XMLStreamWriter xtw)\n            throws Exception {\n        xtw.writeStartElement(ACTIVITI_EXTENSIONS_PREFIX, ELEMENT_CUSTOM_RESOURCE,\n                ACTIVITI_EXTENSIONS_NAMESPACE);\n        writeDefaultAttribute(ATTRIBUTE_NAME, identityType, xtw);\n        \n        List<String> identityList = new ArrayList<String>();\n        \n        if (users != null) {\n            for (String userId : users) {\n                identityList.add(\"user(\" + userId + \")\");\n            }\n        }\n        \n        if (groups != null) {\n            for (String groupId : groups) {\n                identityList.add(\"group(\" + groupId + \")\");\n            }\n        }\n        \n        String delimitedString = convertToDelimitedString(identityList);\n        \n        xtw.writeStartElement(ELEMENT_RESOURCE_ASSIGNMENT);\n        xtw.writeStartElement(ELEMENT_FORMAL_EXPRESSION);\n        xtw.writeCharacters(delimitedString);\n        xtw.writeEndElement(); // End ELEMENT_FORMAL_EXPRESSION\n        xtw.writeEndElement(); // End ELEMENT_RESOURCE_ASSIGNMENT\n        \n        xtw.writeEndElement(); // End ELEMENT_CUSTOM_RESOURCE\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42836, "method_name": "writeAdditionalChildElements", "class_name": "UserTaskXMLConverter", "params": ["BaseElement", "BpmnModel", "XMLStreamWriter"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void writeAdditionalChildElements(BaseElement element,\n                                                BpmnModel model, XMLStreamWriter xtw) throws Exception {\n    }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseBpmnXMLConverter", "implements": null, "modifiers": ["public"]}}, {"id": 42837, "method_name": "getElementName", "class_name": "HumanPerformerParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getElementName() {\n            return \"humanPerformer\";\n        }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseChildElementParser", "implements": null, "modifiers": ["public"]}}, {"id": 42838, "method_name": "parseChildElement", "class_name": "HumanPerformerParser", "params": ["XMLStreamReader", "BaseElement", "BpmnModel"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void parseChildElement(XMLStreamReader xtr,\n                                      BaseElement parentElement, BpmnModel model) throws Exception {\n            String resourceElement = XMLStreamReaderUtil.moveDown(xtr);\n            if (StringUtils.isNotEmpty(resourceElement)\n                    && ELEMENT_RESOURCE_ASSIGNMENT.equals(resourceElement)) {\n                String expression = XMLStreamReaderUtil.moveDown(xtr);\n                if (StringUtils.isNotEmpty(expression)\n                        && ELEMENT_FORMAL_EXPRESSION.equals(expression)) {\n                    ((UserTask) parentElement).setAssignee(xtr.getElementText());\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseChildElementParser", "implements": null, "modifiers": ["public"]}}, {"id": 42839, "method_name": "getElementName", "class_name": "PotentialOwnerParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getElementName() {\n            return \"potentialOwner\";\n        }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseChildElementParser", "implements": null, "modifiers": ["public"]}}, {"id": 42840, "method_name": "parseChildElement", "class_name": "PotentialOwnerParser", "params": ["XMLStreamReader", "BaseElement", "BpmnModel"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void parseChildElement(XMLStreamReader xtr,\n                                      BaseElement parentElement, BpmnModel model) throws Exception {\n            String resourceElement = XMLStreamReaderUtil.moveDown(xtr);\n            if (StringUtils.isNotEmpty(resourceElement)\n                    && ELEMENT_RESOURCE_ASSIGNMENT.equals(resourceElement)) {\n                String expression = XMLStreamReaderUtil.moveDown(xtr);\n                if (StringUtils.isNotEmpty(expression)\n                        && ELEMENT_FORMAL_EXPRESSION.equals(expression)) {\n                    \n                    List<String> assignmentList = CommaSplitter\n                            .splitCommas(xtr.getElementText());\n                    \n                    for (String assignmentValue : assignmentList) {\n                        if (assignmentValue == null) {\n                            continue;\n                        }\n                        \n                        assignmentValue = assignmentValue.trim();\n                        \n                        if (assignmentValue.length() == 0) {\n                            continue;\n                        }\n                        \n                        String userPrefix = \"user(\";\n                        String groupPrefix = \"group(\";\n                        if (assignmentValue.startsWith(userPrefix)) {\n                            assignmentValue = assignmentValue\n                                    .substring(userPrefix.length(), assignmentValue.length() - 1)\n                                    .trim();\n                            ((UserTask) parentElement).getCandidateUsers()\n                                    .add(assignmentValue);\n                        } else if (assignmentValue.startsWith(groupPrefix)) {\n                            assignmentValue = assignmentValue\n                                    .substring(groupPrefix.length(), assignmentValue.length() - 1)\n                                    .trim();\n                            ((UserTask) parentElement).getCandidateGroups()\n                                    .add(assignmentValue);\n                        } else {\n                            ((UserTask) parentElement).getCandidateGroups()\n                                    .add(assignmentValue);\n                        }\n                    }\n                }\n            } else if (StringUtils.isNotEmpty(resourceElement)\n                    && ELEMENT_RESOURCE_REF.equals(resourceElement)) {\n                String resourceId = xtr.getElementText();\n                if (model.containsResourceId(resourceId)) {\n                    Resource resource = model.getResource(resourceId);\n                    ((UserTask) parentElement).getCandidateGroups()\n                            .add(resource.getName());\n                } else {\n                    Resource resource = new Resource(resourceId, resourceId);\n                    model.addResource(resource);\n                    ((UserTask) parentElement).getCandidateGroups()\n                            .add(resource.getName());\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseChildElementParser", "implements": null, "modifiers": ["public"]}}, {"id": 42841, "method_name": "getElementName", "class_name": "CustomIdentityLinkParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getElementName() {\n            return ELEMENT_CUSTOM_RESOURCE;\n        }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseChildElementParser", "implements": null, "modifiers": ["public"]}}, {"id": 42842, "method_name": "parseChildElement", "class_name": "CustomIdentityLinkParser", "params": ["XMLStreamReader", "BaseElement", "BpmnModel"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "        public void parseChildElement(XMLStreamReader xtr,\n                                      BaseElement parentElement, BpmnModel model) throws Exception {\n            String identityLinkType = xtr\n                    .getAttributeValue(ACTIVITI_EXTENSIONS_NAMESPACE, ATTRIBUTE_NAME);\n            \n            // the attribute value may be unqualified\n            if (identityLinkType == null) {\n                identityLinkType = xtr.getAttributeValue(null, ATTRIBUTE_NAME);\n            }\n            \n            if (identityLinkType == null) {\n                return;\n            }\n            \n            String resourceElement = XMLStreamReaderUtil.moveDown(xtr);\n            if (StringUtils.isNotEmpty(resourceElement)\n                    && ELEMENT_RESOURCE_ASSIGNMENT.equals(resourceElement)) {\n                String expression = XMLStreamReaderUtil.moveDown(xtr);\n                if (StringUtils.isNotEmpty(expression)\n                        && ELEMENT_FORMAL_EXPRESSION.equals(expression)) {\n                    \n                    List<String> assignmentList = CommaSplitter\n                            .splitCommas(xtr.getElementText());\n                    \n                    for (String assignmentValue : assignmentList) {\n                        if (assignmentValue == null) {\n                            continue;\n                        }\n                        \n                        assignmentValue = assignmentValue.trim();\n                        \n                        if (assignmentValue.length() == 0) {\n                            continue;\n                        }\n                        \n                        String userPrefix = \"user(\";\n                        String groupPrefix = \"group(\";\n                        if (assignmentValue.startsWith(userPrefix)) {\n                            assignmentValue = assignmentValue\n                                    .substring(userPrefix.length(), assignmentValue.length() - 1)\n                                    .trim();\n                            ((UserTask) parentElement)\n                                    .addCustomUserIdentityLink(assignmentValue, identityLinkType);\n                        } else if (assignmentValue.startsWith(groupPrefix)) {\n                            assignmentValue = assignmentValue\n                                    .substring(groupPrefix.length(), assignmentValue.length() - 1)\n                                    .trim();\n                            ((UserTask) parentElement).addCustomGroupIdentityLink(\n                                    assignmentValue, identityLinkType);\n                        } else {\n                            ((UserTask) parentElement).addCustomGroupIdentityLink(\n                                    assignmentValue, identityLinkType);\n                        }\n                    }\n                }\n            }\n        }", "url": "https://raw.githubusercontent.com/griabcrh/vue-activiti-demo/master/vue-activiti-service-demo/src/main/java/com/activiti/converter/UserTaskXMLConverter.java", "stars": "25", "class_props": {"extends": "BaseChildElementParser", "implements": null, "modifiers": ["public"]}}, {"id": 42843, "method_name": "execute", "class_name": "AbstractPrintLog", "params": ["ProceedingJoinPoint"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object execute(ProceedingJoinPoint joinPoint) throws Throwable {\n        Object[] args = joinPoint.getArgs();\n\n        if (logger.isDebugEnabled() || logger.isWarnEnabled()) {\n            StopWatch clock = new StopWatch();\n            clock.start();\n            Object returnObj = null;\n            try {\n                return returnObj = joinPoint.proceed(args);\n            } catch (Exception e) {\n                throw e;\n            } finally {\n                clock.stop();\n                long totalTimeMillis = clock.getTotalTimeMillis();\n                handleLog(joinPoint, args, returnObj, totalTimeMillis);\n            }\n        } else {\n            return joinPoint.proceed(args);\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42844, "method_name": "handleLog", "class_name": "AbstractPrintLog", "params": ["ProceedingJoinPoint", "Object", "Object", "long"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void handleLog(ProceedingJoinPoint joinPoint, Object[] args, Object returnObj, long costTime);\n\n    /**\n     * @param name            \u64cd\u4f5c\u540d\u79f0\n     * @param description     \u63cf\u8ff0\n     * @param printReturn     \u662f\u5426\u6253\u5370\u54cd\u5e94\n     * @param joinPoint       \u4f4d\u7f6e\n     * @param args            \u53c2\u6570\n     * @param returnObj       \u54cd\u5e94\n     * @param totalTimeMillis \u8017\u65f6ms\n     */\n    protected void printLogMsg(String name, String description, boolean printReturn, JoinPoint joinPoint, Object[] args, Object returnObj, long totalTimeMillis) {\n        // Object[] params = argsDemote(args);\n        String params = getParam(args);\n\n        /**\n         * \u8fd4\u56de\u7801\u4e0d\u662f\u6210\u529f,\u6216\u8005\u6267\u884c\u8d85\u8fc71\u79d2\u624d\u8bb0\u5f55\u65e5\u5fd7\n         */\n//        if ( isSave(baseResponse,totalTimeMillis) ) {\n//            sendLogToMongoDB(name, description, printReturn, joinPoint, args, returnObj, totalTimeMillis);\n//        }\n\n        if (totalTimeMillis < getTimeLimit()) {\n            logger.info(MSG, new Object[]{name, description, joinPoint.getStaticPart(), params, getPrintMsg(printReturn, returnObj), totalTimeMillis});\n        } else {\n            logger.warn(MSG, new Object[]{name, description, joinPoint.getStaticPart(), params, getPrintMsg(printReturn, returnObj), totalTimeMillis});\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42845, "method_name": "printLogMsg", "class_name": "AbstractPrintLog", "params": ["String", "String", "boolean", "JoinPoint", "Object", "Object", "long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void printLogMsg(String name, String description, boolean printReturn, JoinPoint joinPoint, Object[] args, Object returnObj, long totalTimeMillis) {\n        // Object[] params = argsDemote(args);\n        String params = getParam(args);\n\n        /**\n         * \u8fd4\u56de\u7801\u4e0d\u662f\u6210\u529f,\u6216\u8005\u6267\u884c\u8d85\u8fc71\u79d2\u624d\u8bb0\u5f55\u65e5\u5fd7\n         */\n//        if ( isSave(baseResponse,totalTimeMillis) ) {\n//            sendLogToMongoDB(name, description, printReturn, joinPoint, args, returnObj, totalTimeMillis);\n//        }\n\n        if (totalTimeMillis < getTimeLimit()) {\n            logger.info(MSG, new Object[]{name, description, joinPoint.getStaticPart(), params, getPrintMsg(printReturn, returnObj), totalTimeMillis});\n        } else {\n            logger.warn(MSG, new Object[]{name, description, joinPoint.getStaticPart(), params, getPrintMsg(printReturn, returnObj), totalTimeMillis});\n        }\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42846, "method_name": "getTimeLimit", "class_name": "AbstractPrintLog", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int getTimeLimit() {\n        return DEFAULT_TIME_LIMIT;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42847, "method_name": "getPrintMsg", "class_name": "AbstractPrintLog", "params": ["boolean", "Object"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getPrintMsg(boolean printReturn, Object returnObj) {\n        return printReturn ? ((returnObj != null) ? JSONObject.toJSONString(returnObj) : \"null\") : \"[printReturn = false]\";\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42848, "method_name": "argsDemote", "class_name": "AbstractPrintLog", "params": ["Object"], "throws": null, "modifiers": ["protected"], "return_type": "Object", "snippet": "    protected Object[] argsDemote(Object[] args) {\n        if (args == null || args.length == 0) {\n            return new Object[]{};\n        }\n        Object[] params = new Object[args.length];\n        for (int i = 0; i < args.length; i++) {\n            Object arg = args[i];\n            if (arg instanceof ServletRequest || arg instanceof ServletResponse\n                    || arg instanceof ModelMap || arg instanceof Model\n                    || arg instanceof InputStreamSource || arg instanceof File || arg instanceof BaseEntity) {\n                params[i] = args[i];\n            } else {\n                params[i] = args.toString();\n            }\n        }\n        return params;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42849, "method_name": "getParam", "class_name": "AbstractPrintLog", "params": ["Object"], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String getParam(Object[] args) {\n        StringBuilder params = new StringBuilder();\n        if (args != null && args.length > 0) {\n            for (int i = 0; i < args.length; i++) {\n                if (null == args[i]) {\n                    params.append(\"null\").append(\";\");\n                } else {\n                    params.append(args[i].toString()).append(\";\");\n                }\n            }\n        }\n        return params.toString();\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42850, "method_name": "getHttpServletRequest", "class_name": "AbstractPrintLog", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "HttpServletRequest", "snippet": "    protected HttpServletRequest getHttpServletRequest() {\n        return ((ServletRequestAttributes) RequestContextHolder.getRequestAttributes()).getRequest();\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42851, "method_name": "isSave", "class_name": "AbstractPrintLog", "params": ["BaseResponse", "long"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isSave(BaseResponse baseResponse, long totalTimeMillis) {\n        return baseResponse != null && !baseResponse.getCode().equals(ResponseCode.SUCCESS) || totalTimeMillis >= getTimeLimit();\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-common/src/main/java/com/cgb/bcpinstall/common/log/AbstractPrintLog.java", "stars": "7", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 42852, "method_name": "onCheckedChanged", "class_name": "SwitchCellView", "params": ["android", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCheckedChanged (android.widget.CompoundButton p0, boolean p1)\n\t{\n\t\tn_onCheckedChanged (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwitchCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42853, "method_name": "n_onCheckedChanged", "class_name": "SwitchCellView", "params": ["android", "boolean"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onCheckedChanged (android.widget.CompoundButton p0, boolean p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwitchCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42854, "method_name": "monodroidAddReference", "class_name": "SwitchCellView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwitchCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42855, "method_name": "monodroidClearReferences", "class_name": "SwitchCellView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SwitchCellView.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 42856, "method_name": "onCreate", "class_name": "EventFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        // \u666e\u901a\u4e8b\u4ef6\u76d1\u542c\u521d\u59cb\u5316\n        mPageEventEnable = initPageEvent();\n        if (mPageEventEnable && mEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mEventList) {\n                EventHelper.registerEventPage(this, eventPage);\n            }\n        }\n        // \u7c98\u6027\u4e8b\u4ef6\u76d1\u542c\u521d\u59cb\u5316\n        mPageStickEventEnable = initPageStickEvent();\n        if (mPageStickEventEnable && mStickEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mStickEventList) {\n                EventHelper.registerStickEventPage(this, eventPage);\n            }\n        }\n        LogHelper.i(TAG, \"activity: \" + this +\n                \", mPageEventEnable: \" + mPageEventEnable +\n                \", mPageStickEventEnable: \" + mPageStickEventEnable);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42857, "method_name": "onDestroy", "class_name": "EventFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        // \u666e\u901a\u4e8b\u4ef6\u76d1\u542c\u6ce8\u9500\n        if (mPageEventEnable && mEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mEventList) {\n                EventHelper.unregisterEventPage(this, eventPage);\n            }\n            mEventList.clear();\n            mEventList = null;\n        }\n        // \u7c98\u6027\u4e8b\u4ef6\u76d1\u542c\u6ce8\u9500\n        if (mPageStickEventEnable && mStickEventList != null) {\n            for (Class<? extends PageEvent> eventPage : mStickEventList) {\n                EventHelper.unregisterStickEventPage(this, eventPage);\n            }\n            mStickEventList.clear();\n            mStickEventList = null;\n        }\n        super.onDestroy();\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42858, "method_name": "initPageEvent", "class_name": "EventFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean initPageEvent() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42859, "method_name": "addPageEvent", "class_name": "EventFragment", "params": ["Class<PageEvent>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addPageEvent(Class<? extends PageEvent> eventPage) {\n        if (eventPage == null) {\n            return;\n        }\n        if (mEventList == null) {\n            mEventList = new ArrayList<>();\n        }\n        if (mEventList.contains(eventPage)) {\n            return;\n        }\n        mEventList.add(eventPage);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42860, "method_name": "onEvent", "class_name": "EventFragment", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEvent(@NonNull Event event) {\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42861, "method_name": "initPageStickEvent", "class_name": "EventFragment", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "    protected boolean initPageStickEvent() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42862, "method_name": "addPageStickEvent", "class_name": "EventFragment", "params": ["Class<PageEvent>"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void addPageStickEvent(Class<? extends PageEvent> eventPage) {\n        if (eventPage == null) {\n            return;\n        }\n        if (mStickEventList == null) {\n            mStickEventList = new ArrayList<>();\n        }\n        if (mStickEventList.contains(eventPage)) {\n            return;\n        }\n        mStickEventList.add(eventPage);\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42863, "method_name": "onStickEvent", "class_name": "EventFragment", "params": ["Event"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onStickEvent(@NonNull Event event) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wkp111/PageEventDemo/master/pageevent/src/main/java/com/wkp/pageevent/base/EventFragment.java", "stars": "1", "class_props": {"extends": "Fragment", "implements": ["PageEventListener", "PageStickEventListener", "PageEvent"], "modifiers": ["public"]}}, {"id": 42864, "method_name": "onLeave", "class_name": "ColorTransitionPagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLeave(int index, int totalCount, float leavePercent, boolean leftToRight) {\n        int color = ArgbEvaluatorHolder.eval(leavePercent, mSelectedColor, mNormalColor);\n        setTextColor(color);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/ColorTransitionPagerTitleView.java", "stars": "1", "class_props": {"extends": "SimplePagerTitleView", "implements": null, "modifiers": ["public"]}}, {"id": 42865, "method_name": "onEnter", "class_name": "ColorTransitionPagerTitleView", "params": ["int", "int", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onEnter(int index, int totalCount, float enterPercent, boolean leftToRight) {\n        int color = ArgbEvaluatorHolder.eval(enterPercent, mNormalColor, mSelectedColor);\n        setTextColor(color);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/ColorTransitionPagerTitleView.java", "stars": "1", "class_props": {"extends": "SimplePagerTitleView", "implements": null, "modifiers": ["public"]}}, {"id": 42866, "method_name": "onSelected", "class_name": "ColorTransitionPagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSelected(int index, int totalCount) {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/ColorTransitionPagerTitleView.java", "stars": "1", "class_props": {"extends": "SimplePagerTitleView", "implements": null, "modifiers": ["public"]}}, {"id": 42867, "method_name": "onDeselected", "class_name": "ColorTransitionPagerTitleView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDeselected(int index, int totalCount) {\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/view/magicindicator/buildins/commonnavigator/titles/ColorTransitionPagerTitleView.java", "stars": "1", "class_props": {"extends": "SimplePagerTitleView", "implements": null, "modifiers": ["public"]}}, {"id": 42868, "method_name": "getDevicesCsvFile", "class_name": "CSVUtil", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "File", "snippet": "    public static File getDevicesCsvFile(Context context) {\n        return getCsvFile(context, FILE_NAME_DEVICES);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/util/CSVUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42869, "method_name": "getScansCsvFile", "class_name": "CSVUtil", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "File", "snippet": "    public static File getScansCsvFile(Context context) {\n        return getCsvFile(context, FILE_NAME_SCANS);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/util/CSVUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42870, "method_name": "getCsvFile", "class_name": "CSVUtil", "params": ["Context", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "File", "snippet": "    private static File getCsvFile(Context context, String filename) {\n        File[] externalStorageVolumes =\n                ContextCompat.getExternalFilesDirs(context.getApplicationContext(), null);\n        String filenameExternal = externalStorageVolumes[0].getAbsolutePath() + \"/\" + filename + FILE_EXTENSION;\n        return new File(filenameExternal);\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/util/CSVUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42871, "method_name": "saveAllScansAsCSV", "class_name": "CSVUtil", "params": ["Context", "List<Scan>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveAllScansAsCSV(final Context context, List<Scan> allScans) throws Exception {\n        CsvWriter csvWriter = new CsvWriter();\n        CsvAppender csvAppender = csvWriter.append(getScansCsvFile(context), StandardCharsets.UTF_8);\n        csvAppender.appendLine(\"timestamp\", \"publicKey\", \"deviceAddress\", \"deviceProtocol\",\n                \"rssi\", \"tx\", \"proximity\", \"acceleration_x\", \"acceleration_y\", \"acceleration_z\",\n                \"rotation_x\", \"rotation_y\", \"rotation_z\", \"rotation_scalar\", \"battery\");\n        for (Scan scan : allScans) {\n            csvAppender.appendField(String.valueOf(scan.getTimestamp()));\n            csvAppender.appendField(scan.getPublicKey());\n            csvAppender.appendField(scan.getScanAddress());\n            csvAppender.appendField(scan.getScanProtocol());\n            csvAppender.appendField(String.valueOf(scan.getRssi()));\n            csvAppender.appendField(String.valueOf(scan.getTx()));\n            csvAppender.appendField(String.valueOf(scan.getProximityValue()));\n            csvAppender.appendField(String.valueOf(scan.getAccelerationX()));\n            csvAppender.appendField(String.valueOf(scan.getAccelerationY()));\n            csvAppender.appendField(String.valueOf(scan.getAccelerationZ()));\n            csvAppender.appendField(String.valueOf(scan.getRotationVectorX()));\n            csvAppender.appendField(String.valueOf(scan.getRotationVectorY()));\n            csvAppender.appendField(String.valueOf(scan.getRotationVectorZ()));\n            csvAppender.appendField(String.valueOf(scan.getRotationVectorScalar()));\n            csvAppender.appendField(String.valueOf(scan.getBatteryLevel()));\n            csvAppender.endLine();\n        }\n        csvAppender.close();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/util/CSVUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42872, "method_name": "saveAllDevicesAsCSV", "class_name": "CSVUtil", "params": ["Context", "List<Device>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void saveAllDevicesAsCSV(final Context context, List<Device> allDevices) throws Exception {\n        CsvWriter csvWriter = new CsvWriter();\n        CsvAppender csvAppender = csvWriter.append(getDevicesCsvFile(context), StandardCharsets.UTF_8);\n        csvAppender.appendLine(\"firstSeen\", \"lastSeen\", \"publicKey\", \"deviceAddress\", \"deviceProtocol\", \"rssi\");\n        for (Device device : allDevices) {\n            csvAppender.appendField(String.valueOf(device.getFirstTimestamp()));\n            csvAppender.appendField(String.valueOf(device.getLastTimestamp()));\n            csvAppender.appendField(device.getPublicKey());\n            csvAppender.appendField(device.getDeviceAddress());\n            csvAppender.appendField(device.getDeviceProtocol());\n            csvAppender.appendField(String.valueOf(device.getRssi()));\n            csvAppender.endLine();\n        }\n        csvAppender.close();\n    }", "url": "https://raw.githubusercontent.com/wix-incubator/rn-contact-tracing/master/lib/android/src/main/java/com/wix/specialble/util/CSVUtil.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42873, "method_name": "notify", "class_name": "MessageTypeCallRegister", "params": ["Event", "ConnectionSet"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void notify(Event e, ConnectionSet connectionSet) throws BGException {\n        RunClassRequestEvent event = (RunClassRequestEvent) e;\n\n        DynActionForm form = event.getForm();\n\n        MessageTypeCall messageType = (MessageTypeCall) Setup.getSetup().getConfig(MessageTypeConfig.class).getTypeMap()\n                .get(form.getParamInt(\"typeId\"));\n        if (messageType == null) {\n            throw new BGException(\"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0442\u0438\u043f \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f.\");\n        }\n\n        String from = form.getParam(\"from\", \"\");\n        String to = form.getParam(\"to\", \"\");\n\n        Connection con = Setup.getSetup().getDBConnectionFromPool();\n        try {\n            CallRegistration reg = messageType.getRegistrationByNumber(to);\n            if (reg != null)\n                log.info(\"Call to registred number: \" + reg.getNumber());\n\n            Message message = new Message();\n            message.setDirection(Message.DIRECTION_INCOMING);\n            message.setTypeId(messageType.getId());\n            message.setUserId(reg != null ? reg.getUserId() : 0);\n            message.setText(\"\");\n            message.setFrom(from);\n            message.setTo(to);\n            message.setFromTime(new Date());\n            message.setSystemId(messageType.getId() + \":\" + System.currentTimeMillis());\n\n            // \u043f\u043e \u0441\u0443\u0442\u0438 \u0442\u0430\u043c \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u043e MessageDAO, \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u0434\u043b\u044f \u0435\u0434\u0438\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u044f\n            messageType.updateMessage(con, DynActionForm.SERVER_FORM, message);\n\n            con.commit();\n\n            log.info(\"Created message: \" + message.getId());\n\n            if (reg != null)\n                reg.setMessageForOpenId(message.getId());\n        } catch (Exception ex) {\n            log.error(ex.getMessage(), ex);\n        } finally {\n            SQLUtils.closeConnection(con);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/listener/MessageTypeCallRegister.java", "stars": "12", "class_props": {"extends": "DynamicEventListener", "implements": null, "modifiers": ["public"]}}, {"id": 42874, "method_name": "setAABB", "class_name": "CollisionBoxEvent", "params": ["AxisAlignedBB"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAABB(AxisAlignedBB aabb) {\n        this.aabb = aabb;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/CollisionBoxEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 42875, "method_name": "getBlock", "class_name": "CollisionBoxEvent", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "Block", "snippet": "    public final Block getBlock() {\n        return this.block;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/CollisionBoxEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 42876, "method_name": "getPos", "class_name": "CollisionBoxEvent", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "BlockPos", "snippet": "    public final BlockPos getPos() {\n        return this.pos;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/CollisionBoxEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 42877, "method_name": "getBoundingBox", "class_name": "CollisionBoxEvent", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "AxisAlignedBB", "snippet": "    public final AxisAlignedBB getBoundingBox() {\n        return this.aabb;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/CollisionBoxEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 42878, "method_name": "getCollidingBoxes", "class_name": "CollisionBoxEvent", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "List<AxisAlignedBB>", "snippet": "    public final List<AxisAlignedBB> getCollidingBoxes() {\n        return this.collidingBoxes;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/CollisionBoxEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 42879, "method_name": "getEntity", "class_name": "CollisionBoxEvent", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "Entity", "snippet": "    public final Entity getEntity() {\n        return this.entity;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/events/CollisionBoxEvent.java", "stars": "12", "class_props": {"extends": "Event", "implements": null, "modifiers": ["public"]}}, {"id": 42880, "method_name": "addParam", "class_name": "ParamHelper", "params": ["String", "String", "String", "int", "String", "String"], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int addParam(String object, String type, String title, int pos, String config, String valuesConfig) throws SQLException {\n        try (var con = conPoolRoot.getDBConnectionFromPool()) {\n            var param = new Parameter();\n            param.setId(-1);\n            param.setComment(\"\");\n            param.setObject(object);\n            param.setType(type);\n            param.setTitle(title);\n            param.setOrder(pos);\n            param.setConfig(config);\n            param.setValuesConfig(valuesConfig);\n            new ParamDAO(con).updateParameter(param);\n            Assert.assertTrue(param.getId() > 0);\n\n            con.commit();\n\n            return param.getId();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/itest/org/bgerp/itest/helper/ParamHelper.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42881, "method_name": "addParamGroup", "class_name": "ParamHelper", "params": ["String", "String", "Set<Integer>"], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int addParamGroup(String object, String title, Set<Integer> params) throws SQLException {\n        try (var con = conPoolRoot.getDBConnectionFromPool()) {\n            var group = new ParameterGroup();\n            group.setObject(object);\n            group.setTitle(title);\n            group.setParameterIds(params);\n            new ParamGroupDAO(con).updateParameterGroup(group);\n            Assert.assertTrue(group.getId() > 0);\n\n            con.commit();\n\n            return group.getId();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/itest/org/bgerp/itest/helper/ParamHelper.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42882, "method_name": "addPattern", "class_name": "ParamHelper", "params": ["String", "String", "String"], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int addPattern(String object, String title, String text) throws SQLException {\n        try (var con = conPoolRoot.getDBConnectionFromPool()) {\n            var pattern = new Pattern();\n            pattern.setObject(object);\n            pattern.setTitle(title);\n            pattern.setPattern(text);\n            new PatternDAO(con).updatePattern(pattern);\n            Assert.assertTrue(pattern.getId() > 0);\n\n            con.commit();\n\n            return pattern.getId();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/itest/org/bgerp/itest/helper/ParamHelper.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42883, "method_name": "aliPay", "class_name": "PayController", "params": ["Integer", "HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void aliPay(Integer payAmount,HttpServletRequest request,HttpServletResponse httpResponse) {\n\n        UserDetails userDetails = getUserDetails(request);\n        if (userDetails == null) {\n            //\u672a\u767b\u5f55\uff0c\u8df3\u8f6c\u5230\u767b\u9646\u9875\u9762\n            httpResponse.sendRedirect(\"/user/login.html?originUrl=/pay/aliPay?payAmount=\"+payAmount);\n            return;\n        }else {\n            //\u521b\u5efa\u5145\u503c\u8ba2\u5355\n            Long outTradeNo = orderService.createPayOrder((byte)1,payAmount,userDetails.getId());\n\n            //\u83b7\u5f97\u521d\u59cb\u5316\u7684AlipayClient\n            AlipayClient alipayClient = new DefaultAlipayClient(alipayConfig.getGatewayUrl(), alipayConfig.getAppId(), alipayConfig.getMerchantPrivateKey(), \"json\", alipayConfig.getCharset(), alipayConfig.getPublicKey(), alipayConfig.getSignType());\n            //\u521b\u5efaAPI\u5bf9\u5e94\u7684request\n            AlipayTradePagePayRequest alipayRequest = new AlipayTradePagePayRequest();\n            alipayRequest.setReturnUrl(alipayConfig.getReturnUrl());\n            //\u5728\u516c\u5171\u53c2\u6570\u4e2d\u8bbe\u7f6e\u56de\u8df3\u548c\u901a\u77e5\u5730\u5740\n            alipayRequest.setNotifyUrl(alipayConfig.getNotifyUrl());\n            //\u586b\u5145\u4e1a\u52a1\u53c2\u6570\n            alipayRequest.setBizContent(\"{\" +\n                    \"    \\\"out_trade_no\\\":\\\"\" + outTradeNo + \"\\\",\" +\n                    \"    \\\"product_code\\\":\\\"FAST_INSTANT_TRADE_PAY\\\",\" +\n                    \"    \\\"total_amount\\\":\" + payAmount + \",\" +\n                    \"    \\\"subject\\\":\\\"\u5c0f\u8bf4\u7cbe\u54c1\u5c4b-plus\\\"\" +\n                    \"  }\");\n            //\u8c03\u7528SDK\u751f\u6210\u8868\u5355\n            String form = alipayClient.pageExecute(alipayRequest).getBody();\n\n            httpResponse.setContentType(\"text/html;charset=utf-8\");\n            //\u76f4\u63a5\u5c06\u5b8c\u6574\u7684\u8868\u5355html\u8f93\u51fa\u5230\u9875\u9762\n            httpResponse.getWriter().write(form);\n            httpResponse.getWriter().flush();\n            httpResponse.getWriter().close();\n        }\n\n\n\n\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/PayController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42884, "method_name": "aliPayNotify", "class_name": "PayController", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void aliPayNotify(HttpServletRequest request,HttpServletResponse httpResponse){\n\n\n        PrintWriter out = httpResponse.getWriter();\n\n        //\u83b7\u53d6\u652f\u4ed8\u5b9dPOST\u8fc7\u6765\u53cd\u9988\u4fe1\u606f\n        Map<String,String> params = new HashMap<String,String>();\n        Map<String,String[]> requestParams = request.getParameterMap();\n        for (Iterator<String> iter = requestParams.keySet().iterator(); iter.hasNext();) {\n            String name = (String) iter.next();\n            String[] values = (String[]) requestParams.get(name);\n            String valueStr = \"\";\n            for (int i = 0; i < values.length; i++) {\n                valueStr = (i == values.length - 1) ? valueStr + values[i]\n                        : valueStr + values[i] + \",\";\n            }\n            params.put(name, valueStr);\n        }\n\n        //\u8c03\u7528SDK\u9a8c\u8bc1\u7b7e\u540d\n        boolean signVerified = AlipaySignature.rsaCheckV1(params, alipayConfig.getPublicKey(), alipayConfig.getCharset(), alipayConfig.getSignType());\n\n        //\u2014\u2014\u8bf7\u5728\u8fd9\u91cc\u7f16\u5199\u60a8\u7684\u7a0b\u5e8f\uff08\u4ee5\u4e0b\u4ee3\u7801\u4ec5\u4f5c\u53c2\u8003\uff09\u2014\u2014\n\n\t/* \u5b9e\u9645\u9a8c\u8bc1\u8fc7\u7a0b\u5efa\u8bae\u5546\u6237\u52a1\u5fc5\u6dfb\u52a0\u4ee5\u4e0b\u6821\u9a8c\uff1a\n\t1\u3001\u9700\u8981\u9a8c\u8bc1\u8be5\u901a\u77e5\u6570\u636e\u4e2d\u7684out_trade_no\u662f\u5426\u4e3a\u5546\u6237\u7cfb\u7edf\u4e2d\u521b\u5efa\u7684\u8ba2\u5355\u53f7\uff0c\n\t2\u3001\u5224\u65adtotal_amount\u662f\u5426\u786e\u5b9e\u4e3a\u8be5\u8ba2\u5355\u7684\u5b9e\u9645\u91d1\u989d\uff08\u5373\u5546\u6237\u8ba2\u5355\u521b\u5efa\u65f6\u7684\u91d1\u989d\uff09\uff0c\n\t3\u3001\u6821\u9a8c\u901a\u77e5\u4e2d\u7684seller_id\uff08\u6216\u8005seller_email) \u662f\u5426\u4e3aout_trade_no\u8fd9\u7b14\u5355\u636e\u7684\u5bf9\u5e94\u7684\u64cd\u4f5c\u65b9\uff08\u6709\u7684\u65f6\u5019\uff0c\u4e00\u4e2a\u5546\u6237\u53ef\u80fd\u6709\u591a\u4e2aseller_id/seller_email\uff09\n\t4\u3001\u9a8c\u8bc1app_id\u662f\u5426\u4e3a\u8be5\u5546\u6237\u672c\u8eab\u3002\n\t*/\n        if(signVerified) {\n            //\u9a8c\u8bc1\u6210\u529f\n            //\u5546\u6237\u8ba2\u5355\u53f7\n            String outTradeNo = new String(request.getParameter(\"out_trade_no\").getBytes(\"ISO-8859-1\"),\"UTF-8\");\n\n            //\u652f\u4ed8\u5b9d\u4ea4\u6613\u53f7\n            String tradeNo = new String(request.getParameter(\"trade_no\").getBytes(\"ISO-8859-1\"),\"UTF-8\");\n\n            //\u4ea4\u6613\u72b6\u6001\n            String tradeStatus = new String(request.getParameter(\"trade_status\").getBytes(\"ISO-8859-1\"),\"UTF-8\");\n\n            //\u66f4\u65b0\u8ba2\u5355\u72b6\u6001\n            orderService.updatePayOrder(Long.parseLong(outTradeNo), tradeNo, tradeStatus);\n\n\n            out.println(\"success\");\n\n        }else {//\u9a8c\u8bc1\u5931\u8d25\n            out.println(\"fail\");\n\n            //\u8c03\u8bd5\u7528\uff0c\u5199\u6587\u672c\u51fd\u6570\u8bb0\u5f55\u7a0b\u5e8f\u8fd0\u884c\u60c5\u51b5\u662f\u5426\u6b63\u5e38\n            //String sWord = AlipaySignature.getSignCheckContentV1(params);\n            //AlipayConfig.logResult(sWord);\n        }\n\n\n\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-front/src/main/java/com/java2nb/novel/controller/PayController.java", "stars": "137", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 42885, "method_name": "collectFromTaskGroup", "class_name": "ProcessInnerCollector", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Communication", "snippet": "    public Communication collectFromTaskGroup() {\n        return LocalTGCommunicationManager.getJobCommunication();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/statistics/container/collector/ProcessInnerCollector.java", "stars": "23", "class_props": {"extends": "AbstractCollector", "implements": null, "modifiers": ["public"]}}, {"id": 42886, "method_name": "parseToJson", "class_name": "ProtoParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JSONObject", "snippet": "    public JSONObject parseToJson() {\n        try {\n            Base base = Base.parseFrom(protoBytes);\n            payload = base.getData();\n            return new JSONObject(new JsonFormat().printToString(payload));\n        } catch (InvalidProtocolBufferException | JSONException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/protocol/parser/ProtoParser.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42887, "method_name": "getSync", "class_name": "ProtoParser", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SyncProtoc", "snippet": "    public SyncProtoc.Sync getSync() {\n        Preconditions.checkArgument(type == Payload.Type.TYPE_SYNC, \"is not sync type\");\n        return payload.getSync();\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/protocol/parser/ProtoParser.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42888, "method_name": "getMobileType", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String getMobileType() {\n        return Build.MANUFACTURER;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42889, "method_name": "isXiaomi", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isXiaomi() {\n        return getMobileType().equals(\"Xiaomi\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42890, "method_name": "isHuawei", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isHuawei() {\n        return getMobileType().equals(\"HUAWEI\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42891, "method_name": "isVivo", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isVivo() {\n        return getMobileType().equals(\"vivo\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42892, "method_name": "isOppo", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isOppo() {\n        return getMobileType().equals(\"OPPO\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42893, "method_name": "isSamsung", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isSamsung() {\n        return getMobileType().equals(\"samsung\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42894, "method_name": "isMeizu", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isMeizu() {\n        return getMobileType().equals(\"Meizu\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42895, "method_name": "isLetv", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isLetv() {\n        return getMobileType().equals(\"Letv\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42896, "method_name": "is360", "class_name": "RomUtil", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean is360() {\n        return getMobileType().equals(\"ulong\");\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42897, "method_name": "getOppoVer", "class_name": "RomUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double getOppoVer(String ver) {\n        if (TextUtils.isEmpty(ver)) {\n            return 0;\n        }\n        String pro = ver.replaceAll(\"V\", \"\");\n        if (TextUtils.isEmpty(pro)) {\n            return 0;\n        } else if (pro.length() == 1) {\n            return Double.valueOf(pro);\n        } else if (pro.length() == 2) {\n            if (!pro.contains(\".\")) {\n                return Double.valueOf(pro);\n            } else {\n                return Double.valueOf(pro.substring(0, 1));\n            }\n        } else {\n            return Double.valueOf(pro.substring(0, 3));\n        }\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/RomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42898, "method_name": "service", "class_name": "RegisterInstructionServlet", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["ServletException", "IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void service(HttpServletRequest request,HttpServletResponse response) throws ServletException,IOException\n\t{\n\t\tPrintWriter out=response.getWriter();\n\t\tresponse.setContentType(\"text/html\");\n\t\tString un=request.getParameter(\"username\");\n\t\tString mobile1=request.getParameter(\"mobilenumber\");\n\t\tString mail123=request.getParameter(\"mailid\");\n\t\tString pwd=request.getParameter(\"password\");\n\t\tString cpwd=request.getParameter(\"confirmpassword\");\n\n\t\tint c=1;\n\t\tStatement st=null;\n        Connection con=null;\n\t\t\n\t\tout.print(\"<head><style>\");\n\t\tout.print(\"body{padding:0%;margin:0%;}\");\n\t\tout.print(\".box form h1{padding:0%;margin:0%;}\");\n\t\tout.print(\".next{background-color:green;color:white;width:100%;font-size:15px;border-radius:35%;padding:10px;margin:2% 19%;}\");\n\t\tout.print(\"form{padding:0%;margin:0%;}\");\n\t\tout.print(\".image{padding:0%;border-radius:15%;}\");\n\t\tout.print(\".box{background-color:pink;color:white;margin:5%;padding:5%;border-radius:15%;}\");\n\t\tout.print(\".inst h2{color:green;}\");\n\t\tout.print(\".inst h3{padding:0%;margin:0%;}\");\n\t\tout.print(\".inst{width:70%;padding-left:30%;}\");\n\t\tout.print(\"</style></head>\");\n\n\t\ttry\n\t\t{\n\t\t\tClass.forName(\"oracle.jdbc.driver.OracleDriver\");\n\t\t    con=DriverManager.getConnection(\"jdbc:oracle:thin:@localhost:1521:orcl\",\"scott\",\"tiger\");\n\n\t\t\tst=con.createStatement();\n\t\t\tint x=st.executeUpdate(\"Insert into javaquiz values('\"+un+\"','\"+mobile1+\"','\"+mail123+\"','\"+pwd+\"')\");\n\t\t\t\n\t\t\tif(x!=0)\n\t\t\t{\n\t\t\t\tout.print(\"<body>\");\n\t\t\t\tout.print(\"<div class=\\\"box\\\">\");\n\t\t\t\tout.print(\"<form action=quiz.com method=post>\");\n\t\t\t\tout.print(\"<div class=\\\"image\\\"><img src=\\\"img.jfif\\\" width=\\\"100%\\\" height=\\\"30%\\\"></div>\");\n\t\t\t\tout.print(\"<h1 align=center>ExQuizMe</h1><br>\");\n\t\t\t\tout.print(\"<h1 align=center>Quiz On Java</h1><br>\");\n\t\t\t\tout.print(\"<h1 align=center>=====================</h1><br><br>\");\n\t\t\t\tout.print(\"<h1 align=center>Registration Successful..!!</h1><br>\");\n\t\t\t\tout.print(\"<div class=\\\"inst\\\">\");\n\t\t\t\tout.print(\"<h2>Read the following instructions before proceeding</h2><br>\");\n\t\t\t\tout.print(\"<h3>1. This test consists of 10 questions on java.</h3><br>\");\n\t\t\t\tout.print(\"<h3>2. Each question carries 1 mark.</h3><br>\");\n\t\t\t\tout.print(\"<h3>3. Questions are of multiple choice type</h3><br>\");\n\t\t\t\tout.print(\"<input type=submit value=\\\"Start Quiz\\\" class=next>\");\n\t\t\t\tout.print(\"</div>\");\n\t\t\t\tout.print(\"</form>\");\n\t\t\t\tout.print(\"</div>\");\n\t\t\t\tout.print(\"</body>\");  \n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tout.print(\"<body bgcolor=pink text=white>\");\n\t\t\t\tout.print(\"<form action=welcome.html method=post>\");\n\t\t\t\tout.print(\"<h2 align=center>LOGIN..!!</h2>\");\n\t\t\t\tout.print(\"<hr><br></br>\");\n\t\t\t\tout.print(\"<h2 align=center>Authentication Failed...Please re-enter your details!!....</h2>\");\n\t\t\t\tout.print(\"<table align=center>\");\n\t\t\t\tout.print(\"<tr><td><input type=submit value=Back class=next></td></tr>\");\n\t\t\t\tout.print(\"</table></form></body>\");\n\t\t\t}\n\t\t\n\t\t}\n\t\tcatch(SQLException | ClassNotFoundException e)\n\t\t{\n\t\t\tout.print(\"<body bgcolor=pink text=white>\");\n\t\t\tout.print(\"<form action=welcome.html method=post>\");\n\t\t\tout.print(\"<h2 align=center>LOGIN..!!</h2>\");\n\t\t\tout.print(\"<hr><br></br>\");\n\t\t\tout.print(\"<h2 align=center>Authentication Failed...Please re-enter your details!!....</h2>\");\n\t\t\tout.print(\"<h2 align=center>Username already exists....!!</h2>\");\n\t\t\tout.print(\"<table align=center>\");\n\t\t\tout.print(\"<tr><td><input type=submit value=Back class=next></td></tr>\");\n\t\t\tout.print(\"</table></form></body>\");\n\t\t}\n\n\t\tfinally\n        {\n         try\n         {\n\t\t\tst.close();\n\t\t\tcon.close();\n\t\t }\n\t\t catch(Exception ee)\n\t\t {\n\t\t\tout.print(\"<h1>\"+ee+\"</h1>\");\n\t\t }\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/SShivani/Online-Quiz-Project/master/WEB-INF/classes/RegisterInstructionServlet.java", "stars": "2", "class_props": {"extends": "HttpServlet", "implements": null, "modifiers": ["public"]}}, {"id": 42899, "method_name": "parseXMLFile", "class_name": "XmlUserManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parseXMLFile() {\n    final File file = new File(this.xmlPath);\n    if (!file.exists()) {\n      throw new IllegalArgumentException(\"User xml file \" + this.xmlPath\n          + \" doesn't exist.\");\n    }\n\n    final HashMap<String, User> users = new HashMap<>();\n    final HashMap<String, String> userPassword = new HashMap<>();\n    final HashMap<String, Role> roles = new HashMap<>();\n    final HashMap<String, Set<String>> groupRoles =\n        new HashMap<>();\n    final HashMap<String, Set<String>> proxyUserMap =\n        new HashMap<>();\n\n    // Creating the document builder to parse xml.\n    final DocumentBuilderFactory docBuilderFactory =\n        DocumentBuilderFactory.newInstance();\n    DocumentBuilder builder = null;\n    try {\n\n      // FIXME\u00a0Prevent XML External Entity (XXE) attacks.\n      XmlResolveUtils.avoidXEE(docBuilderFactory);\n\n      builder = docBuilderFactory.newDocumentBuilder();\n    } catch (final ParserConfigurationException e) {\n      throw new IllegalArgumentException(\n          \"Exception while parsing user xml. Document builder not created.\", e);\n    }\n\n    Document doc = null;\n    try {\n      doc = builder.parse(file);\n    } catch (final SAXException e) {\n      throw new IllegalArgumentException(\"Exception while parsing \" + this.xmlPath\n          + \". Invalid XML.\", e);\n    } catch (final IOException e) {\n      throw new IllegalArgumentException(\"Exception while parsing \" + this.xmlPath\n          + \". Error reading file.\", e);\n    }\n\n    // Only look at first item, because we should only be seeing\n    // azkaban-users tag.\n    final NodeList tagList = doc.getChildNodes();\n    final Node azkabanUsers = tagList.item(0);\n\n    final NodeList azkabanUsersList = azkabanUsers.getChildNodes();\n    for (int i = 0; i < azkabanUsersList.getLength(); ++i) {\n      final Node node = azkabanUsersList.item(i);\n      if (node.getNodeType() == Node.ELEMENT_NODE) {\n        if (node.getNodeName().equals(USER_TAG)) {\n          parseUserTag(node, users, userPassword, proxyUserMap);\n        } else if (node.getNodeName().equals(ROLE_TAG)) {\n          parseRoleTag(node, roles);\n        } else if (node.getNodeName().equals(GROUP_TAG)) {\n          parseGroupRoleTag(node, groupRoles);\n        }\n      }\n    }\n\n    // Synchronize the swap. Similarly, the gets are synchronized to this.\n    synchronized (this) {\n      this.users = users;\n      this.userPassword = userPassword;\n      this.roles = roles;\n      this.proxyUserMap = proxyUserMap;\n      this.groupRoles = groupRoles;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42900, "method_name": "parseUserTag", "class_name": "XmlUserManager", "params": ["Node", "HashMap<String,User>", "HashMap<String,String>", "HashMap<String,Set>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parseUserTag(final Node node, final HashMap<String, User> users,\n      final HashMap<String, String> userPassword,\n      final HashMap<String, Set<String>> proxyUserMap) {\n    final NamedNodeMap userAttrMap = node.getAttributes();\n    final Node userNameAttr = userAttrMap.getNamedItem(USERNAME_ATTR);\n    if (userNameAttr == null) {\n      throw new RuntimeException(\"Error loading user. The '\" + USERNAME_ATTR\n          + \"' attribute doesn't exist\");\n    }\n\n    final Node passwordAttr = userAttrMap.getNamedItem(PASSWORD_ATTR);\n    if (passwordAttr == null) {\n      throw new RuntimeException(\"Error loading user. The '\" + PASSWORD_ATTR\n          + \"' attribute doesn't exist\");\n    }\n\n    // Add user to the user/password map\n    final String username = userNameAttr.getNodeValue();\n    final String password = passwordAttr.getNodeValue();\n    userPassword.put(username, password);\n    // Add the user to the node\n    final User user = new User(userNameAttr.getNodeValue());\n    users.put(username, user);\n    logger.info(\"Loading user \" + user.getUserId());\n\n    final Node roles = userAttrMap.getNamedItem(ROLES_ATTR);\n    if (roles != null) {\n      final String value = roles.getNodeValue();\n      final String[] roleSplit = value.split(\"\\\\s*,\\\\s*\");\n      for (final String role : roleSplit) {\n        user.addRole(role);\n      }\n    }\n\n    final Node proxy = userAttrMap.getNamedItem(PROXY_ATTR);\n    if (proxy != null) {\n      final String value = proxy.getNodeValue();\n      final String[] proxySplit = value.split(\"\\\\s*,\\\\s*\");\n      for (final String proxyUser : proxySplit) {\n        Set<String> proxySet = proxyUserMap.get(username);\n        if (proxySet == null) {\n          proxySet = new HashSet<>();\n          proxyUserMap.put(username, proxySet);\n        }\n\n        proxySet.add(proxyUser);\n      }\n    }\n\n    final Node groups = userAttrMap.getNamedItem(GROUPS_ATTR);\n    if (groups != null) {\n      final String value = groups.getNodeValue();\n      final String[] groupSplit = value.split(\"\\\\s*,\\\\s*\");\n      for (final String group : groupSplit) {\n        user.addGroup(group);\n      }\n    }\n\n    final Node emailAttr = userAttrMap.getNamedItem(EMAIL_ATTR);\n    if (emailAttr != null) {\n      user.setEmail(emailAttr.getNodeValue());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42901, "method_name": "parseRoleTag", "class_name": "XmlUserManager", "params": ["Node", "HashMap<String,Role>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parseRoleTag(final Node node, final HashMap<String, Role> roles) {\n    final NamedNodeMap roleAttrMap = node.getAttributes();\n    final Node roleNameAttr = roleAttrMap.getNamedItem(ROLENAME_ATTR);\n    if (roleNameAttr == null) {\n      throw new RuntimeException(\n          \"Error loading role. The role 'name' attribute doesn't exist\");\n    }\n    final Node permissionAttr = roleAttrMap.getNamedItem(ROLEPERMISSIONS_ATTR);\n    if (permissionAttr == null) {\n      throw new RuntimeException(\n          \"Error loading role. The role 'permissions' attribute doesn't exist\");\n    }\n\n    final String roleName = roleNameAttr.getNodeValue();\n    final String permissions = permissionAttr.getNodeValue();\n\n    final String[] permissionSplit = permissions.split(\"\\\\s*,\\\\s*\");\n\n    final Permission perm = new Permission();\n    for (final String permString : permissionSplit) {\n      try {\n        final Permission.Type type = Permission.Type.valueOf(permString);\n        perm.addPermission(type);\n      } catch (final IllegalArgumentException e) {\n        logger.error(\"Error adding type \" + permString\n            + \". Permission doesn't exist.\", e);\n      }\n    }\n\n    final Role role = new Role(roleName, perm);\n    roles.put(roleName, role);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42902, "method_name": "getUser", "class_name": "XmlUserManager", "params": ["String", "String"], "throws": ["UserManagerException"], "modifiers": ["public"], "return_type": "User", "snippet": "  public User getUser(final String username, final String password)\n      throws UserManagerException {\n    if (username == null || username.trim().isEmpty()) {\n      throw new UserManagerException(\"Empty User Name.\");\n    } else if (password == null || password.trim().isEmpty()) {\n      throw new UserManagerException(\"Empty Password.\");\n    }\n\n    // Minimize the synchronization of the get. Shouldn't matter if it\n    // doesn't exist.\n    String foundPassword = null;\n    User user = null;\n    synchronized (this) {\n      foundPassword = this.userPassword.get(username);\n      if (foundPassword != null) {\n        user = this.users.get(username);\n      }\n    }\n\n    if (foundPassword == null || !foundPassword.equals(password)) {\n      throw new UserManagerException(\"Username/Password not found.\");\n    }\n    // Once it gets to this point, no exception has been thrown. User\n    // shoudn't be\n    // null, but adding this check for if user and user/password hash tables\n    // go\n    // out of sync.\n    if (user == null) {\n      throw new UserManagerException(\"Internal error: User not found.\");\n    }\n\n    // Add all the roles the group has to the user\n    resolveGroupRoles(user);\n    user.setPermissions(new UserPermissions() {\n      @Override\n      public boolean hasPermission(final String permission) {\n        return true;\n      }\n\n      @Override\n      public void addPermission(final String permission) {\n      }\n    });\n    return user;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42903, "method_name": "resolveGroupRoles", "class_name": "XmlUserManager", "params": ["User"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void resolveGroupRoles(final User user) {\n    for (final String group : user.getGroups()) {\n      final Set<String> groupRoleSet = this.groupRoles.get(group);\n      if (groupRoleSet != null) {\n        for (final String role : groupRoleSet) {\n          user.addRole(role);\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42904, "method_name": "parseGroupRoleTag", "class_name": "XmlUserManager", "params": ["Node", "HashMap<String,Set>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void parseGroupRoleTag(final Node node,\n      final HashMap<String, Set<String>> groupRoles) {\n    final NamedNodeMap groupAttrMap = node.getAttributes();\n    final Node groupNameAttr = groupAttrMap.getNamedItem(GROUPNAME_ATTR);\n    if (groupNameAttr == null) {\n      throw new RuntimeException(\n          \"Error loading role. The role 'name' attribute doesn't exist\");\n    }\n\n    final String groupName = groupNameAttr.getNodeValue();\n    final Set<String> roleSet = new HashSet<>();\n\n    final Node roles = groupAttrMap.getNamedItem(ROLES_ATTR);\n    if (roles != null) {\n      final String value = roles.getNodeValue();\n      final String[] roleSplit = value.split(\"\\\\s*,\\\\s*\");\n      for (final String role : roleSplit) {\n        roleSet.add(role);\n      }\n    }\n\n    groupRoles.put(groupName, roleSet);\n    logger.info(\"Group roles \" + groupName + \" added.\");\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42905, "method_name": "validateUser", "class_name": "XmlUserManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean validateUser(final String username) {\n    return this.users.containsKey(username);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42906, "method_name": "getRole", "class_name": "XmlUserManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Role", "snippet": "  public Role getRole(final String roleName) {\n    return this.roles.get(roleName);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42907, "method_name": "validateGroup", "class_name": "XmlUserManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean validateGroup(final String group) {\n    // Return true. Validation should be added when groups are added to the xml.\n    return true;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42908, "method_name": "validateProxyUser", "class_name": "XmlUserManager", "params": ["String", "User"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean validateProxyUser(final String proxyUser, final User realUser) {\n    if (this.proxyUserMap.containsKey(realUser.getUserId())\n        && this.proxyUserMap.get(realUser.getUserId()).contains(proxyUser)) {\n      return true;\n    } else {\n      return false;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/user/XmlUserManager.java", "stars": "18", "class_props": {"extends": null, "implements": ["UserManager"], "modifiers": ["public"]}}, {"id": 42909, "method_name": "register", "class_name": "StudentOperationsServiceImpl", "params": ["StudentDTO"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String register(StudentDTO dto) throws Exception {\n\t\tint total=0;\n\t\tfloat avg=0.0f;\n\t\tString result=null;\n\t\tStudentBO bo=null;\n\t\tint  count=0;\n\t\t//write b.logic to total,avg and resuslt\n\t\ttotal=dto.getM1()+dto.getM2()+dto.getM3();\n\t\tavg=total/3.0f;\n\t\tif(dto.getM1()<35 || dto.getM2()<35 ||dto.getM3()<35)\n\t\t\tresult=\"fail\";\n\t\telse\n\t\t\tresult=\"pass\";\n\t\t//prepare BO class obj having Persistable Data\n\t\t bo=new StudentBO();\n\t\n\t\t bo.setSname(dto.getSname());\n\t\t bo.setSadd(dto.getSadd());\n\t\t bo.setTotal(total);\n\t\t bo.setAvg(avg);\n\t\t bo.setResult(result);\n\t// use DAO\n\t\t count=dao.insert(bo);\n\t\t //process the result\n\t\t if(count==0)\n\t\t\t return \"Student Registration failed--> \";\n\t\t else\n\t\t\t return \"Student Registration succeded and total=\"+total+\" avg=\"+avg+\" result=\"+result;\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/nataraz123/Spring/master/IOCProj43-RealtimeDI-StrategyDP-AC-Propertiesfile/src/com/nt/service/StudentOperationsServiceImpl.java", "stars": "8", "class_props": {"extends": null, "implements": ["StudentOperationsService"], "modifiers": ["final", "public"]}}, {"id": 42910, "method_name": "compile", "class_name": "AssignmentExpression", "params": ["GScriptCompiler"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void compile(GScriptCompiler c) {\n\t\tif(operator.equalsIgnoreCase(\"=\")) {\n\t\t\tvalue.compile(c);\n\t\t\tvariable.compile(c);\n\t\t\tc.code.add(GVM.PUT);\n\t\t} else if(operator.equalsIgnoreCase(\"+=\")) {\n\t\t\tvariable.compile(c);\n\t\t\tvalue.compile(c);\n\t\t\tc.code.add(GVM.ADD);\n\t\t\tvariable.compile(c);\n\t\t\tc.code.add(GVM.PUT);\n\t\t} else if(operator.equalsIgnoreCase(\"-=\")) {\n\t\t\tvariable.compile(c);\n\t\t\tvalue.compile(c);\n\t\t\tc.code.add(GVM.SUB);\n\t\t\tvariable.compile(c);\n\t\t\tc.code.add(GVM.PUT);\n\t\t} else {\n\t\t\tthrow new UnsupportedOperationException(\"Operator \"+operator+\" not implemented.\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/AssignmentExpression.java", "stars": "17", "class_props": {"extends": "Expression", "implements": null, "modifiers": ["public"]}}, {"id": 42911, "method_name": "getOperator", "class_name": "AssignmentExpression", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getOperator() {\n\t\treturn operator;\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/AssignmentExpression.java", "stars": "17", "class_props": {"extends": "Expression", "implements": null, "modifiers": ["public"]}}, {"id": 42912, "method_name": "getVariable", "class_name": "AssignmentExpression", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Expression", "snippet": "\tpublic Expression getVariable() {\n\t\treturn variable;\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/AssignmentExpression.java", "stars": "17", "class_props": {"extends": "Expression", "implements": null, "modifiers": ["public"]}}, {"id": 42913, "method_name": "getValue", "class_name": "AssignmentExpression", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Expression", "snippet": "\tpublic Expression getValue() {\n\t\treturn value;\n\t}", "url": "https://raw.githubusercontent.com/geertvos/gs-lang/master/src/main/java/net/geertvos/gvm/ast/AssignmentExpression.java", "stars": "17", "class_props": {"extends": "Expression", "implements": null, "modifiers": ["public"]}}, {"id": 42914, "method_name": "isFromBeforeTo", "class_name": "CreatorLeasingDTO", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isFromBeforeTo() {\n        return from.isBefore(to);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/service/dto/leasing/CreatorLeasingDTO.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 42915, "method_name": "setExecutor", "class_name": "ParallelRequest", "params": ["ITaskExecutor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setExecutor(ITaskExecutor executor) {\n        int size = getTaskSize();\n        if (mTasks != null && size > 0) {\n            for (int i = size - 1; i >= 0; i--) {\n                Task task = mTasks[i];\n                if (task != null) {\n                    //[do task : ]\n                    ParallelTaskWrapper wrapper = ParallelTaskWrapper.obtain(this, i);\n                    wrapper.setExecutor(executor);\n                    task.setWrapper(wrapper);\n                    if (i == 0) {\n                        syncTaskWrapper = wrapper;\n                        wrapper.run();\n                    } else {\n                        executor.executeOnBackgroundThread(wrapper, ThreadPriority.FLEXIBLE, task.getTaskPriority());\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42916, "method_name": "getTaskSize", "class_name": "ParallelRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTaskSize() {\n        if (mTasks != null) {\n            return mTasks.length;\n        }\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42917, "method_name": "getTaskAt", "class_name": "ParallelRequest", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Task", "snippet": "    public Task getTaskAt(int index) {\n        int count = getTaskSize();\n        if (index < count) {\n            return mTasks[index];\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42918, "method_name": "getTaskName", "class_name": "ParallelRequest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getTaskName() {\n        return taskName;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42919, "method_name": "onTaskStateChange", "class_name": "ParallelRequest", "params": ["int", "int"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void onTaskStateChange(int index, int newState) {\n        try {\n            if (newState == Task.STATE_FINISHED) {\n                stateLatch.onTaskFinished(index);\n                ParallelTaskWrapper wrapper = getTaskWrapper(index);\n                if (wrapper == null) {\n                    TaskManagerDeliverHelper.trackCritical(\"TaskWrapper of this task is null : \" + index, getTaskName());\n                    return;\n                } else if (requestNextIdle(wrapper)) {\n                    TaskManagerDeliverHelper.trackCritical(\"Parallel task one finish: call run next idle success\");\n                    return;\n                }\n                //[no task to run : to check if need sync wait]\n                //TaskWrapper wrapper = getTaskWrapper(index);\n                if (wrapper == syncTaskWrapper || syncTaskWrapper == null) { // wait for unfinished\n                    if (!stateLatch.isAllTaskFinished()) {\n                        String var = \"wait task to finish time out: \" + parallelTimeOut;\n                        TMLog.e(TAG, var);\n                        TaskManagerDeliverHelper.trackCritical(var);\n                        long sys = System.currentTimeMillis();\n                        stateLatch.waitForUnfinished(parallelTimeOut);\n                        TMLog.e(TAG, \"wait for : \" + (System.currentTimeMillis() - sys) + taskName);\n                    }\n                    if (getTaskSize() > 1) {\n                        String taskName = getTaskName();\n                        TaskManagerDeliverHelper.trackCritical(\"Parallel task is done \", taskName);\n                    }\n                }\n\n            }\n        } catch (Exception e) {\n            // add criticalLog for bug\n            if (TMLog.isDebug()) {\n                throw e;\n            }\n            StackTraceElement[] traceElements = e.getStackTrace();\n            if (traceElements != null && traceElements.length > 0) {\n                TaskManagerDeliverHelper.trackCritical(\"crash stack[0] \", traceElements[0].toString());\n            }\n            Task task = getTask();\n            if (task != null) {\n                TaskManagerDeliverHelper.trackCritical(\"crashed \", task.getName(), e.toString());\n            } else {\n                TaskManagerDeliverHelper.trackCritical(\"crashed \", e.toString());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42920, "method_name": "requestNextIdle", "class_name": "ParallelRequest", "params": ["ParallelTaskWrapper"], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "    boolean requestNextIdle(ParallelTaskWrapper wrapper) {\n        if (wrapper != null) {\n            int nextIndex = stateLatch.getIdleTaskAndCancel();\n            if (nextIndex > 0) {\n                wrapper.changeTask(nextIndex);\n                return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42921, "method_name": "baseAppendRequestInfo", "class_name": "ParallelRequest", "params": ["StringBuilder"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void baseAppendRequestInfo(StringBuilder sb) {\n        sb.append(\"state:\")\n                .append(\"\\ntaskName:\").append(taskName)\n                .append(\"\\nrequestId:\").append(requestId);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42922, "method_name": "appendRequestInfo", "class_name": "ParallelRequest", "params": ["StringBuilder"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void appendRequestInfo(StringBuilder sb) {\n        baseAppendRequestInfo(sb);\n        sb.append(\"\\nsyncTaskWrapper:\").append(syncTaskWrapper)\n                .append(\"\\nstateLatch:\").append(stateLatch)\n                .append(\"\\nrequestId:\").append(requestId);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42923, "method_name": "getTaskWrapper", "class_name": "ParallelRequest", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "ParallelTaskWrapper", "snippet": "    private ParallelTaskWrapper getTaskWrapper(int index) {\n        Task currentTask = getTaskAt(index);\n        return (ParallelTaskWrapper) currentTask.getTaskWrapper();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42924, "method_name": "setParallelTimeOut", "class_name": "ParallelRequest", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParallelTimeOut(int timeout) {\n        parallelTimeOut = timeout;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42925, "method_name": "getTask", "class_name": "ParallelRequest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Task", "snippet": "    public Task getTask() {\n        if (mSize > 0) {\n            return mTasks[0];\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/TaskManager/src/main/java/org/qiyi/basecore/taskmanager/ParallelRequest.java", "stars": "50", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42926, "method_name": "setTotalTime", "class_name": "CountdownView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTotalTime(int totalTime) {\n        this.mTotalSecond = totalTime;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/CountdownView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["Runnable"], "modifiers": ["final", "public"]}}, {"id": 42927, "method_name": "start", "class_name": "CountdownView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n        mRecordText = getText();\n        setEnabled(false);\n        mCurrentSecond = mTotalSecond;\n        post(this);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/CountdownView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["Runnable"], "modifiers": ["final", "public"]}}, {"id": 42928, "method_name": "stop", "class_name": "CountdownView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stop() {\n        setText(mRecordText);\n        setEnabled(true);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/CountdownView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["Runnable"], "modifiers": ["final", "public"]}}, {"id": 42929, "method_name": "onAttachedToWindow", "class_name": "CountdownView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onAttachedToWindow() {\n        super.onAttachedToWindow();\n        // \u8bbe\u7f6e\u70b9\u51fb\u7684\u5c5e\u6027\n        setClickable(true);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/CountdownView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["Runnable"], "modifiers": ["final", "public"]}}, {"id": 42930, "method_name": "onDetachedFromWindow", "class_name": "CountdownView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {\n        // \u79fb\u9664\u5ef6\u8fdf\u4efb\u52a1\uff0c\u907f\u514d\u5185\u5b58\u6cc4\u9732\n        removeCallbacks(this);\n        super.onDetachedFromWindow();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/CountdownView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["Runnable"], "modifiers": ["final", "public"]}}, {"id": 42931, "method_name": "run", "class_name": "CountdownView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        if (mCurrentSecond == 0) {\n            stop();\n        } else {\n            mCurrentSecond--;\n            setText(mCurrentSecond + \" \" + TIME_UNIT);\n            postDelayed(this, 1000);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/CountdownView.java", "stars": "1", "class_props": {"extends": "AppCompatTextView", "implements": ["Runnable"], "modifiers": ["final", "public"]}}, {"id": 42932, "method_name": "exists", "class_name": "OnlineUserService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean exists(String key) {\n        return userMap.containsKey(key);\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42933, "method_name": "processNewUserReady", "class_name": "OnlineUserService", "params": ["String"], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "    boolean processNewUserReady(String username) {\n        if (userMap.containsKey(username)) {\n            return false;\n        }\n\n        UserBo userBo = removeInCache(username);\n        if (userBo == null) {\n            return false;\n        }\n\n        userMap.put(userBo.getUsername(), userBo);\n        log.info(\"user:{} add into userMap(count:{})\", username, userMap.size());\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42934, "method_name": "addNewUserCache", "class_name": "OnlineUserService", "params": ["UserBo"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addNewUserCache(UserBo userBo) {\n        if (newUserCache.containsKey(userBo.getUsername())) {\n            return;\n        }\n        newUserCache.put(userBo.getUsername(), userBo);\n        log.info(\"user:{} add into the cache(count:{})\", userBo.getUsername(), newUserCache.size());\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42935, "method_name": "subscribeInUserCache", "class_name": "OnlineUserService", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void subscribeInUserCache(String username, String destination) {\n        if (!newUserCache.containsKey(username)) {\n            return;\n        }\n        UserBo userBo = newUserCache.get(username);\n        if (userBo.getSubscribeList().contains(destination)) {\n            return;\n        }\n\n        log.info(\"user:{} subscribe the path:{}\", username, destination);\n        userBo.getSubscribeList().add(destination);\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42936, "method_name": "remove", "class_name": "OnlineUserService", "params": ["String"], "throws": null, "modifiers": [], "return_type": "boolean", "snippet": "    boolean remove(String key) {\n        removeInCache(key);\n        return removeInUserMap(key);\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42937, "method_name": "get", "class_name": "OnlineUserService", "params": ["String"], "throws": null, "modifiers": [], "return_type": "UserBo", "snippet": "    UserBo get(String key) {\n        return userMap.get(key);\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42938, "method_name": "getUserList", "class_name": "OnlineUserService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getUserList() {\n        List<String> users = new ArrayList<>();\n        userMap.forEach((key, value) -> users.add(key));\n        return users;\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42939, "method_name": "removeInCache", "class_name": "OnlineUserService", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "UserBo", "snippet": "    private UserBo removeInCache(String key) {\n        if (!newUserCache.containsKey(key)) {\n            return null;\n        }\n\n        UserBo userBo = newUserCache.get(key);\n        newUserCache.remove(key);\n        log.info(\"user:{} remove in cache(count:{})\", key, newUserCache.size());\n        return userBo;\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42940, "method_name": "removeInUserMap", "class_name": "OnlineUserService", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean removeInUserMap(String key) {\n        if (!userMap.containsKey(key)) {\n            return false;\n        }\n\n        userMap.remove(key);\n        log.info(\"user:{} remove in userMap(count:{})\", key, userMap.size());\n        return true;\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/service/OnlineUserService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42941, "method_name": "main", "class_name": "DynamicProxyTest", "params": ["String"], "throws": ["IllegalAccessException", "InstantiationException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IllegalAccessException, InstantiationException {\n        System.out.println(\"*******************\u65b9\u5f0f\u4e00*******************\");\n        JavassistProxyFactory<A> jpf = new JavassistProxyFactory<A>();\n        A a = new A();\n        jpf.setTarget(a);\n        A proxy = jpf.getProxy();\n        proxy.del();\n\n        System.out.println(\"*******************\u65b9\u5f0f\u4e8c*******************\");\n        JavassistProxyFactory02 jpf02 = new JavassistProxyFactory02();\n        A a2 = (A) jpf02.getProxy(A.class);\n        a2.del();\n        a2.save();\n    }", "url": "https://raw.githubusercontent.com/jerryygit/zrDSL-flink/master/src/test/java/DynamicProxyTest.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 42942, "method_name": "contextLoads", "class_name": "ReactivewebApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid contextLoads() {\n\t}", "url": "https://raw.githubusercontent.com/anabneri/Pokedex/master/src/test/java/com/pokedex/reactiveweb/ReactivewebApplicationTests.java", "stars": "22", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 42943, "method_name": "empire", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Empire", "snippet": "    public Empire empire()                                            { return empire; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42944, "method_name": "category", "class_name": "TechTree", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TechCategory", "snippet": "    public TechCategory category(int i)                               { return category[i]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42945, "method_name": "bestMissileBase", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MissileBase", "snippet": "    public MissileBase bestMissileBase()                              { return bestMissileBase; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42946, "method_name": "spy", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean spy()                                              { return spy; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42947, "method_name": "spy", "class_name": "TechTree", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void spy(boolean b)                                        { spy = b; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42948, "method_name": "canBuildStargate", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canBuildStargate()                                 { return canBuildStargate; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42949, "method_name": "canBuildStargate", "class_name": "TechTree", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void canBuildStargate(boolean b)                           { canBuildStargate = b; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42950, "method_name": "hyperspaceCommunications", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hyperspaceCommunications()                         { return hyperspaceCommunications; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42951, "method_name": "hyperspaceCommunications", "class_name": "TechTree", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hyperspaceCommunications(boolean b)                   { hyperspaceCommunications = b; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42952, "method_name": "tradedTechs", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> tradedTechs() {\n        if (tradedTechs == null)\n            tradedTechs = new ArrayList<>();\n        return tradedTechs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42953, "method_name": "newTechs", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> newTechs() {\n        if (newTechs == null)\n            newTechs = new ArrayList<>();\n        return newTechs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42954, "method_name": "tradedTechNotifs", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TradeTechNotification>", "snippet": "    public List<TradeTechNotification> tradedTechNotifs() {\n        if (tradedTechNotifs == null)\n            tradedTechNotifs = new ArrayList<>();\n        return tradedTechNotifs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42955, "method_name": "topArmorTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechArmor", "snippet": "    public TechArmor topArmorTech()                                   { return (TechArmor) tech(topArmorTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42956, "method_name": "topArmorTech", "class_name": "TechTree", "params": ["TechArmor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topArmorTech(TechArmor t)                             { topArmorTech = t.id();\t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42957, "method_name": "topAtmoEnrichmentTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechAtmosphereEnrichment", "snippet": "    public TechAtmosphereEnrichment topAtmoEnrichmentTech()           { return (TechAtmosphereEnrichment) tech(topAtmoEnrichmentTech);\t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42958, "method_name": "topAtmoEnrichmentTech", "class_name": "TechTree", "params": ["TechAtmosphereEnrichment"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topAtmoEnrichmentTech(TechAtmosphereEnrichment t)     { topAtmoEnrichmentTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42959, "method_name": "topAutomatedRepairTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechAutomatedRepair", "snippet": "    public TechAutomatedRepair topAutomatedRepairTech()               { return (TechAutomatedRepair) tech(topAutomatedRepairTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42960, "method_name": "topAutomatedRepairTech", "class_name": "TechTree", "params": ["TechAutomatedRepair"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topAutomatedRepairTech(TechAutomatedRepair t)         { topAutomatedRepairTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42961, "method_name": "topBattleComputerTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechBattleComputer", "snippet": "    public TechBattleComputer topBattleComputerTech()                 { return (TechBattleComputer) tech(topBattleComputerTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42962, "method_name": "topBattleComputerTech", "class_name": "TechTree", "params": ["TechBattleComputer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topBattleComputerTech(TechBattleComputer t)           { topBattleComputerTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42963, "method_name": "topBattleSuitTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechBattleSuit", "snippet": "    public TechBattleSuit topBattleSuitTech()                         { return (TechBattleSuit) tech(topBattleSuitTech);\t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42964, "method_name": "topBattleSuitTech", "class_name": "TechTree", "params": ["TechBattleSuit"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topBattleSuitTech(TechBattleSuit t)                   { topBattleSuitTech = t.id();  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42965, "method_name": "topBiologicalAntidoteTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechBiologicalAntidote", "snippet": "    public TechBiologicalAntidote topBiologicalAntidoteTech()         { return (TechBiologicalAntidote) tech(topBiologicalAntidoteTech);\t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42966, "method_name": "topBiologicalAntidoteTech", "class_name": "TechTree", "params": ["TechBiologicalAntidote"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topBiologicalAntidoteTech(TechBiologicalAntidote t)   { topBiologicalAntidoteTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42967, "method_name": "topBiologicalWeaponTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechBiologicalWeapon", "snippet": "    public TechBiologicalWeapon topBiologicalWeaponTech()             { return (TechBiologicalWeapon) tech(topBiologicalWeaponTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42968, "method_name": "topBiologicalWeaponTech", "class_name": "TechTree", "params": ["TechBiologicalWeapon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topBiologicalWeaponTech(TechBiologicalWeapon t)       { topBiologicalWeaponTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42969, "method_name": "topBombWeaponTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechBombWeapon", "snippet": "    public TechBombWeapon topBombWeaponTech()                         { return (TechBombWeapon) tech(topBombWeaponTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42970, "method_name": "topBombWeaponTech", "class_name": "TechTree", "params": ["TechBombWeapon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topBombWeaponTech(TechBombWeapon t)                   { topBombWeaponTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42971, "method_name": "topCloningTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechCloning", "snippet": "    public TechCloning topCloningTech()                               { return (TechCloning) tech(topCloningTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42972, "method_name": "topCloningTech", "class_name": "TechTree", "params": ["TechCloning"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topCloningTech(TechCloning t)                         { topCloningTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42973, "method_name": "topControlEnvironmentTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechControlEnvironment", "snippet": "    public TechControlEnvironment topControlEnvironmentTech()         { return (TechControlEnvironment) tech(topControlEnvironmentTech);\t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42974, "method_name": "topControlEnvironmentTech", "class_name": "TechTree", "params": ["TechControlEnvironment"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topControlEnvironmentTech(TechControlEnvironment t)   { topControlEnvironmentTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42975, "method_name": "topDeflectorShieldTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechDeflectorShield", "snippet": "    public TechDeflectorShield topDeflectorShieldTech()               { return (TechDeflectorShield) tech(topDeflectorShieldTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42976, "method_name": "topDeflectorShieldTech", "class_name": "TechTree", "params": ["TechDeflectorShield"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topDeflectorShieldTech(TechDeflectorShield t)         { topDeflectorShieldTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42977, "method_name": "topECMJammerTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechECMJammer", "snippet": "    public TechECMJammer topECMJammerTech()                           { return (TechECMJammer) tech(topECMJammerTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42978, "method_name": "topECMJammerTech", "class_name": "TechTree", "params": ["TechECMJammer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topECMJammerTech(TechECMJammer t)                     { topECMJammerTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42979, "method_name": "topEcoRestorationTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechEcoRestoration", "snippet": "    public TechEcoRestoration topEcoRestorationTech()                 { return (TechEcoRestoration) tech(topEcoRestorationTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42980, "method_name": "topEcoRestorationTech", "class_name": "TechTree", "params": ["TechEcoRestoration"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topEcoRestorationTech(TechEcoRestoration t)           { topEcoRestorationTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42981, "method_name": "topEnergyPulsarTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechEnergyPulsar", "snippet": "    public TechEnergyPulsar topEnergyPulsarTech()                     { return (TechEnergyPulsar) tech(topEnergyPulsarTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42982, "method_name": "topEnergyPulsarTech", "class_name": "TechTree", "params": ["TechEnergyPulsar"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topEnergyPulsarTech(TechEnergyPulsar t)               { topEnergyPulsarTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42983, "method_name": "topEngineWarpTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechEngineWarp", "snippet": "    public TechEngineWarp topEngineWarpTech()                         { return (TechEngineWarp) tech(topEngineWarpTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42984, "method_name": "topEngineWarpTech", "class_name": "TechTree", "params": ["TechEngineWarp"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topEngineWarpTech(TechEngineWarp t)                   { topEngineWarpTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42985, "method_name": "topFuelRangeTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechFuelRange", "snippet": "    public TechFuelRange topFuelRangeTech()                           { return (TechFuelRange) tech(topFuelRangeTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42986, "method_name": "topFuelRangeTech", "class_name": "TechTree", "params": ["TechFuelRange"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topFuelRangeTech(TechFuelRange t)                     { topFuelRangeTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42987, "method_name": "topHandWeaponTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechHandWeapon", "snippet": "    public TechHandWeapon topHandWeaponTech()                         { return (TechHandWeapon) tech(topHandWeaponTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42988, "method_name": "topHandWeaponTech", "class_name": "TechTree", "params": ["TechHandWeapon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topHandWeaponTech(TechHandWeapon t)                   { topHandWeaponTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42989, "method_name": "topImprovedIndustrialTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechImprovedIndustrial", "snippet": "    public TechImprovedIndustrial topImprovedIndustrialTech()         { return (TechImprovedIndustrial) tech(topImprovedIndustrialTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42990, "method_name": "topImprovedIndustrialTech", "class_name": "TechTree", "params": ["TechImprovedIndustrial"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topImprovedIndustrialTech(TechImprovedIndustrial t)   { topImprovedIndustrialTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42991, "method_name": "topTerraformingTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechImprovedTerraforming", "snippet": "    public TechImprovedTerraforming topTerraformingTech()             { return (TechImprovedTerraforming) tech(topTerraformingTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42992, "method_name": "topTerraformingTech", "class_name": "TechTree", "params": ["TechImprovedTerraforming"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topTerraformingTech(TechImprovedTerraforming t)       { topTerraformingTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42993, "method_name": "topIndustrialWasteTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechIndustrialWaste", "snippet": "    public TechIndustrialWaste topIndustrialWasteTech()               { return (TechIndustrialWaste) tech(topIndustrialWasteTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42994, "method_name": "topIndustrialWasteTech", "class_name": "TechTree", "params": ["TechIndustrialWaste"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topIndustrialWasteTech(TechIndustrialWaste t)         { topIndustrialWasteTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42995, "method_name": "topMissileShieldTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechMissileShield", "snippet": "    public TechMissileShield topMissileShieldTech()                   { return (TechMissileShield) tech(topMissileShieldTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42996, "method_name": "topMissileShieldTech", "class_name": "TechTree", "params": ["TechMissileShield"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topMissileShieldTech(TechMissileShield t)             { topMissileShieldTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42997, "method_name": "topBaseMissileTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechMissileWeapon", "snippet": "    public TechMissileWeapon topBaseMissileTech()                     { return (TechMissileWeapon) tech(topBaseMissileTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42998, "method_name": "topBaseMissileTech", "class_name": "TechTree", "params": ["TechMissileWeapon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topBaseMissileTech(TechMissileWeapon t)               { topBaseMissileTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 42999, "method_name": "topBaseScatterPackTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechMissileWeapon", "snippet": "    public TechMissileWeapon topBaseScatterPackTech()                 { return (TechMissileWeapon) tech(topBaseScatterPackTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43000, "method_name": "topBaseScatterPackTech", "class_name": "TechTree", "params": ["TechMissileWeapon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topBaseScatterPackTech(TechMissileWeapon t)           { topBaseScatterPackTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43001, "method_name": "topShipWeaponTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechShipWeapon", "snippet": "    public TechShipWeapon topShipWeaponTech()                         { return (TechShipWeapon) tech(topShipWeaponTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43002, "method_name": "topShipWeaponTech", "class_name": "TechTree", "params": ["TechShipWeapon"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topShipWeaponTech(TechShipWeapon t)                   { topShipWeaponTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43003, "method_name": "topPersonalShieldTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechPersonalShield", "snippet": "    public TechPersonalShield topPersonalShieldTech()                 { return (TechPersonalShield) tech(topPersonalShieldTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43004, "method_name": "topPersonalShieldTech", "class_name": "TechTree", "params": ["TechPersonalShield"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topPersonalShieldTech(TechPersonalShield t)           { topPersonalShieldTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43005, "method_name": "topPlanetaryShieldTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechPlanetaryShield", "snippet": "    public TechPlanetaryShield topPlanetaryShieldTech()               { return (TechPlanetaryShield) tech(topPlanetaryShieldTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43006, "method_name": "topPlanetaryShieldTech", "class_name": "TechTree", "params": ["TechPlanetaryShield"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topPlanetaryShieldTech(TechPlanetaryShield t)         { topPlanetaryShieldTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43007, "method_name": "topReserveFuelRangeTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechReserveFuelRange", "snippet": "    public TechReserveFuelRange topReserveFuelRangeTech()             { return (TechReserveFuelRange) tech(topReserveFuelRangeTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43008, "method_name": "topReserveFuelRangeTech", "class_name": "TechTree", "params": ["TechReserveFuelRange"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topReserveFuelRangeTech(TechReserveFuelRange t)       { topReserveFuelRangeTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43009, "method_name": "topRoboticControlsTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechRoboticControls", "snippet": "    public TechRoboticControls topRoboticControlsTech()               { return (TechRoboticControls) tech(topRoboticControlsTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43010, "method_name": "topRoboticControlsTech", "class_name": "TechTree", "params": ["TechRoboticControls"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topRoboticControlsTech(TechRoboticControls t)         { topRoboticControlsTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43011, "method_name": "topShipInertialTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechShipInertial", "snippet": "    public TechShipInertial topShipInertialTech()                     { return (TechShipInertial) tech(topShipInertialTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43012, "method_name": "topShipInertialTech", "class_name": "TechTree", "params": ["TechShipInertial"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topShipInertialTech(TechShipInertial t)               { topShipInertialTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43013, "method_name": "topSoilEnrichmentTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechSoilEnrichment", "snippet": "    public TechSoilEnrichment topSoilEnrichmentTech()                 { return (TechSoilEnrichment) tech(topSoilEnrichmentTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43014, "method_name": "topSoilEnrichmentTech", "class_name": "TechTree", "params": ["TechSoilEnrichment"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topSoilEnrichmentTech(TechSoilEnrichment t)           { topSoilEnrichmentTech = t.id(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43015, "method_name": "topSubspaceInterdictorTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechSubspaceInterdictor", "snippet": "    public TechSubspaceInterdictor topSubspaceInterdictorTech()       { return (TechSubspaceInterdictor) tech(topSubspaceInterdictorTech); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43016, "method_name": "topSubspaceInterdictorTech", "class_name": "TechTree", "params": ["TechSubspaceInterdictor"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void topSubspaceInterdictorTech(TechSubspaceInterdictor t) { topSubspaceInterdictorTech = t.id();\t}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43017, "method_name": "init", "class_name": "TechTree", "params": ["Empire", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(Empire c, boolean spyFlag) {\n        spy = spyFlag;\n        empire = c;\n        float discoveryPct = empire.race().techDiscoveryPct();\n        category = new TechCategory[TechTree.NUM_CATEGORIES];\n        category[0] = new TechCategory(0, this, discoveryPct);\n        category[1] = new TechCategory(1, this, discoveryPct);\n        category[2] = new TechCategory(2, this, discoveryPct);\n        category[3] = new TechCategory(3, this, discoveryPct);\n        category[4] = new TechCategory(4, this, discoveryPct);\n        category[5] = new TechCategory(5, this, discoveryPct);\n\n        for (TechCategory cat: category)\n            cat.learnFreeTechs();\n\n        updateMissileBase();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43018, "method_name": "recalc", "class_name": "TechTree", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void recalc(Empire c) {\n        init(c, false);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43019, "method_name": "updateMissileBase", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateMissileBase()      { bestMissileBase = newMissileBase(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43020, "method_name": "spyOnTechs", "class_name": "TechTree", "params": ["TechTree"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void spyOnTechs(TechTree tree) { spyOnTechs(tree, 99); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43021, "method_name": "spyOnTechs", "class_name": "TechTree", "params": ["TechTree", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void spyOnTechs(TechTree tree, int maxLevel) {\n        topArmorTech = tree.topArmorTech;\n        topAtmoEnrichmentTech = tree.topAtmoEnrichmentTech;\n        topAutomatedRepairTech = tree.topAutomatedRepairTech;\n        topBattleComputerTech = tree.topBattleComputerTech;\n        topBattleSuitTech = tree.topBattleSuitTech;\n        topBiologicalAntidoteTech = tree.topBiologicalAntidoteTech;\n        topBiologicalWeaponTech = tree.topBiologicalWeaponTech;\n        topBombWeaponTech = tree.topBombWeaponTech;\n        topCloningTech = tree.topCloningTech;\n        topControlEnvironmentTech = tree.topControlEnvironmentTech;\n        topDeflectorShieldTech = tree.topDeflectorShieldTech;\n        topECMJammerTech = tree.topECMJammerTech;\n        topEcoRestorationTech = tree.topEcoRestorationTech;\n        topEnergyPulsarTech = tree.topEnergyPulsarTech;\n        topEngineWarpTech = tree.topEngineWarpTech;\n        topFuelRangeTech = tree.topFuelRangeTech;\n        topHandWeaponTech = tree.topHandWeaponTech;\n        topImprovedIndustrialTech = tree.topImprovedIndustrialTech;\n        topTerraformingTech = tree.topTerraformingTech;\n        topIndustrialWasteTech = tree.topIndustrialWasteTech;\n        topMissileShieldTech = tree.topMissileShieldTech;\n        topPersonalShieldTech = tree.topPersonalShieldTech;\n        topPlanetaryShieldTech = tree.topPlanetaryShieldTech;\n        topRoboticControlsTech = tree.topRoboticControlsTech;\n        topShipInertialTech = tree.topShipInertialTech;\n        topSoilEnrichmentTech = tree.topSoilEnrichmentTech;\n        topSubspaceInterdictorTech = tree.topSubspaceInterdictorTech;\n        topBaseMissileTech = tree.topBaseMissileTech;\n\n        newTechs().clear();\n        newTechs().addAll(tree.newTechs());\n\n        // called when updating spy information\n        for (int i=0;i<NUM_CATEGORIES;i++)\n            category[i].spyKnownTechs(tree.category[i]);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43022, "method_name": "computer", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechCategory", "snippet": "    public TechCategory computer()     { return category[0]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43023, "method_name": "construction", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechCategory", "snippet": "    public TechCategory construction() { return category[1]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43024, "method_name": "forceField", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechCategory", "snippet": "    public TechCategory forceField()   { return category[2]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43025, "method_name": "planetology", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechCategory", "snippet": "    public TechCategory planetology()  { return category[3]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43026, "method_name": "propulsion", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechCategory", "snippet": "    public TechCategory propulsion()   { return category[4]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43027, "method_name": "weapon", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TechCategory", "snippet": "    public TechCategory weapon()       { return category[5]; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43028, "method_name": "acquireTradedTechs", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void acquireTradedTechs() {\n        if (empire().isPlayer()) {\n            for (TradeTechNotification notif: tradedTechNotifs()) {\n                boolean newTech = learnTech(notif.techId);\n                if (newTech)\n                    GameSession.instance().addTurnNotification(notif);\n            }\n        }\n        else {\n            for (Tech t: tradedTechs())\n                learnTech(t.id());\n        }\n        tradedTechNotifs().clear();\n        tradedTechs().clear();\n        newTechs().clear();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43029, "method_name": "adjustTechAllocation", "class_name": "TechTree", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean adjustTechAllocation(int index, int adj) {\n        TechCategory changedCat = category[index];\n        if (changedCat.locked())\n            return false;\n\n        int MAX = TechCategory.MAX_ALLOCATION_TICKS;\n\n        int newValue = changedCat.allocation()+adj;\n        if ((newValue <0)\n        || (newValue > MAX))\n            return false;\n\n        for (int i=category.length-1;i>=0;i--) {\n            if ((i != index) & (!category[i].locked()) & (adj != 0)) {\n                int adj2;\n                TechCategory affectedCat = category[i];\n                if (adj > 0)\n                    adj2 = min(adj,affectedCat.allocation());\n                else\n                    adj2 = 0 - min(0-adj,MAX-affectedCat.allocation());\n\n                if (adj2 != 0) {\n                    changedCat.adjustAllocation(adj2);\n                    affectedCat.adjustAllocation(-adj2);\n                    adj -= adj2;\n                }\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43030, "method_name": "equalizeAllocations", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void equalizeAllocations() {\n        int freeAlloc = TechCategory.MAX_ALLOCATION_TICKS;\n        int numLocks = 0;\n\n        for (TechCategory cat: category) {\n            if (cat.locked()) {\n                freeAlloc -= cat.allocation();\n                numLocks++;\n            }\n        }\n        int allocPerCategory = freeAlloc / (category.length - numLocks);\n        int categoriesSet = numLocks;\n\n        for (TechCategory cat: category) {\n            if (!cat.locked()) {\n                categoriesSet++;\n                if (categoriesSet == category.length)\n                    // last unlocked category gets all remaining allocation\n                    cat.allocation(freeAlloc);\n                else {\n                    cat.allocation(allocPerCategory);\n                    freeAlloc -= allocPerCategory;\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43031, "method_name": "hostilityAllowed", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int hostilityAllowed() {\n        return topControlEnvironmentTech != null ? topControlEnvironmentTech().hostilityAllowed() : 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43032, "method_name": "researchingHostilityAllowed", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int researchingHostilityAllowed() {\n        int hostilityAllowed = hostilityAllowed();\n\n        String id = planetology().currentTech();\n        if (id == null)\n            return hostilityAllowed;\n        \n        Tech t = tech(id);\n        if (t.isControlEnvironmentTech()) {\n            TechControlEnvironment t0 = (TechControlEnvironment) t;\n            hostilityAllowed = max(hostilityAllowed, t0.hostilityAllowed());\n        }\n        return hostilityAllowed;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43033, "method_name": "learnableHostilityAllowed", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int learnableHostilityAllowed() {\n        int hostilityAllowed = hostilityAllowed();\n\n        String currId = planetology().currentTech();\n        if (currId == null)\n            return hostilityAllowed;\n        \n        for (String id: planetology().techIdsAvailableForResearch(true)) {\n            Tech t = tech(id);\n            if (t.isControlEnvironmentTech()) {\n                TechControlEnvironment t0 = (TechControlEnvironment) t;\n                hostilityAllowed = max(hostilityAllowed, t0.hostilityAllowed());\n            }\n        }\n        return hostilityAllowed;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43034, "method_name": "canTerraformHostile", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canTerraformHostile() {\n        return topAtmoEnrichmentTech() != null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43035, "method_name": "researchingShipRange", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int researchingShipRange() {\n        int range = ((TechFuelRange) tech(topFuelRangeTech)).range();\n\n        String id = propulsion().currentTech();\n        if (id == null)\n            return range;\n        \n        Tech t = tech(id);\n        if (t.isFuelRangeTech()) {\n            TechFuelRange t0 = (TechFuelRange) t;\n            range = max(range, t0.range());\n        }\n        return range;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43036, "method_name": "learnableShipRange", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int learnableShipRange() {\n        int range = ((TechFuelRange) tech(topFuelRangeTech)).range();\n\n        for (String id: propulsion().techIdsAvailableForResearch(true)) {\n            Tech t = tech(id);\n            if (t.isFuelRangeTech()) {\n                TechFuelRange t0 = (TechFuelRange) t;\n                range = max(range, t0.range());\n            }\n        }\n        return range;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43037, "method_name": "researchingScoutRange", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int researchingScoutRange() {\n        int rsv = topReserveFuelRangeTech().range();\n        int range = ((TechFuelRange) tech(topFuelRangeTech)).range()+rsv;\n\n        String id = propulsion().currentTech();\n        if (id == null)\n            return range;\n        \n        Tech t = tech(id);\n        if (t.isFuelRangeTech()) {\n            TechFuelRange t0 = (TechFuelRange) t;\n            range = max(range, t0.range()+rsv);\n        }\n        return range;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43038, "method_name": "learnableScoutRange", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int learnableScoutRange() {\n        int rsv = topReserveFuelRangeTech().range();\n        int range = ((TechFuelRange) tech(topFuelRangeTech)).range()+rsv;\n\n        for (String id: propulsion().techIdsAvailableForResearch(true)) {\n            Tech t = tech(id);\n            if (t.isFuelRangeTech()) {\n                TechFuelRange t0 = (TechFuelRange) t;\n                range = max(range, t0.range()+rsv);\n            }\n        }\n        return range;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43039, "method_name": "environmentTechNeededToColonize", "class_name": "TechTree", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String environmentTechNeededToColonize(int hostility) {\n        // returns the id of the currently unknown ecology tech we need \n        // to research in order to colonize planets of a certain hostitily level\n        // if no tech is needed or it is impossible, return null\n        int hostilityAllowed = hostilityAllowed();\n\n        if (hostilityAllowed >= hostility)\n            return null;\n        \n        // check current research tech first\n        String currentId = planetology().currentTech();\n        if (currentId == null)\n            return null;\n                    \n        Tech t = tech(currentId);\n        if (t.isControlEnvironmentTech()) {\n            TechControlEnvironment t0 = (TechControlEnvironment) t;\n            if (t0.hostilityAllowed() >= hostility)\n                return currentId;\n        }\n        \n        for (String id: planetology().techIdsAvailableForResearch(true)) {\n            t = tech(id);\n            if (t.isControlEnvironmentTech()) {\n                TechControlEnvironment t0 = (TechControlEnvironment) t;\n                if (t0.hostilityAllowed() >= hostility)\n                    return id;            \n            }\n        }\n        return null;        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43040, "method_name": "rangeTechNeededToScoutDistance", "class_name": "TechTree", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String rangeTechNeededToScoutDistance(float dist) {\n        // returns the id of the currently unknown propulsion tech we need \n        // to research in order for scout ships to reach range dist\n        // if no tech is needed or it is impossible, return null\n        int rsv = topReserveFuelRangeTech().range();\n        int range = ((TechFuelRange) tech(topFuelRangeTech)).range()+rsv;\n        if (range >= dist)\n            return null;\n        \n        // check current research tech first\n        String currentId = propulsion().currentTech();\n        if (currentId == null)\n            return null;\n               \n        Tech t = tech(currentId);\n        if (t.isFuelRangeTech()) {\n            TechFuelRange t0 = (TechFuelRange) t;\n            if (t0.range()+rsv >= dist)\n                return currentId;\n        }\n         \n        for (String id: propulsion().techIdsAvailableForResearch(true)) {\n            t = tech(id);\n            if (t.isFuelRangeTech()) {\n                TechFuelRange t0 = (TechFuelRange) t;\n                if (t0.range()+rsv >= dist)\n                    return id;\n            }\n        }      \n        return null;      \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43041, "method_name": "rangeTechNeededToReachDistance", "class_name": "TechTree", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String rangeTechNeededToReachDistance(float dist) {\n        // returns the id of the currently unknown propulsion tech we need \n        // to research in order for normal ships to reach range dist\n        // if no tech is needed or it is impossible, return null\n        int range = ((TechFuelRange) tech(topFuelRangeTech)).range();\n        if (range >= dist)\n            return null;\n        \n        // check current research tech first\n        String currentId = propulsion().currentTech();\n        if (currentId == null)\n            return null;\n        \n        Tech t = tech(currentId);\n        if (t.isFuelRangeTech()) {\n            TechFuelRange t0 = (TechFuelRange) t;\n            if (t0.range() >= dist)\n                return currentId;\n        }\n        \n        for (String id: propulsion().techIdsAvailableForResearch(true)) {\n            t = tech(id);\n            if (t.isFuelRangeTech()) {\n                TechFuelRange t0 = (TechFuelRange) t;\n                if (t0.range() >= dist)\n                    return id;\n            }\n        }      \n        return null;      \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43042, "method_name": "maxTechLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float maxTechLevel() {\n        float lvl = 0;\n        for (TechCategory cat: category)\n            lvl = Math.max(lvl,cat.techLevel());\n        return lvl;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43043, "method_name": "avgTechLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Float", "snippet": "    public Float avgTechLevel() {\n        float sum = 0;\n        for (TechCategory cat: category)\n            sum += cat.techLevel();\n        return sum/category.length;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43044, "method_name": "allocateResearch", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void allocateResearch() {\n        for (int j=0; j<category.length; j++)\n            category[j].allocateResearchBC();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43045, "method_name": "randomKnownTech", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String randomKnownTech() {\n        return random(category).randomKnownTech();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43046, "method_name": "randomUnknownTech", "class_name": "TechTree", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Tech", "snippet": "    public Tech randomUnknownTech(int minLevel, int levelDiff) {\n        return random(category).randomUnknownTech(minLevel, levelDiff);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43047, "method_name": "knowAll", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void knowAll() { knowAll(99, 1); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43048, "method_name": "knowAll", "class_name": "TechTree", "params": ["int", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void knowAll(int maxLevel, float pct) {\n        for (TechCategory cat: category)\n            cat.knowAll(maxLevel, pct);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43049, "method_name": "learnAll", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void learnAll() {\n        for (TechCategory cat: category)\n            cat.learnAll();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43050, "method_name": "allowResearch", "class_name": "TechTree", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void allowResearch(String id) {\n        category[tech(id).cat.index()].allowResearch(id);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43051, "method_name": "knows", "class_name": "TechTree", "params": ["Tech"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean knows(Tech t) {\n        return t == null ? true : category[t.cat.index()].knownTechs().contains(t.id());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43052, "method_name": "knowsTechOfType", "class_name": "TechTree", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean knowsTechOfType(int type) {\n        for (TechCategory cat: category) {\n            for (String id: cat.knownTechs()) {\n                if (tech(id).isType(type))\n                    return true;\n            }\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43053, "method_name": "allKnownTechs", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> allKnownTechs() {\n        List<String> techs = new ArrayList<>();\n        TechCategory[] cats = category;\n        for (TechCategory cat: cats) \n            techs.addAll(cat.knownTechs());\n        return techs;        \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43054, "method_name": "allTechsOfType", "class_name": "TechTree", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> allTechsOfType(int type) {\n        List<Tech> techs = new ArrayList<>();\n        TechCategory[] cats = category;\n        for (TechCategory cat: cats) {\n            for (String id: cat.allTechs()) {\n                Tech t = tech(id);\n                if (t.isType(type))\n                    techs.add(t);\n            }\n        }\n        return techs;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43055, "method_name": "studying", "class_name": "TechTree", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean studying(String id) {\n        return id == null ? false : category[tech(id).cat.index()].currentTech().equals(id);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43056, "method_name": "techsUnknownTo", "class_name": "TechTree", "params": ["Empire"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> techsUnknownTo(Empire empire) {\n        List<Tech> result = new ArrayList<>();\n        for (TechCategory cat: category) {\n            for (String id: cat.knownTechs()) {\n                Tech t = tech(id);\n                // if empire doesn't know tech and hasn't trade for it\n                if (!empire.tech().knows(t)\n                && (!empire.tech().tradedTechs().contains(t)))\n                    result.add(t);\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43057, "method_name": "worseTechsUnknownToCiv", "class_name": "TechTree", "params": ["TechTree", "float"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> worseTechsUnknownToCiv(TechTree tree, float maxLevel) {\n        List<Tech> r = new ArrayList<>();\n\n        for (TechCategory cat : category) {\n            for (String id: cat.knownTechs()) {\n                Tech t = tech(id);\n                if (!t.isFutureTech() && (t.level <= maxLevel) && !tree.knows(t))\n                    r.add(t);\n            }\n        }\n        return r;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43058, "method_name": "betterTechsUnknownToCiv", "class_name": "TechTree", "params": ["TechTree", "float", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "List<Tech>", "snippet": "    public List<Tech> betterTechsUnknownToCiv(TechTree otherTech, float maxLevel, boolean excludeObs) {\n        List<Tech> r = new ArrayList<>();\n\n        for (TechCategory cat : category) {\n            for (String id: cat.knownTechs()) {\n                    Tech t = tech(id);\n                if (!t.isFutureTech() && !otherTech.knows(t)) {\n                    if (excludeObs && t.isObsolete(otherTech.empire))\n                        ;\n                    else  if (t.level >= maxLevel)\n                        r.add(t);\n                }\n            }\n        }\n        return r;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43059, "method_name": "acquireTechThroughTrade", "class_name": "TechTree", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void acquireTechThroughTrade(String techId, int empId) {\n        Tech t = tech(techId);\n        tradedTechs().add(t);\n        if (empire().isPlayer())\n            tradedTechNotifs().add(TradeTechNotification.create(techId, empId));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43060, "method_name": "learnTech", "class_name": "TechTree", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean learnTech(String id) {\n        newTechs().add(id);\n        return category[tech(id).cat.index()].learnTech(id);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43061, "method_name": "popIncreaseCost", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int popIncreaseCost() {\n        return topTerraformingTech == null ? TechImprovedTerraforming.BASE_COST : topTerraformingTech().costPerMillion;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43062, "method_name": "armorGroundBonus", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float armorGroundBonus() {\n        return topArmorTech == null ? 0 : topArmorTech().groundAttackBonus;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43063, "method_name": "battleSuitGroundBonus", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float battleSuitGroundBonus() {\n        return topBattleSuitTech == null ? 0 : topBattleSuitTech().groundCombatBonus;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43064, "method_name": "shieldGroundBonus", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float shieldGroundBonus() {\n        return topPersonalShieldTech == null ? 0 : topPersonalShieldTech().groundAttackBonus;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43065, "method_name": "weaponGroundBonus", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float weaponGroundBonus() {\n        return topHandWeaponTech == null ? 0 : topHandWeaponTech().combatMod;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43066, "method_name": "troopCombatAdj", "class_name": "TechTree", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float troopCombatAdj(boolean defendFlag) {\n        float adj = empire.race().groundAttackBonus() + armorGroundBonus() + battleSuitGroundBonus() + shieldGroundBonus() + weaponGroundBonus();\n        if (defendFlag)\n            adj += 5;\n        return adj;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43067, "method_name": "maxPlanetaryShieldLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float maxPlanetaryShieldLevel() {\n               return topPlanetaryShieldTech == null ? 0 : topPlanetaryShieldTech().damage;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43068, "method_name": "maxDeflectorShieldLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float maxDeflectorShieldLevel() {\n        return topDeflectorShieldTech == null ? 0 : topDeflectorShieldTech().damage;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43069, "method_name": "terraformAdj", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float terraformAdj() {\n        return topTerraformingTech == null ? 0 : topTerraformingTech().increase();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43070, "method_name": "topSpeed", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float topSpeed() {\n        return topEngineWarpTech == null ? 1 : topEngineWarpTech().warp();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43071, "method_name": "transportSpeed", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float transportSpeed() {\n        return Math.max(1, (topSpeed() - 1));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43072, "method_name": "shipDamageRepairPct", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float shipDamageRepairPct() {\n        return topAutomatedRepairTech == null ? 0 : topAutomatedRepairTech().repairAdj;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43073, "method_name": "antidoteLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float antidoteLevel() {\n        return topBiologicalAntidoteTech == null ? 0 : topBiologicalAntidoteTech().attackReduction;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43074, "method_name": "biologicalAttackLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float biologicalAttackLevel() {\n        return topBiologicalWeaponTech == null ? 0 : topBiologicalWeaponTech().maxDamage;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43075, "method_name": "bombAttackLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float bombAttackLevel() {\n        return topBombWeaponTech == null ? 0 : topBombWeaponTech().damageHigh();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43076, "method_name": "populationCost", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float populationCost() {\n        return topCloningTech == null ? TechCloning.BASE_POPULATION_COST : topCloningTech().growthCost;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43077, "method_name": "enrichSoil", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean enrichSoil() {\n        return topSoilEnrichmentTech != null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43078, "method_name": "subspaceInterdiction", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean subspaceInterdiction() {\n        return topSubspaceInterdictorTech != null;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43079, "method_name": "wasteElimination", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float wasteElimination() {\n        return topEcoRestorationTech == null ? TechEcoRestoration.BASE_WASTE_ELIMINATED : topEcoRestorationTech().wasteEliminated;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43080, "method_name": "shipRange", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int shipRange() {\n        return topFuelRangeTech == null ? 1 : topFuelRangeTech().range();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43081, "method_name": "scoutRange", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int scoutRange() {\n       return shipRange() + topReserveFuelRangeTech().range();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43082, "method_name": "baseFactoryCost", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float baseFactoryCost() {\n        return topImprovedIndustrialTech == null ? TechImprovedIndustrial.BASE_FACTORY_COST : topImprovedIndustrialTech().factoryCost;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43083, "method_name": "factoryWasteMod", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float factoryWasteMod() {\n        return topIndustrialWasteTech == null ? TechIndustrialWaste.BASE_FACTORY_WASTE_MOD : topIndustrialWasteTech().wasteModifier;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43084, "method_name": "wasteCleanupTechMod", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float wasteCleanupTechMod() {\n        return 4 * factoryWasteMod() / wasteElimination();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43085, "method_name": "maxFactoryCost", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float maxFactoryCost() {\n        // ignoreFactoryRefit = always use RC2 has basis for factory cost\n        int controls = empire.race().ignoresFactoryRefit ?  TechRoboticControls.BASE_ROBOT_CONTROLS : baseRobotControls();\n        return newFactoryCost(controls);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43086, "method_name": "newFactoryCost", "class_name": "TechTree", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float newFactoryCost(int controls) {\n        return baseFactoryCost() * controls / 2;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43087, "method_name": "baseRobotControls", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int baseRobotControls() {\n        return topRoboticControlsTech == null ? TechRoboticControls.BASE_ROBOT_CONTROLS : topRoboticControlsTech().mark;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43088, "method_name": "canColonize", "class_name": "TechTree", "params": ["Planet"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean canColonize(Planet p) {\n        return topControlEnvironmentTech == null ? false : topControlEnvironmentTech().canColonize(p);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43089, "method_name": "minColonyLevel", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float minColonyLevel() {\n        return topControlEnvironmentTech == null ? PlanetType.HOSTILITY_MINIMAL : topControlEnvironmentTech().environment();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43090, "method_name": "newMissileBase", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MissileBase", "snippet": "    public MissileBase newMissileBase() {\n        MissileBase base = new MissileBase();\n        if (topArmorTech != null)\n            base.armor(topArmorTech().baseArmor);\n        if (topBaseMissileTech != null)\n            base.missile(topBaseMissileTech().baseMissile);\n        if (topBaseScatterPackTech != null)\n            base.scatterPack(topBaseScatterPackTech().baseMissile);\n        if (topDeflectorShieldTech != null)\n            base.shield(topDeflectorShieldTech().baseShield);\n        if (topBattleComputerTech != null)\n            base.computer(topBattleComputerTech().baseComputer);\n        if (topECMJammerTech != null)\n            base.ecm(topECMJammerTech().baseECM);\n        if (topMissileShieldTech != null)\n            base.missileShield(topMissileShieldTech().baseMissileShield);\n        return base;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43091, "method_name": "newMissileBaseCost", "class_name": "TechTree", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float newMissileBaseCost() {\n        float cost = MissileBase.MINIMUM_COST;\n        if (topArmorTech != null)\n            cost += topArmorTech().baseArmor.cost(empire());\n        if (topBaseMissileTech != null)\n            cost += topBaseMissileTech().baseMissile.cost(empire());\n        if (topBaseScatterPackTech != null)\n            cost += topBaseScatterPackTech().baseMissile.cost(empire());\n        if (topDeflectorShieldTech != null)\n            cost += topDeflectorShieldTech().baseShield.cost(empire());\n        if (topBattleComputerTech != null)\n            cost += topBattleComputerTech().baseComputer.cost(empire());\n        if (topECMJammerTech != null)\n            cost += topECMJammerTech().baseECM.cost(empire());\n        return cost;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/tech/TechTree.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base", "Serializable"], "modifiers": ["final", "public"]}}, {"id": 43092, "method_name": "toString", "class_name": "SourceInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"SourceInfo{\" +\n                \"url='\" + url + '\\'' +\n                \", length=\" + length +\n                \", mime='\" + mime + '\\'' +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-proxy_cache/src/main/java/com/danikula/videocache/SourceInfo.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43093, "method_name": "save", "class_name": "BookRepository", "params": ["Book"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void save(Book book) {\n\n\t\tEntityManager entityManager = entityManagerFactory.createEntityManager();\n\n\t\tif (entityManager == null)\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: EntityManager is null!\");\n\n\t\ttry {\n\t\t\t\n\t\t\tentityManager.getTransaction().begin();\n\t\t\t\n\t\t\tentityManager.persist(book);\n\t\t\tentityManager.flush();\n\t\t\t\n\t\t\tentityManager.getTransaction().commit();\n\n\t\t}  catch (Exception e) {\n\t\t\t\n\t\t\tif (entityManager.isOpen())\n\t\t\t\tentityManager.getTransaction().rollback();\n\t\t\t\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: \" + e.getMessage(), e);\n\t\t\t\n\t\t} finally {\n\n\t\t\tif (entityManager.isOpen()) \n\t\t\t\tentityManager.close();\n\t\t\t\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/model/repository/BookRepository.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43094, "method_name": "update", "class_name": "BookRepository", "params": ["Book"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void update(Book book) {\n\n\t\tEntityManager entityManager = entityManagerFactory.createEntityManager();\n\n\t\tif (entityManager == null)\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: EntityManager is null!\");\n\n\t\ttry {\n\t\t\t\n\t\t\tentityManager.getTransaction().begin();\n\t\t\t\n\t\t\tentityManager.merge(book);\n\t\t\tentityManager.flush();\n\t\t\t\n\t\t\tentityManager.getTransaction().commit();\n\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\tif (entityManager.isOpen())\n\t\t\t\tentityManager.getTransaction().rollback();\n\t\t\t\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: \" + e.getMessage(), e);\n\t\t\t\n\t\t} finally {\n\n\t\t\tif (entityManager.isOpen()) \n\t\t\t\tentityManager.close();\n\t\t\t\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/model/repository/BookRepository.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43095, "method_name": "remove", "class_name": "BookRepository", "params": ["Book"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void remove(Book book) {\n\t\t\n\t\tEntityManager entityManager = entityManagerFactory.createEntityManager();\n\n\t\tif (entityManager == null)\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: EntityManager is null!\");\n\n\t\ttry {\n\t\t\t\n\t\t\tentityManager.getTransaction().begin();\n\t\t\t\n\t\t\tentityManager.remove(entityManager.getReference(Book.class, book.getId()));\n\t\t\t\n\t\t\tentityManager.getTransaction().commit();\n\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\tif (entityManager.isOpen())\n\t\t\t\tentityManager.getTransaction().rollback();\n\t\t\t\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: \" + e.getMessage(), e);\n\t\t\t\n\t\t} finally {\n\n\t\t\tif (entityManager.isOpen()) \n\t\t\t\tentityManager.close();\n\t\t\t\n\t\t}\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/model/repository/BookRepository.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43096, "method_name": "findAll", "class_name": "BookRepository", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Book>", "snippet": "\tpublic List<Book> findAll() {\n\n\t\tEntityManager entityManager = entityManagerFactory.createEntityManager();\n\n\t\tList<Book> retorno = null;\n\n\t\tif (entityManager == null)\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: EntityManager is null!\");\n\n\t\ttry {\n\t\t\t\n\t\t\tretorno = entityManager.createQuery(\"select u from Book u\", Book.class).getResultList();\n\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: \" + e.getMessage(), e);\n\t\t\t\n\t\t} finally {\n\n\t\t\tif (entityManager.isOpen()) \n\t\t\t\tentityManager.close();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn retorno;\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/model/repository/BookRepository.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43097, "method_name": "findById", "class_name": "BookRepository", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Book", "snippet": "\tpublic Book findById(Long id) {\n\n\t\tEntityManager entityManager = entityManagerFactory.createEntityManager();\n\n\t\tBook retorno = null;\n\n\t\tif (entityManager == null)\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: EntityManager is null!\");\n\n\t\ttry {\n\t\t\t\n\t\t\tString query = \"select u from Book u where u.id = :id\";\n\t\t\t\n\t\t\tTypedQuery<Book> createQuery = entityManager.createQuery(query, Book.class);\n\t\t\t\n\t\t\tcreateQuery.setParameter(\"id\", id);\n\t\t\t\n\t\t\tretorno = createQuery.getSingleResult();\n\n\t\t} catch (Exception e) {\n\t\t\t\n\t\t\tthrow new LibrarySystemException(\"Repository Exception: \" + e.getMessage(), e);\n\t\t\t\n\t\t} finally {\n\n\t\t\tif (entityManager.isOpen()) \n\t\t\t\tentityManager.close();\n\t\t\t\n\t\t}\n\t\t\n\t\treturn retorno;\n\n\t}", "url": "https://raw.githubusercontent.com/marcoseduardoss/mini-mvc/master/demos/001-crud-books-mvc-servlets-jstl-jpa/src/main/java/br/me/crudbooks/model/repository/BookRepository.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43098, "method_name": "onCreate", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate() {\n        super.onCreate();\n        registerObserver(mObserver);\n\n        // Register for preference changes\n        mSettings = Settings.getInstance(this);\n        mPTTSoundEnabled = mSettings.isPttSoundEnabled();\n        mShortTtsMessagesEnabled = mSettings.isShortTextToSpeechMessagesEnabled();\n        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);\n        preferences.registerOnSharedPreferenceChangeListener(this);\n\n        // Manually set theme to style overlay views\n        // XML <application> theme does NOT do this!\n        setTheme(R.style.Theme_Mumla);\n\n        mMessageLog = new ArrayList<>();\n        mMessageNotification = new MumlaMessageNotification(MumlaService.this);\n\n        // Instantiate overlay view\n        mChannelOverlay = new MumlaOverlay(this);\n        mHotCorner = new MumlaHotCorner(this, mSettings.getHotCornerGravity(), mHotCornerListener);\n\n        // Set up TTS\n        if(mSettings.isTextToSpeechEnabled())\n            mTTS = new TextToSpeech(this, mTTSInitListener);\n\n        mTalkReceiver = new TalkBroadcastReceiver(this);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43099, "method_name": "onBind", "class_name": "MumlaService", "params": ["Intent"], "throws": null, "modifiers": ["public"], "return_type": "IBinder", "snippet": "    public IBinder onBind(Intent intent) {\n        return new MumlaBinder(this);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43100, "method_name": "onDestroy", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDestroy() {\n        if (mNotification != null) {\n            mNotification.hide();\n            mNotification = null;\n        }\n        if (mReconnectNotification != null) {\n            mReconnectNotification.hide();\n            mReconnectNotification = null;\n        }\n\n        SharedPreferences preferences = PreferenceManager.getDefaultSharedPreferences(this);\n        preferences.unregisterOnSharedPreferenceChangeListener(this);\n        try {\n            unregisterReceiver(mTalkReceiver);\n        } catch (IllegalArgumentException e) {\n            e.printStackTrace();\n        }\n\n        unregisterObserver(mObserver);\n        if(mTTS != null) mTTS.shutdown();\n        mMessageLog = null;\n        mMessageNotification.dismiss();\n        super.onDestroy();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43101, "method_name": "onConnectionSynchronized", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConnectionSynchronized() {\n        super.onConnectionSynchronized();\n\n        // Restore mute/deafen state\n        if(mSettings.isMuted() || mSettings.isDeafened()) {\n            setSelfMuteDeafState(mSettings.isMuted(), mSettings.isDeafened());\n        }\n\n        registerReceiver(mTalkReceiver, new IntentFilter(TalkBroadcastReceiver.BROADCAST_TALK));\n\n        if (mSettings.isHotCornerEnabled()) {\n            mHotCorner.setShown(true);\n        }\n        // Configure proximity sensor\n        if (mSettings.isHandsetMode()) {\n            setProximitySensorOn(true);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43102, "method_name": "onConnectionDisconnected", "class_name": "MumlaService", "params": ["HumlaException"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onConnectionDisconnected(HumlaException e) {\n        super.onConnectionDisconnected(e);\n        try {\n            unregisterReceiver(mTalkReceiver);\n        } catch (IllegalArgumentException iae) {\n        }\n\n        // Remove overlay if present.\n        mChannelOverlay.hide();\n\n        mHotCorner.setShown(false);\n\n        setProximitySensorOn(false);\n\n        mMessageLog.clear();\n        mMessageNotification.dismiss();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43103, "method_name": "onSharedPreferenceChanged", "class_name": "MumlaService", "params": ["SharedPreferences", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, String key) {\n        Bundle changedExtras = new Bundle();\n        boolean requiresReconnect = false;\n        switch (key) {\n            case Settings.PREF_INPUT_METHOD:\n                /* Convert input method defined in settings to an integer format used by Humla. */\n                int inputMethod = mSettings.getHumlaInputMethod();\n                changedExtras.putInt(HumlaService.EXTRAS_TRANSMIT_MODE, inputMethod);\n                mChannelOverlay.setPushToTalkShown(inputMethod == Constants.TRANSMIT_PUSH_TO_TALK);\n                break;\n            case Settings.PREF_HANDSET_MODE:\n                setProximitySensorOn(isConnectionEstablished() && mSettings.isHandsetMode());\n                changedExtras.putInt(HumlaService.EXTRAS_AUDIO_STREAM, mSettings.isHandsetMode() ?\n                                     AudioManager.STREAM_VOICE_CALL : AudioManager.STREAM_MUSIC);\n                break;\n            case Settings.PREF_THRESHOLD:\n                changedExtras.putFloat(HumlaService.EXTRAS_DETECTION_THRESHOLD,\n                        mSettings.getDetectionThreshold());\n                break;\n            case Settings.PREF_HOT_CORNER_KEY:\n                mHotCorner.setGravity(mSettings.getHotCornerGravity());\n                mHotCorner.setShown(isConnectionEstablished() && mSettings.isHotCornerEnabled());\n                break;\n            case Settings.PREF_USE_TTS:\n                if (mTTS == null && mSettings.isTextToSpeechEnabled())\n                    mTTS = new TextToSpeech(this, mTTSInitListener);\n                else if (mTTS != null && !mSettings.isTextToSpeechEnabled()) {\n                    mTTS.shutdown();\n                    mTTS = null;\n                }\n                break;\n            case Settings.PREF_SHORT_TTS_MESSAGES:\n                mShortTtsMessagesEnabled = mSettings.isShortTextToSpeechMessagesEnabled();\n                break;\n            case Settings.PREF_AMPLITUDE_BOOST:\n                changedExtras.putFloat(EXTRAS_AMPLITUDE_BOOST,\n                        mSettings.getAmplitudeBoostMultiplier());\n                break;\n            case Settings.PREF_HALF_DUPLEX:\n                changedExtras.putBoolean(EXTRAS_HALF_DUPLEX, mSettings.isHalfDuplex());\n                break;\n            case Settings.PREF_PREPROCESSOR_ENABLED:\n                changedExtras.putBoolean(EXTRAS_ENABLE_PREPROCESSOR,\n                        mSettings.isPreprocessorEnabled());\n                break;\n            case Settings.PREF_PTT_SOUND:\n                mPTTSoundEnabled = mSettings.isPttSoundEnabled();\n                break;\n            case Settings.PREF_INPUT_QUALITY:\n                changedExtras.putInt(EXTRAS_INPUT_QUALITY, mSettings.getInputQuality());\n                break;\n            case Settings.PREF_INPUT_RATE:\n                changedExtras.putInt(EXTRAS_INPUT_RATE, mSettings.getInputSampleRate());\n                break;\n            case Settings.PREF_FRAMES_PER_PACKET:\n                changedExtras.putInt(EXTRAS_FRAMES_PER_PACKET, mSettings.getFramesPerPacket());\n                break;\n            case Settings.PREF_CERT_ID:\n            case Settings.PREF_FORCE_TCP:\n            case Settings.PREF_USE_TOR:\n            case Settings.PREF_DISABLE_OPUS:\n                // These are settings we flag as 'requiring reconnect'.\n                requiresReconnect = true;\n                break;\n        }\n        if (changedExtras.size() > 0) {\n            try {\n                // Reconfigure the service appropriately.\n                requiresReconnect |= configureExtras(changedExtras);\n            } catch (AudioException e) {\n                e.printStackTrace();\n            }\n        }\n\n        if (requiresReconnect && isConnectionEstablished()) {\n            Toast.makeText(this, R.string.change_requires_reconnect, Toast.LENGTH_LONG).show();\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43104, "method_name": "setProximitySensorOn", "class_name": "MumlaService", "params": ["boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setProximitySensorOn(boolean on) {\n        if(on) {\n            PowerManager pm = (PowerManager) getSystemService(POWER_SERVICE);\n            mProximityLock = pm.newWakeLock(PROXIMITY_SCREEN_OFF_WAKE_LOCK, \"Mumla:Proximity\");\n            mProximityLock.acquire();\n        } else {\n            if(mProximityLock != null) mProximityLock.release();\n            mProximityLock = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43105, "method_name": "onMuteToggled", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onMuteToggled() {\n        IUser user = getSessionUser();\n        if (isConnectionEstablished() && user != null) {\n            boolean muted = !user.isSelfMuted();\n            boolean deafened = user.isSelfDeafened() && muted;\n            setSelfMuteDeafState(muted, deafened);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43106, "method_name": "onDeafenToggled", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDeafenToggled() {\n        IUser user = getSessionUser();\n        if (isConnectionEstablished() && user != null) {\n            setSelfMuteDeafState(!user.isSelfDeafened(), !user.isSelfDeafened());\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43107, "method_name": "onOverlayToggled", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onOverlayToggled() {\n        // ditch notification shade/panel to make overlay presence/permission request visible\n        Intent close = new Intent(Intent.ACTION_CLOSE_SYSTEM_DIALOGS);\n        getApplicationContext().sendBroadcast(close);\n\n        if (!mChannelOverlay.isShown()) {\n            if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n                if (!android.provider.Settings.canDrawOverlays(getApplicationContext())) {\n                    Intent showSetting = new Intent(android.provider.Settings.ACTION_MANAGE_OVERLAY_PERMISSION,\n                            Uri.parse(\"package:\" + getPackageName()));\n                    showSetting.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n                    startActivity(showSetting);\n                    Toast.makeText(this, R.string.grant_perm_draw_over_apps, Toast.LENGTH_LONG).show();\n                    return;\n                }\n            }\n            mChannelOverlay.show();\n        } else {\n            mChannelOverlay.hide();\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43108, "method_name": "onReconnectNotificationDismissed", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onReconnectNotificationDismissed() {\n        mErrorShown = true;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43109, "method_name": "reconnect", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reconnect() {\n        connect();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43110, "method_name": "cancelReconnect", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancelReconnect() {\n        if (mReconnectNotification != null) {\n            mReconnectNotification.hide();\n            mReconnectNotification = null;\n        }\n        super.cancelReconnect();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43111, "method_name": "setOverlayShown", "class_name": "MumlaService", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOverlayShown(boolean showOverlay) {\n        if(!mChannelOverlay.isShown()) {\n            mChannelOverlay.show();\n        } else {\n            mChannelOverlay.hide();\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43112, "method_name": "isOverlayShown", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isOverlayShown() {\n        return mChannelOverlay.isShown();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43113, "method_name": "clearChatNotifications", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearChatNotifications() {\n        mMessageNotification.dismiss();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43114, "method_name": "markErrorShown", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void markErrorShown() {\n        mErrorShown = true;\n        // Dismiss the reconnection prompt if a reconnection isn't in progress.\n        if (mReconnectNotification != null && !isReconnecting()) {\n            mReconnectNotification.hide();\n            mReconnectNotification = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43115, "method_name": "isErrorShown", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isErrorShown() {\n        return mErrorShown;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43116, "method_name": "onTalkKeyDown", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTalkKeyDown() {\n        if(isConnectionEstablished()\n                && Settings.ARRAY_INPUT_METHOD_PTT.equals(mSettings.getInputMethod())) {\n            if (!mSettings.isPushToTalkToggle() && !isTalking()) {\n                setTalkingState(true); // Start talking\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43117, "method_name": "onTalkKeyUp", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTalkKeyUp() {\n        if(isConnectionEstablished()\n                && Settings.ARRAY_INPUT_METHOD_PTT.equals(mSettings.getInputMethod())) {\n            if (mSettings.isPushToTalkToggle()) {\n                setTalkingState(!isTalking()); // Toggle talk state\n            } else if (isTalking()) {\n                setTalkingState(false); // Stop talking\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43118, "method_name": "getMessageLog", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IChatMessage>", "snippet": "    public List<IChatMessage> getMessageLog() {\n        return Collections.unmodifiableList(mMessageLog);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43119, "method_name": "clearMessageLog", "class_name": "MumlaService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearMessageLog() {\n        mMessageLog.clear();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43120, "method_name": "setSuppressNotifications", "class_name": "MumlaService", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSuppressNotifications(boolean suppressNotifications) {\n        mSuppressNotifications = suppressNotifications;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "HumlaService", "implements": ["SharedPreferences", "MumlaConnectionNotification", "MumlaReconnectNotification", "IMumlaService"], "modifiers": ["public"]}}, {"id": 43121, "method_name": "getService", "class_name": "MumlaBinder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IMumlaService", "snippet": "        public IMumlaService getService() {\n            return mService;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/service/MumlaService.java", "stars": "9", "class_props": {"extends": "Binder", "implements": null, "modifiers": ["public", "static"]}}, {"id": 43122, "method_name": "newsUpdate", "class_name": "NewsAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward newsUpdate(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        int requestUserId = form.getParamInt(\"requestUserId\", 0);\n        String kindOf = requestUserId > 0 ? \"\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435\" : \"\u043d\u043e\u0432\u043e\u0441\u0442\u044c\";\n\n        // 0 - \u043e\u0431\u044b\u0447\u043d\u0430\u044f, 1 - \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0430\u044f\n        int type = form.getParamInt(\"type\");\n        if (type < 0) {\n            throw new BGMessageException(\"\u041d\u0435 \u0432\u044b\u0431\u0440\u0430\u043d \u0442\u0438\u043f \u043d\u043e\u0432\u043e\u0441\u0442\u0438\");\n        }\n\n        News news = new News();\n        news.setId(form.getId());\n        news.setUserId(form.getUserId());\n        news.setTitle(form.getParam(\"title\", \"\"));\n        news.setDescription(form.getParam(\"description\", \"\"));\n        news.setPopup(type == 1);\n        news.setLifeTime(form.getParamInt(\"lifeTime\", 30));\n        news.setReadTime(form.getParamInt(\"readTime\", 24));\n\n        if (Utils.isBlankString(news.getTitle())) {\n            throw new BGMessageException(\"\u041d\u0435\u043b\u044c\u0437\u044f \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \" + kindOf + \" \u0431\u0435\u0437 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430\");\n        }\n\n        if (Utils.isBlankString(news.getDescription())) {\n            throw new BGMessageException(\"\u041d\u0435\u043b\u044c\u0437\u044f \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \" + kindOf + \" \u0431\u0435\u0437 \u0442\u0435\u043a\u0441\u0442\u0430\");\n        }\n\n        Set<Integer> groups = form.getSelectedValues(\"group\");\n\n        ParameterMap perm = form.getPermission();\n\n        Set<Integer> allowedGroups = Utils.toIntegerSet(perm.get(\"allowedGroupIds\", \"\"));\n\n        if (requestUserId == 0) {\n            if (groups.size() > 0) {\n                if (allowedGroups.size() > 0 && !CollectionUtils.containsAny(groups, allowedGroups)) {\n                    throw new BGMessageException(\"\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043f\u0440\u0430\u0432 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u043e\u0441\u0442\u0438 \u0434\u043b\u044f \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0445 \u0433\u0440\u0443\u043f\u043f\");\n                }\n\n                new NewsDAO(con).updateNewsGroups(news, groups);\n            } else {\n                if (allowedGroups.size() > 0) {\n                    throw new BGMessageException(\"\u0412\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u043e\u0441\u0442\u0438 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439\");\n                }\n\n                new NewsDAO(con).updateNewsUsers(news, Utils.getObjectIdsSet(UserCache.getActiveUsers()));\n            }\n        } else {\n            Set<Integer> userSet = new HashSet<Integer>();\n            userSet.add(requestUserId);\n\n            new NewsDAO(con).updateNewsUsers(news, userSet);\n        }\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/NewsAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 43123, "method_name": "newsEdit", "class_name": "NewsAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward newsEdit(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        News news = new NewsDAO(con).getNews(form.getId());\n        if (news != null) {\n            form.getResponse().setData(\"news\", news);\n        }\n\n        return data(con, mapping, form, \"update\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/NewsAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 43124, "method_name": "newsList", "class_name": "NewsAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward newsList(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        Boolean read = form.getParamBoolean(\"read\", null);\n\n        SearchResult<News> searchResult = new SearchResult<News>(form);\n\n        new NewsDAO(con).searchNewsList(searchResult, form.getUserId(), read, form.getParam(\"text\"));\n\n        if (read != null && !read) {\n            User user = form.getUser();\n\n            Preferences persMap = user.getPersonalizationMap();\n            String configBefore = persMap.getDataString();\n\n            String newsIds = Utils.getObjectIds(searchResult.getList());\n            persMap.put(UNREAD_NEWS_PERSONAL_KEY, newsIds);\n\n            new UserDAO(con).updatePersonalization(configBefore, user);\n        }\n\n        return data(con, mapping, form, \"list\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/NewsAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 43125, "method_name": "newsGet", "class_name": "NewsAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward newsGet(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        NewsDAO newsDAO = new NewsDAO(con);\n        newsDAO.setNewsRead(form.getParamInt(\"newsId\", -1), form.getUserId(), true);\n        News news = newsDAO.getNews(form.getParamInt(\"newsId\", -1));\n\n        form.getResponse().setData(\"item\", news);\n\n        UserNewsCache.flushCache(con, Collections.singleton(form.getUserId()));\n\n        return data(con, mapping, form, \"newsBody\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/NewsAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 43126, "method_name": "newsSetRead", "class_name": "NewsAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward newsSetRead(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        new NewsDAO(con).setNewsRead(form.getParamInt(\"newsId\", -1), form.getUserId(),\n                form.getParamBoolean(\"value\", true));\n\n        UserNewsCache.flushCache(con, Collections.singleton(form.getUserId()));\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/NewsAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 43127, "method_name": "newsSetAllRead", "class_name": "NewsAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward newsSetAllRead(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        new NewsDAO(con).setNewsAllRead(form.getUserId());\n\n        UserNewsCache.flushCache(con, Collections.singleton(form.getUserId()));\n\n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/NewsAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 43128, "method_name": "newsDelete", "class_name": "NewsAction", "params": ["ActionMapping", "DynActionForm", "Connection"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward newsDelete(ActionMapping mapping, DynActionForm form, Connection con) throws Exception {\n        new NewsDAO(con).deleteNews(form.getId());\n        \n        return status(con, form);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/NewsAction.java", "stars": "12", "class_props": {"extends": "BaseAction", "implements": null, "modifiers": ["public"]}}, {"id": 43129, "method_name": "setNonNullParameter", "class_name": "DateTypeHandler", "params": ["PreparedStatement", "int", "Date", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, Date parameter, JdbcType jdbcType)\n      throws SQLException {\n    ps.setTimestamp(i, new Timestamp(parameter.getTime()));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43130, "method_name": "getNullableResult", "class_name": "DateTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Date", "snippet": "  public Date getNullableResult(ResultSet rs, String columnName)\n      throws SQLException {\n    Timestamp sqlTimestamp = rs.getTimestamp(columnName);\n    if (sqlTimestamp != null) {\n      return new Date(sqlTimestamp.getTime());\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43131, "method_name": "getNullableResult", "class_name": "DateTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Date", "snippet": "  public Date getNullableResult(ResultSet rs, int columnIndex)\n      throws SQLException {\n    Timestamp sqlTimestamp = rs.getTimestamp(columnIndex);\n    if (sqlTimestamp != null) {\n      return new Date(sqlTimestamp.getTime());\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43132, "method_name": "getNullableResult", "class_name": "DateTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "Date", "snippet": "  public Date getNullableResult(CallableStatement cs, int columnIndex)\n      throws SQLException {\n    Timestamp sqlTimestamp = cs.getTimestamp(columnIndex);\n    if (sqlTimestamp != null) {\n      return new Date(sqlTimestamp.getTime());\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/DateTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43133, "method_name": "preCall", "class_name": "WrapCallback", "params": ["Emulator<?>", "T", "HookEntryInfo"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void preCall(Emulator<?> emulator, T ctx, HookEntryInfo info);\n\n    public void postCall(Emulator<?> emulator, T ctx, HookEntryInfo info) {}", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/WrapCallback.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43134, "method_name": "postCall", "class_name": "WrapCallback", "params": ["Emulator<?>", "T", "HookEntryInfo"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void postCall(Emulator<?> emulator, T ctx, HookEntryInfo info) {}", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/hook/hookzz/WrapCallback.java", "stars": "16", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43135, "method_name": "determineUser", "class_name": "PrincipalHandshakeHandler", "params": ["ServerHttpRequest", "WebSocketHandler", "Map<String,Object>"], "throws": null, "modifiers": ["protected"], "return_type": "Principal", "snippet": "    protected Principal determineUser(ServerHttpRequest request, WebSocketHandler wsHandler, Map<String, Object> attributes) {\n        /*\n         * \u8fd9\u8fb9\u53ef\u4ee5\u6309\u4f60\u7684\u9700\u6c42\uff0c\u5982\u4f55\u83b7\u53d6\u552f\u4e00\u7684\u503c\uff0c\u65e2unicode\n         * \u5f97\u5230\u7684\u503c\uff0c\u4f1a\u5728\u76d1\u542c\u5904\u7406\u8fde\u63a5\u7684\u5c5e\u6027\u4e2d\uff0c\u65e2WebSocketSession.getPrincipal().getName()\n         * \u4e5f\u53ef\u4ee5\u81ea\u5df1\u5b9e\u73b0Principal()\n         */\n        if (request instanceof ServletServerHttpRequest) {\n            ServletServerHttpRequest servletServerHttpRequest = (ServletServerHttpRequest) request;\n            HttpServletRequest httpRequest = servletServerHttpRequest.getServletRequest();\n            //\u8fd9\u8fb9\u5c31\u83b7\u53d6\u4f60\u6700\u719f\u6089\u7684\u964c\u751f\u4eba,\u643a\u5e26\u53c2\u6570\uff0c\u4f60\u53ef\u4ee5cookie\uff0c\u8bf7\u6c42\u5934\uff0c\u6216\u8005url\u643a\u5e26\uff0c\u8fd9\u8fb9\u6211\u91c7\u7528url\u643a\u5e26\n            final String name = httpRequest.getParameter(\"name\");\n            if (StringUtils.isEmpty(name)) {\n                log.warn(\"can not find name in remote:{}\", servletServerHttpRequest.getRemoteAddress());\n                return null;\n            }\n\n            return () -> name;\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/handler/PrincipalHandshakeHandler.java", "stars": "2", "class_props": {"extends": "DefaultHandshakeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43136, "method_name": "newInstance", "class_name": "AbsCoin", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "AbsCoin", "snippet": "    public static AbsCoin newInstance(String coinCode) {\n        Coin impl = new CoinImpl(coinCode);\n        try {\n            Class<?> clazz = Class.forName(CoinReflect.getCoinClassByCoinCode(coinCode));\n            return (AbsCoin) clazz.getDeclaredConstructor(Coin.class).newInstance(impl);\n        } catch (ClassNotFoundException | NoSuchMethodException\n                | IllegalAccessException | InstantiationException\n                | InvocationTargetException e) {\n            e.printStackTrace();\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsCoin.java", "stars": "13", "class_props": {"extends": null, "implements": ["Coin"], "modifiers": ["public", "abstract"]}}, {"id": 43137, "method_name": "generateTransaction", "class_name": "AbsCoin", "params": ["AbsTx", "SignCallback", "Signer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void generateTransaction(@NonNull AbsTx tx, SignCallback callback, Signer... signers) {\n        impl.generateTransaction(tx, callback, signers);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsCoin.java", "stars": "13", "class_props": {"extends": null, "implements": ["Coin"], "modifiers": ["public", "abstract"]}}, {"id": 43138, "method_name": "signMessage", "class_name": "AbsCoin", "params": ["String", "Signer"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String signMessage(@NonNull String message, Signer signer) {\n        return impl.signMessage(message, signer);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsCoin.java", "stars": "13", "class_props": {"extends": null, "implements": ["Coin"], "modifiers": ["public", "abstract"]}}, {"id": 43139, "method_name": "generateAddress", "class_name": "AbsCoin", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String generateAddress(@NonNull String publicKey) {\n        return impl.generateAddress(publicKey);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsCoin.java", "stars": "13", "class_props": {"extends": null, "implements": ["Coin"], "modifiers": ["public", "abstract"]}}, {"id": 43140, "method_name": "isAddressValid", "class_name": "AbsCoin", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAddressValid(@NonNull String address) {\n        return impl.isAddressValid(address);\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/main/java/com/cobo/coinlib/coins/AbsCoin.java", "stars": "13", "class_props": {"extends": null, "implements": ["Coin"], "modifiers": ["public", "abstract"]}}, {"id": 43141, "method_name": "putResource", "class_name": "CBTResourcePack", "params": ["String", "byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void putResource(String resource, byte[] data) {\n\t\tresources.put(resource, data);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43142, "method_name": "alias", "class_name": "CBTResourcePack", "params": ["String", "Identifier"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void alias(String location, Identifier to) {\n\t\taliases.put(location, to);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43143, "method_name": "putImage", "class_name": "CBTResourcePack", "params": ["String", "BufferedImage"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void putImage(String location, BufferedImage image) {\n\t\tByteArrayOutputStream byteOut = new ByteArrayOutputStream();\n\t\ttry {\n\t\t\tImageIO.write(image, \"png\", byteOut);\n\t\t} catch (IOException e) {\n\t\t\tthrow new RuntimeException(\"IOException writing to bytearrayoutputstream!?\", e);\n\t\t}\n\t\tputResource(location, byteOut.toByteArray());\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43144, "method_name": "dynamicallyPutImage", "class_name": "CBTResourcePack", "params": ["BufferedImage"], "throws": null, "modifiers": ["public"], "return_type": "Identifier", "snippet": "\tpublic Identifier dynamicallyPutImage(BufferedImage image) {\n\t\tString texPath = \"gen/\" + genCounter++;\n\t\tputImage(\"assets/connectedblocktextures/textures/\" + texPath + \".png\", image);\n\t\treturn new Identifier(\"connectedblocktextures\", texPath);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43145, "method_name": "dynamicallyPutTile", "class_name": "CBTResourcePack", "params": ["Tile"], "throws": null, "modifiers": ["public"], "return_type": "Identifier", "snippet": "\tpublic Identifier dynamicallyPutTile(Tile tile) {\n\t\tString texPath = \"gen/\" + genCounter++;\n\t\tputTile(\"assets/connectedblocktextures/textures/\" + texPath + \".png\", tile);\n\t\treturn new Identifier(\"connectedblocktextures\", texPath);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43146, "method_name": "putTile", "class_name": "CBTResourcePack", "params": ["String", "Tile"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void putTile(String location, Tile tile) {\n\t\tif(tile.hasResource()) {\n\t\t\talias(location, tile.getResource());\n\t\t} else {\n\t\t\tByteArrayOutputStream byteStream = new ByteArrayOutputStream();\n\t\t\ttry {\n\t\t\t\tImageIO.write(tile.getImage(), \"png\", byteStream);\n\t\t\t} catch (IOException e) {\n\t\t\t\tthrow new RuntimeException(\"IOException writing to byte array output stream!?\", e);\n\t\t\t}\n\t\t\tresources.put(location, byteStream.toByteArray());\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43147, "method_name": "close", "class_name": "CBTResourcePack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void close() {}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43148, "method_name": "openRoot", "class_name": "CBTResourcePack", "params": ["String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "InputStream", "snippet": "\tpublic InputStream openRoot(String fileName) throws IOException {\n\t\tbyte[] data;\n\t\tIdentifier aliasOf;\n\t\tif((data = resources.get(fileName)) != null) {\n\t\t\treturn new ByteArrayInputStream(data);\n\t\t} else if((aliasOf = aliases.get(fileName)) != null) {\n\t\t\treturn manager.getResource(aliasOf).getInputStream();\n\t\t}\n\t\tthrow new IOException(\"generated resources pack has no data or alias for \" + fileName);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43149, "method_name": "open", "class_name": "CBTResourcePack", "params": ["ResourceType", "Identifier"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "InputStream", "snippet": "\tpublic InputStream open(ResourceType type, Identifier id) throws IOException {\n\t\tif(type == ResourceType.SERVER_DATA) throw new IOException(\"reading server data from connectedblocktextures client resource pack\");\n\t\treturn openRoot(type.getDirectory() + \"/\" + id.getNamespace() + \"/\" + id.getPath());\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43150, "method_name": "findResources", "class_name": "CBTResourcePack", "params": ["ResourceType", "String", "String", "int", "Predicate<String>"], "throws": null, "modifiers": ["public"], "return_type": "Collection<Identifier>", "snippet": "\tpublic Collection<Identifier> findResources(ResourceType type, String namespace, String prefix, int maxDepth, Predicate<String> pathFilter) {\n\t\t//maxdepth not implemented.\n\t\tif(type == ResourceType.SERVER_DATA) return Collections.emptyList();\n\t\tString start = \"assets/\" + namespace + \"/\" + prefix;\n\t\treturn resources.keySet().stream().filter(s -> s.startsWith(start) && pathFilter.test(s)).map(CBTResourcePack::fromPath).collect(Collectors.toList());\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43151, "method_name": "contains", "class_name": "CBTResourcePack", "params": ["ResourceType", "Identifier"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean contains(ResourceType type, Identifier id) {\n\t\tString path = type.getDirectory() + \"/\" + id.getNamespace() + \"/\" + id.getPath();\n\t\treturn resources.containsKey(path) || aliases.containsKey(path);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43152, "method_name": "getNamespaces", "class_name": "CBTResourcePack", "params": ["ResourceType"], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "\tpublic Set<String> getNamespaces(ResourceType type) {\n\t\treturn NAMESPACES;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43153, "method_name": "parseMetadata", "class_name": "CBTResourcePack", "params": ["ResourceMetadataReader<T>"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "T", "snippet": "\tpublic <T> T parseMetadata(ResourceMetadataReader<T> metaReader) throws IOException {\n\t\treturn null;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43154, "method_name": "getName", "class_name": "CBTResourcePack", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getName() {\n\t\treturn \"Connected Block Textures generated resources\";\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43155, "method_name": "fromPath", "class_name": "CBTResourcePack", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "Identifier", "snippet": "\tprivate static Identifier fromPath(String path) {\n\t\tString[] split = path.split(\"/\", 2);\n\t\treturn new Identifier(split[0], split[1]);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/resource/CBTResourcePack.java", "stars": "3", "class_props": {"extends": null, "implements": ["ResourcePack"], "modifiers": ["public"]}}, {"id": 43156, "method_name": "add", "class_name": "Rotation", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation add(float yaw, float pitch) {\n        this.yaw += yaw;\n        this.pitch += pitch;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/Rotation.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43157, "method_name": "subtract", "class_name": "Rotation", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation subtract(float yaw, float pitch) {\n        this.yaw -= yaw;\n        this.pitch -= pitch;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/Rotation.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43158, "method_name": "getYaw", "class_name": "Rotation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getYaw() {\n        return yaw;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/Rotation.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43159, "method_name": "setYaw", "class_name": "Rotation", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation setYaw(float yaw) {\n        active = true;\n        this.yaw = yaw;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/Rotation.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43160, "method_name": "getPitch", "class_name": "Rotation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getPitch() {\n        return pitch;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/Rotation.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43161, "method_name": "setPitch", "class_name": "Rotation", "params": ["float"], "throws": null, "modifiers": ["public"], "return_type": "Rotation", "snippet": "    public Rotation setPitch(float pitch) {\n        active = true;\n        this.pitch = pitch;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/Rotation.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43162, "method_name": "isActive", "class_name": "Rotation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isActive() {\n        return active;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/api/util/Rotation.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43163, "method_name": "instance", "class_name": "GSYVideoADManager", "params": [], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "GSYVideoADManager", "snippet": "    public static synchronized GSYVideoADManager instance() {\n        if (videoManager == null) {\n            videoManager = new GSYVideoADManager();\n        }\n        return videoManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoADManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43164, "method_name": "backFromWindowFull", "class_name": "GSYVideoADManager", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean backFromWindowFull(Context context) {\n        boolean backFrom = false;\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(context)).findViewById(Window.ID_ANDROID_CONTENT);\n        View oldF = vp.findViewById(FULLSCREEN_ID);\n        if (oldF != null) {\n            backFrom = true;\n            hideNavKey(context);\n            if (GSYVideoADManager.instance().lastListener() != null) {\n                GSYVideoADManager.instance().lastListener().onBackFullscreen();\n            }\n        }\n        return backFrom;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoADManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43165, "method_name": "releaseAllVideos", "class_name": "GSYVideoADManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void releaseAllVideos() {\n        if (GSYVideoADManager.instance().listener() != null) {\n            GSYVideoADManager.instance().listener().onCompletion();\n        }\n        GSYVideoADManager.instance().releaseMediaPlayer();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoADManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43166, "method_name": "onPause", "class_name": "GSYVideoADManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onPause() {\n        if (GSYVideoADManager.instance().listener() != null) {\n            GSYVideoADManager.instance().listener().onVideoPause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoADManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43167, "method_name": "onResume", "class_name": "GSYVideoADManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume() {\n        if (GSYVideoADManager.instance().listener() != null) {\n            GSYVideoADManager.instance().listener().onVideoResume();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoADManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43168, "method_name": "onResume", "class_name": "GSYVideoADManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResume(boolean seek) {\n        if (GSYVideoManager.instance().listener() != null) {\n            GSYVideoManager.instance().listener().onVideoResume(seek);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoADManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43169, "method_name": "isFullState", "class_name": "GSYVideoADManager", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isFullState(Activity activity) {\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(activity)).findViewById(Window.ID_ANDROID_CONTENT);\n        final View full = vp.findViewById(FULLSCREEN_ID);\n        GSYVideoPlayer gsyVideoPlayer = null;\n        if (full != null) {\n            gsyVideoPlayer = (GSYVideoPlayer) full;\n        }\n        return gsyVideoPlayer != null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/com/shuyu/gsyvideoplayer/GSYVideoADManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43170, "method_name": "createGardenField", "class_name": "GardenFieldController", "params": ["GardenFieldDTO"], "throws": ["URISyntaxException", "BadRequestException"], "modifiers": ["public"], "return_type": "ResponseEntity<GardenFieldDTO>", "snippet": "    public ResponseEntity<GardenFieldDTO> createGardenField(\n        @ApiParam(value = \"Gardenfield object which will be saved\", required = true)\n        @Valid @RequestBody GardenFieldDTO gardenFieldDTO) throws URISyntaxException, BadRequestException {\n        log.debug(\"REST request to save GardenField : {}\", gardenFieldDTO);\n\n        if (gardenFieldDTO.getId() != null) {\n            throw new BadRequestException(GardleErrorKey.GARDENFIELD_ID_ALREADY_EXISTS);\n        }\n\n        GardenFieldDTO newGardenFieldDTO = gardenFieldService.createGardenField(gardenFieldDTO);\n        return ResponseEntity.created(new URI(\"/api/v1/gardenFields/\" + newGardenFieldDTO.getId()))\n            .body(newGardenFieldDTO);\n\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43171, "method_name": "getAllGardenFields", "class_name": "GardenFieldController", "params": ["Pageable"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Page>", "snippet": "    public ResponseEntity<Page<GardenFieldDTO>> getAllGardenFields(Pageable pageable) {\n        final Page<GardenFieldDTO> page = gardenFieldService.getAllGardenFields(pageable);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), page);\n        return new ResponseEntity<>(page, headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43172, "method_name": "findOne", "class_name": "GardenFieldController", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<GardenFieldDTO>", "snippet": "    public ResponseEntity<GardenFieldDTO> findOne(@PathVariable long id) {\n        return new ResponseEntity<>(gardenFieldService.findOne(id), HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43173, "method_name": "updateGardenField", "class_name": "GardenFieldController", "params": ["GardenFieldDTO"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<GardenFieldDTO>", "snippet": "    public ResponseEntity<GardenFieldDTO> updateGardenField(\n        @ApiParam(value = \"Gardenfield object which will be saved\", required = true)\n        @Valid @RequestBody GardenFieldDTO gardenFieldDTO) {\n        log.debug(\"REST request to update GardenField : {}\", gardenFieldDTO);\n        Optional<GardenFieldDTO> updatedGardenFieldDTO = gardenFieldService.updateGardenField(gardenFieldDTO);\n\n        return ResponseUtil.wrapOrNotFound(updatedGardenFieldDTO,\n            HeaderUtil.createAlert(applicationName, \"gardenFieldManagement.updated\", gardenFieldDTO.getId().toString()));\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43174, "method_name": "deleteGardenField", "class_name": "GardenFieldController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Void>", "snippet": "    public ResponseEntity<Void> deleteGardenField(\n        @ApiParam(value = \"Gardenfield Id from which gardenfield object will delete from system\", required = true)\n        @PathVariable Long id) {\n        log.debug(\"REST request to delete GardenField: {}\", id);\n        gardenFieldService.deleteGardenField(id);\n        return ResponseEntity.noContent().headers(\n            HeaderUtil.createAlert(applicationName, \"gardenFieldManagement.deleted\", id.toString())).build();\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43175, "method_name": "filterGardenFields", "class_name": "GardenFieldController", "params": ["Pageable", "Double", "Double", "Integer", "Double", "Double", "Double", "Double", "Boolean", "Instant", "Instant", "String", "Boolean", "Boolean", "Boolean", "Boolean"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Page>", "snippet": "    public ResponseEntity<Page<GardenFieldDTO>> filterGardenFields(Pageable pageable,\n                                                                   @RequestParam(required = false, value = \"latitude\") Double latitude,\n                                                                   @RequestParam(required = false, value = \"longitude\") Double longitude,\n                                                                   @RequestParam(required = false, value = \"radiusInKM\") Integer radiusInKM,\n                                                                   @RequestParam(required = false, value = \"minPrice\") Double minPricePerMonth,\n                                                                   @RequestParam(required = false, value = \"maxPrice\") Double maxPricePerMonth,\n                                                                   @RequestParam(required = false, value = \"sizeInM2LowerBound\") Double sizeInM2LowerBound,\n                                                                   @RequestParam(required = false, value = \"sizeInM2UpperBound\") Double sizeInM2UpperBound,\n                                                                   @RequestParam(required = false, value = \"roofed\") Boolean roofed,\n                                                                   @RequestParam(required = false, value = \"leasingTimeFrom\") Instant leasingTimeFrom,\n                                                                   @RequestParam(required = false, value = \"leasingTimeTo\") Instant leasingTimeTo,\n                                                                   @RequestParam(required = false, value = \"keywords\") String keywords,\n                                                                   @RequestParam(required = false, value = \"water\") Boolean water,\n                                                                   @RequestParam(required = false, value = \"electricity\") Boolean electricity,\n                                                                   @RequestParam(required = false, value = \"high\") Boolean high,\n                                                                   @RequestParam(required = false, value = \"glassHouse\") Boolean glassHouse) {\n\n        GardenFieldFilterCriteria gardenFieldFilterCriteria = new GardenFieldFilterCriteria(\n            new LocationFilterCriteria(latitude, longitude, radiusInKM), minPricePerMonth, maxPricePerMonth,\n            sizeInM2LowerBound, sizeInM2UpperBound, roofed, leasingTimeFrom, leasingTimeTo, keywords, water, electricity, high, glassHouse);\n\n        Page<GardenFieldDTO> resultPage = this.gardenFieldService.filterGardenFields(pageable, gardenFieldFilterCriteria);\n        HttpHeaders headers = PaginationUtil.generatePaginationHttpHeaders(ServletUriComponentsBuilder.fromCurrentRequest(), resultPage);\n        return new ResponseEntity<>(resultPage, headers, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43176, "method_name": "autocomplete", "class_name": "GardenFieldController", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<List>", "snippet": "    public ResponseEntity<List<GardenFieldDTO>> autocomplete(@RequestParam(value = \"partialSearchString\") String partialSearchString) {\n        List<GardenFieldDTO> resultList = this.gardenFieldService.autocomplete(partialSearchString);\n        return new ResponseEntity<>(resultList, HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43177, "method_name": "getLeasingsForGardenFields", "class_name": "GardenFieldController", "params": ["Pageable", "Long", "List<LeasingStatus>", "Instant", "Instant", "LeasingState"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Page>", "snippet": "    public ResponseEntity<Page<LeasingDTO>> getLeasingsForGardenFields(Pageable pageable, @PathVariable Long gardenFieldId,\n                                                                       @RequestParam(required = false, value = \"leasingStatus\") List<LeasingStatus> leasingStatusList,\n                                                                       @RequestParam(required = false) Instant from,\n                                                                       @RequestParam(required = false) Instant to,\n                                                                       @RequestParam(required = false) LeasingState state) {\n        Page<LeasingDTO> leasingPage = leasingService.findByGardenFieldId(pageable, gardenFieldId, leasingStatusList, from, to, state);\n        return ResponseEntity.ok().body(leasingPage);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43178, "method_name": "getFilterBoundaries", "class_name": "GardenFieldController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<FilterBoundariesDTO>", "snippet": "    public ResponseEntity<FilterBoundariesDTO> getFilterBoundaries() {\n        return new ResponseEntity<>(this.gardenFieldService.getFilterBoundaries(), HttpStatus.OK);\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/web/rest/GardenFieldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43179, "method_name": "getItemCount", "class_name": "ShopReviewThanksEndpoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getItemCount() {\n        return itemCount;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43180, "method_name": "setItemCount", "class_name": "ShopReviewThanksEndpoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setItemCount(Integer itemCount) {\n        this.itemCount = itemCount;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43181, "method_name": "getOffset", "class_name": "ShopReviewThanksEndpoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getOffset() {\n        return offset;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43182, "method_name": "setOffset", "class_name": "ShopReviewThanksEndpoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOffset(Integer offset) {\n        this.offset = offset;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43183, "method_name": "getLimit", "class_name": "ShopReviewThanksEndpoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getLimit() {\n        return limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43184, "method_name": "setLimit", "class_name": "ShopReviewThanksEndpoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLimit(Integer limit) {\n        this.limit = limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43185, "method_name": "getMax_limit", "class_name": "ShopReviewThanksEndpoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getMax_limit() {\n        return max_limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43186, "method_name": "setMax_limit", "class_name": "ShopReviewThanksEndpoint", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMax_limit(Integer max_limit) {\n        this.max_limit = max_limit;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43187, "method_name": "getResults", "class_name": "ShopReviewThanksEndpoint", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ShopReviewThanks>", "snippet": "    public List<ShopReviewThanks> getResults() {\n        return results;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43188, "method_name": "setResults", "class_name": "ShopReviewThanksEndpoint", "params": ["List<ShopReviewThanks>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setResults(List<ShopReviewThanks> results) {\n        this.results = results;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/Model/ModelEndPoints/ShopReviewThanksEndpoint.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43189, "method_name": "onMeasure", "class_name": "SwitchButton", "params": ["int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        switch (MeasureSpec.getMode(widthMeasureSpec)) {\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                widthMeasureSpec = MeasureSpec.makeMeasureSpec((int) (TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 56, getResources().getDisplayMetrics())\n                        + getPaddingLeft() + getPaddingRight()), MeasureSpec.EXACTLY);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                break;\n        }\n        switch (MeasureSpec.getMode(heightMeasureSpec)) {\n            case MeasureSpec.AT_MOST:\n            case MeasureSpec.UNSPECIFIED:\n                heightMeasureSpec = MeasureSpec.makeMeasureSpec((int) (MeasureSpec.getSize(widthMeasureSpec) * mAspectRatio)\n                        + getPaddingTop() + getPaddingBottom(), MeasureSpec.EXACTLY);\n                break;\n            case MeasureSpec.EXACTLY:\n            default:\n                break;\n        }\n        setMeasuredDimension(widthMeasureSpec, heightMeasureSpec);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43190, "method_name": "onSizeChanged", "class_name": "SwitchButton", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        isCanVisibleDrawing = w > getPaddingLeft() + getPaddingRight() && h > getPaddingTop() + getPaddingBottom();\n\n        if (isCanVisibleDrawing) {\n            int actuallyDrawingAreaWidth = w - getPaddingLeft() - getPaddingRight();\n            int actuallyDrawingAreaHeight = h - getPaddingTop() - getPaddingBottom();\n\n            int actuallyDrawingAreaLeft;\n            int actuallyDrawingAreaRight;\n            int actuallyDrawingAreaTop;\n            int actuallyDrawingAreaBottom;\n            if (actuallyDrawingAreaWidth * mAspectRatio < actuallyDrawingAreaHeight) {\n                actuallyDrawingAreaLeft = getPaddingLeft();\n                actuallyDrawingAreaRight = w - getPaddingRight();\n                int heightExtraSize = (int) (actuallyDrawingAreaHeight - actuallyDrawingAreaWidth * mAspectRatio);\n                actuallyDrawingAreaTop = getPaddingTop() + heightExtraSize / 2;\n                actuallyDrawingAreaBottom = getHeight() - getPaddingBottom() - heightExtraSize / 2;\n            } else {\n                int widthExtraSize = (int) (actuallyDrawingAreaWidth - actuallyDrawingAreaHeight / mAspectRatio);\n                actuallyDrawingAreaLeft = getPaddingLeft() + widthExtraSize / 2;\n                actuallyDrawingAreaRight = getWidth() - getPaddingRight() - widthExtraSize / 2;\n                actuallyDrawingAreaTop = getPaddingTop();\n                actuallyDrawingAreaBottom = getHeight() - getPaddingBottom();\n            }\n\n            mShadowReservedHeight = (int) ((actuallyDrawingAreaBottom - actuallyDrawingAreaTop) * 0.07f);\n            float left = actuallyDrawingAreaLeft;\n            float top = actuallyDrawingAreaTop + mShadowReservedHeight;\n            mRight = actuallyDrawingAreaRight;\n            float bottom = actuallyDrawingAreaBottom - mShadowReservedHeight;\n\n            float sHeight = bottom - top;\n            mCenterX = (mRight + left) / 2;\n            mCenterY = (bottom + top) / 2;\n\n            mLeft = left;\n            mWidth = bottom - top;\n            bRight = left + mWidth;\n            // OfB\n            final float halfHeightOfS = mWidth / 2;\n            mRadius = halfHeightOfS * 0.95f;\n            // offset of switching\n            mOffset = mRadius * 0.2f;\n            mStrokeWidth = (halfHeightOfS - mRadius) * 2;\n            mOnLeftX = mRight - mWidth;\n            mOn2LeftX = mOnLeftX - mOffset;\n            mOffLeftX = left;\n            mOff2LeftX = mOffLeftX + mOffset;\n            mScale = 1 - mStrokeWidth / sHeight;\n\n            mBackgroundPath.reset();\n            RectF bound = new RectF();\n            bound.top = top;\n            bound.bottom = bottom;\n            bound.left = left;\n            bound.right = left + sHeight;\n            mBackgroundPath.arcTo(bound, 90, 180);\n            bound.left = mRight - sHeight;\n            bound.right = mRight;\n            mBackgroundPath.arcTo(bound, 270, 180);\n            mBackgroundPath.close();\n\n            mBound.left = mLeft;\n            mBound.right = bRight;\n            // bTop = sTop\n            mBound.top = top + mStrokeWidth / 2;\n            // bBottom = sBottom\n            mBound.bottom = bottom - mStrokeWidth / 2;\n            float bCenterX = (bRight + mLeft) / 2;\n            float bCenterY = (bottom + top) / 2;\n\n            int red = mShadowColor >> 16 & 0xFF;\n            int green = mShadowColor >> 8 & 0xFF;\n            int blue = mShadowColor & 0xFF;\n            mShadowGradient = new RadialGradient(bCenterX, bCenterY, mRadius, Color.argb(200, red, green, blue),\n                    Color.argb(25, red, green, blue), Shader.TileMode.CLAMP);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43191, "method_name": "calcBPath", "class_name": "SwitchButton", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void calcBPath(float percent) {\n        mBarPath.reset();\n        mBound.left = mLeft + mStrokeWidth / 2;\n        mBound.right = bRight - mStrokeWidth / 2;\n        mBarPath.arcTo(mBound, 90, 180);\n        mBound.left = mLeft + percent * mOffset + mStrokeWidth / 2;\n        mBound.right = bRight + percent * mOffset - mStrokeWidth / 2;\n        mBarPath.arcTo(mBound, 270, 180);\n        mBarPath.close();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43192, "method_name": "calcBTranslate", "class_name": "SwitchButton", "params": ["float"], "throws": null, "modifiers": ["private"], "return_type": "float", "snippet": "    private float calcBTranslate(float percent) {\n        float result = 0;\n        switch (mCheckedState - mLastCheckedState) {\n            case 1:\n                if (mCheckedState == STATE_SWITCH_OFF2) {\n                    // off -> off2\n                    result = mOffLeftX;\n                } else if (mCheckedState == STATE_SWITCH_ON) {\n                    // on2 -> on\n                    result = mOnLeftX - (mOnLeftX - mOn2LeftX) * percent;\n                }\n                break;\n            case 2:\n                if (mCheckedState == STATE_SWITCH_ON) {\n                    // off2 -> on\n                    result = mOnLeftX - (mOnLeftX - mOffLeftX) * percent;\n                } else if (mCheckedState == STATE_SWITCH_ON2) {\n                    // off -> on2\n                    result = mOn2LeftX - (mOn2LeftX - mOffLeftX) * percent;\n                }\n                break;\n            case 3:\n                // off -> on\n                result = mOnLeftX - (mOnLeftX - mOffLeftX) * percent;\n                break;\n            case -1:\n                if (mCheckedState == STATE_SWITCH_ON2) {\n                    // on -> on2\n                    result = mOn2LeftX + (mOnLeftX - mOn2LeftX) * percent;\n                } else if (mCheckedState == STATE_SWITCH_OFF) {\n                    // off2 -> off\n                    result = mOffLeftX;\n                }\n                break;\n            case -2:\n                if (mCheckedState == STATE_SWITCH_OFF) {\n                    // on2 -> off\n                    result = mOffLeftX + (mOn2LeftX - mOffLeftX) * percent;\n                } else if (mCheckedState == STATE_SWITCH_OFF2) {\n                    // on -> off2\n                    result = mOff2LeftX + (mOnLeftX - mOff2LeftX) * percent;\n                }\n                break;\n            case -3:\n                // on -> off\n                result = mOffLeftX + (mOnLeftX - mOffLeftX) * percent;\n                break;\n            default: // init\n            case 0:\n                if (mCheckedState == STATE_SWITCH_OFF) {\n                    //  off -> off\n                    result = mOffLeftX;\n                } else if (mCheckedState == STATE_SWITCH_ON) {\n                    // on -> on\n                    result = mOnLeftX;\n                }\n                break;\n        }\n        return result - mOffLeftX;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43193, "method_name": "onDraw", "class_name": "SwitchButton", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        if (!isCanVisibleDrawing) {\n            return;\n        }\n\n        mPaint.setAntiAlias(true);\n\n        final boolean isOn = (mCheckedState == STATE_SWITCH_ON || mCheckedState == STATE_SWITCH_ON2);\n        // Draw background\n        mPaint.setStyle(Paint.Style.FILL);\n        mPaint.setColor(isOn ? mAccentColor : mOffColor);\n        canvas.drawPath(mBackgroundPath, mPaint);\n\n        mAnim1 = mAnim1 - mAnimationSpeed > 0 ? mAnim1 - mAnimationSpeed : 0;\n        mAnim2 = mAnim2 - mAnimationSpeed > 0 ? mAnim2 - mAnimationSpeed : 0;\n\n        final float dsAnim = mInterpolator.getInterpolation(mAnim1);\n        final float dbAnim = mInterpolator.getInterpolation(mAnim2);\n        // Draw background animation\n        final float scale = mScale * (isOn ? dsAnim : 1 - dsAnim);\n        final float scaleOffset = (mRight - mCenterX - mRadius) * (isOn ? 1 - dsAnim : dsAnim);\n        canvas.save();\n        canvas.scale(scale, scale, mCenterX + scaleOffset, mCenterY);\n        mPaint.setColor(0xFFFFFFFF);\n        canvas.drawPath(mBackgroundPath, mPaint);\n        canvas.restore();\n        // To prepare center bar path\n        canvas.save();\n        canvas.translate(calcBTranslate(dbAnim), mShadowReservedHeight);\n        final boolean isState2 = (mCheckedState == STATE_SWITCH_ON2 || mCheckedState == STATE_SWITCH_OFF2);\n        calcBPath(isState2 ? 1 - dbAnim : dbAnim);\n        // Use center bar path to draw shadow\n        if (isShadow) {\n            mPaint.setStyle(Paint.Style.FILL);\n            mPaint.setShader(mShadowGradient);\n            canvas.drawPath(mBarPath, mPaint);\n            mPaint.setShader(null);\n        }\n        canvas.translate(0, -mShadowReservedHeight);\n        // draw bar\n        canvas.scale(0.98f, 0.98f, mWidth / 2, mWidth / 2);\n        mPaint.setStyle(Paint.Style.FILL);\n        mPaint.setColor(0xFFFFFFFF);\n        canvas.drawPath(mBarPath, mPaint);\n        mPaint.setStyle(Paint.Style.STROKE);\n        mPaint.setStrokeWidth(mStrokeWidth * 0.5f);\n        mPaint.setColor(isOn ? mPrimaryDarkColor : mOffDarkColor);\n        canvas.drawPath(mBarPath, mPaint);\n        canvas.restore();\n\n        mPaint.reset();\n        if (mAnim1 > 0 || mAnim2 > 0) {\n            invalidate();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43194, "method_name": "onTouchEvent", "class_name": "SwitchButton", "params": ["MotionEvent"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onTouchEvent(MotionEvent event) {\n        super.onTouchEvent(event);\n\n        if (isEnabled()\n                && (mCheckedState == STATE_SWITCH_ON || mCheckedState == STATE_SWITCH_OFF)\n                && (mAnim1 * mAnim2 == 0)) {\n\n            switch (event.getAction()) {\n                case MotionEvent.ACTION_UP:\n                    mLastCheckedState = mCheckedState;\n                    mAnim2 = 1;\n\n                    switch (mCheckedState) {\n                        case STATE_SWITCH_OFF:\n                            setChecked(true, false);\n                            if (mListener != null) {\n                                mListener.onCheckedChanged(this, true);\n                            }\n                            break;\n                        case STATE_SWITCH_ON:\n                            setChecked(false, false);\n                            if (mListener != null) {\n                                mListener.onCheckedChanged(this, false);\n                            }\n                            break;\n                        default:\n                            break;\n                    }\n                    break;\n                case MotionEvent.ACTION_DOWN:\n                default:\n                    break;\n            }\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43195, "method_name": "onSaveInstanceState", "class_name": "SwitchButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Parcelable", "snippet": "    public Parcelable onSaveInstanceState() {\n        Parcelable superState = super.onSaveInstanceState();\n        SavedState state = new SavedState(superState);\n        state.checked = mChecked;\n        return state;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43196, "method_name": "onRestoreInstanceState", "class_name": "SwitchButton", "params": ["Parcelable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRestoreInstanceState(Parcelable state) {\n        SavedState savedState = (SavedState) state;\n        super.onRestoreInstanceState(savedState.getSuperState());\n        mChecked = savedState.checked;\n        mCheckedState = mChecked ? STATE_SWITCH_ON : STATE_SWITCH_OFF;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43197, "method_name": "setColor", "class_name": "SwitchButton", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(int newColorPrimary, int newColorPrimaryDark) {\n        setColor(newColorPrimary, newColorPrimaryDark, mOffColor, mOffDarkColor);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43198, "method_name": "setColor", "class_name": "SwitchButton", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(int newColorPrimary, int newColorPrimaryDark, int newColorOff, int newColorOffDark) {\n        setColor(newColorPrimary, newColorPrimaryDark, newColorOff, newColorOffDark, mShadowColor);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43199, "method_name": "setColor", "class_name": "SwitchButton", "params": ["int", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColor(int newColorPrimary, int newColorPrimaryDark, int newColorOff, int newColorOffDark, int newColorShadow) {\n        mAccentColor = newColorPrimary;\n        mPrimaryDarkColor = newColorPrimaryDark;\n        mOffColor = newColorOff;\n        mOffDarkColor = newColorOffDark;\n        mShadowColor = newColorShadow;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43200, "method_name": "setShadow", "class_name": "SwitchButton", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShadow(boolean shadow) {\n        isShadow = shadow;\n        invalidate();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43201, "method_name": "isChecked", "class_name": "SwitchButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isChecked() {\n        return mChecked;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43202, "method_name": "setChecked", "class_name": "SwitchButton", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChecked(boolean checked) {\n        // \u56de\u8c03\u76d1\u542c\u5668\n        setChecked(checked, true);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43203, "method_name": "setChecked", "class_name": "SwitchButton", "params": ["boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setChecked(boolean checked, boolean callback) {\n        int newState = checked ? STATE_SWITCH_ON : STATE_SWITCH_OFF;\n        if (newState == mCheckedState) {\n            return;\n        }\n        if ((newState == STATE_SWITCH_ON && (mCheckedState == STATE_SWITCH_OFF || mCheckedState == STATE_SWITCH_OFF2))\n                || (newState == STATE_SWITCH_OFF && (mCheckedState == STATE_SWITCH_ON || mCheckedState == STATE_SWITCH_ON2))) {\n            mAnim1 = 1;\n        }\n        mAnim2 = 1;\n\n        if (!mChecked && newState == STATE_SWITCH_ON) {\n            mChecked = true;\n        } else if (mChecked && newState == STATE_SWITCH_OFF) {\n            mChecked = false;\n        }\n        mLastCheckedState = mCheckedState;\n        mCheckedState = newState;\n        postInvalidate();\n\n        if (callback && mListener != null) {\n            mListener.onCheckedChanged(this, checked);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43204, "method_name": "setOnCheckedChangeListener", "class_name": "SwitchButton", "params": ["OnCheckedChangeListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnCheckedChangeListener(OnCheckedChangeListener listener) {\n        mListener = listener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "View", "implements": null, "modifiers": ["final", "public"]}}, {"id": 43205, "method_name": "writeToParcel", "class_name": "SavedState", "params": ["Parcel", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void writeToParcel(Parcel out, int flags) {\n            super.writeToParcel(out, flags);\n            out.writeInt(checked ? 1 : 0);\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "BaseSavedState", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 43206, "method_name": "describeContents", "class_name": "SavedState", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int describeContents() {\n            return 0;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/widget/src/main/java/com/hjq/widget/view/SwitchButton.java", "stars": "1", "class_props": {"extends": "BaseSavedState", "implements": null, "modifiers": ["final", "static", "private"]}}, {"id": 43207, "method_name": "getInstance", "class_name": "WBDataCheckerDao", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "WBDataCheckerDao", "snippet": "\tpublic static WBDataCheckerDao getInstance() {\n\t\tif (instance == null) {\n\t\t\tsynchronized (WBDataCheckerDao.class) {\n\t\t\t\tif (instance == null) {\n\t\t\t\t\tinstance = new WBDataCheckerDao();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn instance;\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43208, "method_name": "closeConnection", "class_name": "WBDataCheckerDao", "params": ["Connection", "Logger"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void closeConnection(Connection conn, Logger log) {\n\t\tif (conn != null) {\n\t\t\ttry {\n\t\t\t\tconn.close();\n\t\t\t} catch (SQLException e) {\n\t\t\t\tlog.error(\"Error closing connection\", e);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43209, "method_name": "closeQueryRef", "class_name": "WBDataCheckerDao", "params": ["ResultSet", "PreparedStatement", "Logger"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void closeQueryRef(ResultSet rs, PreparedStatement pstmt, Logger log) {\n\t\tif (rs != null) {\n\t\t\ttry {\n\t\t\t\trs.close();\n\t\t\t} catch (SQLException e) {\n\t\t\t\tlog.error(\"Error closing result set\", e);\n\t\t\t}\n\t\t}\n\t\tif (pstmt != null) {\n\t\t\ttry {\n\t\t\t\tpstmt.close();\n\t\t\t} catch (SQLException e) {\n\t\t\t\tlog.error(\"Error closing prepared statement\", e);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43210, "method_name": "validateTableStatusFunction", "class_name": "WBDataCheckerDao", "params": ["Properties", "Logger"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean validateTableStatusFunction(Properties props, Logger log) {\n\t\tif (bdpDS == null) {\n\t\t\t//\u901a\u8fc7alibaba\u7684druid\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u83b7\u53d6BDP\u6570\u636e\u5e93\u8fde\u63a5\n\t\t\tbdpDS = WBDruidFactory.getBDPInstance(props, log);\n\t\t\tif (bdpDS == null) {\n\t\t\t\tlog.error(\"Error getting Druid DataSource instance\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\tif (jobDS == null) {\n\t\t\t//\u901a\u8fc7alibaba\u7684druid\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u83b7\u53d6JOB\u6570\u636e\u5e93\u8fde\u63a5\n\t\t\tjobDS = WBDruidFactory.getJobInstance(props, log);\n\t\t\tif (jobDS == null) {\n\t\t\t\tlog.error(\"Error getting Druid DataSource instance\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tPreparedStatement pstmt = null;\n\t\tConnection jobConn = null;\n\t\tConnection bdpConn = null;\n\n\t\ttry {\n\t\t\tfor (Map.Entry<Object, Object> entry : props.entrySet()) {\n\t\t\t\tentry.setValue(entry.getValue().toString().replace(\" \", \"\").trim());\n\t\t\t}\n\t\t}catch (Exception e){\n\t\t\tthrow new RuntimeException(\"remove job space char failed\",e);\n\t\t}\n\n\t\tString singleDataObject = props.getProperty(DataChecker.DATA_OBJECT);\n\t\tif(singleDataObject!=null){\n\t\t\tsingleDataObject = singleDataObject.replace(\" \", \"\").trim();\n\t\t}\n\t\tlog.info(\"=============================Data Check Start==========================================\");\n\t\tlog.info(\"(datachecker info) database table partition Info : \" + singleDataObject);\n\n\t\t//\u7ec4\u88c5\u67e5\u8be2\u7684\u6570\u636e\u8d44\u6e90\u96c6\u5408\n\t\tList<Map<String, String>> dataObjectList = handleSeparationProperties(props);\n\n\t\tboolean[] flagList = new boolean[dataObjectList.size()];\n\t\tArrays.fill(flagList, false);\n\t\tLong startTime = System.currentTimeMillis();\n\t\tLong currentTime = startTime;\n\t\tLong waitTime = Long.valueOf(props.getProperty(DataChecker.WAIT_TIME, \"1\")) * 3600 * 1000;\n\t\tint queryFrequency = Integer.valueOf(props.getProperty(DataChecker.QUERY_FREQUENCY, \"5\"));\n\t\tString timeScape = props.getProperty(DataChecker.TIME_SCAPE, \"NULL\");\n\n\t\tlog.info(\"(datachecker info) wait time : \" + waitTime);\n\t\tlog.info(\"(datachecker info) quert frequency : \" + queryFrequency);\n\t\tlog.info(\"(datachecker info) time scape : \" + timeScape);\n\n\t\tLong sleepTime = waitTime / queryFrequency;\n\t\tboolean result = false;\n\t\twhile((currentTime - startTime) <= waitTime) {\n\t\t\tboolean flag = true;\n\t\t\tResultSet rs = null;\n\t\t\ttry {\n\t\t\t\tjobConn = jobDS.getConnection();\n\t\t\t\tbdpConn = bdpDS.getConnection();\n\t\t\t\tfor(int i = 0; i < dataObjectList.size(); i++) {\n\t\t\t\t\tif(flagList[i]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tMap<String, String> proObjectMap = dataObjectList.get(i);\n\n\t\t\t\t\tif(proObjectMap.containsKey(DataChecker.SOURCE_TYPE)){\n\t\t\t\t\t\trs = handleHaveSourceType(proObjectMap, pstmt, jobConn, bdpConn, rs, timeScape, log, props);\n\t\t\t\t\t}else{\n\t\t\t\t\t\trs = handleNotSourceType(proObjectMap, pstmt, jobConn, bdpConn, rs, timeScape, log, props);\n\t\t\t\t\t}\n\n\t\t\t\t\tint rowCount = 0;\n\t\t\t\t\tif(rs.last()) {\n\t\t\t\t\t\trowCount = rs.getRow();\n\t\t\t\t\t}\n\t\t\t\t\tif(rowCount >= 1){\n\t\t\t\t\t\tlog.info(\"(datachecker info) get maskdb result success\");\n\t\t\t\t\t}else{\n\t\t\t\t\t\tlog.info(\"(datachecker info) get maskdb result failed\");\n\t\t\t\t\t}\n\t\t\t\t\tif(rowCount >= 1 || \"success\".equals(proObjectMap.get(\"maskStatus\"))) {\n\t\t\t\t\t\tflagList[i] = true;\n\t\t\t\t\t}\n\t\t\t\t\tflag = flag & flagList[i];\n\t\t\t\t}\n\t\t\t} catch (SQLException e) {\n\t\t\t\tthrow new RuntimeException(\"get datachecker result failed\",e);\n\t\t\t} finally {\n\t\t\t\tcloseQueryRef(rs, pstmt, log);\n\t\t\t\tcloseConnection(jobConn, log);\n\t\t\t\tcloseConnection(bdpConn, log);\n\t\t\t\tlog.info(\"=============================Data Check End==========================================\");\n\t\t\t}\n\t\t\tif(flag) {\n\t\t\t\tresult = flag;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tThread.sleep(sleepTime);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t}\n\t\t\tcurrentTime = System.currentTimeMillis();\n\t\t}\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43211, "method_name": "handleSeparationProperties", "class_name": "WBDataCheckerDao", "params": ["Properties"], "throws": null, "modifiers": ["private"], "return_type": "List<Map>", "snippet": "\tprivate List<Map<String, String>> handleSeparationProperties(Properties p){\n\t\t//source.type\u548cdata.object\u7684\u5206\u7ec4\u96c6\u5408\n\t\tList<Map<String, String>> proList = new ArrayList<>();\n\n\t\tfor(Object key : p.keySet()){\n\t\t\tMap<String, String> proMap = new HashMap<>();\n\t\t\tString skey = String.valueOf(key);\n\t\t\t//\u6839\u636edata.object\u7684\u4e2a\u6570\u53bb\u62fc\u88c5\u6570\u636e\n\t\t\tif(skey.contains(DataChecker.DATA_OBJECT)){\n\t\t\t\tString[] keyArr = skey.split(\"\\\\.\");\n\t\t\t\t//\u6709\u540e\u7f00\n\t\t\t\tif(keyArr.length == 3){\n\t\t\t\t\t//\u83b7\u53d6\u540e\u7f00\u6570\u5b57\n\t\t\t\t\tString keyNum = keyArr[2];\n\t\t\t\t\t//\u7ec4\u88c5\u6210\u5bf9\u7684Key\n\t\t\t\t\tString stKey = DataChecker.SOURCE_TYPE + \".\" + keyNum;\n\t\t\t\t\tString doKey = DataChecker.DATA_OBJECT + \".\" + keyNum;\n\t\t\t\t\t//source.type\u53ef\u80fd\u4f1a\u4e0d\u5b58\u5728\n\t\t\t\t\tif(null != p.get(stKey)){\n\t\t\t\t\t\tproMap.put(DataChecker.SOURCE_TYPE, String.valueOf(p.get(stKey)));\n\t\t\t\t\t}\n\t\t\t\t\tproMap.put(DataChecker.DATA_OBJECT, String.valueOf(p.get(doKey)));\n\t\t\t\t}else{//\u6ca1\u6709\u540e\u7f00\n\t\t\t\t\tString stKey = DataChecker.SOURCE_TYPE;\n\t\t\t\t\tString doKey = DataChecker.DATA_OBJECT;\n\t\t\t\t\t//source.type\u53ef\u80fd\u4f1a\u4e0d\u5b58\u5728\n\t\t\t\t\tif(null != p.get(stKey)){\n\t\t\t\t\t\tproMap.put(DataChecker.SOURCE_TYPE, String.valueOf(p.get(stKey)));\n\t\t\t\t\t}\n\t\t\t\t\tproMap.put(DataChecker.DATA_OBJECT, String.valueOf(p.get(doKey)));\n\t\t\t\t}\n\t\t\t\tproList.add(proMap);\n\t\t\t}\n\t\t}\n\t\treturn proList;\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43212, "method_name": "handleHaveSourceType", "class_name": "WBDataCheckerDao", "params": ["Map<String,String>", "PreparedStatement", "Connection", "Connection", "ResultSet", "String", "Logger", "Properties"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "ResultSet", "snippet": "\tprivate ResultSet handleHaveSourceType(Map<String, String>  proObjectMap, PreparedStatement pstmt,\n\t\t\t\t\t\t\t\t\t\t   Connection jobConn, Connection bdpConn, ResultSet rs, String timeScape, Logger log, Properties props) throws SQLException{\n\t\tString sourceType = proObjectMap.get(DataChecker.SOURCE_TYPE);\n\t\tif(sourceType!=null){\n\t\t\tsourceType = sourceType.replace(\" \", \"\").trim();\n\t\t}\n\t\tString dataObject = proObjectMap.get(DataChecker.DATA_OBJECT);\n\t\tif(dataObject!=null){\n\t\t\tdataObject = dataObject.replace(\" \", \"\").trim();\n\t\t}\n\t\tString dataScape = \"Table\";\n\t\tif (dataObject.contains(\"{\")) {\n\t\t\tdataScape = \"Partition\";\n\t\t}\n\t\tString dbName = null;\n\t\tString tableName = null;\n\t\tString partitionName = null;\n\t\tPattern pattern = Pattern.compile(\"\\\\{([^\\\\}]+)\\\\}\");\n\t\tif(sourceType.toLowerCase().equals(\"job\")) {\n\t\t\tlog.info(\"-------------------------------------- search hive/spark/mr data \");\n\t\t\tlog.info(\"-------------------------------------- : \" + dataObject);\n\t\t\tdbName = dataObject.split(\"\\\\.\")[0];\n\t\t\ttableName = dataObject.split(\"\\\\.\")[1];\n\t\t\tif(dataScape.equals(\"Partition\")) {\n//\t    \t\tpartitionName = tableName.split(\"\\\\{\")[1];\n//\t    \t\tpartitionName = partitionName.substring(0, partitionName.length()-1).replace(\"\\'\", \"\").replace(\"\\\"\", \"\");\n\t\t\t\tMatcher matcher = pattern.matcher(dataObject);\n\t\t\t\tif(matcher.find()){\n\t\t\t\t\tpartitionName = matcher.group(1);\n\t\t\t\t}\n\t\t\t\t//\u5bb9\u9519\u4ee3\u7801 \u8fc7\u6ee4\u7528\u6237\u591a\u5199\u7684\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\n\t\t\t\tpartitionName = partitionName.replace(\"\\'\", \"\").replace(\"\\\"\", \"\");\n\t\t\t\ttableName = tableName.split(\"\\\\{\")[0];\n\t\t\t\tpstmt = jobConn.prepareCall(SQL_SOURCE_TYPE_JOB_PARTITION);\n\t\t\t\tpstmt.setString(1, dbName);\n\t\t\t\tpstmt.setString(2, tableName);\n\t\t\t\tpstmt.setString(3, partitionName);\n\t\t\t} else {\n\t\t\t\tpstmt = jobConn.prepareCall(SQL_SOURCE_TYPE_JOB_TABLE);\n\t\t\t\tpstmt.setString(1, dbName);\n\t\t\t\tpstmt.setString(2, tableName);\n\t\t\t}\n\t\t\trs = pstmt.executeQuery();\n\t\t} else if(sourceType.toLowerCase().equals(\"bdp\")) {\n\t\t\tlog.info(\"-------------------------------------- search bdp data \");\n\t\t\tlog.info(\"-------------------------------------- : \" + dataObject);\n\t\t\tdbName = dataObject.split(\"\\\\.\")[0];\n\t\t\ttableName = dataObject.split(\"\\\\.\")[1];\n\t\t\tpartitionName = \"\";\n\t\t\tif(dataScape.equals(\"Partition\")) {\n\t\t\t\tMatcher matcher = pattern.matcher(dataObject);\n\t\t\t\tif(matcher.find()){\n\t\t\t\t\tpartitionName = matcher.group(1);\n\t\t\t\t}\n\t\t\t\t//\u5bb9\u9519\u4ee3\u7801 \u8fc7\u6ee4\u7528\u6237\u591a\u5199\u7684\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\n\t\t\t\tpartitionName = partitionName.replace(\"\\'\", \"\").replace(\"\\\"\", \"\");\n\t\t\t\ttableName = tableName.split(\"\\\\{\")[0];\n\t\t\t}\n\n\t\t\tif (timeScape.equals(\"NULL\")) {\n\t\t\t\tpstmt = bdpConn.prepareCall(SQL_SOURCE_TYPE_BDP);\n\t\t\t} else {\n\t\t\t\tpstmt = bdpConn.prepareCall(SQL_SOURCE_TYPE_BDP_WITH_TIME_CONDITION);\n\t\t\t\tpstmt.setInt(4, Integer.valueOf(timeScape) * 3600);\n\t\t\t}\n\t\t\tpstmt.setString(1, dbName);\n\t\t\tpstmt.setString(2, tableName);\n\t\t\tpstmt.setString(3, partitionName);\n\t\t\trs = pstmt.executeQuery();\n\t\t\tfetchMaskCode(proObjectMap, dbName, tableName, partitionName, log, props);\n\t\t}\n\t\treturn rs;\n\t}\n\t//\u6ca1\u6709source.type\u7684\u5904\u7406\u65b9\u6cd5\n\tprivate ResultSet handleNotSourceType(Map<String, String>  proObjectMap, PreparedStatement pstmt,\n\t\t\t\t\t\t\t\t\t\t  Connection jobConn, Connection bdpConn, ResultSet rs, String timeScape, Logger log, Properties props) throws SQLException{\n\t\tString dataObject = proObjectMap.get(DataChecker.DATA_OBJECT);\n\t\tif(dataObject!=null){\n\t\t\tdataObject = dataObject.replace(\" \", \"\").trim();\n\t\t}\n\t\tString dataScape = \"Table\";\n\t\tif (dataObject.contains(\"{\")) {\n\t\t\tdataScape = \"Partition\";\n\t\t}\n\t\tString dbName = null;\n\t\tString tableName = null;\n\t\tString partitionName = null;\n\t\tPattern pattern = Pattern.compile(\"\\\\{([^\\\\}]+)\\\\}\");\n\t\tdbName = dataObject.split(\"\\\\.\")[0];\n\t\tif(!dbName.contains(\"_ods\")) {\n\t\t\tlog.info(\"-------------------------------------- search hive/spark/mr data \");\n\t\t\tlog.info(\"-------------------------------------- : \" + dataObject);\n\t\t\ttableName = dataObject.split(\"\\\\.\")[1];\n\t\t\tif(dataScape.equals(\"Partition\")) {\n\t\t\t\tMatcher matcher = pattern.matcher(dataObject);\n\t\t\t\tif(matcher.find()){\n\t\t\t\t\tpartitionName = matcher.group(1);\n\t\t\t\t}\n\t\t\t\t//\u5bb9\u9519\u4ee3\u7801 \u8fc7\u6ee4\u7528\u6237\u591a\u5199\u7684\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\n\t\t\t\tpartitionName = partitionName.replace(\"\\'\", \"\").replace(\"\\\"\", \"\");\n\t\t\t\ttableName = tableName.split(\"\\\\{\")[0];\n\t\t\t\tpstmt = jobConn.prepareCall(SQL_SOURCE_TYPE_JOB_PARTITION);\n\t\t\t\tpstmt.setString(1, dbName);\n\t\t\t\tpstmt.setString(2, tableName);\n\t\t\t\tpstmt.setString(3, partitionName);\n\t\t\t} else {\n\t\t\t\tpstmt = jobConn.prepareCall(SQL_SOURCE_TYPE_JOB_TABLE);\n\t\t\t\tpstmt.setString(1, dbName);\n\t\t\t\tpstmt.setString(2, tableName);\n\t\t\t}\n\t\t\trs = pstmt.executeQuery();\n\t\t} else if(dbName.contains(\"_ods\")) {\n\t\t\tlog.info(\"-------------------------------------- search bdp data \");\n\t\t\tlog.info(\"-------------------------------------- : \" + dataObject);\n\t\t\tdbName = dataObject.split(\"\\\\.\")[0];\n\t\t\ttableName = dataObject.split(\"\\\\.\")[1];\n\t\t\tpartitionName = \"\";\n\t\t\tif(dataScape.equals(\"Partition\")) {\n\t\t\t\tMatcher matcher = pattern.matcher(dataObject);\n\t\t\t\tif(matcher.find()){\n\t\t\t\t\tpartitionName = matcher.group(1);\n\t\t\t\t}\n\t\t\t\t//\u5bb9\u9519\u4ee3\u7801 \u8fc7\u6ee4\u7528\u6237\u591a\u5199\u7684\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\n\t\t\t\tpartitionName = partitionName.replace(\"\\'\", \"\").replace(\"\\\"\", \"\");\n\t\t\t\ttableName = tableName.split(\"\\\\{\")[0];\n\t\t\t}\n\t\t\tif (timeScape.equals(\"NULL\")) {\n\t\t\t\tpstmt = bdpConn.prepareCall(SQL_SOURCE_TYPE_BDP);\n\t\t\t} else {\n\t\t\t\tpstmt = bdpConn.prepareCall(SQL_SOURCE_TYPE_BDP_WITH_TIME_CONDITION);\n\t\t\t\tpstmt.setInt(4, Integer.valueOf(timeScape) * 3600);\n\t\t\t}\n\t\t\tpstmt.setString(1, dbName);\n\t\t\tpstmt.setString(2, tableName);\n\t\t\tpstmt.setString(3, partitionName);\n\t\t\trs = pstmt.executeQuery();\n\t\t\tfetchMaskCode(proObjectMap, dbName, tableName, partitionName, log, props);\n\t\t}\n\t\treturn rs;\n\t}\n\n\tpublic static void closeDruidDataSource(){\n\t\tDruidDataSource bdpDSObject = (DruidDataSource)bdpDS;\n\t\tDruidDataSource jobDSObject = (DruidDataSource)jobDS;\n\n\t\tif(bdpDSObject != null){\n\t\t\tbdpDSObject.close();\n\t\t}\n\t\tif(jobDSObject != null){\n\t\t\tjobDSObject.close();\n\t\t}\n\t}\n\n\tprivate void fetchMaskCode(Map<String, String> proObjectMap, String dbName, String tableName, String partitionName,\n\t\t\t\t\t\t\t   Logger log, Properties props) {\n\t\tlog.info(\"=============================\u8c03\u7528BDP MASK\u63a5\u53e3\u67e5\u8be2\u6570\u636e\u72b6\u6001==========================================\");\n\t\tMap resultMap = new HashMap();\n\t\tString maskUrl = props.getProperty(DataChecker.MASK_URL);\n\t\tString cluster = \"BDP\";\n\t\ttry {\n\t\t\tRequestBody requestBody = new FormBody.Builder()\n\t\t\t\t\t.add(\"targetDb\", dbName)\n\t\t\t\t\t.add(\"targetTable\", tableName)\n\t\t\t\t\t.add(\"partition\", partitionName)\n\t\t\t\t\t.build();\n\t\t\tMap<String, String> dataMap = HttpUtils.initSelectParams(props);\n\t\t\tlog.info(\"request body:dbName--\" + dbName + \" tableName--\" + tableName + \" partitionName--\" + partitionName);\n\t\t\tResponse response = HttpUtils.httpClientHandleBase(maskUrl, requestBody, dataMap);\n\t\t\thandleResponse(response, proObjectMap, log);\n\t\t} catch (IOException e) {\n\t\t\tlog.error(\"\u8bbf\u95ee BDP-MASK \u8fdc\u7a0b\u67e5\u8be2BDAP\u4e1a\u52a1\u8868\u6570\u636e\u5931\u8d25\uff01\");\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t} catch (MaskCheckNotExistException e) {\n\t\t\tString errorMessage = \"\u8bbf\u95ee BDP-MASK \u8fdc\u7a0b\u67e5\u8be2BDAP\u4e1a\u52a1\u8868\u6570\u636e\u5931\u8d25\uff01\" +\n\t\t\t\t\t\"\u8bf7\u68c0\u67e5\u4e1a\u52a1\u6570\u636e\u5e93: \" + dbName + \",\u4e1a\u52a1\u6570\u636e\u8868: \" + tableName + \"\u662f\u5426\u5b58\u5728\";\n\t\t\tlog.error(errorMessage);\n\t\t\tthrow new RuntimeException(errorMessage, e);\n\t\t}\n\t}\n\n\tprivate void handleResponse(Response response, Map<String, String> proObjectMap, Logger log)\n\t\t\tthrows IOException, MaskCheckNotExistException {\n\t\tint responseCode = response.code();\n\t\tResponseBody body = response.body();\n\t\tif (responseCode == 200) {\n\t\t\thandleResponseBody(body, proObjectMap, log);\n\t\t} else {\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t}\n\t}\n\n\tprivate void handleResponseBody(ResponseBody body, Map<String, String> proObjectMap, Logger log)\n\t\t\tthrows IOException, MaskCheckNotExistException {\n\t\tString bodyStr = body.string();\n\t\tlog.info(\"mask interface response body\uff1a\" + bodyStr);\n\t\tMap entityMap = HttpUtils.getReturnMap(bodyStr);\n\t\tString codeValue = (String) entityMap.get(\"code\");\n\t\tif (\"200\".equals(codeValue)) {\n\t\t\tproObjectMap.put(\"maskStatus\", \"success\");\n\t\t} else if (\"1011\".equals(codeValue)) {\n\t\t\tthrow new MaskCheckNotExistException(\"Mask check failed\");\n\t\t} else {\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t}\n\t}\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43213, "method_name": "handleNotSourceType", "class_name": "WBDataCheckerDao", "params": ["Map<String,String>", "PreparedStatement", "Connection", "Connection", "ResultSet", "String", "Logger", "Properties"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "ResultSet", "snippet": "\tprivate ResultSet handleNotSourceType(Map<String, String>  proObjectMap, PreparedStatement pstmt,\n\t\t\t\t\t\t\t\t\t\t  Connection jobConn, Connection bdpConn, ResultSet rs, String timeScape, Logger log, Properties props) throws SQLException{\n\t\tString dataObject = proObjectMap.get(DataChecker.DATA_OBJECT);\n\t\tif(dataObject!=null){\n\t\t\tdataObject = dataObject.replace(\" \", \"\").trim();\n\t\t}\n\t\tString dataScape = \"Table\";\n\t\tif (dataObject.contains(\"{\")) {\n\t\t\tdataScape = \"Partition\";\n\t\t}\n\t\tString dbName = null;\n\t\tString tableName = null;\n\t\tString partitionName = null;\n\t\tPattern pattern = Pattern.compile(\"\\\\{([^\\\\}]+)\\\\}\");\n\t\tdbName = dataObject.split(\"\\\\.\")[0];\n\t\tif(!dbName.contains(\"_ods\")) {\n\t\t\tlog.info(\"-------------------------------------- search hive/spark/mr data \");\n\t\t\tlog.info(\"-------------------------------------- : \" + dataObject);\n\t\t\ttableName = dataObject.split(\"\\\\.\")[1];\n\t\t\tif(dataScape.equals(\"Partition\")) {\n\t\t\t\tMatcher matcher = pattern.matcher(dataObject);\n\t\t\t\tif(matcher.find()){\n\t\t\t\t\tpartitionName = matcher.group(1);\n\t\t\t\t}\n\t\t\t\t//\u5bb9\u9519\u4ee3\u7801 \u8fc7\u6ee4\u7528\u6237\u591a\u5199\u7684\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\n\t\t\t\tpartitionName = partitionName.replace(\"\\'\", \"\").replace(\"\\\"\", \"\");\n\t\t\t\ttableName = tableName.split(\"\\\\{\")[0];\n\t\t\t\tpstmt = jobConn.prepareCall(SQL_SOURCE_TYPE_JOB_PARTITION);\n\t\t\t\tpstmt.setString(1, dbName);\n\t\t\t\tpstmt.setString(2, tableName);\n\t\t\t\tpstmt.setString(3, partitionName);\n\t\t\t} else {\n\t\t\t\tpstmt = jobConn.prepareCall(SQL_SOURCE_TYPE_JOB_TABLE);\n\t\t\t\tpstmt.setString(1, dbName);\n\t\t\t\tpstmt.setString(2, tableName);\n\t\t\t}\n\t\t\trs = pstmt.executeQuery();\n\t\t} else if(dbName.contains(\"_ods\")) {\n\t\t\tlog.info(\"-------------------------------------- search bdp data \");\n\t\t\tlog.info(\"-------------------------------------- : \" + dataObject);\n\t\t\tdbName = dataObject.split(\"\\\\.\")[0];\n\t\t\ttableName = dataObject.split(\"\\\\.\")[1];\n\t\t\tpartitionName = \"\";\n\t\t\tif(dataScape.equals(\"Partition\")) {\n\t\t\t\tMatcher matcher = pattern.matcher(dataObject);\n\t\t\t\tif(matcher.find()){\n\t\t\t\t\tpartitionName = matcher.group(1);\n\t\t\t\t}\n\t\t\t\t//\u5bb9\u9519\u4ee3\u7801 \u8fc7\u6ee4\u7528\u6237\u591a\u5199\u7684\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\n\t\t\t\tpartitionName = partitionName.replace(\"\\'\", \"\").replace(\"\\\"\", \"\");\n\t\t\t\ttableName = tableName.split(\"\\\\{\")[0];\n\t\t\t}\n\t\t\tif (timeScape.equals(\"NULL\")) {\n\t\t\t\tpstmt = bdpConn.prepareCall(SQL_SOURCE_TYPE_BDP);\n\t\t\t} else {\n\t\t\t\tpstmt = bdpConn.prepareCall(SQL_SOURCE_TYPE_BDP_WITH_TIME_CONDITION);\n\t\t\t\tpstmt.setInt(4, Integer.valueOf(timeScape) * 3600);\n\t\t\t}\n\t\t\tpstmt.setString(1, dbName);\n\t\t\tpstmt.setString(2, tableName);\n\t\t\tpstmt.setString(3, partitionName);\n\t\t\trs = pstmt.executeQuery();\n\t\t\tfetchMaskCode(proObjectMap, dbName, tableName, partitionName, log, props);\n\t\t}\n\t\treturn rs;\n\t}\n\n\tpublic static void closeDruidDataSource(){\n\t\tDruidDataSource bdpDSObject = (DruidDataSource)bdpDS;\n\t\tDruidDataSource jobDSObject = (DruidDataSource)jobDS;\n\n\t\tif(bdpDSObject != null){\n\t\t\tbdpDSObject.close();\n\t\t}\n\t\tif(jobDSObject != null){\n\t\t\tjobDSObject.close();\n\t\t}\n\t}\n\n\tprivate void fetchMaskCode(Map<String, String> proObjectMap, String dbName, String tableName, String partitionName,\n\t\t\t\t\t\t\t   Logger log, Properties props) {\n\t\tlog.info(\"=============================\u8c03\u7528BDP MASK\u63a5\u53e3\u67e5\u8be2\u6570\u636e\u72b6\u6001==========================================\");\n\t\tMap resultMap = new HashMap();\n\t\tString maskUrl = props.getProperty(DataChecker.MASK_URL);\n\t\tString cluster = \"BDP\";\n\t\ttry {\n\t\t\tRequestBody requestBody = new FormBody.Builder()\n\t\t\t\t\t.add(\"targetDb\", dbName)\n\t\t\t\t\t.add(\"targetTable\", tableName)\n\t\t\t\t\t.add(\"partition\", partitionName)\n\t\t\t\t\t.build();\n\t\t\tMap<String, String> dataMap = HttpUtils.initSelectParams(props);\n\t\t\tlog.info(\"request body:dbName--\" + dbName + \" tableName--\" + tableName + \" partitionName--\" + partitionName);\n\t\t\tResponse response = HttpUtils.httpClientHandleBase(maskUrl, requestBody, dataMap);\n\t\t\thandleResponse(response, proObjectMap, log);\n\t\t} catch (IOException e) {\n\t\t\tlog.error(\"\u8bbf\u95ee BDP-MASK \u8fdc\u7a0b\u67e5\u8be2BDAP\u4e1a\u52a1\u8868\u6570\u636e\u5931\u8d25\uff01\");\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t} catch (MaskCheckNotExistException e) {\n\t\t\tString errorMessage = \"\u8bbf\u95ee BDP-MASK \u8fdc\u7a0b\u67e5\u8be2BDAP\u4e1a\u52a1\u8868\u6570\u636e\u5931\u8d25\uff01\" +\n\t\t\t\t\t\"\u8bf7\u68c0\u67e5\u4e1a\u52a1\u6570\u636e\u5e93: \" + dbName + \",\u4e1a\u52a1\u6570\u636e\u8868: \" + tableName + \"\u662f\u5426\u5b58\u5728\";\n\t\t\tlog.error(errorMessage);\n\t\t\tthrow new RuntimeException(errorMessage, e);\n\t\t}\n\t}\n\n\tprivate void handleResponse(Response response, Map<String, String> proObjectMap, Logger log)\n\t\t\tthrows IOException, MaskCheckNotExistException {\n\t\tint responseCode = response.code();\n\t\tResponseBody body = response.body();\n\t\tif (responseCode == 200) {\n\t\t\thandleResponseBody(body, proObjectMap, log);\n\t\t} else {\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t}\n\t}\n\n\tprivate void handleResponseBody(ResponseBody body, Map<String, String> proObjectMap, Logger log)\n\t\t\tthrows IOException, MaskCheckNotExistException {\n\t\tString bodyStr = body.string();\n\t\tlog.info(\"mask interface response body\uff1a\" + bodyStr);\n\t\tMap entityMap = HttpUtils.getReturnMap(bodyStr);\n\t\tString codeValue = (String) entityMap.get(\"code\");\n\t\tif (\"200\".equals(codeValue)) {\n\t\t\tproObjectMap.put(\"maskStatus\", \"success\");\n\t\t} else if (\"1011\".equals(codeValue)) {\n\t\t\tthrow new MaskCheckNotExistException(\"Mask check failed\");\n\t\t} else {\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t}\n\t}\n}\n\n", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43214, "method_name": "closeDruidDataSource", "class_name": "WBDataCheckerDao", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void closeDruidDataSource(){\n\t\tDruidDataSource bdpDSObject = (DruidDataSource)bdpDS;\n\t\tDruidDataSource jobDSObject = (DruidDataSource)jobDS;\n\n\t\tif(bdpDSObject != null){\n\t\t\tbdpDSObject.close();\n\t\t}\n\t\tif(jobDSObject != null){\n\t\t\tjobDSObject.close();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43215, "method_name": "fetchMaskCode", "class_name": "WBDataCheckerDao", "params": ["Map<String,String>", "String", "String", "String", "Logger", "Properties"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void fetchMaskCode(Map<String, String> proObjectMap, String dbName, String tableName, String partitionName,\n\t\t\t\t\t\t\t   Logger log, Properties props) {\n\t\tlog.info(\"=============================\u8c03\u7528BDP MASK\u63a5\u53e3\u67e5\u8be2\u6570\u636e\u72b6\u6001==========================================\");\n\t\tMap resultMap = new HashMap();\n\t\tString maskUrl = props.getProperty(DataChecker.MASK_URL);\n\t\tString cluster = \"BDP\";\n\t\ttry {\n\t\t\tRequestBody requestBody = new FormBody.Builder()\n\t\t\t\t\t.add(\"targetDb\", dbName)\n\t\t\t\t\t.add(\"targetTable\", tableName)\n\t\t\t\t\t.add(\"partition\", partitionName)\n\t\t\t\t\t.build();\n\t\t\tMap<String, String> dataMap = HttpUtils.initSelectParams(props);\n\t\t\tlog.info(\"request body:dbName--\" + dbName + \" tableName--\" + tableName + \" partitionName--\" + partitionName);\n\t\t\tResponse response = HttpUtils.httpClientHandleBase(maskUrl, requestBody, dataMap);\n\t\t\thandleResponse(response, proObjectMap, log);\n\t\t} catch (IOException e) {\n\t\t\tlog.error(\"\u8bbf\u95ee BDP-MASK \u8fdc\u7a0b\u67e5\u8be2BDAP\u4e1a\u52a1\u8868\u6570\u636e\u5931\u8d25\uff01\");\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t} catch (MaskCheckNotExistException e) {\n\t\t\tString errorMessage = \"\u8bbf\u95ee BDP-MASK \u8fdc\u7a0b\u67e5\u8be2BDAP\u4e1a\u52a1\u8868\u6570\u636e\u5931\u8d25\uff01\" +\n\t\t\t\t\t\"\u8bf7\u68c0\u67e5\u4e1a\u52a1\u6570\u636e\u5e93: \" + dbName + \",\u4e1a\u52a1\u6570\u636e\u8868: \" + tableName + \"\u662f\u5426\u5b58\u5728\";\n\t\t\tlog.error(errorMessage);\n\t\t\tthrow new RuntimeException(errorMessage, e);\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43216, "method_name": "handleResponse", "class_name": "WBDataCheckerDao", "params": ["Response", "Map<String,String>", "Logger"], "throws": ["IOException", "MaskCheckNotExistException"], "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void handleResponse(Response response, Map<String, String> proObjectMap, Logger log)\n\t\t\tthrows IOException, MaskCheckNotExistException {\n\t\tint responseCode = response.code();\n\t\tResponseBody body = response.body();\n\t\tif (responseCode == 200) {\n\t\t\thandleResponseBody(body, proObjectMap, log);\n\t\t} else {\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43217, "method_name": "handleResponseBody", "class_name": "WBDataCheckerDao", "params": ["ResponseBody", "Map<String,String>", "Logger"], "throws": ["IOException", "MaskCheckNotExistException"], "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void handleResponseBody(ResponseBody body, Map<String, String> proObjectMap, Logger log)\n\t\t\tthrows IOException, MaskCheckNotExistException {\n\t\tString bodyStr = body.string();\n\t\tlog.info(\"mask interface response body\uff1a\" + bodyStr);\n\t\tMap entityMap = HttpUtils.getReturnMap(bodyStr);\n\t\tString codeValue = (String) entityMap.get(\"code\");\n\t\tif (\"200\".equals(codeValue)) {\n\t\t\tproObjectMap.put(\"maskStatus\", \"success\");\n\t\t} else if (\"1011\".equals(codeValue)) {\n\t\t\tthrow new MaskCheckNotExistException(\"Mask check failed\");\n\t\t} else {\n\t\t\tproObjectMap.put(\"maskStatus\", \"noPrepare\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/connectors/druid/WBDataCheckerDao.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43218, "method_name": "getId", "class_name": "DatabaseCertificate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getId() {\n        return mId;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/DatabaseCertificate.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43219, "method_name": "getName", "class_name": "DatabaseCertificate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return mName;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/DatabaseCertificate.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43220, "method_name": "toString", "class_name": "DatabaseCertificate", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return mName;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/DatabaseCertificate.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43221, "method_name": "maxScaleAdj", "class_name": "GalaxyRectangularShape", "params": [], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float maxScaleAdj()               { return 0.95f; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxyRectangularShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 43222, "method_name": "galaxyWidthLY", "class_name": "GalaxyRectangularShape", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int galaxyWidthLY() { \n        return (int) (Math.sqrt(4.0/3.0*opts.numberStarSystems()*adjustedSizeFactor()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxyRectangularShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 43223, "method_name": "galaxyHeightLY", "class_name": "GalaxyRectangularShape", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int galaxyHeightLY() { \n        return (int) (Math.sqrt(3.0/4.0*opts.numberStarSystems()*adjustedSizeFactor()));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxyRectangularShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 43224, "method_name": "setRandom", "class_name": "GalaxyRectangularShape", "params": ["Point"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRandom(Point.Float pt) {\n        pt.x = randomLocation(width, galaxyEdgeBuffer());\n        pt.y = randomLocation(height, galaxyEdgeBuffer());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxyRectangularShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 43225, "method_name": "valid", "class_name": "GalaxyRectangularShape", "params": ["Point"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean valid(Point.Float pt) {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxyRectangularShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 43226, "method_name": "randomLocation", "class_name": "GalaxyRectangularShape", "params": ["float", "float"], "throws": null, "modifiers": [], "return_type": "float", "snippet": "    float randomLocation(float max, float buff) {\n        return buff + (random() * (max-buff-buff));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxyRectangularShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 43227, "method_name": "sizeFactor", "class_name": "GalaxyRectangularShape", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "float", "snippet": "    protected float sizeFactor(String size) {\n        switch (opts.selectedGalaxySize()) {\n            case IGameOptions.SIZE_TINY:      return 10; \n            case IGameOptions.SIZE_SMALL:     return 15; \n            case IGameOptions.SIZE_SMALL2:    return 17;\n            case IGameOptions.SIZE_MEDIUM:    return 19; \n            case IGameOptions.SIZE_MEDIUM2:   return 20; \n            case IGameOptions.SIZE_LARGE:     return 21; \n            case IGameOptions.SIZE_LARGE2:    return 22; \n            case IGameOptions.SIZE_HUGE:      return 23; \n            case IGameOptions.SIZE_HUGE2:     return 24; \n            case IGameOptions.SIZE_MASSIVE:   return 25; \n            case IGameOptions.SIZE_MASSIVE2:  return 26; \n            case IGameOptions.SIZE_MASSIVE3:  return 27; \n            case IGameOptions.SIZE_MASSIVE4:  return 28; \n            case IGameOptions.SIZE_MASSIVE5:  return 29; \n            case IGameOptions.SIZE_INSANE:    return 32; \n            case IGameOptions.SIZE_LUDICROUS: return 26; \n            default:             return 19; \n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/model/galaxy/GalaxyRectangularShape.java", "stars": "74", "class_props": {"extends": "GalaxyShape", "implements": null, "modifiers": ["public"]}}, {"id": 43228, "method_name": "main", "class_name": "Process_thread", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String args[]) throws Exception{\n/*\n        new Mythread(\"\u591a\u7ebf\u7a0bA\u6d4b\u8bd5\").start();\n        new Mythread(\"\u591a\u7ebf\u7a0bB\u6d4b\u8bd5\").start();\n        new Mythread(\"\u591a\u7ebf\u7a0bc\u6d4b\u8bd5\").start();\n        */\n\n        /**\n         * start()\u8d1f\u8d23\u627e\u5230start0() . \u7531JVM\u5b9e\u73b0<JNI\u6280\u672f.java native interface\n         * \u8c03\u7528\u64cd\u4f5c\u7cfb\u7edf\u5e95\u5c42\u51fd\u6570\uff0c\u901a\u8fc7\u7b97\u6cd5\u8c03\u5ea6\u8d44\u6e90>\n         */\n\n        Thread threadA = new Thread(new Mythread1(\"\u7ebf\u7a0b\u5bf9\u8c61A\"));\n        Thread threadB = new Thread(new Mythread1(\"\u7ebf\u7a0b\u5bf9\u8c61B\"));\n        Thread threadC = new Thread(new Mythread1(\"\u7ebf\u7a0b\u5bf9\u8c61C\"));\n        /**\n         * \u8bbe\u7f6e\u4f18\u5148\u7ea7  setPriority\n         * \u4e3b\u7ebf\u7a0b\u5c5e\u4e8e\u4e2d\u7b49\u4f18\u5148\u7ea7\n         * \u4f18\u5148\u7ea7\u9ad8\u7684\u53ef\u80fd\u5148\u6267\u884c\n         */\n        threadA.setPriority(Thread.MIN_PRIORITY);\n        threadB.setPriority(Thread.MIN_PRIORITY);\n        threadC.setPriority(Thread.MAX_PRIORITY);\n        threadA.start();\n        threadB.start();\n        threadC.start();\n\n        // \u51fd\u6570\u5f0f\u63a5\u53e3\n        System.out.println(\"***********Runnable\u5b9e\u73b0\u591a\u7ebf\u7a0b*************\");\n        for(int x=0;x<3;x++){\n            String title = \"\u7ebf\u7a0b\u5bf9\u8c61-\"+x;\n/*            Runnable run = ()->{\n                for (int y=0;y<10;y++){\n                    System.out.println(title+\"\u8fd0\u884c,y=\"+y);\n                }\n            };\n            new Thread(run).start();*/\n            new Thread(()->{\n                for (int y=0;y<10;y++) {\n                    System.out.println(title + \"\u8fd0\u884c,y=\" + y);\n                }\n            }).start();\n        }\n\n        System.out.println(\"***********Callable\u5b9e\u73b0\u591a\u7ebf\u7a0b*************\");\n        FutureTask<String> task = new FutureTask<String>(new Mythread2());\n        new Thread(task).start();\n        new Thread(task).start();\n        new Thread(task).start();\n        System.out.println(\"\u7ebf\u7a0b\u8fd4\u56de\u6570\u636e:\"+task.get());\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/Process_thread.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43229, "method_name": "run", "class_name": "Mythread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        for(int x=0;x<10;x++){\n            System.out.println(this.title+\"\u8fd0\u884c\uff0cx=\"+x);\n        }\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/Process_thread.java", "stars": "10", "class_props": {"extends": "Thread", "implements": null, "modifiers": []}}, {"id": 43230, "method_name": "run", "class_name": "Mythread1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void run() {\n        for(int x=0;x<10;x++){\n            try {\n                Thread.sleep(1000);\n            }catch (InterruptedException e){\n                e.printStackTrace();\n            }\n            System.out.println(this.title+\"\u8fd0\u884c\uff0cx=\"+x);\n        }\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/Process_thread.java", "stars": "10", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": []}}, {"id": 43231, "method_name": "call", "class_name": "Mythread2", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String call() throws Exception{\n        for (int x=0;x<10;x++){\n            System.out.println(\"\u7ebf\u7a0b\u6267\u884c.x=\"+x);\n        }\n        return \"\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\";\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/ThreadStudy/Process_thread.java", "stars": "10", "class_props": {"extends": null, "implements": ["Callable"], "modifiers": []}}, {"id": 43232, "method_name": "main", "class_name": "MallTinyMybatisGeneratorApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(MallTinyMybatisGeneratorApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/MallTinyMybatisGeneratorApplication.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43233, "method_name": "getRecyclerBaseAdapter", "class_name": "RecyclerItemBaseHolder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView.Adapter getRecyclerBaseAdapter() {\n        return recyclerBaseAdapter;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/holder/RecyclerItemBaseHolder.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 43234, "method_name": "setRecyclerBaseAdapter", "class_name": "RecyclerItemBaseHolder", "params": ["RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setRecyclerBaseAdapter(RecyclerView.Adapter recyclerBaseAdapter) {\n        this.recyclerBaseAdapter = recyclerBaseAdapter;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/holder/RecyclerItemBaseHolder.java", "stars": "2", "class_props": {"extends": "RecyclerView", "implements": null, "modifiers": ["public"]}}, {"id": 43235, "method_name": "main", "class_name": "Demo04LinkedHashSet", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        HashSet<String> set = new HashSet<>();\n        set.add(\"www\");\n        set.add(\"abc\");\n        set.add(\"abc\");\n        set.add(\"itcast\");\n        System.out.println(set);//[abc, www, itcast] \u65e0\u5e8f,\u4e0d\u5141\u8bb8\u91cd\u590d\n\n        LinkedHashSet<String> linked = new LinkedHashSet<>();\n        linked.add(\"www\");\n        linked.add(\"abc\");\n        linked.add(\"abc\");\n        linked.add(\"itcast\");\n        System.out.println(linked);//[www, abc, itcast] \u6709\u5e8f,\u4e0d\u5141\u8bb8\u91cd\u590d\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/14.%E3%80%90List%E3%80%81Set%E3%80%91-%E7%AC%94%E8%AE%B0/code/03_ListAndSet/src/com/itheima/demo02/Set/Demo04LinkedHashSet.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43236, "method_name": "main", "class_name": "Demo07Stream_skip", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        //\u83b7\u53d6\u4e00\u4e2aStream\u6d41\n        String[] arr = {\"\u7f8e\u7f8a\u7f8a\",\"\u559c\u6d0b\u6d0b\",\"\u61d2\u6d0b\u6d0b\",\"\u7070\u592a\u72fc\",\"\u7ea2\u592a\u72fc\"};\n        Stream<String> stream = Stream.of(arr);\n        //\u4f7f\u7528skip\u65b9\u6cd5\u8df3\u8fc7\u524d3\u4e2a\u5143\u7d20\n        Stream<String> stream2 = stream.skip(3);\n        //\u904d\u5386stream2\u6d41\n        stream2.forEach(name-> System.out.println(name));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/24.%E3%80%90Stream%E6%B5%81%E3%80%81%E6%96%B9%E6%B3%95%E5%BC%95%E7%94%A8%E3%80%91%E7%AC%94%E8%AE%B0/code/13_StreamAndMethodReference/src/com/itheima/demo02/Stream/Demo07Stream_skip.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43237, "method_name": "configure", "class_name": "InjectByTypeAnnotationObjectConfigurator", "params": ["Object", "ApplicationContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void configure(Object t, ApplicationContext context) {\n        for (Field field : t.getClass().getDeclaredFields()) {\n            if (field.isAnnotationPresent(InjectByType.class)) {\n                field.setAccessible(true);\n                Object object = context.getObject(field.getType());\n                field.set(t, object);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Jeka1978/coronadesinfectorlifedemo/master/src/main/java/com/epam/InjectByTypeAnnotationObjectConfigurator.java", "stars": "60", "class_props": {"extends": null, "implements": ["ObjectConfigurator"], "modifiers": ["public"]}}, {"id": 43238, "method_name": "onDisable", "class_name": "AntiChainPop", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDisable() {\n        popCount = 0;\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/combat/AntiChainPop.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 43239, "method_name": "onPacket", "class_name": "AntiChainPop", "params": ["PacketEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPacket(PacketEvent event) {\n        if (event.getType().equals(PacketEvent.Type.INCOMING)) {\n            if (event.getPacket() instanceof SPacketEntityStatus) {\n                SPacketEntityStatus packet = (SPacketEntityStatus) event.getPacket();\n                if (packet.getOpCode() == 35) {\n                    entity = packet.getEntity(mc.world);\n                    if (entity == mc.player) {\n                        popCount++;\n                        if (popCount >= pops) {\n                            if (!Mercury.INSTANCE.getModuleManager().find(Surround.class).isEnabled())\n                                Mercury.INSTANCE.getModuleManager().find(Surround.class).setEnabled(true);\n                            popCount = 0;\n                        }\n                    }\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Crystallinqq/Mercury-Client/master/src/main/java/fail/mercury/client/client/modules/combat/AntiChainPop.java", "stars": "12", "class_props": {"extends": "Module", "implements": null, "modifiers": ["public"]}}, {"id": 43240, "method_name": "addConfigurationProperties", "class_name": "CommentGenerator", "params": ["Properties"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addConfigurationProperties(Properties properties) {\n        super.addConfigurationProperties(properties);\n        this.addRemarkComments = StringUtility.isTrue(properties.getProperty(\"addRemarkComments\"));\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/CommentGenerator.java", "stars": "2", "class_props": {"extends": "DefaultCommentGenerator", "implements": null, "modifiers": ["public"]}}, {"id": 43241, "method_name": "addFieldComment", "class_name": "CommentGenerator", "params": ["Field", "IntrospectedTable", "IntrospectedColumn"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addFieldComment(Field field, IntrospectedTable introspectedTable,\n                                IntrospectedColumn introspectedColumn) {\n        String remarks = introspectedColumn.getRemarks();\n        //\u6839\u636e\u53c2\u6570\u548c\u5907\u6ce8\u4fe1\u606f\u5224\u65ad\u662f\u5426\u6dfb\u52a0\u5907\u6ce8\u4fe1\u606f\n        if (addRemarkComments && StringUtility.stringHasValue(remarks)) {\n            //addFieldJavaDoc(field, remarks);\n            //\u6570\u636e\u5e93\u4e2d\u7279\u6b8a\u5b57\u7b26\u9700\u8981\u8f6c\u4e49\n            if(remarks.contains(\"\\\"\")){\n                remarks = remarks.replace(\"\\\"\",\"'\");\n            }\n            //\u7ed9model\u7684\u5b57\u6bb5\u6dfb\u52a0swagger\u6ce8\u89e3\n            field.addJavaDocLine(\"@ApiModelProperty(value = \\\"\"+remarks+\"\\\")\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/CommentGenerator.java", "stars": "2", "class_props": {"extends": "DefaultCommentGenerator", "implements": null, "modifiers": ["public"]}}, {"id": 43242, "method_name": "addFieldJavaDoc", "class_name": "CommentGenerator", "params": ["Field", "String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addFieldJavaDoc(Field field, String remarks) {\n        //\u6587\u6863\u6ce8\u91ca\u5f00\u59cb\n        field.addJavaDocLine(\"/**\");\n        //\u83b7\u53d6\u6570\u636e\u5e93\u5b57\u6bb5\u7684\u5907\u6ce8\u4fe1\u606f\n        String[] remarkLines = remarks.split(System.getProperty(\"line.separator\"));\n        for (String remarkLine : remarkLines) {\n            field.addJavaDocLine(\" * \" + remarkLine);\n        }\n        addJavadocTag(field, false);\n        field.addJavaDocLine(\" */\");\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/CommentGenerator.java", "stars": "2", "class_props": {"extends": "DefaultCommentGenerator", "implements": null, "modifiers": ["public"]}}, {"id": 43243, "method_name": "addJavaFileComment", "class_name": "CommentGenerator", "params": ["CompilationUnit"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addJavaFileComment(CompilationUnit compilationUnit) {\n        super.addJavaFileComment(compilationUnit);\n        //\u53ea\u5728model\u4e2d\u6dfb\u52a0swagger\u6ce8\u89e3\u7c7b\u7684\u5bfc\u5165\n        if(!compilationUnit.isJavaInterface()&&!compilationUnit.getType().getFullyQualifiedName().contains(EXAMPLE_SUFFIX)){\n            compilationUnit.addImportedType(new FullyQualifiedJavaType(API_MODEL_PROPERTY_FULL_CLASS_NAME));\n        }\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/CommentGenerator.java", "stars": "2", "class_props": {"extends": "DefaultCommentGenerator", "implements": null, "modifiers": ["public"]}}, {"id": 43244, "method_name": "on", "class_name": "TheatreLights", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void on() {}", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Facade%20Pattern/src/Components/TheatreLights.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43245, "method_name": "off", "class_name": "TheatreLights", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void off() {}", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Facade%20Pattern/src/Components/TheatreLights.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43246, "method_name": "createTag", "class_name": "PhoneUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Map>", "snippet": "    public static List<Map<String,String>> createTag(String tag){\n        String[] tags = tag.split(\"&\");\n        List<Map<String,String>> list = new ArrayList<>();\n        Map<String,String> map;\n        for (String s : tags) {\n            map = new HashMap<>();\n            map.put(\"name\",s);\n            list.add(map);\n        }\n        return list;\n    }", "url": "https://raw.githubusercontent.com/southwind9801/phone_store_demo_springboot/master/src/main/java/com/southwind/phone_store_demo/util/PhoneUtil.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43247, "method_name": "getTag", "class_name": "SetPreviewCallbackCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTag() {\n        return \"SetPreviewCallbackCallable\";\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/SetPreviewCallbackCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 43248, "method_name": "call", "class_name": "SetPreviewCallbackCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CallableReturn<Void>", "snippet": "    public CallableReturn<Void> call() {\n        Camera camera = getCameraData().mCamera;\n        if (camera == null) {\n            return new CallableReturn<>(new Exception(\"Camera isn't opened\"));\n        }\n        if (this.mWithBuffer) {\n            camera.setPreviewCallbackWithBuffer(this.mPreviewCallback);\n        } else {\n            camera.setPreviewCallback(this.mPreviewCallback);\n        }\n        return new CallableReturn<>((Object) null);\n    }", "url": "https://raw.githubusercontent.com/luca020400/face/master/java/co/aospa/facesense/camera/callables/SetPreviewCallbackCallable.java", "stars": "13", "class_props": {"extends": "CameraCallable", "implements": null, "modifiers": ["public"]}}, {"id": 43249, "method_name": "newInstance", "class_name": "passenger_form", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "passenger_form", "snippet": "    public static passenger_form newInstance(String param1, String param2) {\n        passenger_form fragment = new passenger_form();\n        Bundle args = new Bundle();\n        args.putString(ARG_PARAM1, param1);\n        args.putString(ARG_PARAM2, param2);\n        fragment.setArguments(args);\n        return fragment;\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/passenger_form.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43250, "method_name": "onCreate", "class_name": "passenger_form", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        if (getArguments() != null) {\n            mParam1 = getArguments().getString(ARG_PARAM1);\n            mParam2 = getArguments().getString(ARG_PARAM2);\n            no_of_person=Integer.parseInt(mParam1);\n            b_id = Integer.parseInt(mParam2);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/passenger_form.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43251, "method_name": "onCreateView", "class_name": "passenger_form", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        final View view = inflater.inflate(R.layout.fragment_passenger_form, container, false);\n        pbar = view.findViewById(R.id.progress);\n        main_layout = view.findViewById(R.id.main_layout);\n        ((AppCompatActivity)getActivity()).getSupportActionBar().hide();\n        submit_btn=view.findViewById(R.id.add_btn);\n        for(int i=0;i<no_of_person;i++)\n        {\n            LinearLayout new_form = new LinearLayout(getContext());\n            new_form.setLayoutParams(new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT));\n            new_form.setOrientation(LinearLayout.VERTICAL);\n\n            new_form.setPadding(15,15,15,15);\n\n            EditText name= new EditText(getContext());\n            EditText age= new EditText(getContext());\n            EditText gender= new EditText(getContext());\n            TextView title = new TextView(getContext());\n            title.setText(\"Traveller \"+(i+1));\n            title.setGravity(Gravity.CENTER);\n            title.setPadding(5,50,5,50);\n\n            name.setTag(\"name_of_user\".concat(String.valueOf(i+1)));\n            name.setHint(\"Name of traveller \"+(i+1));\n            name.setPadding(5,50,5,50);\n            age.setTag(\"age_of_user\".concat(String.valueOf(i+1)));\n            age.setInputType(InputType.TYPE_CLASS_NUMBER);\n            age.setPadding(5,50,5,50);\n            age.setHint(\"Age of traveller \"+(i+1));\n            gender.setTag(\"gender_of_user\".concat(String.valueOf(i+1)));\n            gender.setPadding(5,50,5,50);\n            gender.setHint(\"Gender of traveller \"+(i+1));\n            new_form.addView(title);\n            new_form.addView(name);\n            new_form.addView(age);\n            new_form.addView(gender);\n\n            main_layout.addView(new_form);\n        }\n        values=\"\";\n        submit_btn.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                int fl = 0;\n                for (int i = 0; i < no_of_person; i++) {\n                    EditText ed_name = new EditText(getContext());\n                    EditText ed_age = new EditText(getContext());\n                    EditText ed_gender = new EditText(getContext());\n                    ed_name = view.findViewWithTag(\"name_of_user\".concat(String.valueOf(i+1)));\n                    ed_age = view.findViewWithTag(\"age_of_user\".concat(String.valueOf(i+1)));\n                    ed_gender = view.findViewWithTag(\"gender_of_user\".concat(String.valueOf(i+1)));\n\n                    if (ed_name.getText().toString().isEmpty() || ed_age.getText().toString().isEmpty() || ed_gender.getText().toString().isEmpty() ) {\n                        Toast.makeText(getContext(), \"Fill all the Fields\", Toast.LENGTH_LONG).show();\n                        fl = 1;\n                        break;\n                    }\n                    if (!ed_age.getText().toString().isEmpty())\n                    {\n                        int age;\n                        age=Integer.parseInt(ed_age.getText().toString());\n                        if (age == 0 )\n                        {\n                            Toast.makeText(getContext(),\"Age cannot be 0 !!!\",Toast.LENGTH_LONG).show();\n                            fl=1;\n                            break;\n                        }\n                    }\n                    if (!\"M\".equalsIgnoreCase(ed_gender.getText().toString())) {\n                        if (!\"F\".equalsIgnoreCase(ed_gender.getText().toString())) {\n                            if (!\"O\".equalsIgnoreCase(ed_gender.getText().toString())) {\n                                Toast.makeText(getContext(), \"Gender needs to be M or F or O !!! , for traveller\"+ (i+2), Toast.LENGTH_LONG).show();\n                                fl = 1;\n                                break;\n                            }\n\n                        }\n\n                    }\n                }\n                pbar.setVisibility(View.VISIBLE);\n                if (fl == 0) {\n                    for (int i = 0; i < no_of_person; i++) {\n                        values += \"(\" + b_id + \",\";\n                        EditText ed_name = new EditText(getContext());\n                        EditText ed_age = new EditText(getContext());\n                        EditText ed_gender = new EditText(getContext());\n                        ed_name = view.findViewWithTag(\"name_of_user\".concat(String.valueOf(i+1)));\n                        ed_age = view.findViewWithTag(\"age_of_user\".concat(String.valueOf(i+1)));\n                        ed_gender = view.findViewWithTag(\"gender_of_user\".concat(String.valueOf(i+1)));\n                        values += \"'\" + ed_name.getText().toString() + \"',\" + ed_age.getText().toString() + \",'\" + ed_gender.getText().toString() + \"')\";\n                        if (i != no_of_person-1)\n                        {\n                            values+=\",\";\n                        }\n                    }\n                    if (!((MainActivity)getActivity()).isNetworkAvailable(getContext()))\n                    {\n                        Toast.makeText(getContext(),\"No Internet Connectivity\",Toast.LENGTH_LONG).show();\n                        getActivity().finish();\n                    }\n                    Retrofit retrofit = new Retrofit.Builder().baseUrl(APIUrl.BASE_URL).\n                            addConverterFactory(GsonConverterFactory.create()).build();\n                    final APIService service = retrofit.create(APIService.class);\n                    Call<Result_1> call = service.addpassenger(\"add_passenger\",values);\n                    call.enqueue(new Callback<Result_1>() {\n                        @Override\n                        public void onResponse(Call<Result_1> call, Response<Result_1> response) {\n\n                            result_1 =  response.body();\n                            InputMethodManager imm = (InputMethodManager) getContext().getSystemService(getContext().INPUT_METHOD_SERVICE);\n                            imm.hideSoftInputFromWindow(view.getWindowToken(),0);\n                            if (\"true\".equals(result_1.res))\n                            {\n                                ((AppCompatActivity)getActivity()).getSupportActionBar().show();\n                                Toast.makeText(getContext(),\"Booking complete , Enjoy the holidays \",Toast.LENGTH_LONG).show();\n                                getActivity().getSupportFragmentManager().beginTransaction().\n                                        replace(R.id.frame_layout,bookings_view.newInstance(),\"bookings_view\").\n                                        addToBackStack(\"multiple_package\").commit();\n\n                            }\n                            else\n                            {\n\n                                ((AppCompatActivity)getActivity()).getSupportActionBar().show();\n\n                                Toast.makeText(getContext(),\"Booking not Completed\",Toast.LENGTH_LONG).show();\n                                getActivity().getSupportFragmentManager().beginTransaction().\n                                        replace(R.id.frame_layout,bookings_view.newInstance(),\"bookings_view\").\n                                        addToBackStack(\"multiple_package\").commit();\n                            }\n                        }\n\n                        @Override\n                        public void onFailure(Call<Result_1> call, Throwable t) {\n                            Log.e(\"Error\", t.getMessage());\n                        }\n                    });\n                }\n            }\n        });\n\n        return  view;\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/passenger_form.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43252, "method_name": "onButtonPressed", "class_name": "passenger_form", "params": ["Uri"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onButtonPressed(Uri uri) {\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/passenger_form.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43253, "method_name": "onAttach", "class_name": "passenger_form", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context context) {\n        super.onAttach(context);\n\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/passenger_form.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43254, "method_name": "onDetach", "class_name": "passenger_form", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDetach() {\n        super.onDetach();\n    }", "url": "https://raw.githubusercontent.com/sachin2912/torripo/master/app/src/main/java/com/example/torripo/passenger_form.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43255, "method_name": "customerChanging", "class_name": "LinkChangingListener", "params": ["LinkAddingEvent", "int"], "throws": ["BGException"], "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void customerChanging( LinkAddingEvent event, int customerId )\n\t\tthrows BGException\n\t{\n\t\tCommonObjectLink link = event.getLink();\n\t\tif( !Customer.OBJECT_TYPE.equals( link.getObjectType() ) ||\n\t\t\t!link.getLinkedObjectType().startsWith( \"contract:\" ) )\n\t\t{\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tString billingId = StringUtils.substringAfter( link.getLinkedObjectType(), \":\" );\n\t\tDBInfo dbInfo = DBInfoManager.getInstance().getDbInfoMap().get( billingId );\n\t\t\n\t\tif( dbInfo == null )\n\t\t{\n\t\t\tthrow new BGMessageException( \"\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0431\u0438\u043b\u043b\u0438\u043d\u0433 \u0441 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u043e\u043c: \" + billingId );\n\t\t}\n\n\t\tint customerIdParam = dbInfo.getCustomerIdParam();\n\t\tif( customerIdParam <= 0 )\n\t\t{\n\t\t\tthrow new BGMessageException( \"\u041d\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 'customerIdParam' \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430.\" );\n\t\t}\n\t\t\n\t\tint contractId = link.getLinkedObjectId();\n\t\ttry\n        {\n\t\t\tContractParamDAO contractParamDAO = new ContractParamDAO( event.getUser(), dbInfo );\n\n\t\t\t// \u043f\u0443\u0441\u0442\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0430 \u043d\u0435 0, \u0442.\u043a. \u043f\u043e \u043d\u0443\u043b\u044e \u0431\u0443\u0434\u0435\u0442 \u0438\u043c\u043f\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0435\u0433\u043e \u0441\u0440\u0430\u0437\u0443 \u0436\u0435 \u043f\u044b\u0442\u0430\u0442\u044c\u0441\u044f.\n\t\t\tcontractParamDAO.updateTextParameter( contractId, customerIdParam, customerId > 0 ? String.valueOf( customerId ) : \"\" );\n        }\n        catch( Exception e )\n        {\n\t        throw new BGException( \"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438\u0432\u044f\u0437\u043a\u0438 \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0430 \u043a \u043a\u043e\u043d\u0442\u0440\u0430\u0433\u0435\u043d\u0442\u0443: \" + e.getMessage(), e );\n        }\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/event/listener/LinkChangingListener.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43256, "method_name": "getNumber", "class_name": "CardActivationData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getNumber() {\n        return number;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43257, "method_name": "setNumber", "class_name": "CardActivationData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNumber(String number) {\n        this.number = number;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43258, "method_name": "getSumma", "class_name": "CardActivationData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSumma() {\n        return summa;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43259, "method_name": "setSumma", "class_name": "CardActivationData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSumma(String summa) {\n        this.summa = summa;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43260, "method_name": "getId", "class_name": "CardActivationData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getId() {\n        return number;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43261, "method_name": "setId", "class_name": "CardActivationData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(String id) {\n        this.number = id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43262, "method_name": "getStatus", "class_name": "CardActivationData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getStatus() {\n        return status;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43263, "method_name": "setStatus", "class_name": "CardActivationData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStatus(String status) {\n        this.status = status;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43264, "method_name": "getActivationDate", "class_name": "CardActivationData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getActivationDate() {\n        return activationDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43265, "method_name": "setActivationDate", "class_name": "CardActivationData", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setActivationDate(String activationDate) {\n        this.activationDate = activationDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/card/CardActivationData.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43266, "method_name": "getId", "class_name": "EntityLogItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43267, "method_name": "setId", "class_name": "EntityLogItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43268, "method_name": "getUserId", "class_name": "EntityLogItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43269, "method_name": "setUserId", "class_name": "EntityLogItem", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(int userId) {\n        this.userId = userId;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43270, "method_name": "getText", "class_name": "EntityLogItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getText() {\n        return text;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43271, "method_name": "setText", "class_name": "EntityLogItem", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setText(String text) {\n        this.text = text;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43272, "method_name": "getDate", "class_name": "EntityLogItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getDate() {\n        return date;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43273, "method_name": "setDate", "class_name": "EntityLogItem", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDate(Date date) {\n        this.date = date;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43274, "method_name": "getDateFormatted", "class_name": "EntityLogItem", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDateFormatted() {\n        return TimeUtils.format(date, TimeUtils.FORMAT_TYPE_YMDHMS);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/EntityLogItem.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43275, "method_name": "contextLoads", "class_name": "SocketApplicationTests", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void contextLoads() {\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/test/java/com/integration/socket/SocketApplicationTests.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43276, "method_name": "isFilled", "class_name": "ShowCommonContractStepData", "params": ["DynActionForm", "Connection"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isFilled( DynActionForm form, Connection con )\n\t\tthrows BGException\n\t{\n\t\tProcessLinkDAO processLinkDAO = new ProcessLinkDAO( con );\n\t\tprocessCustomerLinkList = processLinkDAO.getObjectLinksWithType( processId, Customer.OBJECT_TYPE );\n\n\t\tif( step.getAddressParamId() > 0 && step.getCommonContractAddressParamId() > 0 )\n\t\t{\n\t\t\ttry\n\t\t\t{\n\t\t\t\tParamValueDAO paramValueDAO = new ParamValueDAO( con );\n\t\t\t\tParameterAddressValue address = paramValueDAO.getParamAddress( processId, step.getAddressParamId(), 1 );\n\t\t\t\tif( address == null )\n\t\t\t\t{\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tCommonContractDAO commonContractDAO = new CommonContractDAO( con );\n\t\t\t\tCustomerDAO customerDAO = new CustomerDAO( con );\n\n\t\t\t\tString sql = \" SELECT cc.id AS contract_id FROM bgbilling_common_contract AS cc \" +\n\t\t\t\t\t\t\t \" INNER JOIN param_address AS pa ON cc.id=pa.id AND pa.param_id=?\" +\n\t\t\t\t\t\t\t \" WHERE pa.house_id=? AND pa.flat=? \";\n\n\t\t\t\tPreparedStatement ps = con.prepareStatement( sql );\n\t\t\t\tps.setInt( 1, step.getCommonContractAddressParamId() );\n\t\t\t\tps.setInt( 2, address.getHouseId() );\n\t\t\t\tps.setString( 3, address.getFlat() );\n\n\t\t\t\tResultSet rs = ps.executeQuery();\n\n\t\t\t\twhile( rs.next() )\n\t\t\t\t{\n\t\t\t\t\tint commonContractId = rs.getInt( \"contract_id\" );\n\t\t\t\t\tCommonContract contract = commonContractDAO.getContractById( commonContractId );\n\t\t\t\t\tcommonContractList.add( contract );\n\t\t\t\t\tcustomerMap.put( contract.getId(), customerDAO.getCustomerById( contract.getCustomerId() ) );\n\t\t\t\t}\n\n\t\t\t\tps.close();\n\t\t\t}\n\t\t\tcatch( SQLException e )\n\t\t\t{\n\t\t\t\tthrow new BGException( e );\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ShowCommonContractStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 43277, "method_name": "getProcessId", "class_name": "ShowCommonContractStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getProcessId()\n\t{\n\t\treturn processId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ShowCommonContractStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 43278, "method_name": "getCommonContractList", "class_name": "ShowCommonContractStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CommonContract>", "snippet": "\tpublic List<CommonContract> getCommonContractList()\n\t{\n\t\treturn commonContractList;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ShowCommonContractStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 43279, "method_name": "getCustomerMap", "class_name": "ShowCommonContractStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<Integer,Customer>", "snippet": "\tpublic Map<Integer, Customer> getCustomerMap()\n\t{\n\t\treturn customerMap;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ShowCommonContractStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 43280, "method_name": "getProcessCustomerLinkList", "class_name": "ShowCommonContractStepData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<CommonObjectLink>", "snippet": "\tpublic List<CommonObjectLink> getProcessCustomerLinkList()\n\t{\n\t\treturn processCustomerLinkList;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/model/process/wizard/ShowCommonContractStepData.java", "stars": "12", "class_props": {"extends": "StepData", "implements": null, "modifiers": ["public"]}}, {"id": 43281, "method_name": "type", "class_name": "FlushInterceptor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ElementMatcher<TypeDescription>", "snippet": "    public static ElementMatcher<? super TypeDescription> type()\n    {\n        return ElementMatchers.nameEndsWith(\"ColumnFamilyStore$Flush$1\").or(ElementMatchers.nameEndsWith(\"ColumnFamilyStore$Flush\"));\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/FlushInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 43282, "method_name": "transformer", "class_name": "FlushInterceptor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AgentBuilder", "snippet": "    public static AgentBuilder.Transformer transformer()\n    {\n        return new AgentBuilder.Transformer() {\n            @Override\n            public DynamicType.Builder<?> transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule)\n            {\n                return builder.method(ElementMatchers.named(\"flushMemtable\")).intercept(MethodDelegation.to(FlushInterceptor.class));\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/FlushInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 43283, "method_name": "intercept", "class_name": "FlushInterceptor", "params": ["Object", "Callable<Collection>"], "throws": ["Throwable"], "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object intercept(@AllArguments Object[] allArguments, @SuperCall Callable<Collection<SSTableReader>> zuper) throws Throwable\n    {\n        long start = System.currentTimeMillis();\n        Collection<SSTableReader> result = zuper.call();\n        if (allArguments.length > 0)\n        {\n            try\n            {\n                Memtable memtable = (Memtable) allArguments[0];\n                long duration = System.currentTimeMillis() - start;\n\n                client.get().report(new FlushInformation(memtable, result, duration, result.isEmpty()));\n            }\n            catch (Throwable t)\n            {\n                logger.info(\"Problem collecting flush information\", t);\n            }\n        }\n\n        return result;\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/FlushInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 43284, "method_name": "main", "class_name": "InstanceVariable", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t// it will not compile because we cannot use non static member(variables) inside static method\n\t\t//name = \"Smith\";\n\n\t\t// creating an object from InstanceVariable class to use it's instance variables\n\t\tInstanceVariable obj = new InstanceVariable();\n\t\tSystem.out.println(obj.name);\n\t\tSystem.out.println(obj.age);\n\t\tSystem.out.println(obj.city);\n\t\tSystem.out.println(obj.street);\n\n\t\tobj.name = \"Smith\";\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day4/InstanceVariable.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43285, "method_name": "doSomething", "class_name": "InstanceVariable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void doSomething(){\n\t\tname = \"Smith\";\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day4/InstanceVariable.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43286, "method_name": "onDraw", "class_name": "Practice16TextPathView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n\n        canvas.drawText(text, 50, 200, paint);\n\n        // \u4f7f\u7528 Paint.getTextPath() \u6765\u83b7\u53d6\u6587\u5b57\u7684 Path\n        paint.getTextPath(text, 0, text.length(), 50, 400, textPath);\n\n        canvas.drawPath(textPath, pathPaint);\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/view/lesson2/Practice16TextPathView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 43287, "method_name": "main", "class_name": "SumOfInteger", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint n = 100;\n\t\t// TODO: sum = 1 + 2 + ... + n\n\t\tint sum = 0;\n\t\tfor(int i = 0; i <= n ; i++) {\n\t\t\tsum += i;\n\t\t}\n\t\tSystem.out.println(sum);\n\t}", "url": "https://raw.githubusercontent.com/IzzyPrime/JavaWorkspace/master/JavaPractice/part1/src/com/basic/javapractice/SumOfInteger.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43288, "method_name": "getDuration", "class_name": "CacheWithDuration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getDuration() {\n        return duration;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/CacheWithDuration.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43289, "method_name": "setDuration", "class_name": "CacheWithDuration", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDuration(long duration) {\n        this.duration = duration;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/CacheWithDuration.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43290, "method_name": "getCache", "class_name": "CacheWithDuration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCache() {\n        return cache;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/CacheWithDuration.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43291, "method_name": "setCache", "class_name": "CacheWithDuration", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCache(String cache) {\n        this.cache = cache;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/CacheWithDuration.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43292, "method_name": "setUp", "class_name": "MyBatisTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create an SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/call_setters_on_nulls_again/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/call_setters_on_nulls_again/MyBatisTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43293, "method_name": "test", "class_name": "MyBatisTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void test() {\n    try (SqlSession session = sqlSessionFactory.openSession()) {\n      ParentBean parentBean = session.selectOne(\"test\");\n      Assertions.assertEquals(\"p1\", parentBean.getName());\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/call_setters_on_nulls_again/MyBatisTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43294, "method_name": "monodroidAddReference", "class_name": "DatePickerRenderer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/DatePickerRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43295, "method_name": "monodroidClearReferences", "class_name": "DatePickerRenderer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/DatePickerRenderer.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43296, "method_name": "rabbitConnectionFactory", "class_name": "RabbitConfiguration", "params": ["RabbitProperties", "String"], "throws": null, "modifiers": ["public"], "return_type": "ConnectionFactory", "snippet": "    public ConnectionFactory rabbitConnectionFactory(RabbitProperties rabbitProperties, @Value(\"${spring.application.name}", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43297, "method_name": "rabbitAdmin", "class_name": "RabbitConfiguration", "params": ["ConnectionFactory"], "throws": null, "modifiers": ["public"], "return_type": "RabbitAdmin", "snippet": "    public RabbitAdmin rabbitAdmin(ConnectionFactory connectionFactory) {\n        return new RabbitAdmin(connectionFactory);\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43298, "method_name": "createConsumeQueue", "class_name": "RabbitConfiguration", "params": ["RabbitAdmin", "RabbitConfigurationProperties"], "throws": null, "modifiers": ["public"], "return_type": "Queue", "snippet": "    public Queue createConsumeQueue(RabbitAdmin rabbitAdmin, RabbitConfigurationProperties properties) {\n        Queue consumeQueue = QueueBuilder.durable(properties.getEvent().getQueue()).build();\n        consumeQueue.setAdminsThatShouldDeclare(rabbitAdmin);\n        return consumeQueue;\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43299, "method_name": "createDelayedMessageQueue", "class_name": "RabbitConfiguration", "params": ["RabbitAdmin", "RabbitConfigurationProperties"], "throws": null, "modifiers": ["public"], "return_type": "Queue", "snippet": "    public Queue createDelayedMessageQueue(RabbitAdmin rabbitAdmin, RabbitConfigurationProperties properties) {\n        Queue delayedMessageQueue = QueueBuilder.durable(properties.getEvent().getDelayQueue())\n                .withArgument(\"x-dead-letter-exchange\", \"\")\n                .withArgument(\"x-dead-letter-routing-key\", properties.getEvent().getQueue())\n                .withArgument(\"x-queue-mode\", \"lazy\")\n                .build();\n        delayedMessageQueue.setAdminsThatShouldDeclare(rabbitAdmin);\n        return delayedMessageQueue;\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43300, "method_name": "createConsumeExchange", "class_name": "RabbitConfiguration", "params": ["RabbitAdmin", "RabbitConfigurationProperties"], "throws": null, "modifiers": ["public"], "return_type": "TopicExchange", "snippet": "    public TopicExchange createConsumeExchange(RabbitAdmin rabbitAdmin, RabbitConfigurationProperties properties) {\n        TopicExchange exchange = new TopicExchange(properties.getEvent().getExchange());\n        exchange.setAdminsThatShouldDeclare(rabbitAdmin);\n        return exchange;\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43301, "method_name": "createQueueExchangeBinding", "class_name": "RabbitConfiguration", "params": ["RabbitConfigurationProperties"], "throws": null, "modifiers": ["public"], "return_type": "Binding", "snippet": "    public Binding createQueueExchangeBinding(RabbitConfigurationProperties properties) {\n        return new Binding(properties.getEvent().getQueue(), Binding.DestinationType.QUEUE, properties.getEvent().getExchange(), \"#\", null);\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43302, "method_name": "mqRetryInterceptor", "class_name": "RabbitConfiguration", "params": ["MessageRecoverer", "RabbitConfigurationProperties"], "throws": null, "modifiers": ["public"], "return_type": "RetryOperationsInterceptor", "snippet": "    public RetryOperationsInterceptor mqRetryInterceptor(MessageRecoverer messageRecoverer, RabbitConfigurationProperties configurationProperties) {\n        return RetryInterceptorBuilder.stateless()\n                .maxAttempts(configurationProperties.getRetryPolicy().getMaxAttempt())\n                .backOffOptions(configurationProperties.getRetryPolicy().getInitialInterval(),\n                        configurationProperties.getRetryPolicy().getMultiplier(),\n                        configurationProperties.getRetryPolicy().getMaxInterval())\n                .recoverer(messageRecoverer)\n                .build();\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43303, "method_name": "jackson2JsonMessageConverter", "class_name": "RabbitConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Jackson2JsonMessageConverter", "snippet": "    public Jackson2JsonMessageConverter jackson2JsonMessageConverter() {\n        return new Jackson2JsonMessageConverter();\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43304, "method_name": "rabbitTemplate", "class_name": "RabbitConfiguration", "params": ["RabbitAdmin", "Jackson2JsonMessageConverter"], "throws": null, "modifiers": ["public"], "return_type": "RabbitTemplate", "snippet": "    public RabbitTemplate rabbitTemplate(RabbitAdmin rabbitAdmin, Jackson2JsonMessageConverter jackson2JsonMessageConverter) {\n        RabbitTemplate rabbitTemplate = rabbitAdmin.getRabbitTemplate();\n        rabbitTemplate.setMessageConverter(jackson2JsonMessageConverter);\n        rabbitTemplate.setChannelTransacted(true);\n        return rabbitTemplate;\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43305, "method_name": "rabbitListenerContainerFactory", "class_name": "RabbitConfiguration", "params": ["ConnectionFactory", "Jackson2JsonMessageConverter", "RetryOperationsInterceptor"], "throws": null, "modifiers": ["public"], "return_type": "RabbitListenerContainerFactory", "snippet": "    public RabbitListenerContainerFactory rabbitListenerContainerFactory(ConnectionFactory rabbitConnectionFactory,\n                                                                         Jackson2JsonMessageConverter jackson2JsonMessageConverter,\n                                                                         RetryOperationsInterceptor mqRetryInterceptor) {\n        SimpleRabbitListenerContainerFactory factory = new SimpleRabbitListenerContainerFactory();\n        factory.setConnectionFactory(rabbitConnectionFactory);\n        factory.setMessageConverter(jackson2JsonMessageConverter);\n        factory.setAdviceChain(mqRetryInterceptor);\n        return factory;\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/configuration/RabbitConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43306, "method_name": "onApplicationEvent", "class_name": "StartedAwareListener", "params": ["ApplicationStartedEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onApplicationEvent(ApplicationStartedEvent event) {\n        this.printStartInfo();\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/listener/StartedAwareListener.java", "stars": "1", "class_props": {"extends": null, "implements": ["ApplicationListener"], "modifiers": ["public"]}}, {"id": 43307, "method_name": "printStartInfo", "class_name": "StartedAwareListener", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void printStartInfo() {\n        String blogUrl = optionService.getBlogBaseUrl();\n\n        log.info(\"Beyond started at         {}\", blogUrl);\n        log.info(\"Beyond admin started at   {}/{}\", blogUrl, beyondProperties.getAdminPath());\n        log.info(\"Beyond has started successfully!\");\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/listener/StartedAwareListener.java", "stars": "1", "class_props": {"extends": null, "implements": ["ApplicationListener"], "modifiers": ["public"]}}, {"id": 43308, "method_name": "initThemes", "class_name": "StartedAwareListener", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initThemes() {\n        // Whether the blog has initialized\n\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/listener/StartedAwareListener.java", "stars": "1", "class_props": {"extends": null, "implements": ["ApplicationListener"], "modifiers": ["public"]}}, {"id": 43309, "method_name": "init", "class_name": "LogToFile", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void init(Context context) {\n        logPath = getFilePath(context) + \"/Logs\";//\u83b7\u5f97\u6587\u4ef6\u50a8\u5b58\u8def\u5f84,\u5728\u540e\u9762\u52a0\"/Logs\"\u5efa\u7acb\u5b50\u6587\u4ef6\u5939\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43310, "method_name": "getFilePath", "class_name": "LogToFile", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String getFilePath(Context context) {\n        if (Environment.MEDIA_MOUNTED.equals(Environment.getExternalStorageState()) || !Environment.isExternalStorageRemovable()) {\n            /**\n             * \u5982\u679c\u5916\u90e8\u50a8\u5b58\u53ef\u7528\n             *\n             * \u83b7\u5f97\u5916\u90e8\u5b58\u50a8\u8def\u5f84,\u9ed8\u8ba4\u8def\u5f84\u4e3a\n             * /storage/emulated/0/Android/data/com.waka.workspace.logtofile/files/Logs/log_2018-09-06_16-15-09.log\n             */\n            return context.getExternalFilesDir(null).getPath();\n        } else {\n            return context.getFilesDir().getPath();//\u76f4\u63a5\u5b58\u5728/data/data\u91cc\uff0c\u975eroot\u624b\u673a\u662f\u770b\u4e0d\u5230\u7684\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43311, "method_name": "v", "class_name": "LogToFile", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void v(String tag, String msg) {\n        if (DEBUG_FLAG) {\n            writeToFile(VERBOSE, tag, msg);\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43312, "method_name": "d", "class_name": "LogToFile", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void d(String tag, String msg) {\n        if (DEBUG_FLAG) {\n            writeToFile(DEBUG, tag, msg);\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43313, "method_name": "i", "class_name": "LogToFile", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void i(String tag, String msg) {\n        if (DEBUG_FLAG) {\n            writeToFile(INFO, tag, msg);\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43314, "method_name": "w", "class_name": "LogToFile", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void w(String tag, String msg) {\n        if (DEBUG_FLAG) {\n            writeToFile(WARN, tag, msg);\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43315, "method_name": "e", "class_name": "LogToFile", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void e(String tag, String msg) {\n        if (DEBUG_FLAG) {\n            writeToFile(ERROR, tag, msg);\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43316, "method_name": "writeToFile", "class_name": "LogToFile", "params": ["char", "String", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void writeToFile(char type, String tag, String msg) {\n        if (null == logPath) {\n            Log.e(TAG, \"logPath == null \uff0c\u672a\u521d\u59cb\u5316LogToFile\");\n            return;\n        }\n        //log\u65e5\u5fd7\u540d\uff0c\u4f7f\u7528\u65f6\u95f4\u547d\u540d\uff0c\u4fdd\u8bc1\u4e0d\u91cd\u590d\n        String fileName = logPath + \"/log_\" + dateFormat.format(new Date()) + \".log\";\n        //log\u65e5\u5fd7\u5185\u5bb9\uff0c\u53ef\u4ee5\u81ea\u884c\u5b9a\u5236\n        String log = dateFormat.format(date) + \" \" + type + \" \" + tag + \" \" + msg + \"\\n\";\n\n        //\u5982\u679c\u7236\u8def\u5f84\u4e0d\u5b58\u5728\n        File file = new File(logPath);\n        if (!file.exists()) {\n            file.mkdirs();//\u521b\u5efa\u7236\u8def\u5f84\n        }\n\n        FileOutputStream fos = null;\n        BufferedWriter bw = null;\n        try {\n            //\u8fd9\u91cc\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4ee3\u8868\u8ffd\u52a0\u8fd8\u662f\u8986\u76d6\uff0ctrue\u4e3a\u8ffd\u52a0\uff0cflase\u4e3a\u8986\u76d6\n            fos = new FileOutputStream(fileName, true);\n            bw = new BufferedWriter(new OutputStreamWriter(fos));\n            bw.write(log);\n        } catch (FileNotFoundException e) {\n            e.printStackTrace();\n        } catch (IOException e) {\n            e.printStackTrace();\n        } finally {\n            try {\n                if (bw != null) {\n                    bw.close();\n                }\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Aivacom/JLYLiveChat-android/master/app/src/main/java/com/mediaroom/utils/LogToFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43317, "method_name": "main", "class_name": "InputStreamTest", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        try(final BufferedReader reader = new BufferedReader(\n                new FileReader(new File(\"file.txt\")))) {\n            String s;\n            while ((s = reader.readLine()) != null)\n                System.out.println(s);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/pi-181/oop-labs/master/Lab6/src/test/java/InputStreamTest.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43318, "method_name": "interpreter", "class_name": "VarExpression", "params": ["HashMap<String,Integer>"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int interpreter(HashMap<String, Integer> var) {\n\t\treturn var.get(this.key);\n\t}", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/interpreter/VarExpression.java", "stars": "2", "class_props": {"extends": null, "implements": ["Expression"], "modifiers": ["public"]}}, {"id": 43319, "method_name": "shouldTestCacheKeysEqual", "class_name": "CacheKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldTestCacheKeysEqual() {\n    Date date = new Date();\n    CacheKey key1 = new CacheKey(new Object[] { 1, \"hello\", null, new Date(date.getTime()) });\n    CacheKey key2 = new CacheKey(new Object[] { 1, \"hello\", null, new Date(date.getTime()) });\n    assertEquals(key1, key2);\n    assertEquals(key2, key1);\n    assertEquals(key1.hashCode(), key2.hashCode());\n    assertEquals(key1.toString(), key2.toString());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43320, "method_name": "shouldTestCacheKeysNotEqualDueToDateDifference", "class_name": "CacheKeyTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldTestCacheKeysNotEqualDueToDateDifference() throws Exception {\n    CacheKey key1 = new CacheKey(new Object[] { 1, \"hello\", null, new Date() });\n    Thread.sleep(1000);\n    CacheKey key2 = new CacheKey(new Object[] { 1, \"hello\", null, new Date() });\n    assertNotEquals(key1, key2);\n    assertNotEquals(key2, key1);\n    assertNotEquals(key1.hashCode(), key2.hashCode());\n    assertNotEquals(key1.toString(), key2.toString());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43321, "method_name": "shouldTestCacheKeysNotEqualDueToOrder", "class_name": "CacheKeyTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldTestCacheKeysNotEqualDueToOrder() throws Exception {\n    CacheKey key1 = new CacheKey(new Object[] { 1, \"hello\", null });\n    Thread.sleep(1000);\n    CacheKey key2 = new CacheKey(new Object[] { 1, null, \"hello\" });\n    assertNotEquals(key1, key2);\n    assertNotEquals(key2, key1);\n    assertNotEquals(key1.hashCode(), key2.hashCode());\n    assertNotEquals(key1.toString(), key2.toString());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43322, "method_name": "shouldDemonstrateEmptyAndNullKeysAreEqual", "class_name": "CacheKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateEmptyAndNullKeysAreEqual() {\n    CacheKey key1 = new CacheKey();\n    CacheKey key2 = new CacheKey();\n    assertEquals(key1, key2);\n    assertEquals(key2, key1);\n    key1.update(null);\n    key2.update(null);\n    assertEquals(key1, key2);\n    assertEquals(key2, key1);\n    key1.update(null);\n    key2.update(null);\n    assertEquals(key1, key2);\n    assertEquals(key2, key1);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43323, "method_name": "shouldTestCacheKeysWithBinaryArrays", "class_name": "CacheKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldTestCacheKeysWithBinaryArrays() {\n    byte[] array1 = new byte[] { 1 };\n    byte[] array2 = new byte[] { 1 };\n    CacheKey key1 = new CacheKey(new Object[] { array1 });\n    CacheKey key2 = new CacheKey(new Object[] { array2 });\n    assertEquals(key1, key2);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43324, "method_name": "serializationExceptionTest", "class_name": "CacheKeyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void serializationExceptionTest() {\n    CacheKey cacheKey = new CacheKey();\n    cacheKey.update(new Object());\n    Assertions.assertThrows(NotSerializableException.class, () -> {\n      serialize(cacheKey);\n    });\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43325, "method_name": "serializationTest", "class_name": "CacheKeyTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void serializationTest() throws Exception {\n    CacheKey cacheKey = new CacheKey();\n    cacheKey.update(\"serializable\");\n    Assertions.assertEquals(cacheKey, serialize(cacheKey));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43326, "method_name": "serialize", "class_name": "CacheKeyTest", "params": ["T"], "throws": ["Exception"], "modifiers": ["static", "private"], "return_type": "T", "snippet": "  private static <T> T serialize(T object) throws Exception {\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      new ObjectOutputStream(baos).writeObject(object);\n\n      ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray());\n      return (T) new ObjectInputStream(bais).readObject();\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/CacheKeyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43327, "method_name": "setValue", "class_name": "StringTag", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(String s) {\n        this.value = s;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/StringTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 43328, "method_name": "getValue", "class_name": "StringTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/StringTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 43329, "method_name": "setName", "class_name": "StringTag", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/StringTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 43330, "method_name": "getName", "class_name": "StringTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/StringTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 43331, "method_name": "writeData", "class_name": "StringTag", "params": ["DataOutputStream"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeData(DataOutputStream dos) throws IOException {\n        // Indicates the string\n        dos.write(1);\n        //Create a new DataOutputStream\n        ByteArrayOutputStream os = new ByteArrayOutputStream();\n        CountingOutputStream cos = new CountingOutputStream(os);\n        DataOutputStream tempDos = new DataOutputStream(cos);\n\n        tempDos.writeShort(name.getBytes(StandardCharsets.UTF_8).length);\n        tempDos.write(name.getBytes(StandardCharsets.UTF_8));\n        tempDos.write(value.getBytes(StandardCharsets.UTF_8));\n\n        dos.writeInt(cos.getCount());\n        dos.write(os.toByteArray());\n        cos.close();\n        os.close();\n        tempDos.close();\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/StringTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 43332, "method_name": "createFromData", "class_name": "StringTag", "params": ["byte"], "throws": null, "modifiers": ["public"], "return_type": "Tag<String>", "snippet": "    public Tag<String> createFromData(byte[] value) {\n        this.value = new String(value, StandardCharsets.UTF_8);\n        return this;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/StringTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 43333, "method_name": "getID", "class_name": "StringTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte getID() {\n        return 1;\n    }", "url": "https://raw.githubusercontent.com/ryandw11/ODS/master/src/main/java/me/ryandw11/ods/tags/StringTag.java", "stars": "2", "class_props": {"extends": null, "implements": ["Tag"], "modifiers": ["public"]}}, {"id": 43334, "method_name": "simpleProperty", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void simpleProperty() {\n    Map<String, String> result = new ParameterExpression(\"id\");\n    Assertions.assertEquals(1, result.size());\n    Assertions.assertEquals(\"id\", result.get(\"property\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43335, "method_name": "propertyWithSpacesInside", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void propertyWithSpacesInside() {\n    Map<String, String> result = new ParameterExpression(\" with spaces \");\n    Assertions.assertEquals(1, result.size());\n    Assertions.assertEquals(\"with spaces\", result.get(\"property\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43336, "method_name": "simplePropertyWithOldStyleJdbcType", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void simplePropertyWithOldStyleJdbcType() {\n    Map<String, String> result = new ParameterExpression(\"id:VARCHAR\");\n    Assertions.assertEquals(2, result.size());\n    Assertions.assertEquals(\"id\", result.get(\"property\"));\n    Assertions.assertEquals(\"VARCHAR\", result.get(\"jdbcType\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43337, "method_name": "oldStyleJdbcTypeWithExtraWhitespaces", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void oldStyleJdbcTypeWithExtraWhitespaces() {\n    Map<String, String> result = new ParameterExpression(\" id :  VARCHAR \");\n    Assertions.assertEquals(2, result.size());\n    Assertions.assertEquals(\"id\", result.get(\"property\"));\n    Assertions.assertEquals(\"VARCHAR\", result.get(\"jdbcType\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43338, "method_name": "expressionWithOldStyleJdbcType", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void expressionWithOldStyleJdbcType() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()):VARCHAR\");\n    Assertions.assertEquals(2, result.size());\n    Assertions.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assertions.assertEquals(\"VARCHAR\", result.get(\"jdbcType\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43339, "method_name": "simplePropertyWithOneAttribute", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void simplePropertyWithOneAttribute() {\n    Map<String, String> result = new ParameterExpression(\"id,name=value\");\n    Assertions.assertEquals(2, result.size());\n    Assertions.assertEquals(\"id\", result.get(\"property\"));\n    Assertions.assertEquals(\"value\", result.get(\"name\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43340, "method_name": "expressionWithOneAttribute", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void expressionWithOneAttribute() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()),name=value\");\n    Assertions.assertEquals(2, result.size());\n    Assertions.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assertions.assertEquals(\"value\", result.get(\"name\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43341, "method_name": "simplePropertyWithManyAttributes", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void simplePropertyWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"id, attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"id\", result.get(\"property\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43342, "method_name": "expressionWithManyAttributes", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void expressionWithManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"(id.toString()), attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"id.toString()\", result.get(\"expression\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43343, "method_name": "simplePropertyWithOldStyleJdbcTypeAndAttributes", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void simplePropertyWithOldStyleJdbcTypeAndAttributes() {\n    Map<String, String> result = new ParameterExpression(\"id:VARCHAR, attr1=val1, attr2=val2\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"id\", result.get(\"property\"));\n    Assertions.assertEquals(\"VARCHAR\", result.get(\"jdbcType\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43344, "method_name": "simplePropertyWithSpaceAndManyAttributes", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void simplePropertyWithSpaceAndManyAttributes() {\n    Map<String, String> result = new ParameterExpression(\"user name, attr1=val1, attr2=val2, attr3=val3\");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"user name\", result.get(\"property\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n    Assertions.assertEquals(\"val3\", result.get(\"attr3\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43345, "method_name": "shouldIgnoreLeadingAndTrailingSpaces", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldIgnoreLeadingAndTrailingSpaces() {\n    Map<String, String> result = new ParameterExpression(\" id , jdbcType =  VARCHAR,  attr1 = val1 ,  attr2 = val2 \");\n    Assertions.assertEquals(4, result.size());\n    Assertions.assertEquals(\"id\", result.get(\"property\"));\n    Assertions.assertEquals(\"VARCHAR\", result.get(\"jdbcType\"));\n    Assertions.assertEquals(\"val1\", result.get(\"attr1\"));\n    Assertions.assertEquals(\"val2\", result.get(\"attr2\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43346, "method_name": "invalidOldJdbcTypeFormat", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void invalidOldJdbcTypeFormat() {\n    try {\n      new ParameterExpression(\"id:\");\n      Assertions.fail();\n    } catch (BuilderException e) {\n      Assertions.assertTrue(e.getMessage().contains(\"Parsing error in {id:} in position 3\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43347, "method_name": "invalidJdbcTypeOptUsingExpression", "class_name": "ParameterExpressionTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void invalidJdbcTypeOptUsingExpression() {\n    try {\n      new ParameterExpression(\"(expression)+\");\n      Assertions.fail();\n    } catch (BuilderException e) {\n      Assertions.assertTrue(e.getMessage().contains(\"Parsing error in {(expression)+} in position 12\"));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/builder/ParameterExpressionTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43348, "method_name": "getPlayManager", "class_name": "CustomManager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "IPlayerManager", "snippet": "    protected IPlayerManager getPlayManager() {\n        return new IjkPlayerManager();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43349, "method_name": "backFromWindowFull", "class_name": "CustomManager", "params": ["Context", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean backFromWindowFull(Context context, String key) {\n        boolean backFrom = false;\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(context)).findViewById(Window.ID_ANDROID_CONTENT);\n        View oldF = vp.findViewById(FULLSCREEN_ID);\n        if (oldF != null) {\n            backFrom = true;\n            hideNavKey(context);\n            if (getCustomManager(key).lastListener() != null) {\n                getCustomManager(key).lastListener().onBackFullscreen();\n            }\n        }\n        return backFrom;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43350, "method_name": "releaseAllVideos", "class_name": "CustomManager", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void releaseAllVideos(String key) {\n        if (getCustomManager(key).listener() != null) {\n            getCustomManager(key).listener().onCompletion();\n        }\n        getCustomManager(key).releaseMediaPlayer();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43351, "method_name": "onPause", "class_name": "CustomManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause(String key) {\n        if (getCustomManager(key).listener() != null) {\n            getCustomManager(key).listener().onVideoPause();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43352, "method_name": "onResume", "class_name": "CustomManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume(String key) {\n        if (getCustomManager(key).listener() != null) {\n            getCustomManager(key).listener().onVideoResume();\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43353, "method_name": "onResume", "class_name": "CustomManager", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume(String key, boolean seek) {\n        if (getCustomManager(key).listener() != null) {\n            getCustomManager(key).listener().onVideoResume(seek);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43354, "method_name": "instance", "class_name": "CustomManager", "params": [], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "Map<String,CustomManager>", "snippet": "    public static synchronized Map<String, CustomManager> instance() {\n        return sMap;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43355, "method_name": "getCustomManager", "class_name": "CustomManager", "params": ["String"], "throws": null, "modifiers": ["synchronized", "public", "static"], "return_type": "CustomManager", "snippet": "    public static synchronized CustomManager getCustomManager(String key) {\n        if (TextUtils.isEmpty(key)) {\n            throw new IllegalStateException(\"key not be empty\");\n        }\n        CustomManager customManager = sMap.get(key);\n        if (customManager == null) {\n            customManager = new CustomManager();\n            sMap.put(key, customManager);\n        }\n        return customManager;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43356, "method_name": "onPauseAll", "class_name": "CustomManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onPauseAll() {\n        if (sMap.size() > 0) {\n            for (Map.Entry<String, CustomManager> header : sMap.entrySet()) {\n                header.getValue().onPause(header.getKey());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43357, "method_name": "onResumeAll", "class_name": "CustomManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResumeAll() {\n        if (sMap.size() > 0) {\n            for (Map.Entry<String, CustomManager> header : sMap.entrySet()) {\n                header.getValue().onResume(header.getKey());\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43358, "method_name": "onResumeAll", "class_name": "CustomManager", "params": ["boolean"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void onResumeAll(boolean seek) {\n        if (sMap.size() > 0) {\n            for (Map.Entry<String, CustomManager> header : sMap.entrySet()) {\n                header.getValue().onResume(header.getKey(), seek);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43359, "method_name": "clearAllVideo", "class_name": "CustomManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void clearAllVideo() {\n        if (sMap.size() > 0) {\n            for (Map.Entry<String, CustomManager> header : sMap.entrySet()) {\n                CustomManager.releaseAllVideos(header.getKey());\n            }\n        }\n        sMap.clear();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43360, "method_name": "removeManager", "class_name": "CustomManager", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removeManager(String key) {\n        sMap.remove(key);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43361, "method_name": "isFullState", "class_name": "CustomManager", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isFullState(Activity activity) {\n        ViewGroup vp = (ViewGroup) (CommonUtil.scanForActivity(activity)).findViewById(Window.ID_ANDROID_CONTENT);\n        final View full = vp.findViewById(FULLSCREEN_ID);\n        GSYVideoPlayer gsyVideoPlayer = null;\n        if (full != null) {\n            gsyVideoPlayer = (GSYVideoPlayer) full;\n        }\n        return gsyVideoPlayer != null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/video/manager/CustomManager.java", "stars": "2", "class_props": {"extends": "GSYVideoBaseManager", "implements": null, "modifiers": ["public"]}}, {"id": 43362, "method_name": "onDismiss", "class_name": "PopupMenu_OnDismissListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onDismiss (android.support.v7.widget.PopupMenu p0)\n\t{\n\t\tn_onDismiss (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnDismissListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43363, "method_name": "n_onDismiss", "class_name": "PopupMenu_OnDismissListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onDismiss (android.support.v7.widget.PopupMenu p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnDismissListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43364, "method_name": "monodroidAddReference", "class_name": "PopupMenu_OnDismissListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnDismissListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43365, "method_name": "monodroidClearReferences", "class_name": "PopupMenu_OnDismissListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v7/widget/PopupMenu_OnDismissListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43366, "method_name": "onCreateView", "class_name": "ShowTimerFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container,\n                             Bundle savedInstanceState) {\n        // Inflate the layout for this fragment\n        View view = inflater.inflate(R.layout.fragment_show_timer, container, false);\n\n        croreDigit = view.findViewById(R.id.crore_digit);\n        tenLakhDigit = view.findViewById(R.id.ten_lakh_digit);\n        lakhDigit = view.findViewById(R.id.lakh_digit);\n        tenThousandDigit = view.findViewById(R.id.ten_thousand_digit);\n        thousandDigit = view.findViewById(R.id.thousand_digit);\n        hundredDigit = view.findViewById(R.id.hundred_digit);\n        tensDigit = view.findViewById(R.id.tens_digit);\n        onesDigit = view.findViewById(R.id.ones_digit);\n        minRemainingTextView = view.findViewById(R.id.min_remaining_text_view);\n        secRemainingTextView = view.findViewById(R.id.sec_remaining_text_view);\n\n        try {\n            pref = getActivity().getSharedPreferences(SHARED_PREFERENCE_NAME, 0);\n        } catch(Exception e){\n            Toast.makeText(getActivity(), \"Oops! Please restart the app\", Toast.LENGTH_SHORT).show();\n        }\n\n        Long destinationTime = pref.getLong(DESTINATION_TIME_KEY, 0);\n        startMinsSecTimer(destinationTime);\n        startHrsTimer(destinationTime);\n        return view;\n    }", "url": "https://raw.githubusercontent.com/LakshyaKhatri/Lifetime/master/app/src/main/java/com/compiletales/lifetime/ShowTimerFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43367, "method_name": "startHrsTimer", "class_name": "ShowTimerFragment", "params": ["Long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startHrsTimer(final Long destinationTime){\n\n        final Handler handler = new Handler();\n        Runnable runnable = new Runnable() {\n            @Override\n            public void run() {\n                handler.postDelayed(this, 1000);\n                try{\n                    Long currentTime = new Date().getTime();\n                    Long remainingTime = destinationTime - currentTime;\n                    if(remainingTime > 0){\n                        Long forCalculatingTime = remainingTime;\n\n                        Long days = forCalculatingTime / (24 * 60 * 60 * 1000);\n                        forCalculatingTime -= days * (24 * 60 * 60 * 1000);\n\n                        Long hrs = forCalculatingTime / (60 * 60 * 1000);\n                        forCalculatingTime -= hrs * (60 * 60 * 1000);\n                        //we don't have to display days.\n                        //hence converting days to hrs/\n                        hrs = hrs + days * 24;\n\n                        String hrsString = hrs + \"\";\n                        int hrsStringLength = hrsString.length();\n\n                        switch(hrsStringLength){\n                            case 1:\n                                tensDigit.smoothScrollToPosition(0);\n                            case 2:\n                                hundredDigit.smoothScrollToPosition(0);\n                            case 3:\n                                thousandDigit.smoothScrollToPosition(0);\n                            case 4:\n                                tenThousandDigit.smoothScrollToPosition(0);\n                            case 5:\n                                lakhDigit.smoothScrollToPosition(0);\n                            case 6:\n                                tenLakhDigit.smoothScrollToPosition(0);\n                            case 7:\n                                croreDigit.smoothScrollToPosition(0);\n                        }\n\n                        switch(hrsStringLength) {\n                            case 8:\n                                croreDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 8)));\n                            case 7:\n                                tenLakhDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 7)));\n                            case 6:\n                                lakhDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 6)));\n                            case 5:\n                                tenThousandDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 5)));\n                            case 4:\n                                thousandDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 4)));\n                            case 3:\n                                hundredDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 3)));\n                            case 2:\n                                tensDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 2)));\n                            case 1:\n                                onesDigit.smoothScrollToPosition(Character.getNumericValue(hrsString.charAt(hrsStringLength - 1)));\n                        }\n                    }\n                } catch (Exception e){\n                    e.printStackTrace();\n                }\n            }\n        };\n\n        handler.postDelayed(runnable, 1 * 1000);\n\n    }", "url": "https://raw.githubusercontent.com/LakshyaKhatri/Lifetime/master/app/src/main/java/com/compiletales/lifetime/ShowTimerFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43368, "method_name": "startMinsSecTimer", "class_name": "ShowTimerFragment", "params": ["Long"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startMinsSecTimer(final Long destinationTime){\n        final Handler handler = new Handler();\n        Runnable runnable = new Runnable() {\n            @Override\n            public void run() {\n                handler.postDelayed(this, 1000);\n                try{\n                    Long currentTime = new Date().getTime();\n                    Long remainingTime = destinationTime - currentTime;\n                    if(remainingTime > 0){\n                        Long forCalculatingTime = remainingTime;\n\n                        Long days = forCalculatingTime / (24 * 60 * 60 * 1000);\n                        forCalculatingTime -= days * (24 * 60 * 60 * 1000);\n\n                        Long hrs = forCalculatingTime / (60 * 60 * 1000);\n                        forCalculatingTime -= hrs * (60 * 60 * 1000);\n\n                        Long min = forCalculatingTime / (60 * 1000);\n                        forCalculatingTime -= min * (60 * 1000);\n\n                        Long sec = forCalculatingTime / 1000;\n\n                        if (sec < 10){\n                            secRemainingTextView.setText(String.format(\"0%s\", sec));\n                        } else {\n                            secRemainingTextView.setText(String.format(\"%s\", sec));\n                        }\n                        if (min < 10) {\n                            minRemainingTextView.setText(String.format(\"0%s\", min));\n                        } else {\n                            minRemainingTextView.setText(String.format(\"%s\", min));\n                        }\n\n                    } else {\n                        Toast.makeText(getActivity(), \"Timer ended\", Toast.LENGTH_LONG).show();\n                        getActivity().getSupportFragmentManager().beginTransaction()\n                                .replace(R.id.fragment_container_frame_layout, new SetTimerFragment()).commit();\n                        pref.edit().putLong(DESTINATION_TIME_KEY, Long.parseLong(\"-1\")).apply();\n                        startActivity(new Intent(getActivity(), TimerEndActivity.class));\n                    }\n                } catch (Exception e){\n                    e.printStackTrace();\n                }\n            }\n        };\n\n        handler.postDelayed(runnable, 1 * 1000);\n    }", "url": "https://raw.githubusercontent.com/LakshyaKhatri/Lifetime/master/app/src/main/java/com/compiletales/lifetime/ShowTimerFragment.java", "stars": "2", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43369, "method_name": "getSpriteForSide", "class_name": "HorizontalVerticalCTMSpriteProvider", "params": ["Direction", "BlockRenderView", "BlockState", "BlockPos", "Random"], "throws": null, "modifiers": ["public"], "return_type": "Sprite", "snippet": "\tpublic Sprite getSpriteForSide(Direction side, BlockRenderView view, BlockState state, BlockPos pos, Random random) {\n\t\tboolean left = testLeft(view, side, pos, state);\n\t\tboolean right = testRight(view, side, pos, state);\n\t\tboolean down = testDown(view, side, pos, state);\n\t\tboolean up = testUp(view, side, pos, state);\n\t\tif(left && right) {\n\t\t\treturn connects[1];\n\t\t} else if(left && !right) {\n\t\t\treturn connects[2];\n\t\t} else if(!left && right) {\n\t\t\treturn connects[0];\n\t\t} else if(down && up) {\n\t\t\treturn connects[5];\n\t\t} else if(down && !up) {\n\t\t\treturn connects[6];\n\t\t} else if(!down && up) {\n\t\t\treturn connects[4];\n\t\t} else {\n\t\t\treturn connects[3];\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/sprite/HorizontalVerticalCTMSpriteProvider.java", "stars": "3", "class_props": {"extends": "ConnectingSpriteProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43370, "method_name": "offer", "class_name": "JobSchedulerImplTest", "params": [], "throws": ["IOException", "InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void offer() throws IOException, InterruptedException {\n        when(mManager.getSerialPorts()).thenReturn(new String[]{\"1100\"});\n        when(mManager.openSerialPort(anyString())).thenReturn(mPort);\n\n        final byte[] inputBytes = new byte[]{\n                0x02, 0x00, 0x00, 0x11, 0x00, 0x01, 0x00, 0x02, 0x01, 0x03,\n                0x01, 0x02, 0x00, 0x01, (byte) 0xcb, 0x00, 0x02, 0x00, 0x02,\n                0x00, 0x00, 0x03, (byte) 0xd8\n        };\n\n        when(mPort.read(any(ByteBuffer.class), anyInt())).thenAnswer((Answer<Integer>) invocation -> {\n            final ByteBuffer buffer = invocation.getArgumentAt(0, ByteBuffer.class);\n            buffer.put(inputBytes);\n\n            return inputBytes.length;\n        });\n\n        final Packet packet1 = new Packet.Builder(0x0103).build();\n        final Callback callback1 = mock(Callback.class);\n\n        final Packet packet2 = new Packet.Builder(0x0103).build();\n        final Callback callback2 = mock(Callback.class);\n\n        final Packet packet3 = new Packet.Builder(0x0103).build();\n        final Callback callback3 = mock(Callback.class);\n\n        final Packet packet4 = new Packet.Builder(0x0103).build();\n        final Callback callback4 = mock(Callback.class);\n\n        final Packet packet5 = new Packet.Builder(0x0103).build();\n        final Callback callback5 = mock(Callback.class);\n\n        final CountDownLatch latch = new CountDownLatch(1);\n\n        doAnswer(invocation -> {\n            latch.countDown();\n            return null;\n        }).when(callback5).onSuccess(any(Packet.class));\n\n        final JobScheduler jobScheduler = new JobSchedulerImpl(mManager, null);\n\n        jobScheduler.offer(packet1, callback1);\n        jobScheduler.offer(packet2, callback2);\n        jobScheduler.offer(packet3, callback3);\n        jobScheduler.offer(packet4, callback4);\n        jobScheduler.offer(packet5, callback5);\n\n        latch.await(10, TimeUnit.SECONDS);\n\n        final InOrder inOrder = Mockito.inOrder(callback1, callback2, callback3, callback4, callback5);\n\n        inOrder.verify(callback1).onSuccess(any(Packet.class));\n        inOrder.verify(callback2).onSuccess(any(Packet.class));\n        inOrder.verify(callback3).onSuccess(any(Packet.class));\n        inOrder.verify(callback4).onSuccess(any(Packet.class));\n        inOrder.verify(callback5).onSuccess(any(Packet.class));\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/test/java/com/cobo/cold/encryptioncore/job/JobSchedulerImplTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43371, "method_name": "getDatabase", "class_name": "VManagerConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getDatabase() {\n\t\treturn database;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/VManagerConfig.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43372, "method_name": "setDatabase", "class_name": "VManagerConfig", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDatabase(String database) {\n\t\tthis.database = database;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/conf/VManagerConfig.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43373, "method_name": "main", "class_name": "TC8_Pepperfry", "params": ["String"], "throws": ["InterruptedException", "IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException, IOException {\n\t\t\n\t\tSystem.setProperty(\"webdriver.chrome.driver\", \"./drivers/chromedriver.exe\");\n\n\t\tChromeOptions options = new ChromeOptions();\n\t\toptions.addArguments(\"--disable-notifications\");\n\t\tChromeDriver driver = new ChromeDriver(options);\n\t\tWebDriverWait wait = new WebDriverWait(driver, 30);\n\t\t\n\t\t//1) Go to https://www.pepperfry.com/\n\t\tdriver.get(\"https://www.pepperfry.com/\");\n\t\tdriver.manage().window().maximize();\n\t\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\n\t\t wait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"(//div[@class='reg-modal-right-frm-wrap'])[1]\")));\n\t\t driver.findElementByXPath(\"(//a[@class='popup-close'])[5]\").click();\n\t\t\n\t\t//2) Mouse hover on Furniture and click Office Chairs under Chairs\n\t\tWebElement eleFurniture = driver.findElementByLinkText(\"Furniture\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleFurniture));\n\t\tActions builder = new Actions(driver);\n\t\tbuilder.moveToElement(eleFurniture).build().perform();;\n\t\t\n\t\tWebElement eleOfficeChairs = driver.findElementByLinkText(\"Office Chairs\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleOfficeChairs));\n\t\teleOfficeChairs.click();\n\t\t\n\t\t//3) click Executive Chairs\n\t\tWebElement eleExecutive = driver.findElementByXPath(\"(//div[@class='cat-wrap-img'])[2]\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleExecutive));\n\t\teleExecutive.click();\n\t\t\n\t\t//4) Change the minimum Height as 50 in under Dimensions\n\t\tWebElement eleHeight = driver.findElementByClassName(\"clipFilterDimensionHeightValue\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(eleHeight));\n\t\teleHeight.clear();\n\t\teleHeight.sendKeys(\"50\", Keys.ENTER);\n\t\t\n\t\t//5) Add \"Poise Executive Chair in Black Colour\" chair to Wishlist\n\t\tThread.sleep(2000);\n\t\tWebElement eleWish1 = driver.findElementByXPath(\"//a[@data-productname='Poise Executive Chair in Black Colour']\");\n\t\twait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[@data-productname='Poise Executive Chair in Black Colour']\")));\n\t\teleWish1.click();\n\t\t\n\t\t//6) Mouse hover on Homeware and Click Pressure Cookers under Cookware\n\t\tWebElement eleHomeware = driver.findElementByLinkText(\"Homeware\");\n\t\tbuilder.moveToElement(eleHomeware).build().perform();\n\t\t\n\t\tWebElement elePressureCooker = driver.findElementByLinkText(\"Pressure Cookers\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(elePressureCooker));\n\t\telePressureCooker.click();\n\t\t\n\t\t//7) Select Prestige as Brand\n\t\tWebElement elePrestige = driver.findElementByXPath(\"//label[@for='brandsnamePrestige']\");\n\t\twait.until(ExpectedConditions.elementToBeClickable(elePrestige));\n\t\telePrestige.click();\n\t\t\n\t\t//8) Select Capacity as 1-3 Ltr\n\t\tThread.sleep(2000);\n\t\tWebElement eleLtr = driver.findElementByXPath(\"//label[@for='capacity_db1_Ltr_-_3_Ltr']\");\n\t\twait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//label[@for='capacity_db1_Ltr_-_3_Ltr']\")));\n\t\teleLtr.click();\n\t\t\n\t\t//9) Add \"Nakshatra Cute Metallic Red Aluminium Cooker 2 Ltr\" to Wishlist\n\t\tThread.sleep(3000);\n\t\tWebElement eleWish2 = driver.findElementByXPath(\"//a[@data-productname='Nakshatra Cute Metallic Red Aluminium Cooker 2 Ltr']\");\n\t\twait.until(ExpectedConditions.presenceOfElementLocated(By.xpath(\"//a[@data-productname='Nakshatra Cute Metallic Red Aluminium Cooker 2 Ltr']\")));\n\t\teleWish2.click();\n\t\t\t\t\n\t\t//10) Verify the number of items in Wishlist\n\t\tThread.sleep(2000);\n\t\tWebElement WishCount = driver.findElementByXPath(\"(//span[@class='count_alert'])[2]\");\n\t\twait.until(ExpectedConditions.visibilityOf(WishCount));\n\t\tString count = WishCount.getText();\n\t\tSystem.out.println(\"Number of items in the Wishlist: \"+count);\n\t\t\n\t\t//11) Navigate to Wishlist\n\t\tdriver.findElementByXPath(\"//a[contains(@class,'pf-icon pf-icon-heart')]\").click();\n\t\tThread.sleep(2000);\n\t\t\n\t\t//12) Move Pressure Cooker only to Cart from Wishlist\n\t\tJavascriptExecutor executor = (JavascriptExecutor)driver;\n\t\texecutor.executeScript(\"arguments[0].scrollIntoView();\",driver.findElementByXPath(\"//div[@id='cart_item_holder']//a[contains(text(),'Cooker')]/following::div[1]//a[contains(text(),'Add to Cart')]\"));\n\t\tWebElement eleCooker = driver.findElementByXPath(\"//div[@id='cart_item_holder']//a[contains(text(),'Cooker')]/following::div[1]//a[contains(text(),'Add to Cart')]\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleCooker));\n\t\teleCooker.click();\n\t\tThread.sleep(3000);\n\t\t\n\t\t//13) Check for the availability for Pincode 600128\n\t\tdriver.findElementByClassName(\"srvc_pin_text\").sendKeys(\"600117\");\n\t\tThread.sleep(2000);\n\t\tdriver.findElementByClassName(\"check_available\").click();\n\t\t\n\t\t//14) Click Proceed to Pay Securely\n\t\tdriver.findElementByClassName(\"proceed_cta\").click();\n\t\t\n\t\t//15 Click Place Order\n\t\tWebElement eleOrder = driver.findElementByLinkText(\"PLACE ORDER\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleOrder));\n\t\teleOrder.click();\n\t\t\n\t\t//16) Capture the screenshot of the item under Order Item\n\t\tWebElement eleExpand = driver.findElementByXPath(\"(//div[@class='nCheckout__accrodian-header-right']//span)[1]\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleExpand));\n\t\teleExpand.click();\n\t\t\n\t\tFile screenShot = driver.findElementByXPath(\"//li[@data-slick-index='0']\").getScreenshotAs(OutputType.FILE);\n\t\tFileUtils.copyFile(screenShot, new File(\"./snaps/image.png\"));\n\t\t\n\t\t//17) Close the browser\n\t\tdriver.close();\n\n\t}", "url": "https://raw.githubusercontent.com/Nivashini-J/SeleniumBeginner/master/TC8_Pepperfry.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43374, "method_name": "onCreate", "class_name": "RecommendationContentProvider", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCreate() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43375, "method_name": "openFile", "class_name": "RecommendationContentProvider", "params": ["Uri", "String"], "throws": ["FileNotFoundException"], "modifiers": ["public"], "return_type": "ParcelFileDescriptor", "snippet": "    public ParcelFileDescriptor openFile(Uri uri, String mode)\n            throws FileNotFoundException {\n        ParcelFileDescriptor[] pipe = null;\n\n        String url = uri.getPath();\n\n        try {\n            String decodedUrl = URLDecoder.decode(url.replaceFirst(\"/\", \"\"),\n                    \"UTF-8\");\n            pipe = ParcelFileDescriptor.createPipe();\n            Request request = new Builder()\n                    .url(new URL(decodedUrl))\n                    .build();\n\n            Response response = getOkHttpClient().newCall(request)\n                    .execute();\n\n            new TransferThread(response.body().byteStream(),\n                    new ParcelFileDescriptor.AutoCloseOutputStream(pipe[1]))\n                    .start();\n        } catch (IOException e) {\n            Log.e(getClass().getSimpleName(), \"Exception opening pipe\", e);\n            throw new FileNotFoundException(\"Could not open pipe for: \"\n                    + uri.toString());\n        }\n\n        return (pipe[0]);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43376, "method_name": "query", "class_name": "RecommendationContentProvider", "params": ["Uri", "String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Cursor", "snippet": "    public Cursor query(Uri uri, String[] projection, String selection,\n                        String[] selectionArgs, String sortOrder) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43377, "method_name": "getType", "class_name": "RecommendationContentProvider", "params": ["Uri"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType(Uri uri) {\n        return \"image/*\";\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43378, "method_name": "insert", "class_name": "RecommendationContentProvider", "params": ["Uri", "ContentValues"], "throws": null, "modifiers": ["public"], "return_type": "Uri", "snippet": "    public Uri insert(Uri uri, ContentValues values) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43379, "method_name": "delete", "class_name": "RecommendationContentProvider", "params": ["Uri", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int delete(Uri uri, String selection, String[] selectionArgs) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43380, "method_name": "update", "class_name": "RecommendationContentProvider", "params": ["Uri", "ContentValues", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int update(Uri uri, ContentValues values, String selection,\n                      String[] selectionArgs) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43381, "method_name": "getOkHttpClient", "class_name": "RecommendationContentProvider", "params": [], "throws": null, "modifiers": ["private"], "return_type": "OkHttpClient", "snippet": "    private OkHttpClient getOkHttpClient() {\n        init();\n        return client;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43382, "method_name": "init", "class_name": "RecommendationContentProvider", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n        if (!initialized) {\n            TVButterApplication.getAppContext()\n                    .getComponent()\n                    .inject(this);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "ContentProvider", "implements": null, "modifiers": ["public"]}}, {"id": 43383, "method_name": "run", "class_name": "TransferThread", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            byte[] buf = new byte[8192];\n            int len;\n\n            try {\n                while ((len = in.read(buf)) > 0) {\n                    out.write(buf, 0, len);\n                }\n\n                in.close();\n                out.flush();\n                out.close();\n            } catch (IOException e) {\n                Log.e(getClass().getSimpleName(),\n                        \"Exception transferring file\", e);\n            }\n        }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/service/recommendation/RecommendationContentProvider.java", "stars": "4", "class_props": {"extends": "Thread", "implements": null, "modifiers": ["static"]}}, {"id": 43384, "method_name": "init", "class_name": "ConsistencyServiceImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void init() {\n        ScheduledExecutorService executorService =\n                new ScheduledThreadPoolExecutor(Runtime.getRuntime().availableProcessors(), new ThreadFactory() {\n                    @Override\n                    public Thread newThread(Runnable r) {\n                        Thread t = new Thread(r);\n                        t.setName(\"naming.distro.notifier\");\n                        t.setDaemon(true);\n                        return t;\n                    }\n                });\n        //\u542f\u52a8\u4e2a\u540e\u53f0\u7ebf\u7a0b\u6765\u5f02\u6b65\u66f4\u65b0\u6ce8\u518c\u5185\u5b58\u8868,\u521d\u59cb\u5316\u65f6\u542f\u52a8\u8be5\u7ebf\u7a0b\n        executorService.submit(notifier);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43385, "method_name": "listen", "class_name": "ConsistencyServiceImpl", "params": ["String", "RecordListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void listen(String key, RecordListener listener) {\n        if (!listeners.containsKey(key)) {\n            listeners.put(key, new CopyOnWriteArrayList<>());\n        }\n\n        if (listeners.get(key).contains(listener)) {\n            return;\n        }\n        //\u6dfb\u52a0\u89c2\u5bdf\u8005\uff0clistener\u5c31\u662fService\u5b9e\u4f8b\n        listeners.get(key).add(listener);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43386, "method_name": "put", "class_name": "ConsistencyServiceImpl", "params": ["String", "Instances", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void put(String key, Instances instances, String messageId) {\n        onPut(key, instances, messageId);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43387, "method_name": "notifyCluster", "class_name": "ConsistencyServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyCluster(String key) {\n        //\u901a\u77e5\u96c6\u7fa4\n        taskDispatcher.addTask(key);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43388, "method_name": "onPut", "class_name": "ConsistencyServiceImpl", "params": ["String", "Instances", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPut(String key, Instances instances, String messageId) {\n        dataMap.put(key, instances);\n        //\u628a\u5b9e\u4f8b\u5217\u8868\u6dfb\u52a0\u5230\u540e\u53f0\u7ebf\u7a0b\u7684\u963b\u585e\u961f\u5217\u91cc\u9762\n        notifier.addTask(key, messageId);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43389, "method_name": "setInstance", "class_name": "ConsistencyServiceImpl", "params": ["String", "Instances"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setInstance(String key, Instances instances) {\n        dataMap.put(key, instances);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43390, "method_name": "getInstances", "class_name": "ConsistencyServiceImpl", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Map<String,Instances>", "snippet": "    public Map<String, Instances> getInstances() {\n        return dataMap;\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43391, "method_name": "remove", "class_name": "ConsistencyServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void remove(String key) {\n        onRemove(key);\n        if (!listeners.containsKey(key)) {\n            return;\n        }\n        listeners.remove(key);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43392, "method_name": "onRemove", "class_name": "ConsistencyServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRemove(String key) {\n        notifier.addTask(key, null);\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["ConsistencyService"], "modifiers": ["public"]}}, {"id": 43393, "method_name": "addTask", "class_name": "Notifier", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void addTask(String key, String messageId) {\n\n            //\u6dfb\u52a0\u5230\u963b\u585e\u961f\u5217\u91cc\u9762\u53bb\n            tasks.add(Pair.with(key, messageId));\n        }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": []}}, {"id": 43394, "method_name": "run", "class_name": "Notifier", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void run() {\n            while (true) {\n                //\u540e\u53f0\u7ebf\u7a0b\u4ece\u963b\u585e\u961f\u5217\u91cc\u9762\u53d6\u6570\u636e\uff0c\u82e5\u6ca1\u6709\u6570\u636e\u5c31\u963b\u585e\u4f4f\u4e86\n                Pair pair = tasks.take();\n                if (pair == null) {\n                    continue;\n                }\n                log.info(\"\u540e\u53f0\u7ebf\u7a0b\u6709\u6570\u636e\u62ff\u51fa\u6765\u4e86:\" + pair);\n                String key = (String) pair.getValue0();//namespaceId##serviceName\n\n                if (!listeners.containsKey(key)) {\n                    continue;\n                }\n\n                for (RecordListener listener : listeners.get(key)) {//\u53d6\u51fa\u76d1\u542c\u8005\u8fd9\u4e2akey\u7684\u89c2\u5bdf\u8005\uff0c\u8c03\u7528\u5b83\u4eec\u7684\u76d1\u542c\u65b9\u6cd5\n                    //\u770b\u6d88\u606fid\u662f\u5426\u4e3a\u7a7a\n                    listener.onChange(pair.getValue1()==null?key+\"##null\":key+\"##\"+(String)pair.getValue1(), dataMap.get(key));\n                    continue;\n\n                }\n\n\n            }\n        }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/naming/src/main/java/cn/lzj/nacos/naming/consistency/ConsistencyServiceImpl.java", "stars": "34", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": []}}, {"id": 43395, "method_name": "shouldGetUrlForResource", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetUrlForResource() throws Exception {\n    URL url = Resources.getResourceURL(JPETSTORE_PROPERTIES);\n    assertTrue(url.toString().endsWith(\"jpetstore/jpetstore-hsqldb.properties\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43396, "method_name": "shouldGetUrlAsProperties", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetUrlAsProperties() throws Exception {\n    URL url = Resources.getResourceURL(CLASS_LOADER, JPETSTORE_PROPERTIES);\n    Properties props = Resources.getUrlAsProperties(url.toString());\n    assertNotNull(props.getProperty(\"driver\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43397, "method_name": "shouldGetResourceAsProperties", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetResourceAsProperties() throws Exception {\n    Properties props = Resources.getResourceAsProperties(CLASS_LOADER, JPETSTORE_PROPERTIES);\n    assertNotNull(props.getProperty(\"driver\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43398, "method_name": "shouldGetUrlAsStream", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetUrlAsStream() throws Exception {\n    URL url = Resources.getResourceURL(CLASS_LOADER, JPETSTORE_PROPERTIES);\n    try (InputStream in = Resources.getUrlAsStream(url.toString())) {\n      assertNotNull(in);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43399, "method_name": "shouldGetUrlAsReader", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetUrlAsReader() throws Exception {\n    URL url = Resources.getResourceURL(CLASS_LOADER, JPETSTORE_PROPERTIES);\n    try (Reader in = Resources.getUrlAsReader(url.toString())) {\n      assertNotNull(in);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43400, "method_name": "shouldGetResourceAsStream", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetResourceAsStream() throws Exception {\n    try (InputStream in = Resources.getResourceAsStream(CLASS_LOADER, JPETSTORE_PROPERTIES)) {\n      assertNotNull(in);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43401, "method_name": "shouldGetResourceAsReader", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetResourceAsReader() throws Exception {\n    try(Reader in = Resources.getResourceAsReader(CLASS_LOADER, JPETSTORE_PROPERTIES)) {\n      assertNotNull(in);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43402, "method_name": "shouldGetResourceAsFile", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetResourceAsFile() throws Exception {\n    File file = Resources.getResourceAsFile(JPETSTORE_PROPERTIES);\n    assertTrue(file.getAbsolutePath().replace('\\\\', '/').endsWith(\"jpetstore/jpetstore-hsqldb.properties\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43403, "method_name": "shouldGetResourceAsFileWithClassloader", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetResourceAsFileWithClassloader() throws Exception {\n    File file = Resources.getResourceAsFile(CLASS_LOADER, JPETSTORE_PROPERTIES);\n    assertTrue(file.getAbsolutePath().replace('\\\\', '/').endsWith(\"jpetstore/jpetstore-hsqldb.properties\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43404, "method_name": "shouldGetResourceAsPropertiesWithOutClassloader", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetResourceAsPropertiesWithOutClassloader() throws Exception {\n    Properties file = Resources.getResourceAsProperties(JPETSTORE_PROPERTIES);\n    assertNotNull(file);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43405, "method_name": "shouldGetResourceAsPropertiesWithClassloader", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetResourceAsPropertiesWithClassloader() throws Exception {\n    Properties file = Resources.getResourceAsProperties(CLASS_LOADER, JPETSTORE_PROPERTIES);\n    assertNotNull(file);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43406, "method_name": "shouldAllowDefaultClassLoaderToBeSet", "class_name": "ResourcesTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldAllowDefaultClassLoaderToBeSet() {\n    Resources.setDefaultClassLoader(this.getClass().getClassLoader());\n    assertEquals(this.getClass().getClassLoader(), Resources.getDefaultClassLoader());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43407, "method_name": "shouldAllowDefaultCharsetToBeSet", "class_name": "ResourcesTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldAllowDefaultCharsetToBeSet() {\n    Resources.setCharset(Charset.defaultCharset());\n    assertEquals(Charset.defaultCharset(), Resources.getCharset());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43408, "method_name": "shouldGetClassForName", "class_name": "ResourcesTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetClassForName() throws Exception {\n    Class<?> clazz = Resources.classForName(ResourcesTest.class.getName());\n    assertNotNull(clazz);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43409, "method_name": "shouldNotFindThisClass", "class_name": "ResourcesTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldNotFindThisClass() {\n    Assertions.assertThrows(ClassNotFoundException.class,\n        () -> Resources.classForName(\"some.random.class.that.does.not.Exist\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43410, "method_name": "shouldGetReader", "class_name": "ResourcesTest", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetReader() throws IOException {\n\n    // save the value\n    Charset charset = Resources.getCharset();\n\n    // charset\n    Resources.setCharset(Charset.forName(\"US-ASCII\"));\n    assertNotNull(Resources.getResourceAsReader(JPETSTORE_PROPERTIES));\n\n    // no charset\n    Resources.setCharset(null);\n    assertNotNull(Resources.getResourceAsReader(JPETSTORE_PROPERTIES));\n\n    // clean up\n    Resources.setCharset(charset);\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43411, "method_name": "shouldGetReaderWithClassLoader", "class_name": "ResourcesTest", "params": [], "throws": ["IOException"], "modifiers": [], "return_type": "void", "snippet": "  void shouldGetReaderWithClassLoader() throws IOException {\n\n    // save the value\n    Charset charset = Resources.getCharset();\n\n    // charset\n    Resources.setCharset(Charset.forName(\"US-ASCII\"));\n    assertNotNull(Resources.getResourceAsReader(getClass().getClassLoader(), JPETSTORE_PROPERTIES));\n\n    // no charset\n    Resources.setCharset(null);\n    assertNotNull(Resources.getResourceAsReader(getClass().getClassLoader(), JPETSTORE_PROPERTIES));\n\n    // clean up\n    Resources.setCharset(charset);\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43412, "method_name": "stupidJustForCoverage", "class_name": "ResourcesTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void stupidJustForCoverage() {\n    assertNotNull(new Resources());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/io/ResourcesTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 43413, "method_name": "shouldShowProgressiveErrorContextBuilding", "class_name": "ErrorContextTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldShowProgressiveErrorContextBuilding() {\n    ErrorContext context = ErrorContext.instance();\n    context.resource(\"somefile.xml\").activity(\"some activity\").object(\"some object\").message(\"Here's more info.\");\n    context.toString().startsWith(\"### The error occurred in somefile.xml.\");\n    context.reset();\n\n    context.activity(\"some activity\").object(\"some object\").message(\"Here's more info.\");\n    context.toString().startsWith(\"### The error occurred while some activity.\");\n    context.reset();\n\n    context.object(\"some object\").message(\"Here's more info.\");\n    context.toString().startsWith(\"### Check some object.\");\n    context.reset();\n\n    context.message(\"Here's more info.\");\n    context.toString().startsWith(\"### Here's more info.\");\n    context.reset();\n\n    context.cause(new Exception(\"test\"));\n    context.toString().startsWith(\"### Cause: java.lang.Exception: test\");\n    context.reset();\n\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/ErrorContextTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43414, "method_name": "verifyStoreRecall", "class_name": "ErrorContextTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void verifyStoreRecall() throws Exception {\n    ErrorContext outer = ErrorContext.instance();\n    ErrorContext inner = ErrorContext.instance().store();\n    assertEquals(inner, ErrorContext.instance());\n    ErrorContext recalled = ErrorContext.instance().recall();\n    assertEquals(outer, recalled);\n    assertEquals(outer, ErrorContext.instance());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/executor/ErrorContextTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43415, "method_name": "testHome", "class_name": "ManagementPortSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHome() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(\n\t\t\t\tnew TestRestTemplate(\"user\", \"password\").getForEntity(\"http://localhost:\" + this.port, Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody().get(\"message\")).isEqualTo(\"Hello Phil\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementPortSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43416, "method_name": "testMetrics", "class_name": "ManagementPortSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testMetrics() {\n\t\ttestHome(); // makes sure some requests have been made\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(new TestRestTemplate()\n\t\t\t\t.getForEntity(\"http://localhost:\" + this.managementPort + \"/actuator/metrics\", Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.UNAUTHORIZED);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementPortSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43417, "method_name": "testHealth", "class_name": "ManagementPortSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHealth() {\n\t\tResponseEntity<String> entity = new TestRestTemplate().withBasicAuth(\"user\", \"password\")\n\t\t\t\t.getForEntity(\"http://localhost:\" + this.managementPort + \"/actuator/health\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).contains(\"\\\"status\\\":\\\"UP\\\"\");\n\t\tassertThat(entity.getBody()).contains(\"\\\"example\\\"\");\n\t\tassertThat(entity.getBody()).contains(\"\\\"counter\\\":42\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementPortSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43418, "method_name": "testErrorPage", "class_name": "ManagementPortSampleActuatorApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testErrorPage() {\n\t\tResponseEntity<Map<String, Object>> entity = asMapEntity(new TestRestTemplate(\"user\", \"password\")\n\t\t\t\t.getForEntity(\"http://localhost:\" + this.managementPort + \"/error\", Map.class));\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody().get(\"status\")).isEqualTo(999);\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementPortSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43419, "method_name": "asMapEntity", "class_name": "ManagementPortSampleActuatorApplicationTests", "params": ["ResponseEntity<Map>"], "throws": null, "modifiers": ["static"], "return_type": "ResponseEntity<Map>", "snippet": "\tstatic <K, V> ResponseEntity<Map<K, V>> asMapEntity(ResponseEntity<Map> entity) {\n\t\treturn (ResponseEntity) entity;\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-actuator/src/test/java/smoketest/actuator/ManagementPortSampleActuatorApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43420, "method_name": "deserialize", "class_name": "XssJacksonDeserializer", "params": ["JsonParser", "DeserializationContext"], "throws": ["IOException", "JsonProcessingException"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String deserialize(JsonParser jsonParser, DeserializationContext deserializationContext) throws IOException, JsonProcessingException {\n        return StringEscapeUtils.escapeHtml4(jsonParser.getText());\n    }", "url": "https://raw.githubusercontent.com/geekidea/spring-cloud-plus/master/scp-framework/scp-framework-core/src/main/java/io/geekidea/cloud/framework/core/xss/XssJacksonDeserializer.java", "stars": "22", "class_props": {"extends": "JsonDeserializer", "implements": null, "modifiers": ["public"]}}, {"id": 43421, "method_name": "onLoadingStarted", "class_name": "SimpleImageLoadingListener", "params": ["String", "View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLoadingStarted(String imageUri, View view) {\n\t\t// Empty implementation\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/SimpleImageLoadingListener.java", "stars": "74", "class_props": {"extends": null, "implements": ["ImageLoadingListener"], "modifiers": ["public"]}}, {"id": 43422, "method_name": "onLoadingFailed", "class_name": "SimpleImageLoadingListener", "params": ["String", "View", "FailReason"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLoadingFailed(String imageUri, View view, FailReason failReason) {\n\t\t// Empty implementation\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/SimpleImageLoadingListener.java", "stars": "74", "class_props": {"extends": null, "implements": ["ImageLoadingListener"], "modifiers": ["public"]}}, {"id": 43423, "method_name": "onLoadingComplete", "class_name": "SimpleImageLoadingListener", "params": ["String", "View", "Bitmap"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLoadingComplete(String imageUri, View view, Bitmap loadedImage) {\n\t\t// Empty implementation\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/SimpleImageLoadingListener.java", "stars": "74", "class_props": {"extends": null, "implements": ["ImageLoadingListener"], "modifiers": ["public"]}}, {"id": 43424, "method_name": "onLoadingCancelled", "class_name": "SimpleImageLoadingListener", "params": ["String", "View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLoadingCancelled(String imageUri, View view) {\n\t\t// Empty implementation\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/core/assist/SimpleImageLoadingListener.java", "stars": "74", "class_props": {"extends": null, "implements": ["ImageLoadingListener"], "modifiers": ["public"]}}, {"id": 43425, "method_name": "getId", "class_name": "SimpleChildObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return id;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/bringrags/SimpleChildObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43426, "method_name": "getSimpleObject", "class_name": "SimpleChildObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SimpleObject", "snippet": "  public SimpleObject getSimpleObject() {\n    return parentSimpleObject;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/bringrags/SimpleChildObject.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43427, "method_name": "setCertificatePinner", "class_name": "CertificatePinning", "params": ["CertificatePinner"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void setCertificatePinner(@NonNull CertificatePinner certificatePinner) {\n\t\tCertificatePinning.certificatePinner = certificatePinner;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/backend/CertificatePinning.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43428, "method_name": "getCertificatePinner", "class_name": "CertificatePinning", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "CertificatePinner", "snippet": "\tpublic static CertificatePinner getCertificatePinner() {\n\t\treturn certificatePinner;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/backend/CertificatePinning.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43429, "method_name": "getConfiguration", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "String", "snippet": "  protected abstract String getConfiguration();\n\n  @BeforeEach\n  void before() throws Exception {\n    // create a SqlSessionFactory\n   SqlSessionFactory sqlSessionFactory;\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/mybatis-config-\" + getConfiguration() + \".xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/CreateDB.sql\");\n\n    sqlSession = sqlSessionFactory.openSession();\n    mapper = sqlSession.getMapper(Mapper.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43430, "method_name": "before", "class_name": "AbstractLazyTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void before() throws Exception {\n    // create a SqlSessionFactory\n   SqlSessionFactory sqlSessionFactory;\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/mybatis-config-\" + getConfiguration() + \".xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/CreateDB.sql\");\n\n    sqlSession = sqlSessionFactory.openSession();\n    mapper = sqlSession.getMapper(Mapper.class);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43431, "method_name": "after", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void after() {\n    if (sqlSession != null) {\n      sqlSession.close();\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43432, "method_name": "lazyLoadUserWithGetObjectWithInterface", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void lazyLoadUserWithGetObjectWithInterface() {\n    Assertions.assertNotNull(mapper.getUserWithGetObjectWithInterface(1).getOwner());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43433, "method_name": "lazyLoadUserWithGetObjectWithoutInterface", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void lazyLoadUserWithGetObjectWithoutInterface() {\n    Assertions.assertNotNull(mapper.getUserWithGetObjectWithoutInterface(1).getOwner());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43434, "method_name": "lazyLoadUserWithGetXxxWithInterface", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void lazyLoadUserWithGetXxxWithInterface() {\n    Assertions.assertNotNull(mapper.getUserWithGetXxxWithInterface(1).getOwner());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43435, "method_name": "lazyLoadUserWithGetXxxWithoutInterface", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void lazyLoadUserWithGetXxxWithoutInterface() {\n    Assertions.assertNotNull(mapper.getUserWithGetXxxWithoutInterface(1).getOwner());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43436, "method_name": "lazyLoadUserWithNothingWithInterface", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void lazyLoadUserWithNothingWithInterface() {\n    Assertions.assertNotNull(mapper.getUserWithNothingWithInterface(1).getOwner());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43437, "method_name": "lazyLoadUserWithNothingWithoutInterface", "class_name": "AbstractLazyTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void lazyLoadUserWithNothingWithoutInterface() {\n    Assertions.assertNotNull(mapper.getUserWithNothingWithoutInterface(1).getOwner());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/lazyload_proxyfactory_comparison/AbstractLazyTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["abstract"]}}, {"id": 43438, "method_name": "encodeUrl", "class_name": "EncryptHMACUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String encodeUrl(String url) {\n        for (int i = 0; i < array.length; i++) {\n            if (url.contains(array[i])) {\n                url = url.replace(array[i], urlArray[i]);\n            }\n        }\n        return url;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/EncryptHMACUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43439, "method_name": "encodeHMAC", "class_name": "EncryptHMACUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String encodeHMAC(String key, String data) {\n        byte[] result = null;\n        try {\n            //\u6839\u636e\u7ed9\u5b9a\u7684\u5b57\u8282\u6570\u7ec4\u6784\u9020\u4e00\u4e2a\u5bc6\u94a5,\u7b2c\u4e8c\u53c2\u6570\u6307\u5b9a\u4e00\u4e2a\u5bc6\u94a5\u7b97\u6cd5\u7684\u540d\u79f0\n            SecretKeySpec signinKey = new SecretKeySpec(key.getBytes(), \"HmacSHA1\");\n            //\u751f\u6210\u4e00\u4e2a\u6307\u5b9a Mac \u7b97\u6cd5 \u7684 Mac \u5bf9\u8c61\n            Mac mac = Mac.getInstance(\"HmacSHA1\");\n            //\u7528\u7ed9\u5b9a\u5bc6\u94a5\u521d\u59cb\u5316 Mac \u5bf9\u8c61\n            mac.init(signinKey);\n            //\u5b8c\u6210 Mac \u64cd\u4f5c\n            result = mac.doFinal(data.getBytes());\n        } catch (NoSuchAlgorithmException e) {\n            System.err.println(e.getMessage());\n        } catch (InvalidKeyException e) {\n            System.err.println(e.getMessage());\n        }\n        if (null != result) {\n            return bytesToHexString(result);\n        } else {\n            return null;\n        }\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/EncryptHMACUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43440, "method_name": "bytesToHexString", "class_name": "EncryptHMACUtil", "params": ["byte"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String bytesToHexString(byte[] bytes) {\n        StringBuilder buf = new StringBuilder(bytes.length * 2);\n        for (byte b : bytes) { // \u4f7f\u7528String\u7684format\u65b9\u6cd5\u8fdb\u884c\u8f6c\u6362\n            buf.append(String.format(\"%02x\", new Integer(b & 0xff)));\n        }\n\n        return buf.toString();\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/util/EncryptHMACUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43441, "method_name": "get", "class_name": "BaseMemoryCache", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "V", "snippet": "\tpublic V get(K key) {\n\t\tV result = null;\n\t\tReference<V> reference = softMap.get(key);\n\t\tif (reference != null) {\n\t\t\tresult = reference.get();\n\t\t}\n\t\treturn result;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/BaseMemoryCache.java", "stars": "74", "class_props": {"extends": null, "implements": ["MemoryCacheAware"], "modifiers": ["public", "abstract"]}}, {"id": 43442, "method_name": "put", "class_name": "BaseMemoryCache", "params": ["K", "V"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean put(K key, V value) {\n\t\tsoftMap.put(key, createReference(value));\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/BaseMemoryCache.java", "stars": "74", "class_props": {"extends": null, "implements": ["MemoryCacheAware"], "modifiers": ["public", "abstract"]}}, {"id": 43443, "method_name": "remove", "class_name": "BaseMemoryCache", "params": ["K"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void remove(K key) {\n\t\tsoftMap.remove(key);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/BaseMemoryCache.java", "stars": "74", "class_props": {"extends": null, "implements": ["MemoryCacheAware"], "modifiers": ["public", "abstract"]}}, {"id": 43444, "method_name": "keys", "class_name": "BaseMemoryCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<K>", "snippet": "\tpublic Collection<K> keys() {\n\t\tsynchronized (softMap) {\n\t\t\treturn new HashSet<K>(softMap.keySet());\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/BaseMemoryCache.java", "stars": "74", "class_props": {"extends": null, "implements": ["MemoryCacheAware"], "modifiers": ["public", "abstract"]}}, {"id": 43445, "method_name": "clear", "class_name": "BaseMemoryCache", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clear() {\n\t\tsoftMap.clear();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/BaseMemoryCache.java", "stars": "74", "class_props": {"extends": null, "implements": ["MemoryCacheAware"], "modifiers": ["public", "abstract"]}}, {"id": 43446, "method_name": "createReference", "class_name": "BaseMemoryCache", "params": ["V"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "Reference<V>", "snippet": "\tprotected abstract Reference<V> createReference(V value);\n}\n\n", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-Universal-Image-Loader-master/library/src/com/nostra13/universalimageloader/cache/memory/BaseMemoryCache.java", "stars": "74", "class_props": {"extends": null, "implements": ["MemoryCacheAware"], "modifiers": ["public", "abstract"]}}, {"id": 43447, "method_name": "getInstance", "class_name": "RoomManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "IRoomInstance", "snippet": "    public IRoomInstance getInstance(int id) {\n        IRoomInstance instance = this.getActiveInstance(id);\n\n        if(instance != null) return instance;\n\n        return this.getOfflineInstance(id);\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/room/src/main/java/com/nitro/room/RoomManager.java", "stars": "2", "class_props": {"extends": null, "implements": ["IRoomManager", "IRoomInstanceContainer"], "modifiers": ["public"]}}, {"id": 43448, "method_name": "getActiveInstance", "class_name": "RoomManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "IRoomInstance", "snippet": "    public IRoomInstance getActiveInstance(int id) {\n        return this.rooms.get(id);\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/room/src/main/java/com/nitro/room/RoomManager.java", "stars": "2", "class_props": {"extends": null, "implements": ["IRoomManager", "IRoomInstanceContainer"], "modifiers": ["public"]}}, {"id": 43449, "method_name": "getOfflineInstance", "class_name": "RoomManager", "params": ["int"], "throws": null, "modifiers": ["private"], "return_type": "IRoomInstance", "snippet": "    private IRoomInstance getOfflineInstance(int id) {\n        return this.addInstance(new RoomInstance(id, this));\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/room/src/main/java/com/nitro/room/RoomManager.java", "stars": "2", "class_props": {"extends": null, "implements": ["IRoomManager", "IRoomInstanceContainer"], "modifiers": ["public"]}}, {"id": 43450, "method_name": "addInstance", "class_name": "RoomManager", "params": ["IRoomInstance"], "throws": null, "modifiers": ["private"], "return_type": "IRoomInstance", "snippet": "    private IRoomInstance addInstance(IRoomInstance instance) {\n        IRoomInstance existing = this.getActiveInstance(instance.getId());\n\n        if(existing != null) {\n            if(instance != existing) instance.dispose();\n\n            return existing;\n        }\n\n        return this.rooms.put(instance.getId(), instance);\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/room/src/main/java/com/nitro/room/RoomManager.java", "stars": "2", "class_props": {"extends": null, "implements": ["IRoomManager", "IRoomInstanceContainer"], "modifiers": ["public"]}}, {"id": 43451, "method_name": "removeInstance", "class_name": "RoomManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeInstance(int id) {\n        IRoomInstance instance = this.rooms.remove(id);\n\n        if(instance != null) instance.dispose();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/room/src/main/java/com/nitro/room/RoomManager.java", "stars": "2", "class_props": {"extends": null, "implements": ["IRoomManager", "IRoomInstanceContainer"], "modifiers": ["public"]}}, {"id": 43452, "method_name": "removeAllInstances", "class_name": "RoomManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeAllInstances() {\n        for(int id : this.rooms.keySet()) this.removeInstance(id);\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/room/src/main/java/com/nitro/room/RoomManager.java", "stars": "2", "class_props": {"extends": null, "implements": ["IRoomManager", "IRoomInstanceContainer"], "modifiers": ["public"]}}, {"id": 43453, "method_name": "createRoomObjectManager", "class_name": "RoomManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IRoomObjectManager", "snippet": "    public IRoomObjectManager createRoomObjectManager() {\n        return new RoomObjectManager();\n    }", "url": "https://raw.githubusercontent.com/billsonnn/nitro-java/master/room/src/main/java/com/nitro/room/RoomManager.java", "stars": "2", "class_props": {"extends": null, "implements": ["IRoomManager", "IRoomInstanceContainer"], "modifiers": ["public"]}}, {"id": 43454, "method_name": "main", "class_name": "NumToString", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint number = 599;\n\t\tString strNum = String.valueOf(number);\n\t\tSystem.out.println(strNum);\n\t\t\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day8/NumToString.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43455, "method_name": "searchCustomer", "class_name": "SearchDAO", "params": ["SearchResult<Customer>", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchCustomer(SearchResult<Customer> result, String filter) throws SQLException {\n        searchObjects(result, filter, TABLE_CUSTOMER, Customer.OBJECT_TYPE, rs -> {\n            try {\n                return CustomerDAO.getCustomerFromRs(rs, \"o.\");\n            } catch (SQLException e) {\n                throw new RuntimeException(e);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43456, "method_name": "searchProcess", "class_name": "SearchDAO", "params": ["SearchResult<Process>", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchProcess(SearchResult<Process> result, String filter) throws SQLException {\n        searchObjects(result, filter, TABLE_PROCESS, Process.OBJECT_TYPE, rs -> {\n            try {\n                return ProcessDAO.getProcessFromRs(rs, \"o.\");\n            } catch (SQLException e) {\n                throw new RuntimeException(e);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43457, "method_name": "searchObjects", "class_name": "SearchDAO", "params": ["SearchResult<T>", "String", "String", "String", "Function<ResultSet,T>"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "    private <T> void searchObjects(SearchResult<T> result, String filter, \n        String tableName, String objectType, Function<ResultSet, T> extractor) throws SQLException {\n        String query = SQL_SELECT_COUNT_ROWS + \"o.* FROM \" + TABLE + \" AS ft \"\n                + SQL_INNER_JOIN + tableName + \" AS o ON ft.object_id=o.id\"\n                + SQL_WHERE + \"ft.object_type=? AND MATCH(ft.data) AGAINST (? IN BOOLEAN MODE) \"\n                + getPageLimit(result.getPage());\n        PreparedStatement ps = con.prepareStatement(query);\n        ps.setString(1, objectType);\n        ps.setString(2, filter);\n\n        ResultSet rs = ps.executeQuery();\n        while (rs.next())\n            result.getList().add(extractor.apply(rs));\n        result.getPage().setRecordCount(getFoundRows(ps));\n        ps.close();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43458, "method_name": "searchMessages", "class_name": "SearchDAO", "params": ["SearchResult<Pair>", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void searchMessages(SearchResult<Pair<Message, Process>> result, String filter) throws SQLException {\n        String query = SQL_SELECT_COUNT_ROWS + \"m.*, p.* FROM \" + TABLE + \" AS ft \"\n                + SQL_INNER_JOIN + TABLE_MESSAGE + \" AS m ON ft.object_id=m.id \"\n                + SQL_LEFT_JOIN + TABLE_PROCESS + \" AS p ON m.process_id=p.id \"\n                + SQL_WHERE + \"ft.object_type=? AND MATCH(ft.data) AGAINST (? IN BOOLEAN MODE) \"\n                + getPageLimit(result.getPage());\n        PreparedStatement ps = con.prepareStatement(query);\n        ps.setString(1, Message.OBJECT_TYPE);\n        ps.setString(2, filter);\n\n        ResultSet rs = ps.executeQuery();\n        while (rs.next()) {\n            Message m = MessageDAO.getMessageFromRs(rs, \"m.\");\n            Process p = ProcessDAO.getProcessFromRs(rs, \"p.\");\n            result.getList().add(new Pair<Message, Process>(m, p));\n        }\n        result.getPage().setRecordCount(getFoundRows(ps));\n        ps.close();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43459, "method_name": "scheduleUpdate", "class_name": "SearchDAO", "params": ["String", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void scheduleUpdate(String objectType, int objectId) throws SQLException {\n        log.debug(\"Updated record, objectType: %s; objectId: %s\", objectType, objectId);\n        updateOrInsert(\n                SQL_UPDATE + TABLE + SQL_SET + \"scheduled_dt=NOW()\" + SQL_WHERE + \"object_type=? AND object_id=?\",\n                SQL_INSERT + TABLE + \"(scheduled_dt, object_type, object_id) VALUES (NOW(),?,?)\",\n                objectType, objectId);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43460, "method_name": "delete", "class_name": "SearchDAO", "params": ["String", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(String objectType, int objectId) throws BGException {\n        log.debug(\"Deleted record, objectType: %s; objectId: %s\", objectType, objectId);\n        try {\n            String query = SQL_DELETE + TABLE + SQL_WHERE + \"object_type=? AND object_id=?\";\n            PreparedStatement ps = con.prepareStatement(query);\n            ps.setString(1, objectType);\n            ps.setInt(2, objectId);\n            ps.executeUpdate();\n            ps.close();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43461, "method_name": "delete", "class_name": "SearchDAO", "params": ["SearchItem"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void delete(SearchItem item) throws BGException {\n        delete(item.getObjectType(), item.getObjectId());\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43462, "method_name": "getScheduledUpdates", "class_name": "SearchDAO", "params": ["int", "int"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "List<SearchItem>", "snippet": "    public List<SearchItem> getScheduledUpdates(int secondsOld, int maxCount) throws BGException {\n        List<SearchItem> result = new ArrayList<>();\n        try {\n            String query = \n                    SQL_SELECT_COUNT_ROWS + \"object_type, object_id\" + SQL_FROM + TABLE + SQL_WHERE + \n                    \"scheduled_dt<=DATE_SUB(NOW(), INTERVAL ? SECOND)\" +\n                    SQL_ORDER_BY + \"scheduled_dt\" +\n                    SQL_LIMIT + \"?\";\n            PreparedStatement ps = con.prepareStatement(query);\n            ps.setInt(1, secondsOld);\n            ps.setInt(2, maxCount);\n            \n            ResultSet rs = ps.executeQuery();\n            while (rs.next()) {\n                SearchItem item = new SearchItem();\n                item.setObjectType(rs.getString(1));\n                item.setObjectId(rs.getInt(2));\n                result.add(item);\n            }\n            ps.close();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43463, "method_name": "update", "class_name": "SearchDAO", "params": ["SearchItem"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void update(SearchItem item) throws BGException {\n        try {\n            String query = SQL_UPDATE + TABLE + SQL_SET + \"data=?, scheduled_dt=NULL\" + SQL_WHERE + \"object_type=? AND object_id=?\";\n            PreparedStatement ps = con.prepareStatement(query);\n            ps.setString(1, item.getText());\n            ps.setString(2, item.getObjectType());\n            ps.setInt(3, item.getObjectId());\n            ps.executeUpdate();\n            ps.close();\n        } catch (SQLException e) {\n            throw new BGException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43464, "method_name": "init", "class_name": "SearchDAO", "params": ["String", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void init(String objectType, String objectTable) throws SQLException {\n        String query = SQL_INSERT + TABLE + \" (object_type, object_id, scheduled_dt) \"\n            + \"SELECT ?, t.id, NOW() FROM \" + objectTable + \" AS t \" \n            + \"LEFT JOIN \" + TABLE + \" AS fd ON fd.object_type=? AND t.id=fd.object_id WHERE fd.object_id IS NULL\";\n        PreparedStatement ps = con.prepareStatement(query);\n        ps.setString(1, objectType);\n        ps.setString(2, objectType);\n        ps.executeUpdate();\n        ps.close();\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/fulltext/dao/SearchDAO.java", "stars": "12", "class_props": {"extends": "CommonDAO", "implements": null, "modifiers": ["public"]}}, {"id": 43465, "method_name": "read", "class_name": "BlockingFilterInputStream", "params": ["byte", "int", "int"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read(byte[] buffer, int offset, int count) throws IOException {\n        int total = 0;\n        while (total < count) {\n            int read = super.read(buffer, offset + total, count - total);\n            if (read == -1) {\n                return (total != 0) ? total : -1;\n            }\n            total += read;\n        }\n        return total;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/imageloader/BlockingFilterInputStream.java", "stars": "74", "class_props": {"extends": "FilterInputStream", "implements": null, "modifiers": []}}, {"id": 43466, "method_name": "read", "class_name": "BlockingFilterInputStream", "params": ["byte"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "int", "snippet": "    public int read(byte[] buffer) throws IOException {\n        int total = 0;\n        while (total < buffer.length) {\n            int offset = total;\n            int count = buffer.length - total;\n            int read = super.read(buffer, offset, count);\n            if (read == -1) {\n                return (total != 0) ? total : -1;\n            }\n            total += read;\n        }\n        return total;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/imageloader/BlockingFilterInputStream.java", "stars": "74", "class_props": {"extends": "FilterInputStream", "implements": null, "modifiers": []}}, {"id": 43467, "method_name": "skip", "class_name": "BlockingFilterInputStream", "params": ["long"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "long", "snippet": "    public long skip(long count) throws IOException {\n        long total = 0L;\n        while (total < count) {\n            long skipped = super.skip(count - total);\n            if (skipped == 0L) {\n                int b = super.read();\n                if (b < 0) {\n                    break;\n                } else {\n                    skipped += 1;\n                }\n            }\n            total += skipped;\n        }\n        return total;\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/imageloader/BlockingFilterInputStream.java", "stars": "74", "class_props": {"extends": "FilterInputStream", "implements": null, "modifiers": []}}, {"id": 43468, "method_name": "getId", "class_name": "MocoStubs", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return ID;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43469, "method_name": "getServer", "class_name": "MocoStubs", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HttpServer", "snippet": "  public HttpServer getServer() {\n    return server;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43470, "method_name": "activate", "class_name": "MocoStubs", "params": ["Config"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void activate(Config config) {\n    this.config = config;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43471, "method_name": "modify", "class_name": "MocoStubs", "params": ["Config"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void modify(Config config) {\n    this.config = config;\n    manager.reload(this);\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43472, "method_name": "deactivate", "class_name": "MocoStubs", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void deactivate() {\n    stop();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43473, "method_name": "initServer", "class_name": "MocoStubs", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void initServer() {\n    stop();\n\n    if (config.logging()) {\n      server = (ActualHttpServer) httpServer(config.port(), ApiUtils.log(LOG::info));\n    } else {\n      server = (ActualHttpServer) httpServer(config.port());\n    }\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43474, "method_name": "startServer", "class_name": "MocoStubs", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startServer() {\n    LOG.info(\"Starting AEM Stubs Moco Server\");\n    runner = runner(server);\n    runner.start();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43475, "method_name": "stop", "class_name": "MocoStubs", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void stop() {\n    if (runner != null) {\n      LOG.info(\"Stopping AEM Stubs Moco Server\");\n      runner.stop();\n    }\n    runner = null;\n    server = null;\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43476, "method_name": "runScript", "class_name": "MocoStubs", "params": ["Resource"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void runScript(Resource resource) {\n    final StubScript script = new StubScript(resource, manager, this);\n\n    script.getCompilerConfig().addCompilationCustomizers(new ImportCustomizer().addStaticStars(\n      MocoUtils.class.getName(),\n      Moco.class.getName()\n    ));\n\n    script.run();\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43477, "method_name": "loadMapping", "class_name": "MocoStubs", "params": ["Resource"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void loadMapping(Resource file) {\n    Optional.ofNullable(file.getChild(JcrUtils.JCR_CONTENT))\n      .flatMap(fileContent -> Optional.of(fileContent)\n        .map(r -> r.adaptTo(InputStream.class))\n        .map(BufferedInputStream::new))\n      .ifPresent(input -> {\n        final ActualHttpServer configServer = (ActualHttpServer) new HttpServerParser().parseServer(\n          ImmutableList.of(input), Optional.of(config.port())\n        );\n        server = server.mergeServer(configServer);\n      });\n  }", "url": "https://raw.githubusercontent.com/Cognifide/aem-stubs/master/moco/src/main/java/com/cognifide/aem/stubs/moco/MocoStubs.java", "stars": "8", "class_props": {"extends": null, "implements": ["Stubs"], "modifiers": ["public"]}}, {"id": 43478, "method_name": "api", "class_name": "SwaggerAutoConfiguration", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Docket", "snippet": "    public Docket api() {\n        // \u6392\u9664\u7684url\u89c4\u5219\n        List<Predicate<String>> excludePath = new ArrayList<>();\n        swaggerProperties.getExcludePath().forEach(path -> excludePath.add(PathSelectors.ant(path)));\n\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .pathProvider(new RelativePathProvider(servletContext) {\n                    @Override\n                    public String getApplicationBasePath() {\n                        return \"/\";\n                    }\n                })\n                .select()\n                .paths(Predicates.and(Predicates.not(Predicates.or(excludePath))))\n                .build()\n                .securitySchemes(securitySchemes())\n                .securityContexts(securityContexts());\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/swagger/SwaggerAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43479, "method_name": "securitySchemes", "class_name": "SwaggerAutoConfiguration", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<ApiKey>", "snippet": "    private List<ApiKey> securitySchemes() {\n        return Collections.singletonList(new ApiKey(\"Authorization\", \"Authorization\", \"header\"));\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/swagger/SwaggerAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43480, "method_name": "securityContexts", "class_name": "SwaggerAutoConfiguration", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<SecurityContext>", "snippet": "    private List<SecurityContext> securityContexts() {\n        return Collections.singletonList(\n                SecurityContext.builder()\n                        .securityReferences(defaultAuth())\n                        .forPaths(PathSelectors.regex(\"/.*\"))\n                        .build()\n        );\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/swagger/SwaggerAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43481, "method_name": "defaultAuth", "class_name": "SwaggerAutoConfiguration", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<SecurityReference>", "snippet": "    private List<SecurityReference> defaultAuth() {\n        AuthorizationScope authorizationScope = new AuthorizationScope(\"global\", \"accessEverything\");\n        AuthorizationScope[] authorizationScopes = new AuthorizationScope[1];\n        authorizationScopes[0] = authorizationScope;\n        return Collections.singletonList(\n                new SecurityReference(\"Authorization\", authorizationScopes));\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/swagger/SwaggerAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43482, "method_name": "apiInfo", "class_name": "SwaggerAutoConfiguration", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ApiInfo", "snippet": "    private ApiInfo apiInfo() {\n        return new ApiInfoBuilder()\n                .title(swaggerProperties.getName())\n                .version(swaggerProperties.getVersion())\n                .build();\n    }", "url": "https://raw.githubusercontent.com/taoroot/taoiot/master/src/main/java/com/github/taoroot/taoiot/swagger/SwaggerAutoConfiguration.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43483, "method_name": "listar", "class_name": "TabelaController", "params": ["ModelMap"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView listar(ModelMap model) {\n        model.addAttribute(\"tabelas\", tabelaService.recuperar());\n        return new ModelAndView(\"/tabela/list\", model);\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/TabelaController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43484, "method_name": "preSalvar", "class_name": "TabelaController", "params": ["Tabela", "Cliente", "ModelMap"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String preSalvar(@ModelAttribute(\"tabela\") Tabela tabela, @ModelAttribute(\"clientecontrol\") Cliente cliente, ModelMap model) {\n        model.addAttribute(\"clientes\", clienteService.recuperar());\n        return \"/tabela/add\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/TabelaController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43485, "method_name": "salvar", "class_name": "TabelaController", "params": ["Tabela", "BindingResult", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String salvar(@Valid @ModelAttribute(\"tabela\") Tabela tabela, BindingResult result, RedirectAttributes attr) {\n        if (result.hasErrors()) {\n            return \"/tabela/add\";\n        }\n\n        tabela.setCliente(clienteService.recuperarPorId(tabela.getCliente().getId()));\n        tabelaService.salvar(tabela);\n        attr.addFlashAttribute(\"mensagem\", \"Tabela criada com sucesso.\");\n        return \"redirect:/tabelas/listar\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/TabelaController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43486, "method_name": "preAtualizar", "class_name": "TabelaController", "params": ["Integer", "ModelMap"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView preAtualizar(@PathVariable(\"id\") Integer id, ModelMap model) {\n        Tabela tabela = tabelaService.recuperarPorId(id);\n        model.addAttribute(\"clientes\", clienteService.recuperar());\n        model.addAttribute(\"tabela\", tabela);\n        return new ModelAndView(\"/tabela/att\", model);\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/TabelaController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43487, "method_name": "atualizar", "class_name": "TabelaController", "params": ["Tabela", "BindingResult", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView atualizar(@Valid @ModelAttribute(\"tabela\") Tabela tabela, BindingResult result, RedirectAttributes attr) {\n        if (result.hasErrors()) {\n            return new ModelAndView(\"/tabela/add\");\n        }\n\n        tabela.setCliente(tabela.getCliente());\n        tabelaService.atualizar(tabela);\n        attr.addFlashAttribute(\"mensagem\", \"Tabela atualizada com sucesso.\");\n        return new ModelAndView(\"redirect:/tabelas/listar\");\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/TabelaController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43488, "method_name": "remover", "class_name": "TabelaController", "params": ["Integer", "RedirectAttributes"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String remover(@PathVariable(\"id\") Integer id, RedirectAttributes attr) {\n        tabelaService.excluir(id);\n        attr.addFlashAttribute(\"mensagem\", \"Tabela exclu\u00edda com sucesso.\");\n        return \"redirect:/tabelas/listar\";\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/controller/TabelaController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43489, "method_name": "addToQueue", "class_name": "WebOSTVKeyboardInput", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addToQueue(String input) {\n        toSend.add(input);\n        if (!waiting) {\n            sendData();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVKeyboardInput.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43490, "method_name": "sendEnter", "class_name": "WebOSTVKeyboardInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendEnter() {\n        toSend.add(ENTER);\n        if (!waiting) {\n            sendData();\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVKeyboardInput.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43491, "method_name": "sendDel", "class_name": "WebOSTVKeyboardInput", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void sendDel() {\n        if (toSend.size() == 0) {\n            toSend.add(DELETE);\n            if (!waiting) {\n                sendData();\n            }\n        }\n        else {\n            toSend.remove(toSend.size()-1);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVKeyboardInput.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43492, "method_name": "sendData", "class_name": "WebOSTVKeyboardInput", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sendData() {\n        waiting = true;\n\n        String uri;\n        String typeTest = toSend.get(0);\n\n        JSONObject payload = new JSONObject();\n\n        if (typeTest.equals(ENTER)) {\n            toSend.remove(0);\n            uri = \"ssap://com.webos.service.ime/sendEnterKey\";\n        }\n        else if (typeTest.equals(DELETE)) {\n            uri = \"ssap://com.webos.service.ime/deleteCharacters\";\n\n            int count = 0;\n            while (toSend.size() > 0 && toSend.get(0).equals(DELETE)) {\n                toSend.remove(0);\n                count++;\n            }\n\n            try {\n                payload.put(\"count\", count);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n        else {\n            uri = \"ssap://com.webos.service.ime/insertText\";\n            StringBuilder sb = new StringBuilder();\n\n            while (toSend.size() > 0 && !(toSend.get(0).equals(DELETE) || toSend.get(0).equals(ENTER))) {\n                String text = toSend.get(0);\n                sb.append(text);\n                toSend.remove(0);\n            }\n\n            try {\n                payload.put(\"text\", sb.toString());\n                payload.put(\"replace\", 0);\n            } catch (JSONException e) {\n                e.printStackTrace();\n            }\n        }\n\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                waiting = false;\n                if (toSend.size() > 0) \n                    sendData();\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                waiting = false;\n                if (toSend.size() > 0) \n                    sendData();\n            }\n        };\n\n        ServiceCommand<ResponseListener<Object>> request = new ServiceCommand<ResponseListener<Object>>(service, uri, payload, true, responseListener);\n        request.send();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVKeyboardInput.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43493, "method_name": "connect", "class_name": "WebOSTVKeyboardInput", "params": ["TextInputStatusListener"], "throws": null, "modifiers": ["public"], "return_type": "URLServiceSubscription<TextInputStatusListener>", "snippet": "    public URLServiceSubscription<TextInputStatusListener> connect(final TextInputStatusListener listener) {\n        ResponseListener<Object> responseListener = new ResponseListener<Object>() {\n\n            @Override\n            public void onSuccess(Object response) {\n                JSONObject jsonObj = (JSONObject)response;\n\n                TextInputStatusInfo keyboard = parseRawKeyboardData(jsonObj);\n\n                Util.postSuccess(listener, keyboard);\n            }\n\n            @Override\n            public void onError(ServiceCommandError error) {\n                Util.postError(listener, error);\n            }\n        };\n\n        URLServiceSubscription<TextInputStatusListener> subscription = new URLServiceSubscription<TextInputStatusListener>(service, KEYBOARD_INPUT, null, true, responseListener);\n        subscription.send();\n\n        return subscription;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVKeyboardInput.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43494, "method_name": "parseRawKeyboardData", "class_name": "WebOSTVKeyboardInput", "params": ["JSONObject"], "throws": null, "modifiers": ["private"], "return_type": "TextInputStatusInfo", "snippet": "    private TextInputStatusInfo parseRawKeyboardData(JSONObject rawData) {\n        boolean focused = false;\n        String contentType = null;\n        boolean predictionEnabled = false;\n        boolean correctionEnabled = false;\n        boolean autoCapitalization = false;\n        boolean hiddenText = false;\n        boolean focusChanged = false;\n\n        TextInputStatusInfo keyboard = new TextInputStatusInfo();\n        keyboard.setRawData(rawData);\n\n        try {\n            if (rawData.has(\"currentWidget\")) {\n                JSONObject currentWidget = (JSONObject) rawData.get(\"currentWidget\");\n                focused = (Boolean) currentWidget.get(\"focus\");\n\n                if (currentWidget.has(\"contentType\")) {\n                    contentType = (String) currentWidget.get(\"contentType\");\n                }\n                if (currentWidget.has(\"predictionEnabled\")) {\n                    predictionEnabled = (Boolean) currentWidget.get(\"predictionEnabled\");\n                }\n                if (currentWidget.has(\"correctionEnabled\")) {\n                    correctionEnabled = (Boolean) currentWidget.get(\"correctionEnabled\");\n                }\n                if (currentWidget.has(\"autoCapitalization\")) {\n                    autoCapitalization = (Boolean) currentWidget.get(\"autoCapitalization\");\n                }\n                if (currentWidget.has(\"hiddenText\")) {\n                    hiddenText = (Boolean) currentWidget.get(\"hiddenText\");\n                }\n            }\n            if (rawData.has(\"focusChanged\")) \n                focusChanged = (Boolean) rawData.get(\"focusChanged\");\n\n        } catch (JSONException e) {\n            e.printStackTrace();\n        }\n\n        keyboard.setFocused(focused);\n        keyboard.setContentType(contentType);\n        keyboard.setPredictionEnabled(predictionEnabled);\n        keyboard.setCorrectionEnabled(correctionEnabled);\n        keyboard.setAutoCapitalization(autoCapitalization);\n        keyboard.setHiddenText(hiddenText);\n        keyboard.setFocusChanged(focusChanged);\n\n        return keyboard;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/connectsdk/core/src/com/connectsdk/service/webos/WebOSTVKeyboardInput.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43495, "method_name": "scanner", "class_name": "CodeGenerator2", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String scanner(String tip) {\n        Scanner scanner = new Scanner(System.in);\n        StringBuilder help = new StringBuilder();\n        help.append(\"\u8bf7\u8f93\u5165\" + tip + \"\uff1a\");\n        System.out.println(help.toString());\n        if (scanner.hasNext()) {\n            String ipt = scanner.next();\n            if (StrUtil.isNotEmpty(ipt)) {\n                return ipt;\n            }\n        }\n        throw new MybatisPlusException(\"\u8bf7\u8f93\u5165\u6b63\u786e\u7684\" + tip + \"\uff01\");\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/CodeGenerator2.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43496, "method_name": "main", "class_name": "CodeGenerator2", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        // \u4ee3\u7801\u751f\u6210\u5668\n        AutoGenerator mpg = new AutoGenerator();\n\n        // \u5168\u5c40\u914d\u7f6e\n        GlobalConfig gc = new GlobalConfig();\n        String projectPath = System.getProperty(\"user.dir\");\n        System.out.println(\"projectPath = \" + projectPath);\n        gc.setOutputDir(projectPath + \"/src/main/java\");\n        gc.setAuthor(\"Kalvin\");\n        gc.setOpen(false);\n        gc.setIdType(IdType.AUTO);\n        // gc.setSwagger2(true); \u5b9e\u4f53\u5c5e\u6027 Swagger2 \u6ce8\u89e3\n        mpg.setGlobalConfig(gc);\n\n        // \u6570\u636e\u6e90\u914d\u7f6e\n        DataSourceConfig dsc = new DataSourceConfig();\n        dsc.setUrl(\"jdbc:mysql://localhost:3306/activiti_k?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=GMT%2B8\");\n        // dsc.setSchemaName(\"public\");\n        dsc.setDriverName(\"com.mysql.jdbc.Driver\");\n        dsc.setUsername(\"root\");\n        dsc.setPassword(\"root\");\n        mpg.setDataSource(dsc);\n\n        // \u5305\u914d\u7f6e\n        PackageConfig pc = new PackageConfig();\n        pc.setModuleName(scanner(\"\u6a21\u5757\u540d\"));\n        pc.setParent(\"com.kalvin\");\n        mpg.setPackageInfo(pc);\n\n        // \u81ea\u5b9a\u4e49\u914d\u7f6e\n        InjectionConfig cfg = new InjectionConfig() {\n            @Override\n            public void initMap() {\n                // to do nothing\n            }\n        };\n\n        // \u5982\u679c\u6a21\u677f\u5f15\u64ce\u662f freemarker\n//        String templatePath = \"/templates/mapper.xml.ftl\";\n        // \u5982\u679c\u6a21\u677f\u5f15\u64ce\u662f velocity\n         String templatePath = \"/templates/mapper.xml.vm\";\n\n        // \u81ea\u5b9a\u4e49\u8f93\u51fa\u914d\u7f6e\n        List<FileOutConfig> focList = new ArrayList<>();\n        // \u81ea\u5b9a\u4e49\u914d\u7f6e\u4f1a\u88ab\u4f18\u5148\u8f93\u51fa\n        focList.add(new FileOutConfig(templatePath) {\n            @Override\n            public String outputFile(TableInfo tableInfo) {\n                // \u81ea\u5b9a\u4e49\u8f93\u51fa\u6587\u4ef6\u540d \uff0c \u5982\u679c\u4f60 Entity \u8bbe\u7f6e\u4e86\u524d\u540e\u7f00\u3001\u6b64\u5904\u6ce8\u610f xml \u7684\u540d\u79f0\u4f1a\u8ddf\u7740\u53d1\u751f\u53d8\u5316\uff01\uff01\n                return projectPath + \"/src/main/resources/mapper/\" + pc.getModuleName()\n                        + \"/\" + tableInfo.getEntityName() + \"Mapper\" + StringPool.DOT_XML;\n            }\n        });\n        /*\n        cfg.setFileCreate(new IFileCreate() {\n            @Override\n            public boolean isCreate(ConfigBuilder configBuilder, FileType fileType, String filePath) {\n                // \u5224\u65ad\u81ea\u5b9a\u4e49\u6587\u4ef6\u5939\u662f\u5426\u9700\u8981\u521b\u5efa\n                checkDir(\"\u8c03\u7528\u9ed8\u8ba4\u65b9\u6cd5\u521b\u5efa\u7684\u76ee\u5f55\");\n                return false;\n            }\n        });\n        */\n        cfg.setFileOutConfigList(focList);\n        mpg.setCfg(cfg);\n\n        // \u914d\u7f6e\u6a21\u677f\n        TemplateConfig templateConfig = new TemplateConfig();\n\n        // \u914d\u7f6e\u81ea\u5b9a\u4e49\u8f93\u51fa\u6a21\u677f\n        //\u6307\u5b9a\u81ea\u5b9a\u4e49\u6a21\u677f\u8def\u5f84\uff0c\u6ce8\u610f\u4e0d\u8981\u5e26\u4e0a.ftl/.vm, \u4f1a\u6839\u636e\u4f7f\u7528\u7684\u6a21\u677f\u5f15\u64ce\u81ea\u52a8\u8bc6\u522b\n        // templateConfig.setEntity(\"templates/entity2.java\");\n        // templateConfig.setService();\n        // templateConfig.setController();\n\n        templateConfig.setXml(null);\n        mpg.setTemplate(templateConfig);\n\n        // \u7b56\u7565\u914d\u7f6e\n        StrategyConfig strategy = new StrategyConfig();\n        strategy.setNaming(NamingStrategy.underline_to_camel);\n        strategy.setColumnNaming(NamingStrategy.underline_to_camel);\n        strategy.setSuperEntityClass(\"com.kalvin.kvf.common.entity.BaseEntity\");\n        strategy.setEntityLombokModel(true);\n        strategy.setRestControllerStyle(true);\n        strategy.setSuperControllerClass(\"com.kalvin.kvf.common.controller.BaseController\");\n        strategy.setInclude(scanner(\"\u8868\u540d\uff0c\u591a\u4e2a\u82f1\u6587\u9017\u53f7\u5206\u5272\").split(\",\"));\n        strategy.setSuperEntityColumns(\"id\");\n        strategy.setControllerMappingHyphenStyle(true);\n        strategy.setTablePrefix(pc.getModuleName() + \"_\");\n        mpg.setStrategy(strategy);\n//        mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n        mpg.execute();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/common/CodeGenerator2.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43497, "method_name": "showErrorMessage", "class_name": "AlertUtil", "params": ["Exception"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showErrorMessage(@NotNull final Exception exception) {\n        showErrorMessage(exception.getMessage());\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/AlertUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43498, "method_name": "showErrorMessage", "class_name": "AlertUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showErrorMessage(@NotNull final String error) {\n        alert(Alert.AlertType.ERROR, \"\u041f\u043e\u043c\u0438\u043b\u043a\u0430\", error, ButtonType.OK);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/AlertUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43499, "method_name": "showInfoMessage", "class_name": "AlertUtil", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void showInfoMessage(@NotNull final String header, @NotNull final String info) {\n        alert(Alert.AlertType.INFORMATION, header, info, ButtonType.OK);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/AlertUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43500, "method_name": "alert", "class_name": "AlertUtil", "params": ["Alert", "String", "String", "ButtonType"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void alert(Alert.AlertType type, String header, String message, ButtonType... types) {\n        Alert alert = new Alert(type, message, types);\n        alert.setHeaderText(header);\n        alert.getDialogPane().setMinHeight(Region.USE_PREF_SIZE);\n        alert.showAndWait();\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/divine/util/AlertUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43501, "method_name": "onBindViewHolder", "class_name": "SelectableItemsViewAdapter_2", "params": ["android", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onBindViewHolder (android.support.v7.widget.RecyclerView.ViewHolder p0, int p1)\n\t{\n\t\tn_onBindViewHolder (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43502, "method_name": "n_onBindViewHolder", "class_name": "SelectableItemsViewAdapter_2", "params": ["android", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onBindViewHolder (android.support.v7.widget.RecyclerView.ViewHolder p0, int p1);\n\n\n\tpublic void onViewRecycled (android.support.v7.widget.RecyclerView.ViewHolder p0)\n\t{\n\t\tn_onViewRecycled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43503, "method_name": "onViewRecycled", "class_name": "SelectableItemsViewAdapter_2", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onViewRecycled (android.support.v7.widget.RecyclerView.ViewHolder p0)\n\t{\n\t\tn_onViewRecycled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43504, "method_name": "n_onViewRecycled", "class_name": "SelectableItemsViewAdapter_2", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onViewRecycled (android.support.v7.widget.RecyclerView.ViewHolder p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43505, "method_name": "monodroidAddReference", "class_name": "SelectableItemsViewAdapter_2", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43506, "method_name": "monodroidClearReferences", "class_name": "SelectableItemsViewAdapter_2", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/SelectableItemsViewAdapter_2.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43507, "method_name": "current", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "LanguageManager", "snippet": "    public static LanguageManager current() { return instance; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43508, "method_name": "selectDefaultLanguage", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void selectDefaultLanguage() { instance.selectLanguage(LanguageManager.DEFAULT_LANGUAGE); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43509, "method_name": "selectedLanguage", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int selectedLanguage()        { return selectedLanguage; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43510, "method_name": "selectedLanguage", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void selectedLanguage(int i)  { selectedLanguage = i; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43511, "method_name": "languages", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<Language>", "snippet": "    private List<Language> languages()  {\n        if (languages.isEmpty()) {\n            loadLanguageFile();\n            selectedLanguage(-1);\n            selectLanguage(DEFAULT_LANGUAGE);\n        }\n        return languages;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43512, "method_name": "languageNames", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> languageNames() {\n        List<String> names = new ArrayList<>();\n        for (Language lang: languages)\n            names.add(lang.name);\n        return names;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43513, "method_name": "languageNumber", "class_name": "LanguageManager", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int languageNumber(String dir) {\n        for (int i=0;i<languages.size();i++) {\n            Language lang = languages.get(i);\n            if (lang.directory.equalsIgnoreCase(dir))\n                return i;\n        }\n        return DEFAULT_LANGUAGE;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43514, "method_name": "selectLanguage", "class_name": "LanguageManager", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void selectLanguage(String dir) {\n        for (int i=0;i<languages.size();i++) {\n            Language lang = languages.get(i);\n            if (lang.directory.equalsIgnoreCase(dir)) {\n                current().selectLanguage(i);\n                return;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43515, "method_name": "selectedLanguageDir", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String selectedLanguageDir() { return languages.get(selectedLanguage).directory; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43516, "method_name": "languageDir", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String languageDir(int i)    { return languages.get(i).directory; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43517, "method_name": "selectedLanguageName", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String selectedLanguageName() {\n        return language(selectedLanguage());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43518, "method_name": "defaultLanguageFullPath", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String defaultLanguageFullPath()   { return baseDir+languages().get(DEFAULT_LANGUAGE).directory; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43519, "method_name": "selectedLanguageFullPath", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String selectedLanguageFullPath()  { return baseDir+languages().get(selectedLanguage()).directory; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43520, "method_name": "language", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String language(int i)   { return languages().get(i).name; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43521, "method_name": "langDir", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String langDir(int i)    { return languages().get(i).directory; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43522, "method_name": "langSubdir", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String langSubdir(int i) { return languages().get(i).subdirectory;    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43523, "method_name": "fontName", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String fontName(int i)   { return languages().get(i).font; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43524, "method_name": "locale", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Locale", "snippet": "    public Locale locale(int i)     { return languages().get(i).locale; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43525, "method_name": "orientation", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "ComponentOrientation", "snippet": "    public ComponentOrientation orientation(int i) { return languages().get(i).orientation; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43526, "method_name": "cycleLanguage", "class_name": "LanguageManager", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cycleLanguage(boolean up) {\n        int i = selectedLanguage();\n        i += (up?1:-1);\n        if (i < 0)\n            i = languages().size() - 1;\n        else if (i >= languages().size())\n            i = 0;\n\n        selectLanguage(i);\n        UserPreferences.save();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43527, "method_name": "selectLanguage", "class_name": "LanguageManager", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void selectLanguage(int i) {\n        if (selectedLanguage() == i)\n            return;\n\n        Language defLang = languages().get(DEFAULT_LANGUAGE);\n        Language newLang = languages().get(i);\n\n        // load fonts for selected lanage\n        FontManager.current().loadFonts(baseDir, newLang.directory);\n\n        // reset dialogue maps in label managers\n        labels().resetDialogue();\n        RaceFactory.current().resetRaceLangFiles();\n\n        // reload default labels, since that is assured of completeness\n        String currDir = baseDir+defLang.directory+\"/\";\n        labels().loadLabelFile(currDir);\n        labels().loadDialogueFile(currDir);\n        labels().loadTechsFile(currDir);\n        RaceFactory.current().loadRaceLangFiles(defLang.directory);\n\n        // now overwrite those with labels for the selected language\n        selectedLanguage(i);\n\n        if (i != DEFAULT_LANGUAGE) {\n            currDir = baseDir+newLang.directory+\"/\";\n            labels().load(currDir);\n            RaceFactory.current().loadRaceLangFiles(newLang.directory);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43528, "method_name": "defaultLangDir", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String defaultLangDir()    { return langDir(DEFAULT_LANGUAGE); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43529, "method_name": "currentLanguage", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String currentLanguage()   { return language(selectedLanguage()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43530, "method_name": "currentLangDir", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String currentLangDir()    { return langDir(selectedLanguage()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43531, "method_name": "currentLangSubdir", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String currentLangSubdir() { return langSubdir(selectedLanguage()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43532, "method_name": "currentFont", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String currentFont()       { return fontName(selectedLanguage()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43533, "method_name": "currentLocale", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Locale", "snippet": "    public Locale currentLocale()     { return locale(selectedLanguage()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43534, "method_name": "currentOrientation", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ComponentOrientation", "snippet": "    public ComponentOrientation currentOrientation()  { return orientation(selectedLanguage()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43535, "method_name": "loadLanguageFile", "class_name": "LanguageManager", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void loadLanguageFile() {\n        BufferedReader in = reader(baseDir+languageFile);\n        if (in == null) {\n            err(\"LanguageManager.loadLanguageFile() - can't find language file! \", baseDir, languageFile);\n            return;\n        }\n        try {\n            String input;\n            while ((input = in.readLine()) != null)\n                loadLanguageLine(input);\n            in.close();\n        }\n        catch (IOException e) {\n            err(\"LanguageManager.loadLanguageFile() -- IOException: \", e.toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43536, "method_name": "loadLanguageLine", "class_name": "LanguageManager", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void loadLanguageLine(String input) {\n        if (isComment(input))\n            return;\n\n        List<String> strings = substrings(input, ',',5);\n        String dirString = strings.get(0);\n        String subdirString = strings.get(1);\n        String nameString = strings.get(2);\n        String orientString = strings.get(3);\n        String fontString = strings.get(4);\n        languages.add(new Language(dirString, subdirString, nameString, orientString, fontString));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/util/LanguageManager.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43537, "method_name": "run", "class_name": "HiveExport", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void run() throws Exception{\n    if(!checkArgs(p)){\n      throw new IllegalArgumentException(\"job's args is illegal.\");\n    }\n    logger.info(\"props :\" + p.toString());\n    getPid();\n    try {\n      exeCmd(genCommand(p));\n\n    }catch (Exception e){\n      logger.error(\"exec spark-submit command failed, \" + e);\n      throw e;\n    }\n\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43538, "method_name": "cancel", "class_name": "HiveExport", "params": [], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancel() throws InterruptedException {\n    logger.info(\"this flow was killed.\");\n    throw new RuntimeException(\"cancel the flow.\");\n    //_job.119395.child-job02.log\n//    String azExecId = p.getProperty(CommonJobProperties.EXEC_ID);\n//    String jobId = p.getProperty(CommonJobProperties.JOB_ID);\n//    String workDir = p.getProperty(\"working.dir\");\n//    final String logFilePath = String.format(\"%s/_job.%s.%s.log\", workDir, azExecId, jobId);\n//    logger.info(\"log file path is: \" + logFilePath);\n//    HadoopJobUtils.killAllSpawnedHadoopJobs(logFilePath, logger);\n//    String killCmd = String.format(\"kill -9 %s\", getPid());\n//    logger.info(\"kill process by \" + killCmd);\n//    try {\n//      Runtime.getRuntime().exec(killCmd);\n//    } catch (Exception e){\n//      logger.error(e);\n//    }\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43539, "method_name": "getPid", "class_name": "HiveExport", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getPid() {\n    // get name representing the running Java virtual machine.\n    String name = ManagementFactory.getRuntimeMXBean().getName();\n    // get pid\n    String pid = name.split(\"@\")[0];\n    logger.info(\"HiveExport Pid is:\" + pid);\n    return pid;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43540, "method_name": "checkParamMap", "class_name": "HiveExport", "params": ["Properties", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "  private static boolean checkParamMap(Properties p, String key) {\n    return StringUtils.isEmpty(p.getProperty(key));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43541, "method_name": "checkArgs", "class_name": "HiveExport", "params": ["Properties"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "  private static boolean checkArgs(Properties p) {\n    if (p == null) {\n      logger.info(\"args can't be null\");\n      return false;\n    }\n    if (checkParamMap(p, DATABASE_NAME) || !(p.getProperty(DATABASE_NAME).endsWith(\"work\") || p.getProperty(DATABASE_NAME).endsWith(\"ind\"))) {\n      logger.info(\"args: \" + DATABASE_NAME + \" can't be null ,and must be end with 'work' or 'ind'\");\n      return false;\n    }\n    if (checkParamMap(p, TABEL_NAME)) {\n      logger.info(\"args: \" + TABEL_NAME + \"  Illegal Argument\");\n      return false;\n    }\n    if (checkParamMap(p, EXPORT_FILE_PATH)) {\n      logger.info(\"args: \" + EXPORT_FILE_PATH + \"  Illegal Argument\");\n      return false;\n    }\n    if (checkParamMap(p, EXPORT_FILE_NAME)) {\n      logger.info(\"args: \" + EXPORT_FILE_PATH + \"  Illegal Argument\");\n      return false;\n    }\n    if(checkParamMap(p, QUEUE)){\n      logger.info(\"args: \" + QUEUE + \"  Illegal Argument\");\n      return false;\n    }\n    logger.info(\"args is ok.\");\n    logger.info(\"DATABASE_NAME: \" + p.getProperty(DATABASE_NAME) + \",TABEL_NAME: \" + p.getProperty(TABEL_NAME) + \",PARTITION_NAME: \" + p.getProperty(PARTITION_NAME)\n            + \",PARTITION_VALUE: \" + p.getProperty(PARTITION_VALUE) + \",EXPORT_FILE_PATH: \" + p.getProperty(EXPORT_FILE_PATH) + \",EXPORT_FILE_NAME: \"\n            + p.getProperty(EXPORT_FILE_NAME) + \",QUEUE: \" + p.getProperty(QUEUE));\n    return true;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43542, "method_name": "genCommand", "class_name": "HiveExport", "params": ["Properties"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String genCommand(Properties p){\n    List<String> tmp = new ArrayList<String>();\n    tmp.add(getValue(p, SPARK_HOME, DEFAULT_SPARK_HOME) + \"/bin/spark-submit\");\n    tmp.add(\"--class \" + getValue(p, MAIN_CLASS, DEFAULT_MAIN_CLASS));\n    tmp.add(\"--executor-cores \" + getValue(p, EXECUTOR_CORES, \"2\"));\n    tmp.add(\"--executor-memory \" + getValue(p, EXECUTOR_MEMORY, \"1G\"));\n    tmp.add(\"--driver-memory \" + getValue(p, DRIVER_MEMORY, \"1G\"));\n    tmp.add(\"--master \" + getValue(p, MASTER, DEFAULT_MASTER));\n    tmp.add(\"--deploy-mode \" + getValue(p, DEPLOY_MODE, DEFAULT_DEPLOY_MODE));\n    tmp.add(\"--queue \" + p.getProperty(\"queue\"));\n    tmp.add(getValue(p, EXECUTE_JAR, DEFAULT_JAR));\n    // args\n    tmp.add(p.getProperty(DATABASE_NAME));\n    tmp.add(p.getProperty(TABEL_NAME));\n    tmp.add(StringUtils.isEmpty(p.getProperty(PARTITION_NAME)) ? \"null\" : p.getProperty(PARTITION_NAME));\n    tmp.add(StringUtils.isEmpty(p.getProperty(PARTITION_VALUE)) ? \"null\" : p.getProperty(PARTITION_VALUE));\n    tmp.add(p.getProperty(EXPORT_FILE_PATH));\n    tmp.add(p.getProperty(EXPORT_FILE_NAME));\n    // args\n    String cmd = String.join(\" \", tmp);;\n    logger.info(\"execute cmd: \" + cmd);\n    return String.join(\" \", tmp);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43543, "method_name": "executeHqlCommand", "class_name": "HiveExport", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "  public static String executeHqlCommand(String cmd) throws Exception {\n    logger.info(\"Start to run Hive shell script.\");\n    String result;\n    try {\n      result = Shell.execCommand(cmd);\n    }catch(Exception e){\n      logger.info(e);\n      throw new Exception(e);\n    }\n    logger.info(\"Run Hive shell script result\" + result);\n    return result;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43544, "method_name": "getValue", "class_name": "HiveExport", "params": ["Properties", "String", "String"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "  private static String getValue(Properties p, String key, String defaultValue){\n    if(StringUtils.isBlank(p.getProperty(key))){\n      return defaultValue;\n    }\n    return p.getProperty(key);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43545, "method_name": "exeCmd", "class_name": "HiveExport", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void exeCmd(String cmd) throws Exception {\n    logger.info(\"submit spark job ...\");\n    Process process = null;\n    try {\n      process = Runtime.getRuntime().exec(cmd);\n      final LogGobbler outputGobbler =\n              new LogGobbler(\n                      new InputStreamReader(process.getInputStream(), StandardCharsets.UTF_8),\n                      logger, Level.INFO, 30);\n      final LogGobbler errorGobbler =\n              new LogGobbler(\n                      new InputStreamReader(process.getErrorStream(), StandardCharsets.UTF_8),\n                      logger, Level.ERROR, 30);\n      outputGobbler.start();\n      errorGobbler.start();\n      int exitCode = -1;\n      try {\n        exitCode = process.waitFor();\n      } catch (final InterruptedException e) {\n        logger.error(\"Process interrupted. Exit code is \" + exitCode);\n        throw new InterruptedException();\n      }\n      // try to wait for everything to get logged out before exiting\n      outputGobbler.awaitCompletion(5000);\n      errorGobbler.awaitCompletion(5000);\n\n      if (exitCode != 0) {\n        logger.error(\"execute spark job failed, exitcode : \" + exitCode);\n        final String output =\n                new StringBuilder().append(\"Stdout:\\n\")\n                        .append(outputGobbler.getRecentLog()).append(\"\\n\\n\")\n                        .append(\"Stderr:\\n\").append(errorGobbler.getRecentLog())\n                        .append(\"\\n\").toString();\n        throw new RuntimeException(\"execute spark job failed, exitcode: \" + exitCode);\n      }\n      logger.info(\"execute spark job success.\");\n    } finally {\n      IOUtils.closeQuietly(process.getInputStream());\n      IOUtils.closeQuietly(process.getOutputStream());\n      IOUtils.closeQuietly(process.getErrorStream());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/util/HiveExport.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43546, "method_name": "main", "class_name": "DashuzhiDamo", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args)\n\t{\n\t\t/*\u4f7f\u7528\u9759\u6001\u7684valueOf\u65b9\u6cd5\u53ef\u4ee5\u5c06\u666e\u901a\u7684\u6570\u503c\u8f6c\u5316\u4e3a\u5927\u6570\u503c*/\n\t\tBigInteger a = BigInteger.valueOf(100);\n\t\tBigInteger b = BigInteger.valueOf(11);\n\t\t/*\u4e0d\u80fd\u4f7f\u7528+\uff0c*\uff0c\u7b49\u7b97\u6570\u8fd0\u7b97\u7b26\u5904\u7406\u5927\u6570\u503c\uff0c\n\t\t * \u800c\u8981\u7528\u5927\u6570\u503c\u7c7b\u4e2d\u7684add\u548cmultiply\u7b49\u65b9\u6cd5\u3002\n\t\t */\n\t\tBigInteger c = a.add(b);\n\t\tBigInteger d = c.multiply(b.add(BigInteger.valueOf(2)));\n\t\tSystem.out.println(c);\n\t\tSystem.out.println(d);\n\t\t\n\t}", "url": "https://raw.githubusercontent.com/hasaki-w-c/JAVA--/master/ray/DashuzhiDamo.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43547, "method_name": "minDistance", "class_name": "EditDistance", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int minDistance(String word1, String word2) {\n        int[][] dp = new int[word1.length() + 1][word2.length() + 1];\n\n        for(int i = 0; i < dp.length; i ++) {\n            for(int j = 0; j < dp[0].length; j ++) {\n                if(i == 0) {\n                    dp[0][j] = j;\n                } else if(j == 0) {\n                    dp[i][0] = i;\n                } else if(word1.charAt(i - 1) == word2.charAt(j - 1)) {\n                    dp[i][j] = dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = Math.min(Math.min(dp[i - 1][j], dp[i][j - 1]), dp[i - 1][j - 1]) + 1;\n                }\n            }\n        }\n\n        return dp[dp.length - 1][dp[0].length - 1];\n    }", "url": "https://raw.githubusercontent.com/nishantc1527/LeetCode/master/src/EditDistance.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43548, "method_name": "onCreateViewHolder", "class_name": "ChannelListAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "RecyclerView", "snippet": "    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup viewGroup, int viewType) {\n        LayoutInflater inflater = (LayoutInflater)\n                mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n        View view = inflater.inflate(viewType, viewGroup, false);\n        if (viewType == R.layout.channel_row) {\n            return new ChannelViewHolder(view);\n        } else if (viewType == R.layout.channel_user_row) {\n            return new UserViewHolder(view);\n        }\n        return null;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43549, "method_name": "onBindViewHolder", "class_name": "ChannelListAdapter", "params": ["RecyclerView", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBindViewHolder(RecyclerView.ViewHolder viewHolder, int position) {\n        final Node node = mNodes.get(position);\n        if (node.isChannel()) {\n            final IChannel channel = node.getChannel();\n            final ChannelViewHolder cvh = (ChannelViewHolder) viewHolder;\n            cvh.itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    if (mChannelClickListener != null) {\n                        mChannelClickListener.onChannelClick(channel);\n                    }\n                }\n            });\n\n            final boolean expandUsable = channel.getSubchannels().size() > 0 ||\n                    channel.getSubchannelUserCount() > 0;\n            cvh.mChannelExpandToggle.setImageResource(node.isExpanded() ?\n                    R.drawable.ic_action_expanded : R.drawable.ic_action_collapsed);\n            cvh.mChannelExpandToggle.setOnClickListener(new View.OnClickListener() {\n\n                @Override\n                public void onClick(View v) {\n                    mExpandedChannels.put(channel.getId(), !node.isExpanded());\n                    updateChannels(); // FIXME: very inefficient.\n                    notifyDataSetChanged();\n                }\n            });\n            // Dim channel expand toggle when no subchannels exist\n            cvh.mChannelExpandToggle.setEnabled(expandUsable);\n            cvh.mChannelExpandToggle.setVisibility(expandUsable ? View.VISIBLE : View.INVISIBLE);\n\n            cvh.mChannelName.setText(channel.getName());\n\n            int nameTypeface = Typeface.NORMAL;\n            if (mService != null && mService.isConnected()) {\n                IHumlaSession session = mService.getSession();\n                if (channel.equals(session.getSessionChannel())) {\n                    nameTypeface |= Typeface.BOLD;\n                    // Always italicize our current channel if it has a link.\n                    if (channel.getLinks().size() > 0) {\n                        nameTypeface |= Typeface.ITALIC;\n                    }\n                }\n                // Italicize channels in a link with our current channel.\n                if (channel.getLinks().contains(session.getSessionChannel())) {\n                    nameTypeface |= Typeface.ITALIC;\n                }\n            }\n            cvh.mChannelName.setTypeface(null, nameTypeface);\n\n            if (mShowChannelUserCount) {\n                cvh.mChannelUserCount.setVisibility(View.VISIBLE);\n                int userCount = channel.getSubchannelUserCount();\n                cvh.mChannelUserCount.setText(String.format(\"%d\", userCount));\n            } else {\n                cvh.mChannelUserCount.setVisibility(View.GONE);\n            }\n\n            // Pad the view depending on channel's nested level.\n            DisplayMetrics metrics = mContext.getResources().getDisplayMetrics();\n            float margin = node.getDepth() * TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 25, metrics);\n            cvh.mChannelHolder.setPadding((int) margin,\n                    cvh.mChannelHolder.getPaddingTop(),\n                    cvh.mChannelHolder.getPaddingRight(),\n                    cvh.mChannelHolder.getPaddingBottom());\n\n            cvh.mJoinButton.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    if (mService.isConnected())\n                        mService.getSession().joinChannel(channel.getId());\n                }\n            });\n\n            cvh.mMoreButton.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    ChannelMenu menu = new ChannelMenu(mContext, channel, mService, mDatabase, mFragmentManager);\n                    menu.showPopup(v);\n                }\n            });\n\n            cvh.itemView.setOnLongClickListener(new View.OnLongClickListener() {\n                @Override\n                public boolean onLongClick(View v) {\n                    cvh.mMoreButton.performClick();\n                    return true;\n                }\n            });\n        } else if (node.isUser()) {\n            final IUser user = node.getUser();\n            final UserViewHolder uvh = (UserViewHolder) viewHolder;\n            uvh.itemView.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    if (mUserClickListener != null) {\n                        mUserClickListener.onUserClick(user);\n                    }\n                }\n            });\n\n            uvh.mUserName.setText(user.getName());\n\n            final int typefaceStyle;\n            if (mService.isConnected() && mService.getSession().getSessionId() == user.getSession()) {\n                typefaceStyle = Typeface.BOLD;\n            } else {\n                typefaceStyle = Typeface.NORMAL;\n            }\n            uvh.mUserName.setTypeface(null, typefaceStyle);\n\n            uvh.mUserTalkHighlight.setImageDrawable(getTalkStateDrawable(user));\n\n            // Pad the view depending on channel's nested level.\n            DisplayMetrics metrics = mContext.getResources().getDisplayMetrics();\n            float margin = (node.getDepth() + 1) * TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, 25, metrics);\n            uvh.mUserHolder.setPadding((int) margin,\n                    uvh.mUserHolder.getPaddingTop(),\n                    uvh.mUserHolder.getPaddingRight(),\n                    uvh.mUserHolder.getPaddingBottom());\n\n            uvh.mMoreButton.setOnClickListener(new View.OnClickListener() {\n                @Override\n                public void onClick(View v) {\n                    UserMenu menu = new UserMenu(mContext, user, (MumlaService) mService,\n                            mFragmentManager, ChannelListAdapter.this);\n                    menu.showPopup(v);\n                }\n            });\n\n            uvh.itemView.setOnLongClickListener(new View.OnLongClickListener() {\n                @Override\n                public boolean onLongClick(View v) {\n                    uvh.mMoreButton.performClick();\n                    return true;\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43550, "method_name": "getItemCount", "class_name": "ChannelListAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemCount() {\n        return mNodes.size();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43551, "method_name": "getItemViewType", "class_name": "ChannelListAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getItemViewType(int position) {\n        Node node = mNodes.get(position);\n        if (node.isChannel()) {\n            return R.layout.channel_row;\n        } else if (node.isUser()) {\n            return R.layout.channel_user_row;\n        } else {\n            return 0;\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43552, "method_name": "getItemId", "class_name": "ChannelListAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        try {\n            return mNodes.get(position).getId();\n        } catch (RemoteException e) {\n            e.printStackTrace();\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43553, "method_name": "updateChannels", "class_name": "ChannelListAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateChannels() {\n        if (!mService.isConnected())\n            return;\n\n        IHumlaSession session = mService.getSession();\n        mNodes.clear();\n        for (int cid : mRootChannels) {\n            IChannel channel = session.getChannel(cid);\n            if (channel != null) {\n                constructNodes(null, channel, 0, mNodes);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43554, "method_name": "animateUserStateUpdate", "class_name": "ChannelListAdapter", "params": ["IUser", "RecyclerView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void animateUserStateUpdate(IUser user, RecyclerView view) {\n        long itemId = user.getSession() | USER_ID_MASK;\n        UserViewHolder uvh = (UserViewHolder) view.findViewHolderForItemId(itemId);\n        if (uvh != null) {\n            Drawable newState = getTalkStateDrawable(user);\n            if (!uvh.mUserTalkHighlight.getDrawable().getCurrent().getConstantState()\n                    .equals(newState.getConstantState())) {\n                uvh.mUserTalkHighlight.setImageDrawable(newState);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43555, "method_name": "getTalkStateDrawable", "class_name": "ChannelListAdapter", "params": ["IUser"], "throws": null, "modifiers": ["private"], "return_type": "Drawable", "snippet": "    private Drawable getTalkStateDrawable(IUser user) {\n        Resources resources = mContext.getResources();\n        if (user.isSelfDeafened()) {\n            return resources.getDrawable(R.drawable.outline_circle_deafened);\n        } else if (user.isDeafened()) {\n            return resources.getDrawable(R.drawable.outline_circle_server_deafened);\n        } else if (user.isSelfMuted()) {\n            return resources.getDrawable(R.drawable.outline_circle_muted);\n        } else if (user.isMuted()) {\n            return resources.getDrawable(R.drawable.outline_circle_server_muted);\n        } else if (user.isSuppressed()) {\n            return resources.getDrawable(R.drawable.outline_circle_suppressed);\n        } else if (user.getTalkState() == TalkState.TALKING\n                || user.getTalkState() == TalkState.SHOUTING\n                || user.getTalkState() == TalkState.WHISPERING) {\n            // TODO whisper and shouting?\n            return resources.getDrawable(R.drawable.outline_circle_talking_on);\n        } else {\n            // Passive drawables\n            if (user.getTexture() != null) {\n                // FIXME: cache bitmaps\n                Bitmap bitmap = BitmapFactory.decodeByteArray(user.getTexture(), 0, user.getTexture().length);\n                return new CircleDrawable(mContext.getResources(), bitmap);\n            } else {\n                return resources.getDrawable(R.drawable.outline_circle_talking_off);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43556, "method_name": "getUserPosition", "class_name": "ChannelListAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getUserPosition(int session) {\n        long itemId = session | USER_ID_MASK;\n        for (int i = 0; i < mNodes.size(); i++) {\n            Node node = mNodes.get(i);\n            try {\n                if (node.getId() == itemId) {\n                    return i;\n                }\n            } catch (RemoteException e) {\n                e.printStackTrace();\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43557, "method_name": "getChannelPosition", "class_name": "ChannelListAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getChannelPosition(int channelId) {\n        long itemId = channelId | CHANNEL_ID_MASK;\n        for (int i = 0; i < mNodes.size(); i++) {\n            Node node = mNodes.get(i);\n            try {\n                if (node.getId() == itemId) {\n                    return i;\n                }\n            } catch (RemoteException e) {\n                e.printStackTrace();\n            }\n        }\n        return -1;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43558, "method_name": "setOnUserClickListener", "class_name": "ChannelListAdapter", "params": ["OnUserClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnUserClickListener(OnUserClickListener listener) {\n        mUserClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43559, "method_name": "setOnChannelClickListener", "class_name": "ChannelListAdapter", "params": ["OnChannelClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnChannelClickListener(OnChannelClickListener listener) {\n        mChannelClickListener = listener;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43560, "method_name": "setShowChannelUserCount", "class_name": "ChannelListAdapter", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setShowChannelUserCount(boolean showUserCount) {\n        mShowChannelUserCount = showUserCount;\n        notifyDataSetChanged();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43561, "method_name": "constructNodes", "class_name": "ChannelListAdapter", "params": ["Node", "IChannel", "int", "List<Node>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void constructNodes(Node parent, IChannel channel, int depth,\n                                List<Node> nodes) {\n        Node channelNode = new Node(parent, depth, channel);\n        nodes.add(channelNode);\n\n        Boolean expandSetting = mExpandedChannels.get(channel.getId());\n        if ((expandSetting == null && channel.getSubchannelUserCount() == 0)\n                || (expandSetting != null && !expandSetting)) {\n            channelNode.setExpanded(false);\n            return; // Skip adding children of contracted/empty channels.\n        }\n\n        for (IUser user : channel.getUsers()) {\n            if (user == null) {\n                continue;\n            }\n            nodes.add(new Node(channelNode, depth, user));\n        }\n        for (IChannel subc : channel.getSubchannels()) {\n            constructNodes(channelNode, subc, depth + 1, nodes);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43562, "method_name": "setService", "class_name": "ChannelListAdapter", "params": ["IHumlaService"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setService(IHumlaService service) {\n        mService = service;\n        if (service.getConnectionState() == HumlaService.ConnectionState.CONNECTED) {\n            updateChannels();\n            notifyDataSetChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43563, "method_name": "onLocalUserStateUpdated", "class_name": "ChannelListAdapter", "params": ["IUser"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onLocalUserStateUpdated(final IUser user) {\n        notifyDataSetChanged();\n\n        // Add or remove registered user from local mute history\n        final Server server = mService.getTargetServer();\n\n        if (user.getUserId() >= 0 && server.isSaved()) {\n            new Thread(new Runnable() {\n                @Override\n                public void run() {\n                    if (user.isLocalMuted()) {\n                        mDatabase.addLocalMutedUser(server.getId(), user.getUserId());\n                    } else {\n                        mDatabase.removeLocalMutedUser(server.getId(), user.getUserId());\n                    }\n                    if (user.isLocalIgnored()) {\n                        mDatabase.addLocalIgnoredUser(server.getId(), user.getUserId());\n                    } else {\n                        mDatabase.removeLocalIgnoredUser(server.getId(), user.getUserId());\n                    }\n                }\n            }).start();\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": "RecyclerView", "implements": ["UserMenu"], "modifiers": ["public"]}}, {"id": 43564, "method_name": "isChannel", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isChannel() {\n            return mChannel != null;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43565, "method_name": "isUser", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isUser() {\n            return mUser != null;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43566, "method_name": "getParent", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Node", "snippet": "        public Node getParent() {\n            return mParent;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43567, "method_name": "getChannel", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IChannel", "snippet": "        public IChannel getChannel() {\n            return mChannel;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43568, "method_name": "getUser", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IUser", "snippet": "        public IUser getUser() {\n            return mUser;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43569, "method_name": "getId", "class_name": "Node", "params": [], "throws": ["RemoteException"], "modifiers": ["public"], "return_type": "Long", "snippet": "        public Long getId() throws RemoteException {\n            // Apply flags to differentiate integer-length identifiers\n            if (isChannel()) {\n                return CHANNEL_ID_MASK | mChannel.getId();\n            } else if (isUser()) {\n                return USER_ID_MASK | mUser.getSession();\n            }\n            return null;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43570, "method_name": "getDepth", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "        public int getDepth() {\n            return mDepth;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43571, "method_name": "isExpanded", "class_name": "Node", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isExpanded() {\n            return mExpanded;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43572, "method_name": "setExpanded", "class_name": "Node", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setExpanded(boolean expanded) {\n            mExpanded = expanded;\n        }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/channel/ChannelListAdapter.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["static", "private"]}}, {"id": 43573, "method_name": "addGroup", "class_name": "UserHelper", "params": ["String", "int", "Set<Integer>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int addGroup(String title, int parentId, Set<Integer> queueIds) throws Exception {\n        try (var con = conPoolRoot.getDBConnectionFromPool()) {\n            Group group = new Group();\n            group.setTitle(title);\n            group.setComment(\"\");\n            group.setConfig(\"\");\n            group.setParentId(parentId);\n            if (queueIds != null)\n                group.setQueueIds(queueIds);\n            new UserGroupDAO(con).updateGroup(group);\n\n            Assert.assertTrue(group.getId() > 0);\n\n            con.commit();\n\n            return group.getId();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/itest/org/bgerp/itest/helper/UserHelper.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43574, "method_name": "addUser", "class_name": "UserHelper", "params": ["String", "String", "Iterable<UserGroup>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int addUser(String title, String login, Iterable<UserGroup> groups) throws Exception {\n        try (var con = conPoolRoot.getDBConnectionFromPool()) {\n            var dao = new UserDAO(con);\n            \n            var user = new User();\n            user.setTitle(title);\n            user.setLogin(login);\n            user.setPassword(login);\n            dao.updateUser(user);\n\n            Assert.assertTrue(user.getId() > 0);\n\n            if (groups != null)\n                for (var group : groups)\n                    dao.addUserGroup(user.getId(), group);\n\n            con.commit();\n\n            return user.getId();\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/srcx/itest/org/bgerp/itest/helper/UserHelper.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43575, "method_name": "with", "class_name": "InputTextHelper", "params": ["Activity"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "    public static Builder with(Activity activity) {\n        return new Builder(activity);\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43576, "method_name": "addViews", "class_name": "InputTextHelper", "params": ["List<TextView>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addViews(List<TextView> views) {\n        if (views == null) {\n            return;\n        }\n\n        if (mViewSet == null) {\n            mViewSet = views;\n        } else {\n            mViewSet.addAll(views);\n        }\n\n        for (TextView view : views) {\n            view.addTextChangedListener(this);\n        }\n\n        // \u89e6\u53d1\u4e00\u6b21\u76d1\u542c\n        notifyChanged();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43577, "method_name": "addViews", "class_name": "InputTextHelper", "params": ["TextView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addViews(TextView... views) {\n        if (views == null) {\n            return;\n        }\n\n        if (mViewSet == null) {\n            mViewSet = new ArrayList<>(views.length);\n        }\n\n        for (TextView view : views) {\n            // \u907f\u514d\u91cd\u590d\u6dfb\u52a0\n            if (!mViewSet.contains(view)) {\n                view.addTextChangedListener(this);\n                mViewSet.add(view);\n            }\n        }\n        // \u89e6\u53d1\u4e00\u6b21\u76d1\u542c\n        notifyChanged();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43578, "method_name": "removeViews", "class_name": "InputTextHelper", "params": ["TextView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeViews(TextView... views) {\n        if (mViewSet != null && mViewSet.size() > 0) {\n            for (TextView view : views) {\n                view.removeTextChangedListener(this);\n                mViewSet.remove(view);\n            }\n            // \u89e6\u53d1\u4e00\u6b21\u76d1\u542c\n            notifyChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43579, "method_name": "removeAllViews", "class_name": "InputTextHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeAllViews() {\n        if (mViewSet == null) {\n            return;\n        }\n\n        for (TextView view : mViewSet) {\n            view.removeTextChangedListener(this);\n        }\n        mViewSet.clear();\n        mViewSet = null;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43580, "method_name": "setListener", "class_name": "InputTextHelper", "params": ["OnInputTextListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setListener(OnInputTextListener listener) {\n        mListener = listener;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43581, "method_name": "beforeTextChanged", "class_name": "InputTextHelper", "params": ["CharSequence", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void beforeTextChanged(CharSequence s, int start, int count, int after) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43582, "method_name": "onTextChanged", "class_name": "InputTextHelper", "params": ["CharSequence", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTextChanged(CharSequence s, int start, int before, int count) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43583, "method_name": "afterTextChanged", "class_name": "InputTextHelper", "params": ["Editable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterTextChanged(Editable s) {\n        notifyChanged();\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43584, "method_name": "notifyChanged", "class_name": "InputTextHelper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyChanged() {\n        if (mViewSet == null) {\n            return;\n        }\n\n        // \u91cd\u65b0\u904d\u5386\u6240\u6709\u7684\u8f93\u5165\n        for (TextView view : mViewSet) {\n            if (\"\".equals(view.getText().toString())) {\n                setEnabled(false);\n                return;\n            }\n        }\n\n        if (mListener != null) {\n            setEnabled(mListener.onInputChange(this));\n        } else {\n            setEnabled(true);\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43585, "method_name": "setEnabled", "class_name": "InputTextHelper", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setEnabled(boolean enabled) {\n        if (enabled == mView.isEnabled()) {\n            return;\n        }\n\n        if (enabled) {\n            //\u542f\u7528View\u7684\u4e8b\u4ef6\n            mView.setEnabled(true);\n            if (isAlpha) {\n                //\u8bbe\u7f6e\u4e0d\u900f\u660e\n                mView.setAlpha(1f);\n            }\n        } else {\n            //\u7981\u7528View\u7684\u4e8b\u4ef6\n            mView.setEnabled(false);\n            if (isAlpha) {\n                //\u8bbe\u7f6e\u534a\u900f\u660e\n                mView.setAlpha(0.5f);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["final", "public"]}}, {"id": 43586, "method_name": "addView", "class_name": "Builder", "params": ["TextView"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder addView(TextView view) {\n            mViewSet.add(view);\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public", "static"]}}, {"id": 43587, "method_name": "setMain", "class_name": "Builder", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setMain(View view) {\n            mView = view;\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public", "static"]}}, {"id": 43588, "method_name": "setAlpha", "class_name": "Builder", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setAlpha(boolean alpha) {\n            isAlpha = alpha;\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public", "static"]}}, {"id": 43589, "method_name": "setListener", "class_name": "Builder", "params": ["OnInputTextListener"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "        public Builder setListener(OnInputTextListener listener) {\n            mListener = listener;\n            return this;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public", "static"]}}, {"id": 43590, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "InputTextHelper", "snippet": "        public InputTextHelper build(){\n            /** \u6587\u672c\u8f93\u5165\u8f85\u52a9\u7c7b */\n            InputTextHelper helper = new InputTextHelper(mView, isAlpha);\n            helper.addViews(mViewSet);\n            helper.setListener(mListener);\n            mActivity.getApplication().registerActivityLifecycleCallbacks(new TextInputLifecycle(mActivity, helper));\n            return helper;\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public", "static"]}}, {"id": 43591, "method_name": "onActivityCreated", "class_name": "TextInputLifecycle", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityCreated(@NonNull Activity activity, Bundle savedInstanceState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["static", "private"]}}, {"id": 43592, "method_name": "onActivityStarted", "class_name": "TextInputLifecycle", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityStarted(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["static", "private"]}}, {"id": 43593, "method_name": "onActivityResumed", "class_name": "TextInputLifecycle", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityResumed(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["static", "private"]}}, {"id": 43594, "method_name": "onActivityPaused", "class_name": "TextInputLifecycle", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityPaused(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["static", "private"]}}, {"id": 43595, "method_name": "onActivityStopped", "class_name": "TextInputLifecycle", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityStopped(@NonNull Activity activity) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["static", "private"]}}, {"id": 43596, "method_name": "onActivitySaveInstanceState", "class_name": "TextInputLifecycle", "params": ["Activity", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivitySaveInstanceState(@NonNull Activity activity, @NonNull Bundle outState) {}", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["static", "private"]}}, {"id": 43597, "method_name": "onActivityDestroyed", "class_name": "TextInputLifecycle", "params": ["Activity"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void onActivityDestroyed(@NonNull Activity activity) {\n            if (mActivity != null && mActivity == activity) {\n                mTextHelper.removeAllViews();\n                mActivity.getApplication().registerActivityLifecycleCallbacks(this);\n                mTextHelper = null;\n                mActivity = null;\n            }\n        }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/helper/InputTextHelper.java", "stars": "1", "class_props": {"extends": null, "implements": ["Application"], "modifiers": ["static", "private"]}}, {"id": 43598, "method_name": "create", "class_name": "ChannelFactory", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ChannelFactory", "snippet": "    public static ChannelFactory create() {\n        return new ChannelFactory();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/core/grpc/ChannelFactory.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43599, "method_name": "createChannel", "class_name": "ChannelFactory", "params": ["HostAndPort"], "throws": null, "modifiers": ["public"], "return_type": "Channel", "snippet": "    public Channel createChannel(HostAndPort endpoint) {\n        NettyChannelBuilder nettyChannelBuilder = createChannelBuilder(endpoint);\n        return nettyChannelBuilder.build();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/core/grpc/ChannelFactory.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43600, "method_name": "createChannelBuilder", "class_name": "ChannelFactory", "params": ["HostAndPort"], "throws": null, "modifiers": ["private"], "return_type": "NettyChannelBuilder", "snippet": "    private NettyChannelBuilder createChannelBuilder(HostAndPort endpoint) {\n        return NettyChannelBuilder.forAddress(endpoint.getHost(), endpoint.getPort())\n                .negotiationType(NegotiationType.PLAINTEXT)\n                .intercept(metadataInterceptor());\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/core/grpc/ChannelFactory.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43601, "method_name": "metadataInterceptor", "class_name": "ChannelFactory", "params": [], "throws": null, "modifiers": ["private"], "return_type": "ClientInterceptor", "snippet": "    private ClientInterceptor metadataInterceptor() {\n        ClientInterceptor interceptor = new ClientInterceptor() {\n            @Override\n            public <ReqT, RespT> ClientCall<ReqT, RespT> interceptCall(\n                    final io.grpc.MethodDescriptor<ReqT, RespT> method, CallOptions callOptions, final Channel next) {\n                return new ClientInterceptors.CheckedForwardingClientCall<ReqT, RespT>(next.newCall(method, callOptions)) {\n                    @Override\n                    protected void checkedStart(Listener<RespT> responseListener, Metadata headers)\n                            throws StatusException {\n                        for (String entry : new LinkedList<>(Collections.singletonList(\"a\"))) {\n                            Metadata.Key<String> key = Metadata.Key.of(\"x\", Metadata.ASCII_STRING_MARSHALLER);\n                            headers.put(key, \"abc\");\n                        }\n                        delegate().start(responseListener, headers);\n                    }\n                };\n            }\n        };\n\n        return interceptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/src/main/java/vn/zalopay/benchmark/core/grpc/ChannelFactory.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43602, "method_name": "getCount", "class_name": "TestCenterListAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return this.list.size();\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/TestCenterListAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 43603, "method_name": "getItem", "class_name": "TestCenterListAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/TestCenterListAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 43604, "method_name": "getItemId", "class_name": "TestCenterListAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/TestCenterListAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 43605, "method_name": "getView", "class_name": "TestCenterListAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent) {\n        View row = convertView;\n        if(row == null){\n            LayoutInflater inflater = getLayoutInflater();\n            row = inflater.inflate(this.resource, parent, false);\n        }\n\n        TestCenter testCenter = list.get(position);\n\n        TextView testCenterName = row.findViewById(R.id.test_center_item_name);\n        TextView testCenterDistrict = row.findViewById(R.id.test_center_item_district);\n        TextView testCenterContact =  row.findViewById(R.id.test_center_item_contact);\n\n        testCenterName.setText(testCenter.Name);\n        testCenterDistrict.setText(testCenter.District);\n        testCenterContact.setText(testCenter.Contact);\n\n        return row;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/TestCenterListAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 43606, "method_name": "getLayoutInflater", "class_name": "TestCenterListAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "LayoutInflater", "snippet": "    private LayoutInflater getLayoutInflater(){\n        return (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/TestCenterListAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 43607, "method_name": "getFieldOrder", "class_name": "TaskInfoRequest", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"NDR\", \"flavor\", \"task_info_outCnt\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/TaskInfoRequest.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 43608, "method_name": "esc", "class_name": "CustomUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String esc(final String s) {\n        return s.replace(\"'\", \"''\");\n    }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/dynsql/CustomUtil.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43609, "method_name": "resetSdk", "class_name": "TracingViewModel", "params": ["Runnable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void resetSdk(Runnable onDeleteListener) {\n\t\tif (tracingEnabledLiveData.getValue()) DP3T.stop(getApplication());\n\t\tDP3T.clearData(getApplication(), onDeleteListener);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43610, "method_name": "invalidateTracingStatus", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void invalidateTracingStatus() {\n\t\tTracingStatus status = DP3T.getStatus(getApplication());\n\t\ttracingStatusLiveData.setValue(status);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43611, "method_name": "getTracingEnabledLiveData", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<Boolean>", "snippet": "\tpublic LiveData<Boolean> getTracingEnabledLiveData() {\n\t\treturn tracingEnabledLiveData;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43612, "method_name": "getSelfOrContactExposedLiveData", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<Pair>", "snippet": "\tpublic LiveData<Pair<Boolean, Boolean>> getSelfOrContactExposedLiveData() {\n\t\treturn exposedLiveData;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43613, "method_name": "getErrorsLiveData", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<Collection>", "snippet": "\tpublic LiveData<Collection<TracingStatus.ErrorState>> getErrorsLiveData() {\n\t\treturn errorsLiveData;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43614, "method_name": "getAppStatusLiveData", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<TracingStatusInterface>", "snippet": "\tpublic LiveData<TracingStatusInterface> getAppStatusLiveData() {\n\t\treturn appStatusLiveData;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43615, "method_name": "getTracingStatusLiveData", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<TracingStatus>", "snippet": "\tpublic LiveData<TracingStatus> getTracingStatusLiveData() {\n\t\treturn tracingStatusLiveData;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43616, "method_name": "getBluetoothEnabledLiveData", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiveData<Boolean>", "snippet": "\tpublic LiveData<Boolean> getBluetoothEnabledLiveData() {\n\t\treturn bluetoothEnabledLiveData;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43617, "method_name": "setTracingEnabled", "class_name": "TracingViewModel", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setTracingEnabled(boolean enabled) {\n\t\tif (enabled) {\n\t\t\tDP3T.start(getApplication());\n\t\t} else {\n\t\t\tDP3T.stop(getApplication());\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43618, "method_name": "getTracingStatusInterface", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "TracingStatusInterface", "snippet": "\tpublic TracingStatusInterface getTracingStatusInterface() {\n\t\treturn tracingStatusInterface;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43619, "method_name": "sync", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void sync() {\n\t\tnew Thread() {\n\t\t\t@Override\n\t\t\tpublic void run() {\n\t\t\t\tDP3T.sync(getApplication());\n\t\t\t}\n\t\t}.start();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43620, "method_name": "invalidateService", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void invalidateService() {\n\t\tif (tracingEnabledLiveData.getValue()) {\n\t\t\tDP3T.start(getApplication());\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43621, "method_name": "invalidateBluetoothState", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void invalidateBluetoothState() {\n\t\tbluetoothEnabledLiveData.setValue(DeviceFeatureHelper.isBluetoothEnabled());\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43622, "method_name": "onCleared", "class_name": "TracingViewModel", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCleared() {\n\t\tgetApplication().unregisterReceiver(tracingStatusBroadcastReceiver);\n\t\tgetApplication().unregisterReceiver(bluetoothReceiver);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-app-android/develop/app/src/main/java/org/dpppt/android/app/viewmodel/TracingViewModel.java", "stars": "277", "class_props": {"extends": "AndroidViewModel", "implements": null, "modifiers": ["public"]}}, {"id": 43623, "method_name": "getAccountCount", "class_name": "Dispatch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getAccountCount()\n\t{\n\t\treturn accountCount;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/dispatch/model/Dispatch.java", "stars": "12", "class_props": {"extends": "IdTitleComment", "implements": null, "modifiers": ["public"]}}, {"id": 43624, "method_name": "setAccountCount", "class_name": "Dispatch", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setAccountCount( int accountCount )\n\t{\n\t\tthis.accountCount = accountCount;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/dispatch/model/Dispatch.java", "stars": "12", "class_props": {"extends": "IdTitleComment", "implements": null, "modifiers": ["public"]}}, {"id": 43625, "method_name": "getLayoutId", "class_name": "LayoutIdUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int getLayoutId(String type) {\n        return LayoutType.valueOf(type).layoutId;\n    }", "url": "https://raw.githubusercontent.com/Geekholt/Practice-CustomView/master/app/src/main/java/com/geekholt/practiceui/util/LayoutIdUtil.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43626, "method_name": "onClick", "class_name": "NavigationPageRenderer_ClickListener", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onClick (android.view.View p0)\n\t{\n\t\tn_onClick (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer_ClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43627, "method_name": "n_onClick", "class_name": "NavigationPageRenderer_ClickListener", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onClick (android.view.View p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer_ClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43628, "method_name": "monodroidAddReference", "class_name": "NavigationPageRenderer_ClickListener", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer_ClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43629, "method_name": "monodroidClearReferences", "class_name": "NavigationPageRenderer_ClickListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc64720bb2db43a66fe9/NavigationPageRenderer_ClickListener.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43630, "method_name": "getFieldOrder", "class_name": "NotifyServerRegisterCheck64Request", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"pad1\", \"nameLow\", \"nameHigh\", \"pad2\", \"namelen\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/NotifyServerRegisterCheck64Request.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 43631, "method_name": "main", "class_name": "CharOccurance2", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tString str=\"You have no choice other than following me!\";\n\t\tString replacedstring = str.replaceAll(\"[^o]\", \"\");\n\t\tSystem.out.println(\"Occurancce of o is :\" + replacedstring.length());\n\n\t}", "url": "https://raw.githubusercontent.com/AvinashDurai/MyCodes/master/javapractice/CharOccurance2.java", "stars": "19", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43632, "method_name": "dropdownSelect", "class_name": "Day14ZalandoUK", "params": ["List<WebElement>", "String"], "throws": ["InterruptedException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void dropdownSelect(List<WebElement> eleSelect, String strSelect) throws InterruptedException\n\t{\n\t\tfor(int i=0;i<eleSelect.size();i++)\n\t\t{\n\t\t\tif (eleSelect.get(i).getAttribute(\"innerHTML\").contains(strSelect))\n\t\t\t{\n\t\t\t\teleSelect.get(i).click();\n\t\t\t\tSystem.out.println(eleSelect.get(i).getAttribute(\"innerHTML\")+\" selected\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tThread.sleep(1000);\n\t\tdriver.findElementByXPath(\"//button[text()='Save']\").click();\n\t}", "url": "https://raw.githubusercontent.com/Janani-Palani/MyLearningSpace/master/Day14ZalandoUK.java", "stars": "24", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43633, "method_name": "main", "class_name": "Day14ZalandoUK", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\tDay14ZalandoUK obj=new Day14ZalandoUK();\n//Launch Zalando site\n\tSystem.setProperty(\"webdriver.chrome.driver\", \"./Drivers/chromedriver.exe\");\n\tSystem.setProperty(\"webdriver.chrome.silentOutput\", \"true\");\n\tdriver = new ChromeDriver();\n\tdriver.get(\"https://www.zalando.com/\");\n\t\n//Handle alert\n\tAlert alert = driver.switchTo().alert();\n\tSystem.out.println(\"Alert message: \"+alert.getText());\n\talert.accept();\n\t\n//Check if page load is successful\n\tdriver.manage().window().maximize();\n\tdriver.manage().timeouts().implicitlyWait(30, TimeUnit.SECONDS);\n\tString title = driver.getTitle();\n\tif (title.contains(\"Zalando\"))\n\t\tSystem.out.println(\"Zalando launched successfully: \" + title);\n\telse\n\t\tSystem.err.println(\"Zalando Study Abroad launch failed\");\n\t\n//Mouse over on Colleges and click MS in Computer Science &Engg under MS Colleges \n\tActions build=new Actions(driver);\n\tWebDriverWait wait=new WebDriverWait(driver,20);\n\t\n//Click on Zalando.uk \n\tdriver.findElementByXPath(\"//a[text()='Zalando.uk']\").click();\n\t\n//Click Women--> Clothing and click Coat  \n\tThread.sleep(500);\n\tdriver.findElementByXPath(\"//span[text()='Women']\").click();\n\tdriver.findElementByXPath(\"//span[text()='Clothing']\").click();\n\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"(//a[text()='Coats'])[3]\")));\n\tdriver.findElementByXPath(\"(//a[text()='Coats'])[3]\").click();\n\tThread.sleep(1000);\n\tif(driver.findElementByXPath(\"//h1/span\").getText().contains(\"Women's Coats\"))\n\t{\n\t\tSystem.out.println(\"Screen navigated to Women's coats\");\n\t}\n\t\n//Choose Material as cotton (100%) and Length as thigh-length \n\tThread.sleep(2000);\n\t  try \n\t  {\n\t\t  wait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//button[contains(text(),'OK')]\")));\n\t\t  driver.findElementByXPath(\"//button[contains(text(),'OK')]\").click();\n\t  }\n\t catch(Exception e)\n\t  {\n\t\t System.out.println(\"Pop-up did not occur\");\n\t  }\n\tfinally \n\t{\n\t\tdriver.findElementByXPath(\"//span[text()='Material']\").click();\n\t\tList<WebElement> eleMaterials = driver.findElementsByXPath(\"//button[contains(@aria-label,'Material')]/parent::div//ul/li/span\");\n\t\tobj.dropdownSelect(eleMaterials, \"cotton (100%)\");\n\t\tThread.sleep(1000);\n\t\tdriver.findElementByXPath(\"//span[text()='Length']\").click();\n\t\tList<WebElement> eleLength = driver.findElementsByXPath(\"//span[text()='Length']/ancestor::button/following-sibling::div//ul/li/span\");\n\t\tobj.dropdownSelect(eleLength, \"thigh-length\");\n\n//Click on Q/S designed by MANTEL - Parka coat \n\t\tThread.sleep(1000);\n\t\twait.until(ExpectedConditions.elementToBeClickable(driver.findElementByXPath(\"//div[contains(text(),'MANTEL')]/ancestor::div[3]//img\")));\n\t\tdriver.findElementByXPath(\"//div[contains(text(),'MANTEL')]/ancestor::div[3]/a\").click();\n\t\tThread.sleep(1000);\n\t\tif(driver.getTitle().contains(\"MANTEL\"))\n\t\t{\n\t\t\tSystem.out.println(\"Navigated to Q/S Designed by MANTEL Parka COAT\");\n\t\t}\n\t\n//Check the availability for Color as Olive and Size as 'M' and if the previous preference is not available, check  availability for Color Navy and Size 'M' \n\t\tdriver.findElementByXPath(\"(//a[contains(@href,'parka-olive')])[2]//img\").click();\n\t\tThread.sleep(1000);\n\t\tif(driver.findElementByXPath(\"//h2[text()='Out of stock']\").isDisplayed())\n\t\t{\n\t\t\tdriver.findElementByXPath(\"(//a[contains(@href,'parka')]//img[@alt='navy'])[2]\").click();\n\t\t\tSystem.out.println(\"Color navy selected as olive is out of stock\");\n\t\t}\n\t\telse \n\t\t{\n\t\t\tdriver.findElementByXPath(\"(//a[contains(@href,'parka-olive')])[2]//img\").click();\n\t\t\tSystem.out.println(\"Color olive selected\");\n\t\t}\n\t\tdriver.findElementByXPath(\"//span[text()='Choose your size']\").click();\n\t\tThread.sleep(1000);\n\t\tdriver.findElementByXPath(\"//span[text()='M']/ancestor::li[1]\").click();\n\t\t\n//Add to bag only if Standard Delivery is free \n\t\tif(driver.findElementByXPath(\"//span[text()='Standard delivery']/parent::div//span[text()='Free']\").isDisplayed())\n\t\t{\n\t\t\tSystem.out.println(\"Standard delivery is free\");\n\t\t\tdriver.findElementByXPath(\"//span[text()='Add to bag']/parent::button\").click();\n\t\t\tSystem.out.println(\"Item added to bag\");\n\t\t}\n\t\telse fail(\"Standard delivery charge is applied\");\n\t\t\n//Mouse over on Your Bag and Click on \"Go to Bag\" \n\t\tbuild.moveToElement(driver.findElementByXPath(\"(//a[contains(@href,'cart')])[3]\")).perform();\n\t\tThread.sleep(1000);\n\t\tdriver.findElementByXPath(\"//div[text()='Go to bag']/parent::a\").click();\n\t\tThread.sleep(1000);\n\t\tString coatColor = driver.findElementByXPath(\"//a[contains(text(),'MANTEL - Parka')]\").getText();\n\t\tif(coatColor.contains(\"navy\"))\n\t\t{\n\t\t\tSystem.out.println(\"MANTEL Parka Navy coat is displayed in bag\");\n\t\t}\n\t\telse System.out.println(\"MANTEL Parka Olive coat is displayed in bag\");\n\t\t\n//Capture the Estimated Deliver Date and print \n\t\tString rawDeldate = driver.findElementByXPath(\"//div[@data-id='delivery-estimation']/span\").getText();\n\t\tString[] split = rawDeldate.split(\",\");\n\t\tString estimatedDelDate = split[0];\n\t\tSystem.out.println(\"Estimated delivery date: \"+estimatedDelDate);\n\t\t\n//Mouse over on FREE DELIVERY & RETURNS*, get the tool tip text and print \n\t\tbuild.moveToElement(driver.findElementByXPath(\"//a[contains(text(),'Free delivery')]/parent::span\")).pause(1000).perform();\n\t\tString toolTipText = driver.findElementByXPath(\"//a[contains(text(),'Free delivery')]/parent::span\").getAttribute(\"title\");\n\t\tSystem.out.println(\"Retrieved tool tip message: \"+toolTipText);\n\t\tThread.sleep(1000);\n\t\tbuild.moveToElement(driver.findElementByXPath(\"//a[contains(text(),'Free delivery')]/parent::span\")).click().build().perform();\n\t\t\n//Click on Start chat in the Start chat and go to the new window\n\t\tThread.sleep(2000);\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementByXPath(\"//span[text()='Start chat']/parent::button\")));\n\t\tJavascriptExecutor click =(JavascriptExecutor) driver;\n\t\tclick.executeScript(\"arguments[0].click();\", driver.findElementByXPath(\"//span[text()='Start chat']/parent::button\"));\n\t\tSet<String> setHandle = driver.getWindowHandles();\n\t\tList<String> listHandle=new ArrayList<String> (setHandle);\n\t\tdriver.switchTo().window(listHandle.get(1));\n\t\t\n//Enter you first name and a dummy email and click Start Chat\n\t\tdriver.findElementById(\"prechat_customer_name_id\").sendKeys(\"Janani\");\n\t\tdriver.findElementById(\"prechat_customer_email_id\").sendKeys(\"jann@cactus.com\");\n\t\tdriver.findElementById(\"prechat_submit\").click();\n\t\t\n//Type Hi, click Send and print the reply message and close the chat window\n\t\twait.until(ExpectedConditions.visibilityOf(driver.findElementById(\"liveAgentChatTextArea\")));\n\t\tdriver.findElementById(\"liveAgentChatTextArea\").sendKeys(\"Hi\");\n\t\tThread.sleep(500);\n\t\tdriver.findElementByXPath(\"//button[text()='Send']\").click();\n\t\tString chatReplyMsg = driver.findElementByXPath(\"//span[@class='messageText']\").getText();\n\t\tSystem.out.println(\"Chat box replay message: \"+chatReplyMsg);\t\n\t}\n}", "url": "https://raw.githubusercontent.com/Janani-Palani/MyLearningSpace/master/Day14ZalandoUK.java", "stars": "24", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43634, "method_name": "main", "class_name": "C3P0Demo1", "params": ["String"], "throws": ["SQLException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws SQLException {\n        //1\u3001\u521b\u5efa\u6570\u636e\u5e93\u8fde\u63a5\u6c60\n        DataSource ds = new ComboPooledDataSource();\n        //2\u3001\u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61\n        Connection conn = ds.getConnection();\n\n        //3\u3001\u6253\u5370\n        System.out.println(conn);\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/datasource/c3p0/C3P0Demo1.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43635, "method_name": "main", "class_name": "MethodsReview", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tSystem.out.println(getStr());\n\t\t\n\t\t//    hello\n\t\tString str = getStr();\n\t\tSystem.out.println(str);\n\t\t\n\t\t// int num = getStr();\n\t\t\n\t\t//int age = 15;\n\t\tString ageGroup = getAgeGroup(150);\n\t\tSystem.out.println(ageGroup);\n\t\t\n\t\tdisplayNumber(6);\n\t\tdisplayNumber(9.9);\n\t\t\n\t\tSystem.out.println(concat(\"hello\", \"World\"));\n\t\tSystem.out.println(concat(\"java\", \"is\", \"cool\"));\n\t\t\n\t\t//             012345\n\t\tString str1 = \"orange\";\n\t\t//str1 = str1.substring(1);\n\t\tstr1 = str1.substring(0, 2);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/MethodsReview.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43636, "method_name": "getStr", "class_name": "MethodsReview", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getStr() {\n\t\tif(9 > 4) {\n\t\t\treturn \"hello\";\n\t\t}else {\n\t\t\treturn \"apple\";\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/MethodsReview.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43637, "method_name": "getAgeGroup", "class_name": "MethodsReview", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String getAgeGroup(int age) {\n\t\tif(age >= 1 && age <= 12) {\n\t\t\treturn \"kid\";\n\t\t}else if(age >= 13 && age <= 18) {\n\t\t\treturn \"teen\";\n\t\t}else if(age >= 19 && age <= 60) {\n\t\t\treturn \"adult\";\n\t\t}else if(age >= 61 && age <= 120){\n\t\t\treturn \"senior\";\n\t\t}\n\n\t\treturn \"Invalid age\";\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/MethodsReview.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43638, "method_name": "displayNumber", "class_name": "MethodsReview", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void displayNumber(int number) {\n\t\tSystem.out.println(\"Number: \" + number);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/MethodsReview.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43639, "method_name": "displayNumber", "class_name": "MethodsReview", "params": ["double"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void displayNumber(double number) {\n\t\tSystem.out.println(\"Number: \" + number);\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/MethodsReview.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43640, "method_name": "concat", "class_name": "MethodsReview", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String concat(String strOne, String strTwo) {\n\t\treturn strOne + strTwo;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/MethodsReview.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43641, "method_name": "concat", "class_name": "MethodsReview", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String concat(String strOne, String strTwo, String strThree) {\n\t\treturn strOne + strTwo + strThree;\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day12/MethodsReview.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43642, "method_name": "run", "class_name": "JettyServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run() {\n\t\tServletHandler handler = new ServletHandler();\n\t\tserver.setHandler(handler);\n\n\t\t// \u6dfb\u52a0\u8bbf\u95ee\u8def\u7531\u6620\u5c04\n\t\thandler.addServletWithMapping(DownloadServlet.class, \"/*\");\n\t\ttry {\n\t\t\tserver.start();\n\t\t\tserver.join();\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\n\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/JettyServer.java", "stars": "165", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 43643, "method_name": "doGet", "class_name": "DownloadServlet", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void doGet(HttpServletRequest request, HttpServletResponse response) throws IOException {\n\n\t\t\t// \u83b7\u53d6 request \u5bf9\u8c61\u4f20\u5165\u7684\u6587\u4ef6\u540d\n\t\t\tString filename = request.getRequestURI().substring(1).replace(\".class\", \"\");\n\n\t\t\tByteArrayInputStream bain      = null;\n\n\n\t\t\ttry {\n\t\t\t\t// \u6839\u636e\u8bf7\u6c42\u7684\u4e0d\u540c URL \u8fdb\u884c\u4e0d\u540c\u7c7b\u578b\u7684\u7f16\u5236\n\t\t\t\tbyte[] transformed = Frame.generate(filename);\n\n\t\t\t\tbain = new ByteArrayInputStream(transformed);\n\n\t\t\t} catch (Exception e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\tLogger.error(\" JETTY \u670d\u52a1\u5668 >> \u6076\u610f class \u5b57\u8282\u7801\u7f16\u7ec7\u5931\u8d25\");\n\t\t\t}\n\n\t\t\tLogger.info(\" JETTY \u670d\u52a1\u5668 >> \u63a5\u6536\u8bbf\u95ee\uff1a \" + request.getRequestURL());\n\t\t\tresponse.setStatus(HttpServletResponse.SC_OK);\n\t\t\tresponse.setHeader(\"content-disposition\", \"attachment;filename=\" + URLEncoder.encode(filename, \"UTF-8\"));\n\n\t\t\tint          len;\n\t\t\tbyte[]       buffer = new byte[1024];\n\t\t\tOutputStream out    = response.getOutputStream();\n\t\t\tif (bain != null) {\n\t\t\t\twhile ((len = bain.read(buffer)) > 0) {\n\t\t\t\t\tout.write(buffer, 0, len);\n\t\t\t\t}\n\t\t\t\tbain.close();\n\t\t\t\tLogger.info(\" JETTY \u670d\u52a1\u5668 >> \u5df2\u7ecf\u8fd4\u56de\u6076\u610f\u5b57\u8282\u7801\");\n\n\t\t\t} else {\n\t\t\t\tLogger.error(\" JETTY \u670d\u52a1\u5668 >> \u8bfb\u53d6\u6587\u4ef6\u5931\u8d25\uff01\");\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/JettyServer.java", "stars": "165", "class_props": {"extends": "HttpServlet", "implements": null, "modifiers": ["public", "static"]}}, {"id": 43644, "method_name": "doPost", "class_name": "DownloadServlet", "params": ["HttpServletRequest", "HttpServletResponse"], "throws": ["ServletException", "IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n\t\t\tdoGet(request, response);\n\t\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/JettyServer.java", "stars": "165", "class_props": {"extends": "HttpServlet", "implements": null, "modifiers": ["public", "static"]}}, {"id": 43645, "method_name": "initalizeLayout", "class_name": "CustomDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\tpublic View initalizeLayout() {  \n\t\tinflater = LayoutInflater.from(activity);\n\t\tView rowView =inflater.inflate(R.layout.custom_dialog, null);\n\t\t   \n\t\tmTitleTextView=(TextView)rowView.findViewById(R.id.dailog_title);\n\t\tdailogCloseImage=(ImageView)rowView.findViewById(R.id.dailog_close_image);\n\n\t\tmFirstButton=(Button)rowView.findViewById(R.id.first_btn);\n\t\tmMiddleButton=(Button)rowView.findViewById(R.id.middle_btn);\n\t\tmLastButton=(Button)rowView.findViewById(R.id.last_btn);\n\n\t\tmMiddleLayout=(LinearLayout)rowView.findViewById(R.id.middle_layout);\n\t\tmBottomLayout=(LinearLayout)rowView.findViewById(R.id.bottom_layout);\n\t\t//set values...\n\t\tmTitleTextView.setText(mTitle);\n\n\n\t\treturn rowView;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43646, "method_name": "show", "class_name": "CustomDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void show(){\n\t\tdialog.show();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43647, "method_name": "dismiss", "class_name": "CustomDialog", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void dismiss(){\n\t\tdialog.dismiss();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43648, "method_name": "addView", "class_name": "CustomDialog", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void addView(View view){\n\t\tmMiddleLayout.addView(view);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43649, "method_name": "setContentView", "class_name": "CustomDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\tpublic View setContentView(int resourceId){\n\t\tView view =inflater.inflate(resourceId, null);\n\t\taddView(view);\n\t\treturn view;\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43650, "method_name": "setContentView", "class_name": "CustomDialog", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setContentView(View view){\n\t\taddView(view);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43651, "method_name": "setDailogCloseImage", "class_name": "CustomDialog", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDailogCloseImage(int resourceId){\n\t\tdailogCloseImage.setImageResource(resourceId);\n//\t\tmDailogButton.setBackgroundResource(R.drawable.invite_button);\n\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43652, "method_name": "setFirstButton", "class_name": "CustomDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFirstButton(String name){\n\t\tmBottomLayout.setVisibility(View.VISIBLE);\n\t\tmFirstButton.setVisibility(View.VISIBLE);\n\t\tmFirstButton.setText(name);\n\n\t\tLinearLayout.LayoutParams params = new LinearLayout.LayoutParams(\n\t\t\t\tLinearLayout.LayoutParams.MATCH_PARENT,\n\t\t\t\tLinearLayout.LayoutParams.MATCH_PARENT);\n\n\t\tparams.weight=100;\n\n\t\tmFirstButton.setLayoutParams(params);\n\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43653, "method_name": "setMiddleButton", "class_name": "CustomDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMiddleButton(String name){\n\t\tmMiddleButton.setVisibility(View.VISIBLE);\n\t\tmMiddleButton.setText(name);\n\n\t\tLinearLayout.LayoutParams params = new LinearLayout.LayoutParams(\n\t\t\t\tLinearLayout.LayoutParams.MATCH_PARENT,\n\t\t\t\tLinearLayout.LayoutParams.MATCH_PARENT);\n\n\t\tparams.weight=50;\n\n\t\tmFirstButton.setLayoutParams(params);\n\t\tmMiddleButton.setLayoutParams(params);\n\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43654, "method_name": "setLastButton", "class_name": "CustomDialog", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setLastButton(String name){\n\t\tmLastButton.setVisibility(View.VISIBLE);\n\t\tmLastButton.setText(name);\n\n\t\tLinearLayout.LayoutParams params = new LinearLayout.LayoutParams(\n\t\t\t\tLinearLayout.LayoutParams.MATCH_PARENT,\n\t\t\t\tLinearLayout.LayoutParams.MATCH_PARENT);\n\n\t\tparams.weight=33;\n\n\t\tmFirstButton.setLayoutParams(params);\n\t\tmMiddleButton.setLayoutParams(params);\n\t\tmLastButton.setLayoutParams(params);\n\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43655, "method_name": "setFirstButtonOnClickListener", "class_name": "CustomDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setFirstButtonOnClickListener(OnClickListener onClickListener) {\n\t\tmFirstButton.setOnClickListener(onClickListener);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43656, "method_name": "setMiddleButtonOnClickListener", "class_name": "CustomDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setMiddleButtonOnClickListener(OnClickListener onClickListener) {\n\t\tmMiddleButton.setOnClickListener(onClickListener);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43657, "method_name": "setThirdButtonOnClickListener", "class_name": "CustomDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setThirdButtonOnClickListener(OnClickListener onClickListener) {\n\t\tmLastButton.setOnClickListener(onClickListener);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43658, "method_name": "setDailogCloseImageOnClickListener", "class_name": "CustomDialog", "params": ["OnClickListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setDailogCloseImageOnClickListener(OnClickListener onClickListener) {\n\t\tdailogCloseImage.setOnClickListener(onClickListener);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43659, "method_name": "setCancelable", "class_name": "CustomDialog", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setCancelable(boolean flag) {\n\t\tdialog.setCancelable(flag);\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/mypopup/src/com/example/mypopup/CustomDialog.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43660, "method_name": "configTxGen", "class_name": "FabricConfigGenImpl", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean configTxGen(InitConfigEntity initConfig) {\n        Map<Object, Object> configTxEntity = this.loadTemplate(CONFIGTX);\n        if (CollectionUtils.isEmpty(configTxEntity)) {\n            return false;\n        }\n        Map<Object, Object> ordererOrg = null;\n        Map<Object, Object> org1 = null;\n        List<Map<Object, Object>> organizations = (List<Map<Object, Object>>) configTxEntity.get(\"Organizations\");\n        for (Map<Object, Object> item : organizations) {\n            if (\"OrdererOrg\".equals(item.get(\"Name\"))) {\n                item.put(\"MSPDir\", String.format(\"crypto-config/ordererOrganizations/%s/msp\", initConfig.getOrdererDomain()));\n                ordererOrg = item;\n            } else {\n                org1 = item;\n                item.put(\"Name\", initConfig.getOrgMSPID());\n                item.put(\"ID\", initConfig.getOrgMSPID());\n                item.put(\"MSPDir\", String.format(\"crypto-config/peerOrganizations/%s/msp\", initConfig.getPeerDomain()));\n\n                Map<Object, Object> policies = (Map<Object, Object>) item.get(\"Policies\");\n                Map<Object, Object> config = (Map<Object, Object>) policies.get(\"Readers\");\n                config.put(\"Rule\", String.format(\"OR('%s.admin','%s.peer','%s.client')\", initConfig.getOrgMSPID(), initConfig.getOrgMSPID(), initConfig.getOrgMSPID()));\n\n                config = (Map<Object, Object>) policies.get(\"Writers\");\n                config.put(\"Rule\", String.format(\"OR('%s.admin','%s.client')\", initConfig.getOrgMSPID(), initConfig.getOrgMSPID()));\n\n                config = (Map<Object, Object>) policies.get(\"Admins\");\n                config.put(\"Rule\", String.format(\"OR('%s.admin')\", initConfig.getOrgMSPID()));\n\n                String peerHost = initConfig.getPeerHostConfig().keySet().iterator().next();\n                String peerIp = initConfig.getPeerHostConfig().get(peerHost);\n                int index = peerIp.lastIndexOf(\":\");\n\n                List<Map<Object, Object>> anchorPeers = (List<Map<Object, Object>>) item.get(\"AnchorPeers\");\n                anchorPeers.get(0).put(\"Host\", peerHost);\n                anchorPeers.get(0).put(\"Port\", Integer.parseInt(peerIp.substring(index + 1)));\n            }\n        }\n\n        String firstOrdererHost = initConfig.getOrdererHostConfig().keySet().iterator().next();\n        String firstOrdererIp = initConfig.getOrdererHostConfig().get(firstOrdererHost);\n        int index = firstOrdererIp.lastIndexOf(\":\");\n\n        // Orderer\n        Map<Object, Object> orderer = (Map<Object, Object>) configTxEntity.get(\"Orderer\");\n        List<String> orderAddresses = (List<String>) orderer.get(\"Addresses\");\n        orderAddresses.clear();\n        orderAddresses.add(String.format(firstOrdererHost + firstOrdererIp.substring(index)));\n\n        // SampleMultiNodeEtcdRaft\n        Map<Object, Object> profile = (Map<Object, Object>) ((Map<Object, Object>) configTxEntity.get(\"Profiles\")).get(\"SampleMultiNodeEtcdRaft\");\n        Map<Object, Object> orderConfig = (Map<Object, Object>) profile.get(\"Orderer\");\n\n        Map<String, Object> etcdRaftConfig = (Map<String, Object>) orderConfig.get(\"EtcdRaft\");\n\n        List<Map<String, Object>> consenters = (List<Map<String, Object>>) (etcdRaftConfig).get(\"Consenters\");\n        consenters.clear();\n        consenters.addAll(this.generateOrdersConfig(initConfig));\n\n        organizations = (List<Map<Object, Object>>) orderConfig.get(\"Organizations\");\n        organizations.clear();\n        organizations.add(ordererOrg);\n\n        Map<Object, Object> capabilities = (Map<Object, Object>) orderConfig.get(\"Capabilities\");\n\n        orderAddresses = (List<String>) orderConfig.get(\"Addresses\");\n        orderAddresses.clear();\n        for (String host : initConfig.getOrdererHostConfig().keySet()) {\n            String ip = initConfig.getOrdererHostConfig().get(host);\n            orderAddresses.add(host + ip.substring(ip.lastIndexOf(\":\")));\n        }\n        orderConfig.clear();\n        orderConfig.putAll(orderer);\n        orderConfig.put(\"OrdererType\", \"etcdraft\");\n        orderConfig.put(\"EtcdRaft\", etcdRaftConfig);\n        orderConfig.put(\"Addresses\", orderAddresses);\n        orderConfig.put(\"Organizations\", organizations);\n        orderConfig.put(\"Capabilities\", capabilities);\n\n        Map<Object, Object> application = (Map<Object, Object>) profile.get(\"Application\");\n        organizations = (List<Map<Object, Object>>) application.get(\"Organizations\");\n        organizations.clear();\n        organizations.add(ordererOrg);\n\n        Map<Object, Object> sampleConsortium = (Map<Object, Object>) ((Map<Object, Object>) profile.get(\"Consortiums\")).get(\"SampleConsortium\");\n        organizations = (List<Map<Object, Object>>) sampleConsortium.get(\"Organizations\");\n        organizations.clear();\n        organizations.add(org1);\n\n        // PrivateChannel\n        profile = (Map<Object, Object>) ((Map<Object, Object>) configTxEntity.get(\"Profiles\")).get(\"PrivateChannel\");\n        application = (Map<Object, Object>) profile.get(\"Application\");\n        organizations = (List<Map<Object, Object>>) application.get(\"Organizations\");\n        organizations.clear();\n        organizations.add(org1);\n\n        // OneOrgChannel\n        profile = (Map<Object, Object>) ((Map<Object, Object>) configTxEntity.get(\"Profiles\")).get(\"OneOrgChannel\");\n        application = (Map<Object, Object>) profile.get(\"Application\");\n        organizations = (List<Map<Object, Object>>) application.get(\"Organizations\");\n        organizations.clear();\n        organizations.add(org1);\n\n        return writeYamlFile(configTxEntity, CONFIGTX);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/FabricConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["FabricConfigGen"], "modifiers": ["public"]}}, {"id": 43661, "method_name": "writeYamlFile", "class_name": "FabricConfigGenImpl", "params": ["Map<Object,Object>", "String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean writeYamlFile(Map<Object, Object> configTxEntity, String fileName) {\n        String yamlFile = null;\n        if (fileName.equals(CONFIGTX)) {\n            yamlFile = modeService.getInitDir() + \"fabric-net/cryptoAndConfig/configtx.yaml\";\n        }\n        if (fileName.equals(CRYPTO)) {\n            yamlFile = modeService.getInitDir() + \"fabric-net/cryptoAndConfig/crypto-config.yaml\";\n        }\n        if (StringUtils.isEmpty(yamlFile)) {\n            return false;\n        }\n\n        return yamlFileService.writeObjectToYamlFile(configTxEntity, yamlFile);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/FabricConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["FabricConfigGen"], "modifiers": ["public"]}}, {"id": 43662, "method_name": "loadTemplate", "class_name": "FabricConfigGenImpl", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Map<Object,Object>", "snippet": "    private Map<Object, Object> loadTemplate(String fileName) {\n        String txTempFile = null;\n        if (fileName.equals(CONFIGTX)) {\n            txTempFile = modeService.getInitDir() + \"template/configtx.yaml\";\n        }\n        if (fileName.equals(CRYPTO)) {\n            txTempFile = modeService.getInitDir() + \"template/crypto-config.yaml\";\n        }\n        if (StringUtils.isEmpty(txTempFile) || StringUtils.isEmpty(fileName)) {\n            return null;\n        }\n        Map<Object, Object> result = null;\n        try {\n            result = yamlFileService.loadYamlFile(txTempFile);\n        } catch (FileNotFoundException e) {\n            // log.error(\"\u627e\u4e0d\u5230\u6307\u5b9a\u6587\u4ef6,\u6587\u4ef6\u8def\u5f84:\" + txTempFile);\n            log.error(\"Cannot find the specified file, file path:\" + txTempFile);\n            e.printStackTrace();\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/FabricConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["FabricConfigGen"], "modifiers": ["public"]}}, {"id": 43663, "method_name": "generateOrdersConfig", "class_name": "FabricConfigGenImpl", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["private"], "return_type": "List<Map>", "snippet": "    private List<Map<String, Object>> generateOrdersConfig(InitConfigEntity configEntity) {\n        String tlsFormat = \"crypto-config/ordererOrganizations/%s/orderers/%s/tls/server.crt\";\n        List<Map<String, Object>> config = new ArrayList<>();\n        for (String host : configEntity.getOrdererHostConfig().keySet()) {\n            String ip = configEntity.getOrdererHostConfig().get(host);\n            int index = ip.lastIndexOf(\":\");\n\n            Map<String, Object> orderConfig = new HashMap<>();\n            orderConfig.put(\"Host\", host);\n            orderConfig.put(\"Port\", Integer.parseInt(ip.substring(index + 1)));\n            String tls = String.format(tlsFormat, configEntity.getOrdererDomain(), host);\n            orderConfig.put(\"ClientTLSCert\", tls);\n            orderConfig.put(\"ServerTLSCert\", tls);\n            config.add(orderConfig);\n        }\n        return config;\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/FabricConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["FabricConfigGen"], "modifiers": ["public"]}}, {"id": 43664, "method_name": "cryptoGen", "class_name": "FabricConfigGenImpl", "params": ["InitConfigEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean cryptoGen(InitConfigEntity initConfig) {\n        Map<Object, Object> cryptoConfig = this.loadTemplate(CRYPTO);\n        List<Map<Object, Object>> ordererOrgs = (List<Map<Object, Object>>) cryptoConfig.get(\"OrdererOrgs\");\n        ordererOrgs.get(0).put(\"Domain\", initConfig.getOrdererDomain());\n        List<Map<Object, Object>> specs = (List<Map<Object, Object>>) ordererOrgs.get(0).get(\"Specs\");\n        specs.clear();\n        for (String orderHost : initConfig.getOrdererHostConfig().keySet()) {\n            int index = orderHost.indexOf(\".\");\n            specs.add(new HashMap<Object, Object>() {{\n                put(\"Hostname\", orderHost.substring(0, index));\n            }});\n        }\n\n        List<Map<Object, Object>> peerOrgs = (List<Map<Object, Object>>) cryptoConfig.get(\"PeerOrgs\");\n        peerOrgs.get(0).put(\"Name\", initConfig.getOrgMSPID().replace(\"MSP\", \"\"));\n        peerOrgs.get(0).put(\"Domain\", initConfig.getPeerDomain());\n\n        List<Map<Object, Object>> peerSpecs = (List<Map<Object, Object>>) peerOrgs.get(0).get(\"Specs\");\n        peerSpecs.clear();\n        for (String peerHost : initConfig.getPeerHostConfig().keySet()) {\n            String peerHostName = peerHost.split(\".\" + initConfig.getPeerDomain())[0];\n            peerSpecs.add(new HashMap<Object, Object>() {{\n                put(\"Hostname\", peerHostName);\n            }});\n        }\n        return writeYamlFile(cryptoConfig, CRYPTO);\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-biz/src/main/java/com/cgb/bcpinstall/config/configGenImpl/FabricConfigGenImpl.java", "stars": "7", "class_props": {"extends": null, "implements": ["FabricConfigGen"], "modifiers": ["public"]}}, {"id": 43665, "method_name": "main", "class_name": "TC0013_StudyAbroadShiksha_04302020", "params": ["String"], "throws": ["InterruptedException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws InterruptedException {\n\t\t\n\t\t//1) Go to https://studyabroad.shiksha.com/\n\t\tSystem.setProperty(\"webdriver.chrome.driver\",\"./drivers/chromedriver.exe\");\n\t\tChromeDriver driver=new ChromeDriver();\n\t\tActions builder=new Actions(driver);\n\t\tWebDriverWait wait=new WebDriverWait(driver,90);\n\t\t\n\t\tdriver.manage().window().maximize();\n\t\tdriver.get(\"https://studyabroad.shiksha.com/\");\n\t\tdriver.manage().timeouts().implicitlyWait(5,TimeUnit.SECONDS);\n\t\t\n\t\t//2) Mouse over on Colleges and click MS in Computer Science &Engg under MS Colleges\n\t\tWebElement eleCollege = driver.findElementByXPath(\"//label[text()='Colleges ']\");\n\t\tbuilder.moveToElement(eleCollege).pause(200).perform();\n\t\tdriver.findElementByXPath(\"//a[text()='MS in Computer Science &Engg']\").click();\n\t\t\n\t\t//3) Select GRE under Exam Accepted and Score 300 & Below \n\t\tdriver.findElementByXPath(\"//p[text()='GRE']/preceding::span[1]\").click();\n\t\tWebElement eleLoading = driver.findElementById(\"loadingImage\");\n\t\twait.until(ExpectedConditions.visibilityOf(eleLoading));\n\t\tThread.sleep(2000);\n\t\t\n\t\tWebElement eleScore = driver.findElementByClassName(\"score-select-field\");\n\t\tSelect ScoreSelect=new Select(eleScore);\n\t\tScoreSelect.selectByVisibleText(\"300 & below\");\n\t\t//wait.until(ExpectedConditions.visibilityOf(eleLoading));\n\t\tThread.sleep(4000);\n\t\t\n\t\t//4) Max 10 Lakhs under 1st year Total fees, USA under countries\n\t\tdriver.findElementByXPath(\"//p[text()='Max 10 Lakhs']/preceding::span[1]\").click();\n\t\t//wait.until(ExpectedConditions.visibilityOf(eleLoading));\n\t\tThread.sleep(4000);\n\t\t\n\t\t//5) Select Sort By: Low to high 1st year total fees\n\t\tWebElement eleSort = driver.findElementById(\"categorySorter\");\n\t\tSelect sort=new Select(eleSort);\n\t\tsort.selectByVisibleText(\"Low to high 1st year total fees\");\n\t\t//wait.until(ExpectedConditions.visibilityOf(eleLoading));\n\t\tThread.sleep(4000);\n\t\t\n\t\t//6) Click Add to compare of the College having least fees with Public University, Scholarship and Accomadation\n\t\tHashMap<Float,String> map=new LinkedHashMap<>();\n\t\tList<Float> isort=new ArrayList<>();\n\t\tList<WebElement> eleColleges = driver.findElementsByXPath(\"//div[@class='course-touple clearwidth']\");\n\t\tfor (int i = 0; i < eleColleges.size(); i++) {\n\t\t\tint increament=i+1;\n\t\t\t\n\t\t\tString sCollegeName = driver.findElementByXPath(\"(//div[@class='tuple-title']/p[2]/a)[\"+increament+\"]\").getText();\n\t\t\tString sFees = driver.findElementByXPath(\"(//strong[text()=' 1st Year Total Fees']/following::p[1])[\"+increament+\"]\").getText().replaceAll(\"[^0-9.]+\",\"\");\n\t\t\tFloat iFees=Float.parseFloat(sFees);\n\t\t\n\t\t\t String sPublicuniversity = driver.findElementByXPath(\"(//strong[text()=' 1st Year Total Fees']/following::p[text()='Public university']/span)[\"+increament+\"]\").getAttribute(\"class\");\n\t\t\t String sScholarship = driver.findElementByXPath(\"(//strong[text()=' 1st Year Total Fees']/following::p[text()='Scholarship']/span)[\"+increament+\"]\").getAttribute(\"class\");\n\t\t\t String sAccommodation = driver.findElementByXPath(\"(//strong[text()=' 1st Year Total Fees']/following::p[text()='Accommodation']/span)[\"+increament+\"]\").getAttribute(\"class\");\n\t\t\t \n\t\t\t if(sPublicuniversity.equalsIgnoreCase(\"tick-mark\") && sScholarship.equalsIgnoreCase(\"tick-mark\") && sAccommodation.equalsIgnoreCase(\"tick-mark\")) {\n\t\t\t\t //System.out.println(sPublicuniversity);\n\t\t\t\t// System.out.println(sScholarship);\n\t\t\t\t// System.out.println(sAccommodation);\t\t\t\n\t\t\t\tmap.put(iFees, sCollegeName);\n\t\t\t\tisort.add(iFees);\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(map);\n\t\tCollections.sort(isort);\n\t\t//System.out.println(isort);\n\t\t//College having least fees with Public University, Scholarship and Accomadation\n\t\tString sCollegeLeastFees=map.get(isort.get(0));\n\t\tSystem.out.println(sCollegeLeastFees);\n\t\tWebElement eleLeasetFees = driver.findElementByXPath(\"//a[text()='\"+sCollegeLeastFees+\"']/following::p[text()='Add to compare']\");\n\t\tJavascriptExecutor js=(JavascriptExecutor)driver;\n\t\tjs.executeScript(\"arguments[0].click()\",eleLeasetFees);\n\t\tThread.sleep(3000);\n\t\t\n\t\t//7) Select the first college under Compare with similar colleges \n\t\tdriver.findElementByXPath(\"(//a[@class='add-tag-title'])[1]\").click();\n\t\tThread.sleep(3000);\n\t\t\n\t\t//8) Click on Compare College>\n\t\tdriver.findElementByXPath(\"//strong[text()='Compare Colleges >']/parent::a\").click();\n\t\tThread.sleep(3000);\n\t\t\n\t\t//9) Select When to Study as 2021\n\t\tdriver.findElementByXPath(\"//strong[text()='2021']/preceding::span[1]\").click();\n\t\tThread.sleep(200);\n\t\t\n\t\t//10) Select Preferred Countries as USA\n\t\tdriver.findElementByXPath(\"//div[text()='Preferred Countries']/following::div[1]\").click();\n\t\tdriver.findElementByXPath(\"//label[contains(@for,'USA')]/span\").click();\n\t\tThread.sleep(200);\n\t\t\n\t\t//11) Select Level of Study as Masters\n\t\tdriver.findElementByXPath(\"//strong[text()='Masters']/preceding::span[1]\").click();\n\t\tThread.sleep(200);\n\t\t\n\t\t//12) Select Preferred Course as MS\n\t\tdriver.findElementByXPath(\"//div[text()='Preferred Course']/following::div[1]\").click();\n\t\tdriver.findElementByXPath(\"//div[@class='city-lr prefCourse']//li[text()='MS']\").click();\n\t\tThread.sleep(2000);\n\t\t\n\t\t//13) Select Specialization as \"Computer Science & Engineering\"\n\t\tdriver.findElementByXPath(\"//div[text()='Preferred Specialisations']/following::div[1]\").click();\n\t\tdriver.findElementByXPath(\"//div[@class='city-lr']//li[text()='Computer Science & Engineering']\").click();\n\t\tThread.sleep(200);\n\t\t\n\t\t//14) Click on Sign Up\n\t\tdriver.findElementById(\"signup\").click();\n\t\tThread.sleep(3000);\n\t\t\n\t\t//15) Print all the warning messages displayed on the screen for missed mandatory fields\n\t\tList<WebElement> eleErrorMsg = driver.findElementsByXPath(\"//div[@class='helper-text']\");\n\t\tSystem.out.println(\"Print all the warning messages displayed on the screen for missed mandatory fields\");\n\t\tfor (WebElement eachErrorMsg : eleErrorMsg) {\n\t\t\t\n\t\t\tSystem.out.println(eachErrorMsg.getText());\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/mathuraveeraganesh/SeleniumWorkOut/master/src/main/java/week3_27_01May/TC0013_StudyAbroadShiksha_04302020.java", "stars": "11", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43666, "method_name": "getCount", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getCount ()\n\t{\n\t\treturn n_getCount ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43667, "method_name": "n_getCount", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getCount ();\n\n\n\tpublic boolean hasStableIds ()\n\t{\n\t\treturn n_hasStableIds ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43668, "method_name": "hasStableIds", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean hasStableIds ()\n\t{\n\t\treturn n_hasStableIds ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43669, "method_name": "n_hasStableIds", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_hasStableIds ();\n\n\n\tpublic java.lang.Object getItem (int p0)\n\t{\n\t\treturn n_getItem (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43670, "method_name": "getItem", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "\tpublic java.lang.Object getItem (int p0)\n\t{\n\t\treturn n_getItem (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43671, "method_name": "n_getItem", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "java", "snippet": "\tprivate native java.lang.Object n_getItem (int p0);\n\n\n\tpublic int getViewTypeCount ()\n\t{\n\t\treturn n_getViewTypeCount ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43672, "method_name": "getViewTypeCount", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getViewTypeCount ()\n\t{\n\t\treturn n_getViewTypeCount ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43673, "method_name": "n_getViewTypeCount", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getViewTypeCount ();\n\n\n\tpublic boolean areAllItemsEnabled ()\n\t{\n\t\treturn n_areAllItemsEnabled ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43674, "method_name": "areAllItemsEnabled", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean areAllItemsEnabled ()\n\t{\n\t\treturn n_areAllItemsEnabled ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43675, "method_name": "n_areAllItemsEnabled", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_areAllItemsEnabled ();\n\n\n\tpublic long getItemId (int p0)\n\t{\n\t\treturn n_getItemId (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43676, "method_name": "getItemId", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getItemId (int p0)\n\t{\n\t\treturn n_getItemId (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43677, "method_name": "n_getItemId", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "long", "snippet": "\tprivate native long n_getItemId (int p0);\n\n\n\tpublic int getItemViewType (int p0)\n\t{\n\t\treturn n_getItemViewType (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43678, "method_name": "getItemViewType", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getItemViewType (int p0)\n\t{\n\t\treturn n_getItemViewType (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43679, "method_name": "n_getItemViewType", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "int", "snippet": "\tprivate native int n_getItemViewType (int p0);\n\n\n\tpublic android.view.View getView (int p0, android.view.View p1, android.view.ViewGroup p2)\n\t{\n\t\treturn n_getView (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43680, "method_name": "getView", "class_name": "ListViewAdapter", "params": ["int", "android", "android"], "throws": null, "modifiers": ["public"], "return_type": "android", "snippet": "\tpublic android.view.View getView (int p0, android.view.View p1, android.view.ViewGroup p2)\n\t{\n\t\treturn n_getView (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43681, "method_name": "n_getView", "class_name": "ListViewAdapter", "params": ["int", "android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "android", "snippet": "\tprivate native android.view.View n_getView (int p0, android.view.View p1, android.view.ViewGroup p2);\n\n\n\tpublic boolean isEnabled (int p0)\n\t{\n\t\treturn n_isEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43682, "method_name": "isEnabled", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean isEnabled (int p0)\n\t{\n\t\treturn n_isEnabled (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43683, "method_name": "n_isEnabled", "class_name": "ListViewAdapter", "params": ["int"], "throws": null, "modifiers": ["private", "native"], "return_type": "boolean", "snippet": "\tprivate native boolean n_isEnabled (int p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43684, "method_name": "monodroidAddReference", "class_name": "ListViewAdapter", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43685, "method_name": "monodroidClearReferences", "class_name": "ListViewAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ListViewAdapter.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 43686, "method_name": "getOptionSyntax", "class_name": "ServerCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOptionSyntax() {\n        return \"[port|debug]\";\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/ServerCommand.java", "stars": "2", "class_props": {"extends": "Command", "implements": null, "modifiers": ["public"]}}, {"id": 43687, "method_name": "displayOptionUsage", "class_name": "ServerCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayOptionUsage() {\n        println(\"  port  <portNumber>   \u542f\u52a8\u670d\u52a1\u5668\u5e76\u6307\u5b9a\u7aef\u53e3\u53f7\");\n        println(\"  debug   \u542f\u7528debug\u6a21\u5f0f\");\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/ServerCommand.java", "stars": "2", "class_props": {"extends": "Command", "implements": null, "modifiers": ["public"]}}, {"id": 43688, "method_name": "getName", "class_name": "ServerCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return \"server\";\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/ServerCommand.java", "stars": "2", "class_props": {"extends": "Command", "implements": null, "modifiers": ["public"]}}, {"id": 43689, "method_name": "getDescription", "class_name": "ServerCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDescription() {\n        return \"Start server default port 8000\";\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/ServerCommand.java", "stars": "2", "class_props": {"extends": "Command", "implements": null, "modifiers": ["public"]}}, {"id": 43690, "method_name": "execute", "class_name": "ServerCommand", "params": ["Deque<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void execute(Deque<String> options) {\n        count++;\n        ensureMaxArgumentCount(options, 3);\n        ensureMinArgumentCount(options, 0);\n        if(options.isEmpty()){\n            BoredServer.start(port);\n            return;\n        }\n        String command = options.remove();\n        String portStr = StrUtil.EMPTY;\n        switch (command) {\n            case \"debug\":\n                LogManager.getRootLogger().setLevel(Level.DEBUG);\n                break;\n            case \"port\":\n                try {\n                    if (options.isEmpty()) {\n                        printlnError(\"Port number must be number,but the input is empty\");\n                        nonError = false;\n                        return;\n                    }\n                    portStr = options.remove();\n                    port = Integer.parseInt(portStr);\n                } catch (Exception e) {\n                    printlnError(\"Port number must be number,but the input is '{}'\", portStr);\n                    nonError = false;\n                }\n                break;\n            default:\n                printlnError(\"Unknown server option {}\", command);\n                nonError = false;\n        }\n        if (!options.isEmpty()) {\n            this.execute(options);\n        }\n        if ((count == 2 || options.isEmpty()) && nonError) {\n            BoredServer.start(port);\n        }\n    }", "url": "https://raw.githubusercontent.com/Heemooo/Bored/master/src/main/java/com/bored/core/command/ServerCommand.java", "stars": "2", "class_props": {"extends": "Command", "implements": null, "modifiers": ["public"]}}, {"id": 43691, "method_name": "init", "class_name": "ExitButton", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init(int w, int h) {\n        setPreferredSize(new Dimension(w, h));\n        setOpaque(false);\n        addMouseListener(this);\n        addMouseMotionListener(this);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43692, "method_name": "textureName", "class_name": "ExitButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String textureName()            { return TEXTURE_BROWN; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43693, "method_name": "textureClip", "class_name": "ExitButton", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Shape", "snippet": "    public Shape textureClip()             { return textureClip; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43694, "method_name": "paintComponent", "class_name": "ExitButton", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics g0) {\n        super.paintComponent(g0);\n        Graphics2D g = (Graphics2D) g0;\n\n        int w = getWidth();\n        int h = getHeight();\n\n        int hp = hPad();\n        int vp = vPad();\n\n        if (buttonBack == null) {\n            Point2D start = new Point2D.Float(0, 0);\n            Point2D end = new Point2D.Float(w, 0);\n            float[] dist = {0.0f, 0.2f, 0.5f, 0.8f, 1.0f};\n            Color[] colors = {buttonEdgeC, buttonEdgeC, buttonMidC, buttonEdgeC, buttonEdgeC };\n            buttonBack = new LinearGradientPaint(start, end, dist, colors);\n        }\n\n        int arc = min(w, h) / 4;\n\n        buttonBox.setBounds(hp, vp, w-hp-hp, h-vp-vp);\n        g.setPaint(buttonBack);\n        g.fillRoundRect(hp, vp, w-hp-hp, h-vp-vp, arc, arc);\n        Stroke prev = g.getStroke();\n        g.setStroke(borderStroke());\n        Color c0 = hoverBox == buttonBox ? Color.yellow : buttonBorderC;\n        g.setColor(c0);\n        g.drawRoundRect(hp, vp, w-hp-hp, h-vp-vp,arc,arc);\n        g.setStroke(prev);\n\n        textureClip = new RoundRectangle2D.Float(hp, vp, w-hp-hp, h-vp-vp,arc,arc);\n\n        g.setFont(narrowFont(unscaled((h-vp-vp)*2/3)));\n        String s = label();\n        int sw = g.getFontMetrics().stringWidth(s);\n        int x0 = (w-sw)/2;\n        int y0 = vp+((h-vp-vp)*3/4);\n        Color c1 = hoverBox == buttonBox ? Color.yellow : SystemPanel.whiteText;\n        drawShadowedString(g, s, 3, x0, y0, SystemPanel.textShadowC, c1);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43695, "method_name": "borderStroke", "class_name": "ExitButton", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Stroke", "snippet": "    protected Stroke borderStroke()  { return stroke2; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43696, "method_name": "hPad", "class_name": "ExitButton", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int hPad()             { return hPad; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43697, "method_name": "vPad", "class_name": "ExitButton", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int vPad()             { return vPad; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43698, "method_name": "label", "class_name": "ExitButton", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "String", "snippet": "    protected String label()         { return text(\"BUTTON_EXIT\"); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43699, "method_name": "clickAction", "class_name": "ExitButton", "params": ["int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void clickAction(int numClicks) {\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43700, "method_name": "mouseClicked", "class_name": "ExitButton", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43701, "method_name": "mousePressed", "class_name": "ExitButton", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mousePressed(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43702, "method_name": "mouseReleased", "class_name": "ExitButton", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased(MouseEvent e) {\n        if (e.getButton() > 3)\n            return;\n        int x = e.getX();\n        int y = e.getY();\n        if (buttonBox.contains(x,y)) {\n            clickAction(e.getClickCount());\n            return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43703, "method_name": "mouseEntered", "class_name": "ExitButton", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseEntered(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43704, "method_name": "mouseExited", "class_name": "ExitButton", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseExited(MouseEvent e) {\n        if (hoverBox != null) {\n            hoverBox = null;\n            repaint();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43705, "method_name": "mouseDragged", "class_name": "ExitButton", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseDragged(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43706, "method_name": "mouseMoved", "class_name": "ExitButton", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseMoved(MouseEvent e) {\n        int x = e.getX();\n        int y = e.getY();\n        Rectangle prevHover = hoverBox;\n        hoverBox = null;\n        if (buttonBox.contains(x,y))\n            hoverBox = buttonBox;\n\n        if (hoverBox != prevHover)\n            repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/ExitButton.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener"], "modifiers": ["public"]}}, {"id": 43707, "method_name": "onCreate", "class_name": "MumlaSQLiteDatabase", "params": ["SQLiteDatabase"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(SQLiteDatabase db) {\n        db.execSQL(TABLE_SERVER_CREATE_SQL);\n        db.execSQL(TABLE_FAVOURITES_CREATE_SQL);\n        db.execSQL(TABLE_TOKENS_CREATE_SQL);\n        db.execSQL(TABLE_COMMENTS_CREATE_SQL);\n        db.execSQL(TABLE_LOCAL_MUTE_CREATE_SQL);\n        db.execSQL(TABLE_LOCAL_IGNORE_CREATE_SQL);\n        db.execSQL(TABLE_CERTIFICATES_CREATE_SQL);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43708, "method_name": "onUpgrade", "class_name": "MumlaSQLiteDatabase", "params": ["SQLiteDatabase", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onUpgrade(\n            SQLiteDatabase db,\n            int oldVersion,\n            int newVersion) {\n        Log.w(Constants.TAG, \"Database upgrade from \" + oldVersion + \" to \" + newVersion);\n        if (oldVersion <= PRE_FAVOURITES_DB_VERSION) {\n            db.execSQL(TABLE_FAVOURITES_CREATE_SQL);\n        }\n\n        if (oldVersion <= PRE_TOKENS_DB_VERSION) {\n            db.execSQL(TABLE_TOKENS_CREATE_SQL);\n        }\n\n        if (oldVersion <= PRE_COMMENTS_DB_VERSION) {\n            db.execSQL(TABLE_COMMENTS_CREATE_SQL);\n        }\n\n        if (oldVersion <= PRE_LOCAL_MUTE_DB_VERSION) {\n            db.execSQL(TABLE_LOCAL_MUTE_CREATE_SQL);\n        }\n\n        if (oldVersion <= PRE_LOCAL_IGNORE_DB_VERSION) {\n            db.execSQL(TABLE_LOCAL_IGNORE_CREATE_SQL);\n        }\n\n        if (oldVersion <= PRE_CERTIFICATES_DB_VERSION) {\n            db.execSQL(TABLE_CERTIFICATES_CREATE_SQL);\n        }\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43709, "method_name": "open", "class_name": "MumlaSQLiteDatabase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void open() {\n        // Do nothing. Database will be opened automatically when accessing it.\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43710, "method_name": "getServers", "class_name": "MumlaSQLiteDatabase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Server>", "snippet": "    public List<Server> getServers() {\n        Cursor c = getReadableDatabase().query(\n                TABLE_SERVER,\n                new String[]{SERVER_ID, SERVER_NAME, SERVER_HOST,\n                        SERVER_PORT, SERVER_USERNAME, SERVER_PASSWORD},\n                null,\n                null,\n                null,\n                null,\n                null);\n\n        List<Server> servers = new ArrayList<Server>();\n\n        c.moveToFirst();\n        while (!c.isAfterLast()) {\n            Server server = new Server(c.getInt(c.getColumnIndex(SERVER_ID)),\n                    c.getString(c.getColumnIndex(SERVER_NAME)),\n                    c.getString(c.getColumnIndex(SERVER_HOST)),\n                    c.getInt(c.getColumnIndex(SERVER_PORT)),\n                    c.getString(c.getColumnIndex(SERVER_USERNAME)),\n                    c.getString(c.getColumnIndex(SERVER_PASSWORD)));\n            servers.add(server);\n            c.moveToNext();\n        }\n\n        c.close();\n\n        return servers;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43711, "method_name": "addServer", "class_name": "MumlaSQLiteDatabase", "params": ["Server"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addServer(Server server) {\n        ContentValues values = new ContentValues();\n        values.put(SERVER_NAME, server.getName());\n        values.put(SERVER_HOST, server.getHost());\n        values.put(SERVER_PORT, server.getPort());\n        values.put(SERVER_USERNAME, server.getUsername());\n        values.put(SERVER_PASSWORD, server.getPassword());\n\n        server.setId(getWritableDatabase().insert(TABLE_SERVER, null, values));\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43712, "method_name": "updateServer", "class_name": "MumlaSQLiteDatabase", "params": ["Server"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateServer(Server server) {\n        ContentValues values = new ContentValues();\n        values.put(SERVER_NAME, server.getName());\n        values.put(SERVER_HOST, server.getHost());\n        values.put(SERVER_PORT, server.getPort());\n        values.put(SERVER_USERNAME, server.getUsername());\n        values.put(SERVER_PASSWORD, server.getPassword());\n        getWritableDatabase().update(\n                TABLE_SERVER,\n                values,\n                SERVER_ID + \"=?\",\n                new String[]{Long.toString(server.getId())});\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43713, "method_name": "removeServer", "class_name": "MumlaSQLiteDatabase", "params": ["Server"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeServer(Server server) {\n        getWritableDatabase().delete(TABLE_SERVER, SERVER_ID + \"=?\",\n                new String[] { String.valueOf(server.getId()) });\n        // Clean up server-specific entries\n        getWritableDatabase().delete(TABLE_FAVOURITES, FAVOURITES_SERVER + \"=?\",\n                new String[] { String.valueOf(server.getId()) });\n        getWritableDatabase().delete(TABLE_TOKENS, TOKENS_SERVER + \"=?\",\n                new String[] { String.valueOf(server.getId()) });\n        getWritableDatabase().delete(TABLE_LOCAL_MUTE, LOCAL_MUTE_SERVER + \"=?\",\n                new String[] { String.valueOf(server.getId()) });\n        getWritableDatabase().delete(TABLE_LOCAL_IGNORE, LOCAL_IGNORE_SERVER + \"=?\",\n                new String[]{String.valueOf(server.getId())});\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43714, "method_name": "getPinnedChannels", "class_name": "MumlaSQLiteDatabase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> getPinnedChannels(long serverId) {\n\n        final Cursor c = getReadableDatabase().query(\n                TABLE_FAVOURITES,\n                new String[]{FAVOURITES_CHANNEL},\n                FAVOURITES_SERVER + \"=?\",\n                new String[]{String.valueOf(serverId)},\n                null,\n                null,\n                null);\n\n        List<Integer> favourites = new ArrayList<Integer>();\n        c.moveToFirst();\n        while (!c.isAfterLast()) {\n            favourites.add(c.getInt(0));\n            c.moveToNext();\n        }\n\n        c.close();\n\n        return favourites;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43715, "method_name": "addPinnedChannel", "class_name": "MumlaSQLiteDatabase", "params": ["long", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addPinnedChannel(long serverId, int channelId) {\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(FAVOURITES_CHANNEL, channelId);\n        contentValues.put(FAVOURITES_SERVER, serverId);\n        getWritableDatabase().insert(TABLE_FAVOURITES, null, contentValues);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43716, "method_name": "isChannelPinned", "class_name": "MumlaSQLiteDatabase", "params": ["long", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isChannelPinned(long serverId, int channelId) {\n        Cursor c = getReadableDatabase().query(\n                TABLE_FAVOURITES,\n                new String[]{FAVOURITES_CHANNEL},\n                FAVOURITES_SERVER + \"=? AND \" +\n                FAVOURITES_CHANNEL + \"=?\",\n                new String[]{String.valueOf(serverId), String.valueOf(channelId)},\n                null,\n                null,\n                null);\n        c.moveToFirst();\n        return !c.isAfterLast();\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43717, "method_name": "removePinnedChannel", "class_name": "MumlaSQLiteDatabase", "params": ["long", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removePinnedChannel(long serverId, int channelId) {\n        getWritableDatabase().delete(TABLE_FAVOURITES, \"server = ? AND channel = ?\", new String[] { Long.toString(serverId), Integer.toString(channelId)});\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43718, "method_name": "getAccessTokens", "class_name": "MumlaSQLiteDatabase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getAccessTokens(long serverId) {\n        Cursor cursor = getReadableDatabase().query(TABLE_TOKENS, new String[] { TOKENS_VALUE }, TOKENS_SERVER+\"=?\", new String[] { String.valueOf(serverId) }, null, null, null);\n        cursor.moveToFirst();\n        List<String> tokens = new ArrayList<String>();\n        while(!cursor.isAfterLast()) {\n            tokens.add(cursor.getString(0));\n            cursor.moveToNext();\n        }\n        cursor.close();\n        return tokens;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43719, "method_name": "addAccessToken", "class_name": "MumlaSQLiteDatabase", "params": ["long", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addAccessToken(long serverId, String token) {\n        ContentValues contentValues = new ContentValues();\n        contentValues.put(TOKENS_SERVER, serverId);\n        contentValues.put(TOKENS_VALUE, token);\n        getWritableDatabase().insert(TABLE_TOKENS, null, contentValues);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43720, "method_name": "removeAccessToken", "class_name": "MumlaSQLiteDatabase", "params": ["long", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeAccessToken(long serverId, String token) {\n        getWritableDatabase().delete(TABLE_TOKENS, TOKENS_SERVER+\"=? AND \"+TOKENS_VALUE+\"=?\", new String[] {String.valueOf(serverId), token });\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43721, "method_name": "getLocalMutedUsers", "class_name": "MumlaSQLiteDatabase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> getLocalMutedUsers(long serverId) {\n        Cursor cursor = getReadableDatabase().query(TABLE_LOCAL_MUTE,\n                new String[] { LOCAL_MUTE_USER },\n                LOCAL_MUTE_SERVER + \"=?\",\n                new String[] { String.valueOf(serverId) },\n                null, null, null);\n        cursor.moveToNext();\n        List<Integer> users = new ArrayList<Integer>();\n        while (!cursor.isAfterLast()) {\n            users.add(cursor.getInt(0));\n            cursor.moveToNext();\n        }\n        return users;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43722, "method_name": "addLocalMutedUser", "class_name": "MumlaSQLiteDatabase", "params": ["long", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addLocalMutedUser(long serverId, int userId) {\n        ContentValues values = new ContentValues();\n        values.put(LOCAL_MUTE_SERVER, serverId);\n        values.put(LOCAL_MUTE_USER, userId);\n        getWritableDatabase().insert(TABLE_LOCAL_MUTE, null, values);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43723, "method_name": "removeLocalMutedUser", "class_name": "MumlaSQLiteDatabase", "params": ["long", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeLocalMutedUser(long serverId, int userId) {\n        getWritableDatabase().delete(TABLE_LOCAL_MUTE,\n                LOCAL_MUTE_SERVER + \"=? AND \" + LOCAL_MUTE_USER + \"=?\",\n                new String[] { String.valueOf(serverId), String.valueOf(userId) });\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43724, "method_name": "getLocalIgnoredUsers", "class_name": "MumlaSQLiteDatabase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "List<Integer>", "snippet": "    public List<Integer> getLocalIgnoredUsers(long serverId) {\n        Cursor cursor = getReadableDatabase().query(TABLE_LOCAL_IGNORE,\n                new String[] { LOCAL_IGNORE_USER },\n                LOCAL_IGNORE_SERVER + \"=?\",\n                new String[] { String.valueOf(serverId) },\n                null, null, null);\n        cursor.moveToFirst();\n        List<Integer> users = new ArrayList<Integer>();\n        while (!cursor.isAfterLast()) {\n            users.add(cursor.getInt(0));\n            cursor.moveToNext();\n        }\n        return users;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43725, "method_name": "addLocalIgnoredUser", "class_name": "MumlaSQLiteDatabase", "params": ["long", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addLocalIgnoredUser(long serverId, int userId) {\n        ContentValues values = new ContentValues();\n        values.put(LOCAL_IGNORE_SERVER, serverId);\n        values.put(LOCAL_IGNORE_USER, userId);\n        getWritableDatabase().insert(TABLE_LOCAL_IGNORE, null, values);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43726, "method_name": "removeLocalIgnoredUser", "class_name": "MumlaSQLiteDatabase", "params": ["long", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeLocalIgnoredUser(long serverId, int userId) {\n        getWritableDatabase().delete(TABLE_LOCAL_IGNORE,\n                LOCAL_IGNORE_SERVER + \"=? AND \" + LOCAL_IGNORE_USER + \"=?\",\n                new String[] { String.valueOf(serverId), String.valueOf(userId) });\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43727, "method_name": "addCertificate", "class_name": "MumlaSQLiteDatabase", "params": ["String", "byte"], "throws": null, "modifiers": ["public"], "return_type": "DatabaseCertificate", "snippet": "    public DatabaseCertificate addCertificate(String name, byte[] certificate) {\n        ContentValues values = new ContentValues();\n        values.put(COLUMN_CERTIFICATES_NAME, name);\n        values.put(COLUMN_CERTIFICATES_DATA, certificate);\n        long id = getWritableDatabase().insert(TABLE_CERTIFICATES, null, values);\n        return new DatabaseCertificate(id, name);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43728, "method_name": "getCertificates", "class_name": "MumlaSQLiteDatabase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DatabaseCertificate>", "snippet": "    public List<DatabaseCertificate> getCertificates() {\n        Cursor cursor = getReadableDatabase().query(TABLE_CERTIFICATES,\n                new String[] { COLUMN_CERTIFICATES_ID, COLUMN_CERTIFICATES_NAME },\n                null, null, null, null, null);\n        List<DatabaseCertificate> certificates = new ArrayList<>();\n        cursor.moveToFirst();\n        while (!cursor.isAfterLast()) {\n            certificates.add(new DatabaseCertificate(cursor.getLong(0), cursor.getString(1)));\n            cursor.moveToNext();\n        }\n        cursor.close();\n        return certificates;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43729, "method_name": "getCertificateData", "class_name": "MumlaSQLiteDatabase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] getCertificateData(long id) {\n        Cursor cursor = getReadableDatabase().query(TABLE_CERTIFICATES,\n                new String[] { COLUMN_CERTIFICATES_DATA },\n                COLUMN_CERTIFICATES_ID + \"=?\",\n                new String[] { String.valueOf(id) }, null, null, null);\n        if (!cursor.moveToFirst())\n            return null;\n        byte[] data = cursor.getBlob(0);\n        cursor.close();\n        return data;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43730, "method_name": "removeCertificate", "class_name": "MumlaSQLiteDatabase", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void removeCertificate(long id) {\n        getWritableDatabase().delete(TABLE_CERTIFICATES,\n                COLUMN_CERTIFICATES_ID + \"=?\",\n                new String[] { String.valueOf(id) });\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43731, "method_name": "isCommentSeen", "class_name": "MumlaSQLiteDatabase", "params": ["String", "byte"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isCommentSeen(String hash, byte[] commentHash) {\n        Cursor cursor = getReadableDatabase().query(TABLE_COMMENTS,\n                new String[]{COMMENTS_WHO, COMMENTS_COMMENT, COMMENTS_SEEN}, COMMENTS_WHO + \"=? AND \" + COMMENTS_COMMENT + \"=?\",\n                new String[]{hash, new String(commentHash)},\n                null, null, null);\n        boolean hasNext = cursor.moveToNext();\n        cursor.close();\n        return hasNext;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43732, "method_name": "markCommentSeen", "class_name": "MumlaSQLiteDatabase", "params": ["String", "byte"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void markCommentSeen(String hash, byte[] commentHash) {\n        ContentValues values = new ContentValues();\n        values.put(COMMENTS_WHO, hash);\n        values.put(COMMENTS_COMMENT, commentHash);\n        values.put(COMMENTS_SEEN, \"datetime('now')\");\n        getWritableDatabase().replace(TABLE_COMMENTS, null, values);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/db/MumlaSQLiteDatabase.java", "stars": "9", "class_props": {"extends": "SQLiteOpenHelper", "implements": ["MumlaDatabase"], "modifiers": ["public"]}}, {"id": 43733, "method_name": "getArgumentTypes", "class_name": "CommonContractExtensionFunction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SequenceType", "snippet": "    public SequenceType[] getArgumentTypes()\n    {\n\t\treturn new SequenceType[] { SequenceType.SINGLE_INTEGER };\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/docgen/CommonContractExtensionFunction.java", "stars": "12", "class_props": {"extends": "CommonExtensionFunction", "implements": null, "modifiers": ["public"]}}, {"id": 43734, "method_name": "getResultType", "class_name": "CommonContractExtensionFunction", "params": ["SequenceType"], "throws": null, "modifiers": ["public"], "return_type": "SequenceType", "snippet": "    public SequenceType getResultType( SequenceType[] suppliedArgumentTypes )\n    {\n\t\treturn SequenceType.SINGLE_NODE;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/docgen/CommonContractExtensionFunction.java", "stars": "12", "class_props": {"extends": "CommonExtensionFunction", "implements": null, "modifiers": ["public"]}}, {"id": 43735, "method_name": "makeCallExpression", "class_name": "CommonContractExtensionFunction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExtensionFunctionCall", "snippet": "    public ExtensionFunctionCall makeCallExpression()\n    {\n\t\treturn new ExtensionFunctionCall()\n\t\t{\n\t\t\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n            public SequenceIterator call( SequenceIterator[] arguments, XPathContext ctx )\n\t\t\t    throws XPathException\n\t\t\t{\n\t\t\t\ttry\n                {\n\t\t\t\t\tint commonContractId = (int)((IntegerValue)arguments[0].next()).longValue();\n\t\t\t\t\t\n\t\t\t\t\tDocument doc = XMLUtils.newDocument();\n\t\t\t\t\t\n\t\t\t\t\tElement data = XMLUtils.newElement( doc, \"data\" );\n\t\t\t\t\t\n\t\t\t\t\tXMLDatabaseElementSerializer.addItemsFromRS( con, data, \n\t\t\t\t\t                                             Tables.TABLE_COMMON_CONTRACT.trim(), \"id\", \n\t\t\t\t\t                                             String.valueOf( commonContractId ), \n\t\t\t\t\t                                             null, false, null, null, \"\" );\n\t\t\t\t\taddParams( data, CommonContract.OBJECT_TYPE, commonContractId );\n\t\t\t\t\t\n\t\t\t\t\treturn SingletonIterator.makeIterator( new DocumentWrapper( doc, \"\", new Configuration() ) );\n                }\n                catch( Exception e )\n                {\n\t                throw new XPathException( e );\n                }\n\t\t\t}\n\t\t};\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/docgen/CommonContractExtensionFunction.java", "stars": "12", "class_props": {"extends": "CommonExtensionFunction", "implements": null, "modifiers": ["public"]}}, {"id": 43736, "method_name": "transformSelectOrUpdate", "class_name": "JSqlParserHelper", "params": ["String", "String"], "throws": ["JSQLParserException"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String transformSelectOrUpdate(final String sql, String scheme) throws JSQLParserException {\n        var list = new ArrayList<String>();\n        var statement = CCJSqlParserUtil.parse(sql);\n        if (statement instanceof Select || statement instanceof Update) {\n            var tablesNamesFinder = new TablesNamesFinder();\n            var tableList = tablesNamesFinder.getTableList(statement);\n            list.addAll(tableList);\n        }\n        var result = sql;\n        for (var table : list) {\n            //\u8bf4\u660e\u8868\u540d\u5df2\u7ecf\u52a0\u4e86\u6570\u636e\u5e93\u540d\u79f0\n            if (table.contains(\".\")) {\n                continue;\n            }\n            var tName = scheme + \".\" + table;\n            result = sql.replaceAll(table, tName);\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/JSqlParserHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43737, "method_name": "transformShowSql", "class_name": "JSqlParserHelper", "params": ["String", "String"], "throws": ["JSQLParserException"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String transformShowSql(String sql, String scheme) throws JSQLParserException {\n        var str = sql.toLowerCase();\n        var statement = (ShowStatement) CCJSqlParserUtil.parse(sql);\n        var name = statement.getName();\n        var c = \"tables\".equals(name) && !str.contains(\"from\");\n        if (c) {\n            var newName = name + \" from \" + scheme;\n            statement.setName(newName);\n            sql = statement.toString();\n        }\n        return sql;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/JSqlParserHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43738, "method_name": "transform", "class_name": "JSqlParserHelper", "params": ["String", "String"], "throws": ["JSQLParserException"], "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String transform(String str, String scheme) throws JSQLParserException {\n        var b = str.toLowerCase().startsWith(\"show\");\n        var sql = \"\";\n        if (b) {\n            sql = JSqlParserHelper.transformShowSql(str, scheme);\n        } else {\n            sql = JSqlParserHelper.transformSelectOrUpdate(str, scheme);\n        }\n        return sql;\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/mysql/src/main/java/com/openjfx/database/mysql/JSqlParserHelper.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43739, "method_name": "getInstance", "class_name": "RightMaximalSubstring", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getInstance() {\n\t\treturn new RightMaximalSubstring(alphabetLength,log2alphabetLength,bitsToEncodeAlphabetLength,bwtLength,log2BWTLength,bitsToEncodeBWTLength);\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/RightMaximalSubstring.java", "stars": "2", "class_props": {"extends": "Substring", "implements": null, "modifiers": ["public"]}}, {"id": 43740, "method_name": "getEpsilon", "class_name": "RightMaximalSubstring", "params": ["long"], "throws": null, "modifiers": ["protected"], "return_type": "Substring", "snippet": "\tprotected Substring getEpsilon(long[] C) {\n\t\tRightMaximalSubstring out = (RightMaximalSubstring)getInstance();\n\n\t\t// $bwtIntervals$\n\t\tout.nIntervals=alphabetLength+1;\n\t\tout.bwtIntervals[0][0]=0;  // $#$\n\t\tout.bwtIntervals[0][1]=0;\n\t\tfor (int i=0; i<alphabetLength-1; i++) {  // Other characters\n\t\t\tout.bwtIntervals[i+1][0]=C[i];\n\t\t\tout.bwtIntervals[i+1][1]=C[i+1]-1;\n\t\t}\n\t\tout.bwtIntervals[alphabetLength][0]=C[alphabetLength-1];\n\t\tout.bwtIntervals[alphabetLength][1]=bwtLength-1;\n\n\t\t// Other variables\n\t\tout.address=-1;\n\t\tout.log2address=-1;\n\t\tout.previousAddress=-1;\n\t\tout.length=0;\n\t\tout.log2length=-1;\n\t\tout.bitsToEncodeLength=1;\n\t\tout.firstCharacter=-1;\n\t\tout.hasBeenExtended=false;\n\t\tout.hasBeenStolen=false;\n\t\tout.computeRightContext();\n\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/RightMaximalSubstring.java", "stars": "2", "class_props": {"extends": "Substring", "implements": null, "modifiers": ["public"]}}, {"id": 43741, "method_name": "computeRightContext", "class_name": "RightMaximalSubstring", "params": [], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "\tprotected final void computeRightContext() {\n\t\trightContext=0;\n\t\tfor (int c=0; c<nIntervals; c++) {\n\t\t\tif (bwtIntervals[c][1]>=bwtIntervals[c][0]) rightContext++;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/RightMaximalSubstring.java", "stars": "2", "class_props": {"extends": "Substring", "implements": null, "modifiers": ["public"]}}, {"id": 43742, "method_name": "initAfterExtending", "class_name": "RightMaximalSubstring", "params": ["Substring", "int", "RigidStream", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void initAfterExtending(Substring suffix, int firstCharacter, RigidStream characterStack, int[] buffer) {\n\t\tsuper.initAfterExtending(suffix,firstCharacter,characterStack,buffer);\n\t\tcomputeRightContext();\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/RightMaximalSubstring.java", "stars": "2", "class_props": {"extends": "Substring", "implements": null, "modifiers": ["public"]}}, {"id": 43743, "method_name": "shouldBeExtendedLeft", "class_name": "RightMaximalSubstring", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "boolean", "snippet": "\tprotected boolean shouldBeExtendedLeft() {\n\t\treturn rightContext>1;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/RightMaximalSubstring.java", "stars": "2", "class_props": {"extends": "Substring", "implements": null, "modifiers": ["public"]}}, {"id": 43744, "method_name": "frequency", "class_name": "RightMaximalSubstring", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "long", "snippet": "\tprotected long frequency() {\n\t\treturn bwtIntervals[alphabetLength][1]>=bwtIntervals[0][0]?bwtIntervals[alphabetLength][1]-bwtIntervals[0][0]+1:0;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/RightMaximalSubstring.java", "stars": "2", "class_props": {"extends": "Substring", "implements": null, "modifiers": ["public"]}}, {"id": 43745, "method_name": "toString", "class_name": "RightMaximalSubstring", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\tString out = super.toString()+\" | \";\n\t\tout+=\"rightContext=\"+rightContext+\" \";\n\t\treturn out;\n\t}", "url": "https://raw.githubusercontent.com/fcunial/portfolio/master/surprisingStrings/RightMaximalSubstring.java", "stars": "2", "class_props": {"extends": "Substring", "implements": null, "modifiers": ["public"]}}, {"id": 43746, "method_name": "getKind", "class_name": "GamepadButtonEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getKind() {\n        return kind;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/gamepad/GamepadButtonEvent.java", "stars": "4", "class_props": {"extends": "GamepadEvent", "implements": null, "modifiers": ["public"]}}, {"id": 43747, "method_name": "getButtonNumber", "class_name": "GamepadButtonEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getButtonNumber() {\n        return buttonNumber;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/gamepad/GamepadButtonEvent.java", "stars": "4", "class_props": {"extends": "GamepadEvent", "implements": null, "modifiers": ["public"]}}, {"id": 43748, "method_name": "shouldSetParameter", "class_name": "LongTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldSetParameter() throws Exception {\n    TYPE_HANDLER.setParameter(ps, 1, 100L, null);\n    verify(ps).setLong(1, 100L);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LongTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 43749, "method_name": "shouldGetResultFromResultSetByName", "class_name": "LongTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByName() throws Exception {\n    when(rs.getLong(\"column\")).thenReturn(100L);\n    assertEquals(Long.valueOf(100L), TYPE_HANDLER.getResult(rs, \"column\"));\n\n    when(rs.getLong(\"column\")).thenReturn(0L);\n    assertEquals(Long.valueOf(0L), TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LongTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 43750, "method_name": "shouldGetResultNullFromResultSetByName", "class_name": "LongTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByName() throws Exception {\n    when(rs.getLong(\"column\")).thenReturn(0L);\n    when(rs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(rs, \"column\"));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LongTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 43751, "method_name": "shouldGetResultFromResultSetByPosition", "class_name": "LongTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromResultSetByPosition() throws Exception {\n    when(rs.getLong(1)).thenReturn(100L);\n    assertEquals(Long.valueOf(100L), TYPE_HANDLER.getResult(rs, 1));\n\n    when(rs.getLong(1)).thenReturn(0L);\n    assertEquals(Long.valueOf(0L), TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LongTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 43752, "method_name": "shouldGetResultNullFromResultSetByPosition", "class_name": "LongTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromResultSetByPosition() throws Exception {\n    when(rs.getLong(1)).thenReturn(0L);\n    when(rs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(rs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LongTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 43753, "method_name": "shouldGetResultFromCallableStatement", "class_name": "LongTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultFromCallableStatement() throws Exception {\n    when(cs.getLong(1)).thenReturn(100L);\n    assertEquals(Long.valueOf(100L), TYPE_HANDLER.getResult(cs, 1));\n\n    when(cs.getLong(1)).thenReturn(0L);\n    assertEquals(Long.valueOf(0L), TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LongTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 43754, "method_name": "shouldGetResultNullFromCallableStatement", "class_name": "LongTypeHandlerTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shouldGetResultNullFromCallableStatement() throws Exception {\n    when(cs.getLong(1)).thenReturn(0L);\n    when(cs.wasNull()).thenReturn(true);\n    assertNull(TYPE_HANDLER.getResult(cs, 1));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/type/LongTypeHandlerTest.java", "stars": "15", "class_props": {"extends": "BaseTypeHandlerTest", "implements": null, "modifiers": []}}, {"id": 43755, "method_name": "onApplyWindowInsets", "class_name": "OnApplyWindowInsetsListenerImplementor", "params": ["android", "android"], "throws": null, "modifiers": ["public"], "return_type": "android", "snippet": "\tpublic android.support.v4.view.WindowInsetsCompat onApplyWindowInsets (android.view.View p0, android.support.v4.view.WindowInsetsCompat p1)\n\t{\n\t\treturn n_onApplyWindowInsets (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/OnApplyWindowInsetsListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43756, "method_name": "n_onApplyWindowInsets", "class_name": "OnApplyWindowInsetsListenerImplementor", "params": ["android", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "android", "snippet": "\tprivate native android.support.v4.view.WindowInsetsCompat n_onApplyWindowInsets (android.view.View p0, android.support.v4.view.WindowInsetsCompat p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/OnApplyWindowInsetsListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43757, "method_name": "monodroidAddReference", "class_name": "OnApplyWindowInsetsListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/OnApplyWindowInsetsListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43758, "method_name": "monodroidClearReferences", "class_name": "OnApplyWindowInsetsListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/OnApplyWindowInsetsListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 43759, "method_name": "onScrollChanged", "class_name": "ScrollWebView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onScrollChanged(final int l, final int t, final int oldl,\n                                   final int oldt) {\n        super.onScrollChanged(l, t, oldl, oldt);\n\n        if (mOnScrollListener != null) {\n            mOnScrollListener.onScroll(l, t, oldl, oldt);\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/ScrollWebView.java", "stars": "2", "class_props": {"extends": "WebView", "implements": null, "modifiers": ["public"]}}, {"id": 43760, "method_name": "getOnScrollListener", "class_name": "ScrollWebView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "OnScrollListener", "snippet": "    public OnScrollListener getOnScrollListener() {\n        return mOnScrollListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/ScrollWebView.java", "stars": "2", "class_props": {"extends": "WebView", "implements": null, "modifiers": ["public"]}}, {"id": 43761, "method_name": "setOnScrollListener", "class_name": "ScrollWebView", "params": ["OnScrollListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnScrollListener(final OnScrollListener onScrollChangedCallback) {\n        mOnScrollListener = onScrollChangedCallback;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/ScrollWebView.java", "stars": "2", "class_props": {"extends": "WebView", "implements": null, "modifiers": ["public"]}}, {"id": 43762, "method_name": "calculate", "class_name": "ExponentialRegression", "params": ["double", "double", "double", "int", "DoubleUnaryOperator"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "String", "snippet": "    public String calculate(double searched, double start, double end, int n, DoubleUnaryOperator function) throws Exception {\n        validate(searched, start, end, n);\n\n        var points = arrayPoints(start, end, n, function);\n        var xs = points.getKey();\n        var ys = points.getValue();\n\n        int length = xs.length;\n\n        double sumX = Arrays.stream(xs).sum();\n        double sumX2 = Arrays.stream(xs).map(x -> Math.pow(x, 2)).sum();\n        double sumY = Arrays.stream(ys).map(Math::log).sum();\n\n        double sumXY = 0.00;\n        for (int i = 0; i < length; i++)\n            sumXY = sumXY + (xs[i] * (Math.log(ys[i])));\n\n        double b = ((length * sumXY) - (sumX * sumY)) / (length * sumX2 - (sumX * sumX));\n        double a = Math.pow(Math.E, (sumY - (b * sumX)) / length);\n\n        DoubleUnaryOperator y = (double x) -> a * (Math.pow(Math.E, b * x));\n        return \"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: \" + y.applyAsDouble(searched);\n    }", "url": "https://raw.githubusercontent.com/pi-181/num-methods-lab6/master/src/main/java/com/demkom58/nmlab6/regression/ExponentialRegression.java", "stars": "2", "class_props": {"extends": null, "implements": ["Regression"], "modifiers": ["public"]}}, {"id": 43763, "method_name": "nextBoolean", "class_name": "Live", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IO<Boolean>", "snippet": "    public IO<Boolean> nextBoolean() {\n      return IO.effect(random::nextBoolean);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Random.java", "stars": "11", "class_props": {"extends": null, "implements": ["Random"], "modifiers": []}}, {"id": 43764, "method_name": "nextInteger", "class_name": "Live", "params": [], "throws": null, "modifiers": ["public"], "return_type": "IO<Integer>", "snippet": "    public IO<Integer> nextInteger() {\n      return IO.effect(random::nextInt);\n    }", "url": "https://raw.githubusercontent.com/chris-albert/zio4j/master/src/main/java/io/lbert/Random.java", "stars": "11", "class_props": {"extends": null, "implements": ["Random"], "modifiers": []}}, {"id": 43765, "method_name": "testJWT", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testJWT() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest.setKeyDate(LocalDate.now().atStartOfDay().atOffset(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(0);\n\t\tMockHttpServletResponse response = mockMvc.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest))).andExpect(status().is2xxSuccessful())\n\t\t\t\t.andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43766, "method_name": "testJWTFake", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testJWTFake() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest.setKeyDate(LocalDate.now().atStartOfDay().atOffset(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\t\texposeeRequest.setIsFake(1);\n\t\tMockHttpServletResponse response = mockMvc.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest))).andExpect(status().is2xxSuccessful())\n\t\t\t\t.andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43767, "method_name": "keyDateNotOlderThan21Days", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void keyDateNotOlderThan21Days() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest.setKeyDate(\n\t\t\t\tOffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).minusDays(22).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\n\t\tMockHttpServletResponse response = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is4xxClientError()).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43768, "method_name": "keyDateNotInTheFuture", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void keyDateNotInTheFuture() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest.setKeyDate(\n\t\t\t\tOffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusMinutes(1).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\n\t\tMockHttpServletResponse response = mockMvc\n\t\t\t\t.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON).header(\"User-Agent\", \"MockMVC\")\n\t\t\t\t\t\t.content(json(exposeeRequest)))\n\t\t\t\t.andExpect(status().is4xxClientError()).andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43769, "method_name": "justNowShouldBeFine", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void justNowShouldBeFine() throws Exception {\n\t\tExposeeRequest exposeeRequest = new ExposeeRequest();\n\t\texposeeRequest.setAuthData(new ExposeeAuthData());\n\t\texposeeRequest\n\t\t\t\t.setKeyDate(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).toInstant().toEpochMilli());\n\t\texposeeRequest.setKey(Base64.getEncoder().encodeToString(\"testKey32Bytes--testKey32Bytes--\".getBytes(\"UTF-8\")));\n\n\t\tMockHttpServletResponse response = mockMvc.perform(post(\"/v1/exposed\").contentType(MediaType.APPLICATION_JSON)\n\t\t\t\t.header(\"User-Agent\", \"MockMVC\").content(json(exposeeRequest))).andExpect(status().is2xxSuccessful())\n\t\t\t\t.andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43770, "method_name": "testBucketsAndExposedResponse", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void testBucketsAndExposedResponse() throws Exception {\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tget(\"/v1/buckets/2020-04-29\").contentType(MediaType.APPLICATION_JSON).header(\"User-Agent\", \"MockMVC\"))\n\t\t\t\t.andExpect(status().is(200)).andReturn().getResponse();\n\t\tLong bucket = mapper.readTree(response.getContentAsString()).get(\"buckets\").elements().next().asLong();\n\t\tresponse = mockMvc.perform(get(\"/v1/exposed/\" + bucket.toString())).andExpect(status().is2xxSuccessful())\n\t\t\t\t.andReturn().getResponse();\n\t\tassertEquals(response.getContentType(), \"application/x-protobuf\");\n\t\tresponse = mockMvc.perform(get(\"/v1/exposedjson/\" + bucket.toString())).andExpect(status().is2xxSuccessful())\n\t\t\t\t.andReturn().getResponse();\n\t\tassertEquals(response.getContentType(), \"application/json\");\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43771, "method_name": "test400WhenNotModBatch", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void test400WhenNotModBatch() throws Exception {\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tget(\"/v1/buckets/2020-04-29\").contentType(MediaType.APPLICATION_JSON).header(\"User-Agent\", \"MockMVC\"))\n\t\t\t\t.andExpect(status().is(200)).andReturn().getResponse();\n\t\tLong bucket = mapper.readTree(response.getContentAsString()).get(\"buckets\").elements().next().asLong() + 1;\n\n\t\tresponse = mockMvc.perform(get(\"/v1/exposed/\" + Long.toString(bucket))).andExpect(status().isBadRequest())\n\t\t\t\t.andReturn().getResponse();\n\t\tresponse = mockMvc.perform(get(\"/v1/exposedjson/\" + Long.toString(bucket))).andExpect(status().isBadRequest())\n\t\t\t\t.andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43772, "method_name": "test404", "class_name": "DPPPTControllerNoSecurityTest", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void test404() throws Exception {\n\t\tMockHttpServletResponse response = mockMvc.perform(\n\t\t\t\tget(\"/v1/buckets/2020-04-29\").contentType(MediaType.APPLICATION_JSON).header(\"User-Agent\", \"MockMVC\"))\n\t\t\t\t.andExpect(status().is(200)).andReturn().getResponse();\n\t\tIterator<JsonNode> buckets = mapper.readTree(response.getContentAsString()).get(\"buckets\").elements();\n\t\tLong first = buckets.next().asLong();\n\t\tLong next = buckets.next().asLong();\n\t\tLong batchLength = next - first;\n\t\tlong future = (long) Math\n\t\t\t\t.floor(OffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).plusDays(1).toInstant().toEpochMilli()\n\t\t\t\t\t\t/ batchLength)\n\t\t\t\t* batchLength;\n\t\tlong past = (long) Math.floor(\n\t\t\t\tOffsetDateTime.now().withOffsetSameInstant(ZoneOffset.UTC).minusYears(1).toInstant().toEpochMilli()\n\t\t\t\t\t\t/ batchLength)\n\t\t\t\t* batchLength;\n\n\t\tresponse = mockMvc.perform(get(\"/v1/exposed/\" + Long.toString(future))).andExpect(status().isNotFound())\n\t\t\t\t.andReturn().getResponse();\n\t\tresponse = mockMvc.perform(get(\"/v1/exposedjson/\" + Long.toString(future))).andExpect(status().isNotFound())\n\t\t\t\t.andReturn().getResponse();\n\n\t\tresponse = mockMvc.perform(get(\"/v1/exposed/\" + Long.toString(past))).andExpect(status().isNotFound())\n\t\t\t\t.andReturn().getResponse();\n\t\tresponse = mockMvc.perform(get(\"/v1/exposedjson/\" + Long.toString(past))).andExpect(status().isNotFound())\n\t\t\t\t.andReturn().getResponse();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-ws/src/test/java/org/dpppt/backend/sdk/ws/controller/DPPPTControllerNoSecurityTest.java", "stars": "125", "class_props": {"extends": "BaseControllerNoSecurityTest", "implements": null, "modifiers": ["public"]}}, {"id": 43773, "method_name": "createIFReq", "class_name": "IFReq", "params": ["Emulator<?>", "Pointer"], "throws": null, "modifiers": ["public", "static"], "return_type": "IFReq", "snippet": "    public static IFReq createIFReq(Emulator<?> emulator, Pointer pointer) {\n        return emulator.is64Bit() ? new IFReq64(pointer) : new IFReq32(pointer);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/struct/IFReq.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43774, "method_name": "getAddrPointer", "class_name": "IFReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Pointer", "snippet": "    public Pointer getAddrPointer() {\n        return getPointer().share(IFNAMSIZ);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/struct/IFReq.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43775, "method_name": "setName", "class_name": "IFReq", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        byte[] data = name.getBytes(StandardCharsets.UTF_8);\n        if (data.length >= IFNAMSIZ) {\n            throw new IllegalStateException(\"name=\" + name);\n        }\n        ifrn_name = Arrays.copyOf(data, IFNAMSIZ);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/struct/IFReq.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43776, "method_name": "handleEntidadeNaoEncontrada", "class_name": "ApiExceptionHandler", "params": ["NegocioException", "WebRequest"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Object>", "snippet": "\tpublic ResponseEntity<Object> handleEntidadeNaoEncontrada(NegocioException ex, WebRequest request) {\n\t\tvar status = HttpStatus.NOT_FOUND;\n\n\t\tvar problema = new Problema();\n\n\t\tproblema.setStatus(status.value());\n\t\tproblema.setTitulo(ex.getMessage());\n\t\tproblema.setDataHora(OffsetDateTime.now());\n\n\t\treturn handleExceptionInternal(ex, problema, new HttpHeaders(), status, request);\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/exceptionhandler/ApiExceptionHandler.java", "stars": "2", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43777, "method_name": "handleNegocio", "class_name": "ApiExceptionHandler", "params": ["NegocioException", "WebRequest"], "throws": null, "modifiers": ["public"], "return_type": "ResponseEntity<Object>", "snippet": "\tpublic ResponseEntity<Object> handleNegocio(NegocioException ex, WebRequest request) {\n\t\tvar status = HttpStatus.BAD_REQUEST;\n\n\t\tvar problema = new Problema();\n\n\t\tproblema.setStatus(status.value());\n\t\tproblema.setTitulo(ex.getMessage());\n\t\tproblema.setDataHora(OffsetDateTime.now());\n\n\t\treturn handleExceptionInternal(ex, problema, new HttpHeaders(), status, request);\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/exceptionhandler/ApiExceptionHandler.java", "stars": "2", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43778, "method_name": "handleMethodArgumentNotValid", "class_name": "ApiExceptionHandler", "params": ["MethodArgumentNotValidException", "HttpHeaders", "HttpStatus", "WebRequest"], "throws": null, "modifiers": ["protected"], "return_type": "ResponseEntity<Object>", "snippet": "\tprotected ResponseEntity<Object> handleMethodArgumentNotValid(MethodArgumentNotValidException ex,\n\t\t\tHttpHeaders headers, HttpStatus status, WebRequest request) {\n\n\t\tvar campos = new ArrayList<Problema.Campo>();\n\n\t\tfor (ObjectError error : ex.getBindingResult().getAllErrors()) {\n\t\t\tString nome = ((FieldError) error).getField();\n\n\t\t\t// Aqui vai usar a mensagem traduzida no message.properties\n\t\t\tString mensagem = messageSource.getMessage(error, LocaleContextHolder.getLocale());\n\n\t\t\tcampos.add(new Problema.Campo(nome, mensagem));\n\t\t}\n\n\t\tvar problema = new Problema();\n\t\tproblema.setStatus(status.value());\n\t\tproblema.setTitulo(\"Um ou mais campos est\u00e3o inv\u00e1lidos. \" + \"Fa\u00e7a o preenchimento correto e tente novamente\");\n\t\tproblema.setDataHora(OffsetDateTime.now());\n\n\t\tproblema.setCampos(campos);\n\n\t\treturn super.handleExceptionInternal(ex, problema, headers, status, request);\n\t}", "url": "https://raw.githubusercontent.com/jeanpsilva/osworks/master/src/main/java/com/algaworks/osworks/api/exceptionhandler/ApiExceptionHandler.java", "stars": "2", "class_props": {"extends": "ResponseEntityExceptionHandler", "implements": null, "modifiers": ["public"]}}, {"id": 43779, "method_name": "run", "class_name": "LDAPServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run() {\n\t\ttry {\n\t\t\tInMemoryDirectoryServerConfig config = new InMemoryDirectoryServerConfig(LDAP_BASE);\n\t\t\tconfig.setListenerConfigs(new InMemoryListenerConfig(\n\t\t\t\t\t\"listen\", //$NON-NLS-1$\n\t\t\t\t\tInetAddress.getByName(\"0.0.0.0\"), //$NON-NLS-1$\n\t\t\t\t\tport,\n\t\t\t\t\tServerSocketFactory.getDefault(),\n\t\t\t\t\tSocketFactory.getDefault(),\n\t\t\t\t\t(SSLSocketFactory) SSLSocketFactory.getDefault()));\n\n\t\t\tconfig.addInMemoryOperationInterceptor(new OperationInterceptor(this.codebase_url));\n\t\t\tInMemoryDirectoryServer ds = new InMemoryDirectoryServer(config);\n\t\t\tds.startListening();\n\n\t\t} catch (Exception e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/LDAPServer.java", "stars": "165", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 43780, "method_name": "processSearchResult", "class_name": "OperationInterceptor", "params": ["InMemoryInterceptedSearchResult"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void processSearchResult(InMemoryInterceptedSearchResult result) {\n\t\t\tString base = result.getRequest().getBaseDN();\n\t\t\tEntry  e    = new Entry(base);\n\t\t\ttry {\n\t\t\t\tsendResult(result, base, e);\n\t\t\t} catch (Exception e1) {\n\t\t\t\te1.printStackTrace();\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/LDAPServer.java", "stars": "165", "class_props": {"extends": "InMemoryOperationInterceptor", "implements": null, "modifiers": ["static", "private"]}}, {"id": 43781, "method_name": "sendResult", "class_name": "OperationInterceptor", "params": ["InMemoryInterceptedSearchResult", "String", "Entry"], "throws": ["LDAPException", "MalformedURLException"], "modifiers": ["protected"], "return_type": "void", "snippet": "\t\tprotected void sendResult(InMemoryInterceptedSearchResult result, String base, Entry e) throws LDAPException, MalformedURLException {\n\n\t\t\tString cbstring    = this.codebase.toString();\n\t\t\tString javaFactory = Mapper.reflect.get(StringUtil.getClassName(base));\n\n\t\t\tif (javaFactory != null) {\n\t\t\t\tURL turl = new URL(cbstring +javaFactory.concat(StringUtil.getVersion(base)+\".class\"));\n\t\t\t\tLogger.warning(\"  LDAP \u670d\u52a1\u5668 >> \u53d1\u9001\u5f15\u7528\uff1a\" + base + \" \u91cd\u5b9a\u5411\u81f3 \" + turl);\n\t\t\t\te.addAttribute(\"javaClassName\", \"foo\");\n\t\t\t\te.addAttribute(\"javaCodeBase\", cbstring);\n\t\t\t\te.addAttribute(\"objectClass\", \"javaNamingReference\"); //$NON-NLS-1$\n\t\t\t\te.addAttribute(\"javaFactory\", javaFactory.concat(StringUtil.getVersion(base)));\n\t\t\t\tresult.sendSearchEntry(e);\n\t\t\t\tresult.setResult(new LDAPResult(0, ResultCode.SUCCESS));\n\t\t\t} else {\n\t\t\t\tLogger.error(\"  LDAP \u670d\u52a1\u5668 >> \u65e0\u6cd5\u627e\u5230\u76f8\u5173\u5f15\u7528\uff1a \" + base);\n\t\t\t}\n\t\t}", "url": "https://raw.githubusercontent.com/JosephTribbianni/JNDI/master/src/main/java/org/su18/server/LDAPServer.java", "stars": "165", "class_props": {"extends": "InMemoryOperationInterceptor", "implements": null, "modifiers": ["static", "private"]}}, {"id": 43782, "method_name": "bubbleSort", "class_name": "Code02_BubbleSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void bubbleSort(int[] arr) {\n\t\tif (arr == null || arr.length < 2) {\n\t\t\treturn;\n\t\t}\n\t\t// 0 ~ N-1\n\t\t// 0 ~ N-2\n\t\t// 0 ~ N-3\n\t\tfor (int e = arr.length - 1; e > 0; e--) { // 0 ~ e\n\t\t\tfor (int i = 0; i < e; i++) {\n\t\t\t\tif (arr[i] > arr[i + 1]) {\n\t\t\t\t\tswap(arr, i, i + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43783, "method_name": "swap", "class_name": "Code02_BubbleSort", "params": ["int", "int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void swap(int[] arr, int i, int j) {\n\t\tarr[i] = arr[i] ^ arr[j];\n\t\tarr[j] = arr[i] ^ arr[j];\n\t\tarr[i] = arr[i] ^ arr[j];\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43784, "method_name": "comparator", "class_name": "Code02_BubbleSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void comparator(int[] arr) {\n\t\tArrays.sort(arr);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43785, "method_name": "generateRandomArray", "class_name": "Code02_BubbleSort", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int[] generateRandomArray(int maxSize, int maxValue) {\n\t\tint[] arr = new int[(int) ((maxSize + 1) * Math.random())];\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tarr[i] = (int) ((maxValue + 1) * Math.random()) - (int) (maxValue * Math.random());\n\t\t}\n\t\treturn arr;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43786, "method_name": "copyArray", "class_name": "Code02_BubbleSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int[] copyArray(int[] arr) {\n\t\tif (arr == null) {\n\t\t\treturn null;\n\t\t}\n\t\tint[] res = new int[arr.length];\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tres[i] = arr[i];\n\t\t}\n\t\treturn res;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43787, "method_name": "isEqual", "class_name": "Code02_BubbleSort", "params": ["int", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "\tpublic static boolean isEqual(int[] arr1, int[] arr2) {\n\t\tif ((arr1 == null && arr2 != null) || (arr1 != null && arr2 == null)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (arr1 == null && arr2 == null) {\n\t\t\treturn true;\n\t\t}\n\t\tif (arr1.length != arr2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (int i = 0; i < arr1.length; i++) {\n\t\t\tif (arr1[i] != arr2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43788, "method_name": "printArray", "class_name": "Code02_BubbleSort", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void printArray(int[] arr) {\n\t\tif (arr == null) {\n\t\t\treturn;\n\t\t}\n\t\tfor (int i = 0; i < arr.length; i++) {\n\t\t\tSystem.out.print(arr[i] + \" \");\n\t\t}\n\t\tSystem.out.println();\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43789, "method_name": "main", "class_name": "Code02_BubbleSort", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\t\t\n\t\tint testTime = 500000;\n\t\tint maxSize = 100;\n\t\tint maxValue = 100;\n\t\tboolean succeed = true;\n\t\tfor (int i = 0; i < testTime; i++) {\n\t\t\tint[] arr1 = generateRandomArray(maxSize, maxValue);\n\t\t\tint[] arr2 = copyArray(arr1);\n\t\t\tbubbleSort(arr1);\n\t\t\tcomparator(arr2);\n\t\t\tif (!isEqual(arr1, arr2)) {\n\t\t\t\tsucceed = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tSystem.out.println(succeed ? \"Nice!\" : \"Fucking fucked!\");\n\n\t\tint[] arr = generateRandomArray(maxSize, maxValue);\n\t\tprintArray(arr);\n\t\tbubbleSort(arr);\n\t\tprintArray(arr);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class01/Code02_BubbleSort.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43790, "method_name": "ok", "class_name": "BaseResponse", "params": ["String", "T"], "throws": null, "modifiers": ["public", "static"], "return_type": "BaseResponse<T>", "snippet": "    public static <T> BaseResponse<T> ok(@Nullable String message, @Nullable T data) {\n        return new BaseResponse<>(HttpStatus.OK.value(), message, data);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/dto/BaseResponse.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43791, "method_name": "ok", "class_name": "BaseResponse", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "BaseResponse<T>", "snippet": "    public static <T> BaseResponse<T> ok(@Nullable String message) {\n        return ok(message, null);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/dto/BaseResponse.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43792, "method_name": "ok", "class_name": "BaseResponse", "params": ["T"], "throws": null, "modifiers": ["public", "static"], "return_type": "BaseResponse<T>", "snippet": "    public static <T> BaseResponse<T> ok(@NonNull T data) {\n        return new BaseResponse<>(HttpStatus.OK.value(), HttpStatus.OK.getReasonPhrase(), data);\n    }", "url": "https://raw.githubusercontent.com/rubywooJ/beyond/master/src/main/java/cn/tsxygfy/beyond/model/dto/BaseResponse.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43793, "method_name": "getUnknownFields", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "com", "snippet": "  public final com.google.protobuf.UnknownFieldSet\n  getUnknownFields() {\n    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43794, "method_name": "getDescriptor", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "  public static final com.google.protobuf.Descriptors.Descriptor\n      getDescriptor() {\n    return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentReq_descriptor;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43795, "method_name": "internalGetFieldAccessorTable", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n      internalGetFieldAccessorTable() {\n    return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentReq_fieldAccessorTable\n        .ensureFieldAccessorsInitialized(\n            generated.xn.services.ex.api.grpcstream.protos.SegmentReq.class, generated.xn.services.ex.api.grpcstream.protos.SegmentReq.Builder.class);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43796, "method_name": "getId", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "  public java.lang.String getId() {\n    java.lang.Object ref = id_;\n    if (ref instanceof java.lang.String) {\n      return (java.lang.String) ref;\n    } else {\n      com.google.protobuf.ByteString bs = \n          (com.google.protobuf.ByteString) ref;\n      java.lang.String s = bs.toStringUtf8();\n      id_ = s;\n      return s;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43797, "method_name": "getIdBytes", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.ByteString\n      getIdBytes() {\n    java.lang.Object ref = id_;\n    if (ref instanceof java.lang.String) {\n      com.google.protobuf.ByteString b = \n          com.google.protobuf.ByteString.copyFromUtf8(\n              (java.lang.String) ref);\n      id_ = b;\n      return b;\n    } else {\n      return (com.google.protobuf.ByteString) ref;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43798, "method_name": "getSegment", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSegment() {\n    return segment_;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43799, "method_name": "getMac", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "  public java.lang.String getMac() {\n    java.lang.Object ref = mac_;\n    if (ref instanceof java.lang.String) {\n      return (java.lang.String) ref;\n    } else {\n      com.google.protobuf.ByteString bs = \n          (com.google.protobuf.ByteString) ref;\n      java.lang.String s = bs.toStringUtf8();\n      mac_ = s;\n      return s;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43800, "method_name": "getMacBytes", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.ByteString\n      getMacBytes() {\n    java.lang.Object ref = mac_;\n    if (ref instanceof java.lang.String) {\n      com.google.protobuf.ByteString b = \n          com.google.protobuf.ByteString.copyFromUtf8(\n              (java.lang.String) ref);\n      mac_ = b;\n      return b;\n    } else {\n      return (com.google.protobuf.ByteString) ref;\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43801, "method_name": "getClient", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getClient() {\n    return client_;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43802, "method_name": "getReqdate", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getReqdate() {\n    return reqdate_;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43803, "method_name": "isInitialized", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "  public final boolean isInitialized() {\n    byte isInitialized = memoizedIsInitialized;\n    if (isInitialized == 1) return true;\n    if (isInitialized == 0) return false;\n\n    memoizedIsInitialized = 1;\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43804, "method_name": "writeTo", "class_name": "SegmentReq", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void writeTo(com.google.protobuf.CodedOutputStream output)\n                      throws java.io.IOException {\n    if (!getIdBytes().isEmpty()) {\n      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, id_);\n    }\n    if (segment_ != 0) {\n      output.writeInt32(2, segment_);\n    }\n    if (!getMacBytes().isEmpty()) {\n      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, mac_);\n    }\n    if (client_ != 0) {\n      output.writeInt32(4, client_);\n    }\n    if (reqdate_ != 0L) {\n      output.writeInt64(5, reqdate_);\n    }\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43805, "method_name": "getSerializedSize", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getSerializedSize() {\n    int size = memoizedSize;\n    if (size != -1) return size;\n\n    size = 0;\n    if (!getIdBytes().isEmpty()) {\n      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, id_);\n    }\n    if (segment_ != 0) {\n      size += com.google.protobuf.CodedOutputStream\n        .computeInt32Size(2, segment_);\n    }\n    if (!getMacBytes().isEmpty()) {\n      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, mac_);\n    }\n    if (client_ != 0) {\n      size += com.google.protobuf.CodedOutputStream\n        .computeInt32Size(4, client_);\n    }\n    if (reqdate_ != 0L) {\n      size += com.google.protobuf.CodedOutputStream\n        .computeInt64Size(5, reqdate_);\n    }\n    memoizedSize = size;\n    return size;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43806, "method_name": "equals", "class_name": "SegmentReq", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(final java.lang.Object obj) {\n    if (obj == this) {\n     return true;\n    }\n    if (!(obj instanceof generated.xn.services.ex.api.grpcstream.protos.SegmentReq)) {\n      return super.equals(obj);\n    }\n    generated.xn.services.ex.api.grpcstream.protos.SegmentReq other = (generated.xn.services.ex.api.grpcstream.protos.SegmentReq) obj;\n\n    boolean result = true;\n    result = result && getId()\n        .equals(other.getId());\n    result = result && (getSegment()\n        == other.getSegment());\n    result = result && getMac()\n        .equals(other.getMac());\n    result = result && (getClient()\n        == other.getClient());\n    result = result && (getReqdate()\n        == other.getReqdate());\n    return result;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43807, "method_name": "hashCode", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    if (memoizedHashCode != 0) {\n      return memoizedHashCode;\n    }\n    int hash = 41;\n    hash = (19 * hash) + getDescriptorForType().hashCode();\n    hash = (37 * hash) + ID_FIELD_NUMBER;\n    hash = (53 * hash) + getId().hashCode();\n    hash = (37 * hash) + SEGMENT_FIELD_NUMBER;\n    hash = (53 * hash) + getSegment();\n    hash = (37 * hash) + MAC_FIELD_NUMBER;\n    hash = (53 * hash) + getMac().hashCode();\n    hash = (37 * hash) + CLIENT_FIELD_NUMBER;\n    hash = (53 * hash) + getClient();\n    hash = (37 * hash) + REQDATE_FIELD_NUMBER;\n    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(\n        getReqdate());\n    hash = (29 * hash) + unknownFields.hashCode();\n    memoizedHashCode = hash;\n    return hash;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43808, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(\n      com.google.protobuf.ByteString data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43809, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["com", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(\n      com.google.protobuf.ByteString data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43810, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["byte"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(byte[] data)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43811, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["byte", "com"], "throws": ["com.google.protobuf.InvalidProtocolBufferException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(\n      byte[] data,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws com.google.protobuf.InvalidProtocolBufferException {\n    return PARSER.parseFrom(data, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43812, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43813, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43814, "method_name": "parseDelimitedFrom", "class_name": "SegmentReq", "params": ["java"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseDelimitedFrom(java.io.InputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43815, "method_name": "parseDelimitedFrom", "class_name": "SegmentReq", "params": ["java", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseDelimitedFrom(\n      java.io.InputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43816, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(\n      com.google.protobuf.CodedInputStream input)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43817, "method_name": "parseFrom", "class_name": "SegmentReq", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq parseFrom(\n      com.google.protobuf.CodedInputStream input,\n      com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n      throws java.io.IOException {\n    return com.google.protobuf.GeneratedMessageV3\n        .parseWithIOException(PARSER, input, extensionRegistry);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43818, "method_name": "newBuilderForType", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder newBuilderForType() { return newBuilder(); }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43819, "method_name": "newBuilder", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder() {\n    return DEFAULT_INSTANCE.toBuilder();\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43820, "method_name": "newBuilder", "class_name": "SegmentReq", "params": ["generated"], "throws": null, "modifiers": ["public", "static"], "return_type": "Builder", "snippet": "  public static Builder newBuilder(generated.xn.services.ex.api.grpcstream.protos.SegmentReq prototype) {\n    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43821, "method_name": "toBuilder", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "  public Builder toBuilder() {\n    return this == DEFAULT_INSTANCE\n        ? new Builder() : new Builder().mergeFrom(this);\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43822, "method_name": "newBuilderForType", "class_name": "SegmentReq", "params": ["com"], "throws": null, "modifiers": ["protected"], "return_type": "Builder", "snippet": "  protected Builder newBuilderForType(\n      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {\n    Builder builder = new Builder(parent);\n    return builder;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43823, "method_name": "getDefaultInstance", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "generated", "snippet": "  public static generated.xn.services.ex.api.grpcstream.protos.SegmentReq getDefaultInstance() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43824, "method_name": "parser", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "com", "snippet": "  public static com.google.protobuf.Parser<SegmentReq> parser() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43825, "method_name": "getParserForType", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "  public com.google.protobuf.Parser<SegmentReq> getParserForType() {\n    return PARSER;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43826, "method_name": "getDefaultInstanceForType", "class_name": "SegmentReq", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "  public generated.xn.services.ex.api.grpcstream.protos.SegmentReq getDefaultInstanceForType() {\n    return DEFAULT_INSTANCE;\n  }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["SegmentReqOrBuilder"], "modifiers": ["final", "public"]}}, {"id": 43827, "method_name": "getDescriptor", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public", "static"], "return_type": "com", "snippet": "    public static final com.google.protobuf.Descriptors.Descriptor\n        getDescriptor() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentReq_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43828, "method_name": "internalGetFieldAccessorTable", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "com", "snippet": "    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable\n        internalGetFieldAccessorTable() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentReq_fieldAccessorTable\n          .ensureFieldAccessorsInitialized(\n              generated.xn.services.ex.api.grpcstream.protos.SegmentReq.class, generated.xn.services.ex.api.grpcstream.protos.SegmentReq.Builder.class);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43829, "method_name": "maybeForceBuilderInitialization", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void maybeForceBuilderInitialization() {\n      if (com.google.protobuf.GeneratedMessageV3\n              .alwaysUseFieldBuilders) {\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43830, "method_name": "clear", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clear() {\n      super.clear();\n      id_ = \"\";\n\n      segment_ = 0;\n\n      mac_ = \"\";\n\n      client_ = 0;\n\n      reqdate_ = 0L;\n\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43831, "method_name": "getDescriptorForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.Descriptors.Descriptor\n        getDescriptorForType() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentProtos.internal_static_data_services_seg_SegmentReq_descriptor;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43832, "method_name": "getDefaultInstanceForType", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentReq getDefaultInstanceForType() {\n      return generated.xn.services.ex.api.grpcstream.protos.SegmentReq.getDefaultInstance();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43833, "method_name": "build", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentReq build() {\n      generated.xn.services.ex.api.grpcstream.protos.SegmentReq result = buildPartial();\n      if (!result.isInitialized()) {\n        throw newUninitializedMessageException(result);\n      }\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43834, "method_name": "buildPartial", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "generated", "snippet": "    public generated.xn.services.ex.api.grpcstream.protos.SegmentReq buildPartial() {\n      generated.xn.services.ex.api.grpcstream.protos.SegmentReq result = new generated.xn.services.ex.api.grpcstream.protos.SegmentReq(this);\n      result.id_ = id_;\n      result.segment_ = segment_;\n      result.mac_ = mac_;\n      result.client_ = client_;\n      result.reqdate_ = reqdate_;\n      onBuilt();\n      return result;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43835, "method_name": "clone", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clone() {\n      return (Builder) super.clone();\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43836, "method_name": "setField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.setField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43837, "method_name": "clearField", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearField(\n        com.google.protobuf.Descriptors.FieldDescriptor field) {\n      return (Builder) super.clearField(field);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43838, "method_name": "clearOneof", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearOneof(\n        com.google.protobuf.Descriptors.OneofDescriptor oneof) {\n      return (Builder) super.clearOneof(oneof);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43839, "method_name": "setRepeatedField", "class_name": "Builder", "params": ["com", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        int index, Object value) {\n      return (Builder) super.setRepeatedField(field, index, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43840, "method_name": "addRepeatedField", "class_name": "Builder", "params": ["com", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder addRepeatedField(\n        com.google.protobuf.Descriptors.FieldDescriptor field,\n        Object value) {\n      return (Builder) super.addRepeatedField(field, value);\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43841, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(com.google.protobuf.Message other) {\n      if (other instanceof generated.xn.services.ex.api.grpcstream.protos.SegmentReq) {\n        return mergeFrom((generated.xn.services.ex.api.grpcstream.protos.SegmentReq)other);\n      } else {\n        super.mergeFrom(other);\n        return this;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43842, "method_name": "mergeFrom", "class_name": "Builder", "params": ["generated"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(generated.xn.services.ex.api.grpcstream.protos.SegmentReq other) {\n      if (other == generated.xn.services.ex.api.grpcstream.protos.SegmentReq.getDefaultInstance()) return this;\n      if (!other.getId().isEmpty()) {\n        id_ = other.id_;\n        onChanged();\n      }\n      if (other.getSegment() != 0) {\n        setSegment(other.getSegment());\n      }\n      if (!other.getMac().isEmpty()) {\n        mac_ = other.mac_;\n        onChanged();\n      }\n      if (other.getClient() != 0) {\n        setClient(other.getClient());\n      }\n      if (other.getReqdate() != 0L) {\n        setReqdate(other.getReqdate());\n      }\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43843, "method_name": "isInitialized", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["final", "public"], "return_type": "boolean", "snippet": "    public final boolean isInitialized() {\n      return true;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43844, "method_name": "mergeFrom", "class_name": "Builder", "params": ["com", "com"], "throws": ["java.io.IOException"], "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder mergeFrom(\n        com.google.protobuf.CodedInputStream input,\n        com.google.protobuf.ExtensionRegistryLite extensionRegistry)\n        throws java.io.IOException {\n      generated.xn.services.ex.api.grpcstream.protos.SegmentReq parsedMessage = null;\n      try {\n        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);\n      } catch (com.google.protobuf.InvalidProtocolBufferException e) {\n        parsedMessage = (generated.xn.services.ex.api.grpcstream.protos.SegmentReq) e.getUnfinishedMessage();\n        throw e.unwrapIOException();\n      } finally {\n        if (parsedMessage != null) {\n          mergeFrom(parsedMessage);\n        }\n      }\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43845, "method_name": "getId", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.lang.String getId() {\n      java.lang.Object ref = id_;\n      if (!(ref instanceof java.lang.String)) {\n        com.google.protobuf.ByteString bs =\n            (com.google.protobuf.ByteString) ref;\n        java.lang.String s = bs.toStringUtf8();\n        id_ = s;\n        return s;\n      } else {\n        return (java.lang.String) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43846, "method_name": "getIdBytes", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString\n        getIdBytes() {\n      java.lang.Object ref = id_;\n      if (ref instanceof String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        id_ = b;\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43847, "method_name": "setId", "class_name": "Builder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setId(\n        java.lang.String value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  \n      id_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43848, "method_name": "clearId", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearId() {\n      \n      id_ = getDefaultInstance().getId();\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43849, "method_name": "setIdBytes", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setIdBytes(\n        com.google.protobuf.ByteString value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  checkByteStringIsUtf8(value);\n      \n      id_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43850, "method_name": "getSegment", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSegment() {\n      return segment_;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43851, "method_name": "setSegment", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setSegment(int value) {\n      \n      segment_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43852, "method_name": "clearSegment", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearSegment() {\n      \n      segment_ = 0;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43853, "method_name": "getMac", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "java", "snippet": "    public java.lang.String getMac() {\n      java.lang.Object ref = mac_;\n      if (!(ref instanceof java.lang.String)) {\n        com.google.protobuf.ByteString bs =\n            (com.google.protobuf.ByteString) ref;\n        java.lang.String s = bs.toStringUtf8();\n        mac_ = s;\n        return s;\n      } else {\n        return (java.lang.String) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43854, "method_name": "getMacBytes", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "com", "snippet": "    public com.google.protobuf.ByteString\n        getMacBytes() {\n      java.lang.Object ref = mac_;\n      if (ref instanceof String) {\n        com.google.protobuf.ByteString b = \n            com.google.protobuf.ByteString.copyFromUtf8(\n                (java.lang.String) ref);\n        mac_ = b;\n        return b;\n      } else {\n        return (com.google.protobuf.ByteString) ref;\n      }\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43855, "method_name": "setMac", "class_name": "Builder", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setMac(\n        java.lang.String value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  \n      mac_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43856, "method_name": "clearMac", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearMac() {\n      \n      mac_ = getDefaultInstance().getMac();\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43857, "method_name": "setMacBytes", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setMacBytes(\n        com.google.protobuf.ByteString value) {\n      if (value == null) {\n    throw new NullPointerException();\n  }\n  checkByteStringIsUtf8(value);\n      \n      mac_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43858, "method_name": "getClient", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getClient() {\n      return client_;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43859, "method_name": "setClient", "class_name": "Builder", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setClient(int value) {\n      \n      client_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43860, "method_name": "clearClient", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearClient() {\n      \n      client_ = 0;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43861, "method_name": "getReqdate", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getReqdate() {\n      return reqdate_;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43862, "method_name": "setReqdate", "class_name": "Builder", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder setReqdate(long value) {\n      \n      reqdate_ = value;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43863, "method_name": "clearReqdate", "class_name": "Builder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Builder", "snippet": "    public Builder clearReqdate() {\n      \n      reqdate_ = 0L;\n      onChanged();\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43864, "method_name": "setUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder setUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43865, "method_name": "mergeUnknownFields", "class_name": "Builder", "params": ["com"], "throws": null, "modifiers": ["final", "public"], "return_type": "Builder", "snippet": "    public final Builder mergeUnknownFields(\n        final com.google.protobuf.UnknownFieldSet unknownFields) {\n      return this;\n    }", "url": "https://raw.githubusercontent.com/zalopay-oss/jmeter-grpc-request/master/dist/benchmark/grpc-server/src/main/java/generated/xn/services/ex/api/grpcstream/protos/SegmentReq.java", "stars": "3", "class_props": {"extends": "com", "implements": ["generated"], "modifiers": ["final", "public", "static"]}}, {"id": 43866, "method_name": "main", "class_name": "JdbcDemo3", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n\n        Connection conn = null;\n        Statement stmt = null;\n        try {\n            //1\u3001\u6ce8\u518c\u9a71\u52a8\n            Class.forName(\"com.mysql.cj.jdbc.Driver\");\n            //2\u3001\u83b7\u53d6\u8fde\u63a5\u5bf9\u8c61\n            conn = DriverManager.getConnection(\"jdbc:mysql:///db1\", \"root\", \"\");\n            //3\u3001\u5b9a\u4e49 sql\n            String sql = \"update student set sex = 8\";\n            //4\u3001\u83b7\u53d6\u6267\u884c sql \u5bf9\u8c61\n            stmt = conn.createStatement();\n            //5\u3001\u6267\u884c sql\n            int count = stmt.executeUpdate(sql);\n            System.out.println(count);\n\n            if (count > 0) {\n                System.out.println(\"\u4fee\u6539\u6210\u529f\uff01\");\n            }else{\n                System.out.println(\"\u4fee\u6539\u5931\u8d25\uff01\");\n            }\n        } catch (ClassNotFoundException e) {\n            e.printStackTrace();\n        } catch (SQLException throwables) {\n            throwables.printStackTrace();\n        } finally {\n            if(stmt != null){\n                try {\n                    stmt.close();\n                } catch (SQLException throwables) {\n                    throwables.printStackTrace();\n                }\n            }\n\n            if(conn != null){\n                try {\n                    conn.close();\n                } catch (SQLException throwables) {\n                    throwables.printStackTrace();\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/chengcheng1021/javaStudy/master/src/jdbc/Demo/JdbcDemo3.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43867, "method_name": "count", "class_name": "ExecutorRouteRound", "params": ["int"], "throws": null, "modifiers": ["static", "private"], "return_type": "int", "snippet": "    private static int count(int jobId) {\n        // cache clear\n        if (System.currentTimeMillis() > CACHE_VALID_TIME) {\n            routeCountEachJob.clear();\n            CACHE_VALID_TIME = System.currentTimeMillis() + 1000*60*60*24;\n        }\n\n        // count++\n        Integer count = routeCountEachJob.get(jobId);\n        count = (count==null || count>1000000)?(new Random().nextInt(100)):++count;  // \u521d\u59cb\u5316\u65f6\u4e3b\u52a8Random\u4e00\u6b21\uff0c\u7f13\u89e3\u9996\u6b21\u538b\u529b\n        routeCountEachJob.put(jobId, count);\n        return count;\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/route/strategy/ExecutorRouteRound.java", "stars": "1", "class_props": {"extends": "ExecutorRouter", "implements": null, "modifiers": ["public"]}}, {"id": 43868, "method_name": "route", "class_name": "ExecutorRouteRound", "params": ["TriggerParam", "List<String>"], "throws": null, "modifiers": ["public"], "return_type": "ReturnT<String>", "snippet": "    public ReturnT<String> route(TriggerParam triggerParam, List<String> addressList) {\n        String address = addressList.get(count(triggerParam.getJobId())%addressList.size());\n        return new ReturnT<String>(address);\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/route/strategy/ExecutorRouteRound.java", "stars": "1", "class_props": {"extends": "ExecutorRouter", "implements": null, "modifiers": ["public"]}}, {"id": 43869, "method_name": "run", "class_name": "Sender", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run()\n\t{\n\t\ttry\n\t\t{\n\t\t\tList<DispatchMessage> messageList = null; \n\t\t\t\n\t\t\tConnection conSlave = null;\n\t\t\ttry\n\t\t\t{\n\t\t\t\tconSlave = Setup.getSetup().getConnectionPool().getDBSlaveConnectionFromPool();\n\t\t\t\t\n\t\t\t\tSearchResult<DispatchMessage> result = new SearchResult<DispatchMessage>();\n\t\t\t\tnew DispatchDAO( conSlave ).messageSearch( result, false );\n\t\t\t\t\n\t\t\t\tmessageList = result.getList();\n\t\t\t}\n\t\t\tfinally\n\t\t\t{\n\t\t\t\tSQLUtils.closeConnection( conSlave );\n\t\t\t}\n\t\t\t\n\t\t\tConnection con = null;\n\t\t\t\n\t\t\tif( messageList.size() > 0 )\n\t\t\t{\n\t\t\t\tlog.info( \"Found \" + messageList.size() + \" dispatch messages for send..\" );\n\t\t\t\t\n\t\t\t\tfor( DispatchMessage message : messageList )\n\t\t\t\t{\n\t\t\t\t\tList<String> accounts = null;\n\t\t\t\t\t\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tconSlave = Setup.getSetup().getConnectionPool().getDBSlaveConnectionFromPool();\n\t\t\t\t\t\taccounts = new DispatchDAO( conSlave ).messageAccountList( message.getId() );\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tSQLUtils.closeConnection( conSlave );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//TODO: \u0412\u043e\u0437\u043c\u043e\u0436\u043d\u043e, \u0441\u0442\u043e\u0438\u0442 \u0432\u043f\u043e\u0441\u043b\u0435\u0434\u0441\u0442\u0432\u0438\u0438 \u0440\u0430\u0437\u043d\u0435\u0441\u0442\u0438 \u0432 \u0440\u0430\u0437\u043d\u044b\u0435 \u043f\u043e\u0442\u043e\u043a\u0438, \u0435\u0441\u043b\u0438 \u043f\u043e\u0447\u0442\u043e\u0432\u0438\u043a \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u0442 \u043f\u0430\u0440\u0430\u043b\u043b\u0435\u043b\u044c\u043d\u0443\u044e \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0443..\n\t\t\t\t\tfor( String account : accounts )\n\t\t\t\t\t{\n\t\t\t\t\t\tnew MailMsg( Setup.getSetup() ).sendMessage( account, message.getTitle(), message.getText() );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\ttry\n\t\t\t\t\t{\n\t\t\t\t\t\tcon = Setup.getSetup().getDBConnectionFromPool();\n\t\t\t\t\t\tmessage.setSentTime( new Date() );\n\t\t\t\t\t\tnew DispatchDAO( con ).messageUpdate( message );\n\t\t\t\t\t}\n\t\t\t\t\tfinally\n\t\t\t\t\t{\n\t\t\t\t\t\tSQLUtils.closeConnection( con );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcatch( Exception e )\n\t\t{\n    \t\tlog.error( e.getMessage(), e );\n\t\t}\t\t\t\t\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/dispatch/Sender.java", "stars": "12", "class_props": {"extends": null, "implements": ["Runnable"], "modifiers": ["public"]}}, {"id": 43870, "method_name": "generateAuthCode", "class_name": "UmsMemberServiceImpl", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "CommonResult", "snippet": "    public CommonResult generateAuthCode(String telephone) {\n        StringBuilder sb = new StringBuilder();\n        Random random = new Random();\n        for (int i = 0; i < 6; i++) {\n            sb.append(random.nextInt(10));\n        }\n        //\u9a8c\u8bc1\u7801\u7ed1\u5b9a\u624b\u673a\u53f7\u5e76\u5b58\u50a8\u5230redis\n        redisService.set(REDIS_KEY_PREFIX_AUTH_CODE + telephone, sb.toString());\n        redisService.expire(REDIS_KEY_PREFIX_AUTH_CODE + telephone, AUTH_CODE_EXPIRE_SECONDS);\n        return CommonResult.success(sb.toString(), \"\u83b7\u53d6\u9a8c\u8bc1\u7801\u6210\u529f\");\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsMemberServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsMemberService"], "modifiers": ["public"]}}, {"id": 43871, "method_name": "verifyAuthCode", "class_name": "UmsMemberServiceImpl", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "CommonResult", "snippet": "    public CommonResult verifyAuthCode(String telephone, String authCode) {\n        if (StringUtils.isEmpty(authCode)) {\n            return CommonResult.failed(\"\u8bf7\u8f93\u5165\u9a8c\u8bc1\u7801\");\n        }\n        String realAuthCode = redisService.get(REDIS_KEY_PREFIX_AUTH_CODE + telephone);\n        boolean result = authCode.equals(realAuthCode);\n        if (result) {\n            return CommonResult.success(null, \"\u9a8c\u8bc1\u7801\u6821\u9a8c\u6210\u529f\");\n        } else {\n            return CommonResult.failed(\"\u9a8c\u8bc1\u7801\u4e0d\u6b63\u786e\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/security-jwt/src/main/java/com/yyj/security/service/impl/UmsMemberServiceImpl.java", "stars": "2", "class_props": {"extends": null, "implements": ["UmsMemberService"], "modifiers": ["public"]}}, {"id": 43872, "method_name": "toAssemble", "class_name": "Conversor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void toAssemble(String datos){\n        //Convertir el texto normal a ensamblador, se muestran las palabras reservadas\n        this.dataAss = datos;\n    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/Conversor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43873, "method_name": "toBinary", "class_name": "Conversor", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void toBinary(String datos){\n        //Covertir el texto que estara en ensamblador a binario, si hay palabras reservadas\n        this.dataBi = datos;\n    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/Conversor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43874, "method_name": "getDataAss", "class_name": "Conversor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDataAss() {\n        return dataAss;\n    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/Conversor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43875, "method_name": "getDataBi", "class_name": "Conversor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getDataBi() {\n        return dataBi;\n    }", "url": "https://raw.githubusercontent.com/vandelvan/Decodificador/master/InstructionSet/src/main/Conversor.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43876, "method_name": "checkMilestone", "class_name": "SerialReader", "params": ["ByteBuffer", "int", "int"], "throws": null, "modifiers": ["static"], "return_type": "int", "snippet": "    static int checkMilestone(@NonNull ByteBuffer buffer, int milestone, int position) {\n        switch (milestone) {\n            case 0: { // stx\n                Preconditions.checkArgument(buffer.get(position) == CONSTANTS.STX,\n                        String.format(\"stx must be constant %s\", ByteFormatter.addHexPrefix(CONSTANTS.STX)));\n                return 1; // sizeOf(encryption)\n            }\n\n            case 1: { // encryption\n                final byte b = buffer.get(position);\n                Preconditions.checkArgument(b == CONSTANTS.ENCRYPTION_STATUS.DISABLED\n                        || b == CONSTANTS.ENCRYPTION_STATUS.ENABLED, String.format(\"encryption must be one of [%s, %s]\",\n                        ByteFormatter.addHexPrefix(CONSTANTS.ENCRYPTION_STATUS.DISABLED),\n                        ByteFormatter.addHexPrefix(CONSTANTS.ENCRYPTION_STATUS.ENABLED)));\n                return 2; // sizeOf(lenOfBody)\n            }\n\n            case 2: { // the length of body\n                final int length = buffer.getShort(position);\n                Preconditions.checkArgument(length > 0, \"the length of body must be positive\");\n\n                return length; // sizeOf(len)\n            }\n\n            case 3: {\n                return 1; // sizeOf(etx)\n            }\n\n            case 4: {\n                Preconditions.checkArgument(buffer.get(position) == CONSTANTS.ETX, String.format(\"etx must be constant %s\",\n                        ByteFormatter.addHexPrefix(CONSTANTS.ETX)));\n\n                return 1; // sizeOf(lrc)\n            }\n\n            case 5: {\n                return 0; // completed\n            }\n\n            default:\n                throw new IllegalArgumentException(\"illegal milestone\");\n        }\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/job/SerialReader.java", "stars": "13", "class_props": {"extends": null, "implements": ["Callable"], "modifiers": []}}, {"id": 43877, "method_name": "call", "class_name": "SerialReader", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte[] call() throws Exception {\n        final ByteBuffer buffer = ByteBuffer.allocateDirect(CONSTANTS.MAX_BUFFER_SIZE);\n\n        boolean looping = true;\n        int position = 0;\n        int limit = 0;\n        int target = 1; // sizeOf(stx)\n        int milestone = 0;\n        int read;\n\n        while (looping) {\n            read = mPort.read(buffer, limit);\n            if (read != 0) {\n                byte[] data = new byte[read];\n                int pos = buffer.position();\n                buffer.get(data);\n                buffer.position(pos);\n                if (buffer.get(0) != STX) {\n                    Log.w(TAG, \"receive: \" + ByteFormatter.bytes2utf8(data));\n                    buffer.position(0);\n                    continue;\n                }\n            }\n\n            limit += read;\n            while (limit - position >= target) {\n                final int newTarget = checkMilestone(buffer, milestone, position);\n\n                if (newTarget == 0) {\n                    looping = false;\n                    position += 1;\n                    break;\n                }\n                ++milestone;\n                position += target;\n                target = newTarget;\n            }\n        }\n\n        buffer.position(position);\n        buffer.flip();\n        final byte[] bytes = new byte[position];\n        buffer.get(bytes);\n\n        return bytes;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/encryption-core/src/main/java/com/cobo/cold/encryptioncore/job/SerialReader.java", "stars": "13", "class_props": {"extends": null, "implements": ["Callable"], "modifiers": []}}, {"id": 43878, "method_name": "on", "class_name": "RemoteControl", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void on();\n    public abstract void off();\n\n    public abstract void upButtonPressed();\n    public abstract void downButtonPressed();\n    public abstract void leftButtonPressed();\n    public abstract void rightButtonPressed();\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteControl.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43879, "method_name": "off", "class_name": "RemoteControl", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void off();\n\n    public abstract void upButtonPressed();\n    public abstract void downButtonPressed();\n    public abstract void leftButtonPressed();\n    public abstract void rightButtonPressed();\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteControl.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43880, "method_name": "upButtonPressed", "class_name": "RemoteControl", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void upButtonPressed();\n    public abstract void downButtonPressed();\n    public abstract void leftButtonPressed();\n    public abstract void rightButtonPressed();\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteControl.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43881, "method_name": "downButtonPressed", "class_name": "RemoteControl", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void downButtonPressed();\n    public abstract void leftButtonPressed();\n    public abstract void rightButtonPressed();\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteControl.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43882, "method_name": "leftButtonPressed", "class_name": "RemoteControl", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void leftButtonPressed();\n    public abstract void rightButtonPressed();\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteControl.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43883, "method_name": "rightButtonPressed", "class_name": "RemoteControl", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void rightButtonPressed();\n}\n\n", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Bridge%20Pattern/src/Remote/RemoteControl.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 43884, "method_name": "valueOf", "class_name": "DvmInteger", "params": ["VM", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "DvmInteger", "snippet": "    public static DvmInteger valueOf(VM vm, int i) {\n        return new DvmInteger(vm, i);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/wrapper/DvmInteger.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 43885, "method_name": "toString", "class_name": "DvmInteger", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"0x\" + Integer.toHexString(value);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/wrapper/DvmInteger.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 43886, "method_name": "equals", "class_name": "DvmInteger", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean equals(int obj) {\n        return this.value == obj;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/wrapper/DvmInteger.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 43887, "method_name": "unspecified", "class_name": "WebRequestAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "ActionForward", "snippet": "    protected ActionForward unspecified(ActionMapping mapping, DynActionForm form, ConnectionSet conSet) throws Exception {\n        return data(conSet, mapping, form, FORWARD_DEFAULT);\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/WebRequestAction.java", "stars": "12", "class_props": {"extends": "ru", "implements": null, "modifiers": ["public"]}}, {"id": 43888, "method_name": "findRequests", "class_name": "WebRequestAction", "params": ["ActionMapping", "DynActionForm", "ConnectionSet"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ActionForward", "snippet": "    public ActionForward findRequests(ActionMapping mapping, DynActionForm form, ConnectionSet conSet) throws Exception {\n        SearchResult<LogEntry> searchResult = new SearchResult<LogEntry>(form);\n\n        WebRequestLogDAO webRequestLogDAO = new WebRequestLogDAO(conSet.getConnection());\n        webRequestLogDAO.serchRequest(searchResult, form);\n\n        return data(conSet, mapping, form, \"findRequests\");\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/struts/action/admin/WebRequestAction.java", "stars": "12", "class_props": {"extends": "ru", "implements": null, "modifiers": ["public"]}}, {"id": 43889, "method_name": "checkValue", "class_name": "RegexpCheckerConfig", "params": ["String"], "throws": ["BGMessageException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void checkValue( String value )\n\t\tthrows BGMessageException\n\t{\n\t\tif( regexpList != null )\n\t\t{\n\t\t\tfor( Pattern p : regexpList )\n\t\t\t{\n\t\t\t\tif( p.matcher( value ).matches() )\n\t\t\t\t{\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new BGMessageException( \"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u043e\u0434\u043d\u043e\u043c\u0443 \u0438\u0437 \u0448\u0430\u0431\u043b\u043e\u043d\u043e\u0432:\\n\" + regexpTitles );\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/util/RegexpCheckerConfig.java", "stars": "12", "class_props": {"extends": "Config", "implements": null, "modifiers": ["public"]}}, {"id": 43890, "method_name": "setScaledXY", "class_name": "BaseText", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setScaledXY(int x1, int y1) {\n        xOrig = unscaled(x1);\n        yOrig = unscaled(y1);\n        x = x1;\n        y = y1;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43891, "method_name": "font", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Font", "snippet": "    private Font font() {\n        return logoFont ? logoFont(fontSize) : narrowFont(fontSize);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43892, "method_name": "centered", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean centered() {  return (xOrig == 0) && (preceder == null); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43893, "method_name": "toString", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString()  { return concat(\"Text:\", text, \"  at:\", bounds.toString()); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43894, "method_name": "displayText", "class_name": "BaseText", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void displayText(String s) { text = s; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43895, "method_name": "hoverText", "class_name": "BaseText", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void hoverText(String s)   { hoverText = s; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43896, "method_name": "x", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int x()                    { return bounds.x; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43897, "method_name": "y", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int y()                    { return bounds.y; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43898, "method_name": "w", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int w()                    { return bounds.width; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43899, "method_name": "h", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int h()                    { return bounds.height; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43900, "method_name": "bottomY", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int bottomY()              { return bounds.y + bounds.height; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43901, "method_name": "bounds", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Rectangle", "snippet": "    public Rectangle bounds()         { return bounds; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43902, "method_name": "disabled", "class_name": "BaseText", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void disabled(boolean b)   { disabled = b; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43903, "method_name": "preceder", "class_name": "BaseText", "params": ["BaseText"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void preceder(BaseText t)  { preceder = t; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43904, "method_name": "setBounds", "class_name": "BaseText", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setBounds(int x, int y, int w, int h) {\n        bounds.setBounds(x,y,w,h);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43905, "method_name": "reset", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() { \n        bounds.setBounds(0,0,0,0); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43906, "method_name": "rescale", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void rescale() {\n        x = scaled(xOrig);\n        y = scaled(yOrig);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43907, "method_name": "contains", "class_name": "BaseText", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean contains(int x, int y) {\n        return bounds.contains(x, y);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43908, "method_name": "repaint", "class_name": "BaseText", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void repaint(String s) {\n        Graphics g = panel.getGraphics();\n        int oldW = stringWidth(g);\n        displayText(s);\n        int newW = stringWidth(g);\n        g.dispose();\n        bounds.width = max(oldW, newW)+scaled(5);\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43909, "method_name": "repaint", "class_name": "BaseText", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void repaint(String s1, String s2) {\n        Graphics g = panel.getGraphics();\n        int oldW = stringWidth(g);\n        displayText(s1);\n        hoverText(s2);\n        int newW = stringWidth(g);\n        g.dispose();\n        bounds.width = max(oldW, newW)+scaled(5);\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43910, "method_name": "repaint", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void repaint() {\n        panel.repaint(bounds);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43911, "method_name": "mousePressed", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mousePressed() {\n        depressed = true;\n        if (centered())\n            drawCentered();\n        else\n            draw();\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43912, "method_name": "mouseReleased", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased() {\n        depressed = false;\n        if (centered())\n            drawCentered();\n        else\n            draw();\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43913, "method_name": "mouseEnter", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseEnter() {\n        hovered = true;\n        if (centered())\n            drawCentered();\n        else\n            draw();\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43914, "method_name": "mouseExit", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseExit() {\n        hovered = false;\n        depressed = false;\n        if (centered())\n            drawCentered();\n        else\n            draw();\n        repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43915, "method_name": "stringWidth", "class_name": "BaseText", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int stringWidth(Graphics g) {\n        int sw1 = g.getFontMetrics(font()).stringWidth(text);\n        int sw2 = hoverText == null ? sw1 : g.getFontMetrics(font()).stringWidth(hoverText);\n        return max(sw1,sw2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43916, "method_name": "textColor", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["private"], "return_type": "Color", "snippet": "    private Color textColor() {\n        if (disabled)\n            return disabledC;\n        else if (depressed)\n            return depressedC;\n        else if (hovered)\n            return hoverC;\n        else\n            return enabledC;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43917, "method_name": "displayText", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String displayText() {\n        if (hovered && (hoverText != null))\n            return hoverText;\n        else\n            return text;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43918, "method_name": "draw", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int draw() {\n        return draw(panel.getGraphics());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43919, "method_name": "drawCentered", "class_name": "BaseText", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int drawCentered() {\n        return drawCentered(panel.getGraphics());\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43920, "method_name": "draw", "class_name": "BaseText", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int draw(Graphics g) {\n        int x1 = x >= 0 ? x : panel.getWidth()+x;\n        int y1 = y >= 0 ? y : panel.getHeight()+y;\n        \n        if ((preceder != null) && (x>= 0)) {\n            x1 = preceder.x() + preceder.w() + x;\n        }\n        g.setFont(font());\n        g.setColor(textColor());\n        int sw = stringWidth(g);\n        int fontH = g.getFontMetrics().getHeight();\n        setBounds(x1,y1-fontH,sw+scaled(5),fontH+(fontH/5));\n        g.drawString(displayText(), x1, y1);\n        return x1+sw;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43921, "method_name": "drawCentered", "class_name": "BaseText", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int drawCentered(Graphics g) {\n        g.setFont(font());\n        int w = panel.getWidth();\n        int sw = stringWidth(g);\n        int x1 = (w-sw)/2;\n        int y1 = y > 0 ? y : panel.getHeight()+y;\n        int fontH = g.getFontMetrics().getHeight();\n        int sp = fontH/4;\n        int hPad = sw/20;\n        int vPad = fontH/5;\n        setBounds(x1,y1+sp-fontH,sw+scaled(5),fontH-sp/2);\n        \n        int shadowImgW = sw+hPad+hPad;\n        if ((textShadow == null)                                      // first time through?\n        || (bufferedLanguage != LanguageManager.selectedLanguage())   // language changed?\n        || (shadowImgW != textShadow.getWidth())) {                   // font resized?\n            bufferedLanguage = LanguageManager.selectedLanguage();\n            textShadow = newBufferedImage(shadowImgW, fontH+vPad);\n            Graphics g0 = textShadow.getGraphics();\n            g0.setFont(font());\n            g0.setColor(shadeC);\n            int topThick = scaled(topLBdr);\n            int thick = btmRBdr;\n            for (int x0=(0-topThick);x0<=thick;x0++) {\n                int x0s = scaled(x0);\n                for (int y0=(0-topThick);y0<=thick;y0++) {\n                    int y0s = scaled(y0);\n                    g0.drawString(text, hPad+x0s, fontH+y0s);\n                }\n            }\n            g0.dispose();\n        }\n        Color c0 = textColor();\n        g.setColor(c0);\n        g.drawImage(textShadow, x1-hPad, y1-fontH, null);\n        g.drawString(displayText(), x1, y1);\n        return x1+sw;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/BaseText.java", "stars": "74", "class_props": {"extends": null, "implements": ["Base"], "modifiers": ["public"]}}, {"id": 43922, "method_name": "beforeTextChanged", "class_name": "TextInputEditTextWatcher", "params": ["CharSequence", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/util/edittext/TextInputEditTextWatcher.java", "stars": "14", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["public"]}}, {"id": 43923, "method_name": "onTextChanged", "class_name": "TextInputEditTextWatcher", "params": ["CharSequence", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onTextChanged(CharSequence s, int start, int before, int count) {\n        if (null != textInputLayout)\n            textInputLayout.setErrorEnabled(false);\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/util/edittext/TextInputEditTextWatcher.java", "stars": "14", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["public"]}}, {"id": 43924, "method_name": "afterTextChanged", "class_name": "TextInputEditTextWatcher", "params": ["Editable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterTextChanged(Editable s) {\n\n    }", "url": "https://raw.githubusercontent.com/FanChael/MVVM/master/librarys/lib_common/src/main/java/com/hl/base_module/util/edittext/TextInputEditTextWatcher.java", "stars": "14", "class_props": {"extends": null, "implements": ["TextWatcher"], "modifiers": ["public"]}}, {"id": 43925, "method_name": "index", "class_name": "MenuController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView index() {\n        return new ModelAndView(\"sys/menu\");\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43926, "method_name": "edit", "class_name": "MenuController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "ModelAndView", "snippet": "    public ModelAndView edit(Long id) {\n        ModelAndView mv = new ModelAndView(\"sys/menu_edit\");\n        Menu menu;\n        if (id == null) {\n            menu = new Menu();\n        } else {\n            menu = menuService.getById(id);\n        }\n        mv.addObject(\"editInfo\", menu);\n        return mv;\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43927, "method_name": "listData", "class_name": "MenuController", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R listData(Menu menu) {\n        Page<Menu> page = menuService.listMenuPage(menu);\n        return R.ok(page);\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43928, "method_name": "listTreeData", "class_name": "MenuController", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R listTreeData(Menu menu) {\n        return R.ok(menuService.listMenuTree(menu));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43929, "method_name": "listTree", "class_name": "MenuController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R listTree(Long id) {\n        return R.ok(menuService.listMenuByParentId(id));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43930, "method_name": "save", "class_name": "MenuController", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R save(Menu menu) {\n        menuService.saveOrUpdate(menu);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43931, "method_name": "add", "class_name": "MenuController", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R add(Menu menu) {\n        menuService.save(menu);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43932, "method_name": "edit", "class_name": "MenuController", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R edit(Menu menu) {\n        menuService.updateById(menu);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43933, "method_name": "remove", "class_name": "MenuController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R remove(@PathVariable Long id) {\n        menuService.removeById(id);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43934, "method_name": "removeBatch", "class_name": "MenuController", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R removeBatch(@RequestParam(\"ids\") List<Long> ids) {\n        menuService.removeByIds(ids);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43935, "method_name": "roleTree", "class_name": "MenuController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R roleTree(Long roleId) {\n        return R.ok(menuService.listRoleMenu(roleId));\n    }", "url": "https://raw.githubusercontent.com/IzzyPrime/Admin/master/src/main/java/com/kalvin/kvf/modules/sys/controller/MenuController.java", "stars": "10", "class_props": {"extends": "BaseController", "implements": null, "modifiers": ["public"]}}, {"id": 43936, "method_name": "supports", "class_name": "CCSoEhValidoParaCartaoOnlineValidator", "params": ["Class<?>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean supports(Class<?> clazz) {\n\t\treturn NovoPagamentoForm.class.isAssignableFrom(clazz);\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/validadores/CCSoEhValidoParaCartaoOnlineValidator.java", "stars": "9", "class_props": {"extends": null, "implements": ["Validator"], "modifiers": ["public"]}}, {"id": 43937, "method_name": "validate", "class_name": "CCSoEhValidoParaCartaoOnlineValidator", "params": ["Object", "Errors"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void validate(Object target, Errors errors) {\n\t\tNovoPagamentoForm form = (NovoPagamentoForm) target;\n\t\tform.validaCc(errors);\t\t\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/validadores/CCSoEhValidoParaCartaoOnlineValidator.java", "stars": "9", "class_props": {"extends": null, "implements": ["Validator"], "modifiers": ["public"]}}, {"id": 43938, "method_name": "cost", "class_name": "HouseBlend", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "    public double cost() {\n        return 1.5;\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Decorator%20Pattern/src/Beverage/HouseBlend.java", "stars": "38", "class_props": {"extends": "Beverage", "implements": null, "modifiers": ["public"]}}, {"id": 43939, "method_name": "doPretreatment", "class_name": "OriginalConfPretreatmentUtil", "params": ["Configuration", "DataBaseType"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void doPretreatment(Configuration originalConfig, DataBaseType dataBaseType) {\n        // \u68c0\u67e5 username/password \u914d\u7f6e\uff08\u5fc5\u586b\uff09\n        originalConfig.getNecessaryValue(Key.USERNAME, DBUtilErrorCode.REQUIRED_VALUE);\n        originalConfig.getNecessaryValue(Key.PASSWORD, DBUtilErrorCode.REQUIRED_VALUE);\n\n        doCheckBatchSize(originalConfig);\n\n        simplifyConf(originalConfig);\n\n        dealColumnConf(originalConfig);\n        dealWriteMode(originalConfig, dataBaseType);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/writer/util/OriginalConfPretreatmentUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43940, "method_name": "doCheckBatchSize", "class_name": "OriginalConfPretreatmentUtil", "params": ["Configuration"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void doCheckBatchSize(Configuration originalConfig) {\n        // \u68c0\u67e5batchSize \u914d\u7f6e\uff08\u9009\u586b\uff0c\u5982\u679c\u672a\u586b\u5199\uff0c\u5219\u8bbe\u7f6e\u4e3a\u9ed8\u8ba4\u503c\uff09\n        int batchSize = originalConfig.getInt(Key.BATCH_SIZE, Constant.DEFAULT_BATCH_SIZE);\n        if (batchSize < 1) {\n            throw DataXException.asDataXException(DBUtilErrorCode.ILLEGAL_VALUE, String.format(\n                    \"\u60a8\u7684batchSize\u914d\u7f6e\u6709\u8bef. \u60a8\u6240\u914d\u7f6e\u7684\u5199\u5165\u6570\u636e\u5e93\u8868\u7684 batchSize:%s \u4e0d\u80fd\u5c0f\u4e8e1. \u63a8\u8350\u914d\u7f6e\u8303\u56f4\u4e3a\uff1a[100-1000], \u8be5\u503c\u8d8a\u5927, \u5185\u5b58\u6ea2\u51fa\u53ef\u80fd\u6027\u8d8a\u5927. \u8bf7\u68c0\u67e5\u60a8\u7684\u914d\u7f6e\u5e76\u4f5c\u51fa\u4fee\u6539.\",\n                    batchSize));\n        }\n\n        originalConfig.set(Key.BATCH_SIZE, batchSize);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/writer/util/OriginalConfPretreatmentUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43941, "method_name": "simplifyConf", "class_name": "OriginalConfPretreatmentUtil", "params": ["Configuration"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void simplifyConf(Configuration originalConfig) {\n        List<Object> connections = originalConfig.getList(Constant.CONN_MARK,\n                Object.class);\n\n        int tableNum = 0;\n\n        for (int i = 0, len = connections.size(); i < len; i++) {\n            Configuration connConf = Configuration.from(connections.get(i).toString());\n\n            String jdbcUrl = \"\";\n            if(DATABASE_TYPE.equals(DataBaseType.MySql)){\n                Map<String,Object> map = connConf.getMap(Key.JDBC_URL);\n                String parameter = \"\";\n                for(String key : map.keySet()){\n                    if (key.equals(Key.CONNPARM)){\n                        Map<String, Object> obj2Map = (Map<String, Object>) map.get(key);\n                        parameter = obj2Map.entrySet().stream().map(\n                                e->String.join(\"=\", e.getKey(), String.valueOf(e.getValue()))\n                        ).collect(Collectors.joining(\"&\"));\n                    }\n                 }\n                jdbcUrl = Key.JDBCTEM + map.get(Key.HOST).toString() + \":\" + map.get(Key.PORT).toString() + \"/\" + map.get(Key.DATABASE).toString();\n                if(parameter != null && parameter.length() != 0){\n                    jdbcUrl = Key.JDBCTEM + map.get(Key.HOST).toString() + \":\" + map.get(Key.PORT).toString() + \"/\" + map.get(Key.DATABASE).toString() + \"?\" + parameter;\n                }\n            }else {\n                jdbcUrl = connConf.getString(Key.JDBC_URL);\n            }\n            if (StringUtils.isBlank(jdbcUrl)) {\n                throw DataXException.asDataXException(DBUtilErrorCode.REQUIRED_VALUE, \"\u60a8\u672a\u914d\u7f6e\u7684\u5199\u5165\u6570\u636e\u5e93\u8868\u7684 jdbcUrl.\");\n            }\n\n            jdbcUrl = DATABASE_TYPE.appendJDBCSuffixForReader(jdbcUrl);\n            originalConfig.set(String.format(\"%s[%d].%s\", Constant.CONN_MARK, i, Key.JDBC_URL),\n                    jdbcUrl);\n\n            List<String> tables = connConf.getList(Key.TABLE, String.class);\n\n            if (null == tables || tables.isEmpty()) {\n                throw DataXException.asDataXException(DBUtilErrorCode.REQUIRED_VALUE,\n                        \"\u60a8\u672a\u914d\u7f6e\u5199\u5165\u6570\u636e\u5e93\u8868\u7684\u8868\u540d\u79f0. \u6839\u636e\u914d\u7f6eDataX\u627e\u4e0d\u5230\u60a8\u914d\u7f6e\u7684\u8868. \u8bf7\u68c0\u67e5\u60a8\u7684\u914d\u7f6e\u5e76\u4f5c\u51fa\u4fee\u6539.\");\n            }\n\n            // \u5bf9\u6bcf\u4e00\u4e2aconnection \u4e0a\u914d\u7f6e\u7684table \u9879\u8fdb\u884c\u89e3\u6790\n            List<String> expandedTables = TableExpandUtil\n                    .expandTableConf(DATABASE_TYPE, tables);\n\n            if (null == expandedTables || expandedTables.isEmpty()) {\n                throw DataXException.asDataXException(DBUtilErrorCode.CONF_ERROR,\n                        \"\u60a8\u914d\u7f6e\u7684\u5199\u5165\u6570\u636e\u5e93\u8868\u540d\u79f0\u9519\u8bef. DataX\u627e\u4e0d\u5230\u60a8\u914d\u7f6e\u7684\u8868\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u914d\u7f6e\u5e76\u4f5c\u51fa\u4fee\u6539.\");\n            }\n\n            tableNum += expandedTables.size();\n\n            originalConfig.set(String.format(\"%s[%d].%s\", Constant.CONN_MARK,\n                    i, Key.TABLE), expandedTables);\n        }\n\n        originalConfig.set(Constant.TABLE_NUMBER_MARK, tableNum);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/writer/util/OriginalConfPretreatmentUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43942, "method_name": "dealColumnConf", "class_name": "OriginalConfPretreatmentUtil", "params": ["Configuration", "ConnectionFactory", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void dealColumnConf(Configuration originalConfig, ConnectionFactory connectionFactory, String oneTable) {\n        List<String> userConfiguredColumns = originalConfig.getList(Key.COLUMN, String.class);\n        if (null == userConfiguredColumns || userConfiguredColumns.isEmpty()) {\n            throw DataXException.asDataXException(DBUtilErrorCode.ILLEGAL_VALUE,\n                    \"\u60a8\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5217\u914d\u7f6e\u4fe1\u606f\u6709\u8bef. \u56e0\u4e3a\u60a8\u672a\u914d\u7f6e\u5199\u5165\u6570\u636e\u5e93\u8868\u7684\u5217\u540d\u79f0\uff0cDataX\u83b7\u53d6\u4e0d\u5230\u5217\u4fe1\u606f. \u8bf7\u68c0\u67e5\u60a8\u7684\u914d\u7f6e\u5e76\u4f5c\u51fa\u4fee\u6539.\");\n        } else {\n            boolean isPreCheck = originalConfig.getBool(Key.DRYRUN, false);\n            List<String> allColumns;\n            if (isPreCheck) {\n                allColumns = DBUtil.getTableColumnsByConn(DATABASE_TYPE, connectionFactory.getConnecttionWithoutRetry(), oneTable, connectionFactory.getConnectionInfo());\n            } else {\n                allColumns = DBUtil.getTableColumnsByConn(DATABASE_TYPE, connectionFactory.getConnecttion(), oneTable, connectionFactory.getConnectionInfo());\n            }\n\n            LOG.info(\"table:[{}] all columns:[\\n{}\\n].\", oneTable,\n                    StringUtils.join(allColumns, \",\"));\n\n            if (1 == userConfiguredColumns.size() && \"*\".equals(userConfiguredColumns.get(0))) {\n                LOG.warn(\"\u60a8\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5217\u914d\u7f6e\u4fe1\u606f\u5b58\u5728\u98ce\u9669. \u56e0\u4e3a\u60a8\u914d\u7f6e\u7684\u5199\u5165\u6570\u636e\u5e93\u8868\u7684\u5217\u4e3a*\uff0c\u5f53\u60a8\u7684\u8868\u5b57\u6bb5\u4e2a\u6570\u3001\u7c7b\u578b\u6709\u53d8\u52a8\u65f6\uff0c\u53ef\u80fd\u5f71\u54cd\u4efb\u52a1\u6b63\u786e\u6027\u751a\u81f3\u4f1a\u8fd0\u884c\u51fa\u9519\u3002\u8bf7\u68c0\u67e5\u60a8\u7684\u914d\u7f6e\u5e76\u4f5c\u51fa\u4fee\u6539.\");\n\n                // \u56de\u586b\u5176\u503c\uff0c\u9700\u8981\u4ee5 String \u7684\u65b9\u5f0f\u8f6c\u4ea4\u540e\u7eed\u5904\u7406\n                originalConfig.set(Key.COLUMN, allColumns);\n            } else if (userConfiguredColumns.size() > allColumns.size()) {\n                throw DataXException.asDataXException(DBUtilErrorCode.ILLEGAL_VALUE,\n                        String.format(\"\u60a8\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5217\u914d\u7f6e\u4fe1\u606f\u6709\u8bef. \u56e0\u4e3a\u60a8\u6240\u914d\u7f6e\u7684\u5199\u5165\u6570\u636e\u5e93\u8868\u7684\u5b57\u6bb5\u4e2a\u6570:%s \u5927\u4e8e\u76ee\u7684\u8868\u7684\u603b\u5b57\u6bb5\u603b\u4e2a\u6570:%s. \u8bf7\u68c0\u67e5\u60a8\u7684\u914d\u7f6e\u5e76\u4f5c\u51fa\u4fee\u6539.\",\n                                userConfiguredColumns.size(), allColumns.size()));\n            } else {\n                // \u786e\u4fdd\u7528\u6237\u914d\u7f6e\u7684 column \u4e0d\u91cd\u590d\n                ListUtil.makeSureNoValueDuplicate(userConfiguredColumns, false);\n\n                // \u68c0\u67e5\u5217\u662f\u5426\u90fd\u4e3a\u6570\u636e\u5e93\u8868\u4e2d\u6b63\u786e\u7684\u5217\uff08\u901a\u8fc7\u6267\u884c\u4e00\u6b21 select column from table \u8fdb\u884c\u5224\u65ad\uff09\n                DBUtil.getColumnMetaData(connectionFactory.getConnecttion(), oneTable, StringUtils.join(userConfiguredColumns, \",\"));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/writer/util/OriginalConfPretreatmentUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43943, "method_name": "dealColumnConf", "class_name": "OriginalConfPretreatmentUtil", "params": ["Configuration"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void dealColumnConf(Configuration originalConfig) {\n        String jdbcUrl = originalConfig.getString(String.format(\"%s[0].%s\",\n                Constant.CONN_MARK, Key.JDBC_URL));\n\n        String username = originalConfig.getString(Key.USERNAME);\n        String password = originalConfig.getString(Key.PASSWORD);\n        String proxyHost = originalConfig.getString(Key.PROXY_HOST, DEFAULT_PROXY_SOCKS_HOST);\n        int proxyPort = originalConfig.getInt(Key.PROXY_PORT, DEFAULT_PROXY_SOCKS_PORT);\n        if(StringUtils.isNotBlank(password)){\n            try {\n                password = (String) CryptoUtils.string2Object(password);\n            } catch (Exception e) {\n                throw DataXException.asDataXException(DBUtilErrorCode.CONF_ERROR, \"decrypt password failed\");\n            }\n        }\n        String oneTable = originalConfig.getString(String.format(\n                \"%s[0].%s[0]\", Constant.CONN_MARK, Key.TABLE));\n\n        JdbcConnectionFactory jdbcConnectionFactory = new JdbcConnectionFactory(DATABASE_TYPE, jdbcUrl, username, password, proxyHost, proxyPort);\n        dealColumnConf(originalConfig, jdbcConnectionFactory, oneTable);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/writer/util/OriginalConfPretreatmentUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43944, "method_name": "dealWriteMode", "class_name": "OriginalConfPretreatmentUtil", "params": ["Configuration", "DataBaseType"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void dealWriteMode(Configuration originalConfig, DataBaseType dataBaseType) {\n        List<String> columns = originalConfig.getList(Key.COLUMN, String.class);\n\n        String jdbcUrl = originalConfig.getString(String.format(\"%s[0].%s\",\n                Constant.CONN_MARK, Key.JDBC_URL, String.class));\n\n        // \u9ed8\u8ba4\u4e3a\uff1ainsert \u65b9\u5f0f\n        String writeMode = originalConfig.getString(Key.WRITE_MODE, \"INSERT\");\n\n        List<String> valueHolders = new ArrayList<String>(columns.size());\n        for (int i = 0; i < columns.size(); i++) {\n            valueHolders.add(\"?\");\n        }\n\n        boolean forceUseUpdate = false;\n        //ob10\u7684\u5904\u7406\n        if (dataBaseType == DataBaseType.MySql && isOB10(jdbcUrl)) {\n            forceUseUpdate = true;\n        }\n\n        String writeDataSqlTemplate = WriterUtil.getWriteTemplate(columns, valueHolders, writeMode, dataBaseType, forceUseUpdate);\n\n        LOG.info(\"Write domain [\\n{}\\n], which jdbcUrl like:[{}]\", writeDataSqlTemplate, jdbcUrl);\n\n        originalConfig.set(Constant.INSERT_OR_REPLACE_TEMPLATE_MARK, writeDataSqlTemplate);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/writer/util/OriginalConfPretreatmentUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43945, "method_name": "isOB10", "class_name": "OriginalConfPretreatmentUtil", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean isOB10(String jdbcUrl) {\n        //ob10\u7684\u5904\u7406\n        if (jdbcUrl.startsWith(Constant.OB10_SPLIT_STRING)) {\n            String[] ss = jdbcUrl.split(Constant.OB10_SPLIT_STRING_PATTERN);\n            if (ss.length != 3) {\n                throw DataXException\n                        .asDataXException(\n                                DBUtilErrorCode.JDBC_OB10_ADDRESS_ERROR, \"JDBC OB10\u683c\u5f0f\u9519\u8bef\uff0c\u8bf7\u8054\u7cfbaskdatax\");\n            }\n            return true;\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/plugin/rdbms/writer/util/OriginalConfPretreatmentUtil.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["final", "public"]}}, {"id": 43946, "method_name": "getsockopt", "class_name": "SocketIO", "params": ["int", "int", "Pointer", "Pointer"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getsockopt(int level, int optname, Pointer optval, Pointer optlen) {\n        try {\n            switch (level) {\n                case SOL_SOCKET:\n                    if (optname == SO_ERROR) {\n                        optlen.setInt(0, 4);\n                        optval.setInt(0, 0);\n                        return 0;\n                    }\n                    break;\n                case IPPROTO_TCP:\n                    if (optname == TCP_NODELAY) {\n                        optlen.setInt(0, 4);\n                        optval.setInt(0, getTcpNoDelay());\n                        return 0;\n                    }\n                    break;\n            }\n        } catch (IOException e) {\n            throw new IllegalStateException(e);\n        }\n        return super.getsockopt(level, optname, optval, optlen);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43947, "method_name": "getTcpNoDelay", "class_name": "SocketIO", "params": [], "throws": ["SocketException"], "modifiers": ["protected", "abstract"], "return_type": "int", "snippet": "    protected abstract int getTcpNoDelay() throws SocketException;\n\n    @Override\n    public int setsockopt(int level, int optname, Pointer optval, int optlen) {\n        try {\n            switch (level) {\n                case SOL_SOCKET:\n                    switch (optname) {\n                        case SO_REUSEADDR:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setReuseAddress(optval.getInt(0));\n                            return 0;\n                        case SO_BROADCAST:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            optval.getInt(0); // broadcast_pings\n                            return 0;\n                        case SO_RCVBUF:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setSocketRecvBuf(optval.getInt(0));\n                            return 0;\n                        case SO_KEEPALIVE:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setKeepAlive(optval.getInt(0));\n                            return 0;\n                        case SO_RCVTIMEO:\n                        case SO_SNDTIMEO: {\n                            return 0;\n                        }\n                    }\n                    break;\n                case IPPROTO_TCP:\n                    switch (optname) {\n                        case TCP_NODELAY:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setTcpNoDelay(optval.getInt(0));\n                            return 0;\n                        case TCP_MAXSEG:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            log.debug(\"setsockopt TCP_MAXSEG=\" + optval.getInt(0));\n                            return 0;\n                    }\n                    break;\n                case IPPROTO_IP:\n                    return 0;\n            }\n        } catch (IOException e) {\n            throw new IllegalStateException(e);\n        }\n\n        log.warn(\"setsockopt level=\" + level + \", optname=\" + optname + \", optval=\" + optval + \", optlen=\" + optlen);\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43948, "method_name": "setsockopt", "class_name": "SocketIO", "params": ["int", "int", "Pointer", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int setsockopt(int level, int optname, Pointer optval, int optlen) {\n        try {\n            switch (level) {\n                case SOL_SOCKET:\n                    switch (optname) {\n                        case SO_REUSEADDR:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setReuseAddress(optval.getInt(0));\n                            return 0;\n                        case SO_BROADCAST:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            optval.getInt(0); // broadcast_pings\n                            return 0;\n                        case SO_RCVBUF:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setSocketRecvBuf(optval.getInt(0));\n                            return 0;\n                        case SO_KEEPALIVE:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setKeepAlive(optval.getInt(0));\n                            return 0;\n                        case SO_RCVTIMEO:\n                        case SO_SNDTIMEO: {\n                            return 0;\n                        }\n                    }\n                    break;\n                case IPPROTO_TCP:\n                    switch (optname) {\n                        case TCP_NODELAY:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            setTcpNoDelay(optval.getInt(0));\n                            return 0;\n                        case TCP_MAXSEG:\n                            if (optlen != 4) {\n                                throw new IllegalStateException(\"optlen=\" + optlen);\n                            }\n                            log.debug(\"setsockopt TCP_MAXSEG=\" + optval.getInt(0));\n                            return 0;\n                    }\n                    break;\n                case IPPROTO_IP:\n                    return 0;\n            }\n        } catch (IOException e) {\n            throw new IllegalStateException(e);\n        }\n\n        log.warn(\"setsockopt level=\" + level + \", optname=\" + optname + \", optval=\" + optval + \", optlen=\" + optlen);\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43949, "method_name": "setTcpNoDelay", "class_name": "SocketIO", "params": ["int"], "throws": ["SocketException"], "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void setTcpNoDelay(int tcpNoDelay) throws SocketException;\n\n    protected abstract void setReuseAddress(int reuseAddress) throws SocketException;\n\n    protected abstract void setKeepAlive(int keepAlive) throws SocketException;\n\n    protected abstract void setSocketRecvBuf(int recvBuf) throws SocketException;\n\n    @Override\n    public int getsockname(Pointer addr, Pointer addrlen) {\n        InetSocketAddress local = getLocalSocketAddress();\n        fillAddress(local, addr, addrlen);\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43950, "method_name": "setReuseAddress", "class_name": "SocketIO", "params": ["int"], "throws": ["SocketException"], "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void setReuseAddress(int reuseAddress) throws SocketException;\n\n    protected abstract void setKeepAlive(int keepAlive) throws SocketException;\n\n    protected abstract void setSocketRecvBuf(int recvBuf) throws SocketException;\n\n    @Override\n    public int getsockname(Pointer addr, Pointer addrlen) {\n        InetSocketAddress local = getLocalSocketAddress();\n        fillAddress(local, addr, addrlen);\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43951, "method_name": "setKeepAlive", "class_name": "SocketIO", "params": ["int"], "throws": ["SocketException"], "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void setKeepAlive(int keepAlive) throws SocketException;\n\n    protected abstract void setSocketRecvBuf(int recvBuf) throws SocketException;\n\n    @Override\n    public int getsockname(Pointer addr, Pointer addrlen) {\n        InetSocketAddress local = getLocalSocketAddress();\n        fillAddress(local, addr, addrlen);\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43952, "method_name": "setSocketRecvBuf", "class_name": "SocketIO", "params": ["int"], "throws": ["SocketException"], "modifiers": ["protected", "abstract"], "return_type": "void", "snippet": "    protected abstract void setSocketRecvBuf(int recvBuf) throws SocketException;\n\n    @Override\n    public int getsockname(Pointer addr, Pointer addrlen) {\n        InetSocketAddress local = getLocalSocketAddress();\n        fillAddress(local, addr, addrlen);\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43953, "method_name": "getsockname", "class_name": "SocketIO", "params": ["Pointer", "Pointer"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getsockname(Pointer addr, Pointer addrlen) {\n        InetSocketAddress local = getLocalSocketAddress();\n        fillAddress(local, addr, addrlen);\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43954, "method_name": "fillAddress", "class_name": "SocketIO", "params": ["InetSocketAddress", "Pointer", "Pointer"], "throws": null, "modifiers": ["final", "protected"], "return_type": "void", "snippet": "    protected final void fillAddress(InetSocketAddress socketAddress, Pointer addr, Pointer addrlen) {\n        InetAddress address = socketAddress.getAddress();\n        SockAddr sockAddr = new SockAddr(addr);\n        sockAddr.sin_port = (short) socketAddress.getPort();\n        if (address instanceof Inet4Address) {\n            sockAddr.sin_family = AF_INET;\n            sockAddr.sin_addr = Arrays.copyOf(address.getAddress(), IPV4_ADDR_LEN - 4);\n            addrlen.setInt(0, IPV4_ADDR_LEN);\n        } else if (address instanceof Inet6Address) {\n            sockAddr.sin_family = AF_INET6;\n            sockAddr.sin_addr = Arrays.copyOf(address.getAddress(), IPV6_ADDR_LEN - 4);\n            addrlen.setInt(0, IPV6_ADDR_LEN);\n        } else {\n            throw new UnsupportedOperationException();\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43955, "method_name": "getLocalSocketAddress", "class_name": "SocketIO", "params": [], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "InetSocketAddress", "snippet": "    protected abstract InetSocketAddress getLocalSocketAddress();\n\n    @Override\n    public int connect(Pointer addr, int addrlen) {\n        if (addrlen == IPV4_ADDR_LEN) {\n            return connect_ipv4(addr, addrlen);\n        } else if(addrlen == IPV6_ADDR_LEN) {\n            return connect_ipv6(addr, addrlen);\n        } else {\n            throw new IllegalStateException(\"addrlen=\" + addrlen);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43956, "method_name": "connect", "class_name": "SocketIO", "params": ["Pointer", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int connect(Pointer addr, int addrlen) {\n        if (addrlen == IPV4_ADDR_LEN) {\n            return connect_ipv4(addr, addrlen);\n        } else if(addrlen == IPV6_ADDR_LEN) {\n            return connect_ipv6(addr, addrlen);\n        } else {\n            throw new IllegalStateException(\"addrlen=\" + addrlen);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43957, "method_name": "bind", "class_name": "SocketIO", "params": ["Pointer", "int"], "throws": null, "modifiers": ["final", "public"], "return_type": "int", "snippet": "    public final int bind(Pointer addr, int addrlen) {\n        if (addrlen == IPV4_ADDR_LEN) {\n            return bind_ipv4(addr, addrlen);\n        } else if(addrlen == IPV6_ADDR_LEN) {\n            return bind_ipv6(addr, addrlen);\n        } else {\n            throw new IllegalStateException(\"addrlen=\" + addrlen);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43958, "method_name": "connect_ipv6", "class_name": "SocketIO", "params": ["Pointer", "int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "int", "snippet": "    protected abstract int connect_ipv6(Pointer addr, int addrlen);\n\n    protected abstract int connect_ipv4(Pointer addr, int addrlen);\n\n    protected int bind_ipv6(Pointer addr, int addrlen) {\n        throw new AbstractMethodError(getClass().getName());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43959, "method_name": "connect_ipv4", "class_name": "SocketIO", "params": ["Pointer", "int"], "throws": null, "modifiers": ["protected", "abstract"], "return_type": "int", "snippet": "    protected abstract int connect_ipv4(Pointer addr, int addrlen);\n\n    protected int bind_ipv6(Pointer addr, int addrlen) {\n        throw new AbstractMethodError(getClass().getName());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43960, "method_name": "bind_ipv6", "class_name": "SocketIO", "params": ["Pointer", "int"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int bind_ipv6(Pointer addr, int addrlen) {\n        throw new AbstractMethodError(getClass().getName());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43961, "method_name": "bind_ipv4", "class_name": "SocketIO", "params": ["Pointer", "int"], "throws": null, "modifiers": ["protected"], "return_type": "int", "snippet": "    protected int bind_ipv4(Pointer addr, int addrlen) {\n        throw new AbstractMethodError(getClass().getName());\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43962, "method_name": "recvfrom", "class_name": "SocketIO", "params": ["Unicorn", "Pointer", "int", "int", "Pointer", "Pointer"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int recvfrom(Unicorn unicorn, Pointer buf, int len, int flags, Pointer src_addr, Pointer addrlen) {\n        if (flags == 0x0 && src_addr == null && addrlen == null) {\n            return read(unicorn, buf, len);\n        }\n\n        return super.recvfrom(unicorn, buf, len, flags, src_addr, addrlen);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43963, "method_name": "sendto", "class_name": "SocketIO", "params": ["byte", "int", "Pointer", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int sendto(byte[] data, int flags, Pointer dest_addr, int addrlen) {\n        if (flags == 0x0 && dest_addr == null && addrlen == 0) {\n            return write(data);\n        }\n\n        return super.sendto(data, flags, dest_addr, addrlen);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43964, "method_name": "fstat", "class_name": "SocketIO", "params": ["Emulator<?>", "com"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int fstat(Emulator<?> emulator, com.github.unidbg.file.linux.StatStructure stat) {\n        stat.st_dev = 0;\n        stat.st_mode = IO.S_IFSOCK;\n        stat.st_uid = 0;\n        stat.st_gid = 0;\n        stat.st_size = 0;\n        stat.st_blksize = 0;\n        stat.st_ino = 0;\n        stat.pack();\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43965, "method_name": "fstat", "class_name": "SocketIO", "params": ["Emulator<?>", "StatStructure"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int fstat(Emulator<?> emulator, StatStructure stat) {\n        throw new UnsupportedOperationException();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43966, "method_name": "fstatfs", "class_name": "SocketIO", "params": ["StatFS"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int fstatfs(StatFS statFS) {\n        throw new UnsupportedOperationException();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43967, "method_name": "getdents64", "class_name": "SocketIO", "params": ["Pointer", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getdents64(Pointer dirp, int size) {\n        throw new UnsupportedOperationException();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/unix/file/SocketIO.java", "stars": "16", "class_props": {"extends": "BaseFileIO", "implements": ["AndroidFileIO", "DarwinFileIO"], "modifiers": ["public", "abstract"]}}, {"id": 43968, "method_name": "actionPerformed", "class_name": "KevinBacon", "params": ["ActionEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void actionPerformed(ActionEvent e) {\n\t\tif (e.getSource() == findConnection) {\n\t\t\tresults.setText(\"Collecting results, please wait...\");\n\t\t\tThread t = new Thread() {\n\t\t\t\t@Override\n\t\t\t\tpublic void run() {\n\t\t\t\t\tString result = null;\n\t\t\t\t\tif (!(firstPerson.getText().equals(\"\") || secondPerson.getText().equals(\"\"))) {\n\t\t\t\t\t\tString exclusion = ((excludePerson.getText().trim().equals(\"\")) ? null\n\t\t\t\t\t\t\t\t: excludePerson.getText().toLowerCase().trim());\n\n\t\t\t\t\t\tresult = searchManager.doSearch(firstPerson.getText(), secondPerson.getText(), exclusion);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult = \"Please enter two actors to find a connection.\";\n\t\t\t\t\t}\n\t\t\t\t\tresults.setText(result);\n\t\t\t\t}\n\t\t\t};\n\t\t\tt.start();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Luke-Grammer/IMDB-Database-Application/master/src/UI/KevinBacon.java", "stars": "1", "class_props": {"extends": "JPanel", "implements": ["ActionListener"], "modifiers": ["public"]}}, {"id": 43969, "method_name": "main", "class_name": "ComparatorStudy", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n//        Integer data[] = new Integer[]{10,9,5,2,20};\n//        String data[] = new String[]{\"A\",\"B\",\"D\",\"C\"};\n        Persoon data[] = new Persoon[]{\n            new Persoon(\"hzc\",25),\n            new Persoon(\"zx\",24),\n            new Persoon(\"wl\",22)\n        };\n        Arrays.sort(data,new PersoonComparator());\n        System.out.println(Arrays.toString(data));\n\n\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/Comparator/ComparatorStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 43970, "method_name": "toString", "class_name": "Persoon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return this.name+\"\u5e74\u9f84\"+this.age;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/Comparator/ComparatorStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43971, "method_name": "setName", "class_name": "Persoon", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/Comparator/ComparatorStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43972, "method_name": "setAge", "class_name": "Persoon", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAge(int age) {\n        this.age = age;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/Comparator/ComparatorStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43973, "method_name": "getName", "class_name": "Persoon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/Comparator/ComparatorStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43974, "method_name": "getAge", "class_name": "Persoon", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getAge() {\n        return age;\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/Comparator/ComparatorStudy.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 43975, "method_name": "compare", "class_name": "PersoonComparator", "params": ["Persoon", "Persoon"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int compare(Persoon o1, Persoon o2) {\n        return o1.getAge()-o2.getAge();\n    }", "url": "https://raw.githubusercontent.com/hzc869046779/JAVA-STUDY/master/src/javaSenior/Comparator/ComparatorStudy.java", "stars": "10", "class_props": {"extends": null, "implements": ["Comparator"], "modifiers": []}}, {"id": 43976, "method_name": "onCreateView", "class_name": "EditShopFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        super.onCreateView(inflater, container, savedInstanceState);\n\n        setRetainInstance(true);\n        View rootView = inflater.inflate(R.layout.fragment_edit_shop_fragment, container, false);\n\n        ButterKnife.bind(this, rootView);\n\n        Toolbar toolbar = rootView.findViewById(R.id.toolbar);\n        ((AppCompatActivity) getActivity()).setSupportActionBar(toolbar);\n//        ((AppCompatActivity) getActivity()).getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n\n\n        if (savedInstanceState == null) {\n\n            current_mode = getActivity().getIntent().getIntExtra(EDIT_MODE_INTENT_KEY, MODE_ADD);\n\n            if (current_mode == MODE_UPDATE) {\n\n                shop = PrefShopAdminHome.getShop(getContext());\n\n                if (shop != null) {\n                    bindShopData();\n                }\n\n            }\n            else if (current_mode == MODE_UPDATE_BY_ADMIN) {\n\n                String jsonString = getActivity().getIntent().getStringExtra(\"shop_profile\");\n                shop = UtilityFunctions.provideGson().fromJson(jsonString, Shop.class);\n                bindShopData();\n\n                getShopDetails();\n            }\n        }\n\n\n        updateFieldVisibility();\n\n\n        if (shop != null) {\n            loadImage(shop.getLogoImagePath());\n        }\n\n\n        return rootView;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43977, "method_name": "getShopDetails", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getShopDetails() {\n\n        final ProgressDialog pd = new ProgressDialog(getActivity());\n        pd.setMessage(\"Please with ... Getting shop details !\");\n        pd.show();\n\n        Call<Shop> call = shopService.getShopDetails(\n                shop.getShopID(), 0d, 0d\n        );\n\n\n        call.enqueue(new Callback<Shop>() {\n            @Override\n            public void onResponse(Call<Shop> call, Response<Shop> response) {\n\n                if (!isVisible()) {\n                    return;\n                }\n\n                pd.dismiss();\n\n\n                if (response.code() == 200) {\n                    shop = response.body();\n\n                    bindShopData();\n                } else {\n                    showToastMessage(\"Failed to get Shop Details : Code : \" + response.code());\n                }\n            }\n\n            @Override\n            public void onFailure(Call<Shop> call, Throwable t) {\n\n\n                if (!isVisible()) {\n                    return;\n                }\n\n                showToastMessage(\"Failed !\");\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43978, "method_name": "updateFieldVisibility", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateFieldVisibility() {\n\n        if (current_mode == MODE_ADD) {\n            saveButton.setText(\"Add Shop\");\n            shopIDEnter.setVisibility(View.GONE);\n            adminOptionsBlock.setVisibility(View.GONE);\n\n\n            if(((AppCompatActivity)getActivity()).getSupportActionBar()!=null)\n            {\n                ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(\"Add Shop\");\n            }\n\n\n        }\n        else if (current_mode == MODE_UPDATE) {\n\n            shopIDEnter.setVisibility(View.VISIBLE);\n            saveButton.setText(\"Save\");\n            adminOptionsBlock.setVisibility(View.GONE);\n\n            if(((AppCompatActivity)getActivity()).getSupportActionBar()!=null)\n            {\n                ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(\"Edit Shop\");\n            }\n\n        }\n        else if (current_mode == MODE_UPDATE_BY_ADMIN) {\n\n            shopIDEnter.setVisibility(View.VISIBLE);\n            saveButton.setText(\"Save\");\n            adminOptionsBlock.setVisibility(VISIBLE);\n\n            if(((AppCompatActivity)getActivity()).getSupportActionBar()!=null)\n            {\n                ((AppCompatActivity)getActivity()).getSupportActionBar().setTitle(\"Edit Shop\");\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43979, "method_name": "showLogMessage", "class_name": "EditShopFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showLogMessage(String message) {\n        Log.i(TAG_LOG, message);\n        System.out.println(message);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43980, "method_name": "loadImage", "class_name": "EditShopFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadImage(String imagePath) {\n\n        String iamgepath = PrefGeneral.getServiceURL(getContext()) + \"/api/v1/Shop/Image/five_hundred_\" + imagePath + \".jpg\";\n\n        Picasso.get()\n                .load(iamgepath)\n                .into(resultView);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43981, "method_name": "imageClick", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void imageClick() {\n        Intent intent = new Intent(getActivity(), ShopImageList.class);\n        intent.putExtra(\"shop_id\", shop.getShopID());\n        intent.putExtra(\"is_admin_mode\",true);\n        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43982, "method_name": "UpdateButtonClick", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void UpdateButtonClick() {\n\n        if (!validateData()) {\n//            showToastMessage(\"Please correct form data before save !\");\n            return;\n        }\n\n\n        if (current_mode == MODE_ADD) {\n            addAccount();\n        } else if (current_mode == MODE_UPDATE || current_mode == MODE_UPDATE_BY_ADMIN) {\n            update();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43983, "method_name": "validateData", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean validateData() {\n        boolean isValid = true;\n\n        if (shopName.getText().toString().length() == 0) {\n            shopName.setError(\"Please enter Shop Name\");\n            shopName.requestFocus();\n            isValid = false;\n        }\n\n\n        if (!homeDeliveryAvailable.isChecked() && !pickFromShopAvailable.isChecked()) {\n            homeDeliveryAvailable.setError(\"You must pick at least one delivery Option\");\n            pickFromShopAvailable.setError(\"You must pick at least one delivery Option\");\n\n            errorDeliveryOption.setVisibility(View.VISIBLE);\n            errorDeliveryOptionTop.setVisibility(View.VISIBLE);\n\n            homeDeliveryAvailable.requestFocus();\n            pickFromShopAvailable.requestFocus();\n\n            isValid = false;\n        } else {\n\n            errorDeliveryOption.setVisibility(View.GONE);\n            errorDeliveryOptionTop.setVisibility(View.GONE);\n        }\n\n\n        if (latitude.getText().toString().length() == 0) {\n            latitude.setError(\"Latitude cant be empty !\");\n            latitude.requestFocus();\n            isValid = false;\n        } else {\n            double lat = Double.parseDouble(latitude.getText().toString());\n\n            if (lat > 90 || lat < -90) {\n                latitude.setError(\"Invalid Latitude !\");\n                isValid = false;\n            }\n        }\n\n\n        if (longitude.getText().toString().length() == 0) {\n            longitude.setError(\"Longitude cant be empty !\");\n            longitude.requestFocus();\n            isValid = false;\n        } else {\n            double lon = Double.parseDouble(longitude.getText().toString());\n\n            if (lon > 180 || lon < -180) {\n                longitude.setError(\"Invalid Longitude !\");\n                isValid = false;\n            }\n\n        }\n\n        if (rangeOfDelivery.getText().toString().length() == 0) {\n            rangeOfDelivery.setError(\"Range of Delivery cant be empty !\");\n            rangeOfDelivery.requestFocus();\n            isValid = false;\n        }\n\n        if (shopDescriptionShort.getText().toString().length() > 100) {\n            shopDescriptionShort.setError(\"Should not be more than 100 characters !\");\n            shopDescriptionShort.requestFocus();\n            isValid = false;\n        }\n\n\n        return isValid;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43984, "method_name": "addAccount", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addAccount() {\n        if (isImageChanged) {\n            if (!isImageRemoved) {\n                // upload image with add\n                uploadPickedImage(false);\n            }\n\n\n            // reset the flags\n            isImageChanged = false;\n            isImageRemoved = false;\n\n        } else {\n            // post request\n            retrofitPOSTRequest();\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43985, "method_name": "update", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void update() {\n\n        if (isImageChanged) {\n\n\n            // delete previous Image from the Server\n            deleteImage(shop.getLogoImagePath());\n\n            /*ImageCalls.getInstance()\n                    .deleteImage(\n                            itemForEdit.getItemImageURL(),\n                            new DeleteImageCallback()\n                    );*/\n\n\n            if (isImageRemoved) {\n\n                shop.setLogoImagePath(null);\n                retrofitPUTRequest();\n\n            } else {\n\n                uploadPickedImage(true);\n            }\n\n\n            // resetting the flag in order to ensure that future updates do not upload the same image again to the server\n            isImageChanged = false;\n            isImageRemoved = false;\n\n        } else {\n\n            retrofitPUTRequest();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43986, "method_name": "bindShopData", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindShopData() {\n\n        if (shop == null) {\n            return;\n        }\n\n\n        bindAdminOptions();\n\n\n\n        shopOpen.setChecked(shop.isOpen());\n        shopIDEnter.setText(String.valueOf(shop.getShopID()));\n        shopName.setText(shop.getShopName());\n        shopAddress.setText(shop.getShopAddress());\n\n        city.setText(shop.getCity());\n        pincode.setText(String.valueOf(shop.getPincode()));\n        landmark.setText(shop.getLandmark());\n        customerHelplineNumber.setText(shop.getCustomerHelplineNumber());\n\n        deliveryHelplineNumber.setText(shop.getDeliveryHelplineNumber());\n        shopDescriptionShort.setText(shop.getShortDescription());\n        shopDescriptionLong.setText(shop.getLongDescription());\n        latitude.setText(String.valueOf(shop.getLatCenter()));\n\n        longitude.setText(String.valueOf(shop.getLonCenter()));\n        rangeOfDelivery.setText(String.valueOf(shop.getDeliveryRange()));\n        deliveryCharge.setText(String.valueOf(shop.getDeliveryCharges()));\n        billAmountForFreeDelivery.setText(String.valueOf(shop.getBillAmountForFreeDelivery()));\n\n        pickFromShopAvailable.setChecked(shop.getPickFromShopAvailable());\n        homeDeliveryAvailable.setChecked(shop.getHomeDeliveryAvailable());\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43987, "method_name": "bindAdminOptions", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindAdminOptions()\n    {\n        User shopAdminProfile = shop.getShopAdminProfile();\n\n\n        if(shopAdminProfile!=null)\n        {\n            shopAdminName.setText(\"Name : \" + shopAdminProfile.getName());\n            shopAdminPhone.setText(\"Phone : \" + shopAdminProfile.getPhone());\n        }\n\n\n        if(shop.getTimestampCreated()!=null)\n        {\n            timeOfRegistration.setText(\"Created at : \" + shop.getTimestampCreated().toLocaleString());\n        }\n\n\n        aSwitch.setChecked(shop.getShopEnabled());\n        switchWaitlist.setChecked(shop.getShopWaitlisted());\n\n        extendedCreditLimit.setText(String.valueOf(shop.getExtendedCreditLimit()));\n        accountBalance.setText(\"Balance : \" + PrefGeneral.getCurrencySymbol(getActivity()) +  String.format(\" %.2f\",shop.getAccountBalance()));\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43988, "method_name": "getDataFromViews", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void getDataFromViews()\n    {\n        if(shop==null)\n        {\n            if(current_mode == MODE_ADD)\n            {\n                shop = new Shop();\n            }\n            else\n            {\n                return;\n            }\n        }\n\n\n\n\n        shop.setOpen(shopOpen.isChecked());\n        shop.setShopName(shopName.getText().toString());\n        shop.setShopAddress(shopAddress.getText().toString());\n\n        shop.setCity(city.getText().toString());\n\n\n\n        if(!pincode.getText().toString().equals(\"\"))\n        {\n            shop.setPincode(Long.parseLong(pincode.getText().toString()));\n        }\n\n\n        shop.setLandmark(landmark.getText().toString());\n        shop.setCustomerHelplineNumber(customerHelplineNumber.getText().toString());\n\n        shop.setDeliveryHelplineNumber(deliveryHelplineNumber.getText().toString());\n        shop.setShortDescription(shopDescriptionShort.getText().toString());\n        shop.setLongDescription(shopDescriptionLong.getText().toString());\n\n\n        if(!latitude.getText().toString().equals(\"\") && !longitude.getText().toString().equals(\"\") && !rangeOfDelivery.getText().toString().equals(\"\"))\n        {\n            shop.setLatCenter(Double.parseDouble(latitude.getText().toString()));\n            shop.setLonCenter(Double.parseDouble(longitude.getText().toString()));\n            shop.setDeliveryRange(Double.parseDouble(rangeOfDelivery.getText().toString()));\n        }\n\n\n        if(!deliveryCharge.getText().toString().equals(\"\"))\n        {\n            shop.setDeliveryCharges(Double.parseDouble(deliveryCharge.getText().toString()));\n        }\n\n        if(!billAmountForFreeDelivery.getText().toString().equals(\"\"))\n        {\n            shop.setBillAmountForFreeDelivery(Integer.parseInt(billAmountForFreeDelivery.getText().toString()));\n        }\n\n\n        shop.setPickFromShopAvailable(pickFromShopAvailable.isChecked());\n        shop.setHomeDeliveryAvailable(homeDeliveryAvailable.isChecked());\n\n\n\n        // get data from admin fields\n        shop.setShopEnabled(aSwitch.isChecked());\n        shop.setShopWaitlisted(switchWaitlist.isChecked());\n\n        if(extendedCreditLimit.getText().toString().length()>0)\n        {\n            shop.setExtendedCreditLimit(Double.parseDouble(extendedCreditLimit.getText().toString()));\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43989, "method_name": "retrofitPUTRequest", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void retrofitPUTRequest()\n    {\n\n        getDataFromViews();\n\n\n        saveButton.setVisibility(View.INVISIBLE);\n        progressBar.setVisibility(View.VISIBLE);\n\n        Call<ResponseBody> call = null;\n\n\n\n        if(current_mode==MODE_UPDATE)\n        {\n            call = shopService.updateBySelf(\n                    PrefLogin.getAuthorizationHeaders(getContext()),\n                    shop\n            );\n\n\n        }\n        else if(current_mode==MODE_UPDATE_BY_ADMIN)\n        {\n            // update Item Call\n            call = shopService.updateShopByAdmin(\n                    PrefLogin.getAuthorizationHeaders(getActivity()),\n                    shop, shop.getShopID()\n            );\n\n        }\n        else\n        {\n\n\n            showToastMessage(\"Current Mode : \" + current_mode);\n            saveButton.setVisibility(VISIBLE);\n            progressBar.setVisibility(View.INVISIBLE);\n            return;\n        }\n\n\n\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n                if(response.code()==200)\n                {\n                    showToastMessage(\"Update Successful !\");\n                    PrefShopAdminHome.saveShop(shop,getContext());\n                }\n                else if(response.code()== 403 || response.code() ==401)\n                {\n                    showToastMessage(\"Not Permitted !\");\n                }\n                else\n                {\n                    showToastMessage(\"Update Failed Code : \" + response.code());\n                }\n\n\n\n                saveButton.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n\n\n                saveButton.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43990, "method_name": "retrofitPOSTRequest", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void retrofitPOSTRequest()\n    {\n        getDataFromViews();\n\n        Call<Shop> call = shopService.createShop(PrefLogin.getAuthorizationHeaders(getContext()),shop);\n\n\n\n        saveButton.setVisibility(View.INVISIBLE);\n        progressBar.setVisibility(View.VISIBLE);\n\n        call.enqueue(new Callback<Shop>() {\n            @Override\n            public void onResponse(Call<Shop> call, Response<Shop> response) {\n\n                if(response.code()==201)\n                {\n                    showToastMessage(\"Add successful !\");\n\n                    current_mode = MODE_UPDATE;\n                    updateFieldVisibility();\n                    shop = response.body();\n                    bindShopData();\n\n                    PrefShopAdminHome.saveShop(shop,getContext());\n\n\n                    // save user profile\n                    User user  = PrefLogin.getUser(getActivity());\n                    user.setRole(User.ROLE_SHOP_ADMIN_CODE);\n                    PrefLogin.saveUserProfile(user,getActivity());\n\n                    getActivity().setResult(405);\n\n                }\n                else\n                {\n                    showToastMessage(\"Add failed Code : \" + response.code());\n                }\n\n\n\n                saveButton.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n            }\n\n            @Override\n            public void onFailure(Call<Shop> call, Throwable t) {\n                showToastMessage(\"Add failed !\");\n\n\n\n                saveButton.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43991, "method_name": "showToastMessage", "class_name": "EditShopFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void showToastMessage(String message)\n    {\n        Toast.makeText(getContext(),message,Toast.LENGTH_SHORT).show();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43992, "method_name": "removeImage", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void removeImage()\n    {\n\n        File file = new File(getContext().getCacheDir().getPath() + \"/\" + \"SampleCropImage.jpeg\");\n        file.delete();\n\n        resultView.setImageDrawable(null);\n\n        isImageChanged = true;\n        isImageRemoved = true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43993, "method_name": "clearCache", "class_name": "EditShopFragment", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void clearCache(Context context)\n    {\n        File file = new File(context.getCacheDir().getPath() + \"/\" + \"SampleCropImage.jpeg\");\n        file.delete();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43994, "method_name": "pickShopImage", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void pickShopImage() {\n\n//        ImageCropUtility.showFileChooser(()getActivity());\n\n\n\n        // code for checking the Read External Storage Permission and granting it.\n        if (PermissionChecker.checkSelfPermission(getContext(), Manifest.permission.READ_EXTERNAL_STORAGE)\n                != PackageManager.PERMISSION_GRANTED) {\n\n\n            /// / TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n\n            requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},\n                    REQUEST_CODE_READ_EXTERNAL_STORAGE);\n\n            return;\n        }\n\n\n\n        clearCache(getContext());\n\n        Intent intent = new Intent();\n        intent.setType(\"image/*\");\n        intent.setAction(Intent.ACTION_GET_CONTENT);\n        startActivityForResult(Intent.createChooser(intent, \"Select Picture\"), PICK_IMAGE_REQUEST);\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43995, "method_name": "onActivityResult", "class_name": "EditShopFragment", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityResult(int requestCode, int resultCode, Intent result) {\n\n        super.onActivityResult(requestCode, resultCode, result);\n\n\n\n\n        if (requestCode == PICK_IMAGE_REQUEST && resultCode == RESULT_OK\n                && result != null\n                && result.getData() != null) {\n\n\n            Uri filePath = result.getData();\n\n            //imageUri = filePath;\n\n            if (filePath != null) {\n\n                startCropActivity(result.getData(),getContext());\n            }\n\n        }\n        else if (resultCode == RESULT_OK && requestCode == UCrop.REQUEST_CROP) {\n\n            resultView.setImageURI(UCrop.getOutput(result));\n\n            isImageChanged = true;\n            isImageRemoved = false;\n\n\n        }\n        else if (resultCode == UCrop.RESULT_ERROR) {\n\n\n\n            final Throwable cropError = UCrop.getError(result);\n\n\n        }\n        else if(requestCode==3 && resultCode==3)\n        {\n            latitude.setText(String.valueOf(result.getDoubleExtra(\"lat_dest\",0.0)));\n            longitude.setText(String.valueOf(result.getDoubleExtra(\"lon_dest\",0.0)));\n            rangeOfDelivery.setText(String.valueOf(result.getDoubleExtra(\"radius\",0.0)));\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43996, "method_name": "startCropActivity", "class_name": "EditShopFragment", "params": ["Uri", "Context"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void startCropActivity(Uri sourceUri, Context context) {\n\n\n        final String SAMPLE_CROPPED_IMAGE_NAME = \"SampleCropImage.jpeg\";\n\n        Uri destinationUri = Uri.fromFile(new File(getContext().getCacheDir(), SAMPLE_CROPPED_IMAGE_NAME));\n\n        UCrop.Options options = new UCrop.Options();\n        options.setFreeStyleCropEnabled(true);\n\n//        options.setCompressionFormat(Bitmap.CompressFormat.JPEG);\n//        options.setCompressionQuality(100);\n\n        options.setToolbarColor(ContextCompat.getColor(getContext(), R.color.blueGrey800));\n        options.setStatusBarColor(ContextCompat.getColor(getContext(), R.color.colorPrimary));\n        options.setAllowedGestures(UCropActivity.ALL, UCropActivity.ALL, UCropActivity.ALL);\n\n\n        // this function takes the file from the source URI and saves in into the destination URI location.\n        UCrop.of(sourceUri, destinationUri)\n                .withOptions(options)\n                .withMaxResultSize(1500,1500)\n                .start(context,this);\n\n\n        //.withMaxResultSize(400,300)\n        //.withMaxResultSize(500, 400)\n        //.withAspectRatio(16, 9)\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43997, "method_name": "onRequestPermissionsResult", "class_name": "EditShopFragment", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n\n        switch (requestCode) {\n            case REQUEST_CODE_READ_EXTERNAL_STORAGE: {\n                // If request is cancelled, the result arrays are empty.\n                if (grantResults.length > 0\n                        && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\n\n                    showToastMessage(\"Permission Granted !\");\n                    pickShopImage();\n                    // permission was granted, yay! Do the\n                    // contacts-related task you need to do.\n\n                } else {\n\n\n                    showToastMessage(\"Permission Denied for Read External Storage . \");\n                    // permission denied, boo! Disable the\n                    // functionality that depends on this permission.\n                }\n                return;\n            }\n\n            // other 'case' lines to check for other\n            // permissions this app might request\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43998, "method_name": "uploadPickedImage", "class_name": "EditShopFragment", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void uploadPickedImage(final boolean isModeEdit)\n    {\n\n        Log.d(\"applog\", \"onClickUploadImage\");\n\n\n        // code for checking the Read External Storage Permission and granting it.\n        if (PermissionChecker.checkSelfPermission(getContext(), Manifest.permission.READ_EXTERNAL_STORAGE)\n                != PackageManager.PERMISSION_GRANTED) {\n\n\n            /// / TODO: Consider calling\n            //    ActivityCompat#requestPermissions\n            // here to request the missing permissions, and then overriding\n            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,\n            //                                          int[] grantResults)\n            // to handle the case where the user grants the permission. See the documentation\n            // for ActivityCompat#requestPermissions for more details.\n\n            requestPermissions(new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},\n                    REQUEST_CODE_READ_EXTERNAL_STORAGE);\n\n            return;\n        }\n\n\n        File file = new File(getContext().getCacheDir().getPath() + \"/\" + \"SampleCropImage.jpeg\");\n\n\n        // Marker\n\n        RequestBody requestBodyBinary = null;\n\n        InputStream in = null;\n\n        try {\n            in = new FileInputStream(file);\n\n            byte[] buf;\n            buf = new byte[in.available()];\n            while (in.read(buf) != -1) ;\n\n            requestBodyBinary = RequestBody.create(MediaType.parse(\"application/octet-stream\"), buf);\n\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n\n\n        Call<Image> imageCall = shopService.uploadImage(PrefLogin.getAuthorizationHeaders(getContext()),\n                requestBodyBinary);\n\n\n\n        saveButton.setVisibility(View.INVISIBLE);\n        progressBar.setVisibility(View.VISIBLE);\n\n\n        imageCall.enqueue(new Callback<Image>() {\n            @Override\n            public void onResponse(Call<Image> call, Response<Image> response) {\n\n                if(response.code()==201)\n                {\n//                    showToastMessage(\"Image UPload Success !\");\n\n                    Image image = response.body();\n                    // check if needed or not . If not needed then remove this line\n//                    loadImage(image.getPath());\n\n\n                    shop.setLogoImagePath(image.getPath());\n\n                }\n                else if(response.code()==417)\n                {\n                    showToastMessage(\"Cant Upload Image. Image Size should not exceed 2 MB.\");\n\n                    shop.setLogoImagePath(null);\n\n                }\n                else\n                {\n                    showToastMessage(\"Image Upload failed !\");\n                    shop.setLogoImagePath(null);\n\n                }\n\n                if(isModeEdit)\n                {\n                    retrofitPUTRequest();\n                }\n                else\n                {\n                    retrofitPOSTRequest();\n                }\n\n\n\n                saveButton.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n\n\n            }\n\n            @Override\n            public void onFailure(Call<Image> call, Throwable t) {\n\n                showToastMessage(\"Image Upload failed !\");\n                shop.setLogoImagePath(null);\n\n\n                if(isModeEdit)\n                {\n                    retrofitPUTRequest();\n                }\n                else\n                {\n                    retrofitPOSTRequest();\n                }\n\n\n\n                saveButton.setVisibility(View.VISIBLE);\n                progressBar.setVisibility(View.INVISIBLE);\n            }\n        });\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 43999, "method_name": "deleteImage", "class_name": "EditShopFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void deleteImage(String filename)\n    {\n\n        Call<ResponseBody> call = shopService.deleteImage(\n                PrefLogin.getAuthorizationHeaders(getContext()),\n                filename);\n\n\n\n        call.enqueue(new Callback<ResponseBody>() {\n            @Override\n            public void onResponse(Call<ResponseBody> call, Response<ResponseBody> response) {\n\n\n                    if(response.code()==200)\n                    {\n                        showToastMessage(\"Image Removed !\");\n                    }\n                    else\n                    {\n//                        showToastMessage(\"Image Delete failed\");\n                    }\n\n\n\n\n            }\n\n            @Override\n            public void onFailure(Call<ResponseBody> call, Throwable t) {\n\n//                showToastMessage(\"Image Delete failed\");\n\n\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 44000, "method_name": "pickLocation", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void pickLocation()\n    {\n        Intent intent = new Intent(getActivity(), PickDeliveryRange.class);\n        intent.putExtra(\"lat_dest\",Double.parseDouble(latitude.getText().toString()));\n        intent.putExtra(\"lon_dest\",Double.parseDouble(longitude.getText().toString()));\n        intent.putExtra(\"radius\",Double.parseDouble(rangeOfDelivery.getText().toString()));\n        startActivityForResult(intent,3);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 44001, "method_name": "addCredit", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void addCredit()\n    {\n//        showToastMessage(\"Add Credit !\");\n        Intent intent = new Intent(getActivity(), AddCredit.class);\n        intent.putExtra(\"tag_user_id\",shop.getShopAdminID());\n        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 44002, "method_name": "shopAdminProfileClick", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void shopAdminProfileClick()\n    {\n        User shopAdminProfile = shop.getShopAdminProfile();\n\n\n        Gson gson = UtilityFunctions.provideGson();\n        String jsonString = gson.toJson(shopAdminProfile);\n\n        Intent intent = new Intent(getActivity(), EditProfile.class);\n        intent.putExtra(\"user_profile\",jsonString);\n        intent.putExtra(FragmentEditProfile.EDIT_MODE_INTENT_KEY, FragmentEditProfile.MODE_UPDATE_BY_ADMIN);\n        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 44003, "method_name": "shopDashboardClick", "class_name": "EditShopFragment", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void shopDashboardClick()\n    {\n        PrefShopAdminHome.saveShop(shop,getActivity());\n        Intent intent = new Intent(getActivity(), ShopDashboard.class);\n        startActivity(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/EditDataScreens/EditShop/EditShopFragment.java", "stars": "10", "class_props": {"extends": "Fragment", "implements": null, "modifiers": ["public"]}}, {"id": 44004, "method_name": "shouldParseMapWithIntegerJdbcType", "class_name": "IntegerEnumTest", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "  void shouldParseMapWithIntegerJdbcType() throws Exception {\n    String resource = \"org/apache/ibatis/submitted/integer_enum/MapperConfig.xml\";\n    Reader reader = Resources.getResourceAsReader(resource);\n    SqlSessionFactoryBuilder builder = new SqlSessionFactoryBuilder();\n    builder.build(reader);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/integer_enum/IntegerEnumTest.java", "stars": "15", "class_props": {"extends": "BaseDataTest", "implements": null, "modifiers": []}}, {"id": 44005, "method_name": "getCount", "class_name": "SimpleListVideoModeAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount() {\n        return list.size();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/simple/adapter/SimpleListVideoModeAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44006, "method_name": "getItem", "class_name": "SimpleListVideoModeAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {\n        return null;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/simple/adapter/SimpleListVideoModeAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44007, "method_name": "getItemId", "class_name": "SimpleListVideoModeAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/simple/adapter/SimpleListVideoModeAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44008, "method_name": "getView", "class_name": "SimpleListVideoModeAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(final int position, View convertView, ViewGroup parent) {\n        final ViewHolder holder;\n        if (convertView == null) {\n            holder = new ViewHolder();\n            convertView = inflater.inflate(R.layout.list_video_simple_mode1, null);\n            holder.gsyVideoPlayer = (SampleCoverVideo) convertView.findViewById(R.id.video_item_player);\n            convertView.setTag(holder);\n        } else {\n            holder = (ViewHolder) convertView.getTag();\n        }\n\n        final String urlH = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\";\n        final String urlV = \"http://7xjmzj.com1.z0.glb.clouddn.com/20171026175005_JObCxCE2.mp4\";\n        final String url = (position % 2 == 0) ? urlH : urlV;\n\n        if (position % 2 == 0) {\n            holder.gsyVideoPlayer.loadCoverImage(url, R.mipmap.xxx1);\n        } else {\n            holder.gsyVideoPlayer.loadCoverImage(url, R.mipmap.xxx2);\n        }\n\n        holder.gsyVideoPlayer.setUpLazy(url, true, null, null, \"\u8fd9\u662ftitle\");\n        //\u589e\u52a0title\n        holder.gsyVideoPlayer.getTitleTextView().setVisibility(View.GONE);\n        //\u8bbe\u7f6e\u8fd4\u56de\u952e\n        holder.gsyVideoPlayer.getBackButton().setVisibility(View.GONE);\n        //\u8bbe\u7f6e\u5168\u5c4f\u6309\u952e\u529f\u80fd\n        holder.gsyVideoPlayer.getFullscreenButton().setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View v) {\n                holder.gsyVideoPlayer.startWindowFullscreen(context, false, true);\n            }\n        });\n        //\u9632\u6b62\u9519\u4f4d\u8bbe\u7f6e\n        holder.gsyVideoPlayer.setPlayTag(TAG);\n        holder.gsyVideoPlayer.setPlayPosition(position);\n        //\u662f\u5426\u6839\u636e\u89c6\u9891\u5c3a\u5bf8\uff0c\u81ea\u52a8\u9009\u62e9\u7ad6\u5c4f\u5168\u5c4f\u6216\u8005\u6a2a\u5c4f\u5168\u5c4f\n        holder.gsyVideoPlayer.setAutoFullWithSize(true);\n        //\u97f3\u9891\u7126\u70b9\u51b2\u7a81\u65f6\u662f\u5426\u91ca\u653e\n        holder.gsyVideoPlayer.setReleaseWhenLossAudio(false);\n        //\u5168\u5c4f\u52a8\u753b\n        holder.gsyVideoPlayer.setShowFullAnimation(true);\n        //\u5c0f\u5c4f\u65f6\u4e0d\u89e6\u6478\u6ed1\u52a8\n        holder.gsyVideoPlayer.setIsTouchWiget(false);\n        //\u5168\u5c4f\u662f\u5426\u9700\u8981lock\u529f\u80fd\n        return convertView;\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/simple/adapter/SimpleListVideoModeAdapter.java", "stars": "2", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44009, "method_name": "loaderForFactory", "class_name": "MainTextureConnectingCTMConfig", "params": ["SpriteProviderFactory<MainTextureConnectingCTMConfig>"], "throws": null, "modifiers": ["public", "static"], "return_type": "CTMConfig", "snippet": "\tpublic static CTMConfig.Loader<MainTextureConnectingCTMConfig> loaderForFactory(SpriteProviderFactory<MainTextureConnectingCTMConfig> factory) {\n\t\treturn (p, l, m, n) -> new MainTextureConnectingCTMConfig(p, l, m, factory, n);\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/MainTextureConnectingCTMConfig.java", "stars": "3", "class_props": {"extends": "ConnectingCTMConfig", "implements": null, "modifiers": ["public"]}}, {"id": 44010, "method_name": "getConnectionMatcher", "class_name": "MainTextureConnectingCTMConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BiPredicate<BlockState,BlockState>", "snippet": "\tpublic BiPredicate<BlockState, BlockState> getConnectionMatcher() {\n\t\treturn connectionMatcher;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/MainTextureConnectingCTMConfig.java", "stars": "3", "class_props": {"extends": "ConnectingCTMConfig", "implements": null, "modifiers": ["public"]}}, {"id": 44011, "method_name": "getSelf", "class_name": "MainTextureConnectingCTMConfig", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "MainTextureConnectingCTMConfig", "snippet": "\tprotected MainTextureConnectingCTMConfig getSelf() {\n\t\treturn this;\n\t}", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/MainTextureConnectingCTMConfig.java", "stars": "3", "class_props": {"extends": "ConnectingCTMConfig", "implements": null, "modifiers": ["public"]}}, {"id": 44012, "method_name": "getResultSet", "class_name": "ResultSetWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ResultSet", "snippet": "  public ResultSet getResultSet() {\n    return resultSet;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44013, "method_name": "getColumnNames", "class_name": "ResultSetWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getColumnNames() {\n    return this.columnNames;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44014, "method_name": "getClassNames", "class_name": "ResultSetWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getClassNames() {\n    return Collections.unmodifiableList(classNames);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44015, "method_name": "getJdbcTypes", "class_name": "ResultSetWrapper", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<JdbcType>", "snippet": "  public List<JdbcType> getJdbcTypes() {\n    return jdbcTypes;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44016, "method_name": "getJdbcType", "class_name": "ResultSetWrapper", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "JdbcType", "snippet": "  public JdbcType getJdbcType(String columnName) {\n    for (int i = 0 ; i < columnNames.size(); i++) {\n      if (columnNames.get(i).equalsIgnoreCase(columnName)) {\n        return jdbcTypes.get(i);\n      }\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44017, "method_name": "getTypeHandler", "class_name": "ResultSetWrapper", "params": ["Class<?>", "String"], "throws": null, "modifiers": ["public"], "return_type": "TypeHandler<?>", "snippet": "  public TypeHandler<?> getTypeHandler(Class<?> propertyType, String columnName) {\n    TypeHandler<?> handler = null;\n    Map<Class<?>, TypeHandler<?>> columnHandlers = typeHandlerMap.get(columnName);\n    if (columnHandlers == null) {\n      columnHandlers = new HashMap<>();\n      typeHandlerMap.put(columnName, columnHandlers);\n    } else {\n      handler = columnHandlers.get(propertyType);\n    }\n    if (handler == null) {\n      JdbcType jdbcType = getJdbcType(columnName);\n      handler = typeHandlerRegistry.getTypeHandler(propertyType, jdbcType);\n      // Replicate logic of UnknownTypeHandler#resolveTypeHandler\n      // See issue #59 comment 10\n      if (handler == null || handler instanceof UnknownTypeHandler) {\n        final int index = columnNames.indexOf(columnName);\n        final Class<?> javaType = resolveClass(classNames.get(index));\n        if (javaType != null && jdbcType != null) {\n          handler = typeHandlerRegistry.getTypeHandler(javaType, jdbcType);\n        } else if (javaType != null) {\n          handler = typeHandlerRegistry.getTypeHandler(javaType);\n        } else if (jdbcType != null) {\n          handler = typeHandlerRegistry.getTypeHandler(jdbcType);\n        }\n      }\n      if (handler == null || handler instanceof UnknownTypeHandler) {\n        handler = new ObjectTypeHandler();\n      }\n      columnHandlers.put(propertyType, handler);\n    }\n    return handler;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44018, "method_name": "resolveClass", "class_name": "ResultSetWrapper", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "Class<?>", "snippet": "  private Class<?> resolveClass(String className) {\n    try {\n      // #699 className could be null\n      if (className != null) {\n        return Resources.classForName(className);\n      }\n    } catch (ClassNotFoundException e) {\n      // ignore\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44019, "method_name": "loadMappedAndUnmappedColumnNames", "class_name": "ResultSetWrapper", "params": ["ResultMap", "String"], "throws": ["SQLException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadMappedAndUnmappedColumnNames(ResultMap resultMap, String columnPrefix) throws SQLException {\n    List<String> mappedColumnNames = new ArrayList<>();\n    List<String> unmappedColumnNames = new ArrayList<>();\n    final String upperColumnPrefix = columnPrefix == null ? null : columnPrefix.toUpperCase(Locale.ENGLISH);\n    final Set<String> mappedColumns = prependPrefixes(resultMap.getMappedColumns(), upperColumnPrefix);\n    for (String columnName : columnNames) {\n      final String upperColumnName = columnName.toUpperCase(Locale.ENGLISH);\n      if (mappedColumns.contains(upperColumnName)) {\n        mappedColumnNames.add(upperColumnName);\n      } else {\n        unmappedColumnNames.add(columnName);\n      }\n    }\n    mappedColumnNamesMap.put(getMapKey(resultMap, columnPrefix), mappedColumnNames);\n    unMappedColumnNamesMap.put(getMapKey(resultMap, columnPrefix), unmappedColumnNames);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44020, "method_name": "getMappedColumnNames", "class_name": "ResultSetWrapper", "params": ["ResultMap", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getMappedColumnNames(ResultMap resultMap, String columnPrefix) throws SQLException {\n    List<String> mappedColumnNames = mappedColumnNamesMap.get(getMapKey(resultMap, columnPrefix));\n    if (mappedColumnNames == null) {\n      loadMappedAndUnmappedColumnNames(resultMap, columnPrefix);\n      mappedColumnNames = mappedColumnNamesMap.get(getMapKey(resultMap, columnPrefix));\n    }\n    return mappedColumnNames;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44021, "method_name": "getUnmappedColumnNames", "class_name": "ResultSetWrapper", "params": ["ResultMap", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "List<String>", "snippet": "  public List<String> getUnmappedColumnNames(ResultMap resultMap, String columnPrefix) throws SQLException {\n    List<String> unMappedColumnNames = unMappedColumnNamesMap.get(getMapKey(resultMap, columnPrefix));\n    if (unMappedColumnNames == null) {\n      loadMappedAndUnmappedColumnNames(resultMap, columnPrefix);\n      unMappedColumnNames = unMappedColumnNamesMap.get(getMapKey(resultMap, columnPrefix));\n    }\n    return unMappedColumnNames;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44022, "method_name": "getMapKey", "class_name": "ResultSetWrapper", "params": ["ResultMap", "String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String getMapKey(ResultMap resultMap, String columnPrefix) {\n    return resultMap.getId() + \":\" + columnPrefix;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44023, "method_name": "prependPrefixes", "class_name": "ResultSetWrapper", "params": ["Set<String>", "String"], "throws": null, "modifiers": ["private"], "return_type": "Set<String>", "snippet": "  private Set<String> prependPrefixes(Set<String> columnNames, String prefix) {\n    if (columnNames == null || columnNames.isEmpty() || prefix == null || prefix.length() == 0) {\n      return columnNames;\n    }\n    final Set<String> prefixed = new HashSet<>();\n    for (String columnName : columnNames) {\n      prefixed.add(prefix + columnName);\n    }\n    return prefixed;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/executor/resultset/ResultSetWrapper.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44024, "method_name": "shouldDemonstrateObjectsBeingCollectedAsNeeded", "class_name": "SoftCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateObjectsBeingCollectedAsNeeded() {\n    final int N = 3000000;\n    SoftCache cache = new SoftCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < N; i++) {\n      byte[] array = new byte[5001]; //waste a bunch of memory\n      array[5000] = 1;\n      cache.putObject(i, array);\n      Object value = cache.getObject(i);\n      if (cache.getSize() < i + 1) {\n        //System.out.println(\"Cache exceeded with \" + (i + 1) + \" entries.\");\n        break;\n      }\n    }\n    assertTrue(cache.getSize() < N);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/SoftCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44025, "method_name": "shouldDemonstrateCopiesAreEqual", "class_name": "SoftCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldDemonstrateCopiesAreEqual() {\n    Cache cache = new SoftCache(new PerpetualCache(\"default\"));\n    cache = new SerializedCache(cache);\n    for (int i = 0; i < 1000; i++) {\n      cache.putObject(i, i);\n      Object value = cache.getObject(i);\n      assertTrue(value == null || value.equals(i));\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/SoftCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44026, "method_name": "shouldRemoveItemOnDemand", "class_name": "SoftCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldRemoveItemOnDemand() {\n    Cache cache = new SoftCache(new PerpetualCache(\"default\"));\n    cache.putObject(0, 0);\n    assertNotNull(cache.getObject(0));\n    cache.removeObject(0);\n    assertNull(cache.getObject(0));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/SoftCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44027, "method_name": "shouldFlushAllItemsOnDemand", "class_name": "SoftCacheTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldFlushAllItemsOnDemand() {\n    Cache cache = new SoftCache(new PerpetualCache(\"default\"));\n    for (int i = 0; i < 5; i++) {\n      cache.putObject(i, i);\n    }\n    assertNotNull(cache.getObject(0));\n    assertNotNull(cache.getObject(4));\n    cache.clear();\n    assertNull(cache.getObject(0));\n    assertNull(cache.getObject(4));\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/cache/SoftCacheTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44028, "method_name": "showMemory", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean showMemory()      { return showMemory; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44029, "method_name": "toggleMemory", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleMemory()       { showMemory = !showMemory; save(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44030, "method_name": "playAnimations", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean playAnimations()  { return graphicsLevel != GraphicsSetting.LOW; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44031, "method_name": "antialiasing", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean antialiasing()    { return graphicsLevel == GraphicsSetting.NORMAL; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44032, "method_name": "playSounds", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean playSounds()      { return playSounds; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44033, "method_name": "toggleSounds", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleSounds()       { playSounds = !playSounds;\tsave(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44034, "method_name": "playMusic", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean playMusic()       { return playMusic; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44035, "method_name": "toggleMusic", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleMusic()        { playMusic = !playMusic; save();  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44036, "method_name": "textures", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean textures()        { return textures; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44037, "method_name": "toggleTextures", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleTextures()     { textures = !textures; save();  }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44038, "method_name": "screenSizePct", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "    public static int screenSizePct()       { return screenSizePct; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44039, "method_name": "screenSizePct", "class_name": "UserPreferences", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void screenSizePct(int i) { setScreenSizePct(i); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44040, "method_name": "toggleYearDisplay", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleYearDisplay()    { displayYear = !displayYear; save(); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44041, "method_name": "displayYear", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean displayYear()       { return displayYear; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44042, "method_name": "uiTexturePct", "class_name": "UserPreferences", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void uiTexturePct(int i)    { uiTexturePct = i / 100.0f; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44043, "method_name": "uiTexturePct", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float uiTexturePct()        { return uiTexturePct; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44044, "method_name": "graphicsLevel", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "GraphicsSetting", "snippet": "    public static GraphicsSetting graphicsLevel()    { return graphicsLevel; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44045, "method_name": "loadAndSave", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void loadAndSave() {\n        load();\n        save();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44046, "method_name": "load", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void load() {\n        String path = Rotp.jarPath();\n        try (FileReader fileReader = new FileReader(new File(path, PREFERENCES_FILE));\n            BufferedReader in = new BufferedReader(fileReader); ) {\n            String input;\n            if (in != null) {\n                while ((input = in.readLine()) != null)\n                    loadPreferenceLine(input.trim());\n            }\n        }\n        catch (FileNotFoundException e) {\n            System.err.println(path+PREFERENCES_FILE+\" not found.\");\n        }\n        catch (IOException e) {\n            System.err.println(\"UserPreferences.load -- IOException: \"+ e.toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44047, "method_name": "save", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void save() {\n        String path = Rotp.jarPath();\n        List<String> raceKeys = new ArrayList<>(raceNames.keySet());\n        Collections.sort(raceKeys);\n        try (FileOutputStream fout = new FileOutputStream(new File(path, PREFERENCES_FILE));\n            PrintWriter out = new PrintWriter(fout); ) {\n            out.println(keyFormat(\"GRAPHICS\")+ graphicsLevel.toString());\n            out.println(keyFormat(\"MUSIC\")+ yesOrNo(playMusic));\n            out.println(keyFormat(\"SOUNDS\")+ yesOrNo(playSounds));\n            out.println(keyFormat(\"MUSIC_VOLUME\")+ SoundManager.musicLevel());\n            out.println(keyFormat(\"SOUND_VOLUME\")+ SoundManager.soundLevel());\n            out.println(keyFormat(\"SHOW_MEMORY\")+ yesOrNo(showMemory));\n            out.println(keyFormat(\"DISPLAY_YEAR\")+ yesOrNo(displayYear));\n            out.println(keyFormat(\"SCREEN_SIZE_PCT\")+ screenSizePct());\n            out.println(keyFormat(\"UI_TEXTURES\")+ yesOrNo(textures));\n            out.println(keyFormat(\"UI_TEXTURE_LEVEL\")+(int) (uiTexturePct()*100));\n            out.println(keyFormat(\"LANGUAGE\")+ languageDir());\n            for (String raceKey: raceKeys) \n              out.println(keyFormat(raceKey)+raceNames.get(raceKey));\n        }\n        catch (IOException e) {\n            System.err.println(\"UserPreferences.save -- IOException: \"+ e.toString());\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44048, "method_name": "keyFormat", "class_name": "UserPreferences", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String keyFormat(String s)  { return String.format(keyFormat, s); }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44049, "method_name": "loadPreferenceLine", "class_name": "UserPreferences", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void loadPreferenceLine(String line) {\n        if (line.isEmpty())\n            return;\n\n        String[] args = line.split(\":\");\n        if (args.length < 2)\n            return;\n\n        String key = args[0].toUpperCase().trim();\n        String val = args[1].trim();\n        if (key.isEmpty() || val.isEmpty())\n                return;\n\n        System.out.println(\"Key:\"+key+\"  value:\"+val);\n        switch(key) {\n            case \"GRAPHICS\":     graphicsLevel(val); return;\n            case \"MUSIC\":        playMusic = yesOrNo(val); return;\n            case \"SOUNDS\":       playSounds = yesOrNo(val); return;\n            case \"MUSIC_VOLUME\": SoundManager.musicLevel(Integer.valueOf(val)); return;\n            case \"SOUND_VOLUME\": SoundManager.soundLevel(Integer.valueOf(val)); return;\n            case \"SHOW_MEMORY\":  showMemory = yesOrNo(val); return;\n            case \"DISPLAY_YEAR\": displayYear = yesOrNo(val); return;\n            case \"SCREEN_SIZE_PCT\": screenSizePct(Integer.valueOf(val)); return;\n            case \"UI_TEXTURES\":  textures = yesOrNo(val); return;\n            case \"UI_TEXTURE_LEVEL\": uiTexturePct(Integer.valueOf(val)); return;\n            case \"LANGUAGE\":     selectLanguage(val); return;\n            default:\n                raceNames.put(key, val); break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44050, "method_name": "yesOrNo", "class_name": "UserPreferences", "params": ["boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String yesOrNo(boolean b) {\n        return b ? \"YES\" : \"NO\";\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44051, "method_name": "yesOrNo", "class_name": "UserPreferences", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean yesOrNo(String s) {\n        return s.equalsIgnoreCase(\"YES\");\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44052, "method_name": "selectLanguage", "class_name": "UserPreferences", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void selectLanguage(String s) {\n        LanguageManager.selectLanguage(s);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44053, "method_name": "languageDir", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "String", "snippet": "    private static String languageDir() {\n        return LanguageManager.selectedLanguageDir();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44054, "method_name": "setScreenSizePct", "class_name": "UserPreferences", "params": ["int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void setScreenSizePct(int i) {\n        screenSizePct = Math.max(50,Math.min(i,100));\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44055, "method_name": "shrinkFrame", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean shrinkFrame() {\n        int oldSize = screenSizePct;\n        setScreenSizePct(screenSizePct-5);\n        return oldSize != screenSizePct;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44056, "method_name": "expandFrame", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean expandFrame() {\n        int oldSize = screenSizePct;\n        setScreenSizePct(screenSizePct+5);\n        return oldSize != screenSizePct;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44057, "method_name": "graphicsLevel", "class_name": "UserPreferences", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void graphicsLevel(String s) {\n        String level = s.toUpperCase();\n        switch(level) {\n            case \"NORMAL\" : graphicsLevel = GraphicsSetting.NORMAL; break;\n            case \"MEDIUM\" : graphicsLevel = GraphicsSetting.MEDIUM; break;\n            case \"LOW\"    : graphicsLevel = GraphicsSetting.LOW; break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44058, "method_name": "toggleGraphicsLevel", "class_name": "UserPreferences", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void toggleGraphicsLevel() {\n        switch(graphicsLevel) {\n            case NORMAL:  graphicsLevel = GraphicsSetting.MEDIUM; save(); break;\n            case MEDIUM:  graphicsLevel = GraphicsSetting.LOW; save(); break;\n            case LOW:     graphicsLevel = GraphicsSetting.NORMAL; save(); break;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44059, "method_name": "raceNames", "class_name": "UserPreferences", "params": ["String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String raceNames(String id, String defaultNames) {\n        String idUpper = id.toUpperCase();\n        if (raceNames.containsKey(idUpper))\n            return raceNames.get(idUpper);\n        \n        raceNames.put(idUpper, defaultNames);\n        return defaultNames;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/UserPreferences.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44060, "method_name": "main", "class_name": "JavaObjectSearcherTest", "params": ["String"], "throws": ["NoSuchFieldException", "IllegalAccessException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws NoSuchFieldException, IllegalAccessException {\n\n        TestClass target =  new TestClass();\n\n        String[] keys = new String[]{\"Request\",\"ServletRequst\", \"Entity\"};\n\n        JavaObjectSearcher grab = new JavaObjectSearcher(target,keys,\"JavaObjectSearcherTest\",1000,true);\n        grab.searchObject();\n    }", "url": "https://raw.githubusercontent.com/c0ny1/java-object-searcher/master/src/test/java/me/gv7/tools/josearcher/searcher/JavaObjectSearcherTest.java", "stars": "160", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44061, "method_name": "setOrderByClause", "class_name": "PmsProductAttributeCategoryExample", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOrderByClause(String orderByClause) {\n        this.orderByClause = orderByClause;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44062, "method_name": "getOrderByClause", "class_name": "PmsProductAttributeCategoryExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOrderByClause() {\n        return orderByClause;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44063, "method_name": "setDistinct", "class_name": "PmsProductAttributeCategoryExample", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDistinct(boolean distinct) {\n        this.distinct = distinct;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44064, "method_name": "isDistinct", "class_name": "PmsProductAttributeCategoryExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isDistinct() {\n        return distinct;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44065, "method_name": "getOredCriteria", "class_name": "PmsProductAttributeCategoryExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criteria>", "snippet": "    public List<Criteria> getOredCriteria() {\n        return oredCriteria;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44066, "method_name": "or", "class_name": "PmsProductAttributeCategoryExample", "params": ["Criteria"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void or(Criteria criteria) {\n        oredCriteria.add(criteria);\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44067, "method_name": "or", "class_name": "PmsProductAttributeCategoryExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria or() {\n        Criteria criteria = createCriteriaInternal();\n        oredCriteria.add(criteria);\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44068, "method_name": "createCriteria", "class_name": "PmsProductAttributeCategoryExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "    public Criteria createCriteria() {\n        Criteria criteria = createCriteriaInternal();\n        if (oredCriteria.size() == 0) {\n            oredCriteria.add(criteria);\n        }\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44069, "method_name": "createCriteriaInternal", "class_name": "PmsProductAttributeCategoryExample", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "Criteria", "snippet": "    protected Criteria createCriteriaInternal() {\n        Criteria criteria = new Criteria();\n        return criteria;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44070, "method_name": "clear", "class_name": "PmsProductAttributeCategoryExample", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clear() {\n        oredCriteria.clear();\n        orderByClause = null;\n        distinct = false;\n    }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44071, "method_name": "isValid", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isValid() {\n            return criteria.size() > 0;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44072, "method_name": "getAllCriteria", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getAllCriteria() {\n            return criteria;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44073, "method_name": "getCriteria", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<Criterion>", "snippet": "        public List<Criterion> getCriteria() {\n            return criteria;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44074, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition) {\n            if (condition == null) {\n                throw new RuntimeException(\"Value for condition cannot be null\");\n            }\n            criteria.add(new Criterion(condition));\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44075, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value, String property) {\n            if (value == null) {\n                throw new RuntimeException(\"Value for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value));\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44076, "method_name": "addCriterion", "class_name": "GeneratedCriteria", "params": ["String", "Object", "Object", "String"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "        protected void addCriterion(String condition, Object value1, Object value2, String property) {\n            if (value1 == null || value2 == null) {\n                throw new RuntimeException(\"Between values for \" + property + \" cannot be null\");\n            }\n            criteria.add(new Criterion(condition, value1, value2));\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44077, "method_name": "andIdIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNull() {\n            addCriterion(\"id is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44078, "method_name": "andIdIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIsNotNull() {\n            addCriterion(\"id is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44079, "method_name": "andIdEqualTo", "class_name": "GeneratedCriteria", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdEqualTo(Long value) {\n            addCriterion(\"id =\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44080, "method_name": "andIdNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotEqualTo(Long value) {\n            addCriterion(\"id <>\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44081, "method_name": "andIdGreaterThan", "class_name": "GeneratedCriteria", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThan(Long value) {\n            addCriterion(\"id >\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44082, "method_name": "andIdGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdGreaterThanOrEqualTo(Long value) {\n            addCriterion(\"id >=\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44083, "method_name": "andIdLessThan", "class_name": "GeneratedCriteria", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThan(Long value) {\n            addCriterion(\"id <\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44084, "method_name": "andIdLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdLessThanOrEqualTo(Long value) {\n            addCriterion(\"id <=\", value, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44085, "method_name": "andIdIn", "class_name": "GeneratedCriteria", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdIn(List<Long> values) {\n            addCriterion(\"id in\", values, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44086, "method_name": "andIdNotIn", "class_name": "GeneratedCriteria", "params": ["List<Long>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotIn(List<Long> values) {\n            addCriterion(\"id not in\", values, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44087, "method_name": "andIdBetween", "class_name": "GeneratedCriteria", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdBetween(Long value1, Long value2) {\n            addCriterion(\"id between\", value1, value2, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44088, "method_name": "andIdNotBetween", "class_name": "GeneratedCriteria", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andIdNotBetween(Long value1, Long value2) {\n            addCriterion(\"id not between\", value1, value2, \"id\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44089, "method_name": "andNameIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIsNull() {\n            addCriterion(\"name is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44090, "method_name": "andNameIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIsNotNull() {\n            addCriterion(\"name is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44091, "method_name": "andNameEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameEqualTo(String value) {\n            addCriterion(\"name =\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44092, "method_name": "andNameNotEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotEqualTo(String value) {\n            addCriterion(\"name <>\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44093, "method_name": "andNameGreaterThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameGreaterThan(String value) {\n            addCriterion(\"name >\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44094, "method_name": "andNameGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameGreaterThanOrEqualTo(String value) {\n            addCriterion(\"name >=\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44095, "method_name": "andNameLessThan", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLessThan(String value) {\n            addCriterion(\"name <\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44096, "method_name": "andNameLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLessThanOrEqualTo(String value) {\n            addCriterion(\"name <=\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44097, "method_name": "andNameLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameLike(String value) {\n            addCriterion(\"name like\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44098, "method_name": "andNameNotLike", "class_name": "GeneratedCriteria", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotLike(String value) {\n            addCriterion(\"name not like\", value, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44099, "method_name": "andNameIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameIn(List<String> values) {\n            addCriterion(\"name in\", values, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44100, "method_name": "andNameNotIn", "class_name": "GeneratedCriteria", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotIn(List<String> values) {\n            addCriterion(\"name not in\", values, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44101, "method_name": "andNameBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameBetween(String value1, String value2) {\n            addCriterion(\"name between\", value1, value2, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44102, "method_name": "andNameNotBetween", "class_name": "GeneratedCriteria", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andNameNotBetween(String value1, String value2) {\n            addCriterion(\"name not between\", value1, value2, \"name\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44103, "method_name": "andAttributeCountIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountIsNull() {\n            addCriterion(\"attribute_count is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44104, "method_name": "andAttributeCountIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountIsNotNull() {\n            addCriterion(\"attribute_count is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44105, "method_name": "andAttributeCountEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountEqualTo(Integer value) {\n            addCriterion(\"attribute_count =\", value, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44106, "method_name": "andAttributeCountNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountNotEqualTo(Integer value) {\n            addCriterion(\"attribute_count <>\", value, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44107, "method_name": "andAttributeCountGreaterThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountGreaterThan(Integer value) {\n            addCriterion(\"attribute_count >\", value, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44108, "method_name": "andAttributeCountGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountGreaterThanOrEqualTo(Integer value) {\n            addCriterion(\"attribute_count >=\", value, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44109, "method_name": "andAttributeCountLessThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountLessThan(Integer value) {\n            addCriterion(\"attribute_count <\", value, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44110, "method_name": "andAttributeCountLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountLessThanOrEqualTo(Integer value) {\n            addCriterion(\"attribute_count <=\", value, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44111, "method_name": "andAttributeCountIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountIn(List<Integer> values) {\n            addCriterion(\"attribute_count in\", values, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44112, "method_name": "andAttributeCountNotIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountNotIn(List<Integer> values) {\n            addCriterion(\"attribute_count not in\", values, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44113, "method_name": "andAttributeCountBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountBetween(Integer value1, Integer value2) {\n            addCriterion(\"attribute_count between\", value1, value2, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44114, "method_name": "andAttributeCountNotBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andAttributeCountNotBetween(Integer value1, Integer value2) {\n            addCriterion(\"attribute_count not between\", value1, value2, \"attributeCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44115, "method_name": "andParamCountIsNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountIsNull() {\n            addCriterion(\"param_count is null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44116, "method_name": "andParamCountIsNotNull", "class_name": "GeneratedCriteria", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountIsNotNull() {\n            addCriterion(\"param_count is not null\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44117, "method_name": "andParamCountEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountEqualTo(Integer value) {\n            addCriterion(\"param_count =\", value, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44118, "method_name": "andParamCountNotEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountNotEqualTo(Integer value) {\n            addCriterion(\"param_count <>\", value, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44119, "method_name": "andParamCountGreaterThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountGreaterThan(Integer value) {\n            addCriterion(\"param_count >\", value, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44120, "method_name": "andParamCountGreaterThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountGreaterThanOrEqualTo(Integer value) {\n            addCriterion(\"param_count >=\", value, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44121, "method_name": "andParamCountLessThan", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountLessThan(Integer value) {\n            addCriterion(\"param_count <\", value, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44122, "method_name": "andParamCountLessThanOrEqualTo", "class_name": "GeneratedCriteria", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountLessThanOrEqualTo(Integer value) {\n            addCriterion(\"param_count <=\", value, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44123, "method_name": "andParamCountIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountIn(List<Integer> values) {\n            addCriterion(\"param_count in\", values, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44124, "method_name": "andParamCountNotIn", "class_name": "GeneratedCriteria", "params": ["List<Integer>"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountNotIn(List<Integer> values) {\n            addCriterion(\"param_count not in\", values, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44125, "method_name": "andParamCountBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountBetween(Integer value1, Integer value2) {\n            addCriterion(\"param_count between\", value1, value2, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44126, "method_name": "andParamCountNotBetween", "class_name": "GeneratedCriteria", "params": ["Integer", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "Criteria", "snippet": "        public Criteria andParamCountNotBetween(Integer value1, Integer value2) {\n            addCriterion(\"param_count not between\", value1, value2, \"paramCount\");\n            return (Criteria) this;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["protected", "static", "abstract"]}}, {"id": 44127, "method_name": "getCondition", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCondition() {\n            return condition;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44128, "method_name": "getValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getValue() {\n            return value;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44129, "method_name": "getSecondValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getSecondValue() {\n            return secondValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44130, "method_name": "isNoValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isNoValue() {\n            return noValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44131, "method_name": "isSingleValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isSingleValue() {\n            return singleValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44132, "method_name": "isBetweenValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isBetweenValue() {\n            return betweenValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44133, "method_name": "isListValue", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "        public boolean isListValue() {\n            return listValue;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44134, "method_name": "getTypeHandler", "class_name": "Criterion", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTypeHandler() {\n            return typeHandler;\n        }", "url": "https://raw.githubusercontent.com/gavin-yyj/vhr-/master/swagger/src/main/java/com/macro/mall/tiny/mbg/model/PmsProductAttributeCategoryExample.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44135, "method_name": "HasPermission", "class_name": "UserInterceptor", "params": ["List<String>", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean HasPermission(List<String> menus, String uri) {\n        if (uri.indexOf(\"?\") > 0) {\n            uri = uri.substring(0, uri.indexOf(\"?\"));\n        }\n        final String u = uri;\n        if (menus == null) {\n            return false;\n        }\n        return menus.parallelStream().anyMatch(menu ->\n                menu.equals(u)\n        );\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/main/java/com/cgb/bcpinstall/main/interceptor/UserInterceptor.java", "stars": "7", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 44136, "method_name": "preHandle", "class_name": "UserInterceptor", "params": ["HttpServletRequest", "HttpServletResponse", "Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        return true;\n        // \u5982\u679c\u4e0d\u662f\u6620\u5c04\u5230\u65b9\u6cd5\u76f4\u63a5\u901a\u8fc7\n//        if (!(handler instanceof HandlerMethod)) {\n//            return true;\n//        }\n\n//\n//        // \u6839\u636etoken\u83b7\u53d6\u7528\u6237 \u4fdd\u5b58ThreadLocal\n//        String accessToken = request.getHeader(LoginConstant.ACCESS_TOKEN);\n//\n//        if (StringUtils.isNotBlank(accessToken)) {\n//            accessToken = URLDecoder.decode(accessToken, \"UTF-8\");\n//            /*SysUserDO usertemp = new SysUserDO();\n//            usertemp.setUpdId((long) 0);\n//            usertemp.setId((long) 1);\n//            redisValueService.set(LoginConstant.LOGIN_TOKENS + token, usertemp, 100000);*/\n//\n//            System.out.println(\"UserInterceptor->preHandle:\" + accessToken);\n//            //\u4ece\u672c\u5730\u7f13\u5b58\u8bfb\u53d6token\u5bf9\u5e94\u7528\u6237\u4fe1\u606f\n//\n//            RequestContextHandler.setCurrentUserToken(accessToken);\n//            logger.info(\"--> token \u6821\u9a8c\u6210\u529f\");\n//            return true;\n//\n//        } else {\n//            logger.info(\"---> interceptor token is null\");\n//            resultInfo(response, ResponseCode.NO_TOKEN);\n//            return false;\n//        }\n//\n\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/main/java/com/cgb/bcpinstall/main/interceptor/UserInterceptor.java", "stars": "7", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 44137, "method_name": "postHandle", "class_name": "UserInterceptor", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "ModelAndView"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) {\n        RequestContextHandler.remove();\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/main/java/com/cgb/bcpinstall/main/interceptor/UserInterceptor.java", "stars": "7", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 44138, "method_name": "afterCompletion", "class_name": "UserInterceptor", "params": ["HttpServletRequest", "HttpServletResponse", "Object", "Exception"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) {\n        RequestContextHandler.remove();\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/main/java/com/cgb/bcpinstall/main/interceptor/UserInterceptor.java", "stars": "7", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 44139, "method_name": "resultInfo", "class_name": "UserInterceptor", "params": ["HttpServletResponse", "ResponseCode"], "throws": ["Exception"], "modifiers": ["private"], "return_type": "void", "snippet": "    private void resultInfo(HttpServletResponse response, ResponseCode code) throws Exception {\n        BaseResponse resp = new BaseResponse();\n        resp.setCode(code);\n        response.setContentType(\"application/json;charset=UTF-8\");\n        PrintWriter writer = response.getWriter();\n        writer.write(JSONObject.toJSONString(resp, SerializerFeature.WriteEnumUsingToString));\n        writer.flush();\n        writer.close();\n    }", "url": "https://raw.githubusercontent.com/zeoio/fabric-toolkit/master/bcp-install-main/src/main/java/com/cgb/bcpinstall/main/interceptor/UserInterceptor.java", "stars": "7", "class_props": {"extends": null, "implements": ["HandlerInterceptor"], "modifiers": ["public"]}}, {"id": 44140, "method_name": "newInstance", "class_name": "EpisodeDialogFragment", "params": ["Show", "Episode"], "throws": null, "modifiers": ["public", "static"], "return_type": "EpisodeDialogFragment", "snippet": "    public static EpisodeDialogFragment newInstance(Show show, Episode episode) {\n        EpisodeDialogFragment frag = new EpisodeDialogFragment();\n        Bundle args = new Bundle();\n        args.putParcelable(EXTRA_SHOW, show);\n        args.putParcelable(EXTRA_EPISODE, episode);\n        frag.setArguments(args);\n        return frag;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44141, "method_name": "onCreateView", "class_name": "EpisodeDialogFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n        View v = LayoutInflater.from(new ContextThemeWrapper(getActivity(), R.style.Theme_Butter)).inflate(R.layout.fragment_dialog_episode, container, false);\n        ButterKnife.bind(this, v);\n\n        if (!VersionUtils.isJellyBean()) {\n            mPlayButton.setBackground(PixelUtils.changeDrawableColor(mPlayButton.getContext(), R.drawable.play_button_circle, mShow.color));\n        } else {\n            mPlayButton.setBackground(PixelUtils.changeDrawableColor(mPlayButton.getContext(), R.drawable.play_button_circle, mShow.color));\n        }\n\n        LinearLayout.LayoutParams layoutParams = (LinearLayout.LayoutParams) mPlaceholder.getLayoutParams();\n        layoutParams.height = PixelUtils.getScreenHeight(mActivity);\n        mPlaceholder.setLayoutParams(layoutParams);\n\n        return v;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44142, "method_name": "onCreate", "class_name": "EpisodeDialogFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n\n\n        MobileButterApplication.getAppContext()\n                .getComponent()\n                .inject(this);\n        setStyle(STYLE_NO_FRAME, R.style.Theme_Dialog_Episode);\n        setCancelable(false);\n\n        mActivity = getActivity();\n        mThreshold = PixelUtils.getPixelsFromDp(mActivity, 220);\n        mBottom = PixelUtils.getPixelsFromDp(mActivity, 33);\n        mShow = getArguments().getParcelable(EXTRA_SHOW);\n        mEpisode = getArguments().getParcelable(EXTRA_EPISODE);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44143, "method_name": "onCreateDialog", "class_name": "EpisodeDialogFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "Dialog", "snippet": "    public Dialog onCreateDialog(Bundle savedInstanceState) {\n        Dialog dialog = super.onCreateDialog(savedInstanceState);\n        dialog.setOnKeyListener(new DialogInterface.OnKeyListener() {\n            @Override\n            public boolean onKey(DialogInterface dialog, int keyCode, KeyEvent event) {\n                if (keyCode == KeyEvent.KEYCODE_BACK) {\n                    smoothDismiss();\n                }\n                return true;\n            }\n        });\n        return dialog;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44144, "method_name": "smoothDismiss", "class_name": "EpisodeDialogFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void smoothDismiss() {\n        mOpened = false;\n\n        if (mScrollView.getScrollY() <= mBottom) {\n            dismiss();\n            return;\n        }\n\n        mScrollView.animateScrollTo(0, ANIM_SPEED);\n        mScrollView.postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                try {\n                    dismiss();\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n        }, ANIM_SPEED);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44145, "method_name": "onDismiss", "class_name": "EpisodeDialogFragment", "params": ["DialogInterface"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onDismiss(DialogInterface dialog) {\n        super.onDismiss(dialog);\n        if (providerManager.hasCurrentSubsProvider())\n            providerManager.getCurrentSubsProvider().cancel();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44146, "method_name": "onViewCreated", "class_name": "EpisodeDialogFragment", "params": ["View", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onViewCreated(View view, @Nullable Bundle savedInstanceState) {\n        super.onViewCreated(view, savedInstanceState);\n\n        mScrollView.postDelayed(new Runnable() {\n            @Override\n            public void run() {\n                //mMaxHeight = PixelUtils.getScreenHeight(mActivity) - PixelUtils.getPixelsFromDp(mActivity, 50);\n                int screenHeight = PixelUtils.getScreenHeight(mActivity);\n                int scroll = (screenHeight / 3) * 2;\n                mScrollView.animateScrollTo(scroll, ANIM_SPEED);\n                mScrollView.postDelayed(new Runnable() {\n                    @Override\n                    public void run() {\n                        mOpened = true;\n                    }\n                }, ANIM_SPEED);\n            }\n        }, 250);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44147, "method_name": "onActivityCreated", "class_name": "EpisodeDialogFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onActivityCreated(Bundle savedInstanceState) {\n        super.onActivityCreated(savedInstanceState);\n\n        if (!TextUtils.isEmpty(mEpisode.title)) {\n            mTitle.setText(mEpisode.title);\n            mHeaderImage.setContentDescription(mEpisode.title);\n        } else {\n            mTitle.setText(R.string.no_title_available);\n            mHeaderImage.setContentDescription(getString(R.string.no_title_available));\n        }\n\n        mAired.setVisibility(mEpisode.aired > 0 ? View.VISIBLE : View.GONE);\n        Date airedDate = new Date((long) mEpisode.aired * 1000);\n        mAired.setText(String.format(getString(R.string.aired), new SimpleDateFormat(\"MMMM dd, yyyy\", LocaleUtils.getCurrent()).format(airedDate)));\n\n        if (!TextUtils.isEmpty(mEpisode.overview))\n            mSynopsis.setText(mEpisode.overview);\n        else\n            mSynopsis.setText(R.string.no_synopsis_available);\n\n        String seasonStr = Integer.toString(mEpisode.season);\n        if (seasonStr.length() < 2) seasonStr = \"0\" + seasonStr;\n        String episodeStr = Integer.toString(mEpisode.episode);\n        if (episodeStr.length() < 2) episodeStr = \"0\" + episodeStr;\n\n        mInfo.setText(\"S\" + seasonStr + \"E\" + episodeStr);\n\n        mSubtitles.setFragmentManager(getFragmentManager());\n        mQuality.setFragmentManager(getFragmentManager());\n        mSubtitles.setTitle(R.string.subtitles);\n        mQuality.setTitle(R.string.quality);\n\n        final String[] qualities = mEpisode.torrents.keySet().toArray(new String[mEpisode.torrents.size()]);\n        SortUtils.sortQualities(qualities);\n        mQuality.setData(qualities);\n\n        String quality = DefaultQuality.get(mActivity, Arrays.asList(qualities));\n        int qualityIndex = Arrays.asList(qualities).indexOf(quality);\n        mSelectedQuality = quality;\n        mQuality.setText(mSelectedQuality);\n        mQuality.setDefault(qualityIndex);\n\n        updateMagnet();\n\n        mQuality.setListener(new OptionSelector.SelectorListener() {\n            @Override\n            public void onSelectionChanged(int position, String value) {\n                mSelectedQuality = value;\n                updateMagnet();\n            }\n        });\n\n        mSubtitles.setText(R.string.loading_subs);\n        mSubtitles.setClickable(false);\n        if (providerManager.hasCurrentSubsProvider()) {\n            providerManager.getCurrentSubsProvider().getList(mEpisode, new SubsProvider.Callback() {\n                @Override\n                public void onSuccess(Map<String, String> subtitles) {\n                    if (FragmentUtil.isNotAdded(EpisodeDialogFragment.this)) return;\n\n                    mEpisode.subtitles = subtitles;\n\n                    String[] languages = subtitles.keySet().toArray(new String[subtitles.size()]);\n                    Arrays.sort(languages);\n                    final String[] adapterLanguages = new String[languages.length + 1];\n                    adapterLanguages[0] = \"no-subs\";\n                    System.arraycopy(languages, 0, adapterLanguages, 1, languages.length);\n\n                    String[] readableNames = new String[adapterLanguages.length];\n                    for (int i = 0; i < readableNames.length; i++) {\n                        String language = adapterLanguages[i];\n                        if (language.equals(\"no-subs\")) {\n                            readableNames[i] = getString(R.string.no_subs);\n                        } else {\n                            Locale locale = LocaleUtils.toLocale(language);\n                            readableNames[i] = locale.getDisplayName(locale);\n                        }\n                    }\n\n                    mSubtitles.setListener(new OptionSelector.SelectorListener() {\n                        @Override\n                        public void onSelectionChanged(int position, String value) {\n                            onSubtitleLanguageSelected(adapterLanguages[position]);\n                        }\n                    });\n                    mSubtitles.setData(readableNames);\n                    ThreadUtils.runOnUiThread(new Runnable() {\n                        @Override\n                        public void run() {\n                            mSubtitles.setClickable(true);\n                        }\n                    });\n\n                    String defaultSubtitle = PrefUtils.get(mSubtitles.getContext(), Prefs.SUBTITLE_DEFAULT, null);\n                    if (subtitles.containsKey(defaultSubtitle)) {\n                        onSubtitleLanguageSelected(defaultSubtitle);\n                        mSubtitles.setDefault(Arrays.asList(adapterLanguages).indexOf(defaultSubtitle));\n                    } else {\n                        onSubtitleLanguageSelected(\"no-subs\");\n                        mSubtitles.setDefault(Arrays.asList(adapterLanguages).indexOf(\"no-subs\"));\n                    }\n                }\n\n                @Override\n                public void onFailure(Exception e) {\n                    mSubtitles.setData(new String[0]);\n                    ThreadUtils.runOnUiThread(() -> {\n                        mSubtitles.setError(\"Could not load subtitles!\", e.getMessage());\n                        mSubtitles.setClickable(false);\n                    });\n                }\n            });\n        } else {\n            mSubtitles.setText(R.string.no_subs_available);\n        }\n\n        mScrollView.setListener(new BottomSheetScrollView.Listener() {\n            @Override\n            public void onScroll(int scrollY, BottomSheetScrollView.Direction direction) {\n            }\n\n            @Override\n            public void onTouch(boolean touching) {\n                mTouching = touching;\n                int scrollY = mScrollView.getScrollY();\n                if (!mTouching && mOpened && scrollY <= mThreshold) {\n                    smoothDismiss();\n                }\n            }\n\n            @Override\n            public void onScrollStart() {\n            }\n\n            @Override\n            public void onScrollEnd() {\n                if (!mTouching && mOpened && mScrollView.getScrollY() <= mThreshold) {\n                    smoothDismiss();\n                }\n            }\n        });\n\n        Picasso.get().load(mEpisode.headerImage).into(mHeaderImage);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44148, "method_name": "onAttach", "class_name": "EpisodeDialogFragment", "params": ["Context"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onAttach(Context activity) {\n        super.onAttach(activity);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44149, "method_name": "updateMagnet", "class_name": "EpisodeDialogFragment", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void updateMagnet() {\n        if (mOpenMagnet == null) return;\n\n        if (mMagnet == null) {\n            mMagnet = new Magnet(mActivity, mEpisode.torrents.get(mSelectedQuality).getUrl());\n        }\n        mMagnet.setUrl(mEpisode.torrents.get(mSelectedQuality).getUrl());\n\n        if (!mMagnet.canOpen()) {\n            mOpenMagnet.setVisibility(View.GONE);\n        } else {\n            mOpenMagnet.setVisibility(View.VISIBLE);\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44150, "method_name": "readMoreClick", "class_name": "EpisodeDialogFragment", "params": ["View"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void readMoreClick(View v) {\n        if (getFragmentManager().findFragmentByTag(\"overlay_fragment\") != null)\n            return;\n        SynopsisDialogFragment synopsisDialogFragment = new SynopsisDialogFragment();\n        Bundle b = new Bundle();\n        b.putString(\"text\", mEpisode.overview);\n        synopsisDialogFragment.setArguments(b);\n        synopsisDialogFragment.show(getFragmentManager(), \"overlay_fragment\");\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44151, "method_name": "playClick", "class_name": "EpisodeDialogFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void playClick() {\n        smoothDismiss();\n        Media.Torrent torrent = mEpisode.torrents.get(mSelectedQuality);\n        StreamInfo streamInfo = new StreamInfo(mEpisode, mShow, torrent.getUrl(), mSelectedSubtitleLanguage, mSelectedQuality);\n        ((MediaDetailActivity) getActivity()).playStream(streamInfo);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44152, "method_name": "openMagnet", "class_name": "EpisodeDialogFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void openMagnet() {\n        mMagnet.open(mActivity);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44153, "method_name": "outsideClick", "class_name": "EpisodeDialogFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void outsideClick() {\n        smoothDismiss();\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44154, "method_name": "onSubtitleLanguageSelected", "class_name": "EpisodeDialogFragment", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void onSubtitleLanguageSelected(String language) {\n        mSelectedSubtitleLanguage = language;\n        if (!language.equals(\"no-subs\")) {\n            final Locale locale = LocaleUtils.toLocale(language);\n            ThreadUtils.runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    mSubtitles.setText(StringUtils.uppercaseFirst(locale.getDisplayName(locale)));\n                }\n            });\n        } else {\n            ThreadUtils.runOnUiThread(new Runnable() {\n                @Override\n                public void run() {\n                    mSubtitles.setText(R.string.no_subs);\n                }\n            });\n        }\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/dialog/EpisodeDialogFragment.java", "stars": "4", "class_props": {"extends": "DialogFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44155, "method_name": "getValue", "class_name": "ListValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getValue()\n    {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/ListValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44156, "method_name": "setValue", "class_name": "ListValue", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue( String value )\n    {\n        this.value = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/ListValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44157, "method_name": "getTitle", "class_name": "ListValue", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle()\n    {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/ListValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44158, "method_name": "setTitle", "class_name": "ListValue", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle( String title )\n    {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/process/ListValue.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44159, "method_name": "setNonNullParameter", "class_name": "UUIDTypeHandler", "params": ["PreparedStatement", "int", "UUID", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, UUID parameter, JdbcType jdbcType) throws SQLException {\n    ps.setString(i, parameter.toString());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/uuid_test/UUIDTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44160, "method_name": "getNullableResult", "class_name": "UUIDTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "UUID", "snippet": "  public UUID getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    String value = rs.getString(columnName);\n    if (value != null) {\n      return UUID.fromString(value);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/uuid_test/UUIDTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44161, "method_name": "getNullableResult", "class_name": "UUIDTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "UUID", "snippet": "  public UUID getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    String value = rs.getString(columnIndex);\n    if (value != null) {\n      return UUID.fromString(value);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/uuid_test/UUIDTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44162, "method_name": "getNullableResult", "class_name": "UUIDTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "UUID", "snippet": "  public UUID getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    String value = cs.getString(columnIndex);\n    if (value != null) {\n      return UUID.fromString(value);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/uuid_test/UUIDTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44163, "method_name": "getCrimeRepository", "class_name": "PyDeferredTaskDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CrimeRepository", "snippet": "    public CrimeRepository getCrimeRepository() {\n        return crimeRepository;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/dto/PyDeferredTaskDto.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44164, "method_name": "getDeferredResult", "class_name": "PyDeferredTaskDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DeferredResult", "snippet": "    public DeferredResult getDeferredResult() {\n        return deferredResult;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/dto/PyDeferredTaskDto.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44165, "method_name": "getContent", "class_name": "PyDeferredTaskDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getContent() {\n        return content;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/dto/PyDeferredTaskDto.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44166, "method_name": "getCrimeAnalyzedRepository", "class_name": "PyDeferredTaskDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CrimeAnalyzedRepository", "snippet": "    public CrimeAnalyzedRepository getCrimeAnalyzedRepository() {\n        return crimeAnalyzedRepository;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/dto/PyDeferredTaskDto.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44167, "method_name": "getProperty", "class_name": "PyDeferredTaskDto", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ConfigProperty", "snippet": "    public ConfigProperty getProperty() {\n        return property;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-consumer/src/main/java/com/changwu/dto/PyDeferredTaskDto.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44168, "method_name": "getCount", "class_name": "AreaArrayAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCount(){\n        return this.list.size();\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/AreaArrayAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44169, "method_name": "getItem", "class_name": "AreaArrayAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "    public Object getItem(int position) {\n        return this.list.get(position);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/AreaArrayAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44170, "method_name": "getItemId", "class_name": "AreaArrayAdapter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getItemId(int position) {\n        return 0;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/AreaArrayAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44171, "method_name": "getView", "class_name": "AreaArrayAdapter", "params": ["int", "View", "ViewGroup"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView(int position, View convertView, ViewGroup parent){\n        View row = convertView;\n        if(row == null){\n            LayoutInflater inflater = getLayoutInflater();\n            row = inflater.inflate(this.resource, parent, false);\n        }\n\n        Area area = (Area) this.list.get(position);\n        areaNameView = (TextView) row.findViewById(R.id.area_list_item_name);\n        areaNameView.setText(area.Name);\n        return row;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/AreaArrayAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44172, "method_name": "getLayoutInflater", "class_name": "AreaArrayAdapter", "params": [], "throws": null, "modifiers": ["private"], "return_type": "LayoutInflater", "snippet": "    private LayoutInflater getLayoutInflater(){\n        return (LayoutInflater)this.context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/adapters/AreaArrayAdapter.java", "stars": "9", "class_props": {"extends": "BaseAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44173, "method_name": "reset", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n        resetStatus = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44174, "method_name": "halt", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void halt() {\n        haltStatus = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44175, "method_name": "nmi", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void nmi() {\n        nmiStatus = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44176, "method_name": "irq", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void irq() {\n        irqStatus = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44177, "method_name": "load8_dir", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte load8_dir(byte address) {\n        return m.load8(address & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44178, "method_name": "load8_ext", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte load8_ext(short address) {\n        return m.load8(address & 0xffff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44179, "method_name": "load8_ind", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte load8_ind(byte offset) {\n        return m.load8((IX & 0xffff) + (offset & 0xff));\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44180, "method_name": "store8_ind", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void store8_ind(byte offset, byte value) {\n        m.store8((IX & 0xffff) + (offset & 0xff), value);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44181, "method_name": "store8_ext", "class_name": "MB8861", "params": ["short", "byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void store8_ext(short address, byte value) {\n        m.store8(address & 0xffff, value);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44182, "method_name": "load16_dir", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "short", "snippet": "    private short load16_dir(byte address) {\n        return m.load16(address & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44183, "method_name": "load16_ext", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "short", "snippet": "    private short load16_ext(short address) {\n        return m.load16(address & 0xffff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44184, "method_name": "load16_ind", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "short", "snippet": "    private short load16_ind(byte offset) {\n        return m.load16((IX & 0xffff) + (offset & 0xff));\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44185, "method_name": "store16_ext", "class_name": "MB8861", "params": ["short", "short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void store16_ext(short address, short value) {\n        m.store16(address & 0xffff, value);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44186, "method_name": "add", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte add(byte x, byte y) {\n        int t = (x & 0xff) + (y & 0xff);\n        byte tt = (byte) t;\n        CH = ((x & 0x0f) + (y & 0x0f)) > 0x0f;\n        CN = tt < 0;\n        CZ = tt == 0;\n        CV = (x > 0) & (y > 0) & CN || (x < 0) & (y < 0) & !CN;\n        CC = (t & 0x100) != 0;\n        return tt;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44187, "method_name": "add16", "class_name": "MB8861", "params": ["short", "short"], "throws": null, "modifiers": ["private"], "return_type": "short", "snippet": "    private short add16(short x, short y) {\n        int t = (x & 0xffff) + (y & 0xffff);\n        short tt = (short) t;\n        // \u3053\u306e\u95a2\u6570(ADX\u547d\u4ee4\u306b\u5bfe\u5fdc)\u306e\u30d5\u30e9\u30b0\u5909\u5316\u306f\u4e88\u60f3\u306b\u3088\u308b\u3002\n        // CH = ???;\n        CN = tt < 0;\n        CZ = tt == 0;\n        CV = (x > 0) & (y > 0) & CN || (x < 0) & (y < 0) & !CN;\n        CC = (t & 0x10000) != 0;\n        return tt;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44188, "method_name": "adc", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte adc(byte x, byte y) {\n        int t = (x & 0xff) + (y & 0xff) + (CC ? 1 : 0);\n        byte tt = (byte) t;\n        CH = ((x & 0x0f) + (y & 0x0f)) > 0x0f;\n        CN = tt < 0;\n        CZ = tt == 0;\n        CV = (x > 0) & (y > 0) & CN || (x < 0) & (y < 0) & !CN;\n        CC = (t & 0x100) != 0;\n        return tt;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44189, "method_name": "and", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte and(byte x, byte y) {\n        int t = x & y;\n        CN = (t & 0x80) != 0;\n        CZ = t == 0;\n        CV = false;\n        return (byte) (t & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44190, "method_name": "nim", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte nim(byte x, byte y) {\n        int t = x & y;\n        CZ = t == 0;\n        CN = !CZ;\n        CV = false;\n        return (byte) (t & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44191, "method_name": "asl", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte asl(byte x) {\n        int t = ((x & 0xff) << 1);\n        CN = (byte) t < 0;\n        CZ = (byte) t == 0;\n        CC = t > 0xff;\n        CV = CN != CC;\n        return (byte) (t & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44192, "method_name": "asr", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte asr(byte x) {\n        int t = ((x & 0xff) >> 1) | (x & 0x80);\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CC = (x & 0x01) != 0;\n        CV = CN != CC;\n        return (byte) (t & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44193, "method_name": "bit", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bit(byte x, byte y) {\n        int t = x & y;\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44194, "method_name": "tmm", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tmm(byte x, byte y) {\n        if (x == 0 | y == 0) {\n            CN = false;\n            CZ = true;\n            CV = false;\n        }\n        else if (y == (byte) 0xff) {\n            CN = false;\n            CZ = false;\n            CV = true;\n        }\n        else {\n            CN = true;\n            CZ = false;\n            CV = false;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44195, "method_name": "cmp", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cmp(byte x, byte y) {\n        int t = (x & 0xff) - (y & 0xff);\n        byte tt = (byte) (t);\n        CN = tt < 0;\n        CZ = tt == 0;\n        CV = (x > 0) & (y < 0) & CN || (x < 0) & (y > 0) & !CN;\n        CC = (t & 0x100) != 0;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44196, "method_name": "clr", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte clr() {\n        CN = false;\n        CZ = true;\n        CV = false;\n        CC = false;\n        return 0x00;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44197, "method_name": "com", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte com(byte x) {\n        byte t = (byte) (0xff - (x & 0xff));\n        CN = t < 0;\n        CZ = t == 0;\n        CV = false;\n        CC = true;\n        return t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44198, "method_name": "daa", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void daa() {\n        int t = A & 0xff;\n\n        if ((t & 0x0f) >= 0x0a || CH) {\n            t += 0x06;\n        }\n        if ((t & 0xf0) >= 0xa0) {\n            t += 0x60;\n        }\n        byte tt = (byte) t;\n\n        CN = tt < 0;\n        CZ = tt == 0;\n        CV = (A > 0) & CN || (A < 0) & !CN;\n        CC = ((A & 0xf0) >= 0xa0) || CC;\n        A = tt;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44199, "method_name": "dec", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte dec(byte x) {\n        int t = (x - 1) & 0xff;\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CV = x == (byte) 0x80;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44200, "method_name": "eor", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte eor(byte x, byte y) {\n        int t = (x & 0xff) ^ (y & 0xff);\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CV = false;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44201, "method_name": "xim", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte xim(byte x, byte y) {\n        int t = x ^ y;\n        CZ = t == 0;\n        CN = !CZ;\n        return (byte) (t & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44202, "method_name": "inc", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte inc(byte x) {\n        int t = (x + 1) & 0xff;\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CV = x == (byte) 0x7f;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44203, "method_name": "lda", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte lda(byte x) {\n        CN = x < 0;\n        CZ = x == 0;\n        CV = false;\n        return x;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44204, "method_name": "lsr", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte lsr(byte x) {\n        int t = (x & 0xff) >> 1;\n        CN = false;\n        CZ = t == 0;\n        CC = (x & 0x1) != 0;\n        CV = CN != CC;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44205, "method_name": "neg", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte neg(byte x) {\n        int t = 0 - (x & 0xff);\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CV = (byte) t == 0x80;\n        CC = (byte) t == 0x00;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44206, "method_name": "ora", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte ora(byte x, byte y) {\n        int t = x | y;\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CV = false;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44207, "method_name": "oim", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["public"], "return_type": "byte", "snippet": "    public byte oim(byte x, byte y) {\n        int t = x | y;\n        CZ = t == 0;\n        CN = !CZ;\n        CV = false;\n        return (byte) (t & 0xff);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44208, "method_name": "psh", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void psh(byte x) {\n        store8_ext(SP, x);\n        SP--;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44209, "method_name": "pul", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte pul() {\n        SP++;\n        return load8_ext(SP);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44210, "method_name": "rol", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte rol(byte x) {\n        int t = (x & 0xff) << 1;\n        t |= CC ? 0x01 : 0;\n        CN = (byte) t < 0;\n        CZ = t == 0;\n        CC = t > 0xff;\n        CV = CN != CC;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44211, "method_name": "ror", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte ror(byte x) {\n        int t = (x & 0xff) >> 1;\n        t |= CC ? 0x80 : 0;\n        CN = (byte) t < 0;\n        CZ = (byte) t == 0;\n        CC = (x & 0x01) != 0;\n        CV = CN != CC;\n        return (byte) t;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44212, "method_name": "sta", "class_name": "MB8861", "params": ["short", "byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sta(short a, byte x) {\n        CN = x < 0;\n        CZ = x == 0;\n        CV = false;\n        store8_ext(a, x);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44213, "method_name": "sub", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte sub(byte x, byte y) {\n        int t = (x & 0xff) - (y & 0xff);\n        byte tt = (byte) t;\n        CN = tt < 0;\n        CZ = tt == 0;\n        CV = (x > 0) & (y < 0) & CN || (x < 0) & (y > 0) & !CN;\n        CC = (t & 0x100) != 0;\n        return tt;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44214, "method_name": "sbc", "class_name": "MB8861", "params": ["byte", "byte"], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte sbc(byte x, byte y) {\n        int t = (x & 0xff) - (y & 0xff) - (CC ? 0x01 : 0x00);\n        byte tt = (byte) t;\n        CN = tt < 0;\n        CZ = tt == 0;\n        CV = (x > 0) & (y < 0) & CN || (x < 0) & (y > 0) & !CN;\n        CC = (t & 0x100) != 0;\n        return tt;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44215, "method_name": "tab", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tab() {\n        B = A;\n        CN = B < 0;\n        CZ = B == 0;\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44216, "method_name": "tba", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tba() {\n        A = B;\n        CN = A < 0;\n        CZ = A == 0;\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44217, "method_name": "tst", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tst(byte x) {\n        CN = x < 0;\n        CZ = x == 0;\n        CV = false;\n        CC = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44218, "method_name": "cpx", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cpx(short x) {\n        int t = (IX & 0xffff) - (x & 0xffff);\n        CN = (short) t < 0;\n        CZ = (short) t == 0;\n        CV = (IX > 0) & (x < 0) & CN || (IX < 0) & (x > 0) & !CN;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44219, "method_name": "dex", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void dex() {\n        IX--;\n        CZ = IX == 0;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44220, "method_name": "des", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void des() {\n        SP--;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44221, "method_name": "inx", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void inx() {\n        IX++;\n        CZ = IX == 0;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44222, "method_name": "ins", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void ins() {\n        SP++;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44223, "method_name": "ldx", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void ldx(short a) {\n        IX = a;\n        CN = IX < 0;\n        CZ = IX == 0;\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44224, "method_name": "lds", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void lds(short a) {\n        SP = a;\n        CN = (short) SP < 0;\n        CZ = (short) SP == 0;\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44225, "method_name": "stx", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void stx(short a) {\n        store16_ext(a, IX);\n        CN = IX < 0;\n        CZ = IX == 0;\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44226, "method_name": "sts", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sts(short a) {\n        store16_ext(a, SP);\n        CN = IX < 0;\n        CZ = IX == 0;\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44227, "method_name": "txs", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void txs() {\n        SP = (short) (IX - 1);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44228, "method_name": "tsx", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tsx() {\n        IX = (short) (SP + 1);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44229, "method_name": "branch", "class_name": "MB8861", "params": ["byte", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void branch(byte offset, boolean condition) {\n        if (condition) {\n            PC = (short) (PC + offset);\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44230, "method_name": "bsr", "class_name": "MB8861", "params": ["byte"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bsr(byte offset) {\n        SP = (short) (SP - 2);\n        store16_ext((short) (SP + 1), PC);\n        PC = (short) (PC + offset);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44231, "method_name": "jump", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jump(short a) {\n        PC = a;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44232, "method_name": "jsr", "class_name": "MB8861", "params": ["short"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void jsr(short a) {\n        SP = (short) (SP - 2);\n        store16_ext((short) (SP + 1), PC);\n        PC = a;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44233, "method_name": "nop", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void nop() {\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44234, "method_name": "pushAllRegisters", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void pushAllRegisters() {\n        int ccr = 0xc0;\n        if (CH) {\n            ccr |= 0x20;\n        }\n        if (CI) {\n            ccr |= 0x10;\n        }\n        if (CN) {\n            ccr |= 0x08;\n        }\n        if (CZ) {\n            ccr |= 0x04;\n        }\n        if (CV) {\n            ccr |= 0x02;\n        }\n        if (CC) {\n            ccr |= 0x01;\n        }\n        store16_ext((short) (SP - 1), PC);\n        store16_ext((short) (SP - 3), IX);\n        store8_ext((short) (SP - 4), A);\n        store8_ext((short) (SP - 5), B);\n        store8_ext((short) (SP - 6), (byte) ccr);\n        SP = (short) (SP - 7);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44235, "method_name": "popAllRegisters", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void popAllRegisters() {\n        SP = (short) (SP + 7);\n        int ccr = (int) load8_ext((short) (SP - 6));\n        CH = (ccr & 0x20) != 0;\n        CI = (ccr & 0x10) != 0;\n        CN = (ccr & 0x08) != 0;\n        CZ = (ccr & 0x04) != 0;\n        CV = (ccr & 0x02) != 0;\n        CC = (ccr & 0x01) != 0;\n        B = load8_ext((short) (SP - 5));\n        A = load8_ext((short) (SP - 4));\n        IX = load16_ext((short) (SP - 3));\n        PC = load16_ext((short) (SP - 1));\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44236, "method_name": "rti", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void rti() {\n        popAllRegisters();\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44237, "method_name": "rts", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void rts() {\n        SP = (short) (SP + 2);\n        PC = load16_ext((short) (SP - 1));\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44238, "method_name": "swi", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void swi() {\n        PC = (short) (PC + 1);\n        pushAllRegisters();\n        CI = true;\n        PC = load16_ext(VECTOR_SWI);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44239, "method_name": "wai", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void wai() {\n        fetchWai = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44240, "method_name": "clc", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clc() {\n        CC = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44241, "method_name": "cli", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void cli() {\n        CI = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44242, "method_name": "clv", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void clv() {\n        CV = false;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44243, "method_name": "sec", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sec() {\n        CC = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44244, "method_name": "sei", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sei() {\n        CI = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44245, "method_name": "sev", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void sev() {\n        CV = true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44246, "method_name": "tap", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tap() {\n        CH = (A & 0x20) != 0;\n        CI = (A & 0x10) != 0;\n        CN = (A & 0x08) != 0;\n        CZ = (A & 0x04) != 0;\n        CV = (A & 0x02) != 0;\n        CC = (A & 0x01) != 0;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44247, "method_name": "tpa", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void tpa() {\n        A = (byte) 0xc0;\n        if (CH) {\n            A |= 0x20;\n        }\n        if (CI) {\n            A |= 0x10;\n        }\n        if (CN) {\n            A |= 0x08;\n        }\n        if (CZ) {\n            A |= 0x04;\n        }\n        if (CV) {\n            A |= 0x02;\n        }\n        if (CC) {\n            A |= 0x01;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44248, "method_name": "fetchOp", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte fetchOp() {\n        return load8_ext(PC++);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44249, "method_name": "fetchOperand1", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "byte", "snippet": "    private byte fetchOperand1() {\n        return load8_ext(PC++);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44250, "method_name": "fetchOperand2", "class_name": "MB8861", "params": [], "throws": null, "modifiers": ["private"], "return_type": "short", "snippet": "    private short fetchOperand2() {\n        int op1 = fetchOperand1() & 0xff;\n        int op2 = fetchOperand1() & 0xff;\n        return (short) ((op1 << 8) + op2);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44251, "method_name": "execute", "class_name": "MB8861", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long execute(long clocks) {\n        long initial_clock;\n\n        initial_clock = computer.clockCount;\n        while (computer.clockCount < initial_clock + clocks) {\n            byte offset;\n            byte value;\n            short addr;\n            if (resetStatus) {\n                resetStatus = false;\n                fetchWai = false;\n                PC = load16_ext(VECTOR_RESTART);\n                computer.clockCount = 0;\n                return 0;\n            }\n            if (haltStatus) {\n                haltProcessed = true;\n                continue;\n            }\n            if (haltProcessed) {\n                haltProcessed = false;\n            }\n            else {\n                if (fetchWai) {\n                    if (nmiStatus) {\n                        nmiStatus = false;\n                        fetchWai = false;\n                        pushAllRegisters();\n                        PC = m.load16(VECTOR_NMI);\n                        computer.clockCount += 12;\n                    }\n                    if (irqStatus && !CI) {\n                        irqStatus = false;\n                        fetchWai = false;\n                        pushAllRegisters();\n                        PC = m.load16(VECTOR_IRQ);\n                        computer.clockCount += 12;\n                    }\n                    computer.clockCount++;\n                    continue;\n                }\n                else {\n                    if (nmiStatus) {\n                        nmiStatus = false;\n                        pushAllRegisters();\n                        PC = m.load16(VECTOR_NMI);\n                        computer.clockCount += 12;\n                        continue;\n                    }\n                    if (irqStatus && !CI) {\n                        irqStatus = false;\n                        pushAllRegisters();\n                        PC = m.load16(VECTOR_IRQ);\n                        computer.clockCount += 12;\n                        continue;\n                    }\n                }\n            }\n\n            switch (fetchOp()) {\n            case OP_ABA_IMP:\n                A = add(A, B);\n                computer.clockCount += 2;\n                break;\n            case OP_ADDA_IMM:\n                A = add(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ADDA_DIR:\n                A = add(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ADDA_IND:\n                A = add(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ADDA_EXT:\n                A = add(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_ADDB_IMM:\n                B = add(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ADDB_DIR:\n                B = add(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ADDB_IND:\n                B = add(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ADDB_EXT:\n                B = add(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_ADCA_IMM:\n                A = adc(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ADCA_DIR:\n                A = adc(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ADCA_IND:\n                A = adc(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ADCA_EXT:\n                A = adc(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_ADCB_IMM:\n                B = adc(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ADCB_DIR:\n                B = adc(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ADCB_IND:\n                B = adc(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ADCB_EXT:\n                B = adc(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_ANDA_IMM:\n                A = and(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ANDA_DIR:\n                A = and(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ANDA_IND:\n                A = and(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ANDA_EXT:\n                A = and(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_ANDB_IMM:\n                B = and(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ANDB_DIR:\n                B = and(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ANDB_IND:\n                B = and(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ANDB_EXT:\n                B = and(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_ASLA_IMP:\n                A = asl(A);\n                computer.clockCount += 2;\n                break;\n            case OP_ASLB_IMP:\n                B = asl(B);\n                computer.clockCount += 2;\n                break;\n            case OP_ASRA_IMP:\n                A = asr(A);\n                computer.clockCount += 2;\n                break;\n            case OP_ASRB_IMP:\n                B = asr(B);\n                computer.clockCount += 2;\n                break;\n            case OP_BITA_IMM:\n                bit(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_BITA_DIR:\n                bit(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_BITA_IND:\n                bit(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_BITA_EXT:\n                bit(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_BITB_IMM:\n                bit(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_BITB_DIR:\n                bit(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_BITB_IND:\n                bit(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_BITB_EXT:\n                bit(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_CBA_IMP:\n                cmp(A, B);\n                computer.clockCount += 2;\n                break;\n            case OP_CLRA_IMP:\n                A = clr();\n                computer.clockCount += 2;\n                break;\n            case OP_CLRB_IMP:\n                B = clr();\n                computer.clockCount += 2;\n                break;\n            case OP_CMPA_IMM:\n                cmp(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_CMPA_DIR:\n                cmp(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_CMPA_IND:\n                cmp(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_CMPA_EXT:\n                cmp(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_CMPB_IMM:\n                cmp(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_CMPB_DIR:\n                cmp(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_CMPB_IND:\n                cmp(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_CMPB_EXT:\n                cmp(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_COMA_IMP:\n                A = com(A);\n                computer.clockCount += 2;\n                break;\n            case OP_COMB_IMP:\n                B = com(B);\n                computer.clockCount += 2;\n                break;\n            case OP_DAA_IMP:\n                daa();\n                computer.clockCount += 2;\n                break;\n            case OP_DECA_IMP:\n                A = dec(A);\n                computer.clockCount += 2;\n                break;\n            case OP_DECB_IMP:\n                B = dec(B);\n                computer.clockCount += 2;\n                break;\n            case OP_EORA_IMM:\n                A = eor(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_EORA_DIR:\n                A = eor(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_EORA_IND:\n                A = eor(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_EORA_EXT:\n                A = eor(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_EORB_IMM:\n                B = eor(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_EORB_DIR:\n                B = eor(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_EORB_IND:\n                B = eor(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_EORB_EXT:\n                B = eor(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_INCA_IMP:\n                A = inc(A);\n                computer.clockCount += 2;\n                break;\n            case OP_INCB_IMP:\n                B = inc(B);\n                computer.clockCount += 2;\n                break;\n            case OP_LDAA_IMM:\n                A = lda(fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_LDAA_DIR:\n                A = lda(load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_LDAA_IND:\n                A = lda(load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_LDAA_EXT:\n                A = lda(load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_LDAB_IMM:\n                B = lda(fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_LDAB_DIR:\n                B = lda(load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_LDAB_IND:\n                B = lda(load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_LDAB_EXT:\n                B = lda(load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_LSRA_IMP:\n                A = lsr(A);\n                computer.clockCount += 2;\n                break;\n            case OP_LSRB_IMP:\n                B = lsr(B);\n                computer.clockCount += 2;\n                break;\n            case OP_NEGA_IMP:\n                A = neg(A);\n                computer.clockCount += 2;\n                break;\n            case OP_NEGB_IMP:\n                B = neg(B);\n                computer.clockCount += 2;\n                break;\n            case OP_ORAA_IMM:\n                A = ora(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ORAA_DIR:\n                A = ora(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ORAA_IND:\n                A = ora(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ORAA_EXT:\n                A = ora(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_ORAB_IMM:\n                B = ora(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_ORAB_DIR:\n                B = ora(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_ORAB_IND:\n                B = ora(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_ORAB_EXT:\n                B = add(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_PSHA_IMP:\n                psh(A);\n                computer.clockCount += 4;\n                break;\n            case OP_PSHB_IMP:\n                psh(B);\n                computer.clockCount += 4;\n                break;\n            case OP_PULA_IMP:\n                A = pul();\n                computer.clockCount += 4;\n                break;\n            case OP_PULB_IMP:\n                B = pul();\n                computer.clockCount += 4;\n                break;\n            case OP_ROLA_IMP:\n                A = rol(A);\n                computer.clockCount += 2;\n                break;\n            case OP_ROLB_IMP:\n                B = rol(B);\n                computer.clockCount += 2;\n                break;\n            case OP_RORA_IMP:\n                A = ror(A);\n                computer.clockCount += 2;\n                break;\n            case OP_RORB_IMP:\n                B = ror(B);\n                computer.clockCount += 2;\n                break;\n            case OP_STAA_DIR:\n                sta((short) (fetchOperand1() & 0xff), A);\n                computer.clockCount += 4;\n                break;\n            case OP_STAA_IND:\n                sta((short) ((IX & 0xffff) + (fetchOperand1() & 0xff)), A);\n                computer.clockCount += 6;\n                break;\n            case OP_STAA_EXT:\n                sta(fetchOperand2(), A);\n                computer.clockCount += 5;\n                break;\n            case OP_STAB_DIR:\n                sta((short) (fetchOperand1() & 0xff), B);\n                computer.clockCount += 4;\n                break;\n            case OP_STAB_IND:\n                sta((short) ((IX & 0xffff) + (fetchOperand1() & 0xff)), B);\n                computer.clockCount += 6;\n                break;\n            case OP_STAB_EXT:\n                sta(fetchOperand2(), B);\n                computer.clockCount += 5;\n                break;\n            case OP_SBA_IMP:\n                A = sub(A, B);\n                computer.clockCount += 2;\n                break;\n            case OP_SUBA_IMM:\n                A = sub(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_SUBA_DIR:\n                A = sub(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_SUBA_IND:\n                A = sub(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_SUBA_EXT:\n                A = sub(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_SUBB_IMM:\n                B = sub(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_SUBB_DIR:\n                B = sub(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_SUBB_IND:\n                B = sub(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_SUBB_EXT:\n                B = sub(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_SBCA_IMM:\n                A = sbc(A, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_SBCA_DIR:\n                A = sbc(A, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_SBCA_IND:\n                A = sbc(A, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_SBCA_EXT:\n                A = sbc(A, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_SBCB_IMM:\n                B = sbc(B, fetchOperand1());\n                computer.clockCount += 2;\n                break;\n            case OP_SBCB_DIR:\n                B = sbc(B, load8_dir(fetchOperand1()));\n                computer.clockCount += 3;\n                break;\n            case OP_SBCB_IND:\n                B = sbc(B, load8_ind(fetchOperand1()));\n                computer.clockCount += 5;\n                break;\n            case OP_SBCB_EXT:\n                B = sbc(B, load8_ext(fetchOperand2()));\n                computer.clockCount += 4;\n                break;\n            case OP_TAB_IMP:\n                tab();\n                computer.clockCount += 2;\n                break;\n            case OP_TBA_IMP:\n                tba();\n                computer.clockCount += 2;\n                break;\n            case OP_TSTA_IMP:\n                tst(A);\n                computer.clockCount += 2;\n                break;\n            case OP_TSTB_IMP:\n                tst(B);\n                computer.clockCount += 2;\n                break;\n            case OP_CPX_IMM:\n                cpx(fetchOperand2());\n                computer.clockCount += 3;\n                break;\n            case OP_CPX_DIR:\n                cpx(load16_dir(fetchOperand1()));\n                computer.clockCount += 4;\n                break;\n            case OP_CPX_IND:\n                cpx(load16_ind(fetchOperand1()));\n                computer.clockCount += 6;\n                break;\n            case OP_CPX_EXT:\n                cpx(load16_ext(fetchOperand2()));\n                computer.clockCount += 5;\n                break;\n            case OP_DEX_IMP:\n                dex();\n                computer.clockCount += 4;\n                break;\n            case OP_DES_IMP:\n                des();\n                computer.clockCount += 4;\n                break;\n            case OP_INX_IMP:\n                inx();\n                computer.clockCount += 4;\n                break;\n            case OP_INS_IMP:\n                ins();\n                computer.clockCount += 4;\n                break;\n            case OP_LDX_IMM:\n                ldx(fetchOperand2());\n                computer.clockCount += 3;\n                break;\n            case OP_LDX_DIR:\n                ldx(load16_dir(fetchOperand1()));\n                computer.clockCount += 4;\n                break;\n            case OP_LDX_IND:\n                ldx(load16_ind(fetchOperand1()));\n                computer.clockCount += 6;\n                break;\n            case OP_LDX_EXT:\n                ldx(load16_ext(fetchOperand2()));\n                computer.clockCount += 5;\n                break;\n            case OP_LDS_IMM:\n                lds(fetchOperand2());\n                computer.clockCount += 3;\n                break;\n            case OP_LDS_DIR:\n                lds(load16_dir(fetchOperand1()));\n                computer.clockCount += 4;\n                break;\n            case OP_LDS_IND:\n                lds(load16_ind(fetchOperand1()));\n                computer.clockCount += 6;\n                break;\n            case OP_LDS_EXT:\n                lds(load16_ext(fetchOperand2()));\n                computer.clockCount += 5;\n                break;\n            case OP_STX_DIR:\n                stx((short) (fetchOperand1() & 0xff));\n                computer.clockCount += 5;\n                break;\n            case OP_STX_IND:\n                stx((short) ((IX & 0xffff) + (fetchOperand1() & 0xff)));\n                computer.clockCount += 7;\n                break;\n            case OP_STX_EXT:\n                stx(fetchOperand2());\n                computer.clockCount += 6;\n                break;\n            case OP_STS_DIR:\n                sts((short) (fetchOperand1() & 0xff));\n                computer.clockCount += 5;\n                break;\n            case OP_STS_IND:\n                sts((short) ((IX & 0xffff) + (fetchOperand1() & 0xff)));\n                computer.clockCount += 7;\n                break;\n            case OP_STS_EXT:\n                sts(fetchOperand2());\n                computer.clockCount += 6;\n                break;\n            case OP_TXS_IMP:\n                txs();\n                computer.clockCount += 4;\n                break;\n            case OP_TSX_IMP:\n                tsx();\n                computer.clockCount += 4;\n                break;\n            case OP_ASL_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, asl(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_ASL_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, asl(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_ASR_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, asr(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_ASR_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, asr(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_CLR_IND:\n                store8_ind(fetchOperand1(), clr());\n                computer.clockCount += 7;\n                break;\n            case OP_CLR_EXT:\n                store8_ext(fetchOperand2(), clr());\n                computer.clockCount += 6;\n                break;\n            case OP_COM_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, com(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_COM_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, com(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_DEC_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, dec(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_DEC_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, dec(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_INC_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, inc(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_INC_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, inc(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_LSR_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, lsr(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_LSR_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, lsr(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_NEG_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, neg(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_NEG_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, neg(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_ROL_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, rol(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_ROL_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, rol(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_ROR_IND:\n                offset = fetchOperand1();\n                store8_ind(offset, ror(load8_ind(offset)));\n                computer.clockCount += 7;\n                break;\n            case OP_ROR_EXT:\n                addr = fetchOperand2();\n                store8_ext(addr, ror(load8_ext(addr)));\n                computer.clockCount += 6;\n                break;\n            case OP_TST_IND:\n                tst(load8_ind(fetchOperand1()));\n                computer.clockCount += 7;\n                break;\n            case OP_TST_EXT:\n                tst(load8_ext(fetchOperand2()));\n                computer.clockCount += 6;\n                break;\n            case OP_BRA_REL:\n                branch(fetchOperand1(), true);\n                computer.clockCount += 4;\n                break;\n            case OP_BCC_REL:\n                branch(fetchOperand1(), !CC);\n                computer.clockCount += 4;\n                break;\n            case OP_BCS_REL:\n                branch(fetchOperand1(), CC);\n                computer.clockCount += 4;\n                break;\n            case OP_BEQ_REL:\n                branch(fetchOperand1(), CZ);\n                computer.clockCount += 4;\n                break;\n            case OP_BGE_REL:\n                branch(fetchOperand1(), !(CN ^ CV));\n                computer.clockCount += 4;\n                break;\n            case OP_BGT_REL:\n                branch(fetchOperand1(), !(CZ | (CN ^ CV)));\n                computer.clockCount += 4;\n                break;\n            case OP_BHI_REL:\n                branch(fetchOperand1(), !(CC | CZ));\n                computer.clockCount += 4;\n                break;\n            case OP_BLE_REL:\n                branch(fetchOperand1(), CZ | (CN ^ CV));\n                computer.clockCount += 4;\n                break;\n            case OP_BLS_REL:\n                branch(fetchOperand1(), CC | CZ);\n                computer.clockCount += 4;\n                break;\n            case OP_BLT_REL:\n                branch(fetchOperand1(), CN ^ CV);\n                computer.clockCount += 4;\n                break;\n            case OP_BMI_REL:\n                branch(fetchOperand1(), CN);\n                computer.clockCount += 4;\n                break;\n            case OP_BNE_REL:\n                branch(fetchOperand1(), !CZ);\n                computer.clockCount += 4;\n                break;\n            case OP_BVC_REL:\n                branch(fetchOperand1(), !CV);\n                computer.clockCount += 4;\n                break;\n            case OP_BVS_REL:\n                branch(fetchOperand1(), CV);\n                computer.clockCount += 4;\n                break;\n            case OP_BPL_REL:\n                branch(fetchOperand1(), !CN);\n                computer.clockCount += 4;\n                break;\n            case OP_BSR_REL:\n                bsr(fetchOperand1());\n                computer.clockCount += 8;\n                break;\n            case OP_JMP_IND:\n                jump((short) ((IX & 0xffff) + (fetchOperand1() & 0xff)));\n                computer.clockCount += 4;\n                break;\n            case OP_JMP_EXT:\n                jump(fetchOperand2());\n                computer.clockCount += 3;\n                break;\n            case OP_JSR_IND:\n                jsr((short) ((IX & 0xffff) + (fetchOperand1() & 0xff)));\n                computer.clockCount += 8;\n                break;\n            case OP_JSR_EXT:\n                jsr(fetchOperand2());\n                computer.clockCount += 9;\n                break;\n            case OP_NOP_IMP:\n                computer.clockCount += 2;\n                break;\n            case OP_RTI_IMP:\n                rti();\n                computer.clockCount += 10;\n                break;\n            case OP_RTS_IMP:\n                rts();\n                computer.clockCount += 5;\n                break;\n            case OP_SWI_IMP:\n                swi();\n                computer.clockCount += 12;\n                break;\n            case OP_WAI_IMP:\n                wai();\n                computer.clockCount += 9;\n                break;\n            case OP_CLC_IMP:\n                clc();\n                computer.clockCount += 2;\n                break;\n            case OP_CLI_IMP:\n                cli();\n                computer.clockCount += 2;\n                break;\n            case OP_CLV_IMP:\n                clv();\n                computer.clockCount += 2;\n                break;\n            case OP_SEC_IMP:\n                sec();\n                computer.clockCount += 2;\n                break;\n            case OP_SEI_IMP:\n                sei();\n                computer.clockCount += 2;\n                break;\n            case OP_SEV_IMP:\n                sev();\n                computer.clockCount += 2;\n                break;\n            case OP_TAP_IMP:\n                tap();\n                computer.clockCount += 2;\n                break;\n            case OP_TPA_IMP:\n                tpa();\n                computer.clockCount += 2;\n                break;\n            // \u4ee5\u4e0bMB8861\u306e\u62e1\u5f35\u547d\u4ee4\n            case OP_NIM_IND:\n                value = fetchOperand1();\n                offset = fetchOperand1();\n                store8_ind(offset, nim(value, load8_ind(offset)));\n                computer.clockCount += 8;\n                break;\n            case OP_OIM_IND:\n                value = fetchOperand1();\n                offset = fetchOperand1();\n                store8_ind(offset, oim(value, load8_ind(offset)));\n                computer.clockCount += 8;\n                break;\n            case OP_XIM_IND:\n                value = fetchOperand1();\n                offset = fetchOperand1();\n                store8_ind(offset, xim(value, load8_ind(offset)));\n                computer.clockCount += 8;\n                break;\n            case OP_TMM_IND:\n                tmm(fetchOperand1(), load8_ind(fetchOperand1()));\n                computer.clockCount += 7;\n                break;\n            case OP_ADX_IMM:\n                IX = add16(IX, (short) (fetchOperand1() & 0xff));\n                computer.clockCount += 3;\n                break;\n            case OP_ADX_EXT:\n                IX = add16(IX, load16_ext(fetchOperand2()));\n                computer.clockCount += 7;\n                break;\n            default:\n                nop();\n                computer.clockCount += 1;\n                break;\n            }\n        }\n        return computer.clockCount - (initial_clock + clocks);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44252, "method_name": "saveState", "class_name": "MB8861", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveState(StateSet ss) {\n        ss.set(\"MB8861.A\", A);\n        ss.set(\"MB8861.B\", B);\n        ss.set(\"MB8861.IX\", IX);\n        ss.set(\"MB8861.SP\", SP);\n        ss.set(\"MB8861.PC\", PC);\n        ss.set(\"MB8861.CH\", CH);\n        ss.set(\"MB8861.CI\", CI);\n        ss.set(\"MB8861.CN\", CN);\n        ss.set(\"MB8861.CZ\", CZ);\n        ss.set(\"MB8861.CV\", CV);\n        ss.set(\"MB8861.CC\", CC);\n        ss.set(\"MB8861.resetStatus\", resetStatus);\n        ss.set(\"MB8861.nmiStatus\", nmiStatus);\n        ss.set(\"MB8861.irqStatus\", irqStatus);\n        ss.set(\"MB8861.haltStatus\", haltStatus);\n        ss.set(\"MB8861.haltProcessed\", haltProcessed);\n        ss.set(\"MB8861.fetchWai\", fetchWai);\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44253, "method_name": "loadState", "class_name": "MB8861", "params": ["StateSet"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void loadState(StateSet ss) {\n        A = (Byte)ss.get(\"MB8861.A\");\n        B = (Byte)ss.get(\"MB8861.B\");\n        IX = (Short)ss.get(\"MB8861.IX\");\n        SP = (Short)ss.get(\"MB8861.SP\");\n        PC = (Short)ss.get(\"MB8861.PC\");\n        CH = (Boolean)ss.get(\"MB8861.CH\");\n        CI = (Boolean)ss.get(\"MB8861.CI\");\n        CN = (Boolean)ss.get(\"MB8861.CN\");\n        CZ = (Boolean)ss.get(\"MB8861.CZ\");\n        CV = (Boolean)ss.get(\"MB8861.CV\");\n        CC = (Boolean)ss.get(\"MB8861.CC\");\n        resetStatus = (Boolean)ss.get(\"MB8861.resetStatus\");\n        nmiStatus = (Boolean)ss.get(\"MB8861.nmiStatus\");\n        irqStatus = (Boolean)ss.get(\"MB8861.irqStatus\");\n        haltStatus = (Boolean)ss.get(\"MB8861.haltStatus\");\n        haltProcessed = (Boolean)ss.get(\"MB8861.haltProcessed\");\n        fetchWai = (Boolean)ss.get(\"MB8861.fetchWai\");\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/emulator/device/MB8861.java", "stars": "4", "class_props": {"extends": "CPU", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44254, "method_name": "DataPerm", "class_name": "DataPermController", "params": [], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String DataPerm() {\n        return \"system/dataPerm/dataPerm\";\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44255, "method_name": "list", "class_name": "DataPermController", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R list(@RequestParam Map<String, Object> params) {\n        //\u67e5\u8be2\u5217\u8868\u6570\u636e\n        Query query = new Query(params);\n        List<DataPermDO> dataPermList = dataPermService.list(query);\n        int total = dataPermService.count(query);\n        PageBean pageBean = new PageBean(dataPermList, total);\n        return R.ok().put(\"data\", pageBean);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44256, "method_name": "add", "class_name": "DataPermController", "params": [], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String add() {\n        return \"system/dataPerm/add\";\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44257, "method_name": "edit", "class_name": "DataPermController", "params": ["Long", "Model"], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String edit(@PathVariable(\"id\") Long id, Model model) {\n            DataPermDO dataPerm = dataPermService.get(id);\n        model.addAttribute(\"dataPerm\", dataPerm);\n        return \"system/dataPerm/edit\";\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44258, "method_name": "detail", "class_name": "DataPermController", "params": ["Long", "Model"], "throws": null, "modifiers": [], "return_type": "String", "snippet": "    String detail(@PathVariable(\"id\") Long id, Model model) {\n\t\t\tDataPermDO dataPerm = dataPermService.get(id);\n        model.addAttribute(\"dataPerm\", dataPerm);\n        return \"system/dataPerm/detail\";\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44259, "method_name": "save", "class_name": "DataPermController", "params": ["DataPermDO"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R save( DataPermDO dataPerm) {\n        if (dataPermService.save(dataPerm) > 0) {\n            return R.ok();\n        }\n        return R.error();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44260, "method_name": "update", "class_name": "DataPermController", "params": ["DataPermDO"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R update( DataPermDO dataPerm) {\n            dataPermService.update(dataPerm);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44261, "method_name": "remove", "class_name": "DataPermController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R remove( Long id) {\n        if (dataPermService.remove(id) > 0) {\n            return R.ok();\n        }\n        return R.error();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44262, "method_name": "remove", "class_name": "DataPermController", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "R", "snippet": "    public R remove(@RequestParam(\"ids[]\") Long[] ids) {\n            dataPermService.batchRemove(ids);\n        return R.ok();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44263, "method_name": "listModuleName", "class_name": "DataPermController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DataPermDO>", "snippet": "    public List<DataPermDO> listModuleName() {\n        return dataPermService.listModuleName();\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44264, "method_name": "tree", "class_name": "DataPermController", "params": [], "throws": null, "modifiers": [], "return_type": "Tree<DataPermDO>", "snippet": "    Tree<DataPermDO> tree() {\n        Tree<DataPermDO>  tree = dataPermService.getTree();\n        return tree;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44265, "method_name": "tree", "class_name": "DataPermController", "params": ["Long"], "throws": null, "modifiers": [], "return_type": "Tree<DataPermDO>", "snippet": "    Tree<DataPermDO> tree(@PathVariable(\"roleId\") Long roleId) {\n        Tree<DataPermDO>  tree = dataPermService.getTree(roleId);\n        return tree;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/system/controller/DataPermController.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44266, "method_name": "helloWorldInternationalized", "class_name": "HelloWorldController", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String helloWorldInternationalized() {\n        return \"Good morning\";\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/main/java/com/example/demo/controller/HelloWorldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44267, "method_name": "helloWorld", "class_name": "HelloWorldController", "params": ["Locale"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String helloWorld(\n            @RequestHeader(name=\"Accept-Language\", required = false)\n            Locale locale) {\n        return messageSource.getMessage(\n                \"greeting.message\", null, locale);\n    }", "url": "https://raw.githubusercontent.com/joneconsulting/springbootproject/master/src/main/java/com/example/demo/controller/HelloWorldController.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44268, "method_name": "testFieldTypes", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testFieldTypes() {\n        for (int i = 0; i < BOOK_ENTRY_FIELD_NAMES.length; i++) {\n            FieldTestUtils.checkFieldType(testBook, BOOK_ENTRY_FIELD_TYPES[i], BOOK_ENTRY_FIELD_NAMES[i]);\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44269, "method_name": "testCtorFieldInitialisation", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testCtorFieldInitialisation() {\n        BookEntryTestUtils.checkBookFieldValues(testBook, BOOK_ENTRY_FIELD_NAMES, BOOK_ENTRY_FIELD_VALUES);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44270, "method_name": "testGetTitle", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetTitle() {\n        String fieldName = TITLE_FIELD_NAME;\n        String expected = \"Test Title\";\n        FieldTestUtils.setPrivateField(testBook, testBook.getClass(), fieldName, expected);\n\n        String actual = testBook.getTitle();\n        assertEquals(\"Unexpected \" + fieldName + \" returned by getter.\", expected, actual);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44271, "method_name": "testGetAuthors", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetAuthors() {\n        String fieldName = AUTHORS_FIELD_NAME;\n        String[] expected = { \"Test Author A\", \"Test Author B\" };\n        FieldTestUtils.setPrivateField(testBook, testBook.getClass(), fieldName, expected);\n\n        String[] actual = testBook.getAuthors();\n        assertArrayEquals(\"Unexpected \" + fieldName + \" returned by getter.\", expected, actual);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44272, "method_name": "testGetRating", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetRating() {\n        String fieldName = RATING_FIELD_NAME;\n        float expected = 2.3f;\n        FieldTestUtils.setPrivateField(testBook, testBook.getClass(), fieldName, expected);\n\n        float actual = testBook.getRating();\n        assertEquals(\"Unexpected \" + fieldName + \" returned by getter.\", expected, actual, CMP_DELTA);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44273, "method_name": "testGetISBN", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetISBN() {\n        String fieldName = ISBN_FIELD_NAME;\n        String expected = \"158234681X\";\n        FieldTestUtils.setPrivateField(testBook, testBook.getClass(), fieldName, expected);\n\n        String actual = testBook.getISBN();\n        assertEquals(\"Unexpected \" + fieldName + \" returned by getter.\", expected, actual);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44274, "method_name": "testGetPages", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testGetPages() {\n        String fieldName = PAGES_FIELD_NAME;\n        int expected = 123;\n        FieldTestUtils.setPrivateField(testBook, testBook.getClass(), fieldName, expected);\n\n        int actual = testBook.getPages();\n        assertEquals(\"Unexpected \" + fieldName + \" returned by getter.\", expected, actual);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44275, "method_name": "checkEquality", "class_name": "BookEntryBasicTest", "params": ["BookEntry", "BookEntry", "String", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkEquality(BookEntry bookA, BookEntry bookB, String field, boolean expected) {\n        if (expected) {\n            assertTrue(\"True return value expected for same fields.\", bookA.equals(bookB) && bookB.equals(bookA));\n            assertEquals(\"Hashcode expected to be the same for objects with the same state.\", bookA.hashCode(), bookB.hashCode());\n        } else {\n            assertTrue(\"False return value expected for different \" + field + \".\", !bookA.equals(bookB) && !bookB.equals(bookA));\n            assertNotEquals(\"Hashcode should be different for objects with different state.\", bookA.hashCode(), bookB.hashCode());\n        }\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44276, "method_name": "testEqualsAndHashCode", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testEqualsAndHashCode() {\n        BookEntry bookA = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n        BookEntry bookB = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n\n        assertTrue(\"True return value expected for same book instance.\", bookA.equals(bookA) && bookB.equals(bookB));\n        assertEquals(\"Hashcode expected to be the same for same instance.\", bookA.hashCode(), bookA.hashCode());\n\n        assertFalse(\"False return value expected if compared to different object type.\", bookA.equals(\"test\"));\n        assertFalse(\"False return value expected if compared to null.\", bookA.equals(null));\n\n        checkEquality(bookA, bookB, TITLE_FIELD_NAME, true);\n\n        bookA = new BookEntry(\"Title A\", DEFAULT_AUTHORS, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n        bookB = new BookEntry(\"Title B\", DEFAULT_AUTHORS, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n\n        checkEquality(bookA, bookB, TITLE_FIELD_NAME, false);\n\n        bookA = new BookEntry(DEFAULT_TITLE, new String[]{\"Author A\"}, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n        bookB = new BookEntry(DEFAULT_TITLE, new String[]{\"Author B\"}, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n\n        checkEquality(bookA, bookB, AUTHORS_FIELD_NAME, false);\n\n        bookA = new BookEntry(DEFAULT_TITLE, new String[]{\"Author A\"}, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n        bookB = new BookEntry(DEFAULT_TITLE, new String[]{\"Author A\", \"Author B\"}, DEFAULT_RATING, DEFAULT_ISBN, DEFAULT_PAGES);\n\n        checkEquality(bookA, bookB, AUTHORS_FIELD_NAME, false);\n\n        bookA = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, 2f, DEFAULT_ISBN, DEFAULT_PAGES);\n        bookB = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, 3f, DEFAULT_ISBN, DEFAULT_PAGES);\n\n        checkEquality(bookA, bookB, RATING_FIELD_NAME, false);\n\n        bookA = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, DEFAULT_RATING, \"1400054036\", DEFAULT_PAGES);\n        bookB = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, DEFAULT_RATING, \"439554896\", DEFAULT_PAGES);\n\n        checkEquality(bookA, bookB, ISBN_FIELD_NAME, false);\n\n        bookA = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, DEFAULT_RATING, DEFAULT_ISBN, 300);\n        bookB = new BookEntry(DEFAULT_TITLE, DEFAULT_AUTHORS, DEFAULT_RATING, DEFAULT_ISBN, 400);\n\n        checkEquality(bookA, bookB, PAGES_FIELD_NAME, false);\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44277, "method_name": "testToStringReturnValue", "class_name": "BookEntryBasicTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void testToStringReturnValue() {\n        String expectedResult = DEFAULT_TOSTRING_RESULT;\n        String actualResult = testBook.toString();\n\n        // ignore leading and trailing white spaces\n        // and correct for potential Windows line endings\n        assertEquals(\"ToString result not as expected.\", expectedResult.replaceAll(\"\\r\", \"\").trim(),\n                actualResult.replaceAll(\"\\r\", \"\").trim());\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/tests/BookEntryBasicTest.java", "stars": "6", "class_props": {"extends": "BookEntryTest", "implements": null, "modifiers": ["public"]}}, {"id": 44278, "method_name": "onAnimationCancel", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAnimationCancel (android.view.View p0)\n\t{\n\t\tn_onAnimationCancel (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44279, "method_name": "n_onAnimationCancel", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAnimationCancel (android.view.View p0);\n\n\n\tpublic void onAnimationEnd (android.view.View p0)\n\t{\n\t\tn_onAnimationEnd (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44280, "method_name": "onAnimationEnd", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAnimationEnd (android.view.View p0)\n\t{\n\t\tn_onAnimationEnd (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44281, "method_name": "n_onAnimationEnd", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAnimationEnd (android.view.View p0);\n\n\n\tpublic void onAnimationStart (android.view.View p0)\n\t{\n\t\tn_onAnimationStart (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44282, "method_name": "onAnimationStart", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onAnimationStart (android.view.View p0)\n\t{\n\t\tn_onAnimationStart (p0);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44283, "method_name": "n_onAnimationStart", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": ["android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onAnimationStart (android.view.View p0);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44284, "method_name": "monodroidAddReference", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44285, "method_name": "monodroidClearReferences", "class_name": "ViewPropertyAnimatorListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44286, "method_name": "getAttr1", "class_name": "MyClass1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getAttr1() {\n        return attr1;\n    }", "url": "https://raw.githubusercontent.com/falvojr/stackoverflow-61560293/master/src/main/java/com/falvojr/domain/MyClass1.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44287, "method_name": "setAttr1", "class_name": "MyClass1", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAttr1(String attr1) {\n        this.attr1 = attr1;\n    }", "url": "https://raw.githubusercontent.com/falvojr/stackoverflow-61560293/master/src/main/java/com/falvojr/domain/MyClass1.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44288, "method_name": "getAttr2", "class_name": "MyClass1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "MyClass2", "snippet": "    public MyClass2 getAttr2() {\n        return attr2;\n    }", "url": "https://raw.githubusercontent.com/falvojr/stackoverflow-61560293/master/src/main/java/com/falvojr/domain/MyClass1.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44289, "method_name": "setAttr2", "class_name": "MyClass1", "params": ["MyClass2"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAttr2(MyClass2 attr2) {\n        this.attr2 = attr2;\n    }", "url": "https://raw.githubusercontent.com/falvojr/stackoverflow-61560293/master/src/main/java/com/falvojr/domain/MyClass1.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44290, "method_name": "totalPossibleWords", "class_name": "permutationSearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int totalPossibleWords() {\n\t\treturn listMots.size();\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/permutationSearch.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44291, "method_name": "possibleWord", "class_name": "permutationSearch", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Mot", "snippet": "\tpublic Mot possibleWord(int index) {\n\t\treturn listMots.get(index);\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/permutationSearch.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44292, "method_name": "combinationFinder", "class_name": "permutationSearch", "params": ["String", "String", "ArrayList<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void combinationFinder(String str, String base, ArrayList<String> permutationsTrouve) {\n\t\t// Ne faites ce processus que s'il y a 4 lettres dans le mot (car nous allons en\n\t\t// supprimer une \u00e0 la fois et elle ne peut pas \u00eatre inf\u00e9rieure \u00e0 3)\n\t\tif ((base.length() >= 3 && str.length() > 0) || (base.length() >= 2 && str.length() > 1)\n\t\t\t\t|| (base.length() >= 1 && str.length() > 2) || (base.length() >= 0 && str.length() > 3)) {\n\t\t\t// Supprimer et ajouter \u00e0 nouveau chaque lettre autant de fois qu'il y a de lettres dans la cha\u00eene\n\t\t\tfor (int i = 0; i < str.length(); ++i) {\n\t\t\t\t// Enregistrez la lettre avant de la supprimer\n\t\t\t\tchar aux = str.charAt(i);\n\t\t\t\t// Utilisez StringBuilder pour tout simplifier\n\t\t\t\tStringBuilder newStr = new StringBuilder(str);\n\t\t\t\t// Supprime le caract\u00e8re de la cha\u00eene \u00e0 la position \"i\"\n\t\t\t\tnewStr.deleteCharAt(i);\n\t\t\t\t// C'est un nouveau mot! Enregistrez dans la base de donn\u00e9es la nouvelle\n\t\t\t\t// permutation avec les lettres n\u00e9cessaires du tableau\n\t\t\t\tpermutationsTrouve.add(base + newStr.toString());\n\t\t\t\t// Rappelle cette fonction mais sans la lettre que l'on vient de supprimer\n\t\t\t\tcombinationFinder(newStr.toString(), base, permutationsTrouve);\n\t\t\t\t// Ins\u00e8re la lettre que nous avons utilis\u00e9e et passe \u00e0 une autre it\u00e9ration de la\n\t\t\t\t// fonction\n\t\t\t\tnewStr.insert(i, aux);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/permutationSearch.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44293, "method_name": "creerPermutations", "class_name": "permutationSearch", "params": ["ArrayList<Integer>", "int", "int", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void creerPermutations(ArrayList<Integer> lettresDePlat, int xPos, int yPos, boolean horizontal) {\n\t\tArrayList<String> permutationsTrouve = new ArrayList<String>();\n\n\t\tString lettresMain = \"\";\n\t\tString motPlateau = \"\";\n\t\tfor (int i = 0; i < lettresDePlat.size(); ++i)\n\t\t\tmotPlateau += (char) (int) lettresDePlat.get(i);\n\n\t\tfor (int i = 0; i < 7; ++i) {\n\t\t\tif (main[i] != 0)\n\t\t\t\tlettresMain += (char) main[i];\n\t\t}\n\n\t\t// Actuellement, letterMain n'a que les lettres de la main du joueur. Nous\n\t\t// ajoutons les lettres du tableau plus tard (car le cant me modifi\u00e9 ou\n\t\t// supprim\u00e9)\n\t\t// V\u00e9rification de toutes les combinaisons possibles\n\t\tpermutationsTrouve.add(motPlateau + lettresMain);\n\t\tcombinationFinder(lettresMain, motPlateau, permutationsTrouve);\n\n\t\tint index = 0;\n\t\twhile (index < permutationsTrouve.size()) {\n\t\t\tif ((!permutationsTrouve.get(index).contains(motPlateau))\n\t\t\t\t\t|| (listAnagram.contains(permutationsTrouve.get(index)))\n\t\t\t\t\t|| (Collections.frequency(permutationsTrouve, permutationsTrouve.get(index)) > 1)\n\t\t\t\t\t|| (aDico.contains('\"' + permutationsTrouve.get(index) + '\"') == null)) {\n\t\t\t\tpermutationsTrouve.remove(index);\n\t\t\t} else {\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\n\t\t// Jusqu'\u00e0 ici, le seul processus est de trouver toutes les permutations\n\t\t// existantes\n\t\t// Maintenant, le reste du code mettra \u00e0 jour la sortie de l'algorithme\n\t\tString auxStr = \"\";\n\n\t\tArrayList<String> realWordList = new ArrayList<String>();\n\t\t// \u00c9changez l'anagramme avec de vrais mots\n\t\tfor (int indexMotList = 0; indexMotList < permutationsTrouve.size(); ++indexMotList) {\n\t\t\tList<String> dicoTranslator = aDico.contains('\"' + permutationsTrouve.get(indexMotList) + '\"');\n\t\t\tfor (int indexMotDico = 0; indexMotDico < dicoTranslator.size(); ++indexMotDico) {\n\t\t\t\t// Lecture de chaque mot de chaque entit\u00e9 dans le dictionnaire dont nous avons\n\t\t\t\t// trouv\u00e9 les r\u00e9sultats\n\t\t\t\tauxStr = dicoTranslator.get(indexMotDico);\n\t\t\t\t// (supprimer le \"dans les deux extr\u00eames)\n\t\t\t\tauxStr = auxStr.substring(1, auxStr.length() - 1);\n\t\t\t\t// Ins\u00e9rer un mot dans wordList\n\t\t\t\trealWordList.add(auxStr);\n\t\t\t}\n\t\t}\n\n\t\t// V\u00e9rifie s'il essaie d'ins\u00e9rer un mot qui a d\u00e9j\u00e0 \u00e9t\u00e9 ins\u00e9r\u00e9 avant\n\t\tindex = 0;\n\t\twhile (index < realWordList.size()) {\n\t\t\tif ((Collections.frequency(realWordList, realWordList.get(index)) > 1)\n\t\t\t\t\t|| (Collections.frequency(usedMots, realWordList.get(index)) == 1))\n\t\t\t\trealWordList.remove(index);\n\t\t\telse\n\t\t\t\tindex++;\n\t\t}\n\n\t\t// V\u00e9rifier si le mot peut r\u00e9ellement \u00eatre plac\u00e9 dans le tableau\n\t\tint[] scoreLettre = { 1, 3, 3, 2, 1, 4, 2, 4, 1, 8, 10, 1, 2, 1, 1, 3, 8, 1, 1, 1, 1, 4, 10, 10, 10, 10 };\n\t\tint sum = -1;\n\t\tindex = 0;\n\t\tboolean delete = false;\n\t\tint letterCount = 1;\n\t\tArrayList<Integer> mannequinSet = new ArrayList<Integer>(Arrays.asList(0,0,0,0,0,0,0));\n\t\tJoueur mannequin = new Joueur(\"-\", mannequinSet);\n\n\t\tif (horizontal) {\n\t\t\t// Faites simplement d\u00e9filer le y\n\t\t\twhile (index < realWordList.size()) {\n\t\t\t\tdelete = false;\n\t\t\t\tint start = yPos - realWordList.get(index).indexOf(motPlateau);\n\t\t\t\tint startWord = yPos;\n\t\t\t\tint endWord = (motPlateau.length() == 0) ? yPos : yPos + motPlateau.length() - 1;\n\t\t\t\tint end = start + realWordList.get(index).length() - 1;\n\t\t\t\tsum = 0;\n\t\t\t\tint subX = 0;\n\t\t\t\tint topX = 0;\n\n\n\t\t\t\tif (realWordList.get(index).indexOf(motPlateau) == -1)\n\t\t\t\t\tdelete = true;\n\n\t\t\t\tif (start >= 0 && end <= 14 && !delete) {\n\t\t\t\t\t//\n\t\t\t\t\t// Tout v\u00e9rifier avant le mot trouv\u00e9 dans le tableau\n\t\t\t\t\t//\n\t\t\t\t\tif(plat.returnBoite(xPos, start-1) > 5 || plat.returnBoite(xPos, end+1) > 5 ) {\n\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (int itY = start; itY < startWord && !delete; ++itY) {\n\t\t\t\t\t\tif (plat.returnBoite(xPos, itY) > 5)\n\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// V\u00e9rifier verticalement s'il forme involontairement un nouveau mot valide\n\t\t\t\t\t\t\tletterCount = 1;\n\n\t\t\t\t\t\t\tsubX = xPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(subX - 1, itY) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\tsubX--;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Je v\u00e9rifie sous la ligne de lettres\n\t\t\t\t\t\t\ttopX = xPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(topX + 1, itY) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\ttopX++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// La lettre initiale est compt\u00e9e deux fois, donc le compteur doit avoir une\n\t\t\t\t\t\t\t// valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\t\t\t\t\tif (letterCount >= 2) {\n\t\t\t\t\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit\n\t\t\t\t\t\t\t\t// d'un mot reconnaissable\n\t\t\t\t\t\t\t\tString possibleMot = \"\";\n\t\t\t\t\t\t\t\tfor (int j = subX; j <= topX; ++j) { //\n\t\t\t\t\t\t\t\t\tif (j == xPos) {\n\t\t\t\t\t\t\t\t\t\tpossibleMot += realWordList.get(index).charAt(itY - start);\n\t\t\t\t\t\t\t\t\t}else\n\t\t\t\t\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(j, itY));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && (Collections.frequency(usedMots, possibleMot) == 0)) {\n\t\t\t\t\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\t\t\t\t\t\t\t\t\tint[] wordChar = new int[possibleMot.length()];\n\t\t\t\t\t\t\t\t\tfor (int letterIndex = 0; letterIndex < possibleMot.length(); ++letterIndex)\n\t\t\t\t\t\t\t\t\t\twordChar[letterIndex] = (int) possibleMot.charAt(letterIndex);\n\n\t\t\t\t\t\t\t\t\tsum += mannequin.calculerScore(wordChar, subX, itY, true, plat);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t//\n\t\t\t\t\t// Tout v\u00e9rifier apr\u00e8s le mot trouv\u00e9 d\u00e9j\u00e0 positionn\u00e9 dans le tableau\n\t\t\t\t\tfor (int itY = endWord + 1; itY <= end && delete != true; ++itY) {\n\t\t\t\t\t\tif (plat.returnBoite(xPos, itY) > 5)\n\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// V\u00e9rifier verticalement s'il forme involontairement un nouveau mot valide\n\t\t\t\t\t\t\tletterCount = 1;\n\n\t\t\t\t\t\t\tsubX = xPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(subX - 1, itY) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\tsubX--;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Je v\u00e9rifie sous la ligne de lettres\n\t\t\t\t\t\t\ttopX = xPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(topX + 1, itY) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\ttopX++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// La lettre initiale est compt\u00e9e deux fois, donc le compteur doit avoir une\n\t\t\t\t\t\t\t// valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\t\t\t\t\tif (letterCount >= 2) {\n\t\t\t\t\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit d'un mot reconnaissable\n\t\t\t\t\t\t\t\tString possibleMot = \"\";\n\t\t\t\t\t\t\t\tfor (int j = subX; j <= topX; ++j) { //\n\t\t\t\t\t\t\t\t\tif (j == xPos) {\n\t\t\t\t\t\t\t\t\t\tpossibleMot += realWordList.get(index).charAt(itY - start);\n\t\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(j, itY));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && (Collections.frequency(usedMots, possibleMot) == 0)) {\n\t\t\t\t\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\t\t\t\t\t\t\t\t\tint[] wordChar = new int[possibleMot.length()];\n\t\t\t\t\t\t\t\t\tfor (int letterIndex = 0; letterIndex < possibleMot.length(); ++letterIndex)\n\t\t\t\t\t\t\t\t\t\twordChar[letterIndex] = (int) possibleMot.charAt(letterIndex);\n\n\t\t\t\t\t\t\t\t\tsum += mannequin.calculerScore(wordChar, subX, itY, true, plat);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tdelete = true;\n\n\t\t\t\tif (delete == true) {\n\t\t\t\t\trealWordList.remove(index);\n\t\t\t\t} else {\n\t\t\t\t\t// Le mot peut \u00eatre plac\u00e9 dans le tableau et suit toutes les directives \u00e0\n\t\t\t\t\t// ins\u00e9rer dans le tableau, ins\u00e9rez-le\n\n\t\t\t\t\tint[] wordChar = new int[realWordList.get(index).length()];\n\t\t\t\t\tfor (int letterIndex = 0; letterIndex < realWordList.get(index).length(); ++letterIndex)\n\t\t\t\t\t\twordChar[letterIndex] = (int) realWordList.get(index).charAt(letterIndex);\n\n\t\t\t\t\tsum += mannequin.calculerScore(wordChar, xPos, start, true, plat);\n\n\t\t\t\t\tMot auxMotVariable = new Mot(realWordList.get(index), xPos, start, true, sum);\n\t\t\t\t\tlistMots.add(auxMotVariable);\n\t\t\t\t\trealWordList.remove(index);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// Faites simplement d\u00e9filer le x\n\t\t\twhile (index < realWordList.size()) {\n\t\t\t\tdelete = false;\n\t\t\t\tint start = xPos - realWordList.get(index).indexOf(motPlateau);\n\t\t\t\tint startWord = xPos;\n\t\t\t\tint endWord = xPos + motPlateau.length() - 1;\n\t\t\t\tint end = start + realWordList.get(index).length() - 1;\n\t\t\t\tsum = 0;\n\t\t\t\tint subY = 0;\n\t\t\t\tint topY = 0;\n\n\t\t\t\tif (realWordList.get(index).indexOf(motPlateau) == -1)\n\t\t\t\t\tdelete = true;\n\n\t\t\t\tif(plat.returnBoite(start - 1, yPos) > 5 || plat.returnBoite(end+1, yPos) > 5 ) {\n\t\t\t\t\tdelete = true;\n\t\t\t\t}\n\n\t\t\t\tif (start >= 0 && end <= 14 && !delete) {\n\t\t\t\t\tfor (int itX = start; itX < startWord && delete != true; ++itX) {\n\t\t\t\t\t\tif (plat.returnBoite(itX, yPos) > 5)\n\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// V\u00e9rifier horizontalement s'il forme involontairement un nouveau mot valide\n\t\t\t\t\t\t\tletterCount = 1;\n\n\t\t\t\t\t\t\tsubY = yPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(itX, subY - 1) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\tsubY--;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Je v\u00e9rifie sous la ligne de lettres\n\t\t\t\t\t\t\ttopY = yPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(itX, topY + 1) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\ttopY++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// La lettre initiale est compt\u00e9e deux fois, donc le compteur doit avoir une\n\t\t\t\t\t\t\t// valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\t\t\t\t\tif (letterCount >= 2) {\n\t\t\t\t\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit\n\t\t\t\t\t\t\t\t// d'un mot reconnaissable\n\t\t\t\t\t\t\t\tString possibleMot = \"\";\n\t\t\t\t\t\t\t\tfor (int j = subY; j <= topY; ++j) { //\n\t\t\t\t\t\t\t\t\tif (j == yPos) {\n\t\t\t\t\t\t\t\t\t\tpossibleMot += realWordList.get(index).charAt(itX - start);\n\t\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(itX, j));\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && (Collections.frequency(usedMots, possibleMot) == 0)) {\n\t\t\t\t\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\t\t\t\t\t\t\t\t\tint[] wordChar = new int[possibleMot.length()];\n\t\t\t\t\t\t\t\t\tfor (int letterIndex = 0; letterIndex < possibleMot.length(); ++letterIndex)\n\t\t\t\t\t\t\t\t\t\twordChar[letterIndex] = (int) possibleMot.charAt(letterIndex);\n\n\t\t\t\t\t\t\t\t\tsum += mannequin.calculerScore(wordChar, itX, subY, false, plat);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (int itX = endWord + 1; itX <= end && delete != true; ++itX) {\n\t\t\t\t\t\tif (plat.returnBoite(itX, yPos) > 5)\n\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// V\u00e9rifier horizontalement s'il forme involontairement un nouveau mot valide\n\t\t\t\t\t\t\tletterCount = 1;\n\n\t\t\t\t\t\t\tsubY = yPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(itX, subY - 1) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\tsubY--;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// Je v\u00e9rifie sous la ligne de lettres\n\t\t\t\t\t\t\ttopY = yPos;\n\t\t\t\t\t\t\twhile (plat.returnBoite(itX, topY + 1) >= 5) {\n\t\t\t\t\t\t\t\tletterCount++;\n\t\t\t\t\t\t\t\ttopY++;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// La lettre initiale est compt\u00e9e deux fois, donc le compteur doit avoir une\n\t\t\t\t\t\t\t// valeur sup\u00e9rieure \u00e0 2 pour \u00eatre admis\n\t\t\t\t\t\t\tif (letterCount >= 2) {\n\t\t\t\t\t\t\t\t// Une s\u00e9quence de lettres a \u00e9t\u00e9 trouv\u00e9e, elle doit \u00eatre calcul\u00e9e s'il s'agit\n\t\t\t\t\t\t\t\t// d'un mot reconnaissable\n\t\t\t\t\t\t\t\tString possibleMot = \"\";\n\t\t\t\t\t\t\t\tfor (int j = subY; j <= topY; ++j) { //\n\t\t\t\t\t\t\t\t\tif (j == yPos) {\n\t\t\t\t\t\t\t\t\t\tpossibleMot += realWordList.get(index).charAt(itX - start);\n\t\t\t\t\t\t\t\t\t} else\n\t\t\t\t\t\t\t\t\t\tpossibleMot += Character.toString((char) plat.returnBoite(itX, j));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (dico.contains('\"' + possibleMot + '\"') && (Collections.frequency(usedMots, possibleMot) == 0)) {\n\t\t\t\t\t\t\t\t\t// Le mot trouv\u00e9 a \u00e9t\u00e9 reconnu dans le dictionnaire !!!!!\n\t\t\t\t\t\t\t\t\tint[] wordChar = new int[possibleMot.length()];\n\t\t\t\t\t\t\t\t\tfor (int letterIndex = 0; letterIndex < possibleMot.length(); ++letterIndex)\n\t\t\t\t\t\t\t\t\t\twordChar[letterIndex] = (int) possibleMot.charAt(letterIndex);\n\n\t\t\t\t\t\t\t\t\tsum += mannequin.calculerScore(wordChar, itX, subY, false, plat);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdelete = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\t\tdelete = true;\n\n\t\t\t\tif (delete == true) {\n\t\t\t\t\trealWordList.remove(index);\n\t\t\t\t} else {\n\t\t\t\t\t// Le mot peut \u00eatre plac\u00e9 dans le tableau et suit toutes les directives \u00e0\n\t\t\t\t\t// ins\u00e9rer dans le tableau, ins\u00e9rez-le\n\t\t\t\t\tint[] wordChar = new int[realWordList.get(index).length()];\n\t\t\t\t\tfor (int letterIndex = 0; letterIndex < realWordList.get(index).length(); ++letterIndex)\n\t\t\t\t\t\twordChar[letterIndex] = (int) realWordList.get(index).charAt(letterIndex);\n\n\t\t\t\t\tsum += mannequin.calculerScore(wordChar, start, yPos, false, plat);\n\n\t\t\t\t\tMot auxMotVariable = new Mot(realWordList.get(index), start, yPos, false, sum);\n\t\t\t\t\tlistMots.add(auxMotVariable);\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t\t// Ordre bas\u00e9 sur des points plus \u00e9lev\u00e9s par mot en premier\n\t\t// Fabriqu\u00e9 de mani\u00e8re \u00e0 ce que les deux listes (mot et points) effectuent les\n\t\t// m\u00eames mouvements de commande\n\n\t\tfor (int i = 0; i < totalPossibleWords(); i++) {\n\t\t\tfor (int j = i + 1; j < totalPossibleWords(); j++) {\n\t\t\t\tif (possibleWord(i).verifierPoints() < possibleWord(j).verifierPoints()) {\n\t\t\t\t\tCollections.swap(listMots, i, j);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/permutationSearch.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44294, "method_name": "suggestionMots", "class_name": "permutationSearch", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void suggestionMots() {\n\t\tArrayList<Integer> lettresDePlat = new ArrayList<Integer>();\n\t\tlistMots.clear();\n\n\t\t// Tout d'abord, je vais v\u00e9rifier s'il y a des mots dans le tableau pour gagner\n\t\t// du temps d'ex\u00e9cution\n\t\tif (plat.returnBoite(7, 7) == 3) {\n\t\t\t// Il n'y a pas de mots dans le tableau\n\t\t\t// La seule permutation que nous pouvons trouver est celle avec les lettres dans\n\t\t\t// notre main\n\t\t\tcreerPermutations(lettresDePlat, 7, 7, true);\n\t\t} else {\n\t\t\t// Regardant horizontalement\n\t\t\tfor (int i = 0; i < 15; ++i) {\n\t\t\t\tfor (int j = 0; j < 15; ++j) {\n\t\t\t\t\t// Rechercher la table horizontalement\n\t\t\t\t\tif ((plat.returnBoite(i, j) > 5) && (j == 0 || plat.returnBoite(i, j - 1) <= 5)) {\n\t\t\t\t\t\tlettresDePlat.clear();\n\t\t\t\t\t\tlettresDePlat.add(plat.returnBoite(i, j));\n\t\t\t\t\t\t// Lettre trouv\u00e9e\n\t\t\t\t\t\tint indexJ = j;\n\t\t\t\t\t\twhile (plat.returnBoite(i, indexJ + 1) > 5) {\n\t\t\t\t\t\t\tindexJ++;\n\t\t\t\t\t\t\tlettresDePlat.add(plat.returnBoite(i, indexJ));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Termin\u00e9 avec la succession de lettres ensemble\n\t\t\t\t\t\tcreerPermutations(lettresDePlat, i, j, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Regardant verticalement\n\t\t\tfor (int i = 0; i < 15; ++i) {\n\t\t\t\tfor (int j = 0; j < 15; ++j) {\n\t\t\t\t\t// Recherche de table verticalement\n\t\t\t\t\tif ((plat.returnBoite(i, j) > 5) && (i == 0 || plat.returnBoite(i - 1, j) <= 5)) {\n\t\t\t\t\t\tlettresDePlat.clear();\n\t\t\t\t\t\tlettresDePlat.add(plat.returnBoite(i, j));\n\t\t\t\t\t\t// Lettre trouv\u00e9e\n\t\t\t\t\t\tint indexI = i;\n\t\t\t\t\t\twhile (plat.returnBoite(indexI + 1, j) > 5) {\n\t\t\t\t\t\t\tindexI++;\n\t\t\t\t\t\t\tlettresDePlat.add(plat.returnBoite(indexI, j));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Termin\u00e9 avec la succession de lettres ensemble\n\t\t\t\t\t\tcreerPermutations(lettresDePlat, i, j, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t} // Fin si -> Dans le cas o\u00f9 il y a d\u00e9j\u00e0 des mots sur la table\n\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/permutationSearch.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44295, "method_name": "main", "class_name": "permutationSearch", "params": ["String"], "throws": ["IOException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws IOException {\n\t\tanagramDictionnaire aD = new anagramDictionnaire(\"dico.txt\");\n\t\tDictionnaire d = new Dictionnaire(\"dico.txt\");\n\t\tPlateau p = new Plateau();\n\t\tint[] m = { 100, 101, 102, 112, 108, 117, 115 };\n\t\tArrayList<String> uM = new ArrayList<String>();\n\n\t\tpermutationSearch pS = new permutationSearch(aD, d, p, m, uM);\n\n\t\tSystem.out.println(pS.totalPossibleWords() + \" r\u00e9sultats trouv\u00e9s! \\n\");\n\n\t\tfor (int i = 0; i < pS.totalPossibleWords(); ++i)\n\t\t\tSystem.out.println(\"Mots: \" + pS.possibleWord(i).verifierNom() + \" pour un total de \"\n\t\t\t\t\t+ pS.possibleWord(i).verifierPoints() + \" points! (PosX:\" + pS.possibleWord(i).verifierX()\n\t\t\t\t\t+ \"|PosY:\" + pS.possibleWord(i).verifierY() + \")\");\n\n\t}", "url": "https://raw.githubusercontent.com/Ethpera/ScrabbleJava/master/src/permutationSearch.java", "stars": "4", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44296, "method_name": "add", "class_name": "AbstractFile", "params": ["AbstractFile"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void add(AbstractFile file);\n    public abstract void remove(AbstractFile file);\n    public abstract AbstractFile getChild(int i);\n    public abstract void killVirus();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/AbstractFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44297, "method_name": "remove", "class_name": "AbstractFile", "params": ["AbstractFile"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void remove(AbstractFile file);\n    public abstract AbstractFile getChild(int i);\n    public abstract void killVirus();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/AbstractFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44298, "method_name": "getChild", "class_name": "AbstractFile", "params": ["int"], "throws": null, "modifiers": ["public", "abstract"], "return_type": "AbstractFile", "snippet": "    public abstract AbstractFile getChild(int i);\n    public abstract void killVirus();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/AbstractFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44299, "method_name": "killVirus", "class_name": "AbstractFile", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "void", "snippet": "    public abstract void killVirus();\n}\n\n", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/structural/composite/transparent/AbstractFile.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44300, "method_name": "createTransformer", "class_name": "OptimizerZipResourceTransformerFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ZipResourceTransformer", "snippet": "\tpublic ZipResourceTransformer createTransformer() {\n\t\treturn new ZipResourceTransformer() {\n\t\t\t@Override\n\t\t\tpublic boolean process(ZipResourceTransformationContext context, SakerPath resourcepath,\n\t\t\t\t\tInputStream resourceinput) throws IOException {\n\t\t\t\tif (!resourcepath.getFileName().endsWith(\".class\")) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tByteArrayRegion contents = StreamUtils.readStreamFully(resourceinput);\n\t\t\t\tbyte[] array = contents.copyOptionally();\n\t\t\t\tbyte[] optimized = TailRecursionOptimizer.optimizeMethods(array);\n\t\t\t\tif (array == optimized) {\n\t\t\t\t\t//not optimized\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ttry (OutputStream out = context.appendFile(resourcepath, null)) {\n\t\t\t\t\tout.write(optimized);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t};\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/saker/build/zip/OptimizerZipResourceTransformerFactory.java", "stars": "97", "class_props": {"extends": null, "implements": ["ZipResourceTransformerFactory", "Externalizable"], "modifiers": ["public"]}}, {"id": 44301, "method_name": "writeExternal", "class_name": "OptimizerZipResourceTransformerFactory", "params": ["ObjectOutput"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void writeExternal(ObjectOutput out) throws IOException {\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/saker/build/zip/OptimizerZipResourceTransformerFactory.java", "stars": "97", "class_props": {"extends": null, "implements": ["ZipResourceTransformerFactory", "Externalizable"], "modifiers": ["public"]}}, {"id": 44302, "method_name": "readExternal", "class_name": "OptimizerZipResourceTransformerFactory", "params": ["ObjectInput"], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/saker/build/zip/OptimizerZipResourceTransformerFactory.java", "stars": "97", "class_props": {"extends": null, "implements": ["ZipResourceTransformerFactory", "Externalizable"], "modifiers": ["public"]}}, {"id": 44303, "method_name": "hashCode", "class_name": "OptimizerZipResourceTransformerFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int hashCode() {\n\t\treturn getClass().getName().hashCode();\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/saker/build/zip/OptimizerZipResourceTransformerFactory.java", "stars": "97", "class_props": {"extends": null, "implements": ["ZipResourceTransformerFactory", "Externalizable"], "modifiers": ["public"]}}, {"id": 44304, "method_name": "equals", "class_name": "OptimizerZipResourceTransformerFactory", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean equals(Object obj) {\n\t\treturn ObjectUtils.isSameClass(this, obj);\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/saker/build/zip/OptimizerZipResourceTransformerFactory.java", "stars": "97", "class_props": {"extends": null, "implements": ["ZipResourceTransformerFactory", "Externalizable"], "modifiers": ["public"]}}, {"id": 44305, "method_name": "toString", "class_name": "OptimizerZipResourceTransformerFactory", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String toString() {\n\t\treturn getClass().getSimpleName() + \"[]\";\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/saker/build/zip/OptimizerZipResourceTransformerFactory.java", "stars": "97", "class_props": {"extends": null, "implements": ["ZipResourceTransformerFactory", "Externalizable"], "modifiers": ["public"]}}, {"id": 44306, "method_name": "trigger", "class_name": "XxlJobTrigger", "params": ["int", "TriggerTypeEnum", "int", "String", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void trigger(int jobId, TriggerTypeEnum triggerType, int failRetryCount, String executorShardingParam, String executorParam) {\n        // load data\n        XxlJobInfo jobInfo = XxlJobAdminConfig.getAdminConfig().getXxlJobInfoDao().loadById(jobId);\n        if (jobInfo == null) {\n            logger.warn(\">>>>>>>>>>>> trigger fail, jobId invalid\uff0cjobId={}\", jobId);\n            return;\n        }\n        if (executorParam != null) {\n            jobInfo.setExecutorParam(executorParam);\n        }\n        int finalFailRetryCount = failRetryCount>=0?failRetryCount:jobInfo.getExecutorFailRetryCount();\n        XxlJobGroup group = XxlJobAdminConfig.getAdminConfig().getXxlJobGroupDao().load(jobInfo.getJobGroup());\n\n        // sharding param\n        int[] shardingParam = null;\n        if (executorShardingParam!=null){\n            String[] shardingArr = executorShardingParam.split(\"/\");\n            if (shardingArr.length==2 && isNumeric(shardingArr[0]) && isNumeric(shardingArr[1])) {\n                shardingParam = new int[2];\n                shardingParam[0] = Integer.valueOf(shardingArr[0]);\n                shardingParam[1] = Integer.valueOf(shardingArr[1]);\n            }\n        }\n        if (ExecutorRouteStrategyEnum.SHARDING_BROADCAST==ExecutorRouteStrategyEnum.match(jobInfo.getExecutorRouteStrategy(), null)\n                && group.getRegistryList()!=null && !group.getRegistryList().isEmpty()\n                && shardingParam==null) {\n            for (int i = 0; i < group.getRegistryList().size(); i++) {\n                processTrigger(group, jobInfo, finalFailRetryCount, triggerType, i, group.getRegistryList().size());\n            }\n        } else {\n            if (shardingParam == null) {\n                shardingParam = new int[]{0, 1};\n            }\n            processTrigger(group, jobInfo, finalFailRetryCount, triggerType, shardingParam[0], shardingParam[1]);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/trigger/XxlJobTrigger.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44307, "method_name": "isNumeric", "class_name": "XxlJobTrigger", "params": ["String"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean isNumeric(String str){\n        try {\n            int result = Integer.valueOf(str);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/trigger/XxlJobTrigger.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44308, "method_name": "processTrigger", "class_name": "XxlJobTrigger", "params": ["XxlJobGroup", "XxlJobInfo", "int", "TriggerTypeEnum", "int", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void processTrigger(XxlJobGroup group, XxlJobInfo jobInfo, int finalFailRetryCount, TriggerTypeEnum triggerType, int index, int total){\n\n        // param\n        ExecutorBlockStrategyEnum blockStrategy = ExecutorBlockStrategyEnum.match(jobInfo.getExecutorBlockStrategy(), ExecutorBlockStrategyEnum.SERIAL_EXECUTION);  // block strategy\n        ExecutorRouteStrategyEnum executorRouteStrategyEnum = ExecutorRouteStrategyEnum.match(jobInfo.getExecutorRouteStrategy(), null);    // route strategy\n        String shardingParam = (ExecutorRouteStrategyEnum.SHARDING_BROADCAST==executorRouteStrategyEnum)?String.valueOf(index).concat(\"/\").concat(String.valueOf(total)):null;\n\n        // 1\u3001save log-id\n        XxlJobLog jobLog = new XxlJobLog();\n        jobLog.setJobGroup(jobInfo.getJobGroup());\n        jobLog.setJobId(jobInfo.getId());\n        jobLog.setTriggerTime(new Date());\n        XxlJobAdminConfig.getAdminConfig().getXxlJobLogDao().save(jobLog);\n        logger.debug(\">>>>>>>>>>> xxl-job trigger start, jobId:{}\", jobLog.getId());\n\n        // 2\u3001init trigger-param\n        TriggerParam triggerParam = new TriggerParam();\n        triggerParam.setJobId(jobInfo.getId());\n        triggerParam.setExecutorHandler(jobInfo.getExecutorHandler());\n        triggerParam.setExecutorParams(jobInfo.getExecutorParam());\n        triggerParam.setExecutorBlockStrategy(jobInfo.getExecutorBlockStrategy());\n        triggerParam.setExecutorTimeout(jobInfo.getExecutorTimeout());\n        triggerParam.setLogId(jobLog.getId());\n        triggerParam.setLogDateTime(jobLog.getTriggerTime().getTime());\n        triggerParam.setGlueType(jobInfo.getGlueType());\n        triggerParam.setGlueSource(jobInfo.getGlueSource());\n        triggerParam.setGlueUpdatetime(jobInfo.getGlueUpdatetime().getTime());\n        triggerParam.setBroadcastIndex(index);\n        triggerParam.setBroadcastTotal(total);\n\n        // 3\u3001init address\n        String address = null;\n        ReturnT<String> routeAddressResult = null;\n        if (group.getRegistryList()!=null && !group.getRegistryList().isEmpty()) {\n            if (ExecutorRouteStrategyEnum.SHARDING_BROADCAST == executorRouteStrategyEnum) {\n                if (index < group.getRegistryList().size()) {\n                    address = group.getRegistryList().get(index);\n                } else {\n                    address = group.getRegistryList().get(0);\n                }\n            } else {\n                routeAddressResult = executorRouteStrategyEnum.getRouter().route(triggerParam, group.getRegistryList());\n                if (routeAddressResult.getCode() == ReturnT.SUCCESS_CODE) {\n                    address = routeAddressResult.getContent();\n                }\n            }\n        } else {\n            routeAddressResult = new ReturnT<String>(ReturnT.FAIL_CODE, I18nUtil.getString(\"jobconf_trigger_address_empty\"));\n        }\n\n        // 4\u3001trigger remote executor\n        ReturnT<String> triggerResult = null;\n        if (address != null) {\n            triggerResult = runExecutor(triggerParam, address);\n        } else {\n            triggerResult = new ReturnT<String>(ReturnT.FAIL_CODE, null);\n        }\n\n        // 5\u3001collection trigger info\n        StringBuffer triggerMsgSb = new StringBuffer();\n        triggerMsgSb.append(I18nUtil.getString(\"jobconf_trigger_type\")).append(\"\uff1a\").append(triggerType.getTitle());\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobconf_trigger_admin_adress\")).append(\"\uff1a\").append(IpUtil.getIp());\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobconf_trigger_exe_regtype\")).append(\"\uff1a\")\n                .append( (group.getAddressType() == 0)?I18nUtil.getString(\"jobgroup_field_addressType_0\"):I18nUtil.getString(\"jobgroup_field_addressType_1\") );\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobconf_trigger_exe_regaddress\")).append(\"\uff1a\").append(group.getRegistryList());\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobinfo_field_executorRouteStrategy\")).append(\"\uff1a\").append(executorRouteStrategyEnum.getTitle());\n        if (shardingParam != null) {\n            triggerMsgSb.append(\"(\"+shardingParam+\")\");\n        }\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobinfo_field_executorBlockStrategy\")).append(\"\uff1a\").append(blockStrategy.getTitle());\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobinfo_field_timeout\")).append(\"\uff1a\").append(jobInfo.getExecutorTimeout());\n        triggerMsgSb.append(\"<br>\").append(I18nUtil.getString(\"jobinfo_field_executorFailRetryCount\")).append(\"\uff1a\").append(finalFailRetryCount);\n\n        triggerMsgSb.append(\"<br><br><span style=\\\"color:#00c0ef;\\\" > >>>>>>>>>>>\"+ I18nUtil.getString(\"jobconf_trigger_run\") +\"<<<<<<<<<<< </span><br>\")\n                .append((routeAddressResult!=null&&routeAddressResult.getMsg()!=null)?routeAddressResult.getMsg()+\"<br><br>\":\"\").append(triggerResult.getMsg()!=null?triggerResult.getMsg():\"\");\n\n        // 6\u3001save log trigger-info\n        jobLog.setExecutorAddress(address);\n        jobLog.setExecutorHandler(jobInfo.getExecutorHandler());\n        jobLog.setExecutorParam(jobInfo.getExecutorParam());\n        jobLog.setExecutorShardingParam(shardingParam);\n        jobLog.setExecutorFailRetryCount(finalFailRetryCount);\n        //jobLog.setTriggerTime();\n        jobLog.setTriggerCode(triggerResult.getCode());\n        jobLog.setTriggerMsg(triggerMsgSb.toString());\n        XxlJobAdminConfig.getAdminConfig().getXxlJobLogDao().updateTriggerInfo(jobLog);\n\n        logger.debug(\">>>>>>>>>>> xxl-job trigger end, jobId:{}\", jobLog.getId());\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/trigger/XxlJobTrigger.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44309, "method_name": "runExecutor", "class_name": "XxlJobTrigger", "params": ["TriggerParam", "String"], "throws": null, "modifiers": ["public", "static"], "return_type": "ReturnT<String>", "snippet": "    public static ReturnT<String> runExecutor(TriggerParam triggerParam, String address){\n        ReturnT<String> runResult = null;\n        try {\n            ExecutorBiz executorBiz = XxlJobScheduler.getExecutorBiz(address);\n            runResult = executorBiz.run(triggerParam);\n        } catch (Exception e) {\n            logger.error(\">>>>>>>>>>> xxl-job trigger error, please check if the executor[{}] is running.\", address, e);\n            runResult = new ReturnT<String>(ReturnT.FAIL_CODE, ThrowableUtil.toString(e));\n        }\n\n        StringBuffer runResultSB = new StringBuffer(I18nUtil.getString(\"jobconf_trigger_run\") + \"\uff1a\");\n        runResultSB.append(\"<br>address\uff1a\").append(address);\n        runResultSB.append(\"<br>code\uff1a\").append(runResult.getCode());\n        runResultSB.append(\"<br>msg\uff1a\").append(runResult.getMsg());\n\n        runResult.setMsg(runResultSB.toString());\n        return runResult;\n    }", "url": "https://raw.githubusercontent.com/miaoo92/xxl-job-mongo/master/src/main/java/com/avon/rga/core/trigger/XxlJobTrigger.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44310, "method_name": "getPressedButtons", "class_name": "NintendoControllerService", "params": ["boolean"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void getPressedButtons(final boolean[] buttons) {\n        super.getPressedButtons(buttons);\n        // Invert Y and X\n        final boolean x = buttons[13];\n        buttons[13] = buttons[10];\n        buttons[10] = x;\n\n        // Invert A and B\n        final boolean a = buttons[12];\n        buttons[12] = buttons[11];\n        buttons[11] = a;\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/NintendoControllerService.java", "stars": "17", "class_props": {"extends": "DefaultJamepadService", "implements": null, "modifiers": []}}, {"id": 44311, "method_name": "main", "class_name": "Demo01System", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        demo02();\n        StringBuilder sb = new StringBuilder();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo05/System/Demo01System.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44312, "method_name": "demo02", "class_name": "Demo01System", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void demo02() {\n        //\u5b9a\u4e49\u6e90\u6570\u7ec4\n        int[] src = {1,2,3,4,5};\n        //\u5b9a\u4e49\u76ee\u6807\u6570\u7ec4\n        int[] dest = {6,7,8,9,10};\n        System.out.println(\"\u590d\u5236\u524d:\"+ Arrays.toString(dest));\n        //\u4f7f\u7528System\u7c7b\u4e2d\u7684arraycopy\u628a\u6e90\u6570\u7ec4\u7684\u524d3\u4e2a\u5143\u7d20\u590d\u5236\u5230\u76ee\u6807\u6570\u7ec4\u7684\u524d3\u4e2a\u4f4d\u7f6e\u4e0a\n        System.arraycopy(src,0,dest,0,3);\n        System.out.println(\"\u590d\u5236\u540e:\"+ Arrays.toString(dest));\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo05/System/Demo01System.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44313, "method_name": "demo01", "class_name": "Demo01System", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void demo01() {\n        //\u7a0b\u5e8f\u6267\u884c\u524d,\u83b7\u53d6\u4e00\u6b21\u6beb\u79d2\u503c\n        long s = System.currentTimeMillis();\n        //\u6267\u884cfor\u5faa\u73af\n        for (int i = 1; i <=9999 ; i++) {\n            System.out.println(i);\n        }\n        //\u7a0b\u5e8f\u6267\u884c\u540e,\u83b7\u53d6\u4e00\u6b21\u6beb\u79d2\u503c\n        long e = System.currentTimeMillis();\n        System.out.println(\"\u7a0b\u5e8f\u5171\u8017\u65f6:\"+(e-s)+\"\u6beb\u79d2\");//\u7a0b\u5e8f\u5171\u8017\u65f6:106\u6beb\u79d2\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/12.%E3%80%90Object%E7%B1%BB%E3%80%81%E5%B8%B8%E7%94%A8API%E3%80%91-%E7%AC%94%E8%AE%B0/code/01_API/src/com/itheima/demo05/System/Demo01System.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44314, "method_name": "configureTasks", "class_name": "ScheduleConfiguration", "params": ["ScheduledTaskRegistrar"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void configureTasks(ScheduledTaskRegistrar scheduledTaskRegistrar) {\n        scheduledTaskRegistrar.setScheduler(Executors.newScheduledThreadPool(1));\n    }", "url": "https://raw.githubusercontent.com/jiangvin/webtank/master/websocket/src/main/java/com/integration/socket/configuration/ScheduleConfiguration.java", "stars": "2", "class_props": {"extends": null, "implements": ["SchedulingConfigurer"], "modifiers": ["public"]}}, {"id": 44315, "method_name": "call", "class_name": "WebAuthCallable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String call() {\n        if (encrypted == null || signature == null) {\n            return null;\n        }\n        final Callable<Packet> callable = new BlockingCallable(\n                new Packet.Builder(CONSTANTS.METHODS.WEB_AUTH)\n                        .addHexPayload(CONSTANTS.TAGS.ENCRYPTED, Hex.toHexString(encrypted))\n                        .addHexPayload(CONSTANTS.TAGS.SIGNATURE, Hex.toHexString(signature)).build());\n        final Packet result;\n        try {\n            result = callable.call();\n            final Payload payload = result.getPayload(CONSTANTS.TAGS.DECRYPTED);\n            if (payload != null) {\n                return payload.toUtf8();\n            }\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/app/src/main/java/com/cobo/cold/callables/WebAuthCallable.java", "stars": "13", "class_props": {"extends": null, "implements": ["Callable"], "modifiers": ["public"]}}, {"id": 44316, "method_name": "getUserLanguage", "class_name": "SharedStorge", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "Enums", "snippet": "    public static Enums.Language getUserLanguage(Context context){\n        // index wise value NONE = 0, BD = 1, EN = 2\n        SharedPreferences sharedPreferences = getStorage(context);\n        int sharedValue = sharedPreferences.getInt(KEY_LANGUAGE, DEFAULT_INT);\n        switch (sharedValue){\n            case 1: return Enums.Language.BD;\n            case 2: return Enums.Language.EN;\n            default:return Enums.Language.NONE;\n        }\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/utils/SharedStorge.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44317, "method_name": "setUserLanguage", "class_name": "SharedStorge", "params": ["Context", "Enums"], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean setUserLanguage(Context context, Enums.Language language) {\n        SharedPreferences sharedPreferences = getStorage(context);\n        SharedPreferences.Editor editor = sharedPreferences.edit();\n        if(language == Enums.Language.BD){\n            editor.putInt(KEY_LANGUAGE, 1);\n            return editor.commit();\n        }\n        else if(language == Enums.Language.EN){\n            editor.putInt(KEY_LANGUAGE, 2);\n            return editor.commit();\n        }\n        editor.commit();\n        return false;\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/utils/SharedStorge.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44318, "method_name": "getStorage", "class_name": "SharedStorge", "params": ["Context"], "throws": null, "modifiers": ["static", "private"], "return_type": "SharedPreferences", "snippet": "    private static SharedPreferences getStorage(Context context){\n        return context.getSharedPreferences(STORE_NAME, Context.MODE_PRIVATE);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/utils/SharedStorge.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44319, "method_name": "finishRequest", "class_name": "Stream", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void finishRequest() throws IOException {\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/Stream.java", "stars": "23", "class_props": {"extends": null, "implements": ["TcpStream"], "modifiers": ["public"]}}, {"id": 44320, "method_name": "cancel", "class_name": "Stream", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void cancel() {\n        streamAllocation.release();\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/Stream.java", "stars": "23", "class_props": {"extends": null, "implements": ["TcpStream"], "modifiers": ["public"]}}, {"id": 44321, "method_name": "writeRequest", "class_name": "Stream", "params": ["Request"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void writeRequest(Request request) throws IOException {\n        if (channel!=null&&channel.isActive()){\n           // System.out.println(\" requestTag: \"+request.requestTag+\" request body: \"+request.requestBody.toString());\n            channel.writeAndFlush(request.requestBody);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/Stream.java", "stars": "23", "class_props": {"extends": null, "implements": ["TcpStream"], "modifiers": ["public"]}}, {"id": 44322, "method_name": "readResponse", "class_name": "Stream", "params": ["Request"], "throws": null, "modifiers": ["public"], "return_type": "Response", "snippet": "    public Response readResponse(Request request) {\n        LRUMap<String,Object> lruMap= streamAllocation.connection().lruMap();\n        if (lruMap.containsKey(request.requestTag)){\n            Object object=lruMap.get(request.requestTag);\n           return new Response.Builder().setCode(Response.SUCCESS).setRequest(request).setResponse((GeneratedMessageV3) object).build();\n        }\n\n        return null;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/Stream.java", "stars": "23", "class_props": {"extends": null, "implements": ["TcpStream"], "modifiers": ["public"]}}, {"id": 44323, "method_name": "subsequentResponse", "class_name": "Stream", "params": ["Request", "SubsequentCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void subsequentResponse(Request request, SubsequentCallback callback) {\n         streamAllocation.connection().registerAttentionResponse(request.requestTag, new RealConnection.OnResponseListener() {\n            @Override\n            public void onResponseArrive(String tag, Object o) throws IOException {\n              Response response=   new Response.Builder().setCode(Response.SUCCESS).setRequest(request).setResponse((GeneratedMessageV3) o).build();\n                callback.onSubsequentResponse(response);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/Stream.java", "stars": "23", "class_props": {"extends": null, "implements": ["TcpStream"], "modifiers": ["public"]}}, {"id": 44324, "method_name": "onCreate", "class_name": "PullToRefreshViewPagerActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onCreate(Bundle savedInstanceState) {\n\t\tsuper.onCreate(savedInstanceState);\n\t\tsetContentView(R.layout.activity_ptr_viewpager);\n\n\t\tmPullToRefreshViewPager = (PullToRefreshViewPager) findViewById(R.id.pull_refresh_viewpager);\n\t\tmPullToRefreshViewPager.setOnRefreshListener(this);\n\n\t\tViewPager vp = mPullToRefreshViewPager.getRefreshableView();\n\t\tvp.setAdapter(new SamplePagerAdapter());\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public"]}}, {"id": 44325, "method_name": "onRefresh", "class_name": "PullToRefreshViewPagerActivity", "params": ["PullToRefreshBase<ViewPager>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onRefresh(PullToRefreshBase<ViewPager> refreshView) {\n\t\tnew GetDataTask().execute();\n\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "Activity", "implements": ["OnRefreshListener"], "modifiers": ["public"]}}, {"id": 44326, "method_name": "getCount", "class_name": "SamplePagerAdapter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\t\tpublic int getCount() {\n\t\t\treturn sDrawables.length;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["static"]}}, {"id": 44327, "method_name": "instantiateItem", "class_name": "SamplePagerAdapter", "params": ["ViewGroup", "int"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "\t\tpublic View instantiateItem(ViewGroup container, int position) {\n\t\t\tImageView imageView = new ImageView(container.getContext());\n\t\t\timageView.setImageResource(sDrawables[position]);\n\n\t\t\t// Now just add ImageView to ViewPager and return it\n\t\t\tcontainer.addView(imageView, LayoutParams.MATCH_PARENT, LayoutParams.MATCH_PARENT);\n\n\t\t\treturn imageView;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["static"]}}, {"id": 44328, "method_name": "destroyItem", "class_name": "SamplePagerAdapter", "params": ["ViewGroup", "int", "Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\t\tpublic void destroyItem(ViewGroup container, int position, Object object) {\n\t\t\tcontainer.removeView((View) object);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["static"]}}, {"id": 44329, "method_name": "isViewFromObject", "class_name": "SamplePagerAdapter", "params": ["View", "Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isViewFromObject(View view, Object object) {\n\t\t\treturn view == object;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "PagerAdapter", "implements": null, "modifiers": ["static"]}}, {"id": 44330, "method_name": "doInBackground", "class_name": "GetDataTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "Void", "snippet": "\t\tprotected Void doInBackground(Void... params) {\n\t\t\t// Simulates a background job.\n\t\t\ttry {\n\t\t\t\tThread.sleep(4000);\n\t\t\t} catch (InterruptedException e) {\n\t\t\t}\n\t\t\treturn null;\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 44331, "method_name": "onPostExecute", "class_name": "GetDataTask", "params": ["Void"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\t\tprotected void onPostExecute(Void result) {\n\t\t\tmPullToRefreshViewPager.onRefreshComplete();\n\t\t\tsuper.onPostExecute(result);\n\t\t}", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/Android-PullToRefresh-master/sample/src/com/handmark/pulltorefresh/samples/PullToRefreshViewPagerActivity.java", "stars": "74", "class_props": {"extends": "AsyncTask", "implements": null, "modifiers": ["private"]}}, {"id": 44332, "method_name": "onInflateFinished", "class_name": "AsyncLayoutInflater_OnInflateFinishedListenerImplementor", "params": ["android", "int", "android"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onInflateFinished (android.view.View p0, int p1, android.view.ViewGroup p2)\n\t{\n\t\tn_onInflateFinished (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/AsyncLayoutInflater_OnInflateFinishedListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44333, "method_name": "n_onInflateFinished", "class_name": "AsyncLayoutInflater_OnInflateFinishedListenerImplementor", "params": ["android", "int", "android"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onInflateFinished (android.view.View p0, int p1, android.view.ViewGroup p2);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/AsyncLayoutInflater_OnInflateFinishedListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44334, "method_name": "monodroidAddReference", "class_name": "AsyncLayoutInflater_OnInflateFinishedListenerImplementor", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/AsyncLayoutInflater_OnInflateFinishedListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44335, "method_name": "monodroidClearReferences", "class_name": "AsyncLayoutInflater_OnInflateFinishedListenerImplementor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Debug/90/android/src/mono/android/support/v4/view/AsyncLayoutInflater_OnInflateFinishedListenerImplementor.java", "stars": "2", "class_props": {"extends": "java", "implements": ["mono", "android"], "modifiers": ["public"]}}, {"id": 44336, "method_name": "getCpuUsage", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "  public double getCpuUsage() {\n    return this.cpuUsage;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44337, "method_name": "setCpuUpsage", "class_name": "ExecutorInfo", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setCpuUpsage(final double value) {\n    this.cpuUsage = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44338, "method_name": "getRemainingMemoryPercent", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "double", "snippet": "  public double getRemainingMemoryPercent() {\n    return this.remainingMemoryPercent;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44339, "method_name": "setRemainingMemoryPercent", "class_name": "ExecutorInfo", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setRemainingMemoryPercent(final double value) {\n    this.remainingMemoryPercent = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44340, "method_name": "getRemainingMemoryInMB", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getRemainingMemoryInMB() {\n    return this.remainingMemoryInMB;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44341, "method_name": "setRemainingMemoryInMB", "class_name": "ExecutorInfo", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setRemainingMemoryInMB(final long value) {\n    this.remainingMemoryInMB = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44342, "method_name": "getRemainingFlowCapacity", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getRemainingFlowCapacity() {\n    return this.remainingFlowCapacity;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44343, "method_name": "setRemainingFlowCapacity", "class_name": "ExecutorInfo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setRemainingFlowCapacity(final int value) {\n    this.remainingFlowCapacity = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44344, "method_name": "getLastDispatchedTime", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getLastDispatchedTime() {\n    return this.lastDispatchedTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44345, "method_name": "setLastDispatchedTime", "class_name": "ExecutorInfo", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setLastDispatchedTime(final long value) {\n    this.lastDispatchedTime = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44346, "method_name": "getNumberOfAssignedFlows", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getNumberOfAssignedFlows() {\n    return this.numberOfAssignedFlows;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44347, "method_name": "setNumberOfAssignedFlows", "class_name": "ExecutorInfo", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNumberOfAssignedFlows(final int value) {\n    this.numberOfAssignedFlows = value;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44348, "method_name": "hashCode", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    int result;\n    long temp;\n    temp = Double.doubleToLongBits(this.remainingMemoryPercent);\n    result = (int) (temp ^ (temp >>> 32));\n    result = 31 * result + (int) (this.remainingMemoryInMB ^ (this.remainingMemoryInMB >>> 32));\n    result = 31 * result + this.remainingFlowCapacity;\n    result = 31 * result + this.numberOfAssignedFlows;\n    result = 31 * result + (int) (this.lastDispatchedTime ^ (this.lastDispatchedTime >>> 32));\n    temp = Double.doubleToLongBits(this.cpuUsage);\n    result = 31 * result + (int) (temp ^ (temp >>> 32));\n    return result;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44349, "method_name": "equals", "class_name": "ExecutorInfo", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(final Object obj) {\n    if (obj instanceof ExecutorInfo) {\n      boolean result = true;\n      final ExecutorInfo stat = (ExecutorInfo) obj;\n\n      result &= this.remainingMemoryInMB == stat.remainingMemoryInMB;\n      result &= this.cpuUsage == stat.cpuUsage;\n      result &= this.remainingFlowCapacity == stat.remainingFlowCapacity;\n      result &= this.remainingMemoryPercent == stat.remainingMemoryPercent;\n      result &= this.numberOfAssignedFlows == stat.numberOfAssignedFlows;\n      result &= this.lastDispatchedTime == stat.lastDispatchedTime;\n      return result;\n    }\n    return false;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44350, "method_name": "toString", "class_name": "ExecutorInfo", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"ExecutorInfo{\" +\n        \"remainingMemoryPercent=\" + this.remainingMemoryPercent +\n        \", remainingMemoryInMB=\" + this.remainingMemoryInMB +\n        \", remainingFlowCapacity=\" + this.remainingFlowCapacity +\n        \", numberOfAssignedFlows=\" + this.numberOfAssignedFlows +\n        \", lastDispatchedTime=\" + this.lastDispatchedTime +\n        \", cpuUsage=\" + this.cpuUsage +\n        '}';\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/executor/ExecutorInfo.java", "stars": "18", "class_props": {"extends": null, "implements": ["java"], "modifiers": ["public"]}}, {"id": 44351, "method_name": "toString", "class_name": "StringObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        if (value == null) {\n            return null;\n        } else {\n            return '\"' + value + '\"';\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/StringObject.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 44352, "method_name": "getTarget", "class_name": "BranchInstruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Instruction", "snippet": "    public Instruction getTarget() {\n        return target;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/BranchInstruction.java", "stars": "4", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 44353, "method_name": "setTarget", "class_name": "BranchInstruction", "params": ["Instruction"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTarget(Instruction target) {\n        this.target = target;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/BranchInstruction.java", "stars": "4", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 44354, "method_name": "isBranch", "class_name": "BranchInstruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isBranch() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/BranchInstruction.java", "stars": "4", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 44355, "method_name": "getOperandString", "class_name": "BranchInstruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOperandString() {\n        if (target != null && target.getLabel() != null) {\n            return target.getLabel().toString();\n        }\n        switch (mode) {\n        case MODE_RELATIVE:\n            return String.format(\"PC+0x%02X\", (byte)operand);\n        case MODE_INDEXED:\n            return String.format(\"X+0x%02X\", (byte)operand);\n        case MODE_EXTENDED:\n            return String.format(\"0x%04X\", (short)operand);\n        default:\n            return \"???\";\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/BranchInstruction.java", "stars": "4", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 44356, "method_name": "getTargetAddress", "class_name": "BranchInstruction", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getTargetAddress() {\n        switch (mode) {\n        case MODE_IMMEDIATE:\n            return operand;\n        case MODE_EXTENDED:\n            return operand;\n        case MODE_RELATIVE:\n            return address + (byte)operand + 2;\n        default:\n            return -1;\n        }\n    }", "url": "https://raw.githubusercontent.com/kemusiro/jr100-emulator-v2/master/src/jp/asamomiji/assembler/BranchInstruction.java", "stars": "4", "class_props": {"extends": "Instruction", "implements": null, "modifiers": ["public"]}}, {"id": 44357, "method_name": "getInt", "class_name": "Bundle", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInt(String key) {\n        String value = super.value.getProperty(key);\n        if (value == null) {\n            throw new UnicornException(\"key=\" + key);\n        }\n\n        return Integer.parseInt(value, 16);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/api/Bundle.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 44358, "method_name": "getString", "class_name": "Bundle", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String key) {\n        String value = super.value.getProperty(key);\n        if (value == null) {\n            throw new UnicornException(\"key=\" + key);\n        }\n\n        return value;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/api/Bundle.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 44359, "method_name": "onCreate", "class_name": "ShareExposureActivity", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n\n    setContentView(R.layout.activity_share_exposure);\n\n    if (savedInstanceState != null) {\n      // If this is a configuration change such as rotation, restore the ShareFragment that was\n      // previously saved in onSaveInstanceState\n      FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();\n      fragmentTransaction.replace(\n          R.id.share_exposure_fragment,\n          Objects.requireNonNull(getSupportFragmentManager()\n              .getFragment(savedInstanceState, SAVED_INSTANCE_STATE_FRAGMENT_KEY)),\n          SHARE_EXPOSURE_FRAGMENT_TAG);\n      fragmentTransaction.commit();\n    } else {\n      // This is a fresh launch, so create a new ShareFragment and display it.\n      FragmentTransaction fragmentTransaction = getSupportFragmentManager().beginTransaction();\n      fragmentTransaction.replace(R.id.share_exposure_fragment, new ShareExposureStartFragment(),\n          SHARE_EXPOSURE_FRAGMENT_TAG);\n      fragmentTransaction.commit();\n    }\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/main/java/com/google/android/apps/exposurenotification/activities/ShareExposureActivity.java", "stars": "205", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44360, "method_name": "onResume", "class_name": "ShareExposureActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onResume() {\n    super.onResume();\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/main/java/com/google/android/apps/exposurenotification/activities/ShareExposureActivity.java", "stars": "205", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44361, "method_name": "onActivityResult", "class_name": "ShareExposureActivity", "params": ["int", "int", "Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\n    super.onActivityResult(requestCode, resultCode, data);\n    Fragment fragment = getSupportFragmentManager().findFragmentByTag(SHARE_EXPOSURE_FRAGMENT_TAG);\n    if (fragment != null) {\n      fragment.onActivityResult(requestCode, resultCode, data);\n    }\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/main/java/com/google/android/apps/exposurenotification/activities/ShareExposureActivity.java", "stars": "205", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44362, "method_name": "onSaveInstanceState", "class_name": "ShareExposureActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void onSaveInstanceState(@NonNull Bundle outState) {\n    super.onSaveInstanceState(outState);\n    getSupportFragmentManager()\n        .putFragment(\n            outState,\n            SAVED_INSTANCE_STATE_FRAGMENT_KEY,\n            Objects.requireNonNull(\n                getSupportFragmentManager().findFragmentByTag(SHARE_EXPOSURE_FRAGMENT_TAG)));\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/main/java/com/google/android/apps/exposurenotification/activities/ShareExposureActivity.java", "stars": "205", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44363, "method_name": "onRequestPermissionsResult", "class_name": "ShareExposureActivity", "params": ["int", "String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void onRequestPermissionsResult(\n      int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\n    // Propagate to the fragments.\n    super.onRequestPermissionsResult(requestCode, permissions, grantResults);\n  }", "url": "https://raw.githubusercontent.com/google/exposure-notifications-android/master/app/src/main/java/com/google/android/apps/exposurenotification/activities/ShareExposureActivity.java", "stars": "205", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44364, "method_name": "main", "class_name": "AdvancedBuildSample", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        // Create nodes\n        ServerNode n1 = new ServerNode(\"192.168.1.1\", 80);\n        ServerNode n2 = new ServerNode(\"192.168.1.132\", 80);\n        ServerNode n3 = new ServerNode(\"aws\", \"11.32.98.1\", 9231);\n        ServerNode n4 = new ServerNode(\"aws\", \"11.32.328.1\", 9231);\n\n        // Build hash ring\n        ConsistentHash<ServerNode> ring = HashRing.<ServerNode>newBuilder()\n                .name(\"file_cache_hash_ring\")       // set hash ring name\n                .hasher(DefaultHasher.METRO_HASH)   // hash function to distribute partitions\n                .partitionRate(10)                  // number of partitions per node\n                .nodes(Arrays.asList(n1, n2))       // initial nodes list\n                .build();\n\n        // Add n3 and n4 nodes to the ring\n        ring.addAll(Arrays.asList(n3, n4));\n        sendRequest(ring);\n\n        // Remove n1 from the ring\n        ring.remove(n1);\n        sendRequest(ring);\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/AdvancedBuildSample.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44365, "method_name": "sendRequest", "class_name": "AdvancedBuildSample", "params": ["ConsistentHash<ServerNode>"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void sendRequest(ConsistentHash<ServerNode> ring) {\n        for (int i = 1; i <= 10; i++) {\n            String key = \"key_\" + i;\n            Set<ServerNode> nodes = ring.locate(key, 2);\n\n            System.out.println(\"Send \" + i + \" request to: \");\n            nodes.forEach(n -> System.out.println(\"\\t\\t\" + n));\n        }\n    }", "url": "https://raw.githubusercontent.com/ishugaliy/allgood-consistent-hash/master/samples/src/main/java/org/ishugaliy/allgood/consistent/hash/samples/AdvancedBuildSample.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44366, "method_name": "castWithPrimitives", "class_name": "Casts", "params": ["Class<?>", "Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "  public static Object castWithPrimitives(Class<?> type, Object value) {\n    // these values can't be casted from java.lang.Integer\n    if (type == short.class) {\n      return ((Integer) value).shortValue();\n    } else if (type == boolean.class) {\n      return ((Integer) value).intValue() == 0 ? true : false;\n    } else if (type == char.class) {\n      return (char) ((Integer) value).intValue();\n    } else if (type == byte.class) {\n      return ((Integer) value).byteValue();\n    } else if (type == float.class) {\n      return ((Integer) value).floatValue();\n    } else if (type == double.class) {\n      return ((Integer) value).doubleValue();\n    } else if (type == long.class) {\n      return ((Integer) value).longValue();\n    } else if (type == int.class) {\n      return ((Integer) value).intValue();\n    }\n    return type.cast(value);\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/util/reflection/Casts.java", "stars": "140", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44367, "method_name": "toNumber", "class_name": "Casts", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Object", "snippet": "  public static Object toNumber(Object object) {\n    if (object instanceof Character) {\n      return (int) ((Character) object).charValue();\n    }\n    if (object instanceof Boolean) {\n      return ((Boolean) object) ? 1 : 0;\n    }\n\n    return object;\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/util/reflection/Casts.java", "stars": "140", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44368, "method_name": "toInteger", "class_name": "Casts", "params": ["Object"], "throws": null, "modifiers": ["public", "static"], "return_type": "Integer", "snippet": "  public static Integer toInteger(Object object) {\n    if (object instanceof Character) {\n      return (int) ((Character) object).charValue();\n    }\n    if (object instanceof Boolean) {\n      return ((Boolean) object) ? 1 : 0;\n    }\n    if (object instanceof Number) {\n      return ((Number) object).intValue();\n    }\n    throw new IllegalArgumentException(object.getClass().getName());\n  }", "url": "https://raw.githubusercontent.com/GraxCode/threadtear/master/src/me/nov/threadtear/util/reflection/Casts.java", "stars": "140", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44369, "method_name": "getDao", "class_name": "DataSourceServiceImpl", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "IBaseDao<DataSource>", "snippet": "    protected IBaseDao<DataSource> getDao() {\n        return dataSourceDao;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44370, "method_name": "update", "class_name": "DataSourceServiceImpl", "params": ["DataSource"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean update(DataSource dataSource) {\n        DataSource oldDs = dataSourceDao.selectOneAndLock(dataSource.getId());\n        Object oldDsAuthCreden = null;\n        if(null == dataSource.getAuthCreden()){\n            dataSource.setAuthCreden(oldDs.getAuthCreden());\n        }else {\n            oldDsAuthCreden = oldDs.getAuthCreden();\n            if(!isUrl(dataSource.getAuthCreden())){\n                dataSource.setAuthCreden(encodeBase64(dataSource.getAuthCreden()));\n            }\n        }\n        List<String> authScopes = dataSource.getAuthScopes();\n        if(null != authScopes){\n            permissionDao.update(new DataSourcePermission(dataSource.getId(), authScopes));\n        }\n        boolean result = super.update(dataSource);\n        if(result && oldDsAuthCreden != null &&\n                isUrl(String.valueOf(oldDsAuthCreden))) {\n            try {\n                AppUtil.removeFile(String.valueOf(oldDsAuthCreden));\n            }catch(Exception e){\n                LOG.error(\"Remove authentication file Error: \" + e.getMessage());\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44371, "method_name": "add", "class_name": "DataSourceServiceImpl", "params": ["DataSource"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean add(DataSource dataSource) {\n        String authCreden = dataSource.getAuthCreden();\n        if(StringUtils.isNotBlank(authCreden) && !isUrl(authCreden)){\n            dataSource.setAuthCreden(encodeBase64(dataSource.getAuthCreden()));\n        }\n        List<String> authScopes = dataSource.getAuthScopes();\n        boolean result = super.add(dataSource);\n        if(result){\n            //Add permissions\n            DataSourcePermission permission =  null == authScopes ? new DataSourcePermission(dataSource.getId())\n                    : new DataSourcePermission(dataSource.getId(), authScopes);\n            permissionDao.insertOne(permission);\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44372, "method_name": "delete", "class_name": "DataSourceServiceImpl", "params": ["List<Object>"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean delete(List<Object> ids) {\n        boolean result = true;\n        if(!ids.isEmpty()) {\n            List<String> associatedFiles = new ArrayList<>();\n            for (Object id : ids) {\n                DataSource dataSource = dataSourceDao.selectOneAndLock(id);\n                if (null != dataSource) {\n                    String authCreden = dataSource.getAuthCreden();\n                    if (StringUtils.isNotBlank(authCreden) && isUrl(authCreden)) {\n                        associatedFiles.add(authCreden);\n                    }\n                }\n            }\n            result = super.delete(ids) && (permissionDao.deleteBatch(ids) > 0);\n            if (result && !associatedFiles.isEmpty()) {\n                associatedFiles.forEach(filePath -> {\n                    try {\n                        AppUtil.removeFile(filePath);\n                    } catch (Exception e) {\n                        LOG.error(\"Remove authentication file Error: \" + e.getMessage());\n                    }\n                });\n            }\n        }\n        return result;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44373, "method_name": "getDetail", "class_name": "DataSourceServiceImpl", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "    public DataSource getDetail(Object id){\n        DataSource dataSource = getDao().selectOne(id);\n        if(null != dataSource) {\n            fillDataSourceWithModel(dataSource, dataSource.getModelId());\n            dataSource.setParameter(Json.toJson(dataSource.getParameterMap(), null));\n        }\n        return dataSource;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44374, "method_name": "getDecryptedSimpleOne", "class_name": "DataSourceServiceImpl", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "    public DataSource getDecryptedSimpleOne(Object id) {\n        DataSource dataSource = getDao().selectOne(id);\n        if(null != dataSource && StringUtils.isNotBlank(dataSource.getAuthCreden()) &&\n                !isUrl(dataSource.getAuthCreden())){\n            dataSource.setAuthCreden(decodeBase64(dataSource.getAuthCreden()));\n        }\n        return dataSource;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44375, "method_name": "store", "class_name": "DataSourceServiceImpl", "params": ["MultipartFile", "String", "boolean"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "File", "snippet": "    public File store(MultipartFile authFile, String authType, boolean disposable) throws IOException{\n        String newName = (disposable? PERSIST_DISPOSABLE_PREFIX : \"\") +\n                AppUtil.newFileName(authFile.getOriginalFilename());\n        File storeFile = new File(conf.getStorePersist(authType) + newName);\n        new File(conf.getStorePersist(authType)).mkdirs();\n        if (storeFile.createNewFile()) {\n            FileUtils.copyInputStreamToFile(authFile.getInputStream(), storeFile);\n        }else{\n            throw new RuntimeException(\"Cannot create new file:\"+storeFile.getPath()+\", check if the system have \" +\n                    \"the right permission\");\n        }\n        return storeFile;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44376, "method_name": "store", "class_name": "DataSourceServiceImpl", "params": ["MultipartFile", "String"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "File", "snippet": "    public File store(MultipartFile authFile, String authType) throws IOException {\n        return store(authFile, authType, false);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44377, "method_name": "addDataSourceModelParamsToMap", "class_name": "DataSourceServiceImpl", "params": ["Map<String,Object>", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addDataSourceModelParamsToMap(Map<String, Object> map, String authEntity, String authCreden, String modelName){\n        DataSourceModel modelAssembly = modelDao.selectOneByName(modelName);\n        addDataSourceModelParamsToMap(map, authEntity, authCreden,modelAssembly);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44378, "method_name": "addDataSourceModelParamsToMap", "class_name": "DataSourceServiceImpl", "params": ["Map<String,Object>", "String", "String", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void addDataSourceModelParamsToMap(Map<String, Object> map,\n                                              String authEntity, String authCreden, Integer modelId){\n        DataSourceModel modelAssembly = modelDao.selectOne(modelId);\n        addDataSourceModelParamsToMap(map, authEntity, authCreden,modelAssembly);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44379, "method_name": "addDataSourceModelParamsToMap", "class_name": "DataSourceServiceImpl", "params": ["Map<String,Object>", "String", "String", "DataSourceModel"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addDataSourceModelParamsToMap(Map<String, Object> map,\n                                               String authEntity, String authCreden, DataSourceModel modelAssembly){\n        if(null != modelAssembly) {\n            Map<String, Object> params = modelAssembly.resolveParams();\n            if (params.containsKey(Constants.PARAM_AUTH_TYPE)) {\n                String authType = String.valueOf(params.get(Constants.PARAM_AUTH_TYPE));\n                String authEntityKey = null;\n                String authCredenKey = null;\n                String authEntityValue = authEntity;\n                switch (authType) {\n                    case AuthType.KERBERS:\n                        authCredenKey = Constants.PARAM_KB_FILE_PATH;\n                        authEntityKey = Constants.PARAM_KERBEROS_FILE_PRINCILE;\n                        if(StringUtils.isNotBlank(\n                                String.valueOf(params.getOrDefault(Constants.PARAM_KERBEROS_HOST_NAME, \"\")))){\n                            authEntityValue = authEntity + IOUtils.DIR_SEPARATOR +\n                                    params.getOrDefault(Constants.PARAM_KERBEROS_HOST_NAME, \"\");\n                        }\n                        authEntityValue +=  \"@\" +\n                                params.getOrDefault(Constants.PARAM_KERBEROS_REALM_INFO, \"\");\n                        params.put(Constants.PARAM_KERBEROS_BOOLEAN, true);\n                        break;\n                    case AuthType.LDAP:\n                        authEntityKey = Constants.PARAM_LADP_USERNAME;\n                        authCredenKey = Constants.PARAM_LADP_PASSWORD;\n                        break;\n                    case AuthType.KEYFILE:\n                        authCredenKey = Constants.PARAM_KEY_FILE_PATH;\n                        authEntityKey = Constants.PARAM_DEFAULT_USERNAME;\n                        break;\n                    case AuthType.DEFAULT:\n                        authEntityKey = Constants.PARAM_DEFAULT_USERNAME;\n                        authCredenKey = Constants.PARAM_DEFAULT_PASSWORD;\n                        break;\n                    default:\n                        break;\n                }\n                if(StringUtils.isNotBlank(authEntity) && StringUtils.isNotBlank(authEntityKey)){\n                    params.put(authEntityKey, authEntityValue);\n                }\n                if(StringUtils.isNotBlank(authCreden) && StringUtils.isNotBlank(authCredenKey)){\n                    params.put(authCredenKey, authCreden);\n                }\n\n            }\n            map.putAll(params);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44380, "method_name": "fillDataSourceWithModel", "class_name": "DataSourceServiceImpl", "params": ["DataSource", "Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void fillDataSourceWithModel(DataSource dataSource, Integer modelId){\n        Map<String, Object> mergedParams = dataSource.resolveParams();\n        Map<String, Object> params = new HashMap<>();\n        addDataSourceModelParamsToMap(params, dataSource.getAuthEntity(), dataSource.getAuthCreden(), modelId);\n        mergedParams = Stream.of(mergedParams, params)\n                .flatMap(map -> map.entrySet().stream())\n                .collect(Collectors.toMap(\n                        Map.Entry::getKey,\n                        entry ->{\n                           Object value = entry.getValue();\n                           return value != null? value : \"\";\n                        },\n                        (v1, v2) -> v1\n                ));\n        //Set parameter map\n        dataSource.setParameterMap(mergedParams);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44381, "method_name": "getPermission", "class_name": "DataSourceServiceImpl", "params": ["Long"], "throws": null, "modifiers": ["public"], "return_type": "List<DataAuthScope>", "snippet": "    public List<DataAuthScope> getPermission(Long id) {\n        DataSourcePermission permission = permissionDao.getPermission(id);\n        if(null != permission){\n            return permission.toDataAuthScopes();\n        }\n        return Collections.singletonList(DataAuthScope.ALL);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44382, "method_name": "bindDataSourceToProject", "class_name": "DataSourceServiceImpl", "params": ["Long", "Long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void bindDataSourceToProject(Long projectId, Long... dataSourceIds) {\n        if(projectId != null && projectId > 0){\n            for (Long dataSourceId : dataSourceIds) {\n                if(null != dataSourceId && dataSourceId > 0){\n                    DataSource dataSource = dataSourceDao.selectOneAndLock(dataSourceId);\n                    bindDataSourceToProject(projectId, dataSource, false);\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44383, "method_name": "bindDataSourceToProject", "class_name": "DataSourceServiceImpl", "params": ["Long", "DataSource", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void bindDataSourceToProject(Long projectId, DataSource dataSource, boolean force){\n        Long existProjectId = dataSource.getProjectId();\n        if(existProjectId != null && existProjectId > 0){\n            if(projectId.equals(existProjectId)){\n                return;\n            }\n            if(!force){\n                throw new EndPointException(\"exchange.data_source.project.unbind.not\", null, dataSource.getSourceName());\n            }\n        }else {\n            dataSourceDao.bindProject(dataSource.getId(), projectId);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44384, "method_name": "encodeBase64", "class_name": "DataSourceServiceImpl", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String encodeBase64(String ldapPwd){\n        try {\n            return CryptoUtils.object2String(ldapPwd);\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44385, "method_name": "decodeBase64", "class_name": "DataSourceServiceImpl", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String decodeBase64(String ldapPwd){\n        try{\n            return (String) CryptoUtils.string2Object(ldapPwd);\n        } catch(Exception e){\n            throw new RuntimeException(e);\n        }\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44386, "method_name": "isUseKb", "class_name": "DataSourceServiceImpl", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isUseKb(Map<String, Object> params){\n        boolean useKb = false;\n        Object v = params.get(PARAM_KERBEROS_BOOLEAN);\n        if(null != v){\n            String isUseKb = String.valueOf(v);\n            useKb = \"true\".equals(isUseKb);\n        }\n        return useKb;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44387, "method_name": "queryFilter", "class_name": "DataSourceServiceImpl", "params": ["DataSource"], "throws": null, "modifiers": ["protected"], "return_type": "DataSource", "snippet": "    protected DataSource queryFilter(DataSource dataSource) {\n        if(null != dataSource) {\n            String authCreden = dataSource.getAuthCreden();\n            if (StringUtils.isBlank(authCreden) || !isUrl(authCreden)) {\n                dataSource.setAuthCreden(null);\n            }\n        }\n        return dataSource;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44388, "method_name": "isUrl", "class_name": "DataSourceServiceImpl", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isUrl(String input){\n        return input.startsWith(URL_PROTOCOL);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/service/impl/DataSourceServiceImpl.java", "stars": "23", "class_props": {"extends": "AbstractGenericService", "implements": ["DataSourceService"], "modifiers": ["public"]}}, {"id": 44389, "method_name": "onCreate", "class_name": "TVBaseActivity", "params": ["Bundle", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void onCreate(Bundle savedInstanceState, int layoutId) {\n\t\tsuper.onCreate(savedInstanceState, layoutId);\n\n\t\tif(!VersionUtils.isUsingCorrectBuild()) {\n\t\t\tnew AlertDialog.Builder(this)\n\t\t\t\t\t.setMessage(butter.droid.base.R.string.wrong_abi)\n\t\t\t\t\t.setCancelable(false)\n\t\t\t\t\t.show();\n\n\t\t\tupdateManager.setListener(new ButterUpdateManager.Listener() {\n\t\t\t\t@Override\n\t\t\t\tpublic void updateAvailable(String updateFile) {\n\t\t\t\t\tIntent installIntent = new Intent(Intent.ACTION_VIEW);\n\t\t\t\t\tinstallIntent.setDataAndType(Uri.parse(\"file://\" + updateFile), ButterUpdateManager.ANDROID_PACKAGE);\n\t\t\t\t\tinstallIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);\n\t\t\t\t\tstartActivity(installIntent);\n\t\t\t\t}\n\t\t\t});\n\t\t\tupdateManager.checkUpdatesManually();\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/base/TVBaseActivity.java", "stars": "4", "class_props": {"extends": "TVTorrentBaseActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44390, "method_name": "onSearchRequested", "class_name": "TVBaseActivity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\tpublic boolean onSearchRequested() {\n\t\tTVSearchActivity.startActivity(this);\n\t\treturn true;\n\t}", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/tv/src/main/java/butter/droid/tv/activities/base/TVBaseActivity.java", "stars": "4", "class_props": {"extends": "TVTorrentBaseActivity", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44391, "method_name": "GetWsUrl", "class_name": "CommonTools", "params": ["List<HostServer>"], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "\tpublic static String GetWsUrl(List<HostServer> hostServers) {\n\t\tfinal StringBuilder stringBuilder = new StringBuilder();\n\t\tString wsUrl= null;\n\t\tif(hostServers.size()>0) {\n\t\t\tHostServer hostServer = hostServers.get((int)Math.random()*hostServers.size());\n\t\t\tstringBuilder.append(\"wss://\");\n\t\t\tstringBuilder.append(hostServer.getHost());\n//\t\t\tstringBuilder.append(\":\");\n//\t\t\tstringBuilder.append(hostServer.getWss_port());\n\t\t\tstringBuilder.append(\"/sub\");\n\t\t\twsUrl = stringBuilder.toString();\n\t\t\tLOGGER.debug(\"\u83b7\u53d6\u7834\u7ad9websocket\u5730\u5740\uff1a\"+wsUrl);\n\t\t}\n\t\treturn wsUrl;\n\t}", "url": "https://raw.githubusercontent.com/BanqiJane/Bilibili_Danmuji/master/Bilibilidanmuji/src/main/java/xyz/acproject/danmuji/common/CommonTools.java", "stars": "3", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44392, "method_name": "convertTimeZoneUtc", "class_name": "BluezoneDate", "params": ["long"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "    private long convertTimeZoneUtc(long time) {\n        Calendar calendar = new GregorianCalendar(TimeZone.getTimeZone(\"UTC\"));\n        calendar.setTimeInMillis(time);\n        calendar.set(Calendar.HOUR_OF_DAY, 0);\n        calendar.set(Calendar.MINUTE, 0);\n        calendar.set(Calendar.SECOND, 0);\n        calendar.set(Calendar.MILLISECOND, 0);\n        return calendar.getTimeInMillis();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneDate.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44393, "method_name": "getTimeStart", "class_name": "BluezoneDate", "params": [], "throws": null, "modifiers": [], "return_type": "long", "snippet": "    long getTimeStart() {\n        return mTime;\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/bluezoneid/BluezoneDate.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44394, "method_name": "doTest", "class_name": "DataProviderTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void doTest() {\n        new DataProvider(21) {\n            @Override\n            protected Object onQuery(int id, Object... msg) {\n                return null;\n            }\n\n            @Override\n            protected boolean onDispatch(int id, Object... msg) {\n                return false;\n            }\n        }.install();\n\n        testGet();\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/DataProviderTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 44395, "method_name": "testGet", "class_name": "DataProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void testGet() {\n        Point pf = DataProvider.of(21).query(1, Point.class, new Point(3, 6));\n        int a = DataProvider.of(21).query(2, int.class);\n        boolean b = DataProvider.of(21).query(3, boolean.class);\n        byte c = DataProvider.of(21).query(4, byte.class);\n        Double d = DataProvider.of(21).query(5, Double.class);\n        TMLog.d(TAG, \"data is : \" + a + \" \" + b + \" \" + c + \" \" + d);\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/DataProviderTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 44396, "method_name": "testObserve", "class_name": "DataProviderTest", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void testObserve() {\n\n        DataProvider.of(21).observe(new DataProvider.DataNotifier() {\n            @Override\n            public boolean onDataDispatch(int id, Object... dara) {\n                return false;\n            }\n        }, this);\n\n    }", "url": "https://raw.githubusercontent.com/iqiyi/TaskManager/master/app/src/main/java/com/qiyi/tm/demo/test/DataProviderTest.java", "stars": "50", "class_props": {"extends": "Test", "implements": null, "modifiers": ["public"]}}, {"id": 44397, "method_name": "start", "class_name": "FlowTriggerService", "params": [], "throws": ["FlowTriggerDependencyPluginException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void start() throws FlowTriggerDependencyPluginException {\n    this.triggerPluginManager.loadAllPlugins();\n    this.recoverIncompleteTriggerInstances();\n    this.cleaner.start();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44398, "method_name": "createDepContext", "class_name": "FlowTriggerService", "params": ["FlowTriggerDependency", "long", "String"], "throws": ["Exception"], "modifiers": ["private"], "return_type": "DependencyInstanceContext", "snippet": "  private DependencyInstanceContext createDepContext(final FlowTriggerDependency dep, final long\n      startTimeInMills, final String triggerInstId) throws Exception {\n    final DependencyCheck dependencyCheck = this.triggerPluginManager\n        .getDependencyCheck(dep.getType());\n    final DependencyInstanceCallback callback = new DependencyInstanceCallbackImpl(this);\n\n    final Map<String, String> depInstConfig = new HashMap<>();\n    depInstConfig.putAll(dep.getProps());\n    depInstConfig.put(FlowTriggerProps.DEP_NAME, dep.getName());\n\n    final DependencyInstanceConfigImpl config = new DependencyInstanceConfigImpl(depInstConfig);\n    final DependencyInstanceRuntimeProps runtimeProps = new DependencyInstanceRuntimePropsImpl\n        (ImmutableMap\n            .of(FlowTriggerProps.START_TIME, String.valueOf(startTimeInMills), FlowTriggerProps\n                .TRIGGER_INSTANCE_ID, triggerInstId));\n    return dependencyCheck.run(config, runtimeProps, callback);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44399, "method_name": "createTriggerInstance", "class_name": "FlowTriggerService", "params": ["FlowTrigger", "String", "int", "String", "Project"], "throws": null, "modifiers": ["private"], "return_type": "TriggerInstance", "snippet": "  private TriggerInstance createTriggerInstance(final FlowTrigger flowTrigger, final String flowId,\n      final int flowVersion, final String submitUser, final Project project) {\n    final String triggerInstId = generateId();\n    final long startTime = System.currentTimeMillis();\n    // create a list of dependency instances\n    final List<DependencyInstance> depInstList = new ArrayList<>();\n    for (final FlowTriggerDependency dep : flowTrigger.getDependencies()) {\n      final String depName = dep.getName();\n      DependencyInstanceContext context = null;\n      try {\n        context = createDepContext(dep, startTime, triggerInstId);\n      } catch (final Exception ex) {\n        logger.error(\"unable to create dependency context for trigger instance[id = {}]\",\n            triggerInstId, ex);\n      }\n      // if dependency instance context fails to be created, then its status is cancelled and\n      // cause is failure\n      final Status status = context == null ? Status.CANCELLED : Status.RUNNING;\n      final CancellationCause cause =\n          context == null ? CancellationCause.FAILURE : CancellationCause.NONE;\n      final long endTime = context == null ? System.currentTimeMillis() : 0;\n      final DependencyInstance depInst = new DependencyInstance(depName, startTime, endTime,\n          context, status, cause);\n      depInstList.add(depInst);\n    }\n\n    final TriggerInstance triggerInstance = new TriggerInstance(triggerInstId, flowTrigger,\n        flowId, flowVersion, submitUser, depInstList, Constants.UNASSIGNED_EXEC_ID, project);\n\n    return triggerInstance;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44400, "method_name": "generateId", "class_name": "FlowTriggerService", "params": [], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "  private String generateId() {\n    return UUID.randomUUID().toString();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44401, "method_name": "scheduleKill", "class_name": "FlowTriggerService", "params": ["TriggerInstance", "Duration", "CancellationCause"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void scheduleKill(final TriggerInstance triggerInst, final Duration duration, final\n  CancellationCause cause) {\n    logger\n        .debug(\"cancel trigger instance {} in {} secs\", triggerInst.getId(), duration\n            .getSeconds());\n    this.timeoutService.schedule(() -> {\n      cancelTriggerInstance(triggerInst, cause);\n    }, duration.toMillis(), TimeUnit.MILLISECONDS);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44402, "method_name": "getRunningTriggers", "class_name": "FlowTriggerService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<TriggerInstance>", "snippet": "  public Collection<TriggerInstance> getRunningTriggers() {\n    return this.flowTriggerInstanceLoader.getRunning();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44403, "method_name": "getRecentlyFinished", "class_name": "FlowTriggerService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Collection<TriggerInstance>", "snippet": "  public Collection<TriggerInstance> getRecentlyFinished() {\n    return this.flowTriggerInstanceLoader.getRecentlyFinished(RECENTLY_FINISHED_TRIGGER_LIMIT);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44404, "method_name": "findTriggerInstanceById", "class_name": "FlowTriggerService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "TriggerInstance", "snippet": "  public TriggerInstance findTriggerInstanceById(final String triggerInstanceId) {\n    return this.flowTriggerInstanceLoader.getTriggerInstanceById(triggerInstanceId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44405, "method_name": "findTriggerInstanceByExecId", "class_name": "FlowTriggerService", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "TriggerInstance", "snippet": "  public TriggerInstance findTriggerInstanceByExecId(final int flowExecId) {\n    return this.flowTriggerInstanceLoader.getTriggerInstanceByFlowExecId(flowExecId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44406, "method_name": "isDoneButFlowNotExecuted", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isDoneButFlowNotExecuted(final TriggerInstance triggerInstance) {\n    return triggerInstance.getStatus() == Status.SUCCEEDED && triggerInstance.getFlowExecId() ==\n        Constants.UNASSIGNED_EXEC_ID;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44407, "method_name": "recoverRunningOrCancelling", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void recoverRunningOrCancelling(final TriggerInstance triggerInstance) {\n    final FlowTrigger flowTrigger = triggerInstance.getFlowTrigger();\n    for (final DependencyInstance depInst : triggerInstance.getDepInstances()) {\n      if (depInst.getStatus() == Status.RUNNING || depInst.getStatus() == Status.CANCELLING) {\n        final FlowTriggerDependency dependency = flowTrigger\n            .getDependencyByName(depInst.getDepName());\n        DependencyInstanceContext context = null;\n        try {\n          //recreate dependency instance context\n          context = createDepContext(dependency, depInst.getStartTime(), depInst\n              .getTriggerInstance().getId());\n        } catch (final Exception ex) {\n          logger\n              .error(\n                  \"unable to create dependency context for trigger instance[id =\"\n                      + \" {}]\", triggerInstance.getId(), ex);\n        }\n        depInst.setDependencyInstanceContext(context);\n        if (context == null) {\n          depInst.setStatus(Status.CANCELLED);\n          depInst.setCancellationCause(CancellationCause.FAILURE);\n        }\n      }\n    }\n\n    if (triggerInstance.getStatus() == Status.CANCELLING) {\n      addToRunningListAndCancel(triggerInstance);\n    } else if (triggerInstance.getStatus() == Status.RUNNING) {\n      final long remainingTime = remainingTimeBeforeTimeout(triggerInstance);\n      addToRunningListAndScheduleKill(triggerInstance, Duration.ofMillis(remainingTime).plus\n          (CANCELLING_GRACE_PERIOD_AFTER_RESTART), CancellationCause.TIMEOUT);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44408, "method_name": "recoverTriggerInstance", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void recoverTriggerInstance(final TriggerInstance triggerInstance) {\n    this.flowTriggerExecutorService.submit(() -> recover(triggerInstance));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44409, "method_name": "recover", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void recover(final TriggerInstance triggerInstance) {\n    logger.info(\"recovering pending trigger instance {}\", triggerInstance.getId());\n    if (isDoneButFlowNotExecuted(triggerInstance)) {\n      // if trigger instance succeeds but the associated flow hasn't been started yet, then start\n      // the flow\n      this.triggerProcessor.processSucceed(triggerInstance);\n    } else {\n      recoverRunningOrCancelling(triggerInstance);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44410, "method_name": "recoverIncompleteTriggerInstances", "class_name": "FlowTriggerService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void recoverIncompleteTriggerInstances() {\n    final Collection<TriggerInstance> unfinishedTriggerInstances = this.flowTriggerInstanceLoader\n        .getIncompleteTriggerInstances();\n    for (final TriggerInstance triggerInstance : unfinishedTriggerInstances) {\n      if (triggerInstance.getFlowTrigger() != null) {\n        recoverTriggerInstance(triggerInstance);\n      } else {\n        logger.error(\"cannot recover the trigger instance {}, flow trigger is null,\"\n            + \" cancelling it \", triggerInstance.getId());\n\n        //finalize unrecoverable trigger instances\n        // the following situation would cause trigger instances unrecoverable:\n        // 1. project A with flow A associated with flow trigger A is uploaded\n        // 2. flow trigger A starts to run\n        // 3. project A with flow B without any flow trigger is uploaded\n        // 4. web server restarts\n        // in this case, flow trigger instance of flow trigger A will be equipped with latest\n        // project, thus failing to find the flow trigger since new project doesn't contain flow\n        // trigger at all\n        if (isDoneButFlowNotExecuted(triggerInstance)) {\n          triggerInstance.setFlowExecId(Constants.FAILED_EXEC_ID);\n          this.flowTriggerInstanceLoader.updateAssociatedFlowExecId(triggerInstance);\n        } else {\n          for (final DependencyInstance depInst : triggerInstance.getDepInstances()) {\n            if (!Status.isDone(depInst.getStatus())) {\n              processStatusAndCancelCauseUpdate(depInst, Status.CANCELLED,\n                  CancellationCause.FAILURE);\n              this.triggerProcessor.processTermination(depInst.getTriggerInstance());\n            }\n          }\n        }\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44411, "method_name": "addToRunningListAndScheduleKill", "class_name": "FlowTriggerService", "params": ["TriggerInstance", "Duration", "CancellationCause"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addToRunningListAndScheduleKill(final TriggerInstance triggerInst, final\n  Duration durationBeforeKill, final CancellationCause cause) {\n    // if trigger instance is already done\n    if (!Status.isDone(triggerInst.getStatus())) {\n      this.runningTriggers.add(triggerInst);\n      scheduleKill(triggerInst, durationBeforeKill, cause);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44412, "method_name": "getCancelleationCause", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "CancellationCause", "snippet": "  private CancellationCause getCancelleationCause(final TriggerInstance triggerInst) {\n    final Set<CancellationCause> causes = triggerInst.getDepInstances().stream()\n        .map(DependencyInstance::getCancellationCause).collect(Collectors.toSet());\n\n    if (causes.contains(CancellationCause.FAILURE) || causes\n        .contains(CancellationCause.CASCADING)) {\n      return CancellationCause.CASCADING;\n    } else if (causes.contains(CancellationCause.TIMEOUT)) {\n      return CancellationCause.TIMEOUT;\n    } else if (causes.contains(CancellationCause.MANUAL)) {\n      return CancellationCause.MANUAL;\n    } else {\n      return CancellationCause.NONE;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44413, "method_name": "cancelTriggerInstance", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cancelTriggerInstance(final TriggerInstance triggerInst) {\n    logger.debug(\"cancelling trigger instance of exec id\" + triggerInst.getId());\n    final CancellationCause cause = getCancelleationCause(triggerInst);\n    for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n      if (depInst.getStatus() == Status.CANCELLING) {\n        cancelContextAsync(depInst.getContext());\n      } else if (depInst.getStatus() == Status.RUNNING) {\n        // sometimes dependency instances of trigger instance in cancelling status can be running.\n        // e.x. dep inst1: failure, dep inst2: running -> trigger inst is in killing\n        this.processStatusAndCancelCauseUpdate(depInst, Status.CANCELLING, cause);\n        cancelContextAsync(depInst.getContext());\n      }\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44414, "method_name": "addToRunningListAndCancel", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void addToRunningListAndCancel(final TriggerInstance triggerInst) {\n    this.runningTriggers.add(triggerInst);\n    cancelTriggerInstance(triggerInst);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44415, "method_name": "updateDepInstStatus", "class_name": "FlowTriggerService", "params": ["DependencyInstance", "Status"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void updateDepInstStatus(final DependencyInstance depInst, final Status newStatus) {\n    depInst.setStatus(newStatus);\n    if (Status.isDone(depInst.getStatus())) {\n      depInst.setEndTime(System.currentTimeMillis());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44416, "method_name": "processStatusUpdate", "class_name": "FlowTriggerService", "params": ["DependencyInstance", "Status"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void processStatusUpdate(final DependencyInstance depInst, final Status newStatus) {\n    logger.debug(\"process status update for \" + depInst);\n    updateDepInstStatus(depInst, newStatus);\n    this.dependencyProcessor.processStatusUpdate(depInst);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44417, "method_name": "processStatusAndCancelCauseUpdate", "class_name": "FlowTriggerService", "params": ["DependencyInstance", "Status", "CancellationCause"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void processStatusAndCancelCauseUpdate(final DependencyInstance depInst, final Status\n      newStatus, final CancellationCause cause) {\n    depInst.setCancellationCause(cause);\n    updateDepInstStatus(depInst, newStatus);\n    this.dependencyProcessor.processStatusUpdate(depInst);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44418, "method_name": "remainingTimeBeforeTimeout", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "long", "snippet": "  private long remainingTimeBeforeTimeout(final TriggerInstance triggerInst) {\n    final long now = System.currentTimeMillis();\n    return Math.max(0,\n        triggerInst.getFlowTrigger().getMaxWaitDuration().get().toMillis() - (now - triggerInst\n            .getStartTime()));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44419, "method_name": "startTrigger", "class_name": "FlowTriggerService", "params": ["FlowTrigger", "String", "int", "String", "Project"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void startTrigger(final FlowTrigger flowTrigger, final String flowId,\n      final int flowVersion, final String submitUser, final Project project) {\n    final TriggerInstance triggerInst = createTriggerInstance(flowTrigger, flowId, flowVersion,\n        submitUser, project);\n    this.flowTriggerExecutorService.submit(() -> {\n      logger.info(\"Starting the flow trigger [trigger instance id: {}] by {}\",\n          triggerInst.getId(), submitUser);\n      start(triggerInst);\n    });\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44420, "method_name": "start", "class_name": "FlowTriggerService", "params": ["TriggerInstance"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void start(final TriggerInstance triggerInst) {\n    this.triggerProcessor.processNewInstance(triggerInst);\n    if (triggerInst.getStatus() == Status.CANCELLED) {\n      // all dependency instances failed\n      logger.info(\n          \"Trigger instance[id: {}] is cancelled since all dependency instances fail to be created\",\n          triggerInst.getId());\n      this.triggerProcessor.processTermination(triggerInst);\n    } else if (triggerInst.getStatus() == Status.CANCELLING) {\n      // some of the dependency instances failed\n      logger.info(\n          \"Trigger instance[id: {}] is being cancelled since some dependency instances fail to be created\",\n          triggerInst.getId());\n      addToRunningListAndCancel(triggerInst);\n    } else if (triggerInst.getStatus() == Status.SUCCEEDED) {\n      this.triggerProcessor.processSucceed(triggerInst);\n    } else {\n      // todo chengren311: it's possible web server restarts before the db update, then\n      // new instance will not be recoverable from db.\n      addToRunningListAndScheduleKill(triggerInst, triggerInst.getFlowTrigger()\n          .getMaxWaitDuration().get(), CancellationCause.TIMEOUT);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44421, "method_name": "findRunningTriggerInstById", "class_name": "FlowTriggerService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "TriggerInstance", "snippet": "  public TriggerInstance findRunningTriggerInstById(final String triggerInstId) {\n    final Future<TriggerInstance> future = this.flowTriggerExecutorService.submit(\n        () -> getTriggerInstanceById(triggerInstId)\n    );\n    try {\n      return future.get();\n    } catch (final Exception e) {\n      logger.error(\"exception when finding trigger instance by id\" + triggerInstId, e);\n      return null;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44422, "method_name": "getTriggerInstanceById", "class_name": "FlowTriggerService", "params": ["String"], "throws": null, "modifiers": ["private"], "return_type": "TriggerInstance", "snippet": "  private TriggerInstance getTriggerInstanceById(final String triggerInstId) {\n    return this.runningTriggers.stream()\n        .filter(triggerInst -> triggerInst.getId().equals(triggerInstId)).findFirst()\n        .orElse(null);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44423, "method_name": "cancelContextAsync", "class_name": "FlowTriggerService", "params": ["DependencyInstanceContext"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cancelContextAsync(final DependencyInstanceContext context) {\n    this.cancelExecutorService.submit(() -> context.cancel());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44424, "method_name": "cancelTriggerInstance", "class_name": "FlowTriggerService", "params": ["TriggerInstance", "CancellationCause"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void cancelTriggerInstance(final TriggerInstance triggerInst,\n      final CancellationCause cause) {\n    if (triggerInst.getStatus() == Status.RUNNING) {\n      this.flowTriggerExecutorService.submit(() -> cancel(triggerInst, cause));\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44425, "method_name": "cancel", "class_name": "FlowTriggerService", "params": ["TriggerInstance", "CancellationCause"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void cancel(final TriggerInstance triggerInst, final CancellationCause cause) {\n    logger.info(\"cancelling trigger instance with id {}\", triggerInst.getId());\n    if (triggerInst != null) {\n      for (final DependencyInstance depInst : triggerInst.getDepInstances()) {\n        // cancel running dependencies only, no need to cancel a killed/successful dependency\n        // instance\n        if (depInst.getStatus() == Status.RUNNING) {\n          this.processStatusAndCancelCauseUpdate(depInst, Status.CANCELLING, cause);\n          cancelContextAsync(depInst.getContext());\n        }\n      }\n    } else {\n      logger.debug(\"unable to cancel a trigger instance in non-running state with id {}\",\n          triggerInst.getId());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44426, "method_name": "findDependencyInstanceByContext", "class_name": "FlowTriggerService", "params": ["DependencyInstanceContext"], "throws": null, "modifiers": ["private"], "return_type": "DependencyInstance", "snippet": "  private DependencyInstance findDependencyInstanceByContext(\n      final DependencyInstanceContext context) {\n    return this.runningTriggers.stream()\n        .flatMap(triggerInst -> triggerInst.getDepInstances().stream()).filter(\n            depInst -> depInst.getContext() != null && depInst.getContext() == context)\n        .findFirst().orElse(null);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44427, "method_name": "markDependencySuccess", "class_name": "FlowTriggerService", "params": ["DependencyInstanceContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markDependencySuccess(final DependencyInstanceContext context) {\n    this.flowTriggerExecutorService.submit(() -> markSuccess(context));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44428, "method_name": "markSuccess", "class_name": "FlowTriggerService", "params": ["DependencyInstanceContext"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void markSuccess(final DependencyInstanceContext context) {\n    final DependencyInstance depInst = findDependencyInstanceByContext(context);\n    if (depInst != null) {\n      if (Status.isDone(depInst.getStatus())) {\n        logger.warn(\"OnSuccess of dependency instance[id: {}, name: {}] is ignored\",\n            depInst.getTriggerInstance().getId(), depInst.getDepName());\n        return;\n      }\n\n      // if the status transits from cancelling to succeeded, then cancellation cause was set,\n      // we need to unset cancellation cause.\n      this.processStatusAndCancelCauseUpdate(depInst, Status.SUCCEEDED, CancellationCause.NONE);\n      // if associated trigger instance becomes success, then remove it from running list\n      if (depInst.getTriggerInstance().getStatus() == Status.SUCCEEDED) {\n        logger.info(\"trigger instance[id: {}] succeeded\", depInst.getTriggerInstance().getId());\n        this.triggerProcessor.processSucceed(depInst.getTriggerInstance());\n        this.runningTriggers.remove(depInst.getTriggerInstance());\n      }\n    } else {\n      logger.debug(\"unable to find trigger instance with context {} when marking it success\",\n          context);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44429, "method_name": "cancelledByAzkaban", "class_name": "FlowTriggerService", "params": ["DependencyInstance"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean cancelledByAzkaban(final DependencyInstance depInst) {\n    return depInst.getStatus() == Status.CANCELLING;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44430, "method_name": "cancelledByDependencyPlugin", "class_name": "FlowTriggerService", "params": ["DependencyInstance"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean cancelledByDependencyPlugin(final DependencyInstance depInst) {\n    // When onKill is called by the dependency plugin not through flowTriggerService, we treat it\n    // as cancelled by dependency due to failure on dependency side. In this case, cancel cause\n    // remains unset.\n    return depInst.getStatus() == Status.RUNNING;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44431, "method_name": "markDependencyCancelled", "class_name": "FlowTriggerService", "params": ["DependencyInstanceContext"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void markDependencyCancelled(final DependencyInstanceContext context) {\n    this.flowTriggerExecutorService.submit(() -> {\n      markCancelled(context);\n    });\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44432, "method_name": "markCancelled", "class_name": "FlowTriggerService", "params": ["DependencyInstanceContext"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void markCancelled(final DependencyInstanceContext context) {\n    final DependencyInstance depInst = findDependencyInstanceByContext(context);\n    if (depInst != null) {\n      if (cancelledByDependencyPlugin(depInst)) {\n        processStatusAndCancelCauseUpdate(depInst, Status.CANCELLED, CancellationCause.FAILURE);\n        cancelTriggerInstance(depInst.getTriggerInstance());\n      } else if (cancelledByAzkaban(depInst)) {\n        processStatusUpdate(depInst, Status.CANCELLED);\n      } else {\n        logger.warn(\"OnCancel of dependency instance[id: {}, name: {}] is ignored\",\n            depInst.getTriggerInstance().getId(), depInst.getDepName());\n        return;\n      }\n\n      if (depInst.getTriggerInstance().getStatus() == Status.CANCELLED) {\n        logger.info(\"trigger instance with execId {} is cancelled\",\n            depInst.getTriggerInstance().getId());\n        this.triggerProcessor.processTermination(depInst.getTriggerInstance());\n        this.runningTriggers.remove(depInst.getTriggerInstance());\n      }\n    } else {\n      logger.warn(\"unable to find trigger instance with context {} when marking \"\n          + \"it cancelled\", context);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44433, "method_name": "shutdown", "class_name": "FlowTriggerService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {\n    this.flowTriggerExecutorService.shutdown();\n    this.cancelExecutorService.shutdown();\n    this.timeoutService.shutdown();\n\n    this.flowTriggerExecutorService.shutdownNow();\n    this.cancelExecutorService.shutdownNow();\n    this.timeoutService.shutdownNow();\n\n    this.triggerProcessor.shutdown();\n    this.triggerPluginManager.shutdown();\n    this.cleaner.shutdown();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44434, "method_name": "getTriggerInstances", "class_name": "FlowTriggerService", "params": ["int", "String", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "Collection<TriggerInstance>", "snippet": "  public Collection<TriggerInstance> getTriggerInstances(final int projectId, final String flowId,\n      final int from, final int length) {\n    return this.flowTriggerInstanceLoader.getTriggerInstances(projectId, flowId, from, length);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-web-server/src/main/java/azkaban/flowtrigger/FlowTriggerService.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44435, "method_name": "getA", "class_name": "TestModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getA() {\n    return a;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/extendresultmap/TestModel.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44436, "method_name": "setA", "class_name": "TestModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setA(String a) {\n    this.a = a;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/extendresultmap/TestModel.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44437, "method_name": "getB", "class_name": "TestModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getB() {\n    return b;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/extendresultmap/TestModel.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44438, "method_name": "setB", "class_name": "TestModel", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setB(String b) {\n    this.b = b;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/extendresultmap/TestModel.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44439, "method_name": "hashCode", "class_name": "TestModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int hashCode() {\n    final int prime = 31;\n    int result = 1;\n    result = prime * result + ((a == null) ? 0 : a.hashCode());\n    result = prime * result + ((b == null) ? 0 : b.hashCode());\n    return result;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/extendresultmap/TestModel.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44440, "method_name": "equals", "class_name": "TestModel", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "  public boolean equals(Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    TestModel other = (TestModel) obj;\n    if (a == null) {\n      if (other.a != null)\n        return false;\n    } else if (!a.equals(other.a))\n      return false;\n    if (b == null) {\n      if (other.b != null)\n        return false;\n    } else if (!b.equals(other.b))\n      return false;\n    return true;\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/extendresultmap/TestModel.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44441, "method_name": "toString", "class_name": "TestModel", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String toString() {\n    return \"TestModel [a=\" + a + \", b=\" + b + \"]\";\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/extendresultmap/TestModel.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44442, "method_name": "run", "class_name": "AmiEventListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void run() {\n\t\twhile (run) {\n\t\t\ttry {\n\t\t\t\tString host = config.get(\"host\");\n\t\t\t\tint port = config.getInt(\"port\", 5038);\n\t\t\t\tString login = config.get(\"login\");\n\t\t\t\tString pswd = config.get(\"pswd\");\n\n\t\t\t\tAMIManager.log.debug(\"Connecting AMI host: \" + host + \"; port: \" + port + \"; login: \" + login + \"; pswd: \" + pswd);\n\n\t\t\t\tmanagerConnection = new ManagerConnectionFactory(host, login, pswd).createManagerConnection();\n\n\t\t\t\tmanagerConnection.addEventListener(this);\n\n\t\t\t\tmanagerConnection.login();\n\t\t\t\tmanagerConnection.sendAction(new StatusAction());\n\n\t\t\t\tsleep(AMIManager.CONNECT_TIMEOUT);\n\n\t\t\t\tmanagerConnection.removeEventListener(this);\n\t\t\t\tif (managerConnection.getState() != ManagerConnectionState.DISCONNECTED) {\n\t\t\t\t\tmanagerConnection.logoff();\n\t\t\t\t}\n\t\t\t} catch (Exception e) {\n\t\t\t\tAMIManager.log.error(e.getMessage(), e);\n\n\t\t\t\ttry {\n\t\t\t\t\tsleep(AMIManager.RECONNECT_TIMEOUT);\n\t\t\t\t} catch (Exception ex) {\n\t\t\t\t\tAMIManager.log.error(e.getMessage(), e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/asterisk/AmiEventListener.java", "stars": "12", "class_props": {"extends": "Thread", "implements": ["ManagerEventListener"], "modifiers": ["public"]}}, {"id": 44443, "method_name": "logoff", "class_name": "AmiEventListener", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void logoff() {\n\t\tmanagerConnection.removeEventListener(this);\n\t\tmanagerConnection.logoff();\n\t\trun = false;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/asterisk/AmiEventListener.java", "stars": "12", "class_props": {"extends": "Thread", "implements": ["ManagerEventListener"], "modifiers": ["public"]}}, {"id": 44444, "method_name": "onManagerEvent", "class_name": "AmiEventListener", "params": ["ManagerEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onManagerEvent(ManagerEvent e) {\n\t\tif (AMIManager.log.isDebugEnabled())\n\t\t\tAMIManager.log.debug(\"AMI event: \" + e);\n\n\t\t/*04-01/18:45:37  INFO [Asterisk-Java ManagerConnection-2-Reader-0] AMIManager - AMI event: org.asteriskjava.manager.event.BridgeEvent[dateReceived='Tue Apr 01 18:45:37 YEKT 2014',\n\t\tprivilege='call,all',uniqueid1='1396356317.899',uniqueid2='1396356318.902',sequencenumber=null,link='true',bridgestate='Link',\n\t\tbridgetype='core',unlink='false',timestamp=null,channel1='Local/1005@from-queue-00000016;2',channel2='SIP/1005-0000034e',server=null,\n\t\tcallerid1='3472924823',callerid2='1005',systemHashcode=2631472]*/\n\n\t\t/*Event: Newstate\n\t\tPrivilege: call,all\n\t\tChannel: Local/904@from-queue-00000621;1\n\t\tChannelState: 6\n\t\tChannelStateDesc: Up\n\t\tCallerIDNum: 904\n\t\tCallerIDName: 904\n\t\tConnectedLineNum: 89075270744\n\t\tConnectedLineName: 89075270744\n\t\tUniqueid: 1406622918.6497 */\n\n\t\tif (!(e instanceof NewStateEvent))\n\t\t\treturn;\n\t\t\n\t\tNewStateEvent event = (NewStateEvent) e;\n\n\t\tif (!\"Up\".equals(event.getChannelStateDesc()))\n\t\t\treturn;\n\n\t\tString numberFrom = event.getConnectedlinenum();\n\t\tString numberTo = event.getCallerIdNum();\n\t\tboolean registerBecauseExpression = false;\n\t\tif (messageType.getCheckExpressionCallStore() != null) {\n\t\t\tMap<String, Object> context = new HashMap<>();\n\t\t\tcontext.put(numberFrom, numberFrom);\n\t\t\tcontext.put(numberTo, numberTo);\n\t\t\tregisterBecauseExpression = new Expression(context).check(messageType.getCheckExpressionCallStore());\n\t\t}\n\n\t\tCallRegistration reg = messageType.getRegistrationByNumber(numberTo);\n\t\t// \u043f\u0440\u0438\u0445\u043e\u0434\u044f\u0442 3 \u0441\u043e\u0431\u044b\u0442\u0438\u044f \u043e \u0432\u044b\u0437\u043e\u0432\u0435, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u043f\u0435\u0440\u0432\u043e\u043c\u0443 \u043f\u0443\u0442\u0451\u043c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 messageForOpenId\n\t\tif ((reg != null && reg.getMessageForOpenId() == null) || registerBecauseExpression) {\n\t\t\tif (reg != null)\n\t\t\t\tAMIManager.log.info(\"Call to registred number: \" + reg.getNumber());\n\t\t\telse\n\t\t\t\tAMIManager.log.info(\"Call because of expression.\");\n\n\t\t\tConnection con = Setup.getSetup().getDBConnectionFromPool();\n\t\t\ttry {\n\t\t\t\tMessage message = new Message();\n\t\t\t\tmessage.setDirection(Message.DIRECTION_INCOMING);\n\t\t\t\tmessage.setTypeId(messageType.getId());\n\t\t\t\tif (reg != null)\n\t\t\t\t\tmessage.setUserId(reg.getUserId());\n\t\t\t\tmessage.setText(\"\");\n\t\t\t\tmessage.setFrom(numberFrom);\n\t\t\t\tmessage.setTo(numberTo);\n\t\t\t\tmessage.setFromTime(new Date());\n\t\t\t\tmessage.setSystemId(event.getUniqueId());\n\n\t\t\t\t// \u043f\u043e \u0441\u0443\u0442\u0438 \u0442\u0430\u043c \u0432\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0441\u0442\u043e MessageDAO, \u0441\u0434\u0435\u043b\u0430\u043d\u043e \u0434\u043b\u044f \u0435\u0434\u0438\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u044f\n\t\t\t\tmessageType.updateMessage(con, DynActionForm.SERVER_FORM, message);\n\n\t\t\t\tcon.commit();\n\n\t\t\t\tAMIManager.log.info(\"Created message: \" + message.getId());\n\n\t\t\t\tif (reg != null)\n\t\t\t\t\treg.setMessageForOpenId(message.getId());\n\t\t\t} catch (Exception ex) {\n\t\t\t\tAMIManager.log.error(ex.getMessage(), ex);\n\t\t\t} finally {\n\t\t\t\tSQLUtils.closeConnection(con);\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/asterisk/AmiEventListener.java", "stars": "12", "class_props": {"extends": "Thread", "implements": ["ManagerEventListener"], "modifiers": ["public"]}}, {"id": 44445, "method_name": "mergeHandshakesToContacts", "class_name": "ContactsFactory", "params": ["Context", "List<Handshake>"], "throws": null, "modifiers": ["public", "static"], "return_type": "List<Contact>", "snippet": "\tpublic static List<Contact> mergeHandshakesToContacts(Context context, List<Handshake> handshakes) {\n\t\tHashMap<EphId, List<Handshake>> handshakeMapping = new HashMap<>();\n\n\t\tAppConfigManager appConfigManager = AppConfigManager.getInstance(context);\n\n\t\t// group handhakes by id\n\t\tfor (Handshake handshake : handshakes) {\n\t\t\tif (!handshakeMapping.containsKey(handshake.getEphId())) {\n\t\t\t\thandshakeMapping.put(handshake.getEphId(), new ArrayList<>());\n\t\t\t}\n\t\t\thandshakeMapping.get(handshake.getEphId()).add(handshake);\n\t\t}\n\n\t\t//filter result to only contain actual contacts in close proximity\n\t\tList<Contact> contacts = new ArrayList<>();\n\t\tfor (List<Handshake> handshakeList : handshakeMapping.values()) {\n\n\t\t\tint contactCounter = 0;\n\n\t\t\tlong startTime = min(handshakeList, (h) -> h.getTimestamp());\n\t\t\tfor (long offset = 0; offset < CryptoModule.MILLISECONDS_PER_EPOCH; offset += WINDOW_DURATION) {\n\t\t\t\tlong windowStart = startTime + offset;\n\t\t\t\tlong windowEnd = startTime + offset + WINDOW_DURATION;\n\t\t\t\tDouble windowMean = mean(handshakeList, (h) -> h.getTimestamp() >= windowStart && h.getTimestamp() < windowEnd);\n\n\t\t\t\tif (windowMean != null && windowMean < appConfigManager.getContactAttenuationThreshold()) {\n\t\t\t\t\tcontactCounter++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (contactCounter > 0) {\n\t\t\t\tcontacts.add(\n\t\t\t\t\t\tnew Contact(-1, floorTimestampToBucket(handshakeList.get(0).getTimestamp()),\n\t\t\t\t\t\t\t\thandshakeList.get(0).getEphId(),\n\t\t\t\t\t\t\t\tcontactCounter,\n\t\t\t\t\t\t\t\t0));\n\t\t\t}\n\t\t}\n\n\t\treturn contacts;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/crypto/ContactsFactory.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44446, "method_name": "mean", "class_name": "ContactsFactory", "params": ["List<Handshake>", "Condition"], "throws": null, "modifiers": ["static", "private"], "return_type": "Double", "snippet": "\tprivate static Double mean(List<Handshake> handshakes, Condition condition) {\n\t\tDouble valueSum = null;\n\t\tint count = 0;\n\t\tfor (Handshake handshake : handshakes) {\n\t\t\tif (condition.test(handshake)) {\n\t\t\t\tif (valueSum == null) {\n\t\t\t\t\tvalueSum = 0.0;\n\t\t\t\t}\n\t\t\t\tvalueSum += handshake.getAttenuation();\n\t\t\t\tcount++;\n\t\t\t}\n\t\t}\n\t\tif (valueSum != null) {\n\t\t\treturn valueSum / count;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/crypto/ContactsFactory.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44447, "method_name": "min", "class_name": "ContactsFactory", "params": ["List<T>", "ToLongConverter<T>"], "throws": null, "modifiers": ["static", "private"], "return_type": "Long", "snippet": "\tprivate static <T> Long min(List<T> values, ToLongConverter<T> converter) {\n\t\tLong min = null;\n\t\tfor (T val : values) {\n\t\t\tif (min == null || converter.toLong(val) < min) {\n\t\t\t\tmin = converter.toLong(val);\n\t\t\t}\n\t\t}\n\t\treturn min;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/crypto/ContactsFactory.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44448, "method_name": "floorTimestampToBucket", "class_name": "ContactsFactory", "params": ["long"], "throws": null, "modifiers": ["static", "private"], "return_type": "long", "snippet": "\tprivate static long floorTimestampToBucket(long timestamp) {\n\t\treturn timestamp - (timestamp % BackendBucketRepository.BATCH_LENGTH);\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/main/java/org/dpppt/android/sdk/internal/crypto/ContactsFactory.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44449, "method_name": "onCreate", "class_name": "PhoneMonitorActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_phone_monitor);\n\n        phoneLogRecyclerView = findViewById(R.id.phoneLogRecyclerView);\n        LinearLayoutManager layoutManager = new LinearLayoutManager(this);\n        phoneLogRecyclerView.setLayoutManager(layoutManager);\n        phoneLogRecyclerAdapter = new PhoneLogRecyclerAdapter(this, new ArrayList<String>());\n        phoneLogRecyclerView.setAdapter(phoneLogRecyclerAdapter);\n\n        final TextView noLogText = findViewById(R.id.noLogText);\n        final TextView headingText = findViewById(R.id.headingText);\n        headingText.setVisibility(View.INVISIBLE);\n        PrivacyBreacherService.eventDatabase.observe(this, new Observer<ArrayList<String>>() {\n            @Override\n            public void onChanged(ArrayList<String> logEntries) {\n                Log.i(TAG, \"onChanged: event change received in PhoneMonitorActivity\");\n                noLogText.setVisibility(View.INVISIBLE);\n                headingText.setVisibility(View.VISIBLE);\n                Log.i(TAG, \"LogEntries: \" + logEntries);\n                phoneLogRecyclerAdapter.setLogEntries(logEntries);\n                phoneLogRecyclerAdapter.notifyDataSetChanged();\n                phoneLogRecyclerView.scrollToPosition(phoneLogRecyclerAdapter.getItemCount() - 1);\n            }\n        });\n\n        AlertDialog.Builder alertDialog = new AlertDialog.Builder(this, R.style.AlertDialogCustom);\n        alertDialog.setTitle(\"Phone activity monitoring\");\n        alertDialog.setMessage(\"Apps installed on your phone can monitor when you turn ON/OFF your screen without requesting any permissions. This way, they can know how many hours you used your phone today, from what time to what time you used your phone,\" +\n                \" how many times you charge your phone and are you charging with your Power Bank or AC Charging socket etc. This loophole can help bad guys build a pretty good spyware for your phone!\");\n        alertDialog.setCancelable(false);\n        alertDialog.setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\n            public void onClick(DialogInterface dialogInterface, int i) {\n                dialogInterface.dismiss();\n            }\n        });\n        alertDialog.show();\n    }", "url": "https://raw.githubusercontent.com/databurn-in/PrivacyBreacher/master/app/src/main/java/io/nandandesai/privacybreacher/PhoneMonitorActivity.java", "stars": "64", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44450, "method_name": "intercept", "class_name": "CacheInterceptor", "params": ["Chain"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "Response", "snippet": "    public Response intercept(Chain chain) throws IOException {\n        Request request = chain.request();\n        if (!NetworkUtil.isNetAvailable(UIUtils.getContext())) {//\u6ca1\u7f51\u5f3a\u5236\u4ece\u7f13\u5b58\u8bfb\u53d6(\u5fc5\u987b\u5f97\u5199\uff0c\u4e0d\u7136\u65ad\u7f51\u72b6\u6001\u4e0b\uff0c\u9000\u51fa\u5e94\u7528\uff0c\u6216\u8005\u7b49\u5f85\u4e00\u5206\u949f\u540e\uff0c\u5c31\u83b7\u53d6\u4e0d\u5230\u7f13\u5b58\uff09\n            request = request.newBuilder()\n                    .cacheControl(CacheControl.FORCE_CACHE)\n                    .build();\n        }\n        Response response = chain.proceed(request);\n        if (NetworkUtil.isNetAvailable(UIUtils.getContext())) {//\u6709\u7f51\u60c5\u51b5\u4e0b\uff0c\u4ece\u670d\u52a1\u5668\u83b7\u53d6\n            int maxAge = HttpConfig.DEFAULT_COOKIE_NETWORK_TIME;\n            // \u6709\u7f51\u7edc\u65f6, \u7f13\u5b58\u6700\u5927\u4fdd\u5b58\u65f6\u957f\u4e3a60s\n            response.newBuilder()\n                    .header(\"Cache-Control\", \"public, max-age=\" + maxAge)\n                    .removeHeader(\"Pragma\")\n                    .build();\n        } else {//\u6ca1\u7f51\u60c5\u51b5\u4e0b\uff0c\u4e00\u5f8b\u4ece\u7f13\u5b58\u83b7\u53d6\n            // \u65e0\u7f51\u7edc\u65f6\uff0c\u8bbe\u7f6e\u8d85\u65f6\u4e3a30\u5929\n            int maxStale = HttpConfig.DEFAULT_COOKIE_NO_NETWORK_TIME;\n            response.newBuilder()\n                    .header(\"Cache-Control\", \"public, only-if-cached, max-stale=\" + maxStale)\n                    .removeHeader(\"Pragma\")\n                    .build();\n        }\n        return response;\n    }", "url": "https://raw.githubusercontent.com/Florizt/RxMVVM/master/rxmvvmlib/src/main/java/com/rx/rxmvvmlib/http/CacheInterceptor.java", "stars": "15", "class_props": {"extends": null, "implements": ["Interceptor"], "modifiers": ["public"]}}, {"id": 44451, "method_name": "parse", "class_name": "XmlContentHandler", "params": ["URLConnection", "org"], "throws": ["IOException"], "modifiers": ["final", "protected"], "return_type": "void", "snippet": "    protected final void parse(URLConnection connection, org.xml.sax.ContentHandler contentHandler)\n            throws IOException {\n        InputStream in = ContentHandlerUtils.getUncompressedInputStream(connection);\n        try {\n            String encoding = ContentHandlerUtils.getCharSet(connection);\n            try {\n                Xml.Encoding e = Xml.findEncodingByName(encoding);\n                Xml.parse(in, e, contentHandler);\n            } catch (SAXException e) {\n                // Re-throw SAXException as IOException\n                IOException ioe = new IOException();\n                ioe.initCause(e);\n                throw ioe;\n            }\n        } finally {\n            in.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/harshalbenake/hbworkspace1-100/master/google%20image%20loader%20api%20complete/com/google/android/feeds/XmlContentHandler.java", "stars": "74", "class_props": {"extends": "ContentHandler", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44452, "method_name": "getBookData", "class_name": "LibraryData", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<BookEntry>", "snippet": "    public List<BookEntry> getBookData() {\n        return books;\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LibraryData.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44453, "method_name": "loadData", "class_name": "LibraryData", "params": ["Path"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean loadData(Path libraryFile) {\n        Objects.requireNonNull(libraryFile, \"Given file path must not be null.\");\n               \n        LibraryFileLoader loader = new LibraryFileLoader();\n        boolean success = loader.loadFileContent(libraryFile);\n\n        if (success) {\n            List<BookEntry> loaded = loader.parseFileContent();\n            int added = mergeEntries(loaded);\n            System.out.println(added + \" new book entries added.\");\n        } else {\n            System.err.println(\"ERROR: Loading book data failed for file: \" + libraryFile);\n        }\n\n        return success;\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LibraryData.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44454, "method_name": "mergeEntries", "class_name": "LibraryData", "params": ["List<BookEntry>"], "throws": null, "modifiers": ["private"], "return_type": "int", "snippet": "    private int mergeEntries(List<BookEntry> loaded) {\n        int count = 0;\n\n        for (BookEntry entry : loaded) {\n            if (!books.contains(entry)) {\n                books.add(entry);\n                count++;\n            } else {\n                System.out.println(\"Duplicate entry found for book: \" + entry);\n            }\n        }\n        return count;\n    }", "url": "https://raw.githubusercontent.com/LJacksonPan/Y1-OOP-CW3/master/src/LibraryData.java", "stars": "6", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44455, "method_name": "newInstance", "class_name": "ShowDetailSeasonFragment", "params": ["Show", "int"], "throws": null, "modifiers": ["public", "static"], "return_type": "ShowDetailSeasonFragment", "snippet": "    public static ShowDetailSeasonFragment newInstance(Show show, int season) {\n        sShow = show;\n        Bundle b = new Bundle();\n        b.putInt(SEASON, season);\n        b.putInt(COLOR, show.color);\n        ShowDetailSeasonFragment showDetailFragment = new ShowDetailSeasonFragment();\n        showDetailFragment.setArguments(b);\n        return showDetailFragment;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/ShowDetailSeasonFragment.java", "stars": "4", "class_props": {"extends": "BaseDetailFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44456, "method_name": "onCreate", "class_name": "ShowDetailSeasonFragment", "params": ["Bundle"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        int season = getArguments().getInt(SEASON);\n\n        if(sShow == null) return;\n\n        for (Episode episode : sShow.episodes) {\n            if (episode.season == season) {\n                mEpisodes.add(episode);\n            }\n        }\n\n        Collections.sort(mEpisodes, new Comparator<Episode>() {\n            @Override\n            public int compare(Episode lhs, Episode rhs) {\n                if (lhs.episode < rhs.episode) {\n                    return -1;\n                } else if (lhs.episode > rhs.episode) {\n                    return 1;\n                }\n                return 0;\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/ShowDetailSeasonFragment.java", "stars": "4", "class_props": {"extends": "BaseDetailFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44457, "method_name": "getSeasonNumber", "class_name": "ShowDetailSeasonFragment", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getSeasonNumber() {\n        return getArguments().getInt(SEASON);\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/ShowDetailSeasonFragment.java", "stars": "4", "class_props": {"extends": "BaseDetailFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44458, "method_name": "onCreateView", "class_name": "ShowDetailSeasonFragment", "params": ["LayoutInflater", "ViewGroup", "Bundle"], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\n        mRoot = inflater.inflate(R.layout.fragment_showdetail_season, container, false);\n        if (VersionUtils.isJellyBean() && container != null) {\n            mRoot.setMinimumHeight(container.getMinimumHeight());\n        }\n\n        int color = getResources().getColor(R.color.primary);\n        if(getArguments().containsKey(COLOR)) {\n            color = getArguments().getInt(COLOR, color);\n        }\n        EpisodeListAdapter adapter = new EpisodeListAdapter(inflater, mEpisodes, color);\n\n        LinearList linearList = (LinearList) mRoot;\n        linearList.setOnItemClickListener(mOnClickListener);\n        linearList.setAdapter(adapter);\n\n        return mRoot;\n    }", "url": "https://raw.githubusercontent.com/abdalmoniem/Movie-App/master/mobile/src/main/java/butter/droid/fragments/ShowDetailSeasonFragment.java", "stars": "4", "class_props": {"extends": "BaseDetailFragment", "implements": null, "modifiers": ["public"]}}, {"id": 44459, "method_name": "enable", "class_name": "VipTypeLifecycle", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void enable() {\n\n        vipTypeFolder = plugin.getFileLifecycle().getVipTypeFolder();\n\n        plugin.log(\"Loading vip types...\");\n        loadVipTypes();\n        plugin.log(vipTypeCache.getVipTypes().size() + \" vip types loaded.\");\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/lifecycle/VipTypeLifecycle.java", "stars": "2", "class_props": {"extends": "Lifecycle", "implements": null, "modifiers": ["public"]}}, {"id": 44460, "method_name": "loadVipTypes", "class_name": "VipTypeLifecycle", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void loadVipTypes() {\n\n        File[] files = vipTypeFolder.listFiles();\n\n        for (File file : files) {\n            VipType type = adapter.adapt(file, File.class, VipType.class);\n            if (type != null) vipTypeCache.insert(type.getIdentifier(), type);\n        }\n\n    }", "url": "https://raw.githubusercontent.com/devwckd/wckd-vips/master/src/main/java/co/wckd/vips/lifecycle/VipTypeLifecycle.java", "stars": "2", "class_props": {"extends": "Lifecycle", "implements": null, "modifiers": ["public"]}}, {"id": 44461, "method_name": "onCreate", "class_name": "Covid19StoryActivity", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_covid19_story);\n        covid19StoryActivity=this;\n        setUserPreferableTitle();\n\n\n        storyRecyclerView = (RecyclerView) findViewById(R.id.recyclerview_video);\n        storyRecyclerView.setHasFixedSize(true);\n        storyRecyclerView.setLayoutManager(new LinearLayoutManager(this));\n\n        databaseReference = FirebaseDatabase.getInstance().getReference(\"video\");\n\n        YouTubeVideos youTubeVideos=new YouTubeVideos(covid19StoryActivity,null,null);\n\n\n        youTubeVideos.getYoutubeVideoData(databaseReference,storyRecyclerView);\n\n\n\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/activities/Covid19StoryActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44462, "method_name": "onPause", "class_name": "Covid19StoryActivity", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onPause() {\n        super.onPause();\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/activities/Covid19StoryActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44463, "method_name": "setUserPreferableTitle", "class_name": "Covid19StoryActivity", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void setUserPreferableTitle(){\n        Enums.Language language = SharedStorge.getUserLanguage(this);\n        if(language == Enums.Language.BD){\n            String title = getResources().getString(R.string.covid_story_title_bd);\n            setTitle(title);\n        }else{\n            setTitle(\"Covid-19 Story\");\n        }\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/activities/Covid19StoryActivity.java", "stars": "9", "class_props": {"extends": "AppCompatActivity", "implements": null, "modifiers": ["public"]}}, {"id": 44464, "method_name": "validateStackSequences", "class_name": "Solution", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean validateStackSequences(int[] pushed, int[] popped) {\n        \n        int N = pushed.length;\n        Stack<Integer> stack = new Stack();\n        \n        int j = 0;\n        for (int x: pushed) {\n            stack.push(x);\n            while (!stack.isEmpty() && j < N && stack.peek() == popped[j]) {\n                //\u961f\u5934\u5143\u7d20\u51fa\u961f\uff0c\u6808\u9876\u5143\u7d20\u51fa\u6808\n                stack.pop();\n                j++;\n            }\n        }\n        if (!stack.isEmpty()){\n            return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/MisterBooo/LeetCodeAnimation/master/0946--validate-stack-sequences/Code/1.java", "stars": "53778", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44465, "method_name": "aceita", "class_name": "ProcessadorCielo", "params": ["TentativaPagamento"], "throws": null, "modifiers": ["public"], "return_type": "Optional<Pagador>", "snippet": "\tpublic Optional<Pagador> aceita(TentativaPagamento tentativaPagamento) {\n\t\tTipoPagamento tipoPagamento = tentativaPagamento.getTipoPagamento();\n\t\tif (tipoPagamento.aceitaOnline\n\t\t\t\t&& !tipoPagamento.equals(TipoPagamento.hipercard)) {\n\t\t\treturn Optional.of(new GatewayCielo(autorizador,tentativaPagamento));\n\t\t}\n\n\t\treturn Optional.empty();\n\t}", "url": "https://raw.githubusercontent.com/asouza/implementacao-teste-ifood-pagamento-ddd-da-massa/master/src/main/java/com/deveficiente/testepagamentoifood/pagamento/processadores/ProcessadorCielo.java", "stars": "9", "class_props": {"extends": null, "implements": ["ProcessadorPagamento"], "modifiers": ["public"]}}, {"id": 44466, "method_name": "nextRoute", "class_name": "StreamAllocation", "params": [], "throws": ["IOException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void nextRoute() throws IOException {\n        routeSelector.nextInetSocketAddress();\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44467, "method_name": "currentInetSocketAddress", "class_name": "StreamAllocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "InetSocketAddress", "snippet": "    public InetSocketAddress currentInetSocketAddress(){\n        return routeSelector.lastInetSocketAddress();\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44468, "method_name": "release", "class_name": "StreamAllocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        closeQuietly(connection);\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44469, "method_name": "closeQuietly", "class_name": "StreamAllocation", "params": ["RealConnection"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void closeQuietly(RealConnection connection) {\n        released=true;\n        if (connection!=null){\n           connection.release(true);\n           connection=null;\n        }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44470, "method_name": "acquire", "class_name": "StreamAllocation", "params": ["RealConnection"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void acquire(RealConnection connection) {\n        if (this.connection != null&&this.connection.isHealth()) throw new IllegalStateException();\n\n        this.connection = connection;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44471, "method_name": "hasMoreRoutes", "class_name": "StreamAllocation", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean hasMoreRoutes() {\n        return routeSelector.hasNext();\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44472, "method_name": "newStream", "class_name": "StreamAllocation", "params": ["IMClient", "Interceptor", "EventListener"], "throws": ["IOException", "InterruptedException", "AuthException"], "modifiers": ["public"], "return_type": "TcpStream", "snippet": "    public TcpStream newStream(IMClient client, Interceptor.Chain chain, EventListener eventListener) throws IOException, InterruptedException,AuthException  {\n        int connectTimeout = chain.connectTimeoutMillis();\n        int heartbeatInterval= client.heartInterval();\n        Address address=chain.request().address;\n        synchronized (connectionPool) {\n            if (released){  throw new IllegalStateException(\"released\");}\n\n            if (this.connection==null||!this.connection.isHealth()){\n                Internal.instance.get(connectionPool, address, this);\n                    if(connection==null||!connection.isHealth()){\n                        connection= new RealConnection(connectionPool, routeSelector.lastInetSocketAddress(), eventListener);\n\n                        connection.ChannelInitializerHandler(client.codec(), client.loginAuthMsg(), client.heartBeatMsg(),\n                                client.shakeHandsHandler(), client.heartbeatRespHandler(),\n                                client.messageRespHandler(),client.messageReceiveHandler(),\n                                client.customChannelHandlerLinkedHashMap(),heartbeatInterval, new RealConnection.connectionBrokenListener() {\n                                    @Override\n                                    public void connectionBroken() {\n                                        if (connection.isReConnect()){\n                                            closeQuietly(connection);\n                                            client.startConnect();\n                                        }else {\n                                            closeQuietly(connection);\n                                        }\n\n                                    }\n                                });\n                        connection.connect(connectTimeout);\n                        Internal.instance.put(connectionPool,connection);\n                        TcpStream tcpStream=connection.newStream(client,this);\n                        return tcpStream;\n                    }else {return connection.newStream(client,this);}\n            }else {\n                return connection.newStream(client,this);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44473, "method_name": "connection", "class_name": "StreamAllocation", "params": [], "throws": null, "modifiers": ["synchronized", "public"], "return_type": "RealConnection", "snippet": "    public synchronized RealConnection connection() {\n        return connection;\n    }", "url": "https://raw.githubusercontent.com/mrchengwenlong/NettyIM/master/im_lib/src/main/java/com/takiku/im_lib/internal/connection/StreamAllocation.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44474, "method_name": "onTimeSet", "class_name": "TimePickerRendererBase_1", "params": ["android", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onTimeSet (android.widget.TimePicker p0, int p1, int p2)\n\t{\n\t\tn_onTimeSet (p0, p1, p2);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TimePickerRendererBase_1.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"id": 44475, "method_name": "n_onTimeSet", "class_name": "TimePickerRendererBase_1", "params": ["android", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onTimeSet (android.widget.TimePicker p0, int p1, int p2);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TimePickerRendererBase_1.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"id": 44476, "method_name": "monodroidAddReference", "class_name": "TimePickerRendererBase_1", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TimePickerRendererBase_1.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"id": 44477, "method_name": "monodroidClearReferences", "class_name": "TimePickerRendererBase_1", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/TimePickerRendererBase_1.java", "stars": "2", "class_props": {"extends": "crc643f46942d9dd1fff9", "implements": ["mono", "android"], "modifiers": ["public", "abstract"]}}, {"id": 44478, "method_name": "load", "class_name": "DefaultPluginProcessorLoader", "params": ["String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean load(String fullClassName, String javaCode, String classpath) {\n        JavaCompiler compiler = ToolProvider.getSystemJavaCompiler();\n        DiagnosticCollector<JavaFileObject> diagnostics = new DiagnosticCollector<>();\n        CustomFileManager customFileManager = new CustomFileManager(compiler.getStandardFileManager(diagnostics, null, null));\n        List<JavaFileObject> javaFiles = new ArrayList<>();\n        javaFiles.add(new JavaMemoryFileObject(fullClassName, javaCode));\n        List<String> options = new ArrayList<>();\n        options.add(CLASS_PATH_PARAMS);\n        options.add(classpath);\n        JavaCompiler.CompilationTask task = compiler.getTask(null, customFileManager, diagnostics, options, null, javaFiles);\n        boolean success = task.call();\n        if(success){\n            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n            if(classLoader instanceof JarLoader){\n                JavaMemoryClassObject classObject = customFileManager.getClassObject();\n                ((JarLoader)classLoader).loadClass(fullClassName, classObject.getBytes());\n            }\n        }else{\n            //logger error\n            diagnostics.getDiagnostics().forEach( diagnostic -> {\n                String res = (\"Code:[\" + diagnostic.getCode() + \"]\\n\") +\n                        \"Kind:[\" + diagnostic.getKind() + \"]\\n\" +\n                        \"Position:[\" + diagnostic.getPosition() + \"]\\n\" +\n                        \"Start Position:[\" + diagnostic.getStartPosition() + \"]\\n\" +\n                        \"End Position:[\" + diagnostic.getEndPosition() + \"]\\n\" +\n                        \"Source:[\" + diagnostic.getSource() + \"]\\n\" +\n                        \"Message:[\" + diagnostic.getMessage(null) + \"]\\n\" +\n                        \"LineNumber:[\" + diagnostic.getLineNumber() + \"]\\n\" +\n                        \"ColumnNumber:[\" + diagnostic.getColumnNumber() + \"]\\n\";\n                logger.error(res);\n            });\n        }\n        return success;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/loader/plugin/DefaultPluginProcessorLoader.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginProcessorLoader"], "modifiers": ["public"]}}, {"id": 44479, "method_name": "load", "class_name": "DefaultPluginProcessorLoader", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean load(String fullClassName, String javaCode) {\n        StringBuilder builder = new StringBuilder();\n        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n        try {\n            Class<?> foundClass = Class.forName(fullClassName, false, classLoader);\n            if(null != foundClass){\n                //The class has been loaded\n                return true;\n            }\n        } catch (ClassNotFoundException e) {\n            //Ignore try to load class\n        }\n        while(classLoader instanceof URLClassLoader){\n            URLClassLoader urlClassLoader = (URLClassLoader)classLoader;\n            for (URL url : urlClassLoader.getURLs()) {\n                builder.append(url.getFile()).append(File.pathSeparator);\n            }\n            classLoader = classLoader.getParent();\n        }\n        return load(fullClassName, javaCode, builder.toString());\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/loader/plugin/DefaultPluginProcessorLoader.java", "stars": "23", "class_props": {"extends": null, "implements": ["PluginProcessorLoader"], "modifiers": ["public"]}}, {"id": 44480, "method_name": "getJavaFileForOutput", "class_name": "CustomFileManager", "params": ["Location", "String", "JavaFileObject", "FileObject"], "throws": ["IOException"], "modifiers": ["public"], "return_type": "JavaFileObject", "snippet": "        public JavaFileObject getJavaFileForOutput(Location location, String className, JavaFileObject.Kind kind, FileObject sibling) throws IOException {\n            if(null == memoryClassObject){\n                memoryClassObject = new JavaMemoryClassObject(className, kind);\n            }\n            return memoryClassObject;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/loader/plugin/DefaultPluginProcessorLoader.java", "stars": "23", "class_props": {"extends": "ForwardingJavaFileManager", "implements": null, "modifiers": ["static", "private"]}}, {"id": 44481, "method_name": "getClassObject", "class_name": "CustomFileManager", "params": [], "throws": null, "modifiers": [], "return_type": "JavaMemoryClassObject", "snippet": "        JavaMemoryClassObject getClassObject(){\n            return memoryClassObject;\n        }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/webank/wedatasphere/exchangis/datax/core/processor/loader/plugin/DefaultPluginProcessorLoader.java", "stars": "23", "class_props": {"extends": "ForwardingJavaFileManager", "implements": null, "modifiers": ["static", "private"]}}, {"id": 44482, "method_name": "getApp", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AzkabanExecutorServer", "snippet": "  public static AzkabanExecutorServer getApp() {\n    return app;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44483, "method_name": "main", "class_name": "AzkabanExecutorServer", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void main(final String[] args) throws Exception {\n    // Redirect all std out and err messages into log4j\n    StdOutErrRedirect.redirectOutAndErrToLog();\n\n    logger.info(\"Starting Jetty Azkaban Executor...\");\n\n    if (System.getSecurityManager() == null) {\n      Policy.setPolicy(new Policy() {\n        @Override\n        public boolean implies(final ProtectionDomain domain, final Permission permission) {\n          return true; // allow all\n        }\n      });\n      System.setSecurityManager(new SecurityManager());\n    }\n\n    final Props props = AzkabanServer.loadProps(args);\n\n    if (props == null) {\n      logger.error(\"Azkaban Properties not loaded.\");\n      logger.error(\"Exiting Azkaban Executor Server...\");\n      return;\n    }\n\n    /* Initialize Guice Injector */\n    final Injector injector = Guice.createInjector(\n        new AzkabanCommonModule(props),\n        new AzkabanExecServerModule()\n    );\n    SERVICE_PROVIDER.setInjector(injector);\n\n    launch(injector.getInstance(AzkabanExecutorServer.class));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44484, "method_name": "launch", "class_name": "AzkabanExecutorServer", "params": ["AzkabanExecutorServer"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "  public static void launch(final AzkabanExecutorServer azkabanExecutorServer) throws Exception {\n    azkabanExecutorServer.start();\n    setupTimeZone(azkabanExecutorServer.getAzkabanProps());\n    app = azkabanExecutorServer;\n\n    Runtime.getRuntime().addShutdownHook(new Thread() {\n\n      @Override\n      public void run() {\n        try {\n          logTopMemoryConsumers();\n        } catch (final Exception e) {\n          AzkabanExecutorServer.logger.info((\"Exception when logging top memory consumers\"), e);\n        }\n\n        final String host = AzkabanExecutorServer.app.getHost();\n        final int port = AzkabanExecutorServer.app.getPort();\n\n        AzkabanExecutorServer.logger.warn(\"Shutting down executor...\");\n        try {\n          AzkabanExecutorServer.app.shutdownNow();\n          AzkabanExecutorServer.app.getFlowRunnerManager().deleteExecutionDirectory();\n        } catch (final Exception e) {\n          AzkabanExecutorServer.logger.error(\"Error while shutting down http server.\", e);\n        }\n        // FIXME\u00a0Logic optimization, close the executor thread pool first, and then delete the executor information.\n        try {\n          AzkabanExecutorServer.logger.info(String\n              .format(\"Removing executor(host: %s, port: %s) entry from database...\", host, port));\n          AzkabanExecutorServer.app.getExecutorLoader().removeExecutor(host, port);\n        } catch (final ExecutorManagerException ex) {\n          AzkabanExecutorServer.logger.error(\n              String.format(\"Exception when removing executor(host: %s, port: %s)\", host, port),\n              ex);\n        }\n      }\n\n      public void logTopMemoryConsumers() throws Exception, IOException {\n        if (new File(\"/bin/bash\").exists() && new File(\"/bin/ps\").exists()\n            && new File(\"/usr/bin/head\").exists()) {\n          AzkabanExecutorServer.logger.info(\"logging top memory consumer\");\n\n          final java.lang.ProcessBuilder processBuilder =\n              new java.lang.ProcessBuilder(\"/bin/bash\", \"-c\",\n                  \"/bin/ps aux --sort -rss | /usr/bin/head\");\n          final Process p = processBuilder.start();\n          p.waitFor();\n\n          final InputStream is = p.getInputStream();\n          final java.io.BufferedReader reader =\n              new java.io.BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8));\n          String line = null;\n          while ((line = reader.readLine()) != null) {\n            AzkabanExecutorServer.logger.info(line);\n          }\n          is.close();\n        }\n      }\n    });\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44485, "method_name": "setupTimeZone", "class_name": "AzkabanExecutorServer", "params": ["Props"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "  private static void setupTimeZone(final Props azkabanSettings) {\n    if (azkabanSettings.containsKey(DEFAULT_TIMEZONE_ID)) {\n      final String timezone = azkabanSettings.getString(DEFAULT_TIMEZONE_ID);\n      System.setProperty(\"user.timezone\", timezone);\n      TimeZone.setDefault(TimeZone.getTimeZone(timezone));\n      DateTimeZone.setDefault(DateTimeZone.forID(timezone));\n\n      logger.info(\"Setting timezone to \" + timezone);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44486, "method_name": "start", "class_name": "AzkabanExecutorServer", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void start() throws Exception {\n    this.root.setAttribute(Constants.AZKABAN_SERVLET_CONTEXT_KEY, this);\n\n    JmxJobMBeanManager.getInstance().initialize(this.props);\n\n    // make sure this happens before\n    configureJobCallback(this.props);\n\n    configureMBeanServer();\n    configureMetricReports();\n\n    loadCustomJMXAttributeProcessor(this.props);\n\n    try {\n      this.server.start();\n    } catch (final Exception e) {\n      logger.error(e);\n      Utils.croak(e.getMessage(), 1);\n    }\n\n    insertExecutorEntryIntoDB();\n    dumpPortToFile();\n\n    logger.info(\"Started Executor Server on \" + getExecutorHostPort());\n\n    if (this.props.getBoolean(ConfigurationKeys.IS_METRICS_ENABLED, false)) {\n      startExecMetrics();\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44487, "method_name": "startExecMetrics", "class_name": "AzkabanExecutorServer", "params": [], "throws": ["Exception"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void startExecMetrics() throws Exception {\n    this.execMetrics.addFlowRunnerManagerMetrics(getFlowRunnerManager());\n\n    logger.info(\"starting reporting Executor Metrics\");\n    this.metricsManager.startReporting(\"AZ-EXEC\", this.props);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44488, "method_name": "insertExecutorEntryIntoDB", "class_name": "AzkabanExecutorServer", "params": [], "throws": ["ExecutorManagerException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void insertExecutorEntryIntoDB() throws ExecutorManagerException {\n    try {\n      final String host = requireNonNull(getHost());\n      final int port = getPort();\n      checkState(port != -1);\n      final Executor executor = this.executionLoader.fetchExecutor(host, port);\n      // FIXME\u00a0executorId changed from self-incrementing to configurable.\n      final int id = Integer.valueOf(this.props.get(EXECUTOR_SERVER_ID));\n      if (executor == null) {//\u5411\u6570\u636e\u5e93\u63d2\u5165executor\u8282\u70b9\u6570\u636e\n        //this.executionLoader.addExecutor(host, port);\n        logger.info(\"This executor wasn't found in the DB. Adding self.\");\n        this.executionLoader.addExecutorFixed(id, host, port);\n      } else {\n        logger.info(\"This executor is already in the DB. Found: \" + executor);\n      }\n      // If executor already exists, ignore it\n    } catch (final ExecutorManagerException e) {\n      logger.error(\"Error inserting executor entry into DB\", e);\n      throw e;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44489, "method_name": "dumpPortToFile", "class_name": "AzkabanExecutorServer", "params": [], "throws": ["IOException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void dumpPortToFile() throws IOException {\n    // By default this should write to the working directory\n    final String portFileName = this.props\n        .getString(ConfigurationKeys.EXECUTOR_PORT_FILE, DEFAULT_EXECUTOR_PORT_FILE);\n    FileIOUtils.dumpNumberToFile(Paths.get(portFileName), getPort());\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44490, "method_name": "configureJobCallback", "class_name": "AzkabanExecutorServer", "params": ["Props"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void configureJobCallback(final Props props) {\n    final boolean jobCallbackEnabled =\n        props.getBoolean(\"azkaban.executor.jobcallback.enabled\", true);\n\n    logger.info(\"Job callback enabled? \" + jobCallbackEnabled);\n\n    if (jobCallbackEnabled) {\n      JobCallbackManager.initialize(props);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44491, "method_name": "configureMetricReports", "class_name": "AzkabanExecutorServer", "params": [], "throws": ["MetricException"], "modifiers": ["private"], "return_type": "void", "snippet": "  private void configureMetricReports() throws MetricException {\n    final Props props = getAzkabanProps();\n    if (props != null && props.getBoolean(\"executor.metric.reports\", false)) {\n      logger.info(\"Starting to configure Metric Reports\");\n      final MetricReportManager metricManager = MetricReportManager.getInstance();\n      final IMetricEmitter metricEmitter = new InMemoryMetricEmitter(props);\n      metricManager.addMetricEmitter(metricEmitter);\n\n      logger.info(\"Adding number of failed flow metric\");\n      metricManager.addMetric(new NumFailedFlowMetric(metricManager, props\n          .getInt(METRIC_INTERVAL\n                  + NumFailedFlowMetric.NUM_FAILED_FLOW_METRIC_NAME,\n              props.getInt(METRIC_INTERVAL + \"default\"))));\n\n      logger.info(\"Adding number of failed jobs metric\");\n      metricManager.addMetric(new NumFailedJobMetric(metricManager, props\n          .getInt(METRIC_INTERVAL\n                  + NumFailedJobMetric.NUM_FAILED_JOB_METRIC_NAME,\n              props.getInt(METRIC_INTERVAL + \"default\"))));\n\n      logger.info(\"Adding number of running Jobs metric\");\n      metricManager.addMetric(new NumRunningJobMetric(metricManager, props\n          .getInt(METRIC_INTERVAL\n                  + NumRunningJobMetric.NUM_RUNNING_JOB_METRIC_NAME,\n              props.getInt(METRIC_INTERVAL + \"default\"))));\n\n      logger.info(\"Adding number of running flows metric\");\n      metricManager.addMetric(new NumRunningFlowMetric(this.runnerManager,\n          metricManager, props.getInt(METRIC_INTERVAL\n              + NumRunningFlowMetric.NUM_RUNNING_FLOW_METRIC_NAME,\n          props.getInt(METRIC_INTERVAL + \"default\"))));\n\n      logger.info(\"Adding number of queued flows metric\");\n      metricManager.addMetric(new NumQueuedFlowMetric(this.runnerManager,\n          metricManager, props.getInt(METRIC_INTERVAL\n              + NumQueuedFlowMetric.NUM_QUEUED_FLOW_METRIC_NAME,\n          props.getInt(METRIC_INTERVAL + \"default\"))));\n\n      logger.info(\"Completed configuring Metric Reports\");\n    }\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44492, "method_name": "loadCustomJMXAttributeProcessor", "class_name": "AzkabanExecutorServer", "params": ["Props"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void loadCustomJMXAttributeProcessor(final Props props) {\n    final String jmxAttributeEmitter =\n        props.get(CUSTOM_JMX_ATTRIBUTE_PROCESSOR_PROPERTY);\n    if (jmxAttributeEmitter != null) {\n      try {\n        logger.info(\"jmxAttributeEmitter: \" + jmxAttributeEmitter);\n        final Constructor<Props>[] constructors =\n            (Constructor<Props>[]) Class.forName(jmxAttributeEmitter)\n                .getConstructors();\n\n        constructors[0].newInstance(props.toProperties());\n      } catch (final Exception e) {\n        logger.error(\"Encountered error while loading and instantiating \"\n            + jmxAttributeEmitter, e);\n        throw new IllegalStateException(\n            \"Encountered error while loading and instantiating \"\n                + jmxAttributeEmitter, e);\n      }\n    } else {\n      logger.info(\"No value for property: \"\n          + CUSTOM_JMX_ATTRIBUTE_PROCESSOR_PROPERTY + \" was found\");\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44493, "method_name": "getExecutorLoader", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ExecutorLoader", "snippet": "  public ExecutorLoader getExecutorLoader() {\n    return this.executionLoader;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44494, "method_name": "getAzkabanProps", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Props", "snippet": "  public Props getAzkabanProps() {\n    return this.props;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44495, "method_name": "getFlowRunnerManager", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FlowRunnerManager", "snippet": "  public FlowRunnerManager getFlowRunnerManager() {\n    return this.runnerManager;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44496, "method_name": "configureMBeanServer", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void configureMBeanServer() {\n    logger.info(\"Registering MBeans...\");\n    this.mbeanServer = ManagementFactory.getPlatformMBeanServer();\n\n    registerMbean(\"executorJetty\", new JmxJettyServer(this.server));\n    registerMbean(\"flowRunnerManager\", new JmxFlowRunnerManager(this.runnerManager));\n    registerMbean(\"jobJMXMBean\", JmxJobMBeanManager.getInstance());\n\n    if (JobCallbackManager.isInitialized()) {\n      final JobCallbackManager jobCallbackMgr = JobCallbackManager.getInstance();\n      registerMbean(\"jobCallbackJMXMBean\",\n          jobCallbackMgr.getJmxJobCallbackMBean());\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44497, "method_name": "close", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void close() {\n    try {\n      for (final ObjectName name : this.registeredMBeans) {\n        this.mbeanServer.unregisterMBean(name);\n        logger.info(\"Jmx MBean \" + name.getCanonicalName() + \" unregistered.\");\n      }\n    } catch (final Exception e) {\n      logger.error(\"Failed to cleanup MBeanServer\", e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44498, "method_name": "registerMbean", "class_name": "AzkabanExecutorServer", "params": ["String", "Object"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void registerMbean(final String name, final Object mbean) {\n    final Class<?> mbeanClass = mbean.getClass();\n    final ObjectName mbeanName;\n    try {\n      mbeanName = new ObjectName(mbeanClass.getName() + \":name=\" + name);\n      this.mbeanServer.registerMBean(mbean, mbeanName);\n      logger.info(\"Bean \" + mbeanClass.getCanonicalName() + \" registered.\");\n      this.registeredMBeans.add(mbeanName);\n    } catch (final Exception e) {\n      logger.error(\"Error registering mbean \" + mbeanClass.getCanonicalName(),\n          e);\n    }\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44499, "method_name": "getMbeanNames", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<ObjectName>", "snippet": "  public List<ObjectName> getMbeanNames() {\n    return this.registeredMBeans;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44500, "method_name": "getMBeanInfo", "class_name": "AzkabanExecutorServer", "params": ["ObjectName"], "throws": null, "modifiers": ["public"], "return_type": "MBeanInfo", "snippet": "  public MBeanInfo getMBeanInfo(final ObjectName name) {\n    try {\n      return this.mbeanServer.getMBeanInfo(name);\n    } catch (final Exception e) {\n      logger.error(e);\n      return null;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44501, "method_name": "getMBeanAttribute", "class_name": "AzkabanExecutorServer", "params": ["ObjectName", "String"], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getMBeanAttribute(final ObjectName name, final String attribute) {\n    try {\n      return this.mbeanServer.getAttribute(name, attribute);\n    } catch (final Exception e) {\n      logger.error(e);\n      return null;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44502, "method_name": "getHost", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getHost() {\n    if (this.props.containsKey(ConfigurationKeys.AZKABAN_SERVER_HOST_NAME)) {\n      final String hostName = this.props\n          .getString(Constants.ConfigurationKeys.AZKABAN_SERVER_HOST_NAME);\n      if (!StringUtils.isEmpty(hostName)) {\n        return hostName;\n      }\n    }\n\n    String host = \"unkownHost\";\n    try {\n      host = InetAddress.getLocalHost().getCanonicalHostName();\n    } catch (final Exception e) {\n      logger.error(\"Failed to fetch LocalHostName\");\n    }\n    return host;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44503, "method_name": "getExecutorHostPort", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getExecutorHostPort() {\n    return getHost() + \":\" + getPort();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44504, "method_name": "sleep", "class_name": "AzkabanExecutorServer", "params": ["Duration"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void sleep(final Duration duration) {\n    try {\n      Thread.sleep(duration.toMillis());\n    } catch (final InterruptedException e) {\n      logger.error(e);\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44505, "method_name": "shutdown", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdown() {\n    logger.warn(\"Shutting down AzkabanExecutorServer...\");\n    new Thread(() -> {\n      // Hack: Sleep for a little time to allow API calls to complete\n      sleep(Duration.ofSeconds(2));\n      shutdownInternal();\n    }, \"shutdown\").start();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44506, "method_name": "shutdownInternal", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void shutdownInternal() {\n    getFlowRunnerManager().shutdown();\n    // Sleep for an hour to wait for web server updater thread\n    // {@link azkaban.executor.RunningExecutionsUpdaterThread#updateExecutions} to finalize updating\n    sleep(Duration.ofHours(1));\n    // trigger shutdown hook\n    System.exit(0);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44507, "method_name": "shutdownNow", "class_name": "AzkabanExecutorServer", "params": [], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void shutdownNow() throws Exception {\n    this.server.stop();\n    this.server.destroy();\n    getFlowRunnerManager().shutdownNow();\n    close();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44508, "method_name": "getPort", "class_name": "AzkabanExecutorServer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "  public int getPort() {\n    final Connector[] connectors = this.server.getConnectors();\n    checkState(connectors.length >= 1, \"Server must have at least 1 connector\");\n\n    // The first connector is created upon initializing the server. That's the one that has the port.\n\n    ServerConnector serverConnector;\n\n    if(( server.getConnectors()[0] instanceof ServerConnector)){\n      //serverConnector = server.getConnectors()[0].getBean(ServerConnector.class);\n      serverConnector = (ServerConnector)server.getConnectors()[0];\n    }else {\n      serverConnector = new ServerConnector(server);\n    }\n\n    return serverConnector.getLocalPort();\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-exec-server/src/main/java/azkaban/execapp/AzkabanExecutorServer.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44509, "method_name": "getPrimaryBounds", "class_name": "ScreenUtils", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "Rectangle2D", "snippet": "    public static Rectangle2D getPrimaryBounds() {\n        var screen = Screen.getPrimary();\n        return screen.getVisualBounds();\n    }", "url": "https://raw.githubusercontent.com/GZYangKui/openjfx-database/master/app/src/main/java/com/openjfx/database/app/utils/ScreenUtils.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44510, "method_name": "getArg0", "class_name": "CheckSubscriptionCost", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getArg0() {\n        return arg0;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/CheckSubscriptionCost.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44511, "method_name": "setArg0", "class_name": "CheckSubscriptionCost", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg0(int value) {\n        this.arg0 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/CheckSubscriptionCost.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44512, "method_name": "getArg1", "class_name": "CheckSubscriptionCost", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getArg1() {\n        return arg1;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/CheckSubscriptionCost.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44513, "method_name": "setArg1", "class_name": "CheckSubscriptionCost", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg1(int value) {\n        this.arg1 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/CheckSubscriptionCost.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44514, "method_name": "getArg2", "class_name": "CheckSubscriptionCost", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getArg2() {\n        return arg2;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/CheckSubscriptionCost.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44515, "method_name": "setArg2", "class_name": "CheckSubscriptionCost", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArg2(Date value) {\n        this.arg2 = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/cerbercrypt/usercard/CheckSubscriptionCost.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44516, "method_name": "setUp", "class_name": "IncludeTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/includes/MapperConfig.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/includes/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/includes/IncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44517, "method_name": "testIncludes", "class_name": "IncludeTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testIncludes()  {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      final Integer result = sqlSession.selectOne(\"org.apache.ibatis.submitted.includes.mapper.selectWithProperty\");\n      Assertions.assertEquals(Integer.valueOf(1), result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/includes/IncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44518, "method_name": "testParametrizedIncludes", "class_name": "IncludeTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void testParametrizedIncludes() {\n    try (SqlSession sqlSession = sqlSessionFactory.openSession()) {\n      final Map<String, Object> result = sqlSession.selectOne(\"org.apache.ibatis.submitted.includes.mapper.select\");\n      // Assertions.assertEquals(Integer.valueOf(1), result);\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/includes/IncludeTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44519, "method_name": "call", "class_name": "VirtualSymbol", "params": ["Emulator<?>", "Object"], "throws": null, "modifiers": ["public"], "return_type": "Number", "snippet": "    public Number[] call(Emulator<?> emulator, Object... args) {\n        return Module.emulateFunction(emulator, address, args);\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/virtualmodule/VirtualSymbol.java", "stars": "16", "class_props": {"extends": "Symbol", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44520, "method_name": "getAddress", "class_name": "VirtualSymbol", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getAddress() {\n        return address;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/virtualmodule/VirtualSymbol.java", "stars": "16", "class_props": {"extends": "Symbol", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44521, "method_name": "getValue", "class_name": "VirtualSymbol", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getValue() {\n        return address - module.base;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/virtualmodule/VirtualSymbol.java", "stars": "16", "class_props": {"extends": "Symbol", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44522, "method_name": "isUndef", "class_name": "VirtualSymbol", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isUndef() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/virtualmodule/VirtualSymbol.java", "stars": "16", "class_props": {"extends": "Symbol", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44523, "method_name": "getModuleName", "class_name": "VirtualSymbol", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getModuleName() {\n        return module.name;\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/virtualmodule/VirtualSymbol.java", "stars": "16", "class_props": {"extends": "Symbol", "implements": null, "modifiers": ["final", "public"]}}, {"id": 44524, "method_name": "configure", "class_name": "JwtAutoConfiguration", "params": ["HttpSecurity"], "throws": ["Exception"], "modifiers": ["protected"], "return_type": "void", "snippet": "\tprotected void configure(HttpSecurity http) throws Exception {\n\t\thttp.authorizeRequests(ae -> ae //\n\t\t\t\t.mvcMatchers(this.properties.getLoginUrl()).permitAll() //\n\t\t\t\t.anyRequest().authenticated() //\n\t\t)//\n\t\t\t\t.addFilter(this.jwtAuthenticationFilter()) //\n\t\t\t\t.addFilter(this.jwtAuthorizationFilter());\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAutoConfiguration.java", "stars": "4", "class_props": {"extends": "WebSecurityConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44525, "method_name": "jwtAuthenticationFilter", "class_name": "JwtAutoConfiguration", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "JwtAuthenticationFilter", "snippet": "\tJwtAuthenticationFilter jwtAuthenticationFilter() throws Exception {\n\t\treturn new JwtAuthenticationFilter(this.authenticationManager(), this.properties.getAudience(),\n\t\t\t\tthis.properties.getIssuer(), this.properties.getSecret(), this.properties.getType(),\n\t\t\t\tthis.properties.getLoginUrl());\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAutoConfiguration.java", "stars": "4", "class_props": {"extends": "WebSecurityConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44526, "method_name": "jwtAuthorizationFilter", "class_name": "JwtAutoConfiguration", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "JwtAuthorizationFilter", "snippet": "\tJwtAuthorizationFilter jwtAuthorizationFilter() throws Exception {\n\t\treturn new JwtAuthorizationFilter(this.authenticationManager(), this.properties.getSecret());\n\t}", "url": "https://raw.githubusercontent.com/joshlong/security-jwt-fun/master/jwt-servlet/src/main/java/com/joshlong/jwt/JwtAutoConfiguration.java", "stars": "4", "class_props": {"extends": "WebSecurityConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44527, "method_name": "getFilters", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getFilters()\n    {\n        return filters;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44528, "method_name": "setFilters", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFilters( List<IdTitle> filters )\n    {\n        this.filters = filters;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44529, "method_name": "getCities", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getCities()\n    {\n        return cities;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44530, "method_name": "setCities", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCities( List<IdTitle> cities )\n    {\n        this.cities = cities;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44531, "method_name": "getStreets", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getStreets()\n    {\n        return streets;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44532, "method_name": "setStreets", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setStreets( List<IdTitle> streets )\n    {\n        this.streets = streets;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44533, "method_name": "getParametersText", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersText()\n    {\n        return parametersText;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44534, "method_name": "setParametersText", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersText( List<IdTitle> parametersText )\n    {\n        this.parametersText = parametersText;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44535, "method_name": "getParametersList", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersList()\n    {\n        return parametersList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44536, "method_name": "setParametersList", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersList( List<IdTitle> parametersList )\n    {\n        this.parametersList = parametersList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44537, "method_name": "getParametersPhone", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersPhone()\n    {\n        return parametersPhone;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44538, "method_name": "setParametersPhone", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersPhone( List<IdTitle> parametersPhone )\n    {\n        this.parametersPhone = parametersPhone;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44539, "method_name": "getParametersAddress", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersAddress()\n    {\n        return parametersAddress;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44540, "method_name": "setParametersAddress", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersAddress( List<IdTitle> parametersAddress )\n    {\n        this.parametersAddress = parametersAddress;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44541, "method_name": "getParametersDate", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersDate()\n    {\n        return parametersDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44542, "method_name": "setParametersDate", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersDate( List<IdTitle> parametersDate )\n    {\n        this.parametersDate = parametersDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44543, "method_name": "getParametersContractService", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersContractService()\n    {\n        return parametersContractService;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44544, "method_name": "setParametersContractService", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersContractService( List<IdTitle> parametersContractService )\n    {\n        this.parametersContractService = parametersContractService;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44545, "method_name": "getParametersEMail", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersEMail()\n    {\n        return parametersEMail;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44546, "method_name": "setParametersEMail", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersEMail( List<IdTitle> parametersEMail )\n    {\n        this.parametersEMail = parametersEMail;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44547, "method_name": "getParametersFlag", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersFlag()\n    {\n        return parametersFlag;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44548, "method_name": "setParametersFlag", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersFlag( List<IdTitle> parametersFlag )\n    {\n        this.parametersFlag = parametersFlag;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44549, "method_name": "getParametersContract", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersContract()\n    {\n        return parametersContract;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44550, "method_name": "setParametersContract", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersContract( List<IdTitle> parametersContract )\n    {\n        this.parametersContract = parametersContract;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44551, "method_name": "getParametersObjectText", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersObjectText()\n    {\n        return parametersObjectText;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44552, "method_name": "setParametersObjectText", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersObjectText( List<IdTitle> parametersObjectText )\n    {\n        this.parametersObjectText = parametersObjectText;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44553, "method_name": "getParametersObjectAddress", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersObjectAddress()\n    {\n        return parametersObjectAddress;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44554, "method_name": "setParametersObjectAddress", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersObjectAddress( List<IdTitle> parametersObjectAddress )\n    {\n        this.parametersObjectAddress = parametersObjectAddress;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44555, "method_name": "getParametersObjectList", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersObjectList()\n    {\n        return parametersObjectList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44556, "method_name": "setParametersObjectList", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersObjectList( List<IdTitle> parametersObjectList )\n    {\n        this.parametersObjectList = parametersObjectList;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44557, "method_name": "getParametersObjectFlag", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersObjectFlag()\n    {\n        return parametersObjectFlag;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44558, "method_name": "setParametersObjectFlag", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersObjectFlag( List<IdTitle> parametersObjectFlag )\n    {\n        this.parametersObjectFlag = parametersObjectFlag;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44559, "method_name": "getParametersObjectDate", "class_name": "OpenContract", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<IdTitle>", "snippet": "    public List<IdTitle> getParametersObjectDate()\n    {\n        return parametersObjectDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44560, "method_name": "setParametersObjectDate", "class_name": "OpenContract", "params": ["List<IdTitle>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setParametersObjectDate( List<IdTitle> parametersObjectDate )\n    {\n        this.parametersObjectDate = parametersObjectDate;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/proto/model/OpenContract.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44561, "method_name": "setIndicatorColor", "class_name": "BallPulseView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setIndicatorColor(int color) {\n        mPaint.setColor(color);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44562, "method_name": "setNormalColor", "class_name": "BallPulseView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setNormalColor(@ColorInt int color) {\n        normalColor = color;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44563, "method_name": "setAnimatingColor", "class_name": "BallPulseView", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAnimatingColor(@ColorInt int color) {\n        animatingColor = color;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44564, "method_name": "onDraw", "class_name": "BallPulseView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        float radius = (Math.min(getWidth(), getHeight()) - circleSpacing * 2) / 6;\n        float x = getWidth() / 2 - (radius * 2 + circleSpacing);\n        float y = getHeight() / 2;\n        for (int i = 0; i < 3; i++) {\n            canvas.save();\n            float translateX = x + (radius * 2) * i + circleSpacing * i;\n            canvas.translate(translateX, y);\n            canvas.scale(scaleFloats[i], scaleFloats[i]);\n            canvas.drawCircle(0, 0, radius, mPaint);\n            canvas.restore();\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44565, "method_name": "onDetachedFromWindow", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDetachedFromWindow() {\n        super.onDetachedFromWindow();\n        if (mAnimators != null) for (int i = 0; i < mAnimators.size(); i++) {\n            mAnimators.get(i).cancel();\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44566, "method_name": "startAnim", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startAnim() {\n        if (mAnimators == null) createAnimators();\n        if (mAnimators == null) return;\n        if (isStarted()) return;\n\n        for (int i = 0; i < mAnimators.size(); i++) {\n            ValueAnimator animator = mAnimators.get(i);\n\n            //when the animator restart , add the updateListener again because they was removed by animator stop .\n            ValueAnimator.AnimatorUpdateListener updateListener = mUpdateListeners.get(animator);\n            if (updateListener != null) {\n                animator.addUpdateListener(updateListener);\n            }\n            animator.start();\n        }\n        setIndicatorColor(animatingColor);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44567, "method_name": "stopAnim", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void stopAnim() {\n        if (mAnimators != null) {\n            for (ValueAnimator animator : mAnimators) {\n                if (animator != null && animator.isStarted()) {\n                    animator.removeAllUpdateListeners();\n                    animator.end();\n                }\n            }\n        }\n        setIndicatorColor(normalColor);\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44568, "method_name": "isStarted", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "    private boolean isStarted() {\n        for (ValueAnimator animator : mAnimators) {\n            return animator.isStarted();\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44569, "method_name": "createAnimators", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void createAnimators() {\n        mAnimators = new ArrayList<>();\n        int[] delays = new int[]{120, 240, 360};\n        for (int i = 0; i < 3; i++) {\n            final int index = i;\n\n            ValueAnimator scaleAnim = ValueAnimator.ofFloat(1, 0.3f, 1);\n\n            scaleAnim.setDuration(750);\n            scaleAnim.setRepeatCount(ValueAnimator.INFINITE);\n            scaleAnim.setStartDelay(delays[i]);\n\n            mUpdateListeners.put(scaleAnim, new ValueAnimator.AnimatorUpdateListener() {\n                @Override\n                public void onAnimationUpdate(ValueAnimator animation) {\n                    scaleFloats[index] = (float) animation.getAnimatedValue();\n                    postInvalidate();\n                }\n            });\n            mAnimators.add(scaleAnim);\n        }\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44570, "method_name": "getView", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "View", "snippet": "    public View getView() {\n        return this;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44571, "method_name": "onPullingUp", "class_name": "BallPulseView", "params": ["float", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPullingUp(float fraction, float maxHeadHeight, float headHeight) {\n        stopAnim();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44572, "method_name": "startAnim", "class_name": "BallPulseView", "params": ["float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startAnim(float maxHeadHeight, float headHeight) {\n        startAnim();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44573, "method_name": "onPullReleasing", "class_name": "BallPulseView", "params": ["float", "float", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPullReleasing(float fraction, float maxHeadHeight, float headHeight) {\n        stopAnim();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44574, "method_name": "onFinish", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFinish() {\n        stopAnim();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44575, "method_name": "reset", "class_name": "BallPulseView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n        stopAnim();\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/refreshlibrary/src/main/java/com/lcodecore/tkrefreshlayout/Footer/BallPulseView.java", "stars": "9", "class_props": {"extends": "View", "implements": ["IBottomView"], "modifiers": ["public"]}}, {"id": 44576, "method_name": "dataSource", "class_name": "DruidDBConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "    public DataSource dataSource() {\n        DruidDataSource datasource = new DruidDataSource();\n\n        datasource.setUrl(this.dbUrl);\n        datasource.setUsername(username);\n        datasource.setPassword(password);\n        datasource.setDriverClassName(driverClassName);\n\n        //configuration\n        datasource.setInitialSize(initialSize);\n        datasource.setMinIdle(minIdle);\n        datasource.setMaxActive(maxActive);\n        datasource.setMaxWait(maxWait);\n        datasource.setTimeBetweenEvictionRunsMillis(timeBetweenEvictionRunsMillis);\n        datasource.setMinEvictableIdleTimeMillis(minEvictableIdleTimeMillis);\n        datasource.setValidationQuery(validationQuery);\n        datasource.setTestWhileIdle(testWhileIdle);\n        datasource.setTestOnBorrow(testOnBorrow);\n        datasource.setTestOnReturn(testOnReturn);\n        datasource.setPoolPreparedStatements(poolPreparedStatements);\n        datasource.setMaxPoolPreparedStatementPerConnectionSize(maxPoolPreparedStatementPerConnectionSize);\n        try {\n            datasource.setFilters(filters);\n        } catch (SQLException e) {\n            logger.error(\"druid configuration initialization filter\", e);\n        }\n        datasource.setConnectionProperties(connectionProperties);\n\n        return datasource;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/config/DruidDBConfig.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44577, "method_name": "druidServlet", "class_name": "DruidDBConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ServletRegistrationBean", "snippet": "    public ServletRegistrationBean druidServlet() {\n        ServletRegistrationBean reg = new ServletRegistrationBean();\n        reg.setServlet(new StatViewServlet());\n        reg.addUrlMappings(\"/druid/*\");\n        reg.addInitParameter(\"allow\", \"\"); //\u767d\u540d\u5355\n        return reg;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/config/DruidDBConfig.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44578, "method_name": "filterRegistrationBean", "class_name": "DruidDBConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "FilterRegistrationBean", "snippet": "    @Bean public FilterRegistrationBean filterRegistrationBean() {\n        FilterRegistrationBean filterRegistrationBean = new FilterRegistrationBean();\n        filterRegistrationBean.setFilter(new WebStatFilter());\n        filterRegistrationBean.addUrlPatterns(\"/*\");\n        filterRegistrationBean.addInitParameter(\"exclusions\", \"*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*\");\n        filterRegistrationBean.addInitParameter(\"profileEnable\", \"true\");\n        filterRegistrationBean.addInitParameter(\"principalCookieName\",\"USER_COOKIE\");\n        filterRegistrationBean.addInitParameter(\"principalSessionName\",\"USER_SESSION\");\n        filterRegistrationBean.addInitParameter(\"DruidWebStatFilter\",\"/*\");\n        return filterRegistrationBean;\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/common/config/DruidDBConfig.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44579, "method_name": "doStartTag", "class_name": "SavePageContextTag", "params": [], "throws": ["JspException"], "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int doStartTag()\n\t\tthrows JspException\n\t{\n\t\tsavedAttributes = new HashMap<String, Object>();\n\t\t\n\t\tEnumeration<String> attributeNames = pageContext.getAttributeNamesInScope( PageContext.PAGE_SCOPE );\n\t\twhile( attributeNames.hasMoreElements() )\n\t\t{\n\t\t\tString name = attributeNames.nextElement();\n\t\t\tsavedAttributes.put( name, pageContext.getAttribute( name, PageContext.PAGE_SCOPE ) );\n\t\t}\n\t\t\n\t\treturn EVAL_BODY_INCLUDE;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/SavePageContextTag.java", "stars": "12", "class_props": {"extends": "TagSupport", "implements": null, "modifiers": ["public"]}}, {"id": 44580, "method_name": "doEndTag", "class_name": "SavePageContextTag", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int doEndTag()\n\t{\n\t\tfor( String name : Collections.list( pageContext.getAttributeNamesInScope( PageContext.PAGE_SCOPE ) ) )\n\t\t{\n\t\t\tif( export.contains( name ) )\n\t\t\t{\n\t\t\t\tsavedAttributes.put( name, pageContext.getAttribute( name, PageContext.PAGE_SCOPE ) );\n\t\t\t}\t\t\t\n\t\t\tpageContext.removeAttribute( name, PageContext.PAGE_SCOPE );\n\t\t}\n\t\t\n\t\tfor( Map.Entry<String, Object> me : savedAttributes.entrySet() )\n\t\t{\n\t\t\tpageContext.setAttribute( me.getKey(), me.getValue(), PageContext.PAGE_SCOPE );\n\t\t}\n\t\t\n\t\treturn EVAL_PAGE;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/SavePageContextTag.java", "stars": "12", "class_props": {"extends": "TagSupport", "implements": null, "modifiers": ["public"]}}, {"id": 44581, "method_name": "setExport", "class_name": "SavePageContextTag", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setExport( String value )\n\t{\n\t\texport = Utils.toSet( value );\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/servlet/jsp/SavePageContextTag.java", "stars": "12", "class_props": {"extends": "TagSupport", "implements": null, "modifiers": ["public"]}}, {"id": 44582, "method_name": "processCommand", "class_name": "MemoryCommand", "params": ["Emulator<?>", "GdbStub", "String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean processCommand(Emulator<?> emulator, GdbStub stub, String command) {\n        try {\n            int divider = command.indexOf(\",\");\n            long address = Long.parseLong(command.substring(1, divider), 16);\n            Pointer pointer = UnicornPointer.pointer(emulator, address);\n            if (pointer == null) {\n                stub.makePacketAndSend(\"E01\");\n                return true;\n            }\n            if (command.startsWith(\"m\")) {\n                int len = Integer.parseInt(command.substring(divider + 1), 16);\n                final String resp = Hex.encodeHexString(pointer.getByteArray(0, len)).toUpperCase();\n                stub.makePacketAndSend(resp);\n                return true;\n            } else {\n                int dividerForValue = command.indexOf(\":\");\n                int len = Integer.parseInt(command.substring(divider + 1, dividerForValue), 16);\n                byte[] val = Hex.decodeHex(command.substring(dividerForValue + 1).toCharArray());\n                pointer.write(0, val, 0, len);\n                stub.makePacketAndSend(\"OK\");\n                return true;\n            }\n        } catch (UnicornException e) {\n            stub.makePacketAndSend(\"E01\");\n            return true;\n        } catch (DecoderException e) {\n            throw new IllegalStateException(\"process memory command failed: \" + command, e);\n        }\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/debugger/gdb/MemoryCommand.java", "stars": "16", "class_props": {"extends": null, "implements": ["GdbStubCommand"], "modifiers": []}}, {"id": 44583, "method_name": "onCreate", "class_name": "ItemsInShopByCat", "params": ["Bundle"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_items_in_stock_by_cat);\n        ButterKnife.bind(this);\n\n        Toolbar toolbar = findViewById(R.id.toolbar);\n        setSupportActionBar(toolbar);\n\n     /*   FloatingActionButton fab = (FloatingActionButton) findViewById(R.id.fab);\n        fab.setOnClickListener(new View.OnClickListener() {\n            @Override\n            public void onClick(View view) {\n                Snackbar.make(view, \"Replace with your own action\", Snackbar.LENGTH_LONG)\n                        .setAction(\"Action\", null).show();\n            }\n        });\n//     */   getSupportActionBar().setDisplayHomeAsUpEnabled(true);\n\n\n\n        if(getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT)==null)\n        {\n            getSupportFragmentManager()\n                    .beginTransaction()\n                    .add(R.id.fragment_container,new ItemsInShopByCatSellerFragment(),TAG_FRAGMENT)\n                    .commit();\n        }\n\n\n        setupSlidingLayer();\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44584, "method_name": "setupSlidingLayer", "class_name": "ItemsInShopByCat", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void setupSlidingLayer()\n    {\n\n        ////slidingLayer.setShadowDrawable(R.drawable.sidebar_shadow);\n        //slidingLayer.setShadowSizeRes(R.dimen.shadow_size);\n\n        if(slidingLayer!=null)\n        {\n            slidingLayer.setChangeStateOnTap(true);\n            slidingLayer.setSlidingEnabled(true);\n//            slidingLayer.setPreviewOffsetDistance(15);\n            slidingLayer.setOffsetDistance(30);\n            slidingLayer.setStickTo(SlidingLayer.STICK_TO_RIGHT);\n\n            DisplayMetrics metrics = new DisplayMetrics();\n            getWindowManager().getDefaultDisplay().getMetrics(metrics);\n\n            //RelativeLayout.LayoutParams layoutParams = new RelativeLayout.LayoutParams(250, ViewGroup.LayoutParams.MATCH_PARENT);\n\n            //slidingContents.setLayoutParams(layoutParams);\n\n            //slidingContents.setMinimumWidth(metrics.widthPixels-50);\n\n\n            if(getSupportFragmentManager().findFragmentByTag(TAG_SLIDING)==null)\n            {\n                System.out.println(\"Item Cat Simple : New Sliding Layer Loaded !\");\n                getSupportFragmentManager()\n                        .beginTransaction()\n                        .replace(R.id.slidinglayerfragment,new SlidingLayerSortItemsInShop(),TAG_SLIDING)\n                        .commit();\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44585, "method_name": "onBackPressed", "class_name": "ItemsInShopByCat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onBackPressed() {\n\n        Fragment fragment = getSupportFragmentManager()\n                .findFragmentByTag(TAG_FRAGMENT);\n\n        //notifyBackPressed !=null\n\n        if(fragment instanceof NotifyBackPressed)\n        {\n            if(((NotifyBackPressed) fragment).backPressed())\n            {\n                super.onBackPressed();\n            }\n        }\n        else\n        {\n            super.onBackPressed();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44586, "method_name": "notifyItemIndicatorChanged", "class_name": "ItemsInShopByCat", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifyItemIndicatorChanged(String header) {\n        itemHeader.setText(header);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44587, "method_name": "sortClick", "class_name": "ItemsInShopByCat", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void sortClick()\n    {\n        slidingLayer.openLayer(true);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44588, "method_name": "notifySortChanged", "class_name": "ItemsInShopByCat", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void notifySortChanged() {\n\n        Fragment fragment = getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT);\n\n        if(fragment instanceof NotifySort)\n        {\n            ((NotifySort)fragment).notifySortChanged();\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44589, "method_name": "onCreateOptionsMenu", "class_name": "ItemsInShopByCat", "params": ["Menu"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean onCreateOptionsMenu(Menu menu) {\n        super.onCreateOptionsMenu(menu);\n        MenuInflater inflater = getMenuInflater();\n        inflater.inflate(R.menu.menu_items_by_cat_simple, menu);\n\n\n        // Associate searchable configuration with the SearchView\n        SearchView searchView = (SearchView) menu.findItem(R.id.action_search).getActionView();\n        SearchManager searchManager = (SearchManager) getSystemService(SEARCH_SERVICE);\n        searchView.setSearchableInfo(searchManager.getSearchableInfo(getComponentName()));\n\n        MenuItem item = menu.findItem(R.id.action_search);\n\n        item.setOnActionExpandListener(new MenuItem.OnActionExpandListener() {\n            @Override\n            public boolean onMenuItemActionExpand(MenuItem item) {\n                return true;\n            }\n\n            @Override\n            public boolean onMenuItemActionCollapse(MenuItem item) {\n\n                Fragment fragment = getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT);\n\n                if(fragment instanceof NotifySearch)\n                {\n                    ((NotifySearch) fragment).endSearchMode();\n                }\n\n                return true;\n            }\n        });\n\n\n//        MenuItemCompat.setOnActionExpandListener(menu.findItem(R.id.action_search), new MenuItemCompat.OnActionExpandListener() {\n//            @Override\n//            public boolean onMenuItemActionExpand(MenuItem item) {\n//                return true;\n//            }\n//\n//            @Override\n//            public boolean onMenuItemActionCollapse(MenuItem item) {\n//\n//\n////                Toast.makeText(ShopsActivity.this, \"onCollapsed Called \", Toast.LENGTH_SHORT).show();\n//\n//                return true;\n//            }\n//        });\n\n\n        return true;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44590, "method_name": "onNewIntent", "class_name": "ItemsInShopByCat", "params": ["Intent"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onNewIntent(Intent intent) {\n        super.onNewIntent(intent);\n\n        handleIntent(intent);\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44591, "method_name": "handleIntent", "class_name": "ItemsInShopByCat", "params": ["Intent"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void handleIntent(Intent intent) {\n\n        if (Intent.ACTION_SEARCH.equals(intent.getAction())) {\n            String query = intent.getStringExtra(SearchManager.QUERY);\n            //use the query to search your data somehow\n//            Toast.makeText(this,query,Toast.LENGTH_SHORT).show();\n\n            Fragment fragment = getSupportFragmentManager().findFragmentByTag(TAG_FRAGMENT);\n\n            if(fragment instanceof NotifySearch)\n            {\n                ((NotifySearch) fragment).search(query);\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/aSellerModule/ItemsInShopByCatSeller/ItemsInShopByCat.java", "stars": "10", "class_props": {"extends": "AppCompatActivity", "implements": ["NotifyIndicatorChanged", "NotifySort"], "modifiers": ["public"]}}, {"id": 44592, "method_name": "getId", "class_name": "Tabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44593, "method_name": "setId", "class_name": "Tabela", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(Integer id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44594, "method_name": "getQuantidade", "class_name": "Tabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getQuantidade() {\n        return quantidade;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44595, "method_name": "setQuantidade", "class_name": "Tabela", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setQuantidade(Integer quantidade) {\n        this.quantidade = quantidade;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44596, "method_name": "getValorVenda", "class_name": "Tabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BigDecimal", "snippet": "    public BigDecimal getValorVenda() {\n        return valorVenda;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44597, "method_name": "setValorVenda", "class_name": "Tabela", "params": ["BigDecimal"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValorVenda(BigDecimal valorVenda) {\n        this.valorVenda = valorVenda;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44598, "method_name": "getPeriodo", "class_name": "Tabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPeriodo() {\n        return periodo;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44599, "method_name": "setPeriodo", "class_name": "Tabela", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPeriodo(String periodo) {\n        this.periodo = periodo;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44600, "method_name": "getCliente", "class_name": "Tabela", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Cliente", "snippet": "    public Cliente getCliente() {\n        return cliente;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44601, "method_name": "setCliente", "class_name": "Tabela", "params": ["Cliente"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCliente(Cliente cliente) {\n        this.cliente = cliente;\n    }", "url": "https://raw.githubusercontent.com/bonamigor/gera_notas/master/src/main/java/br/com/geranotas/domain/Tabela.java", "stars": "2", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44602, "method_name": "getInstance", "class_name": "DaggerComponentBuilder", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "DaggerComponentBuilder", "snippet": "    public static DaggerComponentBuilder getInstance()\n    {\n        if(instance == null)\n        {\n            instance = new DaggerComponentBuilder();\n        }\n\n        return instance;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DaggerComponentBuilder.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44603, "method_name": "getNetComponent", "class_name": "DaggerComponentBuilder", "params": [], "throws": null, "modifiers": ["public"], "return_type": "NetComponent", "snippet": "    public NetComponent getNetComponent() {\n\n        // If a Dagger 2 component does not have any constructor arguments for any of its modules,\n        // then we can use .create() as a shortcut instead:\n        //  mAppComponent = com.codepath.dagger.components.DaggerNetComponent.create();\n\n\n        if(mNetComponent == null)\n        {\n            // Dagger%COMPONENT_NAME%\n            mNetComponent = DaggerNetComponent.builder()\n                    // list of modules that are part of this component need to be created here too\n                    .appModule(new AppModule(ApplicationState\n                            .getInstance().getMyApplication())) // This also corresponds to the name of your module: %component_name%Module\n                    .netModule(new NetModule())\n                    .build();\n        }\n\n\n\n\n        return mNetComponent;\n    }", "url": "https://raw.githubusercontent.com/NearbyShops/Nearby-Shops-Android-app/master/app/src/main/java/org/nearbyshops/enduserappnew/DaggerComponentBuilder.java", "stars": "10", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44604, "method_name": "process", "class_name": "DelayedMessageRabbitStrategy", "params": ["Message", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean process(Message message, Throwable cause) {\n        return cause.getCause() instanceof DelayException;\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/recover/strategy/impl/DelayedMessageRabbitStrategy.java", "stars": "2", "class_props": {"extends": null, "implements": ["RabbitStrategy"], "modifiers": ["public"]}}, {"id": 44605, "method_name": "recover", "class_name": "DelayedMessageRabbitStrategy", "params": ["Message", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void recover(Message message, Throwable cause) {\n        addCustomHeader(message, cause);\n        publish(message);\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/recover/strategy/impl/DelayedMessageRabbitStrategy.java", "stars": "2", "class_props": {"extends": null, "implements": ["RabbitStrategy"], "modifiers": ["public"]}}, {"id": 44606, "method_name": "addCustomHeader", "class_name": "DelayedMessageRabbitStrategy", "params": ["Message", "Throwable"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void addCustomHeader(Message message, Throwable cause) {\n        String errorResponseModel = cause.getCause().getMessage();\n        //Custom Header For Show Exception Message\n        message.getMessageProperties().getHeaders().put(\"x-delay-message\", errorResponseModel);\n        message.getMessageProperties().getHeaders().put(\"x-delay-message-publish-date\", new Date());\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/recover/strategy/impl/DelayedMessageRabbitStrategy.java", "stars": "2", "class_props": {"extends": null, "implements": ["RabbitStrategy"], "modifiers": ["public"]}}, {"id": 44607, "method_name": "publish", "class_name": "DelayedMessageRabbitStrategy", "params": ["Message"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void publish(Message message) {\n        //Delay Queue Routing Key\n        String delayRoutingKey = message.getMessageProperties().getConsumerQueue() + configurationProperties.getRecover().getDelayedMessageQueuePostfix();\n        //Set TTL to Message\n        message.getMessageProperties().setExpiration(configurationProperties.getRecover().getDelayMillisecond());\n        this.errorTemplate.send(delayRoutingKey, message);\n    }", "url": "https://raw.githubusercontent.com/Merthaskan/sample-consumer/master/src/main/java/com/trendyol/sampleconsumer/recover/strategy/impl/DelayedMessageRabbitStrategy.java", "stars": "2", "class_props": {"extends": null, "implements": ["RabbitStrategy"], "modifiers": ["public"]}}, {"id": 44608, "method_name": "runTest", "class_name": "LoopReturnPathTest", "params": ["Map<String,String>"], "throws": ["Throwable"], "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void runTest(Map<String, String> parameters) throws Throwable {\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"count\", int.class), 10000000);\n\t\tassertSuccessfulOptimization(TestMethods.class.getMethod(\"count\", long.class), 10000000);\n\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/LoopReturnPathTest.java", "stars": "97", "class_props": {"extends": "TailRecOptimizerTestCase", "implements": null, "modifiers": ["public"]}}, {"id": 44609, "method_name": "count", "class_name": "TestMethods", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\t\tpublic static int count(int n) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tint v = count(n - 1);\n\t\t\tfor (int i = 0; i < 10; i++) {\n\n\t\t\t}\n\t\t\treturn v;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/LoopReturnPathTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44610, "method_name": "count", "class_name": "TestMethods", "params": ["long"], "throws": null, "modifiers": ["public", "static"], "return_type": "long", "snippet": "\t\tpublic static long count(long n) {\n\t\t\tif (n == 0) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t\tlong v = count(n - 1);\n\t\t\tfor (int i = 0; i < 10; i++) {\n\n\t\t\t}\n\t\t\treturn v;\n\t\t}", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/test/src/testing/sipka/jvm/tailrec/LoopReturnPathTest.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44611, "method_name": "init", "class_name": "FloatPlayerView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void init() {\n\n        videoPlayer = new FloatingVideo(getContext());\n\n        LayoutParams layoutParams = new LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT);\n        layoutParams.gravity = Gravity.CENTER;\n\n        addView(videoPlayer, layoutParams);\n\n        String source1 = \"http://9890.vod.myqcloud.com/9890_4e292f9a3dd011e6b4078980237cc3d3.f20.mp4\";\n\n        videoPlayer.setUp(source1, true, \"\u6d4b\u8bd5\u89c6\u9891\");\n\n        //\u589e\u52a0\u5c01\u9762\n        /*ImageView imageView = new ImageView(getContext());\n        imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);\n        imageView.setImageResource(R.mipmap.xxx1);\n        videoPlayer.setThumbImageView(imageView);*/\n\n        //\u662f\u5426\u53ef\u4ee5\u6ed1\u52a8\u8c03\u6574\n        videoPlayer.setIsTouchWiget(false);\n\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/FloatPlayerView.java", "stars": "2", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["public"]}}, {"id": 44612, "method_name": "onPause", "class_name": "FloatPlayerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPause() {\n        videoPlayer.getCurrentPlayer().onVideoPause();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/FloatPlayerView.java", "stars": "2", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["public"]}}, {"id": 44613, "method_name": "onResume", "class_name": "FloatPlayerView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onResume() {\n        videoPlayer.getCurrentPlayer().onVideoResume();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/app/src/main/java/com/example/gsyvideoplayer/view/FloatPlayerView.java", "stars": "2", "class_props": {"extends": "FrameLayout", "implements": null, "modifiers": ["public"]}}, {"id": 44614, "method_name": "onSizeChanged", "class_name": "ENDownloadView", "params": ["int", "int", "int", "int"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        mWidth = w;\n        mHeight = h;\n        mCenterX = mWidth / 2;\n        mCenterY = mHeight / 2;\n        mCircleRadius = mWidth * 5 / 12;\n        mBaseLength = mCircleRadius / 3;\n        mBaseRippleLength = 4.4f * mBaseLength / 12;\n        mCurrentRippleX = mCenterX - mBaseRippleLength * 10;\n        mRectF = new RectF(mCenterX - mCircleRadius, mCenterY - mCircleRadius, mCenterX + mCircleRadius, mCenterY + mCircleRadius);\n        mClipRectF = new RectF(mCenterX - 6 * mBaseRippleLength, 0, mCenterX + 6 * mBaseRippleLength, mHeight);\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44615, "method_name": "onDraw", "class_name": "ENDownloadView", "params": ["Canvas"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        switch (mCurrentState) {\n            case STATE_PRE:\n                if (mFraction <= 0.4) {\n                    canvas.drawCircle(mCenterX, mCenterY, mCircleRadius, mBgPaint);\n                    canvas.drawLine(mCenterX - mBaseLength, mCenterY, mCenterX, mCenterY + mBaseLength, mPaint);\n                    canvas.drawLine(mCenterX, mCenterY + mBaseLength, mCenterX + mBaseLength, mCenterY, mPaint);\n                    canvas.drawLine(mCenterX, mCenterY + mBaseLength - 1.3f * mBaseLength / 0.4f * mFraction,\n                            mCenterX, mCenterY - 1.6f * mBaseLength + 1.3f * mBaseLength / 0.4f * mFraction, mPaint);\n                } else if (mFraction <= 0.6) {\n                    canvas.drawCircle(mCenterX, mCenterY, mCircleRadius, mBgPaint);\n                    canvas.drawCircle(mCenterX, mCenterY - 0.3f * mBaseLength, 2, mPaint);\n                    canvas.drawLine(mCenterX - mBaseLength - mBaseLength * 1.2f / 0.2f * (mFraction - 0.4f), mCenterY, mCenterX, mCenterY + mBaseLength - mBaseLength / 0.2f * (mFraction - 0.4f), mPaint);\n                    canvas.drawLine(mCenterX, mCenterY + mBaseLength - mBaseLength / 0.2f * (mFraction - 0.4f), mCenterX + mBaseLength + mBaseLength * 1.2f / 0.2f * (mFraction - 0.4f), mCenterY, mPaint);\n                } else if (mFraction <= 1) {\n                    canvas.drawCircle(mCenterX, mCenterY, mCircleRadius, mBgPaint);\n                    canvas.drawCircle(mCenterX, mCenterY - 0.3f * mBaseLength - (mCircleRadius - 0.3f * mBaseLength) / 0.4f * (mFraction - 0.6f), 2, mPaint);\n                    canvas.drawLine(mCenterX - mBaseLength * 2.2f, mCenterY, mCenterX + mBaseLength * 2.2f, mCenterY, mPaint);\n                } else {\n                    canvas.drawCircle(mCenterX, mCenterY, mCircleRadius, mBgPaint);\n                    canvas.drawCircle(mCenterX, mCenterY - mCircleRadius - mBaseLength * 3 * (mFraction - 1), 3, mPaint);\n                    canvas.drawLine(mCenterX - mBaseLength * 2.2f, mCenterY, mCenterX + mBaseLength * 2.2f, mCenterY, mPaint);\n                }\n                break;\n            case STATE_DOWNLOADING:\n                if (mFraction <= 0.2) {\n                    mTextPaint.setTextSize(mTextSize / 0.2f * mFraction);\n                }\n                canvas.drawCircle(mCenterX, mCenterY, mCircleRadius, mBgPaint);\n                canvas.drawArc(mRectF, -90, 359.99f * mFraction, false, mPaint);\n                mPath.reset();\n                mCurrentRippleX += DEFAULT_RIPPLE_SPEED;\n                if (mCurrentRippleX > mCenterX - mBaseRippleLength * 6)\n                    mCurrentRippleX = mCenterX - mBaseRippleLength * 10;\n                mPath.moveTo(mCurrentRippleX, mCenterY);\n                for (int i = 0; i < 4; i++) {\n                    mPath.rQuadTo(mBaseRippleLength, -(1 - mFraction) * mBaseRippleLength, mBaseRippleLength * 2, 0);\n                    mPath.rQuadTo(mBaseRippleLength, (1 - mFraction) * mBaseRippleLength, mBaseRippleLength * 2, 0);\n                }\n                canvas.save();\n                canvas.clipRect(mClipRectF);\n                canvas.drawPath(mPath, mPaint);\n                canvas.restore();\n                if (mUnit != DownloadUnit.NONE && mCurrentSize > 0) {\n                    //canvas.drawText(String.format(\"%.2f\", mCurrentSize) + getUnitStr(mUnit), mCenterX , mCenterY + 1.4f * mBaseLength , mTextPaint);\n                }\n                break;\n            case STATE_END:\n                canvas.drawCircle(mCenterX, mCenterY, mCircleRadius, mPaint);\n                if (mFraction <= 0.5) {\n                    mTextPaint.setTextSize(mTextSize - mTextSize / 0.2f * mFraction);\n                } else {\n                    mTextPaint.setTextSize(0);\n                }\n                if (mUnit != DownloadUnit.NONE && mCurrentSize > 0) {\n                    canvas.drawText(String.format(\"%.2f\", mCurrentSize) + getUnitStr(mUnit), mCenterX, mCenterY + 1.4f * mBaseLength, mTextPaint);\n                }\n                canvas.drawLine(mCenterX - mBaseLength * 2.2f + mBaseLength * 1.2f * mFraction, mCenterY,\n                        mCenterX - mBaseLength * 0.5f, mCenterY + mBaseLength * 0.5f * mFraction * 1.3f, mPaint);\n                canvas.drawLine(mCenterX - mBaseLength * 0.5f, mCenterY + mBaseLength * 0.5f * mFraction * 1.3f,\n                        mCenterX + mBaseLength * 2.2f - mBaseLength * mFraction, mCenterY - mBaseLength * mFraction * 1.3f, mPaint);\n                break;\n            case STATE_RESET:\n                canvas.drawCircle(mCenterX, mCenterY, mCircleRadius, mBgPaint);\n                canvas.drawLine(mCenterX - mBaseLength, mCenterY,\n                        mCenterX - mBaseLength * 0.5f + mBaseLength * 0.5f * mFraction, mCenterY + mBaseLength * 0.65f + mBaseLength * 0.35f * mFraction, mPaint);\n                canvas.drawLine(mCenterX - mBaseLength * 0.5f + mBaseLength * 0.5f * mFraction, mCenterY + mBaseLength * 0.65f + mBaseLength * 0.35f * mFraction,\n                        mCenterX + mBaseLength * 1.2f - mBaseLength * 0.2f * mFraction, mCenterY - 1.3f * mBaseLength + 1.3f * mBaseLength * mFraction, mPaint);\n                canvas.drawLine(mCenterX - mBaseLength * 0.5f + mBaseLength * 0.5f * mFraction, mCenterY + mBaseLength * 0.65f + mBaseLength * 0.35f * mFraction,\n                        mCenterX - mBaseLength * 0.5f + mBaseLength * 0.5f * mFraction,\n                        mCenterY + mBaseLength * 0.65f - mBaseLength * 2.25f * mFraction, mPaint);\n                break;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44616, "method_name": "release", "class_name": "ENDownloadView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void release() {\n        if (mValueAnimator != null) {\n            mValueAnimator.removeAllListeners();\n            mValueAnimator.removeAllUpdateListeners();\n            if (mValueAnimator.isRunning())\n                mValueAnimator.cancel();\n            mValueAnimator = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44617, "method_name": "start", "class_name": "ENDownloadView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void start() {\n        if (mValueAnimator != null) {\n            mValueAnimator.removeAllListeners();\n            mValueAnimator.removeAllUpdateListeners();\n            if (mValueAnimator.isRunning())\n                mValueAnimator.cancel();\n            mValueAnimator = null;\n        }\n        mCurrentState = STATE_DOWNLOADING;\n        mValueAnimator = ValueAnimator.ofFloat(1.f, 100.f);\n        mValueAnimator.setDuration(1500);\n        mValueAnimator.setInterpolator(new OvershootInterpolator());\n        mValueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator valueAnimator) {\n                mFraction = valueAnimator.getAnimatedFraction();\n                invalidate();\n            }\n        });\n        mValueAnimator.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                mCurrentState = STATE_DOWNLOADING;\n                downloadAnim();\n            }\n        });\n        mValueAnimator.start();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44618, "method_name": "downloadAnim", "class_name": "ENDownloadView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void downloadAnim() {\n        if (mValueAnimator != null) {\n            mValueAnimator.removeAllListeners();\n            mValueAnimator.removeAllUpdateListeners();\n            if (mValueAnimator.isRunning())\n                mValueAnimator.cancel();\n            mValueAnimator = null;\n        }\n        if (mCurrentState != STATE_DOWNLOADING) {\n            return;\n        }\n        mValueAnimator = ValueAnimator.ofFloat(1.f, 100.f);\n        mValueAnimator.setDuration(mDownloadTime);\n        mValueAnimator.setInterpolator(new LinearInterpolator());\n        mValueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator valueAnimator) {\n                mFraction = valueAnimator.getAnimatedFraction();\n                if (mUnit != DownloadUnit.NONE && mTotalSize > 0)\n                    mCurrentSize = mFraction * mTotalSize;\n                invalidate();\n            }\n        });\n        mValueAnimator.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                mCurrentState = STATE_DOWNLOADING;\n                downloadAnim();\n            }\n        });\n        mValueAnimator.start();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44619, "method_name": "endAnim", "class_name": "ENDownloadView", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void endAnim() {\n        if (mValueAnimator != null) {\n            mValueAnimator.removeAllListeners();\n            mValueAnimator.removeAllUpdateListeners();\n            if (mValueAnimator.isRunning())\n                mValueAnimator.cancel();\n            mValueAnimator = null;\n        }\n        mValueAnimator= ValueAnimator.ofFloat(1.f, 100.f);\n        mValueAnimator.setDuration(700);\n        mValueAnimator.setInterpolator(new OvershootInterpolator());\n        mValueAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {\n            @Override\n            public void onAnimationUpdate(ValueAnimator valueAnimator) {\n                mFraction = valueAnimator.getAnimatedFraction();\n                invalidate();\n            }\n        });\n        mValueAnimator.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                mFraction = 0;\n                mCurrentState = STATE_RESET;\n                if (onDownloadStateListener != null) {\n                    onDownloadStateListener.onDownloadFinish();\n                }\n            }\n        });\n        mValueAnimator.start();\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44620, "method_name": "reset", "class_name": "ENDownloadView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void reset() {\n        mFraction = 0;\n        mCurrentState = STATE_PRE;\n        if (mValueAnimator != null) {\n            mValueAnimator.removeAllListeners();\n            mValueAnimator.removeAllUpdateListeners();\n            if (mValueAnimator.isRunning())\n                mValueAnimator.cancel();\n            mValueAnimator = null;\n        }\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44621, "method_name": "getUnitStr", "class_name": "ENDownloadView", "params": ["DownloadUnit"], "throws": null, "modifiers": ["private"], "return_type": "String", "snippet": "    private String getUnitStr(DownloadUnit unit) {\n        switch (unit) {\n            case GB:\n                return \" gb\";\n            case MB:\n                return \" mb\";\n            case KB:\n                return \" kb\";\n            case B:\n                return \" b\";\n        }\n        return \" b\";\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44622, "method_name": "setDownloadConfig", "class_name": "ENDownloadView", "params": ["int", "double", "DownloadUnit"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setDownloadConfig(int downloadTime, double downloadFileSize, DownloadUnit unit) {\n        mDownloadTime = downloadTime;\n        mTotalSize = downloadFileSize;\n        mUnit = unit;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44623, "method_name": "getCurrentState", "class_name": "ENDownloadView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getCurrentState() {\n        return mCurrentState;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44624, "method_name": "setOnDownloadStateListener", "class_name": "ENDownloadView", "params": ["OnDownloadStateListener"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOnDownloadStateListener(OnDownloadStateListener onDownloadStateListener) {\n        this.onDownloadStateListener = onDownloadStateListener;\n    }", "url": "https://raw.githubusercontent.com/jarryleo/GSYVideoPlayer/master/gsyVideoPlayer-java/src/main/java/moe/codeest/enviews/ENDownloadView.java", "stars": "2", "class_props": {"extends": "View", "implements": null, "modifiers": ["public"]}}, {"id": 44625, "method_name": "doFilterInternal", "class_name": "TokenAuthenticationFilter", "params": ["HttpServletRequest", "HttpServletResponse", "FilterChain"], "throws": ["ServletException", "IOException"], "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void doFilterInternal(HttpServletRequest req, HttpServletResponse res, FilterChain fc)\n            throws ServletException, IOException {\n\n        SecurityContext context = SecurityContextHolder.getContext();\n        if (context.getAuthentication() != null && context.getAuthentication().isAuthenticated()) {\n            // do nothing\n        } else {\n            String token = req.getHeader(TOKEN_HEADER);\n            if(StringUtils.isNotEmpty(token)){\n                //\u89e3\u6790Token\u65f6\u5c06\u201cBearer \u201d\u524d\u7f00\u53bb\u6389\n                token = StringUtils.trim(token).replace(TOKEN_PREFIX, \"\");\n            }\n            if(StringUtils.isBlank(token)){\n                token = req.getParameter(\"token\");\n            }\n            // \u5982\u679c\u8bf7\u6c42\u5934\u4e2d\u6709token,\u5219\u751f\u6210Authentication\u51ed\u8bc1\n            if (StringUtils.isNotBlank(token)) {\n                Authentication auth = new TokenAuthentication(token);\n                SecurityContextHolder.getContext().setAuthentication(auth);\n            }\n        }\n        fc.doFilter(req, res);\n    }", "url": "https://raw.githubusercontent.com/harry-xqb/rent-house/master/src/main/java/com/harry/renthouse/security/TokenAuthenticationFilter.java", "stars": "3", "class_props": {"extends": "OncePerRequestFilter", "implements": null, "modifiers": ["public"]}}, {"id": 44626, "method_name": "getPressedButtons", "class_name": "DefaultJamepadService", "params": ["boolean"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void getPressedButtons(final boolean[] buttons) {\n        try {\n            // buttons[0] = false; // CAPTURE\n            buttons[1] = controller.isButtonPressed(ControllerButton.GUIDE); // HOME\n            buttons[2] = controller.isButtonPressed(ControllerButton.RIGHTSTICK);\n            buttons[3] = controller.isButtonPressed(ControllerButton.LEFTSTICK);\n            buttons[4] = controller.isButtonPressed(ControllerButton.START); // PLUS\n            buttons[5] = controller.isButtonPressed(ControllerButton.BACK); // MINUS\n            buttons[6] = controller.getAxisState(ControllerAxis.TRIGGERRIGHT) > 0.5f; // ZR\n            buttons[7] = controller.getAxisState(ControllerAxis.TRIGGERLEFT) > 0.5f; // ZL\n            buttons[8] = controller.isButtonPressed(ControllerButton.RIGHTBUMPER); // R\n            buttons[9] = controller.isButtonPressed(ControllerButton.LEFTBUMPER); // L\n            buttons[10] = controller.isButtonPressed(ControllerButton.X); // X\n            buttons[11] = controller.isButtonPressed(ControllerButton.A); // A\n            buttons[12] = controller.isButtonPressed(ControllerButton.B); // B\n            buttons[13] = controller.isButtonPressed(ControllerButton.Y); // Y\n        } catch (final ControllerUnpluggedException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44627, "method_name": "getAxisState", "class_name": "DefaultJamepadService", "params": ["float"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void getAxisState(final float[] axis) {\n        try {\n            axis[0] = controller.getAxisState(ControllerAxis.LEFTX);\n            axis[1] = controller.getAxisState(ControllerAxis.LEFTY);\n            axis[2] = controller.getAxisState(ControllerAxis.RIGHTX);\n            axis[3] = controller.getAxisState(ControllerAxis.RIGHTY);\n        } catch (final ControllerUnpluggedException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44628, "method_name": "getDpadState", "class_name": "DefaultJamepadService", "params": ["boolean"], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void getDpadState(final boolean[] dpad) {\n        try {\n            dpad[0] = controller.isButtonPressed(ControllerButton.DPAD_UP);\n            dpad[1] = controller.isButtonPressed(ControllerButton.DPAD_RIGHT);\n            dpad[2] = controller.isButtonPressed(ControllerButton.DPAD_DOWN);\n            dpad[3] = controller.isButtonPressed(ControllerButton.DPAD_LEFT);\n        } catch (final ControllerUnpluggedException e) {\n            e.printStackTrace();\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44629, "method_name": "onPrepareReport", "class_name": "DefaultJamepadService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onPrepareReport() {\n        JamepadManager.update();\n        if (!controller.isConnected()) {\n            System.out.println(\"Controller unplugged\");\n            finish();\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44630, "method_name": "onStart", "class_name": "DefaultJamepadService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onStart() {\n        JamepadManager.addService(this);\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44631, "method_name": "onFinish", "class_name": "DefaultJamepadService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void onFinish() {\n        JamepadManager.removeService(this);\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44632, "method_name": "toString", "class_name": "DefaultJamepadService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        try {\n            return controller.getName();\n        } catch (final ControllerUnpluggedException e) {\n            e.printStackTrace();\n            return \"Disconnected\";\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44633, "method_name": "fromControllerIndex", "class_name": "DefaultJamepadService", "params": ["ControllerIndex"], "throws": null, "modifiers": ["public", "static"], "return_type": "DefaultJamepadService", "snippet": "    public static DefaultJamepadService fromControllerIndex(final ControllerIndex controllerIndex) {\n        return isNintendoController(controllerIndex) ?\n                new NintendoControllerService(controllerIndex)\n                : new DefaultJamepadService(controllerIndex);\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44634, "method_name": "isNintendoController", "class_name": "DefaultJamepadService", "params": ["ControllerIndex"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean isNintendoController(final ControllerIndex controller) {\n        try {\n            return controller.getName().contains(\"Nintendo\"); // TODO: more robust method\n        } catch (final ControllerUnpluggedException e) {\n            e.printStackTrace();\n            return false;\n        }\n    }", "url": "https://raw.githubusercontent.com/javmarina/Nintendo-Switch-Remote-Control/master/gui/client/src/main/java/com/javmarina/client/services/DefaultJamepadService.java", "stars": "17", "class_props": {"extends": "ButtonService", "implements": null, "modifiers": ["public"]}}, {"id": 44635, "method_name": "visitAnnotation", "class_name": "FieldVisitor", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "AnnotationVisitor", "snippet": "  public AnnotationVisitor visitAnnotation(final String descriptor, final boolean visible) {\n    if (fv != null) {\n      return fv.visitAnnotation(descriptor, visible);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/FieldVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44636, "method_name": "visitTypeAnnotation", "class_name": "FieldVisitor", "params": ["int", "TypePath", "String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "AnnotationVisitor", "snippet": "  public AnnotationVisitor visitTypeAnnotation(\n      final int typeRef, final TypePath typePath, final String descriptor, final boolean visible) {\n    if (api < Opcodes.ASM5) {\n      throw new UnsupportedOperationException(\"This feature requires ASM5\");\n    }\n    if (fv != null) {\n      return fv.visitTypeAnnotation(typeRef, typePath, descriptor, visible);\n    }\n    return null;\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/FieldVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44637, "method_name": "visitAttribute", "class_name": "FieldVisitor", "params": ["Attribute"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitAttribute(final Attribute attribute) {\n    if (fv != null) {\n      fv.visitAttribute(attribute);\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/FieldVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44638, "method_name": "visitEnd", "class_name": "FieldVisitor", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void visitEnd() {\n    if (fv != null) {\n      fv.visitEnd();\n    }\n  }", "url": "https://raw.githubusercontent.com/Sipkab/jvm-tail-recursion/master/src/sipka/jvm/tailrec/thirdparty/org/objectweb/asm/FieldVisitor.java", "stars": "97", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44639, "method_name": "putInt", "class_name": "AbstractPreferenceManager", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putInt(String KEY, int value) {\n        mPref.edit().putInt(KEY, value).commit();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44640, "method_name": "putLong", "class_name": "AbstractPreferenceManager", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putLong(String KEY, long value) {\n        mPref.edit().putLong(KEY, value).commit();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44641, "method_name": "putFloat", "class_name": "AbstractPreferenceManager", "params": ["String", "float"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putFloat(String KEY, float value) {\n        mPref.edit().putFloat(KEY, value).commit();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44642, "method_name": "putBoolean", "class_name": "AbstractPreferenceManager", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putBoolean(String KEY, boolean value) {\n        mPref.edit().putBoolean(KEY, value).commit();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44643, "method_name": "putString", "class_name": "AbstractPreferenceManager", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putString(String KEY, String value) {\n        mPref.edit().putString(KEY, value).commit();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44644, "method_name": "putStringSet", "class_name": "AbstractPreferenceManager", "params": ["String", "Set<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void putStringSet(String KEY, Set<String> value) {\n        mPref.edit().putStringSet(KEY, value).commit();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44645, "method_name": "getInt", "class_name": "AbstractPreferenceManager", "params": ["String", "int"], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getInt(String KEY, int defaultVlue) {\n        return mPref.getInt(KEY, defaultVlue);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44646, "method_name": "getLong", "class_name": "AbstractPreferenceManager", "params": ["String", "long"], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getLong(String KEY, long defaultVlue) {\n        return mPref.getLong(KEY, defaultVlue);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44647, "method_name": "getFloat", "class_name": "AbstractPreferenceManager", "params": ["String", "float"], "throws": null, "modifiers": ["public"], "return_type": "float", "snippet": "    public float getFloat(String KEY, float defaultVlue) {\n        return mPref.getFloat(KEY, defaultVlue);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44648, "method_name": "getBoolean", "class_name": "AbstractPreferenceManager", "params": ["String", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean getBoolean(String KEY, boolean defaultVlue) {\n        return mPref.getBoolean(KEY, defaultVlue);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44649, "method_name": "getString", "class_name": "AbstractPreferenceManager", "params": ["String", "String"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getString(String KEY, String defaultVlue) {\n        return mPref.getString(KEY, defaultVlue);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44650, "method_name": "getStringSet", "class_name": "AbstractPreferenceManager", "params": ["String", "Set<String>"], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getStringSet(String KEY, Set<String> defaultVlue) {\n        return mPref.getStringSet(KEY, defaultVlue);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44651, "method_name": "remove", "class_name": "AbstractPreferenceManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void remove(String key) {\n        mPref.edit().remove(key).apply();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44652, "method_name": "clear", "class_name": "AbstractPreferenceManager", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean clear() {\n        return mPref.edit().clear().commit();\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44653, "method_name": "contain", "class_name": "AbstractPreferenceManager", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean contain(String key) {\n        return mPref.contains(key);\n    }", "url": "https://raw.githubusercontent.com/BluezoneGlobal/react-native-bluetooth-scan/master/lib/android/src/main/java/com/scan/preference/AbstractPreferenceManager.java", "stars": "14", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44654, "method_name": "provideHiveConf", "class_name": "HiveQueryExecutorModule", "params": [], "throws": null, "modifiers": [], "return_type": "HiveConf", "snippet": "  HiveConf provideHiveConf() {\n    if (this.hiveConf != null) {\n      return this.hiveConf;\n    } else {\n      this.hiveConf = new HiveConf(SessionState.class);\n    }\n\n    troublesomeConfig(HIVEHISTORYFILELOC, hiveConf);\n    troublesomeConfig(SCRATCHDIR, hiveConf);\n\n    if (System.getenv(HADOOP_TOKEN_FILE_LOCATION) != null) {\n      System.out.println(\"Setting hadoop tokens ... \");\n      hiveConf.set(MAPREDUCE_JOB_CREDENTIALS_BINARY,\n          System.getenv(HADOOP_TOKEN_FILE_LOCATION));\n      System.setProperty(MAPREDUCE_JOB_CREDENTIALS_BINARY,\n          System.getenv(HADOOP_TOKEN_FILE_LOCATION));\n    }\n\n    return hiveConf;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/HiveQueryExecutorModule.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44655, "method_name": "troublesomeConfig", "class_name": "HiveQueryExecutorModule", "params": ["HiveConf", "HiveConf"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "  private void troublesomeConfig(HiveConf.ConfVars value, HiveConf hc) {\n    System.out.println(\"Troublesome config \" + value + \" = \"\n        + HiveConf.getVar(hc, value));\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/HiveQueryExecutorModule.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44656, "method_name": "provideCliSessionState", "class_name": "HiveQueryExecutorModule", "params": [], "throws": null, "modifiers": [], "return_type": "CliSessionState", "snippet": "  CliSessionState provideCliSessionState() {\n    if (ss != null) {\n      return ss;\n    }\n    ss = new CliSessionState(provideHiveConf());\n    SessionState.start(ss);\n    return ss;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/HiveQueryExecutorModule.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44657, "method_name": "configure", "class_name": "HiveQueryExecutorModule", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "  protected void configure() {\n    /** Nothing to do **/\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-jobtype/src/main/java/com/webank/wedatasphere/schedulis/jobtype/hiveutils/HiveQueryExecutorModule.java", "stars": "18", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44658, "method_name": "getKey", "class_name": "ExposedKey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getKey() {\n\t\treturn key;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/ExposedKey.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44659, "method_name": "setKey", "class_name": "ExposedKey", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setKey(String key) {\n\t\tthis.key = key;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/ExposedKey.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44660, "method_name": "getKeyDate", "class_name": "ExposedKey", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "\tpublic long getKeyDate() {\n\t\treturn keyDate;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/ExposedKey.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44661, "method_name": "setKeyDate", "class_name": "ExposedKey", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void setKeyDate(long keyDate) {\n\t\tthis.keyDate = keyDate;\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-backend/develop/dpppt-backend-sdk/dpppt-backend-sdk-model/src/main/java/org/dpppt/backend/sdk/model/ExposedKey.java", "stars": "125", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44662, "method_name": "initElements", "class_name": "RoughSandstoneSlabBlock", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void initElements() {\n\t\telements.blocks.add(() -> new CustomBlock());\n\t\telements.items\n\t\t\t\t.add(() -> new BlockItem(block, new Item.Properties().group(ItemGroup.BUILDING_BLOCKS)).setRegistryName(block.getRegistryName()));\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 44663, "method_name": "clientLoad", "class_name": "RoughSandstoneSlabBlock", "params": ["FMLClientSetupEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void clientLoad(FMLClientSetupEvent event) {\n\t\tRenderTypeLookup.setRenderLayer(block, RenderType.getCutout());\n\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "EnhancedVanillaElements", "implements": null, "modifiers": ["public"]}}, {"id": 44664, "method_name": "isNormalCube", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean isNormalCube(BlockState state, IBlockReader worldIn, BlockPos pos) {\n\t\t\treturn false;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 44665, "method_name": "propagatesSkylightDown", "class_name": "CustomBlock", "params": ["BlockState", "IBlockReader", "BlockPos"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "\t\tpublic boolean propagatesSkylightDown(BlockState state, IBlockReader reader, BlockPos pos) {\n\t\t\treturn true;\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 44666, "method_name": "getPickBlock", "class_name": "CustomBlock", "params": ["BlockState", "RayTraceResult", "IBlockReader", "BlockPos", "PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "ItemStack", "snippet": "\t\tpublic ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {\n\t\t\treturn new ItemStack(RoughSandstoneSlabBlock.block, (int) (1));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 44667, "method_name": "getDrops", "class_name": "CustomBlock", "params": ["BlockState", "LootContext"], "throws": null, "modifiers": ["public"], "return_type": "List<ItemStack>", "snippet": "\t\tpublic List<ItemStack> getDrops(BlockState state, LootContext.Builder builder) {\n\t\t\tList<ItemStack> dropsOriginal = super.getDrops(state, builder);\n\t\t\tif (!dropsOriginal.isEmpty())\n\t\t\t\treturn dropsOriginal;\n\t\t\treturn Collections.singletonList(new ItemStack(this, 0));\n\t\t}", "url": "https://raw.githubusercontent.com/KarogathModdingStudios/Enhanced-Vanilla-1.15/master/src/main/java/com/karogath/enhancedvanilla/block/RoughSandstoneSlabBlock.java", "stars": "2", "class_props": {"extends": "SlabBlock", "implements": null, "modifiers": ["public", "static"]}}, {"id": 44668, "method_name": "getReturn", "class_name": "TariffOptionWebListResponse", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<TariffOption>", "snippet": "    public List<TariffOption> getReturn() {\n        if (_return == null) {\n            _return = new ArrayList<TariffOption>();\n        }\n        return this._return;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/plugin/bgbilling/ws/tariff/option/TariffOptionWebListResponse.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44669, "method_name": "getId", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44670, "method_name": "setId", "class_name": "DataSourceQuery", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(long id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44671, "method_name": "getSourceName", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceName() {\n        return sourceName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44672, "method_name": "setSourceName", "class_name": "DataSourceQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceName(String sourceName) {\n        this.sourceName = sourceName;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44673, "method_name": "getSourceType", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getSourceType() {\n        return sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44674, "method_name": "setSourceType", "class_name": "DataSourceQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSourceType(String sourceType) {\n        this.sourceType = sourceType;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44675, "method_name": "getOwner", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getOwner() {\n        return owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44676, "method_name": "setOwner", "class_name": "DataSourceQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setOwner(String owner) {\n        this.owner = owner;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44677, "method_name": "getCreateTimeBegin", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTimeBegin() {\n        return createTimeBegin;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44678, "method_name": "setCreateTimeBegin", "class_name": "DataSourceQuery", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTimeBegin(Date createTimeBegin) {\n        this.createTimeBegin = createTimeBegin;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44679, "method_name": "getCreateTimeEnd", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Date", "snippet": "    public Date getCreateTimeEnd() {\n        return createTimeEnd;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44680, "method_name": "setCreateTimeEnd", "class_name": "DataSourceQuery", "params": ["Date"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateTimeEnd(Date createTimeEnd) {\n        this.createTimeEnd = createTimeEnd;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44681, "method_name": "getCreateUser", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCreateUser() {\n        return createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44682, "method_name": "setCreateUser", "class_name": "DataSourceQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCreateUser(String createUser) {\n        this.createUser = createUser;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44683, "method_name": "getModelId", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Integer", "snippet": "    public Integer getModelId() {\n        return modelId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44684, "method_name": "setModelId", "class_name": "DataSourceQuery", "params": ["Integer"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setModelId(Integer modelId) {\n        this.modelId = modelId;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44685, "method_name": "getProjectIds", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProjectIds() {\n        return projectIds;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44686, "method_name": "setProjectIds", "class_name": "DataSourceQuery", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setProjectIds(String projectIds) {\n        this.projectIds = projectIds;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44687, "method_name": "getUserDataAuth", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Set<String>", "snippet": "    public Set<String> getUserDataAuth() {\n        if(StringUtils.isNotBlank(projectIds)){\n            return null;\n        }\n        return userDataAuth;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44688, "method_name": "getProjectIdList", "class_name": "DataSourceQuery", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getProjectIdList() {\n        if(StringUtils.isNotBlank(projectIds)){\n            List<String> projectIdList = new ArrayList<>(this.projectIdList);\n            String[] ids = projectIds.split(\",\");\n            for(String id : ids){\n                if(null == userDataAuth || userDataAuth.contains(id)){\n                    projectIdList.add(id);\n                }\n            }\n            return projectIdList;\n        }\n        return projectIdList;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44689, "method_name": "setUserDataAuth", "class_name": "DataSourceQuery", "params": ["Set<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserDataAuth(Set<String> userDataAuth) {\n        this.userDataAuth = userDataAuth;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/service/src/main/java/com/webank/wedatasphere/exchangis/datasource/query/DataSourceQuery.java", "stars": "23", "class_props": {"extends": "PageQuery", "implements": null, "modifiers": ["public"]}}, {"id": 44690, "method_name": "toString", "class_name": "HomePagerContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String toString() {\n        return \"HomePagerContent{\" +\n                \"success=\" + success +\n                \", code=\" + code +\n                \", message='\" + message + '\\'' +\n                \", data=\" + data +\n                '}';\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44691, "method_name": "isSuccess", "class_name": "HomePagerContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSuccess() {\n        return success;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44692, "method_name": "setSuccess", "class_name": "HomePagerContent", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSuccess(boolean success) {\n        this.success = success;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44693, "method_name": "getCode", "class_name": "HomePagerContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "    public long getCode() {\n        return code;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44694, "method_name": "setCode", "class_name": "HomePagerContent", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCode(int code) {\n        this.code = code;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44695, "method_name": "getMessage", "class_name": "HomePagerContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getMessage() {\n        return message;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44696, "method_name": "setMessage", "class_name": "HomePagerContent", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setMessage(String message) {\n        this.message = message;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44697, "method_name": "getData", "class_name": "HomePagerContent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<DataBean>", "snippet": "    public List<DataBean> getData() {\n        return data;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44698, "method_name": "setData", "class_name": "HomePagerContent", "params": ["List<DataBean>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setData(List<DataBean> data) {\n        this.data = data;\n    }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44699, "method_name": "toString", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String toString() {\n            return \"DataBean{\" +\n                    \"category_id=\" + category_id +\n                    \", category_name=\" + category_name +\n                    \", click_url='\" + click_url + '\\'' +\n                    '}';\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44700, "method_name": "getCategory_id", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getCategory_id() {\n            return category_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44701, "method_name": "setCategory_id", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCategory_id(int category_id) {\n            this.category_id = category_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44702, "method_name": "getCategory_name", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getCategory_name() {\n            return category_name;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44703, "method_name": "setCategory_name", "class_name": "DataBean", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCategory_name(Object category_name) {\n            this.category_name = category_name;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44704, "method_name": "getClick_url", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getClick_url() {\n            return click_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44705, "method_name": "setClick_url", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setClick_url(String click_url) {\n            this.click_url = click_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44706, "method_name": "getCommission_rate", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCommission_rate() {\n            return commission_rate;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44707, "method_name": "setCommission_rate", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCommission_rate(String commission_rate) {\n            this.commission_rate = commission_rate;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44708, "method_name": "getCoupon_amount", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getCoupon_amount() {\n            return coupon_amount;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44709, "method_name": "setCoupon_amount", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_amount(int coupon_amount) {\n            this.coupon_amount = coupon_amount;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44710, "method_name": "getCoupon_click_url", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCoupon_click_url() {\n            return coupon_click_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44711, "method_name": "setCoupon_click_url", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_click_url(String coupon_click_url) {\n            this.coupon_click_url = coupon_click_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44712, "method_name": "getCoupon_end_time", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCoupon_end_time() {\n            return coupon_end_time;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44713, "method_name": "setCoupon_end_time", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_end_time(String coupon_end_time) {\n            this.coupon_end_time = coupon_end_time;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44714, "method_name": "getCoupon_info", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "        public Object getCoupon_info() {\n            return coupon_info;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44715, "method_name": "setCoupon_info", "class_name": "DataBean", "params": ["Object"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_info(Object coupon_info) {\n            this.coupon_info = coupon_info;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44716, "method_name": "getCoupon_remain_count", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getCoupon_remain_count() {\n            return coupon_remain_count;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44717, "method_name": "setCoupon_remain_count", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_remain_count(int coupon_remain_count) {\n            this.coupon_remain_count = coupon_remain_count;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44718, "method_name": "getCoupon_share_url", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCoupon_share_url() {\n            return coupon_share_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44719, "method_name": "setCoupon_share_url", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_share_url(String coupon_share_url) {\n            this.coupon_share_url = coupon_share_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44720, "method_name": "getCoupon_start_fee", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCoupon_start_fee() {\n            return coupon_start_fee;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44721, "method_name": "setCoupon_start_fee", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_start_fee(String coupon_start_fee) {\n            this.coupon_start_fee = coupon_start_fee;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44722, "method_name": "getCoupon_start_time", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCoupon_start_time() {\n            return coupon_start_time;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44723, "method_name": "setCoupon_start_time", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_start_time(String coupon_start_time) {\n            this.coupon_start_time = coupon_start_time;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44724, "method_name": "getCoupon_total_count", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getCoupon_total_count() {\n            return coupon_total_count;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44725, "method_name": "setCoupon_total_count", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setCoupon_total_count(int coupon_total_count) {\n            this.coupon_total_count = coupon_total_count;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44726, "method_name": "getItem_description", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getItem_description() {\n            return item_description;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44727, "method_name": "setItem_description", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setItem_description(String item_description) {\n            this.item_description = item_description;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44728, "method_name": "getItem_id", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getItem_id() {\n            return item_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44729, "method_name": "setItem_id", "class_name": "DataBean", "params": ["long"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setItem_id(long item_id) {\n            this.item_id = item_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44730, "method_name": "getLevel_one_category_id", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getLevel_one_category_id() {\n            return level_one_category_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44731, "method_name": "setLevel_one_category_id", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLevel_one_category_id(int level_one_category_id) {\n            this.level_one_category_id = level_one_category_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44732, "method_name": "getLevel_one_category_name", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getLevel_one_category_name() {\n            return level_one_category_name;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44733, "method_name": "setLevel_one_category_name", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setLevel_one_category_name(String level_one_category_name) {\n            this.level_one_category_name = level_one_category_name;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44734, "method_name": "getNick", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getNick() {\n            return nick;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44735, "method_name": "setNick", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setNick(String nick) {\n            this.nick = nick;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44736, "method_name": "getPict_url", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getPict_url() {\n            return pict_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44737, "method_name": "setPict_url", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setPict_url(String pict_url) {\n            this.pict_url = pict_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44738, "method_name": "getSeller_id", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getSeller_id() {\n            return seller_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44739, "method_name": "setSeller_id", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setSeller_id(int seller_id) {\n            this.seller_id = seller_id;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44740, "method_name": "getShop_title", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getShop_title() {\n            return shop_title;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44741, "method_name": "setShop_title", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setShop_title(String shop_title) {\n            this.shop_title = shop_title;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44742, "method_name": "getSmall_images", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "SmallImagesBean", "snippet": "        public SmallImagesBean getSmall_images() {\n            return small_images;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44743, "method_name": "setSmall_images", "class_name": "DataBean", "params": ["SmallImagesBean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setSmall_images(SmallImagesBean small_images) {\n            this.small_images = small_images;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44744, "method_name": "getCover", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getCover() {\n            return pict_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44745, "method_name": "getTitle", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getTitle() {\n            return title;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44746, "method_name": "getUrl", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getUrl() {\n            return coupon_click_url;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44747, "method_name": "setTitle", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setTitle(String title) {\n            this.title = title;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44748, "method_name": "getUser_type", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getUser_type() {\n            return user_type;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44749, "method_name": "setUser_type", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setUser_type(int user_type) {\n            this.user_type = user_type;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44750, "method_name": "getFinalPrise", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getFinalPrise() {\n            return zk_final_price;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44751, "method_name": "getCouponAmount", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getCouponAmount() {\n            return coupon_amount;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44752, "method_name": "getVolume", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "        public long getVolume() {\n            return volume;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44753, "method_name": "setVolume", "class_name": "DataBean", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setVolume(int volume) {\n            this.volume = volume;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44754, "method_name": "getZk_final_price", "class_name": "DataBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "        public String getZk_final_price() {\n            return zk_final_price;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44755, "method_name": "setZk_final_price", "class_name": "DataBean", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "        public void setZk_final_price(String zk_final_price) {\n            this.zk_final_price = zk_final_price;\n        }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": ["ILinearItemInfo"], "modifiers": ["public", "static"]}}, {"id": 44756, "method_name": "getString", "class_name": "SmallImagesBean", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "            public List<String> getString() {\n                return string;\n            }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44757, "method_name": "setString", "class_name": "SmallImagesBean", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "            public void setString(List<String> string) {\n                this.string = string;\n            }", "url": "https://raw.githubusercontent.com/TrillGates/TaobaoUnion/master/app/src/main/java/com/sunofbeaches/taobaounion/model/domain/HomePagerContent.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public", "static"]}}, {"id": 44758, "method_name": "onBoundsChange", "class_name": "CircleDrawable", "params": ["Rect"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void onBoundsChange(Rect bounds) {\n        super.onBoundsChange(bounds);\n\n        RectF bitmapRect = new RectF(0, 0, mBitmap.getWidth(), mBitmap.getHeight());\n        Matrix matrix = new Matrix();\n        matrix.setRectToRect(bitmapRect, new RectF(bounds), Matrix.ScaleToFit.CENTER);\n        mPaint.getShader().setLocalMatrix(matrix);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/drawable/CircleDrawable.java", "stars": "9", "class_props": {"extends": "Drawable", "implements": null, "modifiers": ["public"]}}, {"id": 44759, "method_name": "draw", "class_name": "CircleDrawable", "params": ["Canvas"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void draw(Canvas canvas) {\n        RectF imageRect = new RectF(getBounds());\n        RectF strokeRect = new RectF(getBounds());\n        // Default stroke drawing is both inset and outset.\n        strokeRect.inset(mStrokePaint.getStrokeWidth()/2,\n                         mStrokePaint.getStrokeWidth()/2);\n\n        canvas.drawOval(imageRect, mPaint);\n        canvas.drawOval(strokeRect, mStrokePaint);\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/drawable/CircleDrawable.java", "stars": "9", "class_props": {"extends": "Drawable", "implements": null, "modifiers": ["public"]}}, {"id": 44760, "method_name": "setAlpha", "class_name": "CircleDrawable", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAlpha(int alpha) {\n\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/drawable/CircleDrawable.java", "stars": "9", "class_props": {"extends": "Drawable", "implements": null, "modifiers": ["public"]}}, {"id": 44761, "method_name": "setColorFilter", "class_name": "CircleDrawable", "params": ["ColorFilter"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setColorFilter(ColorFilter cf) {\n\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/drawable/CircleDrawable.java", "stars": "9", "class_props": {"extends": "Drawable", "implements": null, "modifiers": ["public"]}}, {"id": 44762, "method_name": "getOpacity", "class_name": "CircleDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getOpacity() {\n        return PixelFormat.UNKNOWN;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/drawable/CircleDrawable.java", "stars": "9", "class_props": {"extends": "Drawable", "implements": null, "modifiers": ["public"]}}, {"id": 44763, "method_name": "getConstantState", "class_name": "CircleDrawable", "params": [], "throws": null, "modifiers": ["public"], "return_type": "ConstantState", "snippet": "    public ConstantState getConstantState() {\n        return mConstantState;\n    }", "url": "https://raw.githubusercontent.com/quite/mumla/master/app/src/main/java/se/lublin/mumla/drawable/CircleDrawable.java", "stars": "9", "class_props": {"extends": "Drawable", "implements": null, "modifiers": ["public"]}}, {"id": 44764, "method_name": "type", "class_name": "QueryHandlerInterceptor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "ElementMatcher<TypeDescription>", "snippet": "    public static ElementMatcher<? super TypeDescription> type()\n    {\n        return ElementMatchers.isSubTypeOf(QueryHandler.class);\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/QueryHandlerInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 44765, "method_name": "transformer", "class_name": "QueryHandlerInterceptor", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "AgentBuilder", "snippet": "    public static AgentBuilder.Transformer transformer()\n    {\n        return new AgentBuilder.Transformer() {\n            @Override\n            public DynamicType.Builder<?> transform(DynamicType.Builder<?> builder, TypeDescription typeDescription, ClassLoader classLoader, JavaModule javaModule)\n            {\n                return builder.method(ElementMatchers.named(\"process\")).intercept(MethodDelegation.to(QueryHandlerInterceptor.class));\n            }\n        };\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/QueryHandlerInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 44766, "method_name": "intercept", "class_name": "QueryHandlerInterceptor", "params": ["Object", "Callable<ResultMessage>"], "throws": ["Throwable"], "modifiers": ["public", "static"], "return_type": "Object", "snippet": "    public static Object intercept(@AllArguments Object[] allArguments, @SuperCall Callable<ResultMessage> zuper) throws Throwable {\n        if (allArguments.length > 0 && allArguments[0] != null && allArguments[0] instanceof String)\n        {\n            String query = (String) allArguments[0];\n\n            int jsonStart = query.indexOf(prefix);\n            if (jsonStart >= 0)\n            {\n                int jsonEnd = query.lastIndexOf(\")\");\n                if (jsonEnd > jsonStart)\n                {\n                    String json = query.substring(jsonStart + prefix.length() + 1, jsonEnd - 1);\n                    if (sendInsight(json))\n                    {\n                        return new ResultMessage.Void();\n                    }\n                }\n            }\n        }\n\n        return zuper.call();\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/QueryHandlerInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 44767, "method_name": "sendInsight", "class_name": "QueryHandlerInterceptor", "params": ["String"], "throws": null, "modifiers": ["static"], "return_type": "boolean", "snippet": "    static boolean sendInsight(String json)\n    {\n        Insight insight;\n        try\n        {\n            insight = JacksonUtil.getObjectMapper().readValue(\n                    json,\n                    Insight.class);\n\n            return client.get().report(insight);\n        }\n        catch (Exception e)\n        {\n            String errorMessage = String.format(\"Error converting JSON to a valid Insight.  JSON received: %s, Error: \", json);\n            LoggerFactory.getLogger(Agent.class).warn(errorMessage, e);\n        }\n\n        return false;\n    }", "url": "https://raw.githubusercontent.com/datastax/metric-collector-for-apache-cassandra/master/src/main/java/com/datastax/mcac/interceptors/QueryHandlerInterceptor.java", "stars": "23", "class_props": {"extends": "AbstractInterceptor", "implements": null, "modifiers": ["public"]}}, {"id": 44768, "method_name": "testHome", "class_name": "SampleJettyApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "\tvoid testHome() {\n\t\tResponseEntity<String> entity = this.restTemplate.getForEntity(\"/\", String.class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\tassertThat(entity.getBody()).isEqualTo(\"Hello World\");\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jetty/src/test/java/smoketest/jetty/SampleJettyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44769, "method_name": "testCompression", "class_name": "SampleJettyApplicationTests", "params": [], "throws": ["Exception"], "modifiers": [], "return_type": "void", "snippet": "\tvoid testCompression() throws Exception {\n\t\tHttpHeaders requestHeaders = new HttpHeaders();\n\t\trequestHeaders.set(\"Accept-Encoding\", \"gzip\");\n\t\tHttpEntity<?> requestEntity = new HttpEntity<>(requestHeaders);\n\t\tResponseEntity<byte[]> entity = this.restTemplate.exchange(\"/\", HttpMethod.GET, requestEntity, byte[].class);\n\t\tassertThat(entity.getStatusCode()).isEqualTo(HttpStatus.OK);\n\t\ttry (GZIPInputStream inflater = new GZIPInputStream(new ByteArrayInputStream(entity.getBody()))) {\n\t\t\tassertThat(StreamUtils.copyToString(inflater, StandardCharsets.UTF_8)).isEqualTo(\"Hello World\");\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jetty/src/test/java/smoketest/jetty/SampleJettyApplicationTests.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44770, "method_name": "onLayout", "class_name": "ItemContentView", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ItemContentView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44771, "method_name": "n_onLayout", "class_name": "ItemContentView", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ItemContentView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44772, "method_name": "onMeasure", "class_name": "ItemContentView", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ItemContentView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44773, "method_name": "n_onMeasure", "class_name": "ItemContentView", "params": ["int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onMeasure (int p0, int p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ItemContentView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44774, "method_name": "monodroidAddReference", "class_name": "ItemContentView", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ItemContentView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44775, "method_name": "monodroidClearReferences", "class_name": "ItemContentView", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/ItemContentView.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44776, "method_name": "setName", "class_name": "ESColumn", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String name) {\n        this.name = name;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44777, "method_name": "setType", "class_name": "ESColumn", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setType(String type) {\n        this.type = type;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44778, "method_name": "setTimeZone", "class_name": "ESColumn", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimeZone(String timezone) {\n        this.timezone = timezone;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44779, "method_name": "setFormat", "class_name": "ESColumn", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setFormat(String format) {\n        this.format = format;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44780, "method_name": "getName", "class_name": "ESColumn", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44781, "method_name": "getType", "class_name": "ESColumn", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getType() {\n        return type;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44782, "method_name": "getTimezone", "class_name": "ESColumn", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTimezone() {\n        return timezone;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44783, "method_name": "getFormat", "class_name": "ESColumn", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getFormat() {\n        return format;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44784, "method_name": "setTimezone", "class_name": "ESColumn", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTimezone(String timezone) {\n        this.timezone = timezone;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44785, "method_name": "isArray", "class_name": "ESColumn", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean isArray() {\n        return array;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44786, "method_name": "setArray", "class_name": "ESColumn", "params": ["Boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setArray(Boolean array) {\n        this.array = array;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44787, "method_name": "getArray", "class_name": "ESColumn", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Boolean", "snippet": "    public Boolean getArray() {\n        return array;\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-elasticsearchwriter/src/main/java/com/alibaba/datax/plugin/writer/elasticsearchwriter/ESColumn.java", "stars": "23", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44788, "method_name": "tokenServices", "class_name": "ResourceServerConfig", "params": [], "throws": null, "modifiers": [], "return_type": "RemoteTokenServices", "snippet": "    RemoteTokenServices tokenServices() {\n        RemoteTokenServices services = new RemoteTokenServices();\n        services.setCheckTokenEndpointUrl(\"http://localhost:8080/oauth/check_token\");\n        services.setClientId(\"javaboy\");\n        services.setClientSecret(\"123\");\n        return services;\n    }", "url": "https://raw.githubusercontent.com/lenve/oauth2-samples/master/password/user-server/src/main/java/org/javaboy/oauth2/res/ResourceServerConfig.java", "stars": "47", "class_props": {"extends": "ResourceServerConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44789, "method_name": "configure", "class_name": "ResourceServerConfig", "params": ["ResourceServerSecurityConfigurer"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void configure(ResourceServerSecurityConfigurer resources) throws Exception {\n        resources.resourceId(\"res1\").tokenServices(tokenServices());\n    }", "url": "https://raw.githubusercontent.com/lenve/oauth2-samples/master/password/user-server/src/main/java/org/javaboy/oauth2/res/ResourceServerConfig.java", "stars": "47", "class_props": {"extends": "ResourceServerConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44790, "method_name": "configure", "class_name": "ResourceServerConfig", "params": ["HttpSecurity"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .antMatchers(\"/admin/**\").hasRole(\"admin\")\n                .anyRequest().authenticated();\n    }", "url": "https://raw.githubusercontent.com/lenve/oauth2-samples/master/password/user-server/src/main/java/org/javaboy/oauth2/res/ResourceServerConfig.java", "stars": "47", "class_props": {"extends": "ResourceServerConfigurerAdapter", "implements": null, "modifiers": ["public"]}}, {"id": 44791, "method_name": "attemptConnect", "class_name": "HyperDatabase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean attemptConnect() {\n        try {\n            Class.forName(\"org.sqlite.JDBC\");\n\n            final File file = new File(this.hyperverse.getDataFolder(), \"storage.db\");\n            if (!file.exists()) {\n                if (!file.createNewFile()) {\n                    new RuntimeException(\"Could not create storage.db\").printStackTrace();\n                    return false;\n                }\n            }\n\n            this.connectionSource =\n                new JdbcConnectionSource(\"jdbc:sqlite:./plugins/Hyperverse/storage.db\");\n            // Setup DAOs\n            this.locationDao = DaoManager.createDao(connectionSource, PersistentLocation.class);\n            TableUtils.createTableIfNotExists(connectionSource, PersistentLocation.class);\n        } catch (Exception e) {\n            e.printStackTrace();\n            return false;\n        }\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/HyperDatabase.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44792, "method_name": "attemptClose", "class_name": "HyperDatabase", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void attemptClose() {\n        if (this.connectionSource == null) {\n            return;\n        }\n        this.connectionSource.closeQuietly();\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/HyperDatabase.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44793, "method_name": "storeLocation", "class_name": "HyperDatabase", "params": ["PersistentLocation", "boolean", "boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void storeLocation(@NotNull final PersistentLocation persistentLocation,\n        final boolean updateTable, final boolean clear) {\n\n        final PersistentLocation storedLocation = this.locations\n            .get(UUID.fromString(persistentLocation.getUuid()), persistentLocation.getWorld());\n        if (storedLocation != null) {\n            persistentLocation.setId(storedLocation.getId());\n        }\n\n        if (updateTable) {\n            this.locations\n                .put(UUID.fromString(persistentLocation.getUuid()), persistentLocation.getWorld(),\n                    persistentLocation);\n        }\n\n        taskChainFactory.newChain().async(() -> {\n            try {\n                final PersistentLocation matchLocation = new PersistentLocation();\n                matchLocation.setUuid(persistentLocation.getUuid());\n                matchLocation.setWorld(persistentLocation.getWorld());\n                final List<PersistentLocation> violatingLocation =\n                    this.locationDao.queryForMatchingArgs(matchLocation);\n                if (!violatingLocation.isEmpty()) {\n                    persistentLocation.setId(violatingLocation.get(0).getId());\n                    this.locationDao.update(persistentLocation);\n                    return;\n                }\n            } catch (final SQLException throwable) {\n                throwable.printStackTrace();\n            }\n\n            try {\n                this.locationDao.create(persistentLocation);\n            } catch (SQLException e) {\n                e.printStackTrace();\n            }\n        }).syncLast(in -> {\n            if (clear) {\n                clearLocations(UUID.fromString(persistentLocation.getUuid()));\n            }\n        }).execute();\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/HyperDatabase.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44794, "method_name": "clearLocations", "class_name": "HyperDatabase", "params": ["UUID"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearLocations(@NotNull final UUID uuid) {\n        final Collection<String> keys = new HashSet<>(this.locations.columnKeySet());\n        for (final String key : keys) {\n            this.locations.remove(uuid, key);\n        }\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/HyperDatabase.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44795, "method_name": "getLocations", "class_name": "HyperDatabase", "params": ["UUID"], "throws": null, "modifiers": ["public"], "return_type": "Future<Collection>", "snippet": "    public Future<Collection<PersistentLocation>> getLocations(@NotNull final UUID uuid) {\n        final CompletableFuture<Collection<PersistentLocation>> future = new CompletableFuture<>();\n        taskChainFactory.newChain().async(() -> {\n            try {\n                final Collection<PersistentLocation> locations =\n                    this.locationDao.queryForEq(\"uuid\", Objects.requireNonNull(uuid).toString());\n                for (final PersistentLocation persistentLocation : locations) {\n                    this.locations.put(uuid, persistentLocation.getWorld(), persistentLocation);\n                }\n                future.complete(locations);\n            } catch (SQLException e) {\n                e.printStackTrace(); // In case the caller swallows it\n                future.completeExceptionally(e);\n            }\n        }).execute();\n        return future;\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/HyperDatabase.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44796, "method_name": "getLocation", "class_name": "HyperDatabase", "params": ["UUID", "String"], "throws": null, "modifiers": ["public"], "return_type": "Optional<PersistentLocation>", "snippet": "    @NotNull public Optional<PersistentLocation> getLocation(@NotNull final UUID uuid,\n        @NotNull final String world) {\n        return Optional.ofNullable(this.locations.get(uuid, world));\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/HyperDatabase.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44797, "method_name": "clearWorld", "class_name": "HyperDatabase", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void clearWorld(@NotNull final String worldName) {\n        taskChainFactory.newChain().async(() -> {\n            try {\n                final DeleteBuilder<PersistentLocation, Integer> deleteBuilder =\n                    this.locationDao.deleteBuilder();\n                deleteBuilder.where().eq(\"world\", worldName);\n                deleteBuilder.delete();\n            } catch (final SQLException throwables) {\n                throwables.printStackTrace();\n            }\n        }).execute();\n    }", "url": "https://raw.githubusercontent.com/Sauilitired/Hyperverse/master/Core/src/main/java/se/hyperver/hyperverse/database/HyperDatabase.java", "stars": "25", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44798, "method_name": "getHospitals", "class_name": "HospitalService", "params": ["ServiceCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getHospitals(ServiceCallback callback){\n        // to fetch all hospitals\n        CollectionReference collectionReference = fireStore.collection(\"hospitals\");\n        collectionReference.get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\n            @Override\n            public void onSuccess(QuerySnapshot documentSnapshots) {\n                mapResultAndCallback(documentSnapshots, callback, -1);\n            }\n        }).addOnFailureListener(new OnFailureListener() {\n            @Override\n            public void onFailure(@NonNull Exception e) {\n                callback.onFailed(e);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/HospitalService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 44799, "method_name": "getHospitals", "class_name": "HospitalService", "params": ["String", "ServiceCallback"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getHospitals(String districtName, ServiceCallback callback){\n        // to fetch a particular district hospitals and name should be cap first: Dhaka, Khulna\n        fireStore.collection(\"hospitals\").whereEqualTo(\"District\", districtName)\n                .get().addOnSuccessListener(new OnSuccessListener<QuerySnapshot>() {\n            @Override\n            public void onSuccess(QuerySnapshot documentSnapshots) {\n                mapResultAndCallback(documentSnapshots, callback, -1);\n            }\n        }).addOnFailureListener(new OnFailureListener() {\n            @Override\n            public void onFailure(@NonNull Exception e) {\n                callback.onFailed(e);\n            }\n        });\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/HospitalService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 44800, "method_name": "mapResultAndCallback", "class_name": "HospitalService", "params": ["QuerySnapshot", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapResultAndCallback(QuerySnapshot querySnapshot, ServiceCallback callback, int token) {\n        List<HealthCenter> data = new ArrayList<>();\n        if(querySnapshot.isEmpty()){\n            callback.onResult(data);\n            return;\n        }\n        for(DocumentSnapshot doc : querySnapshot.getDocuments()){\n            HealthCenter healthCenter = doc.toObject(HealthCenter.class);\n            healthCenter.Id = doc.getId();\n            data.add(healthCenter);\n        }\n        callback.onResult(data);\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/HospitalService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 44801, "method_name": "mapResultAndCallback", "class_name": "HospitalService", "params": ["DocumentSnapshot", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mapResultAndCallback(DocumentSnapshot documentSnapshot, ServiceCallback callback, int token) {\n\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/HospitalService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 44802, "method_name": "getCollectionReference", "class_name": "HospitalService", "params": ["CollectionReference", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getCollectionReference(CollectionReference collectionReference, ServiceCallback callback, int token) {\n\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/HospitalService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 44803, "method_name": "getDocumentReference", "class_name": "HospitalService", "params": ["DocumentReference", "ServiceCallback", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void getDocumentReference(DocumentReference documentReference, ServiceCallback callback, int token) {\n\n    }", "url": "https://raw.githubusercontent.com/swesust/covid-19-help-support-bd/master/Covid19Shahajjo/app/src/main/java/com/example/covid19shahajjo/services/HospitalService.java", "stars": "9", "class_props": {"extends": null, "implements": ["FireStoreService"], "modifiers": ["public"]}}, {"id": 44804, "method_name": "setNonNullParameter", "class_name": "EnumTypeHandler", "params": ["PreparedStatement", "int", "E", "JdbcType"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "void", "snippet": "  public void setNonNullParameter(PreparedStatement ps, int i, E parameter, JdbcType jdbcType) throws SQLException {\n    if (jdbcType == null) {\n      ps.setString(i, parameter.name());\n    } else {\n      ps.setObject(i, parameter.name(), jdbcType.TYPE_CODE); // see r3589\n    }\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44805, "method_name": "getNullableResult", "class_name": "EnumTypeHandler", "params": ["ResultSet", "String"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "E", "snippet": "  public E getNullableResult(ResultSet rs, String columnName) throws SQLException {\n    String s = rs.getString(columnName);\n    return s == null ? null : Enum.valueOf(type, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44806, "method_name": "getNullableResult", "class_name": "EnumTypeHandler", "params": ["ResultSet", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "E", "snippet": "  public E getNullableResult(ResultSet rs, int columnIndex) throws SQLException {\n    String s = rs.getString(columnIndex);\n    return s == null ? null : Enum.valueOf(type, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44807, "method_name": "getNullableResult", "class_name": "EnumTypeHandler", "params": ["CallableStatement", "int"], "throws": ["SQLException"], "modifiers": ["public"], "return_type": "E", "snippet": "  public E getNullableResult(CallableStatement cs, int columnIndex) throws SQLException {\n    String s = cs.getString(columnIndex);\n    return s == null ? null : Enum.valueOf(type, s);\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/main/java/org/apache/ibatis/type/EnumTypeHandler.java", "stars": "15", "class_props": {"extends": "BaseTypeHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44808, "method_name": "dispense", "class_name": "Rupee10DispenseChain", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dispense(int amount) {\n        if (amount >= 10) {\n            int notes = amount / 10;\n            int remainingAmount = amount % 10;\n            System.out.println(\"Number of 10 Rs notes are \" + String.valueOf(notes));\n        } else if (amount > 0) {\n            this.nextChain.dispense(amount);\n        }\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Chain%20of%20Responsibility/src/Rupee10DispenseChain.java", "stars": "38", "class_props": {"extends": "IATMDispenseChain", "implements": null, "modifiers": ["public"]}}, {"id": 44809, "method_name": "getId", "class_name": "Question", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44810, "method_name": "setId", "class_name": "Question", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(String id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44811, "method_name": "getQuestionName", "class_name": "Question", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getQuestionName() {\n        return questionName;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44812, "method_name": "setQuestionName", "class_name": "Question", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setQuestionName(String questionName) {\n        this.questionName = questionName;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44813, "method_name": "getAnswers", "class_name": "Question", "params": [], "throws": null, "modifiers": ["public"], "return_type": "List<String>", "snippet": "    public List<String> getAnswers() {\n        return answers;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44814, "method_name": "setAnswers", "class_name": "Question", "params": ["List<String>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setAnswers(List<String> answers) {\n        this.answers = answers;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44815, "method_name": "getCategory", "class_name": "Question", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getCategory() {\n        return category;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44816, "method_name": "setCategory", "class_name": "Question", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setCategory(String category) {\n        this.category = category;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44817, "method_name": "getUserId", "class_name": "Question", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getUserId() {\n        return userId;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44818, "method_name": "setUserId", "class_name": "Question", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setUserId(String userId) {\n        this.userId = userId;\n    }", "url": "https://raw.githubusercontent.com/zhuchangwu/lawyer-lover-cloud-backend/master/lawyer-lover-main/src/main/java/com/changwu/doc/Question.java", "stars": "12", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44819, "method_name": "execute", "class_name": "RoleContext", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String execute(){\n        return role.authority();\n    }", "url": "https://raw.githubusercontent.com/wangIQD/GoF23/master/GOF23/DesignPattern/src/com/wz/behavioral/strategy/RoleContext.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44820, "method_name": "main", "class_name": "MinValue", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\tint[] arr = {45, 2, 1, 100, 60, 78, 290, 3, 5, -1, 9, -8};\n\t\tint min = arr[0];\n\t\t\n\t\tfor(int number : arr) {\n\t\t\tif(number < min) {\n\t\t\t\tmin = number;\n\t\t\t}\n\t\t}\n\t\t\n\t\tSystem.out.println(min); // -1\n\t}", "url": "https://raw.githubusercontent.com/Suranchiyev/java-sdet-2020/master/src/day20/MinValue.java", "stars": "21", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44821, "method_name": "copyLogDatabase", "class_name": "LogDatabaseHelper", "params": ["Context"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void copyLogDatabase(Context context) {\n\t\tSQLiteDatabase database = DatabaseHelper.getWritableDatabase(context);\n\t\tdatabase.beginTransaction();\n\t\tdatabase.execSQL(\"drop table if exists \" + LogDatabase.LogSpec.TABLE_NAME);\n\t\tLogDatabase.LogDatabaseHelper.executeCreate(database);\n\t\tfor (LogEntry logEntry : Logger.getLogs(0)) {\n\t\t\tLogDatabase\n\t\t\t\t\t.insert(database, logEntry.getLevel().getKey(), logEntry.getTag(), logEntry.getMessage(), logEntry.getTime());\n\t\t}\n\t\tdatabase.setTransactionSuccessful();\n\t\tdatabase.endTransaction();\n\t}", "url": "https://raw.githubusercontent.com/DP-3T/dp3t-sdk-android/master-alpha/dp3t-sdk/sdk/src/calibration/java/org/dpppt/android/sdk/internal/logger/LogDatabaseHelper.java", "stars": "139", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44822, "method_name": "drawTexture", "class_name": "RacesMilitaryUI", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void drawTexture(Graphics g)      { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44823, "method_name": "textureName", "class_name": "RacesMilitaryUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String textureName()     { return TEXTURE_BROWN; }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44824, "method_name": "changedEmpire", "class_name": "RacesMilitaryUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void changedEmpire()     { \n        ships = null;\n        shipY = 0;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44825, "method_name": "ships", "class_name": "RacesMilitaryUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "List<ShipView>", "snippet": "    private List<ShipView> ships() {\n        if (ships == null) {\n            Empire emp = parent.selectedEmpire();\n            if (emp.isPlayer())\n                ships = player().shipLab().designHistory();\n            else\n                ships = player().viewForEmpire(emp).spies().ships();\n        }\n        return ships;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44826, "method_name": "paintComponent", "class_name": "RacesMilitaryUI", "params": ["Graphics"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void paintComponent(Graphics g0) {\n        super.paintComponent(g0);\n        Graphics2D g = (Graphics2D) g0;\n        int w = getWidth();\n        int h = getHeight();\n        // draw the gradient background for the header row\n\n        if (backGradient == null) {\n            Point2D start = new Point2D.Float(0, getHeight() / 2);\n            Point2D end = new Point2D.Float(0, getHeight());\n            float[] dist = {0.0f, 1.0f};\n            Color[] colors = {RacesUI.darkerBrown, RacesUI.gradientBottom};\n            backGradient = new LinearGradientPaint(start, end, dist, colors);\n        }\n        g.setPaint(backGradient);\n        g.fillRect(0,h/2,w, h/2);\n        if (parent.selectedEmpire().isPlayer()) \n            paintPlayerData(g);\n        else\n            paintAIData(g);\n\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44827, "method_name": "initModel", "class_name": "RacesMilitaryUI", "params": [], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void initModel() {\n        setBackground(RacesUI.darkerBrown);\n        setBorder(newEmptyBorder(5,5,5,5));\n        addMouseMotionListener(this);\n        addMouseListener(this);\n        addMouseWheelListener(this);       \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44828, "method_name": "shipIconBackImg", "class_name": "RacesMilitaryUI", "params": [], "throws": null, "modifiers": ["public"], "return_type": "BufferedImage", "snippet": "    public BufferedImage shipIconBackImg() {\n        if (shipIconBackImg == null) {\n            int w = scaled(100);\n            shipIconBackImg = newStarBackground(this,w,w);\n        }\n        return shipIconBackImg;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44829, "method_name": "paintPlayerData", "class_name": "RacesMilitaryUI", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void paintPlayerData(Graphics2D g) {\n        Empire emp = parent.selectedEmpire();\n        int w = getWidth();\n        int h = getHeight();\n\n        int s200 = scaled(200);\n        int s210 = scaled(210);\n        int s220 = scaled(220);\n        int s260 = scaled(260);\n        int s265 = scaled(265);\n        int s370 = scaled(370);\n        drawRaceIconBase(g, emp, s55, s25, s210, s210);\n        drawPlayerBaseInfo(g, emp, s260, s80, s370, scaled(130));\n        drawShipDesignTitle(g, emp, s20, s220, w-s20-s20, s40);\n        drawShipDesignListing(g, emp, s20, s265, w-s20-s20, h-s265-s10);\n        if (UserPreferences.textures()) \n            drawTexture(g,0,0,w,h);\n        drawRaceIcon(g, emp, s60, s30, s200, s200);\n        drawFleetTitle(g, emp, s260, s30, s370, s50);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44830, "method_name": "paintAIData", "class_name": "RacesMilitaryUI", "params": ["Graphics2D"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void paintAIData(Graphics2D g) {\n        Empire emp = parent.selectedEmpire();\n        int w = getWidth();\n        int h = getHeight();\n\n        int s200 = scaled(200);\n        int s210 = scaled(210);\n        int s220 = scaled(220);\n        int s260 = scaled(260);\n        int s265 = scaled(265);\n        int s370 = scaled(370);\n        drawRaceIconBase(g, emp, s55, s25, s210, s210);\n        drawAIBaseInfo(g, emp, s260, s80, s370, scaled(130));\n        drawShipDesignTitle(g, emp, s20, s220, w-s20-s20, s40);\n        drawShipDesignListing(g, emp, s20, s265, w-s20-s20, h-s265-s10);\n        if (UserPreferences.textures()) \n            drawTexture(g,0,0,w,h);\n        drawRaceIcon(g, emp, s60, s30, s200, s200);\n        drawFleetTitle(g, emp, s260, s30, s370, s50);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44831, "method_name": "drawRaceIconBase", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawRaceIconBase(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(RacesUI.darkBrown);\n        Shape rect = new RoundRectangle2D.Float(x,y,w,h,w/8, h/8);\n        g.fill(rect);  \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44832, "method_name": "drawRaceIcon", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawRaceIcon(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(Color.black);\n        Shape rect = new RoundRectangle2D.Float(x,y,w,h,w/8, h/8);\n        g.fill(rect);\n        \n        BufferedImage backImg = parent.raceIconBackImg();\n        g.drawImage(backImg, x,y, null);\n        \n        int x1 = x + w/10;\n        int w1 = w * 8/10;\n        int y1 = y + h/10;\n        int h1 = h * 8/10;\n\n        Image img = emp.isPlayer() ? emp.race().flagPact() : player().viewForEmpire(emp).flag();\n        int imgH = img.getHeight(null);\n        int imgW = img.getWidth(null);\n        g.drawImage(img, x1, y1, x1+w1, y1+h1, 0, 0, imgW, imgH, null);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44833, "method_name": "drawFleetTitle", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawFleetTitle(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(SystemPanel.orangeText);\n        g.setFont(narrowFont(32));\n        g.drawString(text(\"RACES_MILITARY_TITLE\", emp.raceName()), x+s10, y+h-s15);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44834, "method_name": "drawPlayerBaseInfo", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawPlayerBaseInfo(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(RacesUI.darkBrown);\n        g.fillRect(x, y, w, h);\n        int x0 = x+s20;\n        int y0 = y + s26;\n        String title2 = text(\"RACES_MILITARY_SUBTITLE\");\n        g.setFont(narrowFont(20));\n        drawShadowedString(g, title2, 1, x0, y0, SystemPanel.blackText, Color.white);\n\n        Empire pl = player();\n        int mgn = s20;\n        y0 += s15;\n        int y1 = y0+s25;\n        int x1 = x0 + s10;\n        int boxW = (x+w - (3*mgn) - x1) / 2;\n        int x2 = x1 + s30 + mgn + boxW;\n        drawSizeBox(g, text(\"RACES_MILITARY_SMALL\"),  pl.shipCount(ShipDesign.SMALL),  x1, y0, boxW, s25, false);\n        drawSizeBox(g, text(\"RACES_MILITARY_LARGE\"),  pl.shipCount(ShipDesign.LARGE),  x2, y0, boxW, s25, false);\n        drawSizeBox(g, text(\"RACES_MILITARY_MEDIUM\"), pl.shipCount(ShipDesign.MEDIUM), x1, y1, boxW, s25, false);\n        drawSizeBox(g, text(\"RACES_MILITARY_HUGE\"),   pl.shipCount(ShipDesign.HUGE),   x2, y1, boxW, s25, false); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44835, "method_name": "drawAIBaseInfo", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawAIBaseInfo(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(RacesUI.darkBrown);\n        g.fillRect(x, y, w, h);\n        int x0 = x+s20;\n        int y0 = y + s26;\n        String title2 = text(\"RACES_MILITARY_SUBTITLE\");\n        g.setFont(narrowFont(20));\n        drawShadowedString(g, title2, 1, x0, y0, SystemPanel.blackText, Color.white);\n\n        Empire pl = player();\n        EmpireView view = pl.viewForEmpire(emp);\n        SpyNetwork.FleetView fv = view.spies().fleetView();\n\n        int mgn = s20;\n        y0 += s15;\n        int y1 = y0+s25;\n        int x1 = x0 + s10;\n        int boxW = (x+w - (3*mgn) - x1) / 2;\n        int x2 = x1 + s30 + mgn + boxW;\n        drawSizeBox(g, text(\"RACES_MILITARY_SMALL\"),  fv.small(),  x1, y0, boxW, s25, fv.noReport());\n        drawSizeBox(g, text(\"RACES_MILITARY_LARGE\"),  fv.large(),  x2, y0, boxW, s25, fv.noReport());\n        drawSizeBox(g, text(\"RACES_MILITARY_MEDIUM\"), fv.medium(), x1, y1, boxW, s25, fv.noReport());\n        drawSizeBox(g, text(\"RACES_MILITARY_HUGE\"),   fv.huge(),   x2, y1, boxW, s25, fv.noReport()); \n\n        int y2 = y+h-s10;\n        g.setColor(SystemPanel.blackText);\n        g.setFont(narrowFont(16));\n        int age = fv.reportAge();\n        if (fv.noReport())\n            g.drawString(text(\"RACES_MILITARY_REPORT_NONE\"), x0, y2);\n        else if (age == 0)\n            g.drawString(text(\"RACES_MILITARY_REPORT_CURRENT\"), x0, y2);\n        else\n            g.drawString(text(\"RACES_MILITARY_REPORT_OLD\", str(age)), x0, y2);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44836, "method_name": "drawShipDesignTitle", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawShipDesignTitle(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        int y0 = y+h-s5;\n        // these x values should match those in method drawShipDesign(\n        int x1 = x+scaled(245)+s10; \n        int x3 = x+scaled(550)+s10;\n        int x4 = x+scaled(735)+s10;\n        \n        g.setColor(SystemPanel.blackText);\n        g.setFont(narrowFont(18));\n        g.drawString(text(\"RACES_MILITARY_TACTICAL\"), x1, y0);\n        g.drawString(text(\"RACES_MILITARY_WEAPONS\"), x3, y0);\n        g.drawString(text(\"RACES_MILITARY_SPECIALS\"), x4, y0);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44837, "method_name": "drawShipDesignListing", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawShipDesignListing(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        g.setColor(RacesUI.darkBrown);\n        g.fillRect(x, y, w, h);\n       \n        if (ships().isEmpty()) {\n            drawNoShipData(g,emp,x,y,w,h);\n            return;\n        }\n        \n        int listH = h;\n        int rowH = s80;\n        int fullListH = ships().size()*rowH;\n        shipListBox.setBounds(x,y,w,listH);\n        shipYMax = max(0, fullListH-listH);\n        \n        List<ShipView> ships1 = ships();\n        if (emp.isPlayer())\n            Collections.sort(ships1, ShipView.VIEW_ACTIVE);\n        int y1 = y-shipY;\n        g.setClip(x,y+s1,w,h-s2);\n        for (ShipView view: ships1) {\n            drawShipDesign(g, emp, view, x, y1, w, rowH);\n            y1 += rowH;\n        }\n        if (shipYMax == 0)\n            shipScroller.setBounds(0,0,0,0);\n        else {\n            g.setColor(RacesUI.scrollBarC);\n            int scrollW = s12;\n            int scrollH = (int) ((float)listH*listH/(listH+shipYMax));\n            int scrollX = x+w-scrollW-s4;\n            int scrollY =(int) (y+ (float)listH*shipY/(shipYMax+listH));\n            g.fillRoundRect(scrollX, scrollY, scrollW, scrollH, s4, s4);\n            shipScroller.setBounds(scrollX, scrollY, scrollW, scrollH);\n            if (hoverShape == shipScroller) {\n                Stroke prev = g.getStroke();\n                g.setColor(Color.yellow);\n                g.setStroke(stroke2);\n                g.drawRoundRect(scrollX, scrollY, scrollW, scrollH, s4, s4);\n                g.setStroke(prev);\n            }\n        }\n        g.setClip(null);\n        if ((hoverShape == shipListBox) \n        && (fullListH > listH)) {\n            g.setColor(Color.yellow);\n            Stroke prev = g.getStroke();\n            g.setStroke(stroke2);\n            g.draw(shipListBox);\n            g.setStroke(prev);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44838, "method_name": "drawNoShipData", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawNoShipData(Graphics2D g, Empire emp, int x, int y, int w, int h) {\n        String str = text(\"RACES_MILITARY_NO_SHIPS\");\n        g.setFont(narrowFont(32));\n        int sw = g.getFontMetrics().stringWidth(str);\n\n        int x0 = x+((w-sw)/2);\n        drawShadowedString(g, str, 2, x0, y+(h/4)-s15, Color.black, SystemPanel.whiteText);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44839, "method_name": "drawShipDesign", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "Empire", "ShipView", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  drawShipDesign(Graphics2D g, Empire emp, ShipView view, int x, int y, int w, int h) { \n        int x0 = x;\n        int x1 = x+scaled(245);\n        int x2 = x+scaled(395);\n        int x3 = x+scaled(550);\n        int x4 = x+scaled(735);\n        int x5 = x+w-scaled(20);\n        \n        drawShipNameAndIcon(g, view, x0, y, x1-x0, h);\n        drawShipTactical1(g, view, x1, y, x2-x1, h);\n        drawShipTactical2(g, view, x2, y, x3-x2, h);\n        drawShipWeapons(g, view, x3, y, x4-x3, h);\n        drawShipSpecials(g, view, x4, y, x5-x4, h);\n                \n        Stroke prev = g.getStroke();\n        g.setStroke(stroke1);\n                g.setColor(brownDividerC);\n        g.drawLine(x, y+h, x5, y+h);\n        g.drawLine(x1, y, x1, y+h);\n        g.drawLine(x2, y, x2, y+h);\n        g.drawLine(x3, y, x3, y+h);\n        g.drawLine(x4, y, x4, y+h);\n        g.drawLine(x5, y, x5, y+h);\n        g.setStroke(prev);       \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44840, "method_name": "drawShipNameAndIcon", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "ShipView", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  drawShipNameAndIcon(Graphics2D g, ShipView view, int x, int y, int w, int h) {     \n        int x0 = x+w*11/20;\n        int w0 = x+w-x0-s5;\n        int y0 = y+s5;\n        int h0 = h-s10;\n        \n        ShipDesign d = view.design();\n        g.setFont(narrowFont(20));\n        String s = d.name();\n        int sw = g.getFontMetrics().stringWidth(s);\n        int x1 = x+((x0-x-sw)/2);\n        int y1 = y+(h/2)-s10;\n        drawShadowedString(g, s, 1, x1, y1, SystemPanel.blackText, SystemPanel.whiteText);\n        \n        \n        String status, status2 = null;\n        if (view.empire().isPlayer()) {\n            if (d.scrapped()) \n                status = text(\"RACES_MILITARY_INACTIVE\");\n            else\n                status = text(\"RACES_MILITARY_ACTIVE\");\n        }\n        else {\n            int age = galaxy().currentYear() - view.lastViewDate();\n            if (age < 1) \n                status = text(\"RACES_MILITARY_ACTIVE\");\n            else {\n                status = text(\"RACES_MILITARY_LAST_SEEN\");\n                status2 = text(\"RACES_MILITARY_SCAN_AGE\", str(age));               \n            }\n        }\n        g.setColor(SystemPanel.blackText);\n        g.setFont(narrowFont(16));\n        sw = g.getFontMetrics().stringWidth(status);\n        x1 = x+((x0-x-sw)/2);\n        y1 += s20;\n        g.drawString(status, x1, y1);\n        \n        if (status2 != null) {\n            g.setFont(narrowFont(15));\n            sw = g.getFontMetrics().stringWidth(status2);\n            x1 = x+((x0-x-sw)/2);\n            y1 += s16;\n            g.drawString(status2, x1, y1);          \n        }\n        drawShipIcon(g, view, x0, y0, w0, h0); \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44841, "method_name": "drawShipIcon", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "ShipView", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  drawShipIcon(Graphics2D g, ShipView view, int x, int y, int w, int h) { \n        g.setColor(Color.black);\n        RoundRectangle2D roundRect = new RoundRectangle2D.Float(x,y,w,h,s20,s20);\n        g.fill(roundRect);\n\n        Rectangle rect = new Rectangle(x,y,w,h).intersection(shipListBox);\n        Shape prevClip = g.getClip();\n        g.setClip(rect);\n        g.drawImage(shipIconBackImg(), x, y, this);\n        g.setClip(prevClip);\n\n        Image img = view.design().image();\n\n        int w0 = img.getWidth(null);\n        int h0 = img.getHeight(null);\n        float scale = min((float)w/w0, (float)h/h0);\n\n        int w1 = (int)(scale*w0);\n        int h1 = (int)(scale*h0);\n\n        int x1 = x+((w-w1)/2);\n        int y1 = y+((h-h1)/2);\n        g.drawImage(img, x1, y1, x1+w1, y1+h1, 0, 0, w0, h0, this);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44842, "method_name": "drawShipTactical1", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "ShipView", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  drawShipTactical1(Graphics2D g, ShipView view, int x, int y, int w, int h) { \n        String unk = text(\"RACES_MILITARY_UNSCANNED\");\n\n        ShipDesign d = view.design();\n        g.setColor(SystemPanel.blackText);\n        \n        int lineH = s18;\n        int x0 = x+s10;\n        int y0 = y+lineH;\n        int y1 = y0+lineH;\n        int y2 = y1+lineH;\n        int y3 = y2+lineH;\n        g.setFont(narrowFont(16));\n        String label = text(\"RACES_MILITARY_HULL\");\n        g.drawString(label, x0, y0);\n        label = text(\"RACES_MILITARY_ARMOR\");\n        g.drawString(label,  x0, y1);\n        label = text(\"RACES_MILITARY_SHIELD\");\n        g.drawString(label, x0, y2);\n        label = text(\"RACES_MILITARY_TRAVEL_SPEED\");\n        g.drawString(label,  x0, y3);\n             \n        g.setFont(narrowFont(15));\n        String val = d.sizeDesc();\n        int sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y0);\n        val = view.armorKnown() ? str((int)d.hits()) : unk;\n        sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y1);\n        val =  view.shieldKnown() ? str((int)d.shieldLevel()) : unk;\n        sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y2);\n        val = str(d.warpSpeed());\n        sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y3);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44843, "method_name": "drawShipTactical2", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "ShipView", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  drawShipTactical2(Graphics2D g, ShipView view, int x, int y, int w, int h) { \n        String unk = text(\"RACES_MILITARY_UNSCANNED\");\n \n        ShipDesign d = view.design();\n        g.setColor(SystemPanel.blackText);\n        \n        int lineH = s18;\n        int x0 = x+s10;\n        int y0 = y+lineH;\n        int y1 = y0+lineH;\n        int y2 = y1+lineH;\n        int y3 = y2+lineH;\n        g.setFont(narrowFont(16));\n        String label = text(\"RACES_MILITARY_ATTACK_LEVEL\");\n        g.drawString(label,  x0, y0);\n        label = text(\"RACES_MILITARY_MISSILE_DEFENSE\");\n        g.drawString(label,  x0, y1);\n        label = text(\"RACES_MILITARY_BEAM_DEFENSE\");\n        g.drawString(label,  x0, y2);\n        label = text(\"RACES_MILITARY_COMBAT_SPEED\");\n        g.drawString(label,  x0, y3);\n             \n        g.setFont(narrowFont(15));\n        String val = view.computerKnown() ? str((int)d.attackLevel()) : unk;\n        int sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y0);\n        val = view.maneuverKnown() ? str(d.missileDefense()) : unk;\n        sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y1);\n        val = view.maneuverKnown() ? str(d.beamDefense()) : unk;\n        sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y2);\n        val = view.maneuverKnown() ? str(d.combatSpeed()) : unk;\n        sw = g.getFontMetrics().stringWidth(val);\n        g.drawString(val, x+w-sw-s10, y3);\n\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44844, "method_name": "drawShipWeapons", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "ShipView", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  drawShipWeapons(Graphics2D g, ShipView view, int x, int y, int w, int h) { \n        ShipDesign d = view.design();\n        g.setFont(narrowFont(15));\n\n        int lineH = s18;\n        int y0 = y;\n        int x0 = x+s10;\n        g.setColor(SystemPanel.blackText);\n        for (int i=0;i<ShipDesign.maxWeapons();i++) {\n            y0 += lineH;\n            if (view.weaponKnown(i)) {\n                if (view.hasWeapon(i)) {\n                    g.drawString(text(\"RACES_MILITARY_WEAPON_CNT\", str(d.wpnCount(i)), d.weapon(i).name()), x0, y0);\n                }\n                else if (i == 0)\n                    g.drawString(text(\"RACES_MILITARY_NO_WEAPONS\"), x0, y0);\n            }\n            else if (i == 0)\n                g.drawString(text(\"RACES_MILITARY_UNSCANNED_LONG\"), x0, y0);\n        }    \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44845, "method_name": "drawShipSpecials", "class_name": "RacesMilitaryUI", "params": ["Graphics2D", "ShipView", "int", "int", "int", "int"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void  drawShipSpecials(Graphics2D g, ShipView view, int x, int y, int w, int h) { \n        ShipDesign d = view.design();\n        g.setFont(narrowFont(15));\n\n        int lineH = s18;\n        int y0 = y;\n        int x0 = x+s10;\n        g.setColor(SystemPanel.blackText);\n        for (int i=0;i<ShipDesign.maxSpecials();i++) {\n            y0 += lineH;\n            if (view.specialKnown(i)) {\n                if (view.hasSpecial(i)) {\n                    g.drawString(d.special(i).name(), x0, y0);\n                }\n                else if (i == 0)\n                    g.drawString(text(\"RACES_MILITARY_NO_SPECIALS\"), x0, y0);\n            }\n            else if (i == 0)\n                g.drawString(text(\"RACES_MILITARY_UNSCANNED_LONG\"), x0, y0);\n        }   \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44846, "method_name": "drawSizeBox", "class_name": "RacesMilitaryUI", "params": ["Graphics", "String", "int", "int", "int", "int", "int", "boolean"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void drawSizeBox(Graphics g, String size, int count, int x, int y, int w, int h, boolean hideVal) {\n        g.setColor(SystemPanel.blackText);\n        g.setFont(narrowFont(20));\n        g.drawString(size, x+s8, y+h-s10);\n\n        if (!hideVal) {\n            String c = str(count);\n            int sw = g.getFontMetrics().stringWidth(c);\n            g.drawString(c, x+w-sw-s10, y+h-s10);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44847, "method_name": "mouseDragged", "class_name": "RacesMilitaryUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseDragged(MouseEvent e) {\n        int x = e.getX();\n        int y = e.getY();\n        int dY = y-dragY;\n        dragY = y;\n        if (shipScroller == hoverShape) {\n            if ((y >= shipListBox.y) || (y <= (shipListBox.y+shipListBox.height))) { \n                int h = (int) shipListBox.getHeight();\n                int dListY = (int)((float)dY*(h+shipYMax)/h);\n                if (dListY < 0)\n                    shipY = max(0,shipY+dListY);\n                else \n                    shipY = min(shipYMax,shipY+dListY);\n            }\n            repaint(shipListBox);\n            return;\n        }\n        else if (shipListBox == hoverShape) {\n            if (shipListBox.contains(x,y)) { \n                int h = (int) shipListBox.getHeight();\n                int dListY = (int)(-(float)dY*(h+shipYMax)/h);\n                if (dListY < 0)\n                    shipY = max(0,shipY+dListY);\n                else \n                    shipY = min(shipYMax,shipY+dListY);\n            }\n            repaint(shipListBox);\n            return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44848, "method_name": "mouseMoved", "class_name": "RacesMilitaryUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseMoved(MouseEvent e) {\n        int x = e.getX();\n        int y = e.getY();\n        Shape prevHover = hoverShape;\n        hoverShape = null;\n        if (shipScroller.contains(x,y))\n            hoverShape = shipScroller;\n        else if (shipListBox.contains(x,y))\n            hoverShape = shipListBox;\n\n        if (hoverShape != prevHover) \n            repaint();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44849, "method_name": "mouseClicked", "class_name": "RacesMilitaryUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseClicked(MouseEvent e) { }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44850, "method_name": "mousePressed", "class_name": "RacesMilitaryUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mousePressed(MouseEvent e) { \n        dragY = e.getY();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44851, "method_name": "mouseReleased", "class_name": "RacesMilitaryUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseReleased(MouseEvent e) {\n        dragY = 0;\n        if (e.getButton() > 3)\n            return;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44852, "method_name": "mouseEntered", "class_name": "RacesMilitaryUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseEntered(MouseEvent e) {}", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44853, "method_name": "mouseExited", "class_name": "RacesMilitaryUI", "params": ["MouseEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseExited(MouseEvent e) {\n        if (hoverShape != null) {\n            hoverShape = null;\n            repaint();\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44854, "method_name": "mouseWheelMoved", "class_name": "RacesMilitaryUI", "params": ["MouseWheelEvent"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void mouseWheelMoved(MouseWheelEvent e) {\n        int count = e.getUnitsToScroll();\n        if ((hoverShape == shipListBox)\n        || (hoverShape == shipScroller)) {\n            int prevY = shipY;\n            if (count < 0)\n                shipY = max(0,shipY-s10);\n            else \n                shipY = min(shipYMax,shipY+s10);\n            if (shipY != prevY)\n                repaint(shipListBox);\n            return;\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/ui/races/RacesMilitaryUI.java", "stars": "74", "class_props": {"extends": "BasePanel", "implements": ["MouseListener", "MouseMotionListener", "MouseWheelListener"], "modifiers": ["final", "public"]}}, {"id": 44855, "method_name": "getLatch", "class_name": "ReceiverService", "params": [], "throws": null, "modifiers": ["public"], "return_type": "CountDownLatch", "snippet": "    public CountDownLatch getLatch(){\n        return latch;\n    }", "url": "https://raw.githubusercontent.com/camelya58/kafka-sample/master/kafka-consumer/src/main/java/com/example/kafka/kafkaconsumer/service/ReceiverService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44856, "method_name": "receiveAndSave", "class_name": "ReceiverService", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void receiveAndSave(String payload){\n        log.info(\"Receive message= '{}' \", payload);\n\n        latch.countDown();\n    }", "url": "https://raw.githubusercontent.com/camelya58/kafka-sample/master/kafka-consumer/src/main/java/com/example/kafka/kafkaconsumer/service/ReceiverService.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44857, "method_name": "getPostfix", "class_name": "Counter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPostfix() {\n        return postfix;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44858, "method_name": "setPostfix", "class_name": "Counter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPostfix(String postfix) {\n        this.postfix = postfix;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44859, "method_name": "getPrefix", "class_name": "Counter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getPrefix() {\n        return prefix;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44860, "method_name": "setPrefix", "class_name": "Counter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setPrefix(String prefix) {\n        this.prefix = prefix;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44861, "method_name": "getId", "class_name": "Counter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getId() {\n        return id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44862, "method_name": "setId", "class_name": "Counter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setId(int id) {\n        this.id = id;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44863, "method_name": "getTitle", "class_name": "Counter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getTitle() {\n        return title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44864, "method_name": "setTitle", "class_name": "Counter", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setTitle(String title) {\n        this.title = title;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44865, "method_name": "getValue", "class_name": "Counter", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getValue() {\n        return value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44866, "method_name": "setValue", "class_name": "Counter", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setValue(int value) {\n        this.value = value;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/model/Counter.java", "stars": "12", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44867, "method_name": "recordinfo", "class_name": "RecordController", "params": ["String", "String", "String", "String"], "throws": null, "modifiers": ["public"], "return_type": "DeferredResult<ResponseEntity>", "snippet": "\tpublic DeferredResult<ResponseEntity<RecordInfo>> recordinfo(@PathVariable String deviceId, String channelId, String startTime,  String endTime){\n\t\t\n\t\tif (logger.isDebugEnabled()) {\n\t\t\tlogger.debug(String.format(\"\u5f55\u50cf\u4fe1\u606f API\u8c03\u7528\uff0cdeviceId\uff1a%s \uff0cstartTime\uff1a%s\uff0c startTime\uff1a%s\",deviceId, startTime, endTime));\n\t\t}\n\t\t\n\t\tDevice device = storager.queryVideoDevice(deviceId);\n\t\tcmder.recordInfoQuery(device, channelId, startTime, endTime);\n\t\tDeferredResult<ResponseEntity<RecordInfo>> result = new DeferredResult<ResponseEntity<RecordInfo>>();\n\t\t// \u5f55\u50cf\u67e5\u8be2\u4ee5channelId\u4f5c\u4e3adeviceId\u67e5\u8be2\n\t\tresultHolder.put(DeferredResultHolder.CALLBACK_CMD_RECORDINFO+channelId, result);\n        return result;\n\t}", "url": "https://raw.githubusercontent.com/swwheihei/wvp/master/src/main/java/com/genersoft/iot/vmp/vmanager/record/RecordController.java", "stars": "29", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44868, "method_name": "contextLoads", "class_name": "ClientApplicationTests", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "    void contextLoads() {\n    }", "url": "https://raw.githubusercontent.com/lzj-github/registry/master/client/src/test/java/cn/lzj/nacos/client/ClientApplicationTests.java", "stars": "34", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44869, "method_name": "setUp", "class_name": "CacheOrderTest", "params": [], "throws": ["Exception"], "modifiers": ["static"], "return_type": "void", "snippet": "  static void setUp() throws Exception {\n    // create a SqlSessionFactory\n    try (Reader reader = Resources.getResourceAsReader(\"org/apache/ibatis/submitted/cacheorder/mybatis-config.xml\")) {\n      sqlSessionFactory = new SqlSessionFactoryBuilder().build(reader);\n    }\n\n    // populate in-memory database\n    BaseDataTest.runScript(sqlSessionFactory.getConfiguration().getEnvironment().getDataSource(),\n            \"org/apache/ibatis/submitted/cacheorder/CreateDB.sql\");\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cacheorder/CacheOrderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44870, "method_name": "shouldResolveACacheRefNotYetRead", "class_name": "CacheOrderTest", "params": [], "throws": null, "modifiers": [], "return_type": "void", "snippet": "  void shouldResolveACacheRefNotYetRead() {\n    MappedStatement ms = sqlSessionFactory.getConfiguration().getMappedStatement(\"getUser\");\n    Cache cache = ms.getCache();\n    assertEquals(\"org.apache.ibatis.submitted.cacheorder.Mapper2\", cache.getId());\n  }", "url": "https://raw.githubusercontent.com/zjjxxlgb/mybatis2sql/master/src/test/java/org/apache/ibatis/submitted/cacheorder/CacheOrderTest.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": []}}, {"id": 44871, "method_name": "handle", "class_name": "NullHandler", "params": ["WxMpXmlMessage", "Map<String,Object>", "WxMpService", "WxSessionManager"], "throws": null, "modifiers": ["public"], "return_type": "WxMpXmlOutMessage", "snippet": "  public WxMpXmlOutMessage handle(WxMpXmlMessage wxMessage,\n                                  Map<String, Object> context, WxMpService wxMpService,\n                                  WxSessionManager sessionManager) {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/visayang/wechatdev/master/src/main/java/com/chad/wechatdev/commons/handler/NullHandler.java", "stars": "2", "class_props": {"extends": "AbstractHandler", "implements": null, "modifiers": ["public"]}}, {"id": 44872, "method_name": "deriveAddress", "class_name": "EosTest", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void deriveAddress() {\n        String pubKey = \"xpub6BffWuUvhRpycrEq9H2gQDNT1xtzu2pfNvaf2j6JMxErTFbwAX7yaL5hCocYJwaKxmYgpNuoXkGFKHQv2brE1XEmX1aneH3AHtUrR8tMV6H\";\n        String address = new Eos.Deriver().derive(pubKey,0,0);\n\n        assertEquals(address,\"EOS86B1XBB2B7u3QcdM5tuuTdRMLFfVDzsTcjHvDqcFq78MSstUxp\");\n    }", "url": "https://raw.githubusercontent.com/CoboVault/cobo-vault-cold/master/coinlib/src/test/java/com/cobo/coinlib/coin/EosTest.java", "stars": "13", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44873, "method_name": "main", "class_name": "AdminApplication", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        SpringApplication.run(AdminApplication.class, args);\n    }", "url": "https://raw.githubusercontent.com/201206030/novel-plus/master/novel-admin/src/main/java/com/java2nb/AdminApplication.java", "stars": "137", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44874, "method_name": "createFromJson", "class_name": "SlaChecker", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "SlaChecker", "snippet": "  public static SlaChecker createFromJson(final Object obj) throws Exception {\n    return createFromJson((HashMap<String, Object>) obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44875, "method_name": "createFromJson", "class_name": "SlaChecker", "params": ["HashMap<String,Object>"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "SlaChecker", "snippet": "  public static SlaChecker createFromJson(final HashMap<String, Object> obj)\n      throws Exception {\n    final Map<String, Object> jsonObj = (HashMap<String, Object>) obj;\n    if (!jsonObj.get(\"type\").equals(type)) {\n      throw new Exception(\"Cannot create checker of \" + type + \" from \"\n          + jsonObj.get(\"type\"));\n    }\n    final String id = (String) jsonObj.get(\"id\");\n    final SlaOption slaOption = SlaOption.fromObject(jsonObj.get(\"slaOption\"));\n    final int execId = Integer.valueOf((String) jsonObj.get(\"execId\"));\n    return new SlaChecker(id, slaOption, execId);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44876, "method_name": "isSlaMissed", "class_name": "SlaChecker", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "  private Boolean isSlaMissed(final ExecutableFlow flow) {\n    final String type = this.slaOption.getType();\n    if (flow.getStartTime() < 0) {\n      return Boolean.FALSE;\n    }\n    final Status status;\n    if (type.equals(SlaOption.TYPE_FLOW_FINISH)) {\n      if (this.checkTime < flow.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(flow.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = flow.getStatus();\n      if (this.checkTime < DateTime.now().getMillis()) {\n        return !isFlowFinished(status);\n      }\n    } else if (type.equals(SlaOption.TYPE_FLOW_SUCCEED)) {\n      if (this.checkTime < flow.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(flow.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = flow.getStatus();\n      if (this.checkTime < DateTime.now().getMillis()) {\n        return !isFlowSucceeded(status);\n      } else {\n        return status.equals(Status.FAILED) || status.equals(Status.KILLED);\n      }\n    } else if (type.equals(SlaOption.TYPE_JOB_FINISH)) {\n      final String jobName =\n          (String) this.slaOption.getInfo().get(SlaOption.INFO_JOB_NAME);\n\t  // FIXME\u00a0The node path is used to obtain node information instead. The purpose is to solve the problem that subflow and subflow jobs cannot be alerted.\n      final ExecutableNode node = flow.getExecutableNodePath(jobName);\n      if (node.getStartTime() < 0) {\n        return Boolean.FALSE;\n      }\n      if (this.checkTime < node.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(node.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = node.getStatus();\n      if (this.checkTime < DateTime.now().getMillis()) {\n        return !isJobFinished(status);\n      }\n    } else if (type.equals(SlaOption.TYPE_JOB_SUCCEED)) {\n      final String jobName =\n          (String) this.slaOption.getInfo().get(SlaOption.INFO_JOB_NAME);\n\t  // FIXME\u00a0The node path is used to obtain node information instead. The purpose is to solve the problem that subflow and subflow jobs cannot be alerted.\n      final ExecutableNode node = flow.getExecutableNodePath(jobName);\n      if (node.getStartTime() < 0) {\n        return Boolean.FALSE;\n      }\n      if (this.checkTime < node.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(node.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = node.getStatus();\n      if (this.checkTime < DateTime.now().getMillis()) {\n        return !isJobFinished(status);\n      } else {\n        return status.equals(Status.FAILED) || status.equals(Status.KILLED);\n      }\n    }\n    return Boolean.FALSE;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44877, "method_name": "isSlaGood", "class_name": "SlaChecker", "params": ["ExecutableFlow"], "throws": null, "modifiers": ["private"], "return_type": "Boolean", "snippet": "  private Boolean isSlaGood(final ExecutableFlow flow) {\n    final String type = this.slaOption.getType();\n    if (flow.getStartTime() < 0) {\n      return Boolean.FALSE;\n    }\n    final Status status;\n    if (type.equals(SlaOption.TYPE_FLOW_FINISH)) {\n      if (this.checkTime < flow.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(flow.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = flow.getStatus();\n      return isFlowFinished(status);\n    } else if (type.equals(SlaOption.TYPE_FLOW_SUCCEED)) {\n      if (this.checkTime < flow.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(flow.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = flow.getStatus();\n      return isFlowSucceeded(status);\n    } else if (type.equals(SlaOption.TYPE_JOB_FINISH)) {\n      final String jobName =\n          (String) this.slaOption.getInfo().get(SlaOption.INFO_JOB_NAME);\n\t  // FIXME\u00a0The node path is used to obtain node information instead. The purpose is to solve the problem that subflow and subflow jobs cannot be alerted.\n      final ExecutableNode node = flow.getExecutableNodePath(jobName);\n      if (node.getStartTime() < 0) {\n        return Boolean.FALSE;\n      }\n      if (this.checkTime < node.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(node.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = node.getStatus();\n      return isJobFinished(status);\n    } else if (type.equals(SlaOption.TYPE_JOB_SUCCEED)) {\n      final String jobName =\n          (String) this.slaOption.getInfo().get(SlaOption.INFO_JOB_NAME);\n\t  // FIXME\u00a0The node path is used to obtain node information instead. The purpose is to solve the problem that subflow and subflow jobs cannot be alerted.\n      final ExecutableNode node = flow.getExecutableNodePath(jobName);\n      if (node.getStartTime() < 0) {\n        return Boolean.FALSE;\n      }\n      if (this.checkTime < node.getStartTime()) {\n        final ReadablePeriod duration =\n            Utils.parsePeriodString((String) this.slaOption.getInfo().get(\n                SlaOption.INFO_DURATION));\n        final DateTime startTime = new DateTime(node.getStartTime());\n        final DateTime nextCheckTime = startTime.plus(duration);\n        this.checkTime = nextCheckTime.getMillis();\n      }\n      status = node.getStatus();\n      return isJobSucceeded(status);\n    }\n    return Boolean.FALSE;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44878, "method_name": "eval", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object eval() {\n    logger.info(\"Checking sla for execution \" + this.execId);\n    final ExecutableFlow flow;\n    try {\n      flow = this.executorLoader.fetchExecutableFlow(this.execId);\n    } catch (final ExecutorManagerException e) {\n      logger.error(\"Can't get executable flow.\", e);\n      e.printStackTrace();\n      // something wrong, send out alerts\n      return Boolean.TRUE;\n    }\n    return isSlaMissed(flow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44879, "method_name": "isSlaFailed", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object isSlaFailed() {\n    final ExecutableFlow flow;\n    try {\n      flow = this.executorLoader.fetchExecutableFlow(this.execId);\n    } catch (final ExecutorManagerException e) {\n      logger.error(\"Can't get executable flow.\", e);\n      // something wrong, send out alerts\n      return Boolean.TRUE;\n    }\n    return isSlaMissed(flow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44880, "method_name": "isSlaPassed", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object isSlaPassed() {\n    final ExecutableFlow flow;\n    try {\n      flow = this.executorLoader.fetchExecutableFlow(this.execId);\n    } catch (final ExecutorManagerException e) {\n      logger.error(\"Can't get executable flow.\", e);\n      // something wrong, send out alerts\n      return Boolean.TRUE;\n    }\n    return isSlaGood(flow);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44881, "method_name": "getNum", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object getNum() {\n    return null;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44882, "method_name": "reset", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void reset() {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44883, "method_name": "getId", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getId() {\n    return this.id;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44884, "method_name": "getType", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "  public String getType() {\n    return type;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44885, "method_name": "fromJson", "class_name": "SlaChecker", "params": ["Object"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "ConditionChecker", "snippet": "  public ConditionChecker fromJson(final Object obj) throws Exception {\n    return createFromJson(obj);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44886, "method_name": "toJson", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Object", "snippet": "  public Object toJson() {\n    final Map<String, Object> jsonObj = new HashMap<>();\n    jsonObj.put(\"type\", type);\n    jsonObj.put(\"id\", this.id);\n    jsonObj.put(\"slaOption\", this.slaOption.toObject());\n    jsonObj.put(\"execId\", String.valueOf(this.execId));\n\n    return jsonObj;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44887, "method_name": "stopChecker", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void stopChecker() {\n\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44888, "method_name": "setContext", "class_name": "SlaChecker", "params": ["Map<String,Object>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "  public void setContext(final Map<String, Object> context) {\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44889, "method_name": "getNextCheckTime", "class_name": "SlaChecker", "params": [], "throws": null, "modifiers": ["public"], "return_type": "long", "snippet": "  public long getNextCheckTime() {\n    return this.checkTime;\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44890, "method_name": "isFlowFinished", "class_name": "SlaChecker", "params": ["Status"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isFlowFinished(final Status status) {\n    if (status.equals(Status.FAILED) || status.equals(Status.KILLED)\n        || status.equals(Status.SUCCEEDED)) {\n      return Boolean.TRUE;\n    } else {\n      return Boolean.FALSE;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44891, "method_name": "isFlowSucceeded", "class_name": "SlaChecker", "params": ["Status"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isFlowSucceeded(final Status status) {\n    return status.equals(Status.SUCCEEDED);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44892, "method_name": "isJobFinished", "class_name": "SlaChecker", "params": ["Status"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isJobFinished(final Status status) {\n  \t// FIXME \u00a0The FAILED_WAITING status is completed. The completion alarm is also triggered when the task status is FAILED_WAITING.\n    if (status.equals(Status.FAILED) || status.equals(Status.KILLED)\n        || Status.isSucceeded(status) || status.equals(Status.FAILED_WAITING)) {\n      return Boolean.TRUE;\n    } else {\n      return Boolean.FALSE;\n    }\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44893, "method_name": "isJobSucceeded", "class_name": "SlaChecker", "params": ["Status"], "throws": null, "modifiers": ["private"], "return_type": "boolean", "snippet": "  private boolean isJobSucceeded(final Status status) {\n    return Status.isSucceeded(status);\n  }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Schedulis/master/azkaban-common/src/main/java/azkaban/trigger/builtin/SlaChecker.java", "stars": "18", "class_props": {"extends": null, "implements": ["ConditionChecker"], "modifiers": ["public"]}}, {"id": 44894, "method_name": "size", "class_name": "ArrayListObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int size() {\n        return value.size();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/ArrayListObject.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 44895, "method_name": "isEmpty", "class_name": "ArrayListObject", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEmpty() {\n        return value.isEmpty();\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/linux/android/dvm/ArrayListObject.java", "stars": "16", "class_props": {"extends": "DvmObject", "implements": null, "modifiers": ["public"]}}, {"id": 44896, "method_name": "getApi", "class_name": "RefoundApi", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getApi() {\n        return \"user/refound\";\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/RefoundApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 44897, "method_name": "setAccount", "class_name": "RefoundApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "RefoundApi", "snippet": "    public RefoundApi setAccount(String account) {\n        this.account = account;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/RefoundApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 44898, "method_name": "setNewPwd", "class_name": "RefoundApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "RefoundApi", "snippet": "    public RefoundApi setNewPwd(String pwd_new) {\n        this.pwd_new = pwd_new;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/RefoundApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 44899, "method_name": "setRepeatNewPwd", "class_name": "RefoundApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "RefoundApi", "snippet": "    public RefoundApi setRepeatNewPwd(String pwd_new_repeat) {\n        this.account = pwd_new_repeat;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/RefoundApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 44900, "method_name": "setCode", "class_name": "RefoundApi", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "RefoundApi", "snippet": "    public RefoundApi setCode(String code) {\n        this.code = code;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/niufuwei/block_chian/master/Stock/app/src/main/java/com/hjq/demo/http/request/RefoundApi.java", "stars": "1", "class_props": {"extends": null, "implements": ["IRequestApi"], "modifiers": ["public"]}}, {"id": 44901, "method_name": "main", "class_name": "SampleAtomikosApplication", "params": ["String"], "throws": ["Exception"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) throws Exception {\n\t\tApplicationContext context = SpringApplication.run(SampleAtomikosApplication.class, args);\n\t\tAccountService service = context.getBean(AccountService.class);\n\t\tAccountRepository repository = context.getBean(AccountRepository.class);\n\t\tservice.createAccountAndNotify(\"josh\");\n\t\tSystem.out.println(\"Count is \" + repository.count());\n\t\ttry {\n\t\t\tservice.createAccountAndNotify(\"error\");\n\t\t}\n\t\tcatch (Exception ex) {\n\t\t\tSystem.out.println(ex.getMessage());\n\t\t}\n\t\tSystem.out.println(\"Count is \" + repository.count());\n\t\tThread.sleep(100);\n\t\t((Closeable) context).close();\n\t}", "url": "https://raw.githubusercontent.com/spring-projects/spring-boot/master/spring-boot-tests/spring-boot-smoke-tests/spring-boot-smoke-test-jta-atomikos/src/main/java/smoketest/atomikos/SampleAtomikosApplication.java", "stars": "47572", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44902, "method_name": "fileMappingsDataSource", "class_name": "FileMappingsJpaConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "DataSource", "snippet": "    public DataSource fileMappingsDataSource() {\n        return DataSourceBuilder.create().build();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44903, "method_name": "hikariConfig", "class_name": "FileMappingsJpaConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "HikariConfig", "snippet": "    public HikariConfig hikariConfig() {\n        return new HikariConfig();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44904, "method_name": "fileMappingsJpaProperties", "class_name": "FileMappingsJpaConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "JpaProperties", "snippet": "    public JpaProperties fileMappingsJpaProperties() {\n        return new JpaProperties();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44905, "method_name": "fileMappingsEntityManagerFactory", "class_name": "FileMappingsJpaConfig", "params": ["EntityManagerFactoryBuilder", "DataSource", "JpaProperties"], "throws": null, "modifiers": ["public"], "return_type": "LocalContainerEntityManagerFactoryBean", "snippet": "    public LocalContainerEntityManagerFactoryBean fileMappingsEntityManagerFactory(\n            EntityManagerFactoryBuilder builder,\n            @Qualifier(FILE_MAPPINGS_AUTO_CONFIG_QUALIFIER) DataSource dataSource,\n            @Qualifier(FILE_MAPPINGS_AUTO_CONFIG_QUALIFIER) JpaProperties jpaProperties) {\n        return builder\n                .dataSource(dataSource)\n                .properties(jpaProperties.getProperties())\n                .packages(\"engineering.everest.starterkit.filestorage\",\n                        \"engineering.everest.starterkit.media.thumbnails\")\n                .persistenceUnit(FILE_MAPPINGS_AUTO_CONFIG_QUALIFIER)\n                .build();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44906, "method_name": "fileMappingsPlatformTransactionManager", "class_name": "FileMappingsJpaConfig", "params": ["EntityManagerFactory"], "throws": null, "modifiers": ["public"], "return_type": "PlatformTransactionManager", "snippet": "    public PlatformTransactionManager fileMappingsPlatformTransactionManager(\n            @Qualifier(FILE_MAPPINGS_AUTO_CONFIG_QUALIFIER) EntityManagerFactory entityManagerFactory) {\n        return new JpaTransactionManager(entityManagerFactory);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44907, "method_name": "fileMappingsSharedEntityManager", "class_name": "FileMappingsJpaConfig", "params": ["EntityManagerFactory"], "throws": null, "modifiers": ["public"], "return_type": "EntityManager", "snippet": "    public EntityManager fileMappingsSharedEntityManager(\n            @Qualifier(FILE_MAPPINGS_AUTO_CONFIG_QUALIFIER) EntityManagerFactory entityManagerFactory) {\n        return SharedEntityManagerCreator.createSharedEntityManager(entityManagerFactory);\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44908, "method_name": "fileMappingsLiquibaseProperties", "class_name": "FileMappingsJpaConfig", "params": [], "throws": null, "modifiers": ["public"], "return_type": "LiquibaseProperties", "snippet": "    public LiquibaseProperties fileMappingsLiquibaseProperties() {\n        return new LiquibaseProperties();\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44909, "method_name": "fileMappingsLiquibase", "class_name": "FileMappingsJpaConfig", "params": ["DataSource", "LiquibaseProperties"], "throws": null, "modifiers": ["public"], "return_type": "SpringLiquibase", "snippet": "    public SpringLiquibase fileMappingsLiquibase(@Qualifier(FILE_MAPPINGS_AUTO_CONFIG_QUALIFIER) DataSource dataSource,\n                                                 @Qualifier(FILE_MAPPINGS_AUTO_CONFIG_QUALIFIER) LiquibaseProperties properties) {\n        SpringLiquibase liquibase = new SpringLiquibase();\n        liquibase.setDataSource(dataSource);\n        liquibase.setChangeLog(properties.getChangeLog());\n        liquibase.setContexts(properties.getContexts());\n        liquibase.setDefaultSchema(properties.getDefaultSchema());\n        liquibase.setDropFirst(properties.isDropFirst());\n        liquibase.setShouldRun(properties.isEnabled());\n        liquibase.setLabels(properties.getLabels());\n        liquibase.setChangeLogParameters(properties.getParameters());\n        liquibase.setRollbackFile(properties.getRollbackFile());\n        return liquibase;\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/launcher/src/main/java/engineering/everest/lhotse/config/FileMappingsJpaConfig.java", "stars": "9", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44910, "method_name": "saveState", "class_name": "Caretaker", "params": ["Originator"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void saveState(Originator originator) {\n        this.savedState = originator.getState();\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Memento%20Pattern/src/Caretaker.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44911, "method_name": "restoreState", "class_name": "Caretaker", "params": ["Originator"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void restoreState(Originator originator) {\n        originator.restoreState(savedState);\n    }", "url": "https://raw.githubusercontent.com/piyush6348/Design-Patterns/master/Memento%20Pattern/src/Caretaker.java", "stars": "38", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44912, "method_name": "main", "class_name": "JMines", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "\tpublic static void main(String[] args) {\n\t\t//create an instance of the game (constructor initializes the game)\n\t\tnew JMines(args.length == 0 || !args[0].equalsIgnoreCase(\"cli\"));\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/JMines.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44913, "method_name": "reveal", "class_name": "JMines", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "GameState", "snippet": "\tprivate GameState reveal(int x, int y) {\n\t\tCell[][] board = state.getBoard();\n\t\t\n\t\t// reveal\n\t\treveal(x, y, board);\n\t\t\n\t\t// check if game is won\n\t\tif (!state.isLost()) {\n\t\t\tboolean won = true;\n\t\t\tfor (int y1 = 0; y1 < board.length; y1++) {\n\t\t\t\tfor (int x1 = 0; x1 < board[y1].length; x1++) {\n\t\t\t\t\tif (!board[x1][y1].isRevealed() && !board[x1][y1].isMine()) {\n\t\t\t\t\t\twon = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} \n\t\t\t\t}\n\t\t\t}\n\t\t\tstate.setWon(won);\n\t\t}\n\t\t\n\t\treturn state;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/JMines.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44914, "method_name": "reveal", "class_name": "JMines", "params": ["int", "int", "Cell"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "\tprivate void reveal(int x, int y, Cell[][] board) {\n\t\tif (!board[x][y].isRevealed()) {\n\t\t\tboard[x][y].setRevealed(true);\n\t\t\tif (board[x][y].isMine()) {\n\t\t\t\tstate.setLost();\n\t\t\t} else if (board[x][y].getNumber() == 0) {\n\t\t\t\t//reveal all neighbors\n\t\t\t\tfor (int y1 = Math.max(y-1, 0); y1 <= Math.min(y+1, board.length-1); y1++) {\n\t\t\t\t\tfor (int x1 = Math.max(x-1, 0); x1 <= Math.min(x+1, board[y].length-1); x1++) {\n\t\t\t\t\t\treveal(x1, y1); //reveal neighbor\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/JMines.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44915, "method_name": "mark", "class_name": "JMines", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "GameState", "snippet": "\tprivate GameState mark(int x, int y) {\n\t\tstate.getBoard()[x][y].setMarked(!state.getBoard()[x][y].isMarked());\n\t\treturn state;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/JMines.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44916, "method_name": "newGame", "class_name": "JMines", "params": ["int", "int"], "throws": null, "modifiers": ["private"], "return_type": "GameState", "snippet": "\tprivate GameState newGame(int dimensions, int difficulty) {\n\t\tstate = new GameState(dimensions, difficulty);\n\t\treturn state;\n\t}", "url": "https://raw.githubusercontent.com/bkis/JMines/master/src/idh/java/jmines/JMines.java", "stars": "1", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44917, "method_name": "getZoom", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "    public int getZoom() {\n        return zoom;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44918, "method_name": "isInvisibleTo", "class_name": "CameraEntity", "params": ["PlayerEntity"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isInvisibleTo(PlayerEntity player) {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44919, "method_name": "collides", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean collides() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44920, "method_name": "isLive", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isLive() {\n        return isLive;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44921, "method_name": "setLive", "class_name": "CameraEntity", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setLive(boolean live) {\n        isLive = live;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44922, "method_name": "isInvisible", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isInvisible() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44923, "method_name": "setZoom", "class_name": "CameraEntity", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setZoom(int zoom) {\n        this.zoom = zoom;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44924, "method_name": "setSneaking", "class_name": "CameraEntity", "params": ["boolean"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setSneaking(boolean sneaking) {\n\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44925, "method_name": "setName", "class_name": "CameraEntity", "params": ["String"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void setName(String text){\n        this.name = new LiteralText(text);\n        DevolaySender devolaySender = new DevolaySender(\"MC - \" + text);\n        FabricNDI.instance.cameraControls.get(getUuid()).updateSender(devolaySender);\n        FabricNDI.instance.cameras.get(getUuid()).updateSender(devolaySender);\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44926, "method_name": "getDisplayName", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "Text", "snippet": "    public Text getDisplayName() {\n        return name;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44927, "method_name": "shouldRender", "class_name": "CameraEntity", "params": ["double"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean shouldRender(double distance) {\n        if(MinecraftClient.getInstance().getCameraEntity() instanceof CameraEntity){\n            return false;\n        }\n        return super.shouldRender(distance);\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44928, "method_name": "isSneaking", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isSneaking() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44929, "method_name": "adjustMovementForSneaking", "class_name": "CameraEntity", "params": ["Vec3d", "MovementType"], "throws": null, "modifiers": ["protected"], "return_type": "Vec3d", "snippet": "    protected Vec3d adjustMovementForSneaking(Vec3d movement, MovementType type) {\n        return movement;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44930, "method_name": "isInSneakingPose", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isInSneakingPose() {\n        return false;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44931, "method_name": "remove", "class_name": "CameraEntity", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void remove() {\n        super.remove();\n        FabricNDI.instance.cameraControls.get(getUuid()).end();\n        FabricNDI.instance.cameras.get(getUuid()).end();\n        FabricNDI.instance.cameras.remove(getUuid());\n        FabricNDI.instance.cameraEntities.remove(this);\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44932, "method_name": "interact", "class_name": "CameraEntity", "params": ["PlayerEntity", "Hand"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean interact(PlayerEntity player, Hand hand) {\n       MinecraftClient.getInstance().openScreen(new NameScreen(this));\n       return true;\n    }", "url": "https://raw.githubusercontent.com/Rushmead/Fabric-NDI/master/src/main/java/dev/imabad/fabricndi/CameraEntity.java", "stars": "5", "class_props": {"extends": "OtherClientPlayerEntity", "implements": null, "modifiers": ["public"]}}, {"id": 44933, "method_name": "updateMessage", "class_name": "MessageTypeNote", "params": ["Connection", "DynActionForm", "Message"], "throws": ["Exception"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void updateMessage(Connection con, DynActionForm form, Message message) throws Exception {\n        message.setSystemId(\"\");\n        message.setFrom(\"\");\n        message.setProcessed(true);\n        message.setToTime(new Date());\n        message.setDirection(Message.DIRECTION_INCOMING);\n\n        Map<Integer, FileInfo> tmpFiles = processMessageAttaches(con, form, message);\n\n        new MessageDAO(con).updateMessage(message);\n\n        SessionTemporaryFiles.deleteFiles(form, tmpFiles.keySet());\n\n        // \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0441\u043e\u0431\u044b\u0442\u0438\u044f\n\n        int processId = message.getProcessId();\n\n        // \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u0434\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u0430\n        if (processId > 0) {\n            Process process = new ProcessDAO(con).getProcess(processId);\n\n            ProcessType type = ProcessTypeCache.getProcessType(process.getTypeId());\n            if (type == null) {\n                log.error(\"Not found process type with id:\" + process.getTypeId());\n            } else {\n                EventProcessor.processEvent(new ProcessMessageAddedEvent(form, message, process),\n                        type.getProperties().getActualScriptName(), new SingleConnectionConnectionSet(con));\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/message/MessageTypeNote.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 44934, "method_name": "messageDelete", "class_name": "MessageTypeNote", "params": ["ConnectionSet", "String"], "throws": ["BGException"], "modifiers": ["public"], "return_type": "void", "snippet": "    public void messageDelete(ConnectionSet conSet, String... messageIds) throws BGException {\n        for (String messageId : messageIds)\n            new MessageDAO(conSet.getConnection()).deleteMessage(Utils.parseInt(messageId));\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/message/MessageTypeNote.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 44935, "method_name": "isAnswerSupport", "class_name": "MessageTypeNote", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isAnswerSupport() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/message/MessageTypeNote.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 44936, "method_name": "isEditable", "class_name": "MessageTypeNote", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isEditable(Message message) {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/message/MessageTypeNote.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 44937, "method_name": "isRemovable", "class_name": "MessageTypeNote", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isRemovable(Message message) {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/message/MessageTypeNote.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 44938, "method_name": "isProcessChangeSupport", "class_name": "MessageTypeNote", "params": [], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isProcessChangeSupport() {\n        return true;\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/message/MessageTypeNote.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 44939, "method_name": "getProcessMessageHeaderColor", "class_name": "MessageTypeNote", "params": ["Message"], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getProcessMessageHeaderColor(Message message) {\n        return \"#e6fb9d\";\n    }", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/dao/message/MessageTypeNote.java", "stars": "12", "class_props": {"extends": "MessageType", "implements": null, "modifiers": ["public"]}}, {"id": 44940, "method_name": "main", "class_name": "Demo01MainThread", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        Person p1 = new Person(\"\u5c0f\u5f3a\");\n        p1.run();\n        System.out.println(0/0);//ArithmeticException: / by zero\n        Person p2 = new Person(\"\u65fa\u8d22\");\n        p2.run();\n    }", "url": "https://raw.githubusercontent.com/liuminchao123/JavaWeb_Learning/master/02.%20java/Java/%E9%BB%91%E9%A9%AC%E6%95%99%E7%A8%8B/16.%E3%80%90%E5%BC%82%E5%B8%B8%E3%80%81%E7%BA%BF%E7%A8%8B%E3%80%91-%E7%AC%94%E8%AE%B0/code/05_ExceptionAndThread/src/com/itheima/demo05/Thread/Demo01MainThread.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44941, "method_name": "startAllTaskGroup", "class_name": "ProcessInnerScheduler", "params": ["List<Configuration>"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void startAllTaskGroup(List<Configuration> configurations) {\n        this.taskGroupContainerExecutorService = Executors\n                .newFixedThreadPool(configurations.size());\n\n        for (Configuration taskGroupConfiguration : configurations) {\n            TaskGroupContainerRunner taskGroupContainerRunner = newTaskGroupContainerRunner(taskGroupConfiguration);\n            //store task group containers\n            taskGroupContainers.add(taskGroupContainerRunner.getTaskGroupContainer());\n            this.taskGroupContainerExecutorService.execute(taskGroupContainerRunner);\n        }\n\n        this.taskGroupContainerExecutorService.shutdown();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/job/scheduler/processinner/ProcessInnerScheduler.java", "stars": "23", "class_props": {"extends": "AbstractScheduler", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44942, "method_name": "dealFailedStat", "class_name": "ProcessInnerScheduler", "params": ["AbstractContainerCommunicator", "Throwable"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dealFailedStat(AbstractContainerCommunicator frameworkCollector, Throwable throwable) {\n        this.taskGroupContainerExecutorService.shutdownNow();\n        throw DataXException.asDataXException(\n                FrameworkErrorCode.PLUGIN_RUNTIME_ERROR, throwable);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/job/scheduler/processinner/ProcessInnerScheduler.java", "stars": "23", "class_props": {"extends": "AbstractScheduler", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44943, "method_name": "dealKillingStat", "class_name": "ProcessInnerScheduler", "params": ["AbstractContainerCommunicator", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "    public void dealKillingStat(AbstractContainerCommunicator frameworkCollector, int totalTasks) {\n        this.taskGroupContainerExecutorService.shutdownNow();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/job/scheduler/processinner/ProcessInnerScheduler.java", "stars": "23", "class_props": {"extends": "AbstractScheduler", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44944, "method_name": "cancelAllTaskGroup", "class_name": "ProcessInnerScheduler", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void cancelAllTaskGroup() {\n        //shutdown each task group container\n        taskGroupContainers.forEach(TaskGroupContainer::shutdown);\n        //then to close the thread pool\n        this.taskGroupContainerExecutorService.shutdownNow();\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/job/scheduler/processinner/ProcessInnerScheduler.java", "stars": "23", "class_props": {"extends": "AbstractScheduler", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44945, "method_name": "adjustTaskGroupSpeed", "class_name": "ProcessInnerScheduler", "params": ["long", "long"], "throws": null, "modifiers": ["protected"], "return_type": "void", "snippet": "    protected void adjustTaskGroupSpeed(long byteSpeed, long recordSpeed) {\n        taskGroupContainers.forEach(taskGroupContainer -> taskGroupContainer.adjustSpeed(byteSpeed, recordSpeed));\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/job/scheduler/processinner/ProcessInnerScheduler.java", "stars": "23", "class_props": {"extends": "AbstractScheduler", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44946, "method_name": "newTaskGroupContainerRunner", "class_name": "ProcessInnerScheduler", "params": ["Configuration"], "throws": null, "modifiers": ["private"], "return_type": "TaskGroupContainerRunner", "snippet": "    private TaskGroupContainerRunner newTaskGroupContainerRunner(\n            Configuration configuration) {\n        TaskGroupContainer taskGroupContainer = new TaskGroupContainer(configuration);\n        return new TaskGroupContainerRunner(taskGroupContainer);\n    }", "url": "https://raw.githubusercontent.com/WeBankFinTech/Exchangis/master/modules/executor/engine/datax/datax-core/src/main/java/com/alibaba/datax/core/job/scheduler/processinner/ProcessInnerScheduler.java", "stars": "23", "class_props": {"extends": "AbstractScheduler", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44947, "method_name": "isValid", "class_name": "LeasingDataValidator", "params": ["CreatorLeasingDTO", "ConstraintValidatorContext"], "throws": null, "modifiers": ["public"], "return_type": "boolean", "snippet": "    public boolean isValid(CreatorLeasingDTO creatorLeasingDTO, ConstraintValidatorContext constraintValidatorContext) {\n        boolean res = true;\n        List<String> violations = new ArrayList<>();\n        LOG.debug(\"Validating CreatorLeasingDTO {}\", creatorLeasingDTO);\n\n        if (creatorLeasingDTO == null) {\n            LOG.debug(\"creatorLeasingDTO is null\");\n            return false;\n        }\n        if (creatorLeasingDTO.getTo() != null && creatorLeasingDTO.getFrom() != null) {\n            checkFromAndToDate(creatorLeasingDTO, violations);\n            checkOverlappings(creatorLeasingDTO, violations);\n        } else {\n            LOG.debug(\"from or to null\");\n            violations.add(\"{from or to null}\");\n        }\n        checkGardenFieldName(creatorLeasingDTO, violations);\n\n        if (!violations.isEmpty()) {\n            res = false;\n            buildConstraintViolationContext(violations, constraintValidatorContext);\n        }\n        return res;\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/validator/LeasingDataValidator.java", "stars": "2", "class_props": {"extends": null, "implements": ["ConstraintValidator"], "modifiers": ["public"]}}, {"id": 44948, "method_name": "checkGardenFieldName", "class_name": "LeasingDataValidator", "params": ["CreatorLeasingDTO", "List<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkGardenFieldName(CreatorLeasingDTO creatorLeasingDTO, List<String> violations) {\n        if (StringUtils.isEmpty(creatorLeasingDTO.getGardenFieldName())) {\n            violations.add(\"{gardenField name is emtpy}\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/validator/LeasingDataValidator.java", "stars": "2", "class_props": {"extends": null, "implements": ["ConstraintValidator"], "modifiers": ["public"]}}, {"id": 44949, "method_name": "checkOverlappings", "class_name": "LeasingDataValidator", "params": ["CreatorLeasingDTO", "List<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkOverlappings(final CreatorLeasingDTO creatorLeasingDTO, final List<String> violations) {\n        if (creatorLeasingDTO.getGardenFieldId() == null) {\n            violations.add(\"{gardenfieldId is null}\");\n            return;\n        }\n        List<Leasing> overlappings = leasingService.getOverLappingLeasingsForGardenfieldAndUserInInterval(\n            creatorLeasingDTO.getGardenFieldId(),\n            creatorLeasingDTO.getFrom(),\n            creatorLeasingDTO.getTo()\n        );\n\n        if (!overlappings.isEmpty()) {\n            LOG.debug(\"overlappings detected: {}\", overlappings);\n            violations.add(\"{leasing overlaps with other leasings}\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/validator/LeasingDataValidator.java", "stars": "2", "class_props": {"extends": null, "implements": ["ConstraintValidator"], "modifiers": ["public"]}}, {"id": 44950, "method_name": "checkFromAndToDate", "class_name": "LeasingDataValidator", "params": ["CreatorLeasingDTO", "List<String>"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void checkFromAndToDate(CreatorLeasingDTO creatorLeasingDTO, List<String> violations) {\n        if (!creatorLeasingDTO.getFrom().isBefore(creatorLeasingDTO.getTo())) {\n            LOG.debug(\"from is before to\");\n            violations.add(\"{from date is before to date}\");\n        }\n        if (!creatorLeasingDTO.getFrom().isAfter(Instant.now().plus(AMOUNT, UNIT))) {\n            LOG.debug(\"from is in less than two weeks from now - not possible\");\n            violations.add(\"{from is in less than two weeks from now - not possible}\");\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/validator/LeasingDataValidator.java", "stars": "2", "class_props": {"extends": null, "implements": ["ConstraintValidator"], "modifiers": ["public"]}}, {"id": 44951, "method_name": "buildConstraintViolationContext", "class_name": "LeasingDataValidator", "params": ["List<String>", "ConstraintValidatorContext"], "throws": null, "modifiers": ["private"], "return_type": "void", "snippet": "    private void buildConstraintViolationContext(List<String> msgs, ConstraintValidatorContext constraintValidatorContext) {\n        if (msgs.isEmpty()) {\n            return;\n        }\n        constraintValidatorContext.disableDefaultConstraintViolation();\n        for (String violation : msgs) {\n            constraintValidatorContext.buildConstraintViolationWithTemplate(violation).addConstraintViolation();\n        }\n    }", "url": "https://raw.githubusercontent.com/gardle/gardle-web/master/src/main/java/com/gardle/validator/LeasingDataValidator.java", "stars": "2", "class_props": {"extends": null, "implements": ["ConstraintValidator"], "modifiers": ["public"]}}, {"id": 44952, "method_name": "main", "class_name": "Rotp", "params": ["String"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) {\n        frame = new JFrame(\"Remnants of the Precursors\");\n        if (args.length == 0) {\n            if (restartWithMoreMemory(frame, false))\n                return;\n            logging = false;\n        }\n        reloadRecentSave = args.length > 0 && args[0].equals(\"reload\");\n        stopIfInsufficientMemory(frame, (int)maxHeapMemory);\n        Thread.setDefaultUncaughtExceptionHandler(new SwingExceptionHandler());\n        frame.addWindowListener(new WindowAdapter() {\n            @Override\n            public void windowClosing(WindowEvent e) {\n                System.exit(0);\n            }\n        });\n        frame.setLayout(new BorderLayout());\n        frame.add(RotPUI.instance(), BorderLayout.CENTER);\n\n\n        setFrameSize();\n\n        if (reloadRecentSave) \n            GameSession.instance().loadRecentSession(false);\n        frame.setResizable(false);\n        frame.setVisible(true);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44953, "method_name": "setFrameSize", "class_name": "Rotp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void setFrameSize() {\n        resizeAmt = -1;\n        FontManager.current().resetFonts();\n        double adj = resizeAmt();\n        int vFrame = 0;\n        int hFrame = 0;\n        int maxX = (int)((hFrame+IMG_W)*adj);\n        int maxY = (int)((vFrame+IMG_H)*adj);\n        System.out.println(\"setting size to: \"+maxX+\" x \"+maxY);\n        frame.getContentPane().setPreferredSize(new Dimension(maxX,maxY));\n        frame.pack();\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44954, "method_name": "resizeAmt", "class_name": "Rotp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "float", "snippet": "    public static float resizeAmt() {\n        float sizeAdj = (float) UserPreferences.screenSizePct() / 100.0f;\n        if (resizeAmt < 0) {\n            Dimension size = Toolkit.getDefaultToolkit().getScreenSize();\n            int sizeW = (int) (sizeAdj*size.width);\n            int sizeH = (int) (sizeAdj*size.height);\n            int maxX = sizeH*8/5;\n            int maxY = sizeW*5/8;\n            if (maxY > sizeH)\n                maxY = maxX*5/8;\n\n            resizeAmt = (float) maxY/768;\n            (new BasePanel()).loadScaledIntegers();\n            System.out.println(\"resize amt:\"+resizeAmt);\n        }\n        return resizeAmt;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44955, "method_name": "jarPath", "class_name": "Rotp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "String", "snippet": "    public static String jarPath()  {\n        if (jarPath == null) {\n            try {\n                String path = Rotp.class.getProtectionDomain().getCodeSource().getLocation().getPath();\n                System.out.println(\"Jar Path: \"+path);\n                path = URLDecoder.decode(path, \"UTF-8\");\n                jarPath = (new File(path)).getParentFile().getPath();\n            } catch (UnsupportedEncodingException ex) {\n                System.out.println(\"Unable to resolve jar path: \"+ex.toString());\n                jarPath = \".\";\n            }\n        }\n        return jarPath;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44956, "method_name": "stopIfInsufficientMemory", "class_name": "Rotp", "params": ["JFrame", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void stopIfInsufficientMemory(JFrame frame, int allocMb) {\n        if (allocMb < 260) {\n            JOptionPane.showMessageDialog(frame, \"Error starting game: Not enough free memory to play\");\n            System.exit(0);\n        }\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44957, "method_name": "memoryLow", "class_name": "Rotp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "boolean", "snippet": "    public static boolean memoryLow() {\n        // returns true if total memory allocated to the JVM is within 100 MB of maximum allowed\n        long max = Runtime.getRuntime().maxMemory() / 1048576;\n        long total = Runtime.getRuntime().totalMemory() / 1048576;\n        long free = Runtime.getRuntime().freeMemory() / 1048576;\n        return (max == total) && (free < 300);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44958, "method_name": "restart", "class_name": "Rotp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void restart() {\n        String execStr = actualAlloc < 0 ? \"java -jar \"+jarFileName : \"java -Xmx\"+actualAlloc+\"m -jar \"+jarFileName+\" arg1\";\n        try {\n            Runtime.getRuntime().exec(execStr);\n            System.exit(0);\n        } catch (IOException ex) {\n            System.err.println(\"Error attempting restart: \");\n            ex.printStackTrace();\n        }            \n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44959, "method_name": "restartFromLowMemory", "class_name": "Rotp", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void restartFromLowMemory() {\n        restartWithMoreMemory(frame, true);\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44960, "method_name": "restartWithMoreMemory", "class_name": "Rotp", "params": ["JFrame", "boolean"], "throws": null, "modifiers": ["static", "private"], "return_type": "boolean", "snippet": "    private static boolean restartWithMoreMemory(JFrame frame, boolean reload) {\n        long memorySize = ((com.sun.management.OperatingSystemMXBean) ManagementFactory\n                        .getOperatingSystemMXBean()).getTotalPhysicalMemorySize();\n        long freeMemory = ((com.sun.management.OperatingSystemMXBean) ManagementFactory\n                        .getOperatingSystemMXBean()).getFreePhysicalMemorySize();\n        int maxMb = (int) (memorySize / MB);\n        long allocMb = Runtime.getRuntime().maxMemory() / MB;\n        int freeMb = (int) (freeMemory / MB);\n        String bits = System.getProperty(\"sun.arch.data.model\");\n\n        System.out.println(\"maxMB:\"+maxMb+\"  freeMB:\"+freeMb+\"  allocMb:\"+allocMb+\"   bits:\"+bits);\n        // if system has given us 2.5G+, then we're good\n        if (!reload && (allocMb > 2560))\n            return false;\n\n        // desiredAlloc is 1G or 1/3rd of max memory, whichever is higher\n        int desiredAlloc = Math.max(1024, (int)maxMb/3);\n        // we'll alloc smallest of the desired Alloc or 75% of free memory (after 500mb overhead)\n        actualAlloc = Math.min(desiredAlloc, (int)((freeMb+allocMb-500)*0.75));\n        // if we're not a 64-bit JVM, limit reqested heap to 1600Mb\n        if (!bits.equals(\"64\"))\n            actualAlloc = Math.min(actualAlloc, 1200);\n        // if that amount is <500M, then show an error\n        System.out.println(\"restarting with MB:\"+actualAlloc);\n        if (!reload && (actualAlloc < allocMb))\n            return false;\n        \n        try {\n            stopIfInsufficientMemory(frame, actualAlloc*9/10);\n            String argString = reload ? \" reload\" : \" arg1\";\n            String execStr  = \"java -Xmx\"+actualAlloc+\"m -jar \"+jarFileName+argString;\n            System.out.println(\"Only \"+(int) allocMb+\"Mb memory allocated by OS. Restarting game with command: \"+execStr);\n            Runtime.getRuntime().exec(execStr);\n            System.exit(0);\n            return true;\n        } catch (IOException ex) {\n            System.err.println(\"Error attempting restart: \");\n            ex.printStackTrace();\n        }\n        return false;\n    }", "url": "https://raw.githubusercontent.com/rayfowler/rotp-public/master/src/rotp/Rotp.java", "stars": "74", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44961, "method_name": "onLayout", "class_name": "PageContainer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onLayout (boolean p0, int p1, int p2, int p3, int p4)\n\t{\n\t\tn_onLayout (p0, p1, p2, p3, p4);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/PageContainer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44962, "method_name": "n_onLayout", "class_name": "PageContainer", "params": ["boolean", "int", "int", "int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onLayout (boolean p0, int p1, int p2, int p3, int p4);\n\n\n\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/PageContainer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44963, "method_name": "onMeasure", "class_name": "PageContainer", "params": ["int", "int"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void onMeasure (int p0, int p1)\n\t{\n\t\tn_onMeasure (p0, p1);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/PageContainer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44964, "method_name": "n_onMeasure", "class_name": "PageContainer", "params": ["int", "int"], "throws": null, "modifiers": ["private", "native"], "return_type": "void", "snippet": "\tprivate native void n_onMeasure (int p0, int p1);\n\n\tprivate java.util.ArrayList refList;\n\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/PageContainer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44965, "method_name": "monodroidAddReference", "class_name": "PageContainer", "params": ["java"], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidAddReference (java.lang.Object obj)\n\t{\n\t\tif (refList == null)\n\t\t\trefList = new java.util.ArrayList ();\n\t\trefList.add (obj);\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/PageContainer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44966, "method_name": "monodroidClearReferences", "class_name": "PageContainer", "params": [], "throws": null, "modifiers": ["public"], "return_type": "void", "snippet": "\tpublic void monodroidClearReferences ()\n\t{\n\t\tif (refList != null)\n\t\t\trefList.clear ();\n\t}", "url": "https://raw.githubusercontent.com/AtomizedSoul/TulpApp/master/TulpApp.Android/obj/Release/90/android/src/crc643f46942d9dd1fff9/PageContainer.java", "stars": "2", "class_props": {"extends": "android", "implements": ["mono"], "modifiers": ["public"]}}, {"id": 44967, "method_name": "main", "class_name": "ExLoja", "params": ["String"], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void main(String[] args) throws IOException, ClassNotFoundException {\n        ler();\n        menu_Principal();\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44968, "method_name": "escrever", "class_name": "ExLoja", "params": [], "throws": ["IOException", "ClassNotFoundException", "FileNotFoundException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void escrever() throws IOException, ClassNotFoundException, FileNotFoundException {\n        FileOutputStream arq = null;\n\n        //Produtos\n        try {\n            arq = new FileOutputStream(\"Produtos.txt\");\n            ObjectOutputStream obj = new ObjectOutputStream(arq);\n            for (Produto p : lista_Produtos) {\n                obj.writeObject(p);\n            }\n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para escrita falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } finally {\n            arq.close();\n        }\n\n        //Clientes\n        try {\n            arq = new FileOutputStream(\"Clientes.txt\");\n            ObjectOutputStream obj = new ObjectOutputStream(arq);\n            for (Cliente c : lista_Clientes) {\n                obj.writeObject(c);\n            }\n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para escrita falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } finally {\n            arq.close();\n        }\n\n        //Encomendas\n        try {\n            arq = new FileOutputStream(\"Encomendas.txt\");\n            ObjectOutputStream obj = new ObjectOutputStream(arq);\n            for (Encomenda e : lista_Encomendas) {\n                obj.writeObject(e);\n            }\n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para escrita falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } finally {\n            arq.close();\n        }\n\n        //Promocoes\n        try {\n            arq = new FileOutputStream(\"Promocoes.txt\");\n            ObjectOutputStream obj = new ObjectOutputStream(arq);\n            for (Promocao pro : lista_Promocoes) {\n                obj.writeObject(pro);\n            }\n\n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para escrita falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } finally {\n            arq.close();\n        }\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44969, "method_name": "ler", "class_name": "ExLoja", "params": [], "throws": ["FileNotFoundException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void ler() throws FileNotFoundException {\n\n        //try and catch\n        //O Programa tenta executar o bloco do codigo try\n        FileInputStream arq = null;\n        //Produtos\n        try {\n            File file = new File(\"Produtos.txt\");\n            if (file.exists()) {\n                arq = new FileInputStream(file);\n                ObjectInputStream obj = new ObjectInputStream(arq);\n                while (arq.available() > 0) {\n                    lista_Produtos.add((Produto) obj.readObject());\n                }\n            } else {\n                file.createNewFile();\n            }\n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para Leitura falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } catch (ClassNotFoundException ex) {\n            Logger.getLogger(ExLoja.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        //Clientes\n        try {\n            File file = new File(\"Clientes.txt\");\n            if (file.exists()) {\n                arq = new FileInputStream(file);\n                ObjectInputStream obj = new ObjectInputStream(arq);\n                while (arq.available() > 0) {\n                    lista_Produtos.add((Produto) obj.readObject());\n                }\n            } else {\n                file.createNewFile();\n            }\n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para Leitura falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } catch (ClassNotFoundException ex) {\n            Logger.getLogger(ExLoja.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        //Encomendas\n        try {\n            File file = new File(\"Encomendas.txt\");\n            if (file.exists()) {\n                arq = new FileInputStream(file);\n                ObjectInputStream obj = new ObjectInputStream(arq);\n                while (arq.available() > 0) {\n                    lista_Produtos.add((Produto) obj.readObject());\n                }\n            } else {\n                file.createNewFile();\n            }\n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para Leitura falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } catch (ClassNotFoundException ex) {\n            Logger.getLogger(ExLoja.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        //Promo\u00e7\u00f5es\n        try {\n            File file = new File(\"Promocoes.txt\");\n            if (file.exists()) {\n                arq = new FileInputStream(file);\n                ObjectInputStream obj = new ObjectInputStream(arq);\n                while (arq.available() > 0) {\n                    lista_Produtos.add((Produto) obj.readObject());\n                }\n            } else {\n                file.createNewFile();\n            }\n            \n        } catch (FileNotFoundException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Tentativa de abrir o arquivo indicado para Leitura falhou!\");\n        } catch (IOException erro) {\n            erro.printStackTrace();\n            System.out.println(\"Algo ocorreu mal!\");\n        } catch (ClassNotFoundException ex) {\n            Logger.getLogger(ExLoja.class.getName()).log(Level.SEVERE, null, ex);\n        }\n        //Se algo de errado acontecer, Imprime a mansagem de erro\n        //Evitando que o pragrama feche caso ocorrer algum erro.\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44970, "method_name": "menu_Principal", "class_name": "ExLoja", "params": [], "throws": ["IOException", "ClassNotFoundException"], "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void menu_Principal() throws IOException, ClassNotFoundException {\n\n        Scanner s = new Scanner(System.in);\n        int op = 0;\n        while (op != 5) {\n            System.out.println(\"============================ Menu Principal =================================\");\n            System.out.println(\"Escolhe uma op\u00e7\u00e3o\");\n            System.out.println(\"1 - Gerir Produtos\");\n            System.out.println(\"2 - Gerir Encomendas\");\n            System.out.println(\"3 - Gerir Clientes\");\n            System.out.println(\"4 - Gerir Promo\u00e7\u00f5es\");\n            System.out.println(\"5 - Sair\");\n            op = s.nextInt();\n\n            switch (op) {\n                case 1: {\n                    gerirProdutos();\n                    break;\n                }\n                case 2: {\n                    gerirEncomendas();\n                    break;\n                }\n                case 3: {\n                    gerirClientes();\n                    break;\n                }\n                case 4: {\n                    gerirPromocoes();\n                    break;\n                }\n                case 5: {\n                    System.out.println(\"A sair .......\");\n                    escrever();\n                    break;\n                }\n                default: {\n                    System.out.println(\"Op\u00e7\u00e3o inv\u00e1lida!\");\n                }\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44971, "method_name": "gerirProdutos", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void gerirProdutos() {\n\n        Scanner s = new Scanner(System.in);\n        int op = 0;\n        while (op != 4) {\n            System.out.println(\"============================ Gest\u00e3o de Produtos =============================\");\n            System.out.println(\"Escolhe uma op\u00e7\u00e3o\");\n            System.out.println(\"1 - Ver Produtos\");\n            System.out.println(\"2 - Adicionar Produto\");\n            System.out.println(\"3 - Remover Produto\");\n            System.out.println(\"4 - Voltar ao Menu Principal\");\n            op = s.nextInt();\n\n            switch (op) {\n                case 1: {\n                    if (!lista_Produtos.isEmpty()) {\n                        System.out.println(\"\\n__________________________________________\");\n                        System.out.println(\"|   C\u00d3DIGO  |    NOME    |   PRE\u00c7O(ECV)  |\");\n                        System.out.println(\"|-----------+------------+---------------|\");\n                        for (Produto p : lista_Produtos) {\n                            p.imprimir();\n                        }\n                        System.out.println(\"|========================================|\\n\");\n                    } else {\n                        System.out.println(\"Lita vazia!\");\n                    }\n                    break;\n                }\n                case 2: {\n                    adicionarProdutoNaLoja();\n                    break;\n                }\n                case 3: {\n                    if (!lista_Produtos.isEmpty()) {\n                        removerProdutoDaLoja();\n                    } else {\n                        System.out.println(\"Lita vazia!\");\n                    }\n                    break;\n                }\n                default: {\n                    System.out.println(\"Op\u00e7\u00e3o inv\u00e1lida!\");\n\n                }\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44972, "method_name": "adicionarProdutoNaLoja", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void adicionarProdutoNaLoja() {\n        Scanner s = new Scanner(System.in);\n        System.out.println(\"Insere o c\u00f3digo do Produto\");\n        int co = s.nextInt();\n        System.out.println(\"Insere a designa\u00e7\u00e3o do Produto\");\n        String de = s.next();\n        System.out.println(\"Insere o pre\u00e7o do Produto\");\n        double pr = s.nextDouble();\n        Produto p = new Produto(co, de, pr);\n        lista_Produtos.add(p);\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44973, "method_name": "removerProdutoDaLoja", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removerProdutoDaLoja() {\n        Scanner s = new Scanner(System.in);\n        System.out.println(\"Insere o c\u00f3digo do Produto para que seja removido\");\n        int cod = s.nextInt();\n\n        for (Produto p : lista_Produtos) {\n            if (p.getCodigo() == cod) {\n                lista_Produtos.remove(p);\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44974, "method_name": "gerirEncomendas", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void gerirEncomendas() {\n\n        Scanner s = new Scanner(System.in);\n        int op = 0;\n        while (op != 5) {\n            System.out.println(\"========================== Gest\u00e3o de Encomendas =============================\");\n            System.out.println(\"Escolhe uma op\u00e7\u00e3o\");\n            System.out.println(\"1 - Ver Encomendas\");\n            System.out.println(\"2 - Adicionar Encomenda\");\n            System.out.println(\"3 - Remover Encomenda\");\n            System.out.println(\"4 - Gerir uma Encomenda\");\n            System.out.println(\"5 - Voltar ao Menu Principal\");\n            op = s.nextInt();\n\n            switch (op) {\n                case 1: {\n                    if (!lista_Encomendas.isEmpty()) {\n                        for (Encomenda e : lista_Encomendas) {\n                            e.verEncomenda();\n                            //ver desconto da encomenda\n                            double total = e.totalEncomenda();\n                            System.out.println(\"O total da encomenda \u00e9 \" + total);\n                            double desconto = descontoEncomenda(e.getProdutos(), lista_Promocoes);\n                            System.out.println(\"O desconto \u00e9 \" + desconto);\n                            double totalComDesc = total - desconto;\n                            System.out.println(\"O total com desconto \u00e9 \" + totalComDesc);\n                            System.out.println(\"=============================================================================\");\n                        }\n                    } else {\n                        System.out.println(\"Lista vazia!!\");\n                    }\n                    break;\n                }\n                case 2: {\n                    adicionarEncomendaNaLoja();\n                    break;\n                }\n                case 3: {\n                    if (!lista_Encomendas.isEmpty()) {\n                        System.out.println(\"Insere o N\u00famero da Encomenda\");\n                        int numero = s.nextInt();\n                        removerEncomendaDaLoja(numero);\n                    } else {\n                        System.out.println(\"Lista vazia!!\");\n                    }\n                    break;\n                }\n                case 4: {\n                    if (!lista_Encomendas.isEmpty()) {\n                        System.out.println(\"Insere o N\u00famero da Encomenda\");\n                        int numero = s.nextInt();\n                        Encomenda e = obtemEncomenda(numero);\n                        gerir_Encomenda(e);\n                    } else {\n                        System.out.println(\"Lista vazia!!\");\n                    }\n                    break;\n                }\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44975, "method_name": "gerir_Encomenda", "class_name": "ExLoja", "params": ["Encomenda"], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void gerir_Encomenda(Encomenda e1) {\n\n        if (e1 != null) {\n            Scanner s = new Scanner(System.in);\n            int op = 0;\n            while (op != 5) {\n                System.out.println(\"Escolhe uma op\u00e7\u00e3o\");\n                System.out.println(\"1 - Ver Encomenda\");\n                System.out.println(\"2 - Adicionar Produto\");\n                System.out.println(\"3 - Remover Produto\");\n                System.out.println(\"4 - Ver Total da Encomenda\");\n                System.out.println(\"5 - Voltar ao Menu Encomendas\");\n                op = s.nextInt();\n\n                switch (op) {\n                    case 1: {\n                        e1.verEncomenda();\n                        //ver desconto da encomenda\n                        double total = e1.totalEncomenda();\n                        System.out.println(\"O total da encomenda \u00e9 \" + total);\n                        double desconto = descontoEncomenda(e1.getProdutos(), lista_Promocoes);\n                        System.out.println(\"O desconto \u00e9 \" + desconto);\n                        double totalComDesc = total - desconto;\n                        System.out.println(\"O total com desconto \u00e9 \" + totalComDesc);\n                        break;\n                    }\n                    case 2: {\n                        System.out.println(\"Insere o c\u00f3digo do produto:\");\n                        int cod = s.nextInt();\n                        adicionarProdutoEncomenda(e1, cod);\n                        break;\n                    }\n                    case 3: {\n                        System.out.println(\"Insere o Codigo do produto a remover\");\n                        int c = s.nextInt();\n                        e1.removerProdutoEncomenda(c);\n                        break;\n                    }\n                    case 4: {\n                        System.out.println(\"O total da encomenda \u00e9 \" + e1.totalEncomenda());\n                        break;\n                    }\n                    case 5: {\n                        System.out.println(\"A sair da Encomenda.......\");\n                        break;\n                    }\n                    default: {\n                        System.out.println(\"Op\u00e7\u00e3o inv\u00e1lida!\");\n                    }\n                }\n            }\n        } else {\n            System.out.println(\"N\u00e3o existe encomenda com este numero\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44976, "method_name": "obtemEncomenda", "class_name": "ExLoja", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "Encomenda", "snippet": "    public static Encomenda obtemEncomenda(int n) {\n        Encomenda e1 = null;\n        for (Encomenda e : lista_Encomendas) {\n            if (e.getNumero() == n) {\n                return e;\n            }\n        }\n        return e1;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44977, "method_name": "adicionarProdutoEncomenda", "class_name": "ExLoja", "params": ["Encomenda", "int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void adicionarProdutoEncomenda(Encomenda e, int cod) {\n\n        Scanner s = new Scanner(System.in);\n\n        Produto pp = null;\n        for (Produto p : lista_Produtos) {\n            if (p.getCodigo() == cod) {\n                pp = p;\n                break;\n            }\n        }\n\n        if (pp != null) {\n            e.adicionarProduto(pp);\n        } else {\n            System.out.println(\"N\u00e3o existe produto com este c\u00f3digo\");\n        }\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44978, "method_name": "adicionarEncomendaNaLoja", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void adicionarEncomendaNaLoja() {\n\n        Scanner s = new Scanner(System.in);\n        System.out.println(\"Insere o Numero da encomenda\");\n        int numero = s.nextInt();\n        System.out.println(\"Insere o codigo do cliente\");\n        int cod_cliente = s.nextInt();\n\n        Encomenda e = new Encomenda(numero, new ArrayList<>(), cod_cliente);\n\n        gerir_Encomenda(e);\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44979, "method_name": "removerEncomendaDaLoja", "class_name": "ExLoja", "params": ["int"], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void removerEncomendaDaLoja(int numero) {\n        for (Encomenda e : lista_Encomendas) {\n            if (e.getNumero() == numero) {\n                lista_Encomendas.remove(e);\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44980, "method_name": "gerirClientes", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void gerirClientes() {\n        Scanner s = new Scanner(System.in);\n        int op = 0;\n        while (op != 4) {\n            System.out.println(\"============================ Gest\u00e3o de Clientes =============================\");\n            System.out.println(\"Escolhe uma op\u00e7\u00e3o\");\n            System.out.println(\"1 - Ver Clientes\");\n            System.out.println(\"2 - Adicionar Cliente\");\n            System.out.println(\"3 - Remover Cliente\");\n            System.out.println(\"4 - Voltar ao Menu Principal\");\n            op = s.nextInt();\n\n            switch (op) {\n                case 1: {\n                    if (!lista_Clientes.isEmpty()) {\n                        System.out.println(\"\\n________________________________________________________________________________________\");\n                        System.out.println(\"|  CODIGO  |    NOME    |  TELEFONE  |               EMAIL              |    MORADA    |\");\n                        System.out.println(\"|----------+------------+------------+----------------------------------+--------------|\");\n                        for (Cliente c : lista_Clientes) {\n                            c.imprimir();\n                        }\n                        System.out.println(\"|======================================================================================|\\n\");\n                    } else {\n                        System.out.println(\"\\nLista vazia!!\");\n                    }\n                    break;\n                }\n                case 2: {\n                    adicionarClienteNaLoja();\n                    break;\n                }\n                case 3: {\n                    if (!lista_Clientes.isEmpty()) {\n                        removerClienteDaLoja();\n                    } else {\n                        System.out.println(\"Lista vazia!!\");\n                    }\n                    break;\n                }\n                default: {\n                    System.out.println(\"Op\u00e7\u00e3o inv\u00e1lida!\");\n\n                }\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44981, "method_name": "adicionarClienteNaLoja", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void adicionarClienteNaLoja() {\n\n        Scanner s = new Scanner(System.in);\n        System.out.println(\"Insere nome do Cliente\");\n        String no = s.next();\n        System.out.println(\"Insere o c\u00f3digo do Cliente\");\n        int co = s.nextInt();\n        System.out.println(\"Insere a morada do Cliente\");\n        String mo = s.next();\n        System.out.println(\"Insere o email do Cliente\");\n        String em = s.next();\n        System.out.println(\"Insere o telefone do Cliente\");\n        String tl = s.next();\n        Cliente c = new Cliente(co, no, em, mo, tl);\n        lista_Clientes.add(c);\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44982, "method_name": "removerClienteDaLoja", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void removerClienteDaLoja() {\n\n        Scanner s = new Scanner(System.in);\n        System.out.println(\"Insere o c\u00f3digo do Cliente para que seja removido\");\n        int cod = s.nextInt();\n\n        for (Cliente c : lista_Clientes) {\n            if (c.getCodigo() == cod) {\n                lista_Clientes.remove(c);\n                break;\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44983, "method_name": "gerirPromocoes", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["static", "private"], "return_type": "void", "snippet": "    private static void gerirPromocoes() {\n\n        Scanner s = new Scanner(System.in);\n        int op = 0;\n        while (op != 4) {\n            System.out.println(\"============================ Gest\u00e3o de Promo\u00e7\u00f5es =============================\");\n            System.out.println(\"Escolhe uma op\u00e7\u00e3o\");\n            System.out.println(\"1 - Ver Promo\u00e7\u00e3o\");\n            System.out.println(\"2 - Adicionar Promo\u00e7\u00e3o\");\n            System.out.println(\"3 - Remover Promo\u00e7\u00e3o\");\n            System.out.println(\"4 - Voltar ao Menu Principal\");\n            op = s.nextInt();\n\n            switch (op) {\n                case 1: {\n                    if (!lista_Promocoes.isEmpty()) {\n                        for (Promocao pm : lista_Promocoes) {\n                            pm.imprimir();\n                        }\n                    } else {\n                        System.out.println(\"Lista vazia!!\");\n                    }\n                    break;\n                }\n                case 2: {\n                    adicionarPromocaoNaLoja();\n                    break;\n                }\n                case 3: {\n                    if (!lista_Promocoes.isEmpty()) {\n                        removerPromocaoDaLoja();\n                    } else {\n                        System.out.println(\"Lista vazia!!\");\n                    }\n                    break;\n                }\n                default: {\n                    System.out.println(\"Op\u00e7\u00e3o inv\u00e1lida!\");\n\n                }\n            }\n        }\n\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44984, "method_name": "adicionarPromocaoNaLoja", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void adicionarPromocaoNaLoja() {\n        Scanner s = new Scanner(System.in);\n        System.out.println(\"Insere o c\u00f3digo do Produto\");\n        int co = s.nextInt();\n        System.out.println(\"Insere o valor de desconto\");\n        double de = s.nextDouble();\n        Promocao pm = new Promocao(co, de);\n        lista_Promocoes.add(pm);\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44985, "method_name": "removerPromocaoDaLoja", "class_name": "ExLoja", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void removerPromocaoDaLoja() {\n\n        Scanner s = new Scanner(System.in);\n        System.out.println(\"Insere o c\u00f3digo do Produto para que seja removido a promo\u00e7\u00e3o\");\n        int cod = s.nextInt();\n\n        for (Promocao pm : lista_Promocoes) {\n            if (pm.getCodigo_produto() == cod) {\n                lista_Promocoes.remove(pm);\n                break;\n            }\n        }\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44986, "method_name": "descontoEncomenda", "class_name": "ExLoja", "params": ["ArrayList<Produto>", "ArrayList<Promocao>"], "throws": null, "modifiers": ["public", "static"], "return_type": "double", "snippet": "    public static double descontoEncomenda(ArrayList<Produto> lpe, ArrayList<Promocao> lpm) {\n        double totalDesc = 0;\n\n        for (Produto p : lpe) {\n            for (Promocao pm : lpm) {\n                if (p.getCodigo() == pm.getCodigo_produto()) {\n                    totalDesc += p.desconto(pm.getDesconto());\n                }\n            }\n        }\n        return totalDesc;\n    }", "url": "https://raw.githubusercontent.com/Denilson-Semedo/ExeLoja/master/src/exloja/ExLoja.java", "stars": "1", "class_props": {"extends": null, "implements": ["Serializable"], "modifiers": ["public"]}}, {"id": 44987, "method_name": "getConnectionMatcher", "class_name": "ConnectingCTMConfig", "params": [], "throws": null, "modifiers": ["public", "abstract"], "return_type": "BiPredicate<BlockState,BlockState>", "snippet": "\tpublic abstract BiPredicate<BlockState, BlockState> getConnectionMatcher();\n}\n\n", "url": "https://raw.githubusercontent.com/Nuclearfarts/connected-block-textures/master/src/main/java/io/github/nuclearfarts/cbt/config/ConnectingCTMConfig.java", "stars": "3", "class_props": {"extends": "BaseCTMConfig", "implements": null, "modifiers": ["public", "abstract"]}}, {"id": 44988, "method_name": "getEmailAddress", "class_name": "UpdateUserDetailsCommand", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "    public String getEmailAddress() {\n        return emailChange;\n    }", "url": "https://raw.githubusercontent.com/everest-engineering/lhotse/master/users-api/src/main/java/engineering/everest/lhotse/users/domain/commands/UpdateUserDetailsCommand.java", "stars": "9", "class_props": {"extends": null, "implements": ["EmailAddressValidatableCommand", "UserUniqueEmailValidatableCommand"], "modifiers": ["public"]}}, {"id": 44989, "method_name": "init", "class_name": "ShaderLib", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void init() {\n        if (Minecraft.getMinecraft().getResourceManager() instanceof SimpleReloadableResourceManager) {\n            ((SimpleReloadableResourceManager) Minecraft.getMinecraft().getResourceManager()).registerReloadListener(\n                    manager -> {\n                        ShaderHelper.deleteShader(MISTUNE_SHADER);\n                        MISTUNE_SHADER = 0;\n                        ShaderHelper.deleteShader(GAUSS_SHADER);\n                        GAUSS_SHADER = 0;\n                        load();\n                    }\n            );\n        }\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/ShaderLib.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44990, "method_name": "load", "class_name": "ShaderLib", "params": [], "throws": null, "modifiers": ["public", "static"], "return_type": "void", "snippet": "    public static void load() {\n\n        MISTUNE_SHADER = ShaderHelper.createProgram(FRAG_MISTUNE, null);\n        GAUSS_SHADER = ShaderHelper.createProgram(FRAG_GAUSS, null);\n    }", "url": "https://raw.githubusercontent.com/Prunoideae/PhasePotion/master/src/main/java/com/naive/phase/Render/ShaderLib.java", "stars": "2", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44991, "method_name": "setLeft", "class_name": "Padding", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Padding", "snippet": "    public Padding setLeft(int left) {\n        this.left = left;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/utils/Padding.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44992, "method_name": "setRight", "class_name": "Padding", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Padding", "snippet": "    public Padding setRight(int right) {\n        this.right = right;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/utils/Padding.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44993, "method_name": "setTop", "class_name": "Padding", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Padding", "snippet": "    public Padding setTop(int top) {\n        this.top = top;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/utils/Padding.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44994, "method_name": "setBottom", "class_name": "Padding", "params": ["int"], "throws": null, "modifiers": ["public"], "return_type": "Padding", "snippet": "    public Padding setBottom(int bottom) {\n        this.bottom = bottom;\n        return this;\n    }", "url": "https://raw.githubusercontent.com/CodinGame/SpringChallenge2020/master/src/main/java/com/codingame/utils/Padding.java", "stars": "15", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}, {"id": 44995, "method_name": "getObjectType", "class_name": "ParametersChangedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "String", "snippet": "\tpublic String getObjectType()\n\t{\n\t\treturn objectType;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/client/ParametersChangedEvent.java", "stars": "12", "class_props": {"extends": "ClientEvent", "implements": null, "modifiers": ["public"]}}, {"id": 44996, "method_name": "getObjectId", "class_name": "ParametersChangedEvent", "params": [], "throws": null, "modifiers": ["public"], "return_type": "int", "snippet": "\tpublic int getObjectId()\n\t{\n\t\treturn objectId;\n\t}", "url": "https://raw.githubusercontent.com/Pingvin235/bgerp/master/src/ru/bgcrm/event/client/ParametersChangedEvent.java", "stars": "12", "class_props": {"extends": "ClientEvent", "implements": null, "modifiers": ["public"]}}, {"id": 44997, "method_name": "getFieldOrder", "class_name": "NotifyServerRegisterCheckReply", "params": [], "throws": null, "modifiers": ["protected"], "return_type": "List<String>", "snippet": "    protected List<String> getFieldOrder() {\n        return Arrays.asList(\"body\", \"ret\", \"code\", \"shmsize\", \"slot\", \"clientId\", \"status\");\n    }", "url": "https://raw.githubusercontent.com/wmm1996528/unidbg_douyin10/master/src/main/java/com/github/unidbg/ios/struct/kernel/NotifyServerRegisterCheckReply.java", "stars": "16", "class_props": {"extends": "UnicornStructure", "implements": null, "modifiers": ["public"]}}, {"id": 44998, "method_name": "lessMoney1", "class_name": "Code03_LessMoneySplitGold", "params": ["int"], "throws": null, "modifiers": ["public", "static"], "return_type": "int", "snippet": "\tpublic static int lessMoney1(int[] arr) {\n\t\tif (arr == null || arr.length == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn process(arr, 0);\n\t}", "url": "https://raw.githubusercontent.com/algorithmzuo/algorithmbasic2020/master/src/class09/Code03_LessMoneySplitGold.java", "stars": "27", "class_props": {"extends": null, "implements": null, "modifiers": ["public"]}}]